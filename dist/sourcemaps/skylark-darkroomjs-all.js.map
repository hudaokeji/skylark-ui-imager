{"version":3,"sources":["skylark-darkroomjs-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","parse","event","segs","Evented","on","events","selector","one","_hub","parsed","trigger","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","'","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","v","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","getAbsoluteUrl","url","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","encodeURIComponent","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","datetimes","topic","_uid","langx","createEvent","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","dom","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","getPropertyValue","removeProperty","cssText","disabled","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","enhancePlaceContent","placing","neddsFlattern","append","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","chkName","contentDocument","childNodes","createFragment","$1","container","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isInDocument","offsetParent","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","class","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","velm","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","pluck","txt","textContent","datax","dataName","aria","removeAttr","removeAttribute","removeData","removeProp","multiple","selectedOptions","option","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","isQ","some","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","wrapper_name_value","wrapper_value","newValue","NodeList","toArray","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","VisualElement","_elm","elmx","batch","action","HTMLElement","_delegator","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","domNode","shortcutName","extfn","shortcutter","args2","collections","Collection","_clear","it","iterator","hasNext","thisArg","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","strKey","oldValue","updated","findByRegExp","removeByRegExp","toPlain","plain","delim","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","isShiftHeld","swt","Widget","_elmx","_parse","_velm","_create","_init","optionsAttr","options1","widgetClass","_refresh","_startup","updates","mapping","attributs","styles","addon","categoryName","addonName","_addons","addons","category","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName","sqrt","atan2","pow","PiBy180","PiBy2","min","supportQuality","degreesToRadians","originXOffset","originYOffset","toFixed","multipleSpacesRegex","setObjectScaleOverridden","fabric","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","getContext","translate","sourceY","drawImage","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","DOMParser","isTouchSupported","isLikelyNode","Buffer","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","initFilterBackend","isWebglSupported","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","__eventListeners","eventListener","fill","observe","stopObserving","fire","listenersForEvent","Observable","_objects","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","nonSplicing","somethingRemoved","_onObjectRemoved","forEachObject","getObjects","o","complexity","memo","CommonMethods","_initGradient","filler","colorStops","Gradient","_initPattern","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","_setObject","_set","exports","PI","cos","angle","angleSlice","sin","removeFromArray","getRandomInt","floor","degrees","radiansToDegrees","radians","rotatePoint","point","subtractEquals","rotateVector","Point","addEquals","vector","rx","ry","transformPoint","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","yPoints","minY","maxY","invertTransform","fractionDigits","Number","parseUnit","fontSize","unit","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","camelize","resolveNamespace","getSvgAttributes","loadImage","crossOrigin","createImage","onLoadCallback","onload","onerror","substring","loadImageInDom","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","fromObject","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","groupSVGElements","centerPoint","Group","sourcePath","populateWithProperties","destination","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","saveObjectTransform","isTransparent","tolerance","temp","_isTransparent","imageData","getImageData","parsePreserveAspectRatioAttribute","meetOrSlice","alignX","alignY","aspectRatioAttrs","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","_join","arcToSegments","toX","toY","large","sweep","rotateX","argsString","sinTh","cosTh","fromX","fromY","py","rx2","ry2","py2","px2","pl","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","drawArc","fy","tx","ty","segsNorm","bezierCurveTo","getBoundsOfArc","bound","byProperty","condition","k","invoke","value1","value2","Element","getWholeChar","code","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","Subclass","callSuper","parentMethod","_this","superClassMethod","initialize","subclasses","unknown","areHostMethods","methodNames","getElement","setElement","getUniqueId","__uniqueID","createListener","wrappedHandler","createWrappedHandler","addListener","removeListener","shouldUseAddListenerRemoveListener","shouldUseAttachEventDetachEvent","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","pointer","touchProp","eventTouchProp","getPointer","srcElement","getScrollLeftTop","parseEl","supportsOpacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","setStyle","elementStyle","normalizedProperty","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","arrayLike","makeElement","htmlFor","docElement","host","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","getById","wrapElement","getElementOffset","docElem","scrollLeftTop","box","offsetAttributes","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","makeXHR","factories","ActiveXObject","req","emptyFn","onComplete","parameters","addParamToUrl","_requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","_cancelAnimFrame","cancelAnimationFrame","requestAnimFrame","timestamp","Date","onChange","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","fill-opacity","fill-rule","font-family","font-size","font-style","letter-spacing","paint-order","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","transformMatrix","parseTransformAttribute","fillIndex","strokeIndex","getSvgRegex","_getMultipleNodes","nodeNames","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","classNames","elementById","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","skewMatrix","matrix","commaWsp","transformList","reTransformList","reTransform","matrices","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","parseSVGDocument","parsingOptions","xlink","substr","el2","currentTrans","oldLength","el3","parseUseDirectives","svgUid","__uid","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","idsToXlinkMap","parseAttributes","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","chunk","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","loadXML","_options","allElements","loadSVGFromString","parseFromString","regexUrl","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","Image","_removeTransformMatrix","instanceFillValue","gradientId","lastIndex","createAccessors","propName","capitalizedPropName","setterName","getterName","stateProperties","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divideEquals","lte","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","pathOffset","minRadius","maxRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","naturalWidth","naturalHeight","createPattern","Shadow","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","renderAndResetBound","renderAndReset","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","_createLowerCanvas","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","canvasEl","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","_renderOverlay","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","_char","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","needsFullRender","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","shouldCache","_cacheCanvas","normalizedPointer","targetRelativeX","cacheTranslationX","zoomX","targetRelativeY","cacheTranslationY","zoomY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","selectable","centerTransform","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ey","lastX","lastY","theta","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","isEditing","subTarget","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","lowerCanvasClass","_copyCanvasStyle","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","removed","opt","oldObject","deselected","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","_setCursorFromEvent","cursorOffset","mr","ml","addEventOptions","passive","checkClick","which","cursorMap","_bindEvents","addOrRemove","functor","eventjsFunctor","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","eventsBound","_simpleEventHandler","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","__onOrientationChange","__onShake","__onLongPress","_fireEnterLeaveEvents","_cacheTransformEventData","_handleEvent","_resetTransformEventData","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","shouldRender","_maybeGroupObjects","__corner","subTargets","absolutePointer","_scaling","actionPerformed","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","saveState","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","originalSkipOffScreen","needsResize","__toDataURL","loadFromDatalessJSON","loadFromJSON","serialized","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","cacheProperties","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","setTransform","_transformDone","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","ownCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","skipCanvas","_removeShadow","decl","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","objectForm","_fromObject","cloneAsImage","dataUrl","origParams","withoutTransform","getBoundingRect","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","extraParam","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","intersection","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgId","getSvgTransform","translatePart","anglePart","scalePart","skewXPart","skewYPart","flipXPart","flipYPart","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","addPaintOrder","saveProps","tmpObj","dashedPropertySet","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","subpathStartX","subpathStartY","controlX","controlY","chunks","addTransform","currentPath","coordsStr","coordsParsed","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","objsToObject","originalDefaults","ownCache","_restoreObjectState","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","removeTexture","_originalElement","_initConfig","resizeFilter","applyResizeFilters","applyFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","clipPath","clipPathId","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","sW","sH","elementToDraw","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","putImageDataTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","originalWidth","originalHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","applyFiltersDebug","glError","getError","NO_ERROR","errorString","glErrorToString","glErrorCode","errorCode","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","gpuInfo","ext","getExtension","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalImageData","originalEl","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","main","mainParameter","_class","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","sX","sY","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","originalFill","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","fontDeclaration","previousFontDeclaration","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","char","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","stylePropertyHasBeenSet","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","lineOffset","realLineHeight","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","graphemeEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","svgStyle","Textbox","minWidth","dynamicMinWidth","__cachedLines","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","nextLineIndex","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","tw","canvas2d","Plugins","computeImageViewPort","getAngle","Toolbar","ButtonGroup","Button","createButtonGroup","buttonGroup","createButton","buttonElement","Imager","_initializeDOM","containerElement","_initializeImage","_initializePlugins","refresh","sourceCanvas","sourceImage","originalImageElement","transformations","minHeight","ratio","selfDestroy","initEvent","_replaceCurrentImage","newImage","canvasRatio","currentRatio","scaleMin","setScaleX","setScaleY","applyTransformation","transformation","_postTransformation","reinitializeImage","_popTransformation","imageElement","mainContainerElement","toolbarElement","canvasContainerElement","canvasElement","sourceCanvasContainerElement","sourceCanvasElement","toolbar","pluginInfo","imager","Transformation","installPlugin","HistoryPlugin","undoTransformations","_initButtons","_onTranformationApplied","undo","lastTransformation","_updateButtons","redo","cancelTransformation","backButton","forwardButton","css3Transform","radian","Cos","Sin","M11","M12","M21","M22","transformData","calcs","degress","hZoom","vZoom","zoomin","zoomout","calcFunc","watch","imgs","totalCount","progressedCount","successedCount","faileredCount","successed","failered","isLoaded","progressed","isCompleted","addBackgroundImage","elm1","childImgs","viewer","loadedCallback","_load","border","images","imagesLoaded","imagesViewer","preload","urls","Crop","snapshot","imageWidth","imageHeight","imgInstance","CropZone","mozDash","_renderBorders","_renderGrid","lineDashOffset","getLeft","getTop","CropPlugin","isKeyCroping","isKeyLeft","isKeyUp","quickCropKey","cropButton","okButton","cancelButton","toggleCrop","cropCurrentZone","releaseFocus","onObjectMoving","onObjectScaling","hasFocus","cropZone","preventScaling","lastScaleX","setLeft","lastScaleY","setTop","getScaleX","getScaleY","onMouseMoveKeyCrop","_renderCropZone","zone","selectZone","forceDimension","requireFocus","isLeft","isDown","isUp","leftX","rightX","topY","bottomY","newWidth","newHeight","Rotation","RotatePlugin","leftButton","rightButton","rotateLeft","rotateRight","SavePlugin","destroyButton"],"mappings":"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","file":"../skylark-darkroomjs-all.js","sourcesContent":["define('skylark-langx/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx/skylark',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  {\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t}\r\n});\ndefine('skylark-langx/objects',[\r\n    \"./_attach\",\r\n\t\"./types\",\r\n    \"./numbers\"\r\n],function(_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\",\r\n  \"./objects\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./objects\"\r\n],function(Deferred,objects){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/datetimes',[],function(){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn {\r\n\t\tparseMilliSeconds\r\n\t};\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(klass,arrays,objects,types){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return Evented;\r\n\r\n});\ndefine('skylark-langx/hoster',[\r\n],function(){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  hoster;\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        .replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/topic',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn {\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t}\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,hoster,klass,numbers,objects,Restful,Stateful,strings,topic,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        topic : topic,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = skylark.attach(\"utils.dom\",{});\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = this.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n        } else {\r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/elmx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./query\"\r\n], function(dom, langx, datax, eventer, finder, fx, geom, noder, styler,$) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return dom.elmx = elmx;\r\n});\ndefine('skylark-utils-dom/plugins',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\",\r\n    \"./query\",\r\n    \"./elmx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n            }\r\n\r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(null,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return plugins;\r\n});\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\ndefine('skylark-ui-swt/swt',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\t\tsbswt = ui.sbswt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(ui, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn ui;\r\n\r\n});\r\n\ndefine('skylark-ui-swt/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/datax\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-data-collection/Map\",\r\n  \"./swt\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,elmx,$,plugins,Map,swt){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new Map()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(categoryName,addonName,setting) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      if (setting === undefined) {\r\n        return category[addonName] || null;      \r\n      } else {\r\n        category[addonName] = setting;\r\n        return this;\r\n      }\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return noder.throb(this._elm,params);\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn swt.Widget = Widget;\r\n});\r\n\ndefine('skylark-graphics-canvas2d/canvas2d',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\treturn skylark.attach(\"graphics.canvas2d\", {});\r\n});\ndefine('skylark-graphics-canvas2d/primitives/fabric',[], function() { \r\n  var fabric = fabric || { version: '2.3.6' };\r\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\r\n    fabric.document = document;\r\n    fabric.window = window;\r\n  }\r\n  else {\r\n    // assume we're running under node.js when document/window are not present\r\n    fabric.document = require('jsdom')\r\n      .jsdom(\r\n        decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\r\n        { features: {\r\n          FetchExternalResources: ['img']\r\n        }\r\n        });\r\n    fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\r\n    fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\r\n    fabric.window = fabric.document.defaultView;\r\n    DOMParser = require('xmldom').DOMParser;\r\n  }\r\n\r\n  /**\r\n   * True when in environment that supports touch events\r\n   * @type boolean\r\n   */\r\n  fabric.isTouchSupported = 'ontouchstart' in fabric.window;\r\n\r\n  /**\r\n   * True when in environment that's probably Node.js\r\n   * @type boolean\r\n   */\r\n  fabric.isLikelyNode = typeof Buffer !== 'undefined' &&\r\n                        typeof window === 'undefined';\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * Attributes parsed from all SVG elements\r\n   * @type array\r\n   */\r\n  fabric.SHARED_ATTRIBUTES = [\r\n    \"display\",\r\n    \"transform\",\r\n    \"fill\", \"fill-opacity\", \"fill-rule\",\r\n    \"opacity\",\r\n    \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\r\n    \"stroke-linejoin\", \"stroke-miterlimit\",\r\n    \"stroke-opacity\", \"stroke-width\",\r\n    \"id\", \"paint-order\",\r\n    \"instantiated_by_use\"\r\n  ];\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\r\n   */\r\n  fabric.DPI = 96;\r\n  fabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\r\n  fabric.fontPaths = { };\r\n  fabric.iMatrix = [1, 0, 0, 1, 0, 0];\r\n  fabric.canvasModule = 'canvas';\r\n\r\n  /**\r\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.perfLimitSizeTotal = 2097152;\r\n\r\n  /**\r\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.maxCacheSideLimit = 4096;\r\n\r\n  /**\r\n   * Lowest pixel limit for cache canvases, set at 256PX\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.minCacheSideLimit = 256;\r\n\r\n  /**\r\n   * Cache Object for widths of chars in text rendering.\r\n   */\r\n  fabric.charWidthsCache = { };\r\n\r\n  /**\r\n   * if webgl is enabled and available, textureSize will determine the size\r\n   * of the canvas backend\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.textureSize = 2048;\r\n\r\n  /**\r\n   * Enable webgl for filtering picture is available\r\n   * A filtering backend will be initialized, this will both take memory and\r\n   * time since a default 2048x2048 canvas will be created for the gl context\r\n   * @since 2.0.0\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  fabric.enableGLFiltering = true;\r\n\r\n  /**\r\n   * Device Pixel Ratio\r\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\r\n   */\r\n  fabric.devicePixelRatio = fabric.window.devicePixelRatio ||\r\n                            fabric.window.webkitDevicePixelRatio ||\r\n                            fabric.window.mozDevicePixelRatio ||\r\n                            1;\r\n  /**\r\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\r\n   * which is unitless and not rendered equally across browsers.\r\n   *\r\n   * Values that work quite well (as of October 2017) are:\r\n   * - Chrome: 1.5\r\n   * - Edge: 1.75\r\n   * - Firefox: 0.9\r\n   * - Safari: 0.95\r\n   *\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default 1\r\n   */\r\n  fabric.browserShadowBlurConstant = 1;\r\n\r\n  /**\r\n   * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\r\n   * It was an internal variable, is accessible since version 2.3.4\r\n   */\r\n  fabric.arcToSegmentsCache = { };\r\n\r\n  /**\r\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\r\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\r\n   * you do not get any speed benefit and you get a big object in memory.\r\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\r\n   * can eventually clear it.\r\n   * It was an internal variable, is accessible since version 2.3.4\r\n   */\r\n  fabric.boundsOfCurveCache = { };\r\n\r\n  /**\r\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\r\n   * @default true\r\n   */\r\n  fabric.cachesBoundsOfCurve = true;\r\n\r\n  fabric.initFilterBackend = function() {\r\n    if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\r\n      console.log('max texture size: ' + fabric.maxTextureSize);\r\n      return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\r\n    }\r\n    else if (fabric.Canvas2dFilterBackend) {\r\n      return (new fabric.Canvas2dFilterBackend());\r\n    }\r\n  };\r\n\r\n\r\n  //if (typeof document !== 'undefined' && typeof window !== 'undefined') {\r\n  //  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\r\n  //  window.fabric = fabric;\r\n  //}\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} eventName\r\n     * @param {Function} handler\r\n     */\r\n    function _removeEventListener(eventName, handler) {\r\n      if (!this.__eventListeners[eventName]) {\r\n        return;\r\n      }\r\n      var eventListener = this.__eventListeners[eventName];\r\n      if (handler) {\r\n        eventListener[eventListener.indexOf(handler)] = false;\r\n      }\r\n      else {\r\n        fabric.util.array.fill(eventListener, false);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Observes specified event\r\n     * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\r\n     * @memberOf fabric.Observable\r\n     * @alias on\r\n     * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n     * @param {Function} handler Function that receives a notification when an event of the specified type occurs\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    function observe(eventName, handler) {\r\n      if (!this.__eventListeners) {\r\n        this.__eventListeners = { };\r\n      }\r\n      // one object with key/value pairs was passed\r\n      if (arguments.length === 1) {\r\n        for (var prop in eventName) {\r\n          this.on(prop, eventName[prop]);\r\n        }\r\n      }\r\n      else {\r\n        if (!this.__eventListeners[eventName]) {\r\n          this.__eventListeners[eventName] = [];\r\n        }\r\n        this.__eventListeners[eventName].push(handler);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Stops event observing for a particular event handler. Calling this method\r\n     * without arguments removes all handlers for all events\r\n     * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\r\n     * @memberOf fabric.Observable\r\n     * @alias off\r\n     * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n     * @param {Function} handler Function to be deleted from EventListeners\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    function stopObserving(eventName, handler) {\r\n      if (!this.__eventListeners) {\r\n        return;\r\n      }\r\n\r\n      // remove all key/value pairs (event name -> event handler)\r\n      if (arguments.length === 0) {\r\n        for (eventName in this.__eventListeners) {\r\n          _removeEventListener.call(this, eventName);\r\n        }\r\n      }\r\n      // one object with key/value pairs was passed\r\n      else if (arguments.length === 1 && typeof arguments[0] === 'object') {\r\n        for (var prop in eventName) {\r\n          _removeEventListener.call(this, prop, eventName[prop]);\r\n        }\r\n      }\r\n      else {\r\n        _removeEventListener.call(this, eventName, handler);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Fires event with an optional options object\r\n     * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\r\n     * @memberOf fabric.Observable\r\n     * @alias trigger\r\n     * @param {String} eventName Event name to fire\r\n     * @param {Object} [options] Options object\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    function fire(eventName, options) {\r\n      if (!this.__eventListeners) {\r\n        return;\r\n      }\r\n\r\n      var listenersForEvent = this.__eventListeners[eventName];\r\n      if (!listenersForEvent) {\r\n        return;\r\n      }\r\n\r\n      for (var i = 0, len = listenersForEvent.length; i < len; i++) {\r\n        listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\r\n      }\r\n      this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\r\n        return value !== false;\r\n      });\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @namespace fabric.Observable\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\r\n     * @see {@link http://fabricjs.com/events|Events demo}\r\n     */\r\n    fabric.Observable = {\r\n      observe: observe,\r\n      stopObserving: stopObserving,\r\n      fire: fire,\r\n\r\n      on: observe,\r\n      off: stopObserving,\r\n      trigger: fire\r\n    };\r\n  })();\r\n\r\n\r\n  /**\r\n   * @namespace fabric.Collection\r\n   */\r\n  fabric.Collection = {\r\n\r\n    _objects: [],\r\n\r\n    /**\r\n     * Adds objects to collection, Canvas or Group, then renders canvas\r\n     * (if `renderOnAddRemove` is not `false`).\r\n     * in case of Group no changes to bounding box are made.\r\n     * Objects should be instances of (or inherit from) fabric.Object\r\n     * Use of this function is highly discouraged for groups.\r\n     * you can add a bunch of objects with the add method but then you NEED\r\n     * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\r\n     * @param {...fabric.Object} object Zero or more fabric instances\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    add: function () {\r\n      this._objects.push.apply(this._objects, arguments);\r\n      if (this._onObjectAdded) {\r\n        for (var i = 0, length = arguments.length; i < length; i++) {\r\n          this._onObjectAdded(arguments[i]);\r\n        }\r\n      }\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\r\n     * An object should be an instance of (or inherit from) fabric.Object\r\n     * Use of this function is highly discouraged for groups.\r\n     * you can add a bunch of objects with the insertAt method but then you NEED\r\n     * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\r\n     * @param {Object} object Object to insert\r\n     * @param {Number} index Index to insert object at\r\n     * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    insertAt: function (object, index, nonSplicing) {\r\n      var objects = this._objects;\r\n      if (nonSplicing) {\r\n        objects[index] = object;\r\n      }\r\n      else {\r\n        objects.splice(index, 0, object);\r\n      }\r\n      this._onObjectAdded && this._onObjectAdded(object);\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\r\n     * @param {...fabric.Object} object Zero or more fabric instances\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    remove: function() {\r\n      var objects = this._objects,\r\n          index, somethingRemoved = false;\r\n\r\n      for (var i = 0, length = arguments.length; i < length; i++) {\r\n        index = objects.indexOf(arguments[i]);\r\n\r\n        // only call onObjectRemoved if an object was actually removed\r\n        if (index !== -1) {\r\n          somethingRemoved = true;\r\n          objects.splice(index, 1);\r\n          this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\r\n        }\r\n      }\r\n\r\n      this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Executes given function for each object in this group\r\n     * @param {Function} callback\r\n     *                   Callback invoked with current object as first argument,\r\n     *                   index - as second and an array of all objects - as third.\r\n     *                   Callback is invoked in a context of Global Object (e.g. `window`)\r\n     *                   when no `context` argument is given\r\n     *\r\n     * @param {Object} context Context (aka thisObject)\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    forEachObject: function(callback, context) {\r\n      var objects = this.getObjects();\r\n      for (var i = 0, len = objects.length; i < len; i++) {\r\n        callback.call(context, objects[i], i, objects);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns an array of children objects of this instance\r\n     * Type parameter introduced in 1.3.10\r\n     * since 2.3.5 this method return always a COPY of the array;\r\n     * @param {String} [type] When specified, only objects of this type are returned\r\n     * @return {Array}\r\n     */\r\n    getObjects: function(type) {\r\n      if (typeof type === 'undefined') {\r\n        return this._objects.concat();\r\n      }\r\n      return this._objects.filter(function(o) {\r\n        return o.type === type;\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Returns object at specified index\r\n     * @param {Number} index\r\n     * @return {Self} thisArg\r\n     */\r\n    item: function (index) {\r\n      return this._objects[index];\r\n    },\r\n\r\n    /**\r\n     * Returns true if collection contains no objects\r\n     * @return {Boolean} true if collection is empty\r\n     */\r\n    isEmpty: function () {\r\n      return this._objects.length === 0;\r\n    },\r\n\r\n    /**\r\n     * Returns a size of a collection (i.e: length of an array containing its objects)\r\n     * @return {Number} Collection size\r\n     */\r\n    size: function() {\r\n      return this._objects.length;\r\n    },\r\n\r\n    /**\r\n     * Returns true if collection contains an object\r\n     * @param {Object} object Object to check against\r\n     * @return {Boolean} `true` if collection contains an object\r\n     */\r\n    contains: function(object) {\r\n      return this._objects.indexOf(object) > -1;\r\n    },\r\n\r\n    /**\r\n     * Returns number representation of a collection complexity\r\n     * @return {Number} complexity\r\n     */\r\n    complexity: function () {\r\n      return this._objects.reduce(function (memo, current) {\r\n        memo += current.complexity ? current.complexity() : 0;\r\n        return memo;\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @namespace fabric.CommonMethods\r\n   */\r\n  fabric.CommonMethods = {\r\n\r\n    /**\r\n     * Sets object's properties from options\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _setOptions: function(options) {\r\n      for (var prop in options) {\r\n        this.set(prop, options[prop]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [filler] Options object\r\n     * @param {String} [property] property to set the Gradient to\r\n     */\r\n    _initGradient: function(filler, property) {\r\n      if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\r\n        this.set(property, new fabric.Gradient(filler));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [filler] Options object\r\n     * @param {String} [property] property to set the Pattern to\r\n     * @param {Function} [callback] callback to invoke after pattern load\r\n     */\r\n    _initPattern: function(filler, property, callback) {\r\n      if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\r\n        this.set(property, new fabric.Pattern(filler, callback));\r\n      }\r\n      else {\r\n        callback && callback();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _initClipping: function(options) {\r\n      if (!options.clipTo || typeof options.clipTo !== 'string') {\r\n        return;\r\n      }\r\n\r\n      var functionBody = fabric.util.getFunctionBody(options.clipTo);\r\n      if (typeof functionBody !== 'undefined') {\r\n        this.clipTo = new Function('ctx', functionBody);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setObject: function(obj) {\r\n      for (var prop in obj) {\r\n        this._set(prop, obj[prop]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\r\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\r\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    set: function(key, value) {\r\n      if (typeof key === 'object') {\r\n        this._setObject(key);\r\n      }\r\n      else {\r\n        if (typeof value === 'function' && key !== 'clipTo') {\r\n          this._set(key, value(this.get(key)));\r\n        }\r\n        else {\r\n          this._set(key, value);\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n\r\n    _set: function(key, value) {\r\n      this[key] = value;\r\n    },\r\n\r\n    /**\r\n     * Toggles specified property from `true` to `false` or from `false` to `true`\r\n     * @param {String} property Property to toggle\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    toggle: function(property) {\r\n      var value = this.get(property);\r\n      if (typeof value === 'boolean') {\r\n        this.set(property, !value);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Basic getter\r\n     * @param {String} property Property name\r\n     * @return {*} value of a property\r\n     */\r\n    get: function(property) {\r\n      return this[property];\r\n    }\r\n  };\r\n\r\n\r\n  (function(global) {\r\n\r\n    var sqrt = Math.sqrt,\r\n        atan2 = Math.atan2,\r\n        pow = Math.pow,\r\n        abs = Math.abs,\r\n        PiBy180 = Math.PI / 180,\r\n        PiBy2 = Math.PI / 2;\r\n\r\n    /**\r\n     * @namespace fabric.util\r\n     */\r\n    fabric.util = {\r\n\r\n      /**\r\n       * Calculate the cos of an angle, avoiding returning floats for known results\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} angle the angle in radians or in degree\r\n       * @return {Number}\r\n       */\r\n      cos: function(angle) {\r\n        if (angle === 0) { return 1; }\r\n        if (angle < 0) {\r\n          // cos(a) = cos(-a)\r\n          angle = -angle;\r\n        }\r\n        var angleSlice = angle / PiBy2;\r\n        switch (angleSlice) {\r\n          case 1: case 3: return 0;\r\n          case 2: return -1;\r\n        }\r\n        return Math.cos(angle);\r\n      },\r\n\r\n      /**\r\n       * Calculate the sin of an angle, avoiding returning floats for known results\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} angle the angle in radians or in degree\r\n       * @return {Number}\r\n       */\r\n      sin: function(angle) {\r\n        if (angle === 0) { return 0; }\r\n        var angleSlice = angle / PiBy2, sign = 1;\r\n        if (angle < 0) {\r\n          // sin(-a) = -sin(a)\r\n          sign = -1;\r\n        }\r\n        switch (angleSlice) {\r\n          case 1: return sign;\r\n          case 2: return 0;\r\n          case 3: return -sign;\r\n        }\r\n        return Math.sin(angle);\r\n      },\r\n\r\n      /**\r\n       * Removes value from an array.\r\n       * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} array\r\n       * @param {*} value\r\n       * @return {Array} original array\r\n       */\r\n      removeFromArray: function(array, value) {\r\n        var idx = array.indexOf(value);\r\n        if (idx !== -1) {\r\n          array.splice(idx, 1);\r\n        }\r\n        return array;\r\n      },\r\n\r\n      /**\r\n       * Returns random number between 2 specified ones.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} min lower limit\r\n       * @param {Number} max upper limit\r\n       * @return {Number} random value (between min and max)\r\n       */\r\n      getRandomInt: function(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n      },\r\n\r\n      /**\r\n       * Transforms degrees to radians.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} degrees value in degrees\r\n       * @return {Number} value in radians\r\n       */\r\n      degreesToRadians: function(degrees) {\r\n        return degrees * PiBy180;\r\n      },\r\n\r\n      /**\r\n       * Transforms radians to degrees.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} radians value in radians\r\n       * @return {Number} value in degrees\r\n       */\r\n      radiansToDegrees: function(radians) {\r\n        return radians / PiBy180;\r\n      },\r\n\r\n      /**\r\n       * Rotates `point` around `origin` with `radians`\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {fabric.Point} point The point to rotate\r\n       * @param {fabric.Point} origin The origin of the rotation\r\n       * @param {Number} radians The radians of the angle for the rotation\r\n       * @return {fabric.Point} The new rotated point\r\n       */\r\n      rotatePoint: function(point, origin, radians) {\r\n        point.subtractEquals(origin);\r\n        var v = fabric.util.rotateVector(point, radians);\r\n        return new fabric.Point(v.x, v.y).addEquals(origin);\r\n      },\r\n\r\n      /**\r\n       * Rotates `vector` with `radians`\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Object} vector The vector to rotate (x and y)\r\n       * @param {Number} radians The radians of the angle for the rotation\r\n       * @return {Object} The new rotated point\r\n       */\r\n      rotateVector: function(vector, radians) {\r\n        var sin = fabric.util.sin(radians),\r\n            cos = fabric.util.cos(radians),\r\n            rx = vector.x * cos - vector.y * sin,\r\n            ry = vector.x * sin + vector.y * cos;\r\n        return {\r\n          x: rx,\r\n          y: ry\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Apply transform t to point p\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {fabric.Point} p The point to transform\r\n       * @param  {Array} t The transform\r\n       * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\r\n       * @return {fabric.Point} The transformed point\r\n       */\r\n      transformPoint: function(p, t, ignoreOffset) {\r\n        if (ignoreOffset) {\r\n          return new fabric.Point(\r\n            t[0] * p.x + t[2] * p.y,\r\n            t[1] * p.x + t[3] * p.y\r\n          );\r\n        }\r\n        return new fabric.Point(\r\n          t[0] * p.x + t[2] * p.y + t[4],\r\n          t[1] * p.x + t[3] * p.y + t[5]\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of points's bounding rectangle (left, top, width, height)\r\n       * @param {Array} points 4 points array\r\n       * @return {Object} Object with left, top, width, height properties\r\n       */\r\n      makeBoundingBoxFromPoints: function(points) {\r\n        var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\r\n            minX = fabric.util.array.min(xPoints),\r\n            maxX = fabric.util.array.max(xPoints),\r\n            width = maxX - minX,\r\n            yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\r\n            minY = fabric.util.array.min(yPoints),\r\n            maxY = fabric.util.array.max(yPoints),\r\n            height = maxY - minY;\r\n\r\n        return {\r\n          left: minX,\r\n          top: minY,\r\n          width: width,\r\n          height: height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Invert transformation t\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} t The transform\r\n       * @return {Array} The inverted transform\r\n       */\r\n      invertTransform: function(t) {\r\n        var a = 1 / (t[0] * t[3] - t[1] * t[2]),\r\n            r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\r\n            o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\r\n        r[4] = -o.x;\r\n        r[5] = -o.y;\r\n        return r;\r\n      },\r\n\r\n      /**\r\n       * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number|String} number number to operate on\r\n       * @param {Number} fractionDigits number of fraction digits to \"leave\"\r\n       * @return {Number}\r\n       */\r\n      toFixed: function(number, fractionDigits) {\r\n        return parseFloat(Number(number).toFixed(fractionDigits));\r\n      },\r\n\r\n      /**\r\n       * Converts from attribute value to pixel value if applicable.\r\n       * Returns converted pixels or original value not converted.\r\n       * @param {Number|String} value number to operate on\r\n       * @param {Number} fontSize\r\n       * @return {Number|String}\r\n       */\r\n      parseUnit: function(value, fontSize) {\r\n        var unit = /\\D{0,2}$/.exec(value),\r\n            number = parseFloat(value);\r\n        if (!fontSize) {\r\n          fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n        }\r\n        switch (unit[0]) {\r\n          case 'mm':\r\n            return number * fabric.DPI / 25.4;\r\n\r\n          case 'cm':\r\n            return number * fabric.DPI / 2.54;\r\n\r\n          case 'in':\r\n            return number * fabric.DPI;\r\n\r\n          case 'pt':\r\n            return number * fabric.DPI / 72; // or * 4 / 3\r\n\r\n          case 'pc':\r\n            return number * fabric.DPI / 72 * 12; // or * 16\r\n\r\n          case 'em':\r\n            return number * fontSize;\r\n\r\n          default:\r\n            return number;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Function which always returns `false`.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {Boolean}\r\n       */\r\n      falseFunction: function() {\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Returns klass \"Class\" object of given namespace\r\n       * @memberOf fabric.util\r\n       * @param {String} type Type of object (eg. 'circle')\r\n       * @param {String} namespace Namespace to get klass \"Class\" object from\r\n       * @return {Object} klass \"Class\"\r\n       */\r\n      getKlass: function(type, namespace) {\r\n        // capitalize first letter only\r\n        type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\r\n        return fabric.util.resolveNamespace(namespace)[type];\r\n      },\r\n\r\n      /**\r\n       * Returns array of attributes for given svg that fabric parses\r\n       * @memberOf fabric.util\r\n       * @param {String} type Type of svg element (eg. 'circle')\r\n       * @return {Array} string names of supported attributes\r\n       */\r\n      getSvgAttributes: function(type) {\r\n        var attributes = [\r\n          'instantiated_by_use',\r\n          'style',\r\n          'id',\r\n          'class'\r\n        ];\r\n        switch (type) {\r\n          case 'linearGradient':\r\n            attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\r\n            break;\r\n          case 'radialGradient':\r\n            attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\r\n            break;\r\n          case 'stop':\r\n            attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\r\n            break;\r\n        }\r\n        return attributes;\r\n      },\r\n\r\n      /**\r\n       * Returns object of given namespace\r\n       * @memberOf fabric.util\r\n       * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\r\n       * @return {Object} Object for given namespace (default fabric)\r\n       */\r\n      resolveNamespace: function(namespace) {\r\n        if (!namespace) {\r\n          return fabric;\r\n        }\r\n\r\n        var parts = namespace.split('.'),\r\n            len = parts.length, i,\r\n            obj = global || fabric.window;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n          obj = obj[parts[i]];\r\n        }\r\n\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Loads image element from given url and passes it to a callback\r\n       * @memberOf fabric.util\r\n       * @param {String} url URL representing an image\r\n       * @param {Function} callback Callback; invoked with loaded image\r\n       * @param {*} [context] Context to invoke callback in\r\n       * @param {Object} [crossOrigin] crossOrigin value to set image element to\r\n       */\r\n      loadImage: function(url, callback, context, crossOrigin) {\r\n        if (!url) {\r\n          callback && callback.call(context, url);\r\n          return;\r\n        }\r\n\r\n        var img = fabric.util.createImage();\r\n\r\n        /** @ignore */\r\n        var onLoadCallback = function () {\r\n          callback && callback.call(context, img);\r\n          img = img.onload = img.onerror = null;\r\n        };\r\n\r\n        img.onload = onLoadCallback;\r\n        /** @ignore */\r\n        img.onerror = function() {\r\n          fabric.log('Error loading ' + img.src);\r\n          callback && callback.call(context, null, true);\r\n          img = img.onload = img.onerror = null;\r\n        };\r\n\r\n        // data-urls appear to be buggy with crossOrigin\r\n        // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\r\n        // see https://code.google.com/p/chromium/issues/detail?id=315152\r\n        //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\r\n        if (url.indexOf('data') !== 0 && crossOrigin) {\r\n          img.crossOrigin = crossOrigin;\r\n        }\r\n\r\n        // IE10 / IE11-Fix: SVG contents from data: URI\r\n        // will only be available if the IMG is present\r\n        // in the DOM (and visible)\r\n        if (url.substring(0,14) === 'data:image/svg') {\r\n          img.onload = null;\r\n          fabric.util.loadImageInDom(img, onLoadCallback);\r\n        }\r\n\r\n        img.src = url;\r\n      },\r\n\r\n      /**\r\n       * Attaches SVG image with data: URL to the dom\r\n       * @memberOf fabric.util\r\n       * @param {Object} img Image object with data:image/svg src\r\n       * @param {Function} callback Callback; invoked with loaded image\r\n       * @return {Object} DOM element (div containing the SVG image)\r\n       */\r\n      loadImageInDom: function(img, onLoadCallback) {\r\n        var div = fabric.document.createElement('div');\r\n        div.style.width = div.style.height = '1px';\r\n        div.style.left = div.style.top = '-100%';\r\n        div.style.position = 'absolute';\r\n        div.appendChild(img);\r\n        fabric.document.querySelector('body').appendChild(div);\r\n        /**\r\n         * Wrap in function to:\r\n         *   1. Call existing callback\r\n         *   2. Cleanup DOM\r\n         */\r\n        img.onload = function () {\r\n          onLoadCallback();\r\n          div.parentNode.removeChild(div);\r\n          div = null;\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Creates corresponding fabric instances from their object representations\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} objects Objects to enliven\r\n       * @param {Function} callback Callback to invoke when all objects are created\r\n       * @param {String} namespace Namespace to get klass \"Class\" object from\r\n       * @param {Function} reviver Method for further parsing of object elements,\r\n       * called after each fabric object created.\r\n       */\r\n      enlivenObjects: function(objects, callback, namespace, reviver) {\r\n        objects = objects || [];\r\n\r\n        function onLoaded() {\r\n          if (++numLoadedObjects === numTotalObjects) {\r\n            callback && callback(enlivenedObjects);\r\n          }\r\n        }\r\n\r\n        var enlivenedObjects = [],\r\n            numLoadedObjects = 0,\r\n            numTotalObjects = objects.length;\r\n\r\n        if (!numTotalObjects) {\r\n          callback && callback(enlivenedObjects);\r\n          return;\r\n        }\r\n\r\n        objects.forEach(function (o, index) {\r\n          // if sparse array\r\n          if (!o || !o.type) {\r\n            onLoaded();\r\n            return;\r\n          }\r\n          var klass = fabric.util.getKlass(o.type, namespace);\r\n          klass.fromObject(o, function (obj, error) {\r\n            error || (enlivenedObjects[index] = obj);\r\n            reviver && reviver(o, obj, error);\r\n            onLoaded();\r\n          });\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Create and wait for loading of patterns\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} patterns Objects to enliven\r\n       * @param {Function} callback Callback to invoke when all objects are created\r\n       * called after each fabric object created.\r\n       */\r\n      enlivenPatterns: function(patterns, callback) {\r\n        patterns = patterns || [];\r\n\r\n        function onLoaded() {\r\n          if (++numLoadedPatterns === numPatterns) {\r\n            callback && callback(enlivenedPatterns);\r\n          }\r\n        }\r\n\r\n        var enlivenedPatterns = [],\r\n            numLoadedPatterns = 0,\r\n            numPatterns = patterns.length;\r\n\r\n        if (!numPatterns) {\r\n          callback && callback(enlivenedPatterns);\r\n          return;\r\n        }\r\n\r\n        patterns.forEach(function (p, index) {\r\n          if (p && p.source) {\r\n            new fabric.Pattern(p, function(pattern) {\r\n              enlivenedPatterns[index] = pattern;\r\n              onLoaded();\r\n            });\r\n          }\r\n          else {\r\n            enlivenedPatterns[index] = p;\r\n            onLoaded();\r\n          }\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Groups SVG elements (usually those retrieved from SVG document)\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} elements SVG elements to group\r\n       * @param {Object} [options] Options object\r\n       * @param {String} path Value to set sourcePath to\r\n       * @return {fabric.Object|fabric.Group}\r\n       */\r\n      groupSVGElements: function(elements, options, path) {\r\n        var object;\r\n        if (elements.length === 1) {\r\n          return elements[0];\r\n        }\r\n        if (options) {\r\n          if (options.width && options.height) {\r\n            options.centerPoint = {\r\n              x: options.width / 2,\r\n              y: options.height / 2\r\n            };\r\n          }\r\n          else {\r\n            delete options.width;\r\n            delete options.height;\r\n          }\r\n        }\r\n        object = new fabric.Group(elements, options);\r\n        if (typeof path !== 'undefined') {\r\n          object.sourcePath = path;\r\n        }\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Populates an object with properties of another object\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Object} source Source object\r\n       * @param {Object} destination Destination object\r\n       * @return {Array} properties Properties names to include\r\n       */\r\n      populateWithProperties: function(source, destination, properties) {\r\n        if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\r\n          for (var i = 0, len = properties.length; i < len; i++) {\r\n            if (properties[i] in source) {\r\n              destination[properties[i]] = source[properties[i]];\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Draws a dashed line between two points\r\n       *\r\n       * This method is used to draw dashed line around selection area.\r\n       * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\r\n       *\r\n       * @param {CanvasRenderingContext2D} ctx context\r\n       * @param {Number} x  start x coordinate\r\n       * @param {Number} y start y coordinate\r\n       * @param {Number} x2 end x coordinate\r\n       * @param {Number} y2 end y coordinate\r\n       * @param {Array} da dash array pattern\r\n       */\r\n      drawDashedLine: function(ctx, x, y, x2, y2, da) {\r\n        var dx = x2 - x,\r\n            dy = y2 - y,\r\n            len = sqrt(dx * dx + dy * dy),\r\n            rot = atan2(dy, dx),\r\n            dc = da.length,\r\n            di = 0,\r\n            draw = true;\r\n\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        ctx.moveTo(0, 0);\r\n        ctx.rotate(rot);\r\n\r\n        x = 0;\r\n        while (len > x) {\r\n          x += da[di++ % dc];\r\n          if (x > len) {\r\n            x = len;\r\n          }\r\n          ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\r\n          draw = !draw;\r\n        }\r\n\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Creates canvas element\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {CanvasElement} initialized canvas element\r\n       */\r\n      createCanvasElement: function() {\r\n        return fabric.document.createElement('canvas');\r\n      },\r\n\r\n      /**\r\n       * Creates image element (works on client and node)\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {HTMLImageElement} HTML image element\r\n       */\r\n      createImage: function() {\r\n        return fabric.document.createElement('img');\r\n      },\r\n\r\n      /**\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @deprecated since 2.0.0\r\n       * @param {fabric.Object} receiver Object implementing `clipTo` method\r\n       * @param {CanvasRenderingContext2D} ctx Context to clip\r\n       */\r\n      clipContext: function(receiver, ctx) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        receiver.clipTo(ctx);\r\n        ctx.clip();\r\n      },\r\n\r\n      /**\r\n       * Multiply matrix A by matrix B to nest transformations\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {Array} a First transformMatrix\r\n       * @param  {Array} b Second transformMatrix\r\n       * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\r\n       * @return {Array} The product of the two transform matrices\r\n       */\r\n      multiplyTransformMatrices: function(a, b, is2x2) {\r\n        // Matrix multiply a * b\r\n        return [\r\n          a[0] * b[0] + a[2] * b[1],\r\n          a[1] * b[0] + a[3] * b[1],\r\n          a[0] * b[2] + a[2] * b[3],\r\n          a[1] * b[2] + a[3] * b[3],\r\n          is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\r\n          is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * Decomposes standard 2x2 matrix into transform componentes\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {Array} a transformMatrix\r\n       * @return {Object} Components of transform\r\n       */\r\n      qrDecompose: function(a) {\r\n        var angle = atan2(a[1], a[0]),\r\n            denom = pow(a[0], 2) + pow(a[1], 2),\r\n            scaleX = sqrt(denom),\r\n            scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\r\n            skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\r\n        return {\r\n          angle: angle  / PiBy180,\r\n          scaleX: scaleX,\r\n          scaleY: scaleY,\r\n          skewX: skewX / PiBy180,\r\n          skewY: 0,\r\n          translateX: a[4],\r\n          translateY: a[5]\r\n        };\r\n      },\r\n\r\n      customTransformMatrix: function(scaleX, scaleY, skewX) {\r\n        var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\r\n            scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\r\n        return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\r\n      },\r\n\r\n      /**\r\n       * reset an object transform state to neutral. Top and left are not accounted for\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {fabric.Object} target object to transform\r\n       */\r\n      resetObjectTransform: function (target) {\r\n        target.scaleX = 1;\r\n        target.scaleY = 1;\r\n        target.skewX = 0;\r\n        target.skewY = 0;\r\n        target.flipX = false;\r\n        target.flipY = false;\r\n        target.rotate(0);\r\n      },\r\n\r\n      /**\r\n       * Extract Object transform values\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {fabric.Object} target object to read from\r\n       * @return {Object} Components of transform\r\n       */\r\n      saveObjectTransform: function (target) {\r\n        return {\r\n          scaleX: target.scaleX,\r\n          scaleY: target.scaleY,\r\n          skewX: target.skewX,\r\n          skewY: target.skewY,\r\n          angle: target.angle,\r\n          left: target.left,\r\n          flipX: target.flipX,\r\n          flipY: target.flipY,\r\n          top: target.top\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of function body\r\n       * @param {Function} fn Function to get body of\r\n       * @return {String} Function body\r\n       */\r\n      getFunctionBody: function(fn) {\r\n        return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\r\n      },\r\n\r\n      /**\r\n       * Returns true if context has transparent pixel\r\n       * at specified location (taking tolerance into account)\r\n       * @param {CanvasRenderingContext2D} ctx context\r\n       * @param {Number} x x coordinate\r\n       * @param {Number} y y coordinate\r\n       * @param {Number} tolerance Tolerance\r\n       */\r\n      isTransparent: function(ctx, x, y, tolerance) {\r\n\r\n        // If tolerance is > 0 adjust start coords to take into account.\r\n        // If moves off Canvas fix to 0\r\n        if (tolerance > 0) {\r\n          if (x > tolerance) {\r\n            x -= tolerance;\r\n          }\r\n          else {\r\n            x = 0;\r\n          }\r\n          if (y > tolerance) {\r\n            y -= tolerance;\r\n          }\r\n          else {\r\n            y = 0;\r\n          }\r\n        }\r\n\r\n        var _isTransparent = true, i, temp,\r\n            imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\r\n            l = imageData.data.length;\r\n\r\n        // Split image data - for tolerance > 1, pixelDataSize = 4;\r\n        for (i = 3; i < l; i += 4) {\r\n          temp = imageData.data[i];\r\n          _isTransparent = temp <= 0;\r\n          if (_isTransparent === false) {\r\n            break; // Stop if colour found\r\n          }\r\n        }\r\n\r\n        imageData = null;\r\n\r\n        return _isTransparent;\r\n      },\r\n\r\n      /**\r\n       * Parse preserveAspectRatio attribute from element\r\n       * @param {string} attribute to be parsed\r\n       * @return {Object} an object containing align and meetOrSlice attribute\r\n       */\r\n      parsePreserveAspectRatioAttribute: function(attribute) {\r\n        var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\r\n            aspectRatioAttrs = attribute.split(' '), align;\r\n\r\n        if (aspectRatioAttrs && aspectRatioAttrs.length) {\r\n          meetOrSlice = aspectRatioAttrs.pop();\r\n          if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\r\n            align = meetOrSlice;\r\n            meetOrSlice = 'meet';\r\n          }\r\n          else if (aspectRatioAttrs.length) {\r\n            align = aspectRatioAttrs.pop();\r\n          }\r\n        }\r\n        //divide align in alignX and alignY\r\n        alignX = align !== 'none' ? align.slice(1, 4) : 'none';\r\n        alignY = align !== 'none' ? align.slice(5, 8) : 'none';\r\n        return {\r\n          meetOrSlice: meetOrSlice,\r\n          alignX: alignX,\r\n          alignY: alignY\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Clear char widths cache for the given font family or all the cache if no\r\n       * fontFamily is specified.\r\n       * Use it if you know you are loading fonts in a lazy way and you are not waiting\r\n       * for custom fonts to load properly when adding text objects to the canvas.\r\n       * If a text object is added when its own font is not loaded yet, you will get wrong\r\n       * measurement and so wrong bounding boxes.\r\n       * After the font cache is cleared, either change the textObject text content or call\r\n       * initDimensions() to trigger a recalculation\r\n       * @memberOf fabric.util\r\n       * @param {String} [fontFamily] font family to clear\r\n       */\r\n      clearFabricFontCache: function(fontFamily) {\r\n        fontFamily = (fontFamily || '').toLowerCase();\r\n        if (!fontFamily) {\r\n          fabric.charWidthsCache = { };\r\n        }\r\n        else if (fabric.charWidthsCache[fontFamily]) {\r\n          delete fabric.charWidthsCache[fontFamily];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Given current aspect ratio, determines the max width and height that can\r\n       * respect the total allowed area for the cache.\r\n       * @memberOf fabric.util\r\n       * @param {Number} ar aspect ratio\r\n       * @param {Number} maximumArea Maximum area you want to achieve\r\n       * @return {Object.x} Limited dimensions by X\r\n       * @return {Object.y} Limited dimensions by Y\r\n       */\r\n      limitDimsByArea: function(ar, maximumArea) {\r\n        var roughWidth = Math.sqrt(maximumArea * ar),\r\n            perfLimitSizeY = Math.floor(maximumArea / roughWidth);\r\n        return { x: Math.floor(roughWidth), y: perfLimitSizeY };\r\n      },\r\n\r\n      capValue: function(min, value, max) {\r\n        return Math.max(min, Math.min(value, max));\r\n      },\r\n\r\n      findScaleToFit: function(source, destination) {\r\n        return Math.min(destination.width / source.width, destination.height / source.height);\r\n      },\r\n\r\n      findScaleToCover: function(source, destination) {\r\n        return Math.max(destination.width / source.width, destination.height / source.height);\r\n      }\r\n    };\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    var _join = Array.prototype.join;\r\n\r\n    /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\r\n     * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\r\n     * http://mozilla.org/MPL/2.0/\r\n     */\r\n    function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\r\n      var argsString = _join.call(arguments);\r\n      if (fabric.arcToSegmentsCache[argsString]) {\r\n        return fabric.arcToSegmentsCache[argsString];\r\n      }\r\n\r\n      var PI = Math.PI, th = rotateX * PI / 180,\r\n          sinTh = fabric.util.sin(th),\r\n          cosTh = fabric.util.cos(th),\r\n          fromX = 0, fromY = 0;\r\n\r\n      rx = Math.abs(rx);\r\n      ry = Math.abs(ry);\r\n\r\n      var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\r\n          py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\r\n          rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\r\n          pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\r\n          root = 0;\r\n\r\n      if (pl < 0) {\r\n        var s = Math.sqrt(1 - pl / (rx2 * ry2));\r\n        rx *= s;\r\n        ry *= s;\r\n      }\r\n      else {\r\n        root = (large === sweep ? -1.0 : 1.0) *\r\n                Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\r\n      }\r\n\r\n      var cx = root * rx * py / ry,\r\n          cy = -root * ry * px / rx,\r\n          cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\r\n          cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\r\n          mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\r\n          dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\r\n\r\n      if (sweep === 0 && dtheta > 0) {\r\n        dtheta -= 2 * PI;\r\n      }\r\n      else if (sweep === 1 && dtheta < 0) {\r\n        dtheta += 2 * PI;\r\n      }\r\n\r\n      // Convert into cubic bezier segments <= 90deg\r\n      var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\r\n          result = [], mDelta = dtheta / segments,\r\n          mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\r\n          th3 = mTheta + mDelta;\r\n\r\n      for (var i = 0; i < segments; i++) {\r\n        result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\r\n        fromX = result[i][4];\r\n        fromY = result[i][5];\r\n        mTheta = th3;\r\n        th3 += mDelta;\r\n      }\r\n      fabric.arcToSegmentsCache[argsString] = result;\r\n      return result;\r\n    }\r\n\r\n    function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\r\n      var costh2 = fabric.util.cos(th2),\r\n          sinth2 = fabric.util.sin(th2),\r\n          costh3 = fabric.util.cos(th3),\r\n          sinth3 = fabric.util.sin(th3),\r\n          toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\r\n          toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\r\n          cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\r\n          cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\r\n          cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\r\n          cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\r\n\r\n      return [\r\n        cp1X, cp1Y,\r\n        cp2X, cp2Y,\r\n        toX, toY\r\n      ];\r\n    }\r\n\r\n    /*\r\n     * Private\r\n     */\r\n    function calcVectorAngle(ux, uy, vx, vy) {\r\n      var ta = Math.atan2(uy, ux),\r\n          tb = Math.atan2(vy, vx);\r\n      if (tb >= ta) {\r\n        return tb - ta;\r\n      }\r\n      else {\r\n        return 2 * Math.PI - (ta - tb);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Draws arc\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @param {Number} fx\r\n     * @param {Number} fy\r\n     * @param {Array} coords\r\n     */\r\n    fabric.util.drawArc = function(ctx, fx, fy, coords) {\r\n      var rx = coords[0],\r\n          ry = coords[1],\r\n          rot = coords[2],\r\n          large = coords[3],\r\n          sweep = coords[4],\r\n          tx = coords[5],\r\n          ty = coords[6],\r\n          segs = [[], [], [], []],\r\n          segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\r\n\r\n      for (var i = 0, len = segsNorm.length; i < len; i++) {\r\n        segs[i][0] = segsNorm[i][0] + fx;\r\n        segs[i][1] = segsNorm[i][1] + fy;\r\n        segs[i][2] = segsNorm[i][2] + fx;\r\n        segs[i][3] = segsNorm[i][3] + fy;\r\n        segs[i][4] = segsNorm[i][4] + fx;\r\n        segs[i][5] = segsNorm[i][5] + fy;\r\n        ctx.bezierCurveTo.apply(ctx, segs[i]);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Calculate bounding box of a elliptic-arc\r\n     * @param {Number} fx start point of arc\r\n     * @param {Number} fy\r\n     * @param {Number} rx horizontal radius\r\n     * @param {Number} ry vertical radius\r\n     * @param {Number} rot angle of horizontal axe\r\n     * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\r\n     * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\r\n     * @param {Number} tx end point of arc\r\n     * @param {Number} ty\r\n     */\r\n    fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\r\n\r\n      var fromX = 0, fromY = 0, bound, bounds = [],\r\n          segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\r\n\r\n      for (var i = 0, len = segs.length; i < len; i++) {\r\n        bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\r\n        bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\r\n        bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\r\n        fromX = segs[i][4];\r\n        fromY = segs[i][5];\r\n      }\r\n      return bounds;\r\n    };\r\n\r\n    /**\r\n     * Calculate bounding box of a beziercurve\r\n     * @param {Number} x0 starting point\r\n     * @param {Number} y0\r\n     * @param {Number} x1 first control point\r\n     * @param {Number} y1\r\n     * @param {Number} x2 secondo control point\r\n     * @param {Number} y2\r\n     * @param {Number} x3 end of beizer\r\n     * @param {Number} y3\r\n     */\r\n    // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\r\n    function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n      var argsString;\r\n      if (fabric.cachesBoundsOfCurve) {\r\n        argsString = _join.call(arguments);\r\n        if (fabric.boundsOfCurveCache[argsString]) {\r\n          return fabric.boundsOfCurveCache[argsString];\r\n        }\r\n      }\r\n\r\n      var sqrt = Math.sqrt,\r\n          min = Math.min, max = Math.max,\r\n          abs = Math.abs, tvalues = [],\r\n          bounds = [[], []],\r\n          a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n      b = 6 * x0 - 12 * x1 + 6 * x2;\r\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n      c = 3 * x1 - 3 * x0;\r\n\r\n      for (var i = 0; i < 2; ++i) {\r\n        if (i > 0) {\r\n          b = 6 * y0 - 12 * y1 + 6 * y2;\r\n          a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n          c = 3 * y1 - 3 * y0;\r\n        }\r\n\r\n        if (abs(a) < 1e-12) {\r\n          if (abs(b) < 1e-12) {\r\n            continue;\r\n          }\r\n          t = -c / b;\r\n          if (0 < t && t < 1) {\r\n            tvalues.push(t);\r\n          }\r\n          continue;\r\n        }\r\n        b2ac = b * b - 4 * c * a;\r\n        if (b2ac < 0) {\r\n          continue;\r\n        }\r\n        sqrtb2ac = sqrt(b2ac);\r\n        t1 = (-b + sqrtb2ac) / (2 * a);\r\n        if (0 < t1 && t1 < 1) {\r\n          tvalues.push(t1);\r\n        }\r\n        t2 = (-b - sqrtb2ac) / (2 * a);\r\n        if (0 < t2 && t2 < 1) {\r\n          tvalues.push(t2);\r\n        }\r\n      }\r\n\r\n      var x, y, j = tvalues.length, jlen = j, mt;\r\n      while (j--) {\r\n        t = tvalues[j];\r\n        mt = 1 - t;\r\n        x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n        bounds[0][j] = x;\r\n\r\n        y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n        bounds[1][j] = y;\r\n      }\r\n\r\n      bounds[0][jlen] = x0;\r\n      bounds[1][jlen] = y0;\r\n      bounds[0][jlen + 1] = x3;\r\n      bounds[1][jlen + 1] = y3;\r\n      var result = [\r\n        {\r\n          x: min.apply(null, bounds[0]),\r\n          y: min.apply(null, bounds[1])\r\n        },\r\n        {\r\n          x: max.apply(null, bounds[0]),\r\n          y: max.apply(null, bounds[1])\r\n        }\r\n      ];\r\n      if (fabric.cachesBoundsOfCurve) {\r\n        fabric.boundsOfCurveCache[argsString] = result;\r\n      }\r\n      return result;\r\n    }\r\n\r\n    fabric.util.getBoundsOfCurve = getBoundsOfCurve;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var slice = Array.prototype.slice;\r\n\r\n    /**\r\n     * Invokes method on all items in a given array\r\n     * @memberOf fabric.util.array\r\n     * @param {Array} array Array to iterate over\r\n     * @param {String} method Name of a method to invoke\r\n     * @return {Array}\r\n     */\r\n    function invoke(array, method) {\r\n      var args = slice.call(arguments, 2), result = [];\r\n      for (var i = 0, len = array.length; i < len; i++) {\r\n        result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * Finds maximum value in array (not necessarily \"first\" one)\r\n     * @memberOf fabric.util.array\r\n     * @param {Array} array Array to iterate over\r\n     * @param {String} byProperty\r\n     * @return {*}\r\n     */\r\n    function max(array, byProperty) {\r\n      return find(array, byProperty, function(value1, value2) {\r\n        return value1 >= value2;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Finds minimum value in array (not necessarily \"first\" one)\r\n     * @memberOf fabric.util.array\r\n     * @param {Array} array Array to iterate over\r\n     * @param {String} byProperty\r\n     * @return {*}\r\n     */\r\n    function min(array, byProperty) {\r\n      return find(array, byProperty, function(value1, value2) {\r\n        return value1 < value2;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function fill(array, value) {\r\n      var k = array.length;\r\n      while (k--) {\r\n        array[k] = value;\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function find(array, byProperty, condition) {\r\n      if (!array || array.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var i = array.length - 1,\r\n          result = byProperty ? array[i][byProperty] : array[i];\r\n      if (byProperty) {\r\n        while (i--) {\r\n          if (condition(array[i][byProperty], result)) {\r\n            result = array[i][byProperty];\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        while (i--) {\r\n          if (condition(array[i], result)) {\r\n            result = array[i];\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * @namespace fabric.util.array\r\n     */\r\n    fabric.util.array = {\r\n      fill: fill,\r\n      invoke: invoke,\r\n      min: min,\r\n      max: max\r\n    };\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n    /**\r\n     * Copies all enumerable properties of one js object to another\r\n     * Does not clone or extend fabric.Object subclasses.\r\n     * @memberOf fabric.util.object\r\n     * @param {Object} destination Where to copy to\r\n     * @param {Object} source Where to copy from\r\n     * @return {Object}\r\n     */\r\n\r\n    function extend(destination, source, deep) {\r\n      // JScript DontEnum bug is not taken care of\r\n      // the deep clone is for internal use, is not meant to avoid\r\n      // javascript traps or cloning html element or self referenced objects.\r\n      if (deep) {\r\n        if (!fabric.isLikelyNode && source instanceof Element) {\r\n          // avoid cloning deep images, canvases,\r\n          destination = source;\r\n        }\r\n        else if (source instanceof Array) {\r\n          destination = [];\r\n          for (var i = 0, len = source.length; i < len; i++) {\r\n            destination[i] = extend({ }, source[i], deep);\r\n          }\r\n        }\r\n        else if (source && typeof source === 'object') {\r\n          for (var property in source) {\r\n            if (source.hasOwnProperty(property)) {\r\n              destination[property] = extend({ }, source[property], deep);\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          // this sounds odd for an extend but is ok for recursive use\r\n          destination = source;\r\n        }\r\n      }\r\n      else {\r\n        for (var property in source) {\r\n          destination[property] = source[property];\r\n        }\r\n      }\r\n      return destination;\r\n    }\r\n\r\n    /**\r\n     * Creates an empty object and copies all enumerable properties of another object to it\r\n     * @memberOf fabric.util.object\r\n     * TODO: this function return an empty object if you try to clone null\r\n     * @param {Object} object Object to clone\r\n     * @return {Object}\r\n     */\r\n    function clone(object, deep) {\r\n      return extend({ }, object, deep);\r\n    }\r\n\r\n    /** @namespace fabric.util.object */\r\n    fabric.util.object = {\r\n      extend: extend,\r\n      clone: clone\r\n    };\r\n    fabric.util.object.extend(fabric.util, fabric.Observable);\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * Camelizes a string\r\n     * @memberOf fabric.util.string\r\n     * @param {String} string String to camelize\r\n     * @return {String} Camelized version of a string\r\n     */\r\n    function camelize(string) {\r\n      return string.replace(/-+(.)?/g, function(match, character) {\r\n        return character ? character.toUpperCase() : '';\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Capitalizes a string\r\n     * @memberOf fabric.util.string\r\n     * @param {String} string String to capitalize\r\n     * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\r\n     * and other letters stay untouched, if false first letter is capitalized\r\n     * and other letters are converted to lowercase.\r\n     * @return {String} Capitalized version of a string\r\n     */\r\n    function capitalize(string, firstLetterOnly) {\r\n      return string.charAt(0).toUpperCase() +\r\n        (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Escapes XML in a string\r\n     * @memberOf fabric.util.string\r\n     * @param {String} string String to escape\r\n     * @return {String} Escaped version of a string\r\n     */\r\n    function escapeXml(string) {\r\n      return string.replace(/&/g, '&amp;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&apos;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n    }\r\n\r\n    /**\r\n     * Divide a string in the user perceived single units\r\n     * @memberOf fabric.util.string\r\n     * @param {String} textstring String to escape\r\n     * @return {Array} array containing the graphemes\r\n     */\r\n    function graphemeSplit(textstring) {\r\n      var i = 0, chr, graphemes = [];\r\n      for (i = 0, chr; i < textstring.length; i++) {\r\n        if ((chr = getWholeChar(textstring, i)) === false) {\r\n          continue;\r\n        }\r\n        graphemes.push(chr);\r\n      }\r\n      return graphemes;\r\n    }\r\n\r\n    // taken from mdn in the charAt doc page.\r\n    function getWholeChar(str, i) {\r\n      var code = str.charCodeAt(i);\r\n\r\n      if (isNaN(code)) {\r\n        return ''; // Position not found\r\n      }\r\n      if (code < 0xD800 || code > 0xDFFF) {\r\n        return str.charAt(i);\r\n      }\r\n\r\n      // High surrogate (could change last hex to 0xDB7F to treat high private\r\n      // surrogates as single characters)\r\n      if (0xD800 <= code && code <= 0xDBFF) {\r\n        if (str.length <= (i + 1)) {\r\n          throw 'High surrogate without following low surrogate';\r\n        }\r\n        var next = str.charCodeAt(i + 1);\r\n        if (0xDC00 > next || next > 0xDFFF) {\r\n          throw 'High surrogate without following low surrogate';\r\n        }\r\n        return str.charAt(i) + str.charAt(i + 1);\r\n      }\r\n      // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\r\n      if (i === 0) {\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      var prev = str.charCodeAt(i - 1);\r\n\r\n      // (could change last hex to 0xDB7F to treat high private\r\n      // surrogates as single characters)\r\n      if (0xD800 > prev || prev > 0xDBFF) {\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      // We can pass over low surrogates now as the second component\r\n      // in a pair which we have already processed\r\n      return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * String utilities\r\n     * @namespace fabric.util.string\r\n     */\r\n    fabric.util.string = {\r\n      camelize: camelize,\r\n      capitalize: capitalize,\r\n      escapeXml: escapeXml,\r\n      graphemeSplit: graphemeSplit\r\n    };\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var slice = Array.prototype.slice, emptyFunction = function() { },\r\n\r\n        IS_DONTENUM_BUGGY = (function() {\r\n          for (var p in { toString: 1 }) {\r\n            if (p === 'toString') {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })(),\r\n\r\n        /** @ignore */\r\n        addMethods = function(klass, source, parent) {\r\n          for (var property in source) {\r\n\r\n            if (property in klass.prototype &&\r\n                typeof klass.prototype[property] === 'function' &&\r\n                (source[property] + '').indexOf('callSuper') > -1) {\r\n\r\n              klass.prototype[property] = (function(property) {\r\n                return function() {\r\n\r\n                  var superclass = this.constructor.superclass;\r\n                  this.constructor.superclass = parent;\r\n                  var returnValue = source[property].apply(this, arguments);\r\n                  this.constructor.superclass = superclass;\r\n\r\n                  if (property !== 'initialize') {\r\n                    return returnValue;\r\n                  }\r\n                };\r\n              })(property);\r\n            }\r\n            else {\r\n              klass.prototype[property] = source[property];\r\n            }\r\n\r\n            if (IS_DONTENUM_BUGGY) {\r\n              if (source.toString !== Object.prototype.toString) {\r\n                klass.prototype.toString = source.toString;\r\n              }\r\n              if (source.valueOf !== Object.prototype.valueOf) {\r\n                klass.prototype.valueOf = source.valueOf;\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n    function Subclass() { }\r\n\r\n    function callSuper(methodName) {\r\n      var parentMethod = null,\r\n          _this = this;\r\n\r\n      // climb prototype chain to find method not equal to callee's method\r\n      while (_this.constructor.superclass) {\r\n        var superClassMethod = _this.constructor.superclass.prototype[methodName];\r\n        if (_this[methodName] !== superClassMethod) {\r\n          parentMethod = superClassMethod;\r\n          break;\r\n        }\r\n        // eslint-disable-next-line\r\n        _this = _this.constructor.superclass.prototype;\r\n      }\r\n\r\n      if (!parentMethod) {\r\n        return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\r\n      }\r\n\r\n      return (arguments.length > 1)\r\n        ? parentMethod.apply(this, slice.call(arguments, 1))\r\n        : parentMethod.call(this);\r\n    }\r\n\r\n    /**\r\n     * Helper for creation of \"classes\".\r\n     * @memberOf fabric.util\r\n     * @param {Function} [parent] optional \"Class\" to inherit from\r\n     * @param {Object} [properties] Properties shared by all instances of this class\r\n     *                  (be careful modifying objects defined here as this would affect all instances)\r\n     */\r\n    function createClass() {\r\n      var parent = null,\r\n          properties = slice.call(arguments, 0);\r\n\r\n      if (typeof properties[0] === 'function') {\r\n        parent = properties.shift();\r\n      }\r\n      function klass() {\r\n        this.initialize.apply(this, arguments);\r\n      }\r\n\r\n      klass.superclass = parent;\r\n      klass.subclasses = [];\r\n\r\n      if (parent) {\r\n        Subclass.prototype = parent.prototype;\r\n        klass.prototype = new Subclass();\r\n        parent.subclasses.push(klass);\r\n      }\r\n      for (var i = 0, length = properties.length; i < length; i++) {\r\n        addMethods(klass, properties[i], parent);\r\n      }\r\n      if (!klass.prototype.initialize) {\r\n        klass.prototype.initialize = emptyFunction;\r\n      }\r\n      klass.prototype.constructor = klass;\r\n      klass.prototype.callSuper = callSuper;\r\n      return klass;\r\n    }\r\n\r\n    fabric.util.createClass = createClass;\r\n  })();\r\n\r\n\r\n  (function () {\r\n\r\n    var unknown = 'unknown';\r\n\r\n    /* EVENT HANDLING */\r\n\r\n    function areHostMethods(object) {\r\n      var methodNames = Array.prototype.slice.call(arguments, 1),\r\n          t, i, len = methodNames.length;\r\n      for (i = 0; i < len; i++) {\r\n        t = typeof object[methodNames[i]];\r\n        if (!(/^(?:function|object|unknown)$/).test(t)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    /** @ignore */\r\n    var getElement,\r\n        setElement,\r\n        getUniqueId = (function () {\r\n          var uid = 0;\r\n          return function (element) {\r\n            return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\r\n          };\r\n        })();\r\n\r\n    (function () {\r\n      var elements = { };\r\n      /** @ignore */\r\n      getElement = function (uid) {\r\n        return elements[uid];\r\n      };\r\n      /** @ignore */\r\n      setElement = function (uid, element) {\r\n        elements[uid] = element;\r\n      };\r\n    })();\r\n\r\n    function createListener(uid, handler) {\r\n      return {\r\n        handler: handler,\r\n        wrappedHandler: createWrappedHandler(uid, handler)\r\n      };\r\n    }\r\n\r\n    function createWrappedHandler(uid, handler) {\r\n      return function (e) {\r\n        handler.call(getElement(uid), e || fabric.window.event);\r\n      };\r\n    }\r\n\r\n    function createDispatcher(uid, eventName) {\r\n      return function (e) {\r\n        if (handlers[uid] && handlers[uid][eventName]) {\r\n          var handlersForEvent = handlers[uid][eventName];\r\n          for (var i = 0, len = handlersForEvent.length; i < len; i++) {\r\n            handlersForEvent[i].call(this, e || fabric.window.event);\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    var shouldUseAddListenerRemoveListener = (\r\n          areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\r\n          areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\r\n\r\n        shouldUseAttachEventDetachEvent = (\r\n          areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\r\n          areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\r\n\r\n        // IE branch\r\n        listeners = { },\r\n\r\n        // DOM L0 branch\r\n        handlers = { },\r\n\r\n        addListener, removeListener;\r\n\r\n    if (shouldUseAddListenerRemoveListener) {\r\n      /** @ignore */\r\n      addListener = function (element, eventName, handler, options) {\r\n        // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\r\n        element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\r\n      };\r\n      /** @ignore */\r\n      removeListener = function (element, eventName, handler, options) {\r\n        element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\r\n      };\r\n    }\r\n\r\n    else if (shouldUseAttachEventDetachEvent) {\r\n      /** @ignore */\r\n      addListener = function (element, eventName, handler) {\r\n        if (!element) {\r\n          return;\r\n        }\r\n        var uid = getUniqueId(element);\r\n        setElement(uid, element);\r\n        if (!listeners[uid]) {\r\n          listeners[uid] = { };\r\n        }\r\n        if (!listeners[uid][eventName]) {\r\n          listeners[uid][eventName] = [];\r\n\r\n        }\r\n        var listener = createListener(uid, handler);\r\n        listeners[uid][eventName].push(listener);\r\n        element.attachEvent('on' + eventName, listener.wrappedHandler);\r\n      };\r\n      /** @ignore */\r\n      removeListener = function (element, eventName, handler) {\r\n        if (!element) {\r\n          return;\r\n        }\r\n        var uid = getUniqueId(element), listener;\r\n        if (listeners[uid] && listeners[uid][eventName]) {\r\n          for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\r\n            listener = listeners[uid][eventName][i];\r\n            if (listener && listener.handler === handler) {\r\n              element.detachEvent('on' + eventName, listener.wrappedHandler);\r\n              listeners[uid][eventName][i] = null;\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n    else {\r\n      /** @ignore */\r\n      addListener = function (element, eventName, handler) {\r\n        if (!element) {\r\n          return;\r\n        }\r\n        var uid = getUniqueId(element);\r\n        if (!handlers[uid]) {\r\n          handlers[uid] = { };\r\n        }\r\n        if (!handlers[uid][eventName]) {\r\n          handlers[uid][eventName] = [];\r\n          var existingHandler = element['on' + eventName];\r\n          if (existingHandler) {\r\n            handlers[uid][eventName].push(existingHandler);\r\n          }\r\n          element['on' + eventName] = createDispatcher(uid, eventName);\r\n        }\r\n        handlers[uid][eventName].push(handler);\r\n      };\r\n      /** @ignore */\r\n      removeListener = function (element, eventName, handler) {\r\n        if (!element) {\r\n          return;\r\n        }\r\n        var uid = getUniqueId(element);\r\n        if (handlers[uid] && handlers[uid][eventName]) {\r\n          var handlersForEvent = handlers[uid][eventName];\r\n          for (var i = 0, len = handlersForEvent.length; i < len; i++) {\r\n            if (handlersForEvent[i] === handler) {\r\n              handlersForEvent.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Adds an event listener to an element\r\n     * @function\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element\r\n     * @param {String} eventName\r\n     * @param {Function} handler\r\n     */\r\n    fabric.util.addListener = addListener;\r\n\r\n    /**\r\n     * Removes an event listener from an element\r\n     * @function\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element\r\n     * @param {String} eventName\r\n     * @param {Function} handler\r\n     */\r\n    fabric.util.removeListener = removeListener;\r\n\r\n    /**\r\n     * Cross-browser wrapper for getting event's coordinates\r\n     * @memberOf fabric.util\r\n     * @param {Event} event Event object\r\n     */\r\n    function getPointer(event) {\r\n      event || (event = fabric.window.event);\r\n\r\n      var element = event.target ||\r\n                    (typeof event.srcElement !== unknown ? event.srcElement : null),\r\n\r\n          scroll = fabric.util.getScrollLeftTop(element);\r\n      return {\r\n        x: pointerX(event) + scroll.left,\r\n        y: pointerY(event) + scroll.top\r\n      };\r\n    }\r\n\r\n    var pointerX = function(event) {\r\n          return event.clientX;\r\n        },\r\n\r\n        pointerY = function(event) {\r\n          return event.clientY;\r\n        };\r\n\r\n    function _getPointer(event, pageProp, clientProp) {\r\n      var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\r\n      var pointer, eventTouchProp = event[touchProp];\r\n\r\n      if (eventTouchProp && eventTouchProp[0]) {\r\n        pointer = eventTouchProp[0][clientProp];\r\n      }\r\n\r\n      if (typeof pointer === 'undefined') {\r\n        pointer = event[clientProp];\r\n      }\r\n\r\n      return pointer;\r\n    }\r\n\r\n    if (fabric.isTouchSupported) {\r\n      pointerX = function(event) {\r\n        return _getPointer(event, 'pageX', 'clientX');\r\n      };\r\n      pointerY = function(event) {\r\n        return _getPointer(event, 'pageY', 'clientY');\r\n      };\r\n    }\r\n\r\n    fabric.util.getPointer = getPointer;\r\n\r\n  })();\r\n\r\n\r\n  (function () {\r\n\r\n    /**\r\n     * Cross-browser wrapper for setting element's style\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element\r\n     * @param {Object} styles\r\n     * @return {HTMLElement} Element that was passed as a first argument\r\n     */\r\n    function setStyle(element, styles) {\r\n      var elementStyle = element.style;\r\n      if (!elementStyle) {\r\n        return element;\r\n      }\r\n      if (typeof styles === 'string') {\r\n        element.style.cssText += ';' + styles;\r\n        return styles.indexOf('opacity') > -1\r\n          ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\r\n          : element;\r\n      }\r\n      for (var property in styles) {\r\n        if (property === 'opacity') {\r\n          setOpacity(element, styles[property]);\r\n        }\r\n        else {\r\n          var normalizedProperty = (property === 'float' || property === 'cssFloat')\r\n            ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\r\n            : property;\r\n          elementStyle[normalizedProperty] = styles[property];\r\n        }\r\n      }\r\n      return element;\r\n    }\r\n\r\n    var parseEl = fabric.document.createElement('div'),\r\n        supportsOpacity = typeof parseEl.style.opacity === 'string',\r\n        supportsFilters = typeof parseEl.style.filter === 'string',\r\n        reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\r\n\r\n        /** @ignore */\r\n        setOpacity = function (element) { return element; };\r\n\r\n    if (supportsOpacity) {\r\n      /** @ignore */\r\n      setOpacity = function(element, value) {\r\n        element.style.opacity = value;\r\n        return element;\r\n      };\r\n    }\r\n    else if (supportsFilters) {\r\n      /** @ignore */\r\n      setOpacity = function(element, value) {\r\n        var es = element.style;\r\n        if (element.currentStyle && !element.currentStyle.hasLayout) {\r\n          es.zoom = 1;\r\n        }\r\n        if (reOpacity.test(es.filter)) {\r\n          value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\r\n          es.filter = es.filter.replace(reOpacity, value);\r\n        }\r\n        else {\r\n          es.filter += ' alpha(opacity=' + (value * 100) + ')';\r\n        }\r\n        return element;\r\n      };\r\n    }\r\n\r\n    fabric.util.setStyle = setStyle;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var _slice = Array.prototype.slice;\r\n\r\n    /**\r\n     * Takes id and returns an element with that id (if one exists in a document)\r\n     * @memberOf fabric.util\r\n     * @param {String|HTMLElement} id\r\n     * @return {HTMLElement|null}\r\n     */\r\n    function getById(id) {\r\n      return typeof id === 'string' ? fabric.document.getElementById(id) : id;\r\n    }\r\n\r\n    var sliceCanConvertNodelists,\r\n        /**\r\n         * Converts an array-like object (e.g. arguments or NodeList) to an array\r\n         * @memberOf fabric.util\r\n         * @param {Object} arrayLike\r\n         * @return {Array}\r\n         */\r\n        toArray = function(arrayLike) {\r\n          return _slice.call(arrayLike, 0);\r\n        };\r\n\r\n    try {\r\n      sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\r\n    }\r\n    catch (err) { }\r\n\r\n    if (!sliceCanConvertNodelists) {\r\n      toArray = function(arrayLike) {\r\n        var arr = new Array(arrayLike.length), i = arrayLike.length;\r\n        while (i--) {\r\n          arr[i] = arrayLike[i];\r\n        }\r\n        return arr;\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Creates specified element with specified attributes\r\n     * @memberOf fabric.util\r\n     * @param {String} tagName Type of an element to create\r\n     * @param {Object} [attributes] Attributes to set on an element\r\n     * @return {HTMLElement} Newly created element\r\n     */\r\n    function makeElement(tagName, attributes) {\r\n      var el = fabric.document.createElement(tagName);\r\n      for (var prop in attributes) {\r\n        if (prop === 'class') {\r\n          el.className = attributes[prop];\r\n        }\r\n        else if (prop === 'for') {\r\n          el.htmlFor = attributes[prop];\r\n        }\r\n        else {\r\n          el.setAttribute(prop, attributes[prop]);\r\n        }\r\n      }\r\n      return el;\r\n    }\r\n\r\n    /**\r\n     * Adds class to an element\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to add class to\r\n     * @param {String} className Class to add to an element\r\n     */\r\n    function addClass(element, className) {\r\n      if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\r\n        element.className += (element.className ? ' ' : '') + className;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Wraps element with another element\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to wrap\r\n     * @param {HTMLElement|String} wrapper Element to wrap with\r\n     * @param {Object} [attributes] Attributes to set on a wrapper\r\n     * @return {HTMLElement} wrapper\r\n     */\r\n    function wrapElement(element, wrapper, attributes) {\r\n      if (typeof wrapper === 'string') {\r\n        wrapper = makeElement(wrapper, attributes);\r\n      }\r\n      if (element.parentNode) {\r\n        element.parentNode.replaceChild(wrapper, element);\r\n      }\r\n      wrapper.appendChild(element);\r\n      return wrapper;\r\n    }\r\n\r\n    /**\r\n     * Returns element scroll offsets\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to operate on\r\n     * @return {Object} Object with left/top values\r\n     */\r\n    function getScrollLeftTop(element) {\r\n\r\n      var left = 0,\r\n          top = 0,\r\n          docElement = fabric.document.documentElement,\r\n          body = fabric.document.body || {\r\n            scrollLeft: 0, scrollTop: 0\r\n          };\r\n\r\n      // While loop checks (and then sets element to) .parentNode OR .host\r\n      //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\r\n      //  but the .parentNode of a root ShadowDOM node will always be null, instead\r\n      //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\r\n      while (element && (element.parentNode || element.host)) {\r\n\r\n        // Set element to element parent, or 'host' in case of ShadowDOM\r\n        element = element.parentNode || element.host;\r\n\r\n        if (element === fabric.document) {\r\n          left = body.scrollLeft || docElement.scrollLeft || 0;\r\n          top = body.scrollTop ||  docElement.scrollTop || 0;\r\n        }\r\n        else {\r\n          left += element.scrollLeft || 0;\r\n          top += element.scrollTop || 0;\r\n        }\r\n\r\n        if (element.nodeType === 1 && element.style.position === 'fixed') {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return { left: left, top: top };\r\n    }\r\n\r\n    /**\r\n     * Returns offset for a given element\r\n     * @function\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to get offset for\r\n     * @return {Object} Object with \"left\" and \"top\" properties\r\n     */\r\n    function getElementOffset(element) {\r\n      var docElem,\r\n          doc = element && element.ownerDocument,\r\n          box = { left: 0, top: 0 },\r\n          offset = { left: 0, top: 0 },\r\n          scrollLeftTop,\r\n          offsetAttributes = {\r\n            borderLeftWidth: 'left',\r\n            borderTopWidth:  'top',\r\n            paddingLeft:     'left',\r\n            paddingTop:      'top'\r\n          };\r\n\r\n      if (!doc) {\r\n        return offset;\r\n      }\r\n\r\n      for (var attr in offsetAttributes) {\r\n        offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\r\n      }\r\n\r\n      docElem = doc.documentElement;\r\n      if ( typeof element.getBoundingClientRect !== 'undefined' ) {\r\n        box = element.getBoundingClientRect();\r\n      }\r\n\r\n      scrollLeftTop = getScrollLeftTop(element);\r\n\r\n      return {\r\n        left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\r\n        top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Returns style attribute value of a given element\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to get style attribute for\r\n     * @param {String} attr Style attribute to get for element\r\n     * @return {String} Style attribute value of the given element.\r\n     */\r\n    var getElementStyle;\r\n    if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\r\n      getElementStyle = function(element, attr) {\r\n        var style = fabric.document.defaultView.getComputedStyle(element, null);\r\n        return style ? style[attr] : undefined;\r\n      };\r\n    }\r\n    else {\r\n      getElementStyle = function(element, attr) {\r\n        var value = element.style[attr];\r\n        if (!value && element.currentStyle) {\r\n          value = element.currentStyle[attr];\r\n        }\r\n        return value;\r\n      };\r\n    }\r\n\r\n    (function () {\r\n      var style = fabric.document.documentElement.style,\r\n          selectProp = 'userSelect' in style\r\n            ? 'userSelect'\r\n            : 'MozUserSelect' in style\r\n              ? 'MozUserSelect'\r\n              : 'WebkitUserSelect' in style\r\n                ? 'WebkitUserSelect'\r\n                : 'KhtmlUserSelect' in style\r\n                  ? 'KhtmlUserSelect'\r\n                  : '';\r\n\r\n      /**\r\n       * Makes element unselectable\r\n       * @memberOf fabric.util\r\n       * @param {HTMLElement} element Element to make unselectable\r\n       * @return {HTMLElement} Element that was passed in\r\n       */\r\n      function makeElementUnselectable(element) {\r\n        if (typeof element.onselectstart !== 'undefined') {\r\n          element.onselectstart = fabric.util.falseFunction;\r\n        }\r\n        if (selectProp) {\r\n          element.style[selectProp] = 'none';\r\n        }\r\n        else if (typeof element.unselectable === 'string') {\r\n          element.unselectable = 'on';\r\n        }\r\n        return element;\r\n      }\r\n\r\n      /**\r\n       * Makes element selectable\r\n       * @memberOf fabric.util\r\n       * @param {HTMLElement} element Element to make selectable\r\n       * @return {HTMLElement} Element that was passed in\r\n       */\r\n      function makeElementSelectable(element) {\r\n        if (typeof element.onselectstart !== 'undefined') {\r\n          element.onselectstart = null;\r\n        }\r\n        if (selectProp) {\r\n          element.style[selectProp] = '';\r\n        }\r\n        else if (typeof element.unselectable === 'string') {\r\n          element.unselectable = '';\r\n        }\r\n        return element;\r\n      }\r\n\r\n      fabric.util.makeElementUnselectable = makeElementUnselectable;\r\n      fabric.util.makeElementSelectable = makeElementSelectable;\r\n    })();\r\n\r\n    (function() {\r\n\r\n      /**\r\n       * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\r\n       * @memberOf fabric.util\r\n       * @param {String} url URL of a script to load\r\n       * @param {Function} callback Callback to execute when script is finished loading\r\n       */\r\n      function getScript(url, callback) {\r\n        var headEl = fabric.document.getElementsByTagName('head')[0],\r\n            scriptEl = fabric.document.createElement('script'),\r\n            loading = true;\r\n\r\n        /** @ignore */\r\n        scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\r\n          if (loading) {\r\n            if (typeof this.readyState === 'string' &&\r\n                this.readyState !== 'loaded' &&\r\n                this.readyState !== 'complete') {\r\n              return;\r\n            }\r\n            loading = false;\r\n            callback(e || fabric.window.event);\r\n            scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\r\n          }\r\n        };\r\n        scriptEl.src = url;\r\n        headEl.appendChild(scriptEl);\r\n        // causes issue in Opera\r\n        // headEl.removeChild(scriptEl);\r\n      }\r\n\r\n      fabric.util.getScript = getScript;\r\n    })();\r\n\r\n    function getNodeCanvas(element) {\r\n      var impl = fabric.jsdomImplForWrapper(element);\r\n      return impl._canvas || impl._image;\r\n    };\r\n\r\n    function cleanUpJsdomNode(element) {\r\n      if (!fabric.isLikelyNode) {\r\n        return;\r\n      }\r\n      var impl = fabric.jsdomImplForWrapper(element);\r\n      if (impl) {\r\n        impl._image = null;\r\n        impl._canvas = null;\r\n        // unsure if necessary\r\n        impl._currentSrc = null;\r\n        impl._attributes = null;\r\n        impl._classList = null;\r\n      }\r\n    }\r\n\r\n    fabric.util.getById = getById;\r\n    fabric.util.toArray = toArray;\r\n    fabric.util.makeElement = makeElement;\r\n    fabric.util.addClass = addClass;\r\n    fabric.util.wrapElement = wrapElement;\r\n    fabric.util.getScrollLeftTop = getScrollLeftTop;\r\n    fabric.util.getElementOffset = getElementOffset;\r\n    fabric.util.getElementStyle = getElementStyle;\r\n    fabric.util.getNodeCanvas = getNodeCanvas;\r\n    fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function addParamToUrl(url, param) {\r\n      return url + (/\\?/.test(url) ? '&' : '?') + param;\r\n    }\r\n\r\n    var makeXHR = (function() {\r\n      var factories = [\r\n        function() { return new fabric.window.XMLHttpRequest(); },\r\n        function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\r\n        function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\r\n        function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); }\r\n      ];\r\n      for (var i = factories.length; i--; ) {\r\n        try {\r\n          var req = factories[i]();\r\n          if (req) {\r\n            return factories[i];\r\n          }\r\n        }\r\n        catch (err) { }\r\n      }\r\n    })();\r\n\r\n    function emptyFn() { }\r\n\r\n    /**\r\n     * Cross-browser abstraction for sending XMLHttpRequest\r\n     * @memberOf fabric.util\r\n     * @param {String} url URL to send XMLHttpRequest to\r\n     * @param {Object} [options] Options object\r\n     * @param {String} [options.method=\"GET\"]\r\n     * @param {String} [options.parameters] parameters to append to url in GET or in body\r\n     * @param {String} [options.body] body to send with POST or PUT request\r\n     * @param {Function} options.onComplete Callback to invoke when request is completed\r\n     * @return {XMLHttpRequest} request\r\n     */\r\n    function request(url, options) {\r\n      options || (options = { });\r\n\r\n      var method = options.method ? options.method.toUpperCase() : 'GET',\r\n          onComplete = options.onComplete || function() { },\r\n          xhr = makeXHR(),\r\n          body = options.body || options.parameters;\r\n\r\n      /** @ignore */\r\n      xhr.onreadystatechange = function() {\r\n        if (xhr.readyState === 4) {\r\n          onComplete(xhr);\r\n          xhr.onreadystatechange = emptyFn;\r\n        }\r\n      };\r\n\r\n      if (method === 'GET') {\r\n        body = null;\r\n        if (typeof options.parameters === 'string') {\r\n          url = addParamToUrl(url, options.parameters);\r\n        }\r\n      }\r\n\r\n      xhr.open(method, url, true);\r\n\r\n      if (method === 'POST' || method === 'PUT') {\r\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n      }\r\n\r\n      xhr.send(body);\r\n      return xhr;\r\n    }\r\n\r\n    fabric.util.request = request;\r\n  })();\r\n\r\n\r\n  /**\r\n   * Wrapper around `console.log` (when available)\r\n   * @param {*} [values] Values to log\r\n   */\r\n  fabric.log = function() { };\r\n\r\n  /**\r\n   * Wrapper around `console.warn` (when available)\r\n   * @param {*} [values] Values to log as a warning\r\n   */\r\n  fabric.warn = function() { };\r\n\r\n  /* eslint-disable */\r\n  if (typeof console !== 'undefined') {\r\n\r\n    ['log', 'warn'].forEach(function(methodName) {\r\n\r\n      if (typeof console[methodName] !== 'undefined' &&\r\n          typeof console[methodName].apply === 'function') {\r\n\r\n        fabric[methodName] = function() {\r\n          return console[methodName].apply(console, arguments);\r\n        };\r\n      }\r\n    });\r\n  }\r\n  /* eslint-enable */\r\n\r\n\r\n  (function() {\r\n\r\n    function noop() {\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\r\n     * @memberOf fabric.util\r\n     * @param {Object} [options] Animation options\r\n     * @param {Function} [options.onChange] Callback; invoked on every value change\r\n     * @param {Function} [options.onComplete] Callback; invoked when value change is completed\r\n     * @param {Number} [options.startValue=0] Starting value\r\n     * @param {Number} [options.endValue=100] Ending value\r\n     * @param {Number} [options.byValue=100] Value to modify the property by\r\n     * @param {Function} [options.easing] Easing function\r\n     * @param {Number} [options.duration=500] Duration of change (in ms)\r\n     */\r\n    function animate(options) {\r\n\r\n      requestAnimFrame(function(timestamp) {\r\n        options || (options = { });\r\n\r\n        var start = timestamp || +new Date(),\r\n            duration = options.duration || 500,\r\n            finish = start + duration, time,\r\n            onChange = options.onChange || noop,\r\n            abort = options.abort || noop,\r\n            onComplete = options.onComplete || noop,\r\n            easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\r\n            startValue = 'startValue' in options ? options.startValue : 0,\r\n            endValue = 'endValue' in options ? options.endValue : 100,\r\n            byValue = options.byValue || endValue - startValue;\r\n\r\n        options.onStart && options.onStart();\r\n\r\n        (function tick(ticktime) {\r\n          if (abort()) {\r\n            onComplete(endValue, 1, 1);\r\n            return;\r\n          }\r\n          time = ticktime || +new Date();\r\n          var currentTime = time > finish ? duration : (time - start),\r\n              timePerc = currentTime / duration,\r\n              current = easing(currentTime, startValue, byValue, duration),\r\n              valuePerc = Math.abs((current - startValue) / byValue);\r\n          onChange(current, valuePerc, timePerc);\r\n          if (time > finish) {\r\n            options.onComplete && options.onComplete();\r\n            return;\r\n          }\r\n          requestAnimFrame(tick);\r\n        })(start);\r\n      });\r\n\r\n    }\r\n\r\n    var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\r\n                            fabric.window.webkitRequestAnimationFrame ||\r\n                            fabric.window.mozRequestAnimationFrame    ||\r\n                            fabric.window.oRequestAnimationFrame      ||\r\n                            fabric.window.msRequestAnimationFrame     ||\r\n                            function(callback) {\r\n                              return fabric.window.setTimeout(callback, 1000 / 60);\r\n                            };\r\n\r\n    var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\r\n\r\n    /**\r\n     * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n     * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\r\n     * @memberOf fabric.util\r\n     * @param {Function} callback Callback to invoke\r\n     * @param {DOMElement} element optional Element to associate with animation\r\n     */\r\n    function requestAnimFrame() {\r\n      return _requestAnimFrame.apply(fabric.window, arguments);\r\n    }\r\n\r\n    function cancelAnimFrame() {\r\n      return _cancelAnimFrame.apply(fabric.window, arguments);\r\n    }\r\n\r\n    fabric.util.animate = animate;\r\n    fabric.util.requestAnimFrame = requestAnimFrame;\r\n    fabric.util.cancelAnimFrame = cancelAnimFrame;\r\n  })();\r\n\r\n\r\n  (function() {\r\n    // Calculate an in-between color. Returns a \"rgba()\" string.\r\n    // Credit: Edwin Martin <edwin@bitstorm.org>\r\n    //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\r\n    function calculateColor(begin, end, pos) {\r\n      var color = 'rgba('\r\n          + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\r\n          + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\r\n          + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\r\n\r\n      color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\r\n      color += ')';\r\n      return color;\r\n    }\r\n\r\n    /**\r\n     * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\r\n     * @memberOf fabric.util\r\n     * @param {String} fromColor The starting color in hex or rgb(a) format.\r\n     * @param {String} toColor The starting color in hex or rgb(a) format.\r\n     * @param {Number} [duration] Duration of change (in ms).\r\n     * @param {Object} [options] Animation options\r\n     * @param {Function} [options.onChange] Callback; invoked on every value change\r\n     * @param {Function} [options.onComplete] Callback; invoked when value change is completed\r\n     * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\r\n     */\r\n    function animateColor(fromColor, toColor, duration, options) {\r\n      var startColor = new fabric.Color(fromColor).getSource(),\r\n          endColor = new fabric.Color(toColor).getSource();\r\n\r\n      options = options || {};\r\n\r\n      fabric.util.animate(fabric.util.object.extend(options, {\r\n        duration: duration || 500,\r\n        startValue: startColor,\r\n        endValue: endColor,\r\n        byValue: endColor,\r\n        easing: function (currentTime, startValue, byValue, duration) {\r\n          var posValue = options.colorEasing\r\n            ? options.colorEasing(currentTime, duration)\r\n            : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\r\n          return calculateColor(startValue, byValue, posValue);\r\n        }\r\n      }));\r\n    }\r\n\r\n    fabric.util.animateColor = animateColor;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function normalize(a, c, p, s) {\r\n      if (a < Math.abs(c)) {\r\n        a = c;\r\n        s = p / 4;\r\n      }\r\n      else {\r\n        //handle the 0/0 case:\r\n        if (c === 0 && a === 0) {\r\n          s = p / (2 * Math.PI) * Math.asin(1);\r\n        }\r\n        else {\r\n          s = p / (2 * Math.PI) * Math.asin(c / a);\r\n        }\r\n      }\r\n      return { a: a, c: c, p: p, s: s };\r\n    }\r\n\r\n    function elastic(opts, t, d) {\r\n      return opts.a *\r\n        Math.pow(2, 10 * (t -= 1)) *\r\n        Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\r\n    }\r\n\r\n    /**\r\n     * Cubic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutCubic(t, b, c, d) {\r\n      return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Cubic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutCubic(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * t * t * t + b;\r\n      }\r\n      return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Quartic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInQuart(t, b, c, d) {\r\n      return c * (t /= d) * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * Quartic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutQuart(t, b, c, d) {\r\n      return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Quartic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutQuart(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * t * t * t * t + b;\r\n      }\r\n      return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Quintic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInQuint(t, b, c, d) {\r\n      return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * Quintic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutQuint(t, b, c, d) {\r\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Quintic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutQuint(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * t * t * t * t * t + b;\r\n      }\r\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Sinusoidal easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInSine(t, b, c, d) {\r\n      return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n    }\r\n\r\n    /**\r\n     * Sinusoidal easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutSine(t, b, c, d) {\r\n      return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n    }\r\n\r\n    /**\r\n     * Sinusoidal easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutSine(t, b, c, d) {\r\n      return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Exponential easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInExpo(t, b, c, d) {\r\n      return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n    }\r\n\r\n    /**\r\n     * Exponential easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutExpo(t, b, c, d) {\r\n      return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Exponential easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutExpo(t, b, c, d) {\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      if (t === d) {\r\n        return b + c;\r\n      }\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n      }\r\n      return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Circular easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInCirc(t, b, c, d) {\r\n      return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Circular easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutCirc(t, b, c, d) {\r\n      return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n\r\n    /**\r\n     * Circular easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutCirc(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n      }\r\n      return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Elastic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInElastic(t, b, c, d) {\r\n      var s = 1.70158, p = 0, a = c;\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      t /= d;\r\n      if (t === 1) {\r\n        return b + c;\r\n      }\r\n      if (!p) {\r\n        p = d * 0.3;\r\n      }\r\n      var opts = normalize(a, c, p, s);\r\n      return -elastic(opts, t, d) + b;\r\n    }\r\n\r\n    /**\r\n     * Elastic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutElastic(t, b, c, d) {\r\n      var s = 1.70158, p = 0, a = c;\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      t /= d;\r\n      if (t === 1) {\r\n        return b + c;\r\n      }\r\n      if (!p) {\r\n        p = d * 0.3;\r\n      }\r\n      var opts = normalize(a, c, p, s);\r\n      return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\r\n    }\r\n\r\n    /**\r\n     * Elastic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutElastic(t, b, c, d) {\r\n      var s = 1.70158, p = 0, a = c;\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      t /= d / 2;\r\n      if (t === 2) {\r\n        return b + c;\r\n      }\r\n      if (!p) {\r\n        p = d * (0.3 * 1.5);\r\n      }\r\n      var opts = normalize(a, c, p, s);\r\n      if (t < 1) {\r\n        return -0.5 * elastic(opts, t, d) + b;\r\n      }\r\n      return opts.a * Math.pow(2, -10 * (t -= 1)) *\r\n        Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\r\n    }\r\n\r\n    /**\r\n     * Backwards easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInBack(t, b, c, d, s) {\r\n      if (s === undefined) {\r\n        s = 1.70158;\r\n      }\r\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n\r\n    /**\r\n     * Backwards easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutBack(t, b, c, d, s) {\r\n      if (s === undefined) {\r\n        s = 1.70158;\r\n      }\r\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Backwards easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutBack(t, b, c, d, s) {\r\n      if (s === undefined) {\r\n        s = 1.70158;\r\n      }\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n      }\r\n      return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Bouncing easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInBounce(t, b, c, d) {\r\n      return c - easeOutBounce (d - t, 0, c, d) + b;\r\n    }\r\n\r\n    /**\r\n     * Bouncing easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutBounce(t, b, c, d) {\r\n      if ((t /= d) < (1 / 2.75)) {\r\n        return c * (7.5625 * t * t) + b;\r\n      }\r\n      else if (t < (2 / 2.75)) {\r\n        return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\r\n      }\r\n      else if (t < (2.5 / 2.75)) {\r\n        return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\r\n      }\r\n      else {\r\n        return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Bouncing easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutBounce(t, b, c, d) {\r\n      if (t < d / 2) {\r\n        return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\r\n      }\r\n      return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\r\n    }\r\n\r\n    /**\r\n     * Easing functions\r\n     * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\r\n     * @namespace fabric.util.ease\r\n     */\r\n    fabric.util.ease = {\r\n\r\n      /**\r\n       * Quadratic easing in\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeInQuad: function(t, b, c, d) {\r\n        return c * (t /= d) * t + b;\r\n      },\r\n\r\n      /**\r\n       * Quadratic easing out\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeOutQuad: function(t, b, c, d) {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n      },\r\n\r\n      /**\r\n       * Quadratic easing in and out\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeInOutQuad: function(t, b, c, d) {\r\n        t /= (d / 2);\r\n        if (t < 1) {\r\n          return c / 2 * t * t + b;\r\n        }\r\n        return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n      },\r\n\r\n      /**\r\n       * Cubic easing in\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeInCubic: function(t, b, c, d) {\r\n        return c * (t /= d) * t * t + b;\r\n      },\r\n\r\n      easeOutCubic: easeOutCubic,\r\n      easeInOutCubic: easeInOutCubic,\r\n      easeInQuart: easeInQuart,\r\n      easeOutQuart: easeOutQuart,\r\n      easeInOutQuart: easeInOutQuart,\r\n      easeInQuint: easeInQuint,\r\n      easeOutQuint: easeOutQuint,\r\n      easeInOutQuint: easeInOutQuint,\r\n      easeInSine: easeInSine,\r\n      easeOutSine: easeOutSine,\r\n      easeInOutSine: easeInOutSine,\r\n      easeInExpo: easeInExpo,\r\n      easeOutExpo: easeOutExpo,\r\n      easeInOutExpo: easeInOutExpo,\r\n      easeInCirc: easeInCirc,\r\n      easeOutCirc: easeOutCirc,\r\n      easeInOutCirc: easeInOutCirc,\r\n      easeInElastic: easeInElastic,\r\n      easeOutElastic: easeOutElastic,\r\n      easeInOutElastic: easeInOutElastic,\r\n      easeInBack: easeInBack,\r\n      easeOutBack: easeOutBack,\r\n      easeInOutBack: easeInOutBack,\r\n      easeInBounce: easeInBounce,\r\n      easeOutBounce: easeOutBounce,\r\n      easeInOutBounce: easeInOutBounce\r\n    };\r\n\r\n  })();\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * @name fabric\r\n     * @namespace\r\n     */\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        clone = fabric.util.object.clone,\r\n        toFixed = fabric.util.toFixed,\r\n        parseUnit = fabric.util.parseUnit,\r\n        multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\r\n\r\n        svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\r\n          'image', 'text', 'linearGradient', 'radialGradient', 'stop'],\r\n        svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\r\n        svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\r\n        svgValidParents = ['symbol', 'g', 'a', 'svg'],\r\n\r\n        attributesMap = {\r\n          cx:                   'left',\r\n          x:                    'left',\r\n          r:                    'radius',\r\n          cy:                   'top',\r\n          y:                    'top',\r\n          display:              'visible',\r\n          visibility:           'visible',\r\n          transform:            'transformMatrix',\r\n          'fill-opacity':       'fillOpacity',\r\n          'fill-rule':          'fillRule',\r\n          'font-family':        'fontFamily',\r\n          'font-size':          'fontSize',\r\n          'font-style':         'fontStyle',\r\n          'font-weight':        'fontWeight',\r\n          'letter-spacing':     'charSpacing',\r\n          'paint-order':        'paintFirst',\r\n          'stroke-dasharray':   'strokeDashArray',\r\n          'stroke-linecap':     'strokeLineCap',\r\n          'stroke-linejoin':    'strokeLineJoin',\r\n          'stroke-miterlimit':  'strokeMiterLimit',\r\n          'stroke-opacity':     'strokeOpacity',\r\n          'stroke-width':       'strokeWidth',\r\n          'text-decoration':    'textDecoration',\r\n          'text-anchor':        'textAnchor',\r\n          opacity:              'opacity'\r\n        },\r\n\r\n        colorAttributes = {\r\n          stroke: 'strokeOpacity',\r\n          fill:   'fillOpacity'\r\n        };\r\n\r\n    fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\r\n    fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\r\n    fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\r\n    fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\r\n\r\n    fabric.cssRules = { };\r\n    fabric.gradientDefs = { };\r\n\r\n    function normalizeAttr(attr) {\r\n      // transform attribute names\r\n      if (attr in attributesMap) {\r\n        return attributesMap[attr];\r\n      }\r\n      return attr;\r\n    }\r\n\r\n    function normalizeValue(attr, value, parentAttributes, fontSize) {\r\n      var isArray = Object.prototype.toString.call(value) === '[object Array]',\r\n          parsed;\r\n\r\n      if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\r\n        value = '';\r\n      }\r\n      else if (attr === 'strokeDashArray') {\r\n        if (value === 'none') {\r\n          value = null;\r\n        }\r\n        else {\r\n          value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\r\n            return parseFloat(n);\r\n          });\r\n        }\r\n      }\r\n      else if (attr === 'transformMatrix') {\r\n        if (parentAttributes && parentAttributes.transformMatrix) {\r\n          value = multiplyTransformMatrices(\r\n            parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\r\n        }\r\n        else {\r\n          value = fabric.parseTransformAttribute(value);\r\n        }\r\n      }\r\n      else if (attr === 'visible') {\r\n        value = value !== 'none' && value !== 'hidden';\r\n        // display=none on parent element always takes precedence over child element\r\n        if (parentAttributes && parentAttributes.visible === false) {\r\n          value = false;\r\n        }\r\n      }\r\n      else if (attr === 'opacity') {\r\n        value = parseFloat(value);\r\n        if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\r\n          value *= parentAttributes.opacity;\r\n        }\r\n      }\r\n      else if (attr === 'textAnchor' /* text-anchor */) {\r\n        value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\r\n      }\r\n      else if (attr === 'charSpacing') {\r\n        // parseUnit returns px and we convert it to em\r\n        parsed = parseUnit(value, fontSize) / fontSize * 1000;\r\n      }\r\n      else if (attr === 'paintFirst') {\r\n        var fillIndex = value.indexOf('fill');\r\n        var strokeIndex = value.indexOf('stroke');\r\n        var value = 'fill';\r\n        if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\r\n          value = 'stroke';\r\n        }\r\n        else if (fillIndex === -1 && strokeIndex > -1) {\r\n          value = 'stroke';\r\n        }\r\n      }\r\n      else {\r\n        parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\r\n      }\r\n\r\n      return (!isArray && isNaN(parsed) ? value : parsed);\r\n    }\r\n\r\n    /**\r\n      * @private\r\n      */\r\n    function getSvgRegex(arr) {\r\n      return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} attributes Array of attributes to parse\r\n     */\r\n    function _setStrokeFillOpacity(attributes) {\r\n      for (var attr in colorAttributes) {\r\n\r\n        if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\r\n          continue;\r\n        }\r\n\r\n        if (typeof attributes[attr] === 'undefined') {\r\n          if (!fabric.Object.prototype[attr]) {\r\n            continue;\r\n          }\r\n          attributes[attr] = fabric.Object.prototype[attr];\r\n        }\r\n\r\n        if (attributes[attr].indexOf('url(') === 0) {\r\n          continue;\r\n        }\r\n\r\n        var color = new fabric.Color(attributes[attr]);\r\n        attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\r\n      }\r\n      return attributes;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function _getMultipleNodes(doc, nodeNames) {\r\n      var nodeName, nodeArray = [], nodeList, i, len;\r\n      for (i = 0, len = nodeNames.length; i < len; i++) {\r\n        nodeName = nodeNames[i];\r\n        nodeList = doc.getElementsByTagName(nodeName);\r\n        nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\r\n      }\r\n      return nodeArray;\r\n    }\r\n\r\n    /**\r\n     * Parses \"transform\" attribute, returning an array of values\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric\r\n     * @param {String} attributeValue String containing attribute value\r\n     * @return {Array} Array of 6 elements representing transformation matrix\r\n     */\r\n    fabric.parseTransformAttribute = (function() {\r\n      function rotateMatrix(matrix, args) {\r\n        var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\r\n            x = 0, y = 0;\r\n        if (args.length === 3) {\r\n          x = args[1];\r\n          y = args[2];\r\n        }\r\n\r\n        matrix[0] = cos;\r\n        matrix[1] = sin;\r\n        matrix[2] = -sin;\r\n        matrix[3] = cos;\r\n        matrix[4] = x - (cos * x - sin * y);\r\n        matrix[5] = y - (sin * x + cos * y);\r\n      }\r\n\r\n      function scaleMatrix(matrix, args) {\r\n        var multiplierX = args[0],\r\n            multiplierY = (args.length === 2) ? args[1] : args[0];\r\n\r\n        matrix[0] = multiplierX;\r\n        matrix[3] = multiplierY;\r\n      }\r\n\r\n      function skewMatrix(matrix, args, pos) {\r\n        matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\r\n      }\r\n\r\n      function translateMatrix(matrix, args) {\r\n        matrix[4] = args[0];\r\n        if (args.length === 2) {\r\n          matrix[5] = args[1];\r\n        }\r\n      }\r\n\r\n      // identity matrix\r\n      var iMatrix = [\r\n            1, // a\r\n            0, // b\r\n            0, // c\r\n            1, // d\r\n            0, // e\r\n            0  // f\r\n          ],\r\n\r\n          // == begin transform regexp\r\n          number = fabric.reNum,\r\n\r\n          commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\r\n\r\n          skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\r\n\r\n          skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\r\n\r\n          rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                      commaWsp + '(' + number + ')' +\r\n                      commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n          scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                      commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n          translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                      commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n          matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' +\r\n                    '\\\\s*\\\\))',\r\n\r\n          transform = '(?:' +\r\n                      matrix + '|' +\r\n                      translate + '|' +\r\n                      scale + '|' +\r\n                      rotate + '|' +\r\n                      skewX + '|' +\r\n                      skewY +\r\n                      ')',\r\n\r\n          transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\r\n\r\n          transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\r\n\r\n          // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\r\n          reTransformList = new RegExp(transformList),\r\n          // == end transform regexp\r\n\r\n          reTransform = new RegExp(transform, 'g');\r\n\r\n      return function(attributeValue) {\r\n\r\n        // start with identity matrix\r\n        var matrix = iMatrix.concat(),\r\n            matrices = [];\r\n\r\n        // return if no argument was given or\r\n        // an argument does not match transform attribute regexp\r\n        if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\r\n          return matrix;\r\n        }\r\n\r\n        attributeValue.replace(reTransform, function(match) {\r\n\r\n          var m = new RegExp(transform).exec(match).filter(function (match) {\r\n                // match !== '' && match != null\r\n                return (!!match);\r\n              }),\r\n              operation = m[1],\r\n              args = m.slice(2).map(parseFloat);\r\n\r\n          switch (operation) {\r\n            case 'translate':\r\n              translateMatrix(matrix, args);\r\n              break;\r\n            case 'rotate':\r\n              args[0] = fabric.util.degreesToRadians(args[0]);\r\n              rotateMatrix(matrix, args);\r\n              break;\r\n            case 'scale':\r\n              scaleMatrix(matrix, args);\r\n              break;\r\n            case 'skewX':\r\n              skewMatrix(matrix, args, 2);\r\n              break;\r\n            case 'skewY':\r\n              skewMatrix(matrix, args, 1);\r\n              break;\r\n            case 'matrix':\r\n              matrix = args;\r\n              break;\r\n          }\r\n\r\n          // snapshot current matrix into matrices array\r\n          matrices.push(matrix.concat());\r\n          // reset\r\n          matrix = iMatrix.concat();\r\n        });\r\n\r\n        var combinedMatrix = matrices[0];\r\n        while (matrices.length > 1) {\r\n          matrices.shift();\r\n          combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\r\n        }\r\n        return combinedMatrix;\r\n      };\r\n    })();\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function parseStyleString(style, oStyle) {\r\n      var attr, value;\r\n      style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\r\n        var pair = chunk.split(':');\r\n\r\n        attr = pair[0].trim().toLowerCase();\r\n        value =  pair[1].trim();\r\n\r\n        oStyle[attr] = value;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function parseStyleObject(style, oStyle) {\r\n      var attr, value;\r\n      for (var prop in style) {\r\n        if (typeof style[prop] === 'undefined') {\r\n          continue;\r\n        }\r\n\r\n        attr = prop.toLowerCase();\r\n        value = style[prop];\r\n\r\n        oStyle[attr] = value;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function getGlobalStylesForElement(element, svgUid) {\r\n      var styles = { };\r\n      for (var rule in fabric.cssRules[svgUid]) {\r\n        if (elementMatchesRule(element, rule.split(' '))) {\r\n          for (var property in fabric.cssRules[svgUid][rule]) {\r\n            styles[property] = fabric.cssRules[svgUid][rule][property];\r\n          }\r\n        }\r\n      }\r\n      return styles;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function elementMatchesRule(element, selectors) {\r\n      var firstMatching, parentMatching = true;\r\n      //start from rightmost selector.\r\n      firstMatching = selectorMatches(element, selectors.pop());\r\n      if (firstMatching && selectors.length) {\r\n        parentMatching = doesSomeParentMatch(element, selectors);\r\n      }\r\n      return firstMatching && parentMatching && (selectors.length === 0);\r\n    }\r\n\r\n    function doesSomeParentMatch(element, selectors) {\r\n      var selector, parentMatching = true;\r\n      while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\r\n        if (parentMatching) {\r\n          selector = selectors.pop();\r\n        }\r\n        element = element.parentNode;\r\n        parentMatching = selectorMatches(element, selector);\r\n      }\r\n      return selectors.length === 0;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function selectorMatches(element, selector) {\r\n      var nodeName = element.nodeName,\r\n          classNames = element.getAttribute('class'),\r\n          id = element.getAttribute('id'), matcher, i;\r\n      // i check if a selector matches slicing away part from it.\r\n      // if i get empty string i should match\r\n      matcher = new RegExp('^' + nodeName, 'i');\r\n      selector = selector.replace(matcher, '');\r\n      if (id && selector.length) {\r\n        matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\r\n        selector = selector.replace(matcher, '');\r\n      }\r\n      if (classNames && selector.length) {\r\n        classNames = classNames.split(' ');\r\n        for (i = classNames.length; i--;) {\r\n          matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\r\n          selector = selector.replace(matcher, '');\r\n        }\r\n      }\r\n      return selector.length === 0;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * to support IE8 missing getElementById on SVGdocument\r\n     */\r\n    function elementById(doc, id) {\r\n      var el;\r\n      doc.getElementById && (el = doc.getElementById(id));\r\n      if (el) {\r\n        return el;\r\n      }\r\n      var node, i, len, nodelist = doc.getElementsByTagName('*');\r\n      for (i = 0, len = nodelist.length; i < len; i++) {\r\n        node = nodelist[i];\r\n        if (id === node.getAttribute('id')) {\r\n          return node;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function parseUseDirectives(doc) {\r\n      var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\r\n\r\n      while (nodelist.length && i < nodelist.length) {\r\n        var el = nodelist[i],\r\n            xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\r\n            x = el.getAttribute('x') || 0,\r\n            y = el.getAttribute('y') || 0,\r\n            el2 = elementById(doc, xlink).cloneNode(true),\r\n            currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\r\n            parentNode, oldLength = nodelist.length, attr, j, attrs, len;\r\n\r\n        applyViewboxTransform(el2);\r\n        if (/^svg$/i.test(el2.nodeName)) {\r\n          var el3 = el2.ownerDocument.createElement('g');\r\n          for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\r\n            attr = attrs.item(j);\r\n            el3.setAttribute(attr.nodeName, attr.nodeValue);\r\n          }\r\n          // el2.firstChild != null\r\n          while (el2.firstChild) {\r\n            el3.appendChild(el2.firstChild);\r\n          }\r\n          el2 = el3;\r\n        }\r\n\r\n        for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\r\n          attr = attrs.item(j);\r\n          if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\r\n            attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\r\n            continue;\r\n          }\r\n\r\n          if (attr.nodeName === 'transform') {\r\n            currentTrans = attr.nodeValue + ' ' + currentTrans;\r\n          }\r\n          else {\r\n            el2.setAttribute(attr.nodeName, attr.nodeValue);\r\n          }\r\n        }\r\n\r\n        el2.setAttribute('transform', currentTrans);\r\n        el2.setAttribute('instantiated_by_use', '1');\r\n        el2.removeAttribute('id');\r\n        parentNode = el.parentNode;\r\n        parentNode.replaceChild(el2, el);\r\n        // some browsers do not shorten nodelist after replaceChild (IE8)\r\n        if (nodelist.length === oldLength) {\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\r\n    // matches, e.g.: +14.56e-12, etc.\r\n    var reViewBoxAttrValue = new RegExp(\r\n      '^' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\r\n      '$'\r\n    );\r\n\r\n    /**\r\n     * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\r\n     */\r\n    function applyViewboxTransform(element) {\r\n\r\n      var viewBoxAttr = element.getAttribute('viewBox'),\r\n          scaleX = 1,\r\n          scaleY = 1,\r\n          minX = 0,\r\n          minY = 0,\r\n          viewBoxWidth, viewBoxHeight, matrix, el,\r\n          widthAttr = element.getAttribute('width'),\r\n          heightAttr = element.getAttribute('height'),\r\n          x = element.getAttribute('x') || 0,\r\n          y = element.getAttribute('y') || 0,\r\n          preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\r\n          missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\r\n                             || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\r\n          missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\r\n          toBeParsed = missingViewBox && missingDimAttr,\r\n          parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\r\n\r\n      parsedDim.width = 0;\r\n      parsedDim.height = 0;\r\n      parsedDim.toBeParsed = toBeParsed;\r\n\r\n      if (toBeParsed) {\r\n        return parsedDim;\r\n      }\r\n\r\n      if (missingViewBox) {\r\n        parsedDim.width = parseUnit(widthAttr);\r\n        parsedDim.height = parseUnit(heightAttr);\r\n        return parsedDim;\r\n      }\r\n\r\n      minX = -parseFloat(viewBoxAttr[1]);\r\n      minY = -parseFloat(viewBoxAttr[2]);\r\n      viewBoxWidth = parseFloat(viewBoxAttr[3]);\r\n      viewBoxHeight = parseFloat(viewBoxAttr[4]);\r\n\r\n      if (!missingDimAttr) {\r\n        parsedDim.width = parseUnit(widthAttr);\r\n        parsedDim.height = parseUnit(heightAttr);\r\n        scaleX = parsedDim.width / viewBoxWidth;\r\n        scaleY = parsedDim.height / viewBoxHeight;\r\n      }\r\n      else {\r\n        parsedDim.width = viewBoxWidth;\r\n        parsedDim.height = viewBoxHeight;\r\n      }\r\n\r\n      // default is to preserve aspect ratio\r\n      preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\r\n      if (preserveAspectRatio.alignX !== 'none') {\r\n        //translate all container for the effect of Mid, Min, Max\r\n        if (preserveAspectRatio.meetOrSlice === 'meet') {\r\n          scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\r\n          // calculate additional translation to move the viewbox\r\n        }\r\n        if (preserveAspectRatio.meetOrSlice === 'slice') {\r\n          scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\r\n          // calculate additional translation to move the viewbox\r\n        }\r\n        widthDiff = parsedDim.width - viewBoxWidth * scaleX;\r\n        heightDiff = parsedDim.height - viewBoxHeight * scaleX;\r\n        if (preserveAspectRatio.alignX === 'Mid') {\r\n          widthDiff /= 2;\r\n        }\r\n        if (preserveAspectRatio.alignY === 'Mid') {\r\n          heightDiff /= 2;\r\n        }\r\n        if (preserveAspectRatio.alignX === 'Min') {\r\n          widthDiff = 0;\r\n        }\r\n        if (preserveAspectRatio.alignY === 'Min') {\r\n          heightDiff = 0;\r\n        }\r\n      }\r\n\r\n      if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\r\n        return parsedDim;\r\n      }\r\n\r\n      if (x || y) {\r\n        translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\r\n      }\r\n\r\n      matrix = translateMatrix + ' matrix(' + scaleX +\r\n                    ' 0' +\r\n                    ' 0 ' +\r\n                    scaleY + ' ' +\r\n                    (minX * scaleX + widthDiff) + ' ' +\r\n                    (minY * scaleY + heightDiff) + ') ';\r\n\r\n      if (element.nodeName === 'svg') {\r\n        el = element.ownerDocument.createElement('g');\r\n        // element.firstChild != null\r\n        while (element.firstChild) {\r\n          el.appendChild(element.firstChild);\r\n        }\r\n        element.appendChild(el);\r\n      }\r\n      else {\r\n        el = element;\r\n        matrix = el.getAttribute('transform') + matrix;\r\n      }\r\n\r\n      el.setAttribute('transform', matrix);\r\n      return parsedDim;\r\n    }\r\n\r\n    function hasAncestorWithNodeName(element, nodeName) {\r\n      while (element && (element = element.parentNode)) {\r\n        if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\r\n          && !element.getAttribute('instantiated_by_use')) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric\r\n     * @param {SVGDocument} doc SVG document to parse\r\n     * @param {Function} callback Callback to call when parsing is finished;\r\n     * It's being passed an array of elements (parsed from a document).\r\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n     * @param {Object} [parsingOptions] options for parsing document\r\n     * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\r\n     */\r\n    fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\r\n      if (!doc) {\r\n        return;\r\n      }\r\n\r\n      parseUseDirectives(doc);\r\n\r\n      var svgUid =  fabric.Object.__uid++, i, len,\r\n          options = applyViewboxTransform(doc),\r\n          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\r\n      options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\r\n      options.svgUid = svgUid;\r\n\r\n      if (descendants.length === 0 && fabric.isLikelyNode) {\r\n        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\r\n        // https://github.com/ajaxorg/node-o3-xml/issues/21\r\n        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\r\n        var arr = [];\r\n        for (i = 0, len = descendants.length; i < len; i++) {\r\n          arr[i] = descendants[i];\r\n        }\r\n        descendants = arr;\r\n      }\r\n\r\n      var elements = descendants.filter(function(el) {\r\n        applyViewboxTransform(el);\r\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\r\n              !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\r\n      });\r\n\r\n      if (!elements || (elements && !elements.length)) {\r\n        callback && callback([], {});\r\n        return;\r\n      }\r\n\r\n      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\r\n      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\r\n      // Precedence of rules:   style > class > attribute\r\n      fabric.parseElements(elements, function(instances, elements) {\r\n        if (callback) {\r\n          callback(instances, options, elements, descendants);\r\n        }\r\n      }, clone(options), reviver, parsingOptions);\r\n    };\r\n\r\n    var reFontDeclaration = new RegExp(\r\n      '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\r\n      '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\r\n        fabric.reNum +\r\n      '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\r\n\r\n    extend(fabric, {\r\n      /**\r\n       * Parses a short font declaration, building adding its properties to a style object\r\n       * @static\r\n       * @function\r\n       * @memberOf fabric\r\n       * @param {String} value font declaration\r\n       * @param {Object} oStyle definition\r\n       */\r\n      parseFontDeclaration: function(value, oStyle) {\r\n        var match = value.match(reFontDeclaration);\r\n\r\n        if (!match) {\r\n          return;\r\n        }\r\n        var fontStyle = match[1],\r\n            // font variant is not used\r\n            // fontVariant = match[2],\r\n            fontWeight = match[3],\r\n            fontSize = match[4],\r\n            lineHeight = match[5],\r\n            fontFamily = match[6];\r\n\r\n        if (fontStyle) {\r\n          oStyle.fontStyle = fontStyle;\r\n        }\r\n        if (fontWeight) {\r\n          oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\r\n        }\r\n        if (fontSize) {\r\n          oStyle.fontSize = parseUnit(fontSize);\r\n        }\r\n        if (fontFamily) {\r\n          oStyle.fontFamily = fontFamily;\r\n        }\r\n        if (lineHeight) {\r\n          oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Parses an SVG document, returning all of the gradient declarations found in it\r\n       * @static\r\n       * @function\r\n       * @memberOf fabric\r\n       * @param {SVGDocument} doc SVG document to parse\r\n       * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\r\n       */\r\n      getGradientDefs: function(doc) {\r\n        var tagArray = [\r\n              'linearGradient',\r\n              'radialGradient',\r\n              'svg:linearGradient',\r\n              'svg:radialGradient'],\r\n            elList = _getMultipleNodes(doc, tagArray),\r\n            el, j = 0, id, xlink,\r\n            gradientDefs = { }, idsToXlinkMap = { };\r\n        j = elList.length;\r\n\r\n        while (j--) {\r\n          el = elList[j];\r\n          xlink = el.getAttribute('xlink:href');\r\n          id = el.getAttribute('id');\r\n          if (xlink) {\r\n            idsToXlinkMap[id] = xlink.substr(1);\r\n          }\r\n          gradientDefs[id] = el;\r\n        }\r\n\r\n        for (id in idsToXlinkMap) {\r\n          var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\r\n          el = gradientDefs[id];\r\n          while (el2.firstChild) {\r\n            el.appendChild(el2.firstChild);\r\n          }\r\n        }\r\n        return gradientDefs;\r\n      },\r\n\r\n      /**\r\n       * Returns an object of attributes' name/value, given element and an array of attribute names;\r\n       * Parses parent \"g\" nodes recursively upwards.\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {DOMElement} element Element to parse\r\n       * @param {Array} attributes Array of attributes to parse\r\n       * @return {Object} object containing parsed attributes' names/values\r\n       */\r\n      parseAttributes: function(element, attributes, svgUid) {\r\n\r\n        if (!element) {\r\n          return;\r\n        }\r\n\r\n        var value,\r\n            parentAttributes = { },\r\n            fontSize;\r\n\r\n        if (typeof svgUid === 'undefined') {\r\n          svgUid = element.getAttribute('svgUid');\r\n        }\r\n        // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\r\n        if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\r\n          parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\r\n        }\r\n        fontSize = (parentAttributes && parentAttributes.fontSize ) ||\r\n                   element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n\r\n        var ownAttributes = attributes.reduce(function(memo, attr) {\r\n          value = element.getAttribute(attr);\r\n          if (value) { // eslint-disable-line\r\n            memo[attr] = value;\r\n          }\r\n          return memo;\r\n        }, { });\r\n        // add values parsed from style, which take precedence over attributes\r\n        // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\r\n        ownAttributes = extend(ownAttributes,\r\n          extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\r\n\r\n        var normalizedAttr, normalizedValue, normalizedStyle = {};\r\n        for (var attr in ownAttributes) {\r\n          normalizedAttr = normalizeAttr(attr);\r\n          normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\r\n          normalizedStyle[normalizedAttr] = normalizedValue;\r\n        }\r\n        if (normalizedStyle && normalizedStyle.font) {\r\n          fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\r\n        }\r\n        var mergedAttrs = extend(parentAttributes, normalizedStyle);\r\n        return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\r\n      },\r\n\r\n      /**\r\n       * Transforms an array of svg elements to corresponding fabric.* instances\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {Array} elements Array of elements to parse\r\n       * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\r\n       * @param {Object} [options] Options object\r\n       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n       */\r\n      parseElements: function(elements, callback, options, reviver, parsingOptions) {\r\n        new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\r\n      },\r\n\r\n      /**\r\n       * Parses \"style\" attribute, retuning an object with values\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {SVGElement} element Element to parse\r\n       * @return {Object} Objects with values parsed from style attribute of an element\r\n       */\r\n      parseStyleAttribute: function(element) {\r\n        var oStyle = { },\r\n            style = element.getAttribute('style');\r\n\r\n        if (!style) {\r\n          return oStyle;\r\n        }\r\n\r\n        if (typeof style === 'string') {\r\n          parseStyleString(style, oStyle);\r\n        }\r\n        else {\r\n          parseStyleObject(style, oStyle);\r\n        }\r\n\r\n        return oStyle;\r\n      },\r\n\r\n      /**\r\n       * Parses \"points\" attribute, returning an array of values\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {String} points points attribute string\r\n       * @return {Array} array of points\r\n       */\r\n      parsePointsAttribute: function(points) {\r\n\r\n        // points attribute is required and must not be empty\r\n        if (!points) {\r\n          return null;\r\n        }\r\n\r\n        // replace commas with whitespace and remove bookending whitespace\r\n        points = points.replace(/,/g, ' ').trim();\r\n\r\n        points = points.split(/\\s+/);\r\n        var parsedPoints = [], i, len;\r\n\r\n        for (i = 0, len = points.length; i < len; i += 2) {\r\n          parsedPoints.push({\r\n            x: parseFloat(points[i]),\r\n            y: parseFloat(points[i + 1])\r\n          });\r\n        }\r\n\r\n        // odd number of points is an error\r\n        // if (parsedPoints.length % 2 !== 0) {\r\n        //   return null;\r\n        // }\r\n\r\n        return parsedPoints;\r\n      },\r\n\r\n      /**\r\n       * Returns CSS rules for a given SVG document\r\n       * @static\r\n       * @function\r\n       * @memberOf fabric\r\n       * @param {SVGDocument} doc SVG document to parse\r\n       * @return {Object} CSS rules of this document\r\n       */\r\n      getCSSRules: function(doc) {\r\n        var styles = doc.getElementsByTagName('style'), i, len,\r\n            allRules = { }, rules;\r\n\r\n        // very crude parsing of style contents\r\n        for (i = 0, len = styles.length; i < len; i++) {\r\n          // IE9 doesn't support textContent, but provides text instead.\r\n          var styleContents = styles[i].textContent || styles[i].text;\r\n\r\n          // remove comments\r\n          styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\r\n          if (styleContents.trim() === '') {\r\n            continue;\r\n          }\r\n          rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\r\n          rules = rules.map(function(rule) { return rule.trim(); });\r\n          // eslint-disable-next-line no-loop-func\r\n          rules.forEach(function(rule) {\r\n\r\n            var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\r\n                ruleObj = { }, declaration = match[2].trim(),\r\n                propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\r\n\r\n            for (i = 0, len = propertyValuePairs.length; i < len; i++) {\r\n              var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\r\n                  property = pair[0],\r\n                  value = pair[1];\r\n              ruleObj[property] = value;\r\n            }\r\n            rule = match[1];\r\n            rule.split(',').forEach(function(_rule) {\r\n              _rule = _rule.replace(/^svg/i, '').trim();\r\n              if (_rule === '') {\r\n                return;\r\n              }\r\n              if (allRules[_rule]) {\r\n                fabric.util.object.extend(allRules[_rule], ruleObj);\r\n              }\r\n              else {\r\n                allRules[_rule] = fabric.util.object.clone(ruleObj);\r\n              }\r\n            });\r\n          });\r\n        }\r\n        return allRules;\r\n      },\r\n\r\n      /**\r\n       * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\r\n       * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\r\n       * @memberOf fabric\r\n       * @param {String} url\r\n       * @param {Function} callback\r\n       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n       * @param {Object} [options] Object containing options for parsing\r\n       * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\r\n       */\r\n      loadSVGFromURL: function(url, callback, reviver, options) {\r\n\r\n        url = url.replace(/^\\n\\s*/, '').trim();\r\n        new fabric.util.request(url, {\r\n          method: 'get',\r\n          onComplete: onComplete\r\n        });\r\n\r\n        function onComplete(r) {\r\n\r\n          var xml = r.responseXML;\r\n          if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\r\n            xml = new ActiveXObject('Microsoft.XMLDOM');\r\n            xml.async = 'false';\r\n            //IE chokes on DOCTYPE\r\n            xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\r\n          }\r\n          if (!xml || !xml.documentElement) {\r\n            callback && callback(null);\r\n          }\r\n\r\n          fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\r\n            callback && callback(results, _options, elements, allElements);\r\n          }, reviver, options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\r\n       * @memberOf fabric\r\n       * @param {String} string\r\n       * @param {Function} callback\r\n       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n       * @param {Object} [options] Object containing options for parsing\r\n       * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\r\n       */\r\n      loadSVGFromString: function(string, callback, reviver, options) {\r\n        string = string.trim();\r\n        var doc;\r\n        if (typeof DOMParser !== 'undefined') {\r\n          var parser = new DOMParser();\r\n          if (parser && parser.parseFromString) {\r\n            doc = parser.parseFromString(string, 'text/xml');\r\n          }\r\n        }\r\n        else if (fabric.window.ActiveXObject) {\r\n          doc = new ActiveXObject('Microsoft.XMLDOM');\r\n          doc.async = 'false';\r\n          // IE chokes on DOCTYPE\r\n          doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\r\n        }\r\n\r\n        fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\r\n          callback(results, _options, elements, allElements);\r\n        }, reviver, options);\r\n      }\r\n    });\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  fabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\r\n    this.elements = elements;\r\n    this.callback = callback;\r\n    this.options = options;\r\n    this.reviver = reviver;\r\n    this.svgUid = (options && options.svgUid) || 0;\r\n    this.parsingOptions = parsingOptions;\r\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.parse = function() {\r\n    this.instances = new Array(this.elements.length);\r\n    this.numElements = this.elements.length;\r\n\r\n    this.createObjects();\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.createObjects = function() {\r\n    for (var i = 0, len = this.elements.length; i < len; i++) {\r\n      this.elements[i].setAttribute('svgUid', this.svgUid);\r\n      (function(_obj, i) {\r\n        setTimeout(function() {\r\n          _obj.createObject(_obj.elements[i], i);\r\n        }, 0);\r\n      })(this, i);\r\n    }\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.createObject = function(el, index) {\r\n    var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\r\n    if (klass && klass.fromElement) {\r\n      try {\r\n        this._createObject(klass, el, index);\r\n      }\r\n      catch (err) {\r\n        fabric.log(err);\r\n      }\r\n    }\r\n    else {\r\n      this.checkIfDone();\r\n    }\r\n  };\r\n\r\n  fabric.ElementsParser.prototype._createObject = function(klass, el, index) {\r\n    klass.fromElement(el, this.createCallback(index, el), this.options);\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.createCallback = function(index, el) {\r\n    var _this = this;\r\n    return function(obj) {\r\n      var _options;\r\n      _this.resolveGradient(obj, 'fill');\r\n      _this.resolveGradient(obj, 'stroke');\r\n      if (obj instanceof fabric.Image) {\r\n        _options = obj.parsePreserveAspectRatioAttribute(el);\r\n      }\r\n      obj._removeTransformMatrix(_options);\r\n      _this.reviver && _this.reviver(el, obj);\r\n      _this.instances[index] = obj;\r\n      _this.checkIfDone();\r\n    };\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\r\n\r\n    var instanceFillValue = obj[property];\r\n    if (!(/^url\\(/).test(instanceFillValue)) {\r\n      return;\r\n    }\r\n    var gradientId = this.regexUrl.exec(instanceFillValue)[1];\r\n    this.regexUrl.lastIndex = 0;\r\n    if (fabric.gradientDefs[this.svgUid][gradientId]) {\r\n      obj.set(property,\r\n        fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\r\n    }\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.checkIfDone = function() {\r\n    if (--this.numElements === 0) {\r\n      this.instances = this.instances.filter(function(el) {\r\n        // eslint-disable-next-line no-eq-null, eqeqeq\r\n        return el != null;\r\n      });\r\n      this.callback(this.instances, this.elements);\r\n    }\r\n  };\r\n\r\n(function() {\r\n\r\n  /**\r\n   * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\r\n   * @static\r\n   * @memberOf fabric.util\r\n   * @param {Object} klass \"Class\" to create accessors for\r\n   */\r\n  fabric.util.createAccessors = function(klass) {\r\n    var proto = klass.prototype, i, propName,\r\n        capitalizedPropName, setterName, getterName;\r\n\r\n    for (i = proto.stateProperties.length; i--; ) {\r\n\r\n      propName = proto.stateProperties[i];\r\n      capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\r\n      setterName = 'set' + capitalizedPropName;\r\n      getterName = 'get' + capitalizedPropName;\r\n\r\n      // using `new Function` for better introspection\r\n      if (!proto[getterName]) {\r\n        proto[getterName] = (function(property) {\r\n          return new Function('return this.get(\"' + property + '\")');\r\n        })(propName);\r\n      }\r\n      if (!proto[setterName]) {\r\n        proto[setterName] = (function(property) {\r\n          return new Function('value', 'return this.set(\"' + property + '\", value)');\r\n        })(propName);\r\n      }\r\n    }\r\n  };\r\n\r\n  /** @lends fabric.Text.Prototype */\r\n  /**\r\n   * Retrieves object's fontSize\r\n   * @method getFontSize\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Font size (in pixels)\r\n   */\r\n\r\n  /**\r\n   * Sets object's fontSize\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setFontSize\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {Number} fontSize Font size (in pixels)\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's fontWeight\r\n   * @method getFontWeight\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {(String|Number)} Font weight\r\n   */\r\n\r\n  /**\r\n   * Sets object's fontWeight\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setFontWeight\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {(Number|String)} fontWeight Font weight\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's fontFamily\r\n   * @method getFontFamily\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Font family\r\n   */\r\n\r\n  /**\r\n   * Sets object's fontFamily\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setFontFamily\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} fontFamily Font family\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's text\r\n   * @method getText\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} text\r\n   */\r\n\r\n  /**\r\n   * Sets object's text\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setText\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} text Text\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's underline\r\n   * @method getUnderline\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {Boolean} underline enabled or disabled\r\n   */\r\n\r\n  /**\r\n   * Sets object's underline\r\n   * @method setUnderline\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {Boolean} underline Text decoration\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's fontStyle\r\n   * @method getFontStyle\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Font style\r\n   */\r\n\r\n  /**\r\n   * Sets object's fontStyle\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setFontStyle\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} fontStyle Font style\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's lineHeight\r\n   * @method getLineHeight\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {Number} Line height\r\n   */\r\n\r\n  /**\r\n   * Sets object's lineHeight\r\n   * @method setLineHeight\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {Number} lineHeight Line height\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's textAlign\r\n   * @method getTextAlign\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Text alignment\r\n   */\r\n\r\n  /**\r\n   * Sets object's textAlign\r\n   * @method setTextAlign\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} textAlign Text alignment\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's textBackgroundColor\r\n   * @method getTextBackgroundColor\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Text background color\r\n   */\r\n\r\n  /**\r\n   * Sets object's textBackgroundColor\r\n   * @method setTextBackgroundColor\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} textBackgroundColor Text background color\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /** @lends fabric.Object.Prototype */\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#clipTo|clipping function}\r\n   * @method getClipTo\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Function}\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#clipTo|clipping function}\r\n   * @method setClipTo\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Function} clipTo Clipping function\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\r\n   * @method getTransformMatrix\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Array} transformMatrix\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\r\n   * @method setTransformMatrix\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Array} transformMatrix\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#visible|visible} state\r\n   * @method getVisible\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Boolean} True if visible\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#visible|visible} state\r\n   * @method setVisible\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Boolean} value visible value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#shadow|shadow}\r\n   * @method getShadow\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Object} Shadow instance\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#stroke|stroke}\r\n   * @method getStroke\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {String} stroke value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#stroke|stroke}\r\n   * @method setStroke\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {String} value stroke value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\r\n   * @method getStrokeWidth\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} strokeWidth value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\r\n   * @method setStrokeWidth\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value strokeWidth value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#originX|originX}\r\n   * @method getOriginX\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {String} originX value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#originX|originX}\r\n   * @method setOriginX\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {String} value originX value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#originY|originY}\r\n   * @method getOriginY\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {String} originY value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#originY|originY}\r\n   * @method setOriginY\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {String} value originY value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#fill|fill}\r\n   * @method getFill\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {String} Fill value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#fill|fill}\r\n   * @method setFill\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {String} value Fill value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#opacity|opacity}\r\n   * @method getOpacity\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} Opacity value (0-1)\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#opacity|opacity}\r\n   * @method setOpacity\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value Opacity value (0-1)\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\r\n   * @method getAngle\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number}\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#top|top position}\r\n   * @method getTop\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} Top value (in pixels)\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#top|top position}\r\n   * @method setTop\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value Top value (in pixels)\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#left|left position}\r\n   * @method getLeft\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} Left value (in pixels)\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#left|left position}\r\n   * @method setLeft\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value Left value (in pixels)\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\r\n   * @method getScaleX\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} scaleX value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#scaleX|scaleX} value\r\n   * @method setScaleX\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value scaleX value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\r\n   * @method getScaleY\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} scaleY value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#scaleY|scaleY} value\r\n   * @method setScaleY\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value scaleY value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#flipX|flipX} value\r\n   * @method getFlipX\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Boolean} flipX value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#flipX|flipX} value\r\n   * @method setFlipX\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Boolean} value flipX value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#flipY|flipY} value\r\n   * @method getFlipY\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Boolean} flipY value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#flipY|flipY} value\r\n   * @method setFlipY\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Boolean} value flipY value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\r\n\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Point) {\r\n      fabric.warn('fabric.Point is already defined');\r\n      return;\r\n    }\r\n\r\n    fabric.Point = Point;\r\n\r\n    /**\r\n     * Point class\r\n     * @class fabric.Point\r\n     * @memberOf fabric\r\n     * @constructor\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @return {fabric.Point} thisArg\r\n     */\r\n    function Point(x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n    }\r\n\r\n    Point.prototype = /** @lends fabric.Point.prototype */ {\r\n\r\n      type: 'point',\r\n\r\n      constructor: Point,\r\n\r\n      /**\r\n       * Adds another point to this one and returns another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} new Point instance with added values\r\n       */\r\n      add: function (that) {\r\n        return new Point(this.x + that.x, this.y + that.y);\r\n      },\r\n\r\n      /**\r\n       * Adds another point to this one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      addEquals: function (that) {\r\n        this.x += that.x;\r\n        this.y += that.y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Adds value to this point and returns a new one\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} new Point with added value\r\n       */\r\n      scalarAdd: function (scalar) {\r\n        return new Point(this.x + scalar, this.y + scalar);\r\n      },\r\n\r\n      /**\r\n       * Adds value to this point\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      scalarAddEquals: function (scalar) {\r\n        this.x += scalar;\r\n        this.y += scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Subtracts another point from this point and returns a new one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} new Point object with subtracted values\r\n       */\r\n      subtract: function (that) {\r\n        return new Point(this.x - that.x, this.y - that.y);\r\n      },\r\n\r\n      /**\r\n       * Subtracts another point from this point\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      subtractEquals: function (that) {\r\n        this.x -= that.x;\r\n        this.y -= that.y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Subtracts value from this point and returns a new one\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point}\r\n       */\r\n      scalarSubtract: function (scalar) {\r\n        return new Point(this.x - scalar, this.y - scalar);\r\n      },\r\n\r\n      /**\r\n       * Subtracts value from this point\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      scalarSubtractEquals: function (scalar) {\r\n        this.x -= scalar;\r\n        this.y -= scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Multiplies this point by a value and returns a new one\r\n       * TODO: rename in scalarMultiply in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point}\r\n       */\r\n      multiply: function (scalar) {\r\n        return new Point(this.x * scalar, this.y * scalar);\r\n      },\r\n\r\n      /**\r\n       * Multiplies this point by a value\r\n       * TODO: rename in scalarMultiplyEquals in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      multiplyEquals: function (scalar) {\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Divides this point by a value and returns a new one\r\n       * TODO: rename in scalarDivide in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point}\r\n       */\r\n      divide: function (scalar) {\r\n        return new Point(this.x / scalar, this.y / scalar);\r\n      },\r\n\r\n      /**\r\n       * Divides this point by a value\r\n       * TODO: rename in scalarDivideEquals in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      divideEquals: function (scalar) {\r\n        this.x /= scalar;\r\n        this.y /= scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is equal to another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      eq: function (that) {\r\n        return (this.x === that.x && this.y === that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is less than another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      lt: function (that) {\r\n        return (this.x < that.x && this.y < that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is less than or equal to another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      lte: function (that) {\r\n        return (this.x <= that.x && this.y <= that.y);\r\n      },\r\n\r\n      /**\r\n\r\n       * Returns true if this point is greater another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      gt: function (that) {\r\n        return (this.x > that.x && this.y > that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is greater than or equal to another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      gte: function (that) {\r\n        return (this.x >= that.x && this.y >= that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns new point which is the result of linear interpolation with this one and another one\r\n       * @param {fabric.Point} that\r\n       * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\r\n       * @return {fabric.Point}\r\n       */\r\n      lerp: function (that, t) {\r\n        if (typeof t === 'undefined') {\r\n          t = 0.5;\r\n        }\r\n        t = Math.max(Math.min(1, t), 0);\r\n        return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\r\n      },\r\n\r\n      /**\r\n       * Returns distance from this point and another one\r\n       * @param {fabric.Point} that\r\n       * @return {Number}\r\n       */\r\n      distanceFrom: function (that) {\r\n        var dx = this.x - that.x,\r\n            dy = this.y - that.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n      },\r\n\r\n      /**\r\n       * Returns the point between this point and another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point}\r\n       */\r\n      midPointFrom: function (that) {\r\n        return this.lerp(that);\r\n      },\r\n\r\n      /**\r\n       * Returns a new point which is the min of this and another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point}\r\n       */\r\n      min: function (that) {\r\n        return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\r\n      },\r\n\r\n      /**\r\n       * Returns a new point which is the max of this and another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point}\r\n       */\r\n      max: function (that) {\r\n        return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of this point\r\n       * @return {String}\r\n       */\r\n      toString: function () {\r\n        return this.x + ',' + this.y;\r\n      },\r\n\r\n      /**\r\n       * Sets x/y of this point\r\n       * @param {Number} x\r\n       * @param {Number} y\r\n       * @chainable\r\n       */\r\n      setXY: function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets x of this point\r\n       * @param {Number} x\r\n       * @chainable\r\n       */\r\n      setX: function (x) {\r\n        this.x = x;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets y of this point\r\n       * @param {Number} y\r\n       * @chainable\r\n       */\r\n      setY: function (y) {\r\n        this.y = y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets x/y of this point from another point\r\n       * @param {fabric.Point} that\r\n       * @chainable\r\n       */\r\n      setFromPoint: function (that) {\r\n        this.x = that.x;\r\n        this.y = that.y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Swaps x/y of this point and another point\r\n       * @param {fabric.Point} that\r\n       */\r\n      swap: function (that) {\r\n        var x = this.x,\r\n            y = this.y;\r\n        this.x = that.x;\r\n        this.y = that.y;\r\n        that.x = x;\r\n        that.y = y;\r\n      },\r\n\r\n      /**\r\n       * return a cloned instance of the point\r\n       * @return {fabric.Point}\r\n       */\r\n      clone: function () {\r\n        return new Point(this.x, this.y);\r\n      }\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Intersection) {\r\n      fabric.warn('fabric.Intersection is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Intersection class\r\n     * @class fabric.Intersection\r\n     * @memberOf fabric\r\n     * @constructor\r\n     */\r\n    function Intersection(status) {\r\n      this.status = status;\r\n      this.points = [];\r\n    }\r\n\r\n    fabric.Intersection = Intersection;\r\n\r\n    fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\r\n\r\n      constructor: Intersection,\r\n\r\n      /**\r\n       * Appends a point to intersection\r\n       * @param {fabric.Point} point\r\n       * @return {fabric.Intersection} thisArg\r\n       * @chainable\r\n       */\r\n      appendPoint: function (point) {\r\n        this.points.push(point);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Appends points to intersection\r\n       * @param {Array} points\r\n       * @return {fabric.Intersection} thisArg\r\n       * @chainable\r\n       */\r\n      appendPoints: function (points) {\r\n        this.points = this.points.concat(points);\r\n        return this;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Checks if one line intersects another\r\n     * TODO: rename in intersectSegmentSegment\r\n     * @static\r\n     * @param {fabric.Point} a1\r\n     * @param {fabric.Point} a2\r\n     * @param {fabric.Point} b1\r\n     * @param {fabric.Point} b2\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\r\n      var result,\r\n          uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\r\n          ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\r\n          uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\r\n      if (uB !== 0) {\r\n        var ua = uaT / uB,\r\n            ub = ubT / uB;\r\n        if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\r\n          result = new Intersection('Intersection');\r\n          result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\r\n        }\r\n        else {\r\n          result = new Intersection();\r\n        }\r\n      }\r\n      else {\r\n        if (uaT === 0 || ubT === 0) {\r\n          result = new Intersection('Coincident');\r\n        }\r\n        else {\r\n          result = new Intersection('Parallel');\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    /**\r\n     * Checks if line intersects polygon\r\n     * TODO: rename in intersectSegmentPolygon\r\n     * fix detection of coincident\r\n     * @static\r\n     * @param {fabric.Point} a1\r\n     * @param {fabric.Point} a2\r\n     * @param {Array} points\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\r\n      var result = new Intersection(),\r\n          length = points.length,\r\n          b1, b2, inter, i;\r\n\r\n      for (i = 0; i < length; i++) {\r\n        b1 = points[i];\r\n        b2 = points[(i + 1) % length];\r\n        inter = Intersection.intersectLineLine(a1, a2, b1, b2);\r\n\r\n        result.appendPoints(inter.points);\r\n      }\r\n      if (result.points.length > 0) {\r\n        result.status = 'Intersection';\r\n      }\r\n      return result;\r\n    };\r\n\r\n    /**\r\n     * Checks if polygon intersects another polygon\r\n     * @static\r\n     * @param {Array} points1\r\n     * @param {Array} points2\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\r\n      var result = new Intersection(),\r\n          length = points1.length, i;\r\n\r\n      for (i = 0; i < length; i++) {\r\n        var a1 = points1[i],\r\n            a2 = points1[(i + 1) % length],\r\n            inter = Intersection.intersectLinePolygon(a1, a2, points2);\r\n\r\n        result.appendPoints(inter.points);\r\n      }\r\n      if (result.points.length > 0) {\r\n        result.status = 'Intersection';\r\n      }\r\n      return result;\r\n    };\r\n\r\n    /**\r\n     * Checks if polygon intersects rectangle\r\n     * @static\r\n     * @param {Array} points\r\n     * @param {fabric.Point} r1\r\n     * @param {fabric.Point} r2\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\r\n      var min = r1.min(r2),\r\n          max = r1.max(r2),\r\n          topRight = new fabric.Point(max.x, min.y),\r\n          bottomLeft = new fabric.Point(min.x, max.y),\r\n          inter1 = Intersection.intersectLinePolygon(min, topRight, points),\r\n          inter2 = Intersection.intersectLinePolygon(topRight, max, points),\r\n          inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\r\n          inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\r\n          result = new Intersection();\r\n\r\n      result.appendPoints(inter1.points);\r\n      result.appendPoints(inter2.points);\r\n      result.appendPoints(inter3.points);\r\n      result.appendPoints(inter4.points);\r\n\r\n      if (result.points.length > 0) {\r\n        result.status = 'Intersection';\r\n      }\r\n      return result;\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Color) {\r\n      fabric.warn('fabric.Color is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Color class\r\n     * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\r\n     * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\r\n     *\r\n     * @class fabric.Color\r\n     * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\r\n     * @return {fabric.Color} thisArg\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\r\n     */\r\n    function Color(color) {\r\n      if (!color) {\r\n        this.setSource([0, 0, 0, 1]);\r\n      }\r\n      else {\r\n        this._tryParsingColor(color);\r\n      }\r\n    }\r\n\r\n    fabric.Color = Color;\r\n\r\n    fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\r\n\r\n      /**\r\n       * @private\r\n       * @param {String|Array} color Color value to parse\r\n       */\r\n      _tryParsingColor: function(color) {\r\n        var source;\r\n\r\n        if (color in Color.colorNameMap) {\r\n          color = Color.colorNameMap[color];\r\n        }\r\n\r\n        if (color === 'transparent') {\r\n          source = [255, 255, 255, 0];\r\n        }\r\n\r\n        if (!source) {\r\n          source = Color.sourceFromHex(color);\r\n        }\r\n        if (!source) {\r\n          source = Color.sourceFromRgb(color);\r\n        }\r\n        if (!source) {\r\n          source = Color.sourceFromHsl(color);\r\n        }\r\n        if (!source) {\r\n          //if color is not recognize let's make black as canvas does\r\n          source = [0, 0, 0, 1];\r\n        }\r\n        if (source) {\r\n          this.setSource(source);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\r\n       * @private\r\n       * @param {Number} r Red color value\r\n       * @param {Number} g Green color value\r\n       * @param {Number} b Blue color value\r\n       * @return {Array} Hsl color\r\n       */\r\n      _rgbToHsl: function(r, g, b) {\r\n        r /= 255; g /= 255; b /= 255;\r\n\r\n        var h, s, l,\r\n            max = fabric.util.array.max([r, g, b]),\r\n            min = fabric.util.array.min([r, g, b]);\r\n\r\n        l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n          h = s = 0; // achromatic\r\n        }\r\n        else {\r\n          var d = max - min;\r\n          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n          switch (max) {\r\n            case r:\r\n              h = (g - b) / d + (g < b ? 6 : 0);\r\n              break;\r\n            case g:\r\n              h = (b - r) / d + 2;\r\n              break;\r\n            case b:\r\n              h = (r - g) / d + 4;\r\n              break;\r\n          }\r\n          h /= 6;\r\n        }\r\n\r\n        return [\r\n          Math.round(h * 360),\r\n          Math.round(s * 100),\r\n          Math.round(l * 100)\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n       * @return {Array}\r\n       */\r\n      getSource: function() {\r\n        return this._source;\r\n      },\r\n\r\n      /**\r\n       * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n       * @param {Array} source\r\n       */\r\n      setSource: function(source) {\r\n        this._source = source;\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in RGB format\r\n       * @return {String} ex: rgb(0-255,0-255,0-255)\r\n       */\r\n      toRgb: function() {\r\n        var source = this.getSource();\r\n        return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in RGBA format\r\n       * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\r\n       */\r\n      toRgba: function() {\r\n        var source = this.getSource();\r\n        return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HSL format\r\n       * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\r\n       */\r\n      toHsl: function() {\r\n        var source = this.getSource(),\r\n            hsl = this._rgbToHsl(source[0], source[1], source[2]);\r\n\r\n        return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HSLA format\r\n       * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\r\n       */\r\n      toHsla: function() {\r\n        var source = this.getSource(),\r\n            hsl = this._rgbToHsl(source[0], source[1], source[2]);\r\n\r\n        return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HEX format\r\n       * @return {String} ex: FF5555\r\n       */\r\n      toHex: function() {\r\n        var source = this.getSource(), r, g, b;\r\n\r\n        r = source[0].toString(16);\r\n        r = (r.length === 1) ? ('0' + r) : r;\r\n\r\n        g = source[1].toString(16);\r\n        g = (g.length === 1) ? ('0' + g) : g;\r\n\r\n        b = source[2].toString(16);\r\n        b = (b.length === 1) ? ('0' + b) : b;\r\n\r\n        return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HEXA format\r\n       * @return {String} ex: FF5555CC\r\n       */\r\n      toHexa: function() {\r\n        var source = this.getSource(), a;\r\n\r\n        a = Math.round(source[3] * 255);\r\n        a = a.toString(16);\r\n        a = (a.length === 1) ? ('0' + a) : a;\r\n\r\n        return this.toHex() + a.toUpperCase();\r\n      },\r\n\r\n      /**\r\n       * Gets value of alpha channel for this color\r\n       * @return {Number} 0-1\r\n       */\r\n      getAlpha: function() {\r\n        return this.getSource()[3];\r\n      },\r\n\r\n      /**\r\n       * Sets value of alpha channel for this color\r\n       * @param {Number} alpha Alpha value 0-1\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      setAlpha: function(alpha) {\r\n        var source = this.getSource();\r\n        source[3] = alpha;\r\n        this.setSource(source);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Transforms color to its grayscale representation\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      toGrayscale: function() {\r\n        var source = this.getSource(),\r\n            average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\r\n            currentAlpha = source[3];\r\n        this.setSource([average, average, average, currentAlpha]);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Transforms color to its black and white representation\r\n       * @param {Number} threshold\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      toBlackWhite: function(threshold) {\r\n        var source = this.getSource(),\r\n            average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\r\n            currentAlpha = source[3];\r\n\r\n        threshold = threshold || 127;\r\n\r\n        average = (Number(average) < Number(threshold)) ? 0 : 255;\r\n        this.setSource([average, average, average, currentAlpha]);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Overlays color with another color\r\n       * @param {String|fabric.Color} otherColor\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      overlayWith: function(otherColor) {\r\n        if (!(otherColor instanceof Color)) {\r\n          otherColor = new Color(otherColor);\r\n        }\r\n\r\n        var result = [],\r\n            alpha = this.getAlpha(),\r\n            otherAlpha = 0.5,\r\n            source = this.getSource(),\r\n            otherSource = otherColor.getSource(), i;\r\n\r\n        for (i = 0; i < 3; i++) {\r\n          result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\r\n        }\r\n\r\n        result[3] = alpha;\r\n        this.setSource(result);\r\n        return this;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     */\r\n    // eslint-disable-next-line max-len\r\n    fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\r\n\r\n    /**\r\n     * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     */\r\n    fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\r\n\r\n    /**\r\n     * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     */\r\n    fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\r\n\r\n    /**\r\n     * Map of the 148 color names with HEX code\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     * @see: https://www.w3.org/TR/css3-color/#svg-color\r\n     */\r\n    fabric.Color.colorNameMap = {\r\n      aliceblue:            '#F0F8FF',\r\n      antiquewhite:         '#FAEBD7',\r\n      aqua:                 '#00FFFF',\r\n      aquamarine:           '#7FFFD4',\r\n      azure:                '#F0FFFF',\r\n      beige:                '#F5F5DC',\r\n      bisque:               '#FFE4C4',\r\n      black:                '#000000',\r\n      blanchedalmond:       '#FFEBCD',\r\n      blue:                 '#0000FF',\r\n      blueviolet:           '#8A2BE2',\r\n      brown:                '#A52A2A',\r\n      burlywood:            '#DEB887',\r\n      cadetblue:            '#5F9EA0',\r\n      chartreuse:           '#7FFF00',\r\n      chocolate:            '#D2691E',\r\n      coral:                '#FF7F50',\r\n      cornflowerblue:       '#6495ED',\r\n      cornsilk:             '#FFF8DC',\r\n      crimson:              '#DC143C',\r\n      cyan:                 '#00FFFF',\r\n      darkblue:             '#00008B',\r\n      darkcyan:             '#008B8B',\r\n      darkgoldenrod:        '#B8860B',\r\n      darkgray:             '#A9A9A9',\r\n      darkgrey:             '#A9A9A9',\r\n      darkgreen:            '#006400',\r\n      darkkhaki:            '#BDB76B',\r\n      darkmagenta:          '#8B008B',\r\n      darkolivegreen:       '#556B2F',\r\n      darkorange:           '#FF8C00',\r\n      darkorchid:           '#9932CC',\r\n      darkred:              '#8B0000',\r\n      darksalmon:           '#E9967A',\r\n      darkseagreen:         '#8FBC8F',\r\n      darkslateblue:        '#483D8B',\r\n      darkslategray:        '#2F4F4F',\r\n      darkslategrey:        '#2F4F4F',\r\n      darkturquoise:        '#00CED1',\r\n      darkviolet:           '#9400D3',\r\n      deeppink:             '#FF1493',\r\n      deepskyblue:          '#00BFFF',\r\n      dimgray:              '#696969',\r\n      dimgrey:              '#696969',\r\n      dodgerblue:           '#1E90FF',\r\n      firebrick:            '#B22222',\r\n      floralwhite:          '#FFFAF0',\r\n      forestgreen:          '#228B22',\r\n      fuchsia:              '#FF00FF',\r\n      gainsboro:            '#DCDCDC',\r\n      ghostwhite:           '#F8F8FF',\r\n      gold:                 '#FFD700',\r\n      goldenrod:            '#DAA520',\r\n      gray:                 '#808080',\r\n      grey:                 '#808080',\r\n      green:                '#008000',\r\n      greenyellow:          '#ADFF2F',\r\n      honeydew:             '#F0FFF0',\r\n      hotpink:              '#FF69B4',\r\n      indianred:            '#CD5C5C',\r\n      indigo:               '#4B0082',\r\n      ivory:                '#FFFFF0',\r\n      khaki:                '#F0E68C',\r\n      lavender:             '#E6E6FA',\r\n      lavenderblush:        '#FFF0F5',\r\n      lawngreen:            '#7CFC00',\r\n      lemonchiffon:         '#FFFACD',\r\n      lightblue:            '#ADD8E6',\r\n      lightcoral:           '#F08080',\r\n      lightcyan:            '#E0FFFF',\r\n      lightgoldenrodyellow: '#FAFAD2',\r\n      lightgray:            '#D3D3D3',\r\n      lightgrey:            '#D3D3D3',\r\n      lightgreen:           '#90EE90',\r\n      lightpink:            '#FFB6C1',\r\n      lightsalmon:          '#FFA07A',\r\n      lightseagreen:        '#20B2AA',\r\n      lightskyblue:         '#87CEFA',\r\n      lightslategray:       '#778899',\r\n      lightslategrey:       '#778899',\r\n      lightsteelblue:       '#B0C4DE',\r\n      lightyellow:          '#FFFFE0',\r\n      lime:                 '#00FF00',\r\n      limegreen:            '#32CD32',\r\n      linen:                '#FAF0E6',\r\n      magenta:              '#FF00FF',\r\n      maroon:               '#800000',\r\n      mediumaquamarine:     '#66CDAA',\r\n      mediumblue:           '#0000CD',\r\n      mediumorchid:         '#BA55D3',\r\n      mediumpurple:         '#9370DB',\r\n      mediumseagreen:       '#3CB371',\r\n      mediumslateblue:      '#7B68EE',\r\n      mediumspringgreen:    '#00FA9A',\r\n      mediumturquoise:      '#48D1CC',\r\n      mediumvioletred:      '#C71585',\r\n      midnightblue:         '#191970',\r\n      mintcream:            '#F5FFFA',\r\n      mistyrose:            '#FFE4E1',\r\n      moccasin:             '#FFE4B5',\r\n      navajowhite:          '#FFDEAD',\r\n      navy:                 '#000080',\r\n      oldlace:              '#FDF5E6',\r\n      olive:                '#808000',\r\n      olivedrab:            '#6B8E23',\r\n      orange:               '#FFA500',\r\n      orangered:            '#FF4500',\r\n      orchid:               '#DA70D6',\r\n      palegoldenrod:        '#EEE8AA',\r\n      palegreen:            '#98FB98',\r\n      paleturquoise:        '#AFEEEE',\r\n      palevioletred:        '#DB7093',\r\n      papayawhip:           '#FFEFD5',\r\n      peachpuff:            '#FFDAB9',\r\n      peru:                 '#CD853F',\r\n      pink:                 '#FFC0CB',\r\n      plum:                 '#DDA0DD',\r\n      powderblue:           '#B0E0E6',\r\n      purple:               '#800080',\r\n      rebeccapurple:        '#663399',\r\n      red:                  '#FF0000',\r\n      rosybrown:            '#BC8F8F',\r\n      royalblue:            '#4169E1',\r\n      saddlebrown:          '#8B4513',\r\n      salmon:               '#FA8072',\r\n      sandybrown:           '#F4A460',\r\n      seagreen:             '#2E8B57',\r\n      seashell:             '#FFF5EE',\r\n      sienna:               '#A0522D',\r\n      silver:               '#C0C0C0',\r\n      skyblue:              '#87CEEB',\r\n      slateblue:            '#6A5ACD',\r\n      slategray:            '#708090',\r\n      slategrey:            '#708090',\r\n      snow:                 '#FFFAFA',\r\n      springgreen:          '#00FF7F',\r\n      steelblue:            '#4682B4',\r\n      tan:                  '#D2B48C',\r\n      teal:                 '#008080',\r\n      thistle:              '#D8BFD8',\r\n      tomato:               '#FF6347',\r\n      turquoise:            '#40E0D0',\r\n      violet:               '#EE82EE',\r\n      wheat:                '#F5DEB3',\r\n      white:                '#FFFFFF',\r\n      whitesmoke:           '#F5F5F5',\r\n      yellow:               '#FFFF00',\r\n      yellowgreen:          '#9ACD32'\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @param {Number} p\r\n     * @param {Number} q\r\n     * @param {Number} t\r\n     * @return {Number}\r\n     */\r\n    function hue2rgb(p, q, t) {\r\n      if (t < 0) {\r\n        t += 1;\r\n      }\r\n      if (t > 1) {\r\n        t -= 1;\r\n      }\r\n      if (t < 1 / 6) {\r\n        return p + (q - p) * 6 * t;\r\n      }\r\n      if (t < 1 / 2) {\r\n        return q;\r\n      }\r\n      if (t < 2 / 3) {\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n      }\r\n      return p;\r\n    }\r\n\r\n    /**\r\n     * Returns new color object, when given a color in RGB format\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromRgb = function(color) {\r\n      return Color.fromSource(Color.sourceFromRgb(color));\r\n    };\r\n\r\n    /**\r\n     * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\r\n     * @return {Array} source\r\n     */\r\n    fabric.Color.sourceFromRgb = function(color) {\r\n      var match = color.match(Color.reRGBa);\r\n      if (match) {\r\n        var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\r\n            g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\r\n            b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\r\n\r\n        return [\r\n          parseInt(r, 10),\r\n          parseInt(g, 10),\r\n          parseInt(b, 10),\r\n          match[4] ? parseFloat(match[4]) : 1\r\n        ];\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Returns new color object, when given a color in RGBA format\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric.Color\r\n     * @param {String} color\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromRgba = Color.fromRgb;\r\n\r\n    /**\r\n     * Returns new color object, when given a color in HSL format\r\n     * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\r\n     * @memberOf fabric.Color\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromHsl = function(color) {\r\n      return Color.fromSource(Color.sourceFromHsl(color));\r\n    };\r\n\r\n    /**\r\n     * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\r\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\r\n     * @return {Array} source\r\n     * @see http://http://www.w3.org/TR/css3-color/#hsl-color\r\n     */\r\n    fabric.Color.sourceFromHsl = function(color) {\r\n      var match = color.match(Color.reHSLa);\r\n      if (!match) {\r\n        return;\r\n      }\r\n\r\n      var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\r\n          s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\r\n          l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\r\n          r, g, b;\r\n\r\n      if (s === 0) {\r\n        r = g = b = l;\r\n      }\r\n      else {\r\n        var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\r\n            p = l * 2 - q;\r\n\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n      }\r\n\r\n      return [\r\n        Math.round(r * 255),\r\n        Math.round(g * 255),\r\n        Math.round(b * 255),\r\n        match[4] ? parseFloat(match[4]) : 1\r\n      ];\r\n    };\r\n\r\n    /**\r\n     * Returns new color object, when given a color in HSLA format\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric.Color\r\n     * @param {String} color\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromHsla = Color.fromHsl;\r\n\r\n    /**\r\n     * Returns new color object, when given a color in HEX format\r\n     * @static\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: FF5555\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromHex = function(color) {\r\n      return Color.fromSource(Color.sourceFromHex(color));\r\n    };\r\n\r\n    /**\r\n     * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\r\n     * @static\r\n     * @memberOf fabric.Color\r\n     * @param {String} color ex: FF5555 or FF5544CC (RGBa)\r\n     * @return {Array} source\r\n     */\r\n    fabric.Color.sourceFromHex = function(color) {\r\n      if (color.match(Color.reHex)) {\r\n        var value = color.slice(color.indexOf('#') + 1),\r\n            isShortNotation = (value.length === 3 || value.length === 4),\r\n            isRGBa = (value.length === 8 || value.length === 4),\r\n            r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\r\n            g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\r\n            b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\r\n            a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\r\n\r\n        return [\r\n          parseInt(r, 16),\r\n          parseInt(g, 16),\r\n          parseInt(b, 16),\r\n          parseFloat((parseInt(a, 16) / 255).toFixed(2))\r\n        ];\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\r\n     * @static\r\n     * @memberOf fabric.Color\r\n     * @param {Array} source\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromSource = function(source) {\r\n      var oColor = new Color();\r\n      oColor.setSource(source);\r\n      return oColor;\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    /* _FROM_SVG_START_ */\r\n    function getColorStop(el) {\r\n      var style = el.getAttribute('style'),\r\n          offset = el.getAttribute('offset') || 0,\r\n          color, colorAlpha, opacity, i;\r\n\r\n      // convert percents to absolute values\r\n      offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\r\n      offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\r\n      if (style) {\r\n        var keyValuePairs = style.split(/\\s*;\\s*/);\r\n\r\n        if (keyValuePairs[keyValuePairs.length - 1] === '') {\r\n          keyValuePairs.pop();\r\n        }\r\n\r\n        for (i = keyValuePairs.length; i--; ) {\r\n\r\n          var split = keyValuePairs[i].split(/\\s*:\\s*/),\r\n              key = split[0].trim(),\r\n              value = split[1].trim();\r\n\r\n          if (key === 'stop-color') {\r\n            color = value;\r\n          }\r\n          else if (key === 'stop-opacity') {\r\n            opacity = value;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!color) {\r\n        color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\r\n      }\r\n      if (!opacity) {\r\n        opacity = el.getAttribute('stop-opacity');\r\n      }\r\n\r\n      color = new fabric.Color(color);\r\n      colorAlpha = color.getAlpha();\r\n      opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\r\n      opacity *= colorAlpha;\r\n\r\n      return {\r\n        offset: offset,\r\n        color: color.toRgb(),\r\n        opacity: opacity\r\n      };\r\n    }\r\n\r\n    function getLinearCoords(el) {\r\n      return {\r\n        x1: el.getAttribute('x1') || 0,\r\n        y1: el.getAttribute('y1') || 0,\r\n        x2: el.getAttribute('x2') || '100%',\r\n        y2: el.getAttribute('y2') || 0\r\n      };\r\n    }\r\n\r\n    function getRadialCoords(el) {\r\n      return {\r\n        x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\r\n        y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\r\n        r1: 0,\r\n        x2: el.getAttribute('cx') || '50%',\r\n        y2: el.getAttribute('cy') || '50%',\r\n        r2: el.getAttribute('r') || '50%'\r\n      };\r\n    }\r\n    /* _FROM_SVG_END_ */\r\n\r\n    var clone = fabric.util.object.clone;\r\n\r\n    /**\r\n     * Gradient class\r\n     * @class fabric.Gradient\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\r\n     * @see {@link fabric.Gradient#initialize} for constructor definition\r\n     */\r\n    fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\r\n\r\n      /**\r\n       * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\r\n       * @type Number\r\n       * @default 0\r\n       */\r\n      offsetX: 0,\r\n\r\n      /**\r\n       * Vertical offset for aligning gradients coming from SVG when outside pathgroups\r\n       * @type Number\r\n       * @default 0\r\n       */\r\n      offsetY: 0,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\r\n       * @return {fabric.Gradient} thisArg\r\n       */\r\n      initialize: function(options) {\r\n        options || (options = { });\r\n\r\n        var coords = { };\r\n\r\n        this.id = fabric.Object.__uid++;\r\n        this.type = options.type || 'linear';\r\n\r\n        coords = {\r\n          x1: options.coords.x1 || 0,\r\n          y1: options.coords.y1 || 0,\r\n          x2: options.coords.x2 || 0,\r\n          y2: options.coords.y2 || 0\r\n        };\r\n\r\n        if (this.type === 'radial') {\r\n          coords.r1 = options.coords.r1 || 0;\r\n          coords.r2 = options.coords.r2 || 0;\r\n        }\r\n        this.coords = coords;\r\n        this.colorStops = options.colorStops.slice();\r\n        if (options.gradientTransform) {\r\n          this.gradientTransform = options.gradientTransform;\r\n        }\r\n        this.offsetX = options.offsetX || this.offsetX;\r\n        this.offsetY = options.offsetY || this.offsetY;\r\n      },\r\n\r\n      /**\r\n       * Adds another colorStop\r\n       * @param {Object} colorStop Object with offset and color\r\n       * @return {fabric.Gradient} thisArg\r\n       */\r\n      addColorStop: function(colorStops) {\r\n        for (var position in colorStops) {\r\n          var color = new fabric.Color(colorStops[position]);\r\n          this.colorStops.push({\r\n            offset: parseFloat(position),\r\n            color: color.toRgb(),\r\n            opacity: color.getAlpha()\r\n          });\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of a gradient\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object}\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var object = {\r\n          type: this.type,\r\n          coords: this.coords,\r\n          colorStops: this.colorStops,\r\n          offsetX: this.offsetX,\r\n          offsetY: this.offsetY,\r\n          gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\r\n        };\r\n        fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n\r\n        return object;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of an gradient\r\n       * @param {Object} object Object to create a gradient for\r\n       * @return {String} SVG representation of an gradient (linear/radial)\r\n       */\r\n      toSVG: function(object) {\r\n        var coords = clone(this.coords, true), i, len,\r\n            markup, commonAttributes, colorStops = clone(this.colorStops, true),\r\n            needsSwap = coords.r1 > coords.r2,\r\n            offsetX = object.width / 2, offsetY = object.height / 2;\r\n        // colorStops must be sorted ascending\r\n        colorStops.sort(function(a, b) {\r\n          return a.offset - b.offset;\r\n        });\r\n        if (object.type === 'path') {\r\n          offsetX -= object.pathOffset.x;\r\n          offsetY -= object.pathOffset.y;\r\n        }\r\n        for (var prop in coords) {\r\n          if (prop === 'x1' || prop === 'x2') {\r\n            coords[prop] += this.offsetX - offsetX;\r\n          }\r\n          else if (prop === 'y1' || prop === 'y2') {\r\n            coords[prop] += this.offsetY - offsetY;\r\n          }\r\n        }\r\n\r\n        commonAttributes = 'id=\"SVGID_' + this.id +\r\n                       '\" gradientUnits=\"userSpaceOnUse\"';\r\n        if (this.gradientTransform) {\r\n          commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\r\n        }\r\n        if (this.type === 'linear') {\r\n          markup = [\r\n            '<linearGradient ',\r\n            commonAttributes,\r\n            ' x1=\"', coords.x1,\r\n            '\" y1=\"', coords.y1,\r\n            '\" x2=\"', coords.x2,\r\n            '\" y2=\"', coords.y2,\r\n            '\">\\n'\r\n          ];\r\n        }\r\n        else if (this.type === 'radial') {\r\n          // svg radial gradient has just 1 radius. the biggest.\r\n          markup = [\r\n            '<radialGradient ',\r\n            commonAttributes,\r\n            ' cx=\"', needsSwap ? coords.x1 : coords.x2,\r\n            '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\r\n            '\" r=\"', needsSwap ? coords.r1 : coords.r2,\r\n            '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\r\n            '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\r\n            '\">\\n'\r\n          ];\r\n        }\r\n\r\n        if (this.type === 'radial') {\r\n          if (needsSwap) {\r\n            // svg goes from internal to external radius. if radius are inverted, swap color stops.\r\n            colorStops = colorStops.concat();\r\n            colorStops.reverse();\r\n            for (i = 0, len = colorStops.length; i < len; i++) {\r\n              colorStops[i].offset = 1 - colorStops[i].offset;\r\n            }\r\n          }\r\n          var minRadius = Math.min(coords.r1, coords.r2);\r\n          if (minRadius > 0) {\r\n            // i have to shift all colorStops and add new one in 0.\r\n            var maxRadius = Math.max(coords.r1, coords.r2),\r\n                percentageShift = minRadius / maxRadius;\r\n            for (i = 0, len = colorStops.length; i < len; i++) {\r\n              colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\r\n            }\r\n          }\r\n        }\r\n\r\n        for (i = 0, len = colorStops.length; i < len; i++) {\r\n          var colorStop = colorStops[i];\r\n          markup.push(\r\n            '<stop ',\r\n            'offset=\"', (colorStop.offset * 100) + '%',\r\n            '\" style=\"stop-color:', colorStop.color,\r\n            (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\r\n            '\"/>\\n'\r\n          );\r\n        }\r\n\r\n        markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\r\n\r\n        return markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns an instance of CanvasGradient\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @return {CanvasGradient}\r\n       */\r\n      toLive: function(ctx) {\r\n        var gradient, coords = fabric.util.object.clone(this.coords), i, len;\r\n\r\n        if (!this.type) {\r\n          return;\r\n        }\r\n\r\n        if (this.type === 'linear') {\r\n          gradient = ctx.createLinearGradient(\r\n            coords.x1, coords.y1, coords.x2, coords.y2);\r\n        }\r\n        else if (this.type === 'radial') {\r\n          gradient = ctx.createRadialGradient(\r\n            coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\r\n        }\r\n\r\n        for (i = 0, len = this.colorStops.length; i < len; i++) {\r\n          var color = this.colorStops[i].color,\r\n              opacity = this.colorStops[i].opacity,\r\n              offset = this.colorStops[i].offset;\r\n\r\n          if (typeof opacity !== 'undefined') {\r\n            color = new fabric.Color(color).setAlpha(opacity).toRgba();\r\n          }\r\n          gradient.addColorStop(offset, color);\r\n        }\r\n\r\n        return gradient;\r\n      }\r\n    });\r\n\r\n    fabric.util.object.extend(fabric.Gradient, {\r\n\r\n      /* _FROM_SVG_START_ */\r\n      /**\r\n       * Returns {@link fabric.Gradient} instance from an SVG element\r\n       * @static\r\n       * @memberOf fabric.Gradient\r\n       * @param {SVGGradientElement} el SVG gradient element\r\n       * @param {fabric.Object} instance\r\n       * @return {fabric.Gradient} Gradient instance\r\n       * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\r\n       * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\r\n       */\r\n      fromElement: function(el, instance) {\r\n        /**\r\n         *  @example:\r\n         *\r\n         *  <linearGradient id=\"linearGrad1\">\r\n         *    <stop offset=\"0%\" stop-color=\"white\"/>\r\n         *    <stop offset=\"100%\" stop-color=\"black\"/>\r\n         *  </linearGradient>\r\n         *\r\n         *  OR\r\n         *\r\n         *  <linearGradient id=\"linearGrad2\">\r\n         *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\r\n         *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\r\n         *  </linearGradient>\r\n         *\r\n         *  OR\r\n         *\r\n         *  <radialGradient id=\"radialGrad1\">\r\n         *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n         *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\r\n         *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n         *  </radialGradient>\r\n         *\r\n         *  OR\r\n         *\r\n         *  <radialGradient id=\"radialGrad2\">\r\n         *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\r\n         *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\r\n         *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\r\n         *  </radialGradient>\r\n         *\r\n         */\r\n\r\n        var colorStopEls = el.getElementsByTagName('stop'),\r\n            type,\r\n            gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\r\n            gradientTransform = el.getAttribute('gradientTransform'),\r\n            colorStops = [],\r\n            coords, ellipseMatrix, i;\r\n\r\n        if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\r\n          type = 'linear';\r\n        }\r\n        else {\r\n          type = 'radial';\r\n        }\r\n\r\n        if (type === 'linear') {\r\n          coords = getLinearCoords(el);\r\n        }\r\n        else if (type === 'radial') {\r\n          coords = getRadialCoords(el);\r\n        }\r\n\r\n        for (i = colorStopEls.length; i--; ) {\r\n          colorStops.push(getColorStop(colorStopEls[i]));\r\n        }\r\n\r\n        ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\r\n\r\n        var gradient = new fabric.Gradient({\r\n          type: type,\r\n          coords: coords,\r\n          colorStops: colorStops,\r\n          offsetX: -instance.left,\r\n          offsetY: -instance.top\r\n        });\r\n\r\n        if (gradientTransform || ellipseMatrix !== '') {\r\n          gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\r\n        }\r\n\r\n        return gradient;\r\n      },\r\n      /* _FROM_SVG_END_ */\r\n\r\n      /**\r\n       * Returns {@link fabric.Gradient} instance from its object representation\r\n       * @static\r\n       * @memberOf fabric.Gradient\r\n       * @param {Object} obj\r\n       * @param {Object} [options] Options object\r\n       */\r\n      forObject: function(obj, options) {\r\n        options || (options = { });\r\n        _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\r\n        return new fabric.Gradient(options);\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function _convertPercentUnitsToValues(object, options, gradientUnits) {\r\n      var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\r\n      for (var prop in options) {\r\n        if (options[prop] === 'Infinity') {\r\n          options[prop] = 1;\r\n        }\r\n        else if (options[prop] === '-Infinity') {\r\n          options[prop] = 0;\r\n        }\r\n        propValue = parseFloat(options[prop], 10);\r\n        if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\r\n          multFactor = 0.01;\r\n        }\r\n        else {\r\n          multFactor = 1;\r\n        }\r\n        if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\r\n          multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\r\n          addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\r\n        }\r\n        else if (prop === 'y1' || prop === 'y2') {\r\n          multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\r\n          addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\r\n        }\r\n        options[prop] = propValue * multFactor + addFactor;\r\n      }\r\n      if (object.type === 'ellipse' &&\r\n          options.r2 !== null &&\r\n          gradientUnits === 'objectBoundingBox' &&\r\n          object.rx !== object.ry) {\r\n\r\n        var scaleFactor = object.ry / object.rx;\r\n        ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\r\n        if (options.y1) {\r\n          options.y1 /= scaleFactor;\r\n        }\r\n        if (options.y2) {\r\n          options.y2 /= scaleFactor;\r\n        }\r\n      }\r\n      return ellipseMatrix;\r\n    }\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n\r\n    var toFixed = fabric.util.toFixed;\r\n\r\n    /**\r\n     * Pattern class\r\n     * @class fabric.Pattern\r\n     * @see {@link http://fabricjs.com/patterns|Pattern demo}\r\n     * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\r\n     * @see {@link fabric.Pattern#initialize} for constructor definition\r\n     */\r\n\r\n\r\n    fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\r\n\r\n      /**\r\n       * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\r\n       * @type String\r\n       * @default\r\n       */\r\n      repeat: 'repeat',\r\n\r\n      /**\r\n       * Pattern horizontal offset from object's left/top corner\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetX: 0,\r\n\r\n      /**\r\n       * Pattern vertical offset from object's left/top corner\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetY: 0,\r\n\r\n      /**\r\n       * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\r\n       * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\r\n       * @type String\r\n       * @default\r\n       */\r\n      crossOrigin: '',\r\n\r\n      /**\r\n       * transform matrix to change the pattern, imported from svgs.\r\n       * @type Array\r\n       * @default\r\n       */\r\n      patternTransform: null,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       * @param {Function} [callback] function to invoke after callback init.\r\n       * @return {fabric.Pattern} thisArg\r\n       */\r\n      initialize: function(options, callback) {\r\n        options || (options = { });\r\n\r\n        this.id = fabric.Object.__uid++;\r\n        this.setOptions(options);\r\n        if (!options.source || (options.source && typeof options.source !== 'string')) {\r\n          callback && callback(this);\r\n          return;\r\n        }\r\n        // function string\r\n        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\r\n          this.source = new Function(fabric.util.getFunctionBody(options.source));\r\n          callback && callback(this);\r\n        }\r\n        else {\r\n          // img src string\r\n          var _this = this;\r\n          this.source = fabric.util.createImage();\r\n          fabric.util.loadImage(options.source, function(img) {\r\n            _this.source = img;\r\n            callback && callback(_this);\r\n          }, null, this.crossOrigin);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of a pattern\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of a pattern instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n            source, object;\r\n\r\n        // callback\r\n        if (typeof this.source === 'function') {\r\n          source = String(this.source);\r\n        }\r\n        // <img> element\r\n        else if (typeof this.source.src === 'string') {\r\n          source = this.source.src;\r\n        }\r\n        // <canvas> element\r\n        else if (typeof this.source === 'object' && this.source.toDataURL) {\r\n          source = this.source.toDataURL();\r\n        }\r\n\r\n        object = {\r\n          type: 'pattern',\r\n          source: source,\r\n          repeat: this.repeat,\r\n          crossOrigin: this.crossOrigin,\r\n          offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\r\n          offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\r\n          patternTransform: this.patternTransform ? this.patternTransform.concat() : null\r\n        };\r\n        fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n\r\n        return object;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of a pattern\r\n       * @param {fabric.Object} object\r\n       * @return {String} SVG representation of a pattern\r\n       */\r\n      toSVG: function(object) {\r\n        var patternSource = typeof this.source === 'function' ? this.source() : this.source,\r\n            patternWidth = patternSource.width / object.width,\r\n            patternHeight = patternSource.height / object.height,\r\n            patternOffsetX = this.offsetX / object.width,\r\n            patternOffsetY = this.offsetY / object.height,\r\n            patternImgSrc = '';\r\n        if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\r\n          patternHeight = 1;\r\n          if (patternOffsetY) {\r\n            patternHeight += Math.abs(patternOffsetY);\r\n          }\r\n        }\r\n        if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\r\n          patternWidth = 1;\r\n          if (patternOffsetX) {\r\n            patternWidth += Math.abs(patternOffsetX);\r\n          }\r\n\r\n        }\r\n        if (patternSource.src) {\r\n          patternImgSrc = patternSource.src;\r\n        }\r\n        else if (patternSource.toDataURL) {\r\n          patternImgSrc = patternSource.toDataURL();\r\n        }\r\n\r\n        return '<pattern id=\"SVGID_' + this.id +\r\n                      '\" x=\"' + patternOffsetX +\r\n                      '\" y=\"' + patternOffsetY +\r\n                      '\" width=\"' + patternWidth +\r\n                      '\" height=\"' + patternHeight + '\">\\n' +\r\n                 '<image x=\"0\" y=\"0\"' +\r\n                        ' width=\"' + patternSource.width +\r\n                        '\" height=\"' + patternSource.height +\r\n                        '\" xlink:href=\"' + patternImgSrc +\r\n                 '\"></image>\\n' +\r\n               '</pattern>\\n';\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      setOptions: function(options) {\r\n        for (var prop in options) {\r\n          this[prop] = options[prop];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns an instance of CanvasPattern\r\n       * @param {CanvasRenderingContext2D} ctx Context to create pattern\r\n       * @return {CanvasPattern}\r\n       */\r\n      toLive: function(ctx) {\r\n        var source = typeof this.source === 'function' ? this.source() : this.source;\r\n\r\n        // if the image failed to load, return, and allow rest to continue loading\r\n        if (!source) {\r\n          return '';\r\n        }\r\n\r\n        // if an image\r\n        if (typeof source.src !== 'undefined') {\r\n          if (!source.complete) {\r\n            return '';\r\n          }\r\n          if (source.naturalWidth === 0 || source.naturalHeight === 0) {\r\n            return '';\r\n          }\r\n        }\r\n        return ctx.createPattern(source, this.repeat);\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        toFixed = fabric.util.toFixed;\r\n\r\n    if (fabric.Shadow) {\r\n      fabric.warn('fabric.Shadow is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Shadow class\r\n     * @class fabric.Shadow\r\n     * @see {@link http://fabricjs.com/shadows|Shadow demo}\r\n     * @see {@link fabric.Shadow#initialize} for constructor definition\r\n     */\r\n    fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\r\n\r\n      /**\r\n       * Shadow color\r\n       * @type String\r\n       * @default\r\n       */\r\n      color: 'rgb(0,0,0)',\r\n\r\n      /**\r\n       * Shadow blur\r\n       * @type Number\r\n       */\r\n      blur: 0,\r\n\r\n      /**\r\n       * Shadow horizontal offset\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetX: 0,\r\n\r\n      /**\r\n       * Shadow vertical offset\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetY: 0,\r\n\r\n      /**\r\n       * Whether the shadow should affect stroke operations\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      affectStroke: false,\r\n\r\n      /**\r\n       * Indicates whether toObject should include default values\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      includeDefaultValues: true,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\r\n       * @return {fabric.Shadow} thisArg\r\n       */\r\n      initialize: function(options) {\r\n\r\n        if (typeof options === 'string') {\r\n          options = this._parseShadow(options);\r\n        }\r\n\r\n        for (var prop in options) {\r\n          this[prop] = options[prop];\r\n        }\r\n\r\n        this.id = fabric.Object.__uid++;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} shadow Shadow value to parse\r\n       * @return {Object} Shadow object with color, offsetX, offsetY and blur\r\n       */\r\n      _parseShadow: function(shadow) {\r\n        var shadowStr = shadow.trim(),\r\n            offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\r\n            color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\r\n\r\n        return {\r\n          color: color.trim(),\r\n          offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\r\n          offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\r\n          blur: parseInt(offsetsAndBlur[3], 10) || 0\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns a string representation of an instance\r\n       * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\r\n       * @return {String} Returns CSS3 text-shadow declaration\r\n       */\r\n      toString: function() {\r\n        return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of a shadow\r\n       * @param {fabric.Object} object\r\n       * @return {String} SVG representation of a shadow\r\n       */\r\n      toSVG: function(object) {\r\n        var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n            offset = fabric.util.rotateVector(\r\n              { x: this.offsetX, y: this.offsetY },\r\n              fabric.util.degreesToRadians(-object.angle)),\r\n            BLUR_BOX = 20, color = new fabric.Color(this.color);\r\n\r\n        if (object.width && object.height) {\r\n          //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\r\n          // we add some extra space to filter box to contain the blur ( 20 )\r\n          fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\r\n          fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\r\n        }\r\n        if (object.flipX) {\r\n          offset.x *= -1;\r\n        }\r\n        if (object.flipY) {\r\n          offset.y *= -1;\r\n        }\r\n\r\n        return (\r\n          '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\r\n            'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\r\n            '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\r\n              toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\r\n            '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\r\n            '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\r\n            '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\r\n            '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\r\n            '\\t<feMerge>\\n' +\r\n              '\\t\\t<feMergeNode></feMergeNode>\\n' +\r\n              '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\r\n            '\\t</feMerge>\\n' +\r\n          '</filter>\\n');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns object representation of a shadow\r\n       * @return {Object} Object representation of a shadow instance\r\n       */\r\n      toObject: function() {\r\n        if (this.includeDefaultValues) {\r\n          return {\r\n            color: this.color,\r\n            blur: this.blur,\r\n            offsetX: this.offsetX,\r\n            offsetY: this.offsetY,\r\n            affectStroke: this.affectStroke\r\n          };\r\n        }\r\n        var obj = { }, proto = fabric.Shadow.prototype;\r\n\r\n        ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\r\n          if (this[prop] !== proto[prop]) {\r\n            obj[prop] = this[prop];\r\n          }\r\n        }, this);\r\n\r\n        return obj;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Shadow\r\n     */\r\n    // eslint-disable-next-line max-len\r\n    fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function () {\r\n\r\n    'use strict';\r\n\r\n    if (fabric.StaticCanvas) {\r\n      fabric.warn('fabric.StaticCanvas is already defined.');\r\n      return;\r\n    }\r\n\r\n    // aliases for faster resolution\r\n    var extend = fabric.util.object.extend,\r\n        getElementOffset = fabric.util.getElementOffset,\r\n        removeFromArray = fabric.util.removeFromArray,\r\n        toFixed = fabric.util.toFixed,\r\n        transformPoint = fabric.util.transformPoint,\r\n        invertTransform = fabric.util.invertTransform,\r\n\r\n        CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\r\n\r\n    /**\r\n     * Static canvas class\r\n     * @class fabric.StaticCanvas\r\n     * @mixes fabric.Collection\r\n     * @mixes fabric.Observable\r\n     * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\r\n     * @see {@link fabric.StaticCanvas#initialize} for constructor definition\r\n     * @fires before:render\r\n     * @fires after:render\r\n     * @fires canvas:cleared\r\n     * @fires object:added\r\n     * @fires object:removed\r\n     */\r\n    fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(el, options) {\r\n        options || (options = { });\r\n        this.renderAndResetBound = this.renderAndReset.bind(this);\r\n        this.requestRenderAllBound = this.requestRenderAll.bind(this);\r\n        this._initStatic(el, options);\r\n      },\r\n\r\n      /**\r\n       * Background color of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\r\n       * @type {(String|fabric.Pattern)}\r\n       * @default\r\n       */\r\n      backgroundColor: '',\r\n\r\n      /**\r\n       * Background image of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\r\n       * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\r\n       * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\r\n       * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\r\n       * @type fabric.Image\r\n       * @default\r\n       */\r\n      backgroundImage: null,\r\n\r\n      /**\r\n       * Overlay color of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\r\n       * @since 1.3.9\r\n       * @type {(String|fabric.Pattern)}\r\n       * @default\r\n       */\r\n      overlayColor: '',\r\n\r\n      /**\r\n       * Overlay image of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\r\n       * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\r\n       * and \"overlayImageTop\" properties are deprecated since 1.3.9.\r\n       * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\r\n       * @type fabric.Image\r\n       * @default\r\n       */\r\n      overlayImage: null,\r\n\r\n      /**\r\n       * Indicates whether toObject/toDatalessObject should include default values\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      includeDefaultValues: true,\r\n\r\n      /**\r\n       * Indicates whether objects' state should be saved\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      stateful: false,\r\n\r\n      /**\r\n       * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\r\n       * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\r\n       * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\r\n       * since the renders are quequed and executed one per frame.\r\n       * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\r\n       * Left default to true to do not break documentation and old app, fiddles.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      renderOnAddRemove: true,\r\n\r\n      /**\r\n       * Function that determines clipping of entire canvas area\r\n       * Being passed context as first argument.\r\n       * If you are using code minification, ctx argument can be minified/manglied you should use\r\n       * as a workaround `var ctx = arguments[0];` in the function;\r\n       * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\r\n       * @deprecated since 2.0.0\r\n       * @type Function\r\n       * @default\r\n       */\r\n      clipTo: null,\r\n\r\n      /**\r\n       * Indicates whether object controls (borders/controls) are rendered above overlay image\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      controlsAboveOverlay: false,\r\n\r\n      /**\r\n       * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      allowTouchScrolling: false,\r\n\r\n      /**\r\n       * Indicates whether this canvas will use image smoothing, this is on by default in browsers\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      imageSmoothingEnabled: true,\r\n\r\n      /**\r\n       * The transformation (in the format of Canvas transform) which focuses the viewport\r\n       * @type Array\r\n       * @default\r\n       */\r\n      viewportTransform: fabric.iMatrix.concat(),\r\n\r\n      /**\r\n       * if set to false background image is not affected by viewport transform\r\n       * @since 1.6.3\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      backgroundVpt: true,\r\n\r\n      /**\r\n       * if set to false overlya image is not affected by viewport transform\r\n       * @since 1.6.3\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      overlayVpt: true,\r\n\r\n      /**\r\n       * Callback; invoked right before object is about to be scaled/rotated\r\n       * @deprecated since 2.3.0\r\n       * Use before:transform event\r\n       */\r\n      onBeforeScaleRotate: function () {\r\n        /* NOOP */\r\n      },\r\n\r\n      /**\r\n       * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      enableRetinaScaling: true,\r\n\r\n      /**\r\n       * Describe canvas element extension over design\r\n       * properties are tl,tr,bl,br.\r\n       * if canvas is not zoomed/panned those points are the four corner of canvas\r\n       * if canvas is viewportTransformed you those points indicate the extension\r\n       * of canvas element in plain untrasformed coordinates\r\n       * The coordinates get updated with @method calcViewportBoundaries.\r\n       * @memberOf fabric.StaticCanvas.prototype\r\n       */\r\n      vptCoords: { },\r\n\r\n      /**\r\n       * Based on vptCoords and object.aCoords, skip rendering of objects that\r\n       * are not included in current viewport.\r\n       * May greatly help in applications with crowded canvas and use of zoom/pan\r\n       * If One of the corner of the bounding box of the object is on the canvas\r\n       * the objects get rendered.\r\n       * @memberOf fabric.StaticCanvas.prototype\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      skipOffscreen: true,\r\n\r\n      /**\r\n       * @private\r\n       * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initStatic: function(el, options) {\r\n        var cb = this.requestRenderAllBound;\r\n        this._objects = [];\r\n        this._createLowerCanvas(el);\r\n        this._initOptions(options);\r\n        this._setImageSmoothing();\r\n        // only initialize retina scaling once\r\n        if (!this.interactive) {\r\n          this._initRetinaScaling();\r\n        }\r\n\r\n        if (options.overlayImage) {\r\n          this.setOverlayImage(options.overlayImage, cb);\r\n        }\r\n        if (options.backgroundImage) {\r\n          this.setBackgroundImage(options.backgroundImage, cb);\r\n        }\r\n        if (options.backgroundColor) {\r\n          this.setBackgroundColor(options.backgroundColor, cb);\r\n        }\r\n        if (options.overlayColor) {\r\n          this.setOverlayColor(options.overlayColor, cb);\r\n        }\r\n        this.calcOffset();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _isRetinaScaling: function() {\r\n        return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} retinaScaling if applied, otherwise 1;\r\n       */\r\n      getRetinaScaling: function() {\r\n        return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _initRetinaScaling: function() {\r\n        if (!this._isRetinaScaling()) {\r\n          return;\r\n        }\r\n        this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\r\n        this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\r\n\r\n        this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\r\n      },\r\n\r\n      /**\r\n       * Calculates canvas element offset relative to the document\r\n       * This method is also attached as \"resize\" event handler of window\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      calcOffset: function () {\r\n        this._offset = getElementOffset(this.lowerCanvasEl);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\r\n       * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\r\n       * @param {Function} callback callback to invoke when image is loaded and set as an overlay\r\n       * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\r\n       * @example <caption>Normal overlayImage with left/top = 0</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   // Needed to position overlayImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>overlayImage with different properties</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\r\n       * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\r\n       *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\r\n       *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\r\n       * });\r\n       * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   width: canvas.width,\r\n       *   height: canvas.height,\r\n       *   // Needed to position overlayImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>overlayImage loaded from cross-origin</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top',\r\n       *   crossOrigin: 'anonymous'\r\n       * });\r\n       */\r\n      setOverlayImage: function (image, callback, options) {\r\n        return this.__setBgOverlayImage('overlayImage', image, callback, options);\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\r\n       * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\r\n       * @param {Function} callback Callback to invoke when image is loaded and set as background\r\n       * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\r\n       * @example <caption>Normal backgroundImage with left/top = 0</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   // Needed to position backgroundImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>backgroundImage with different properties</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\r\n       * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\r\n       *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\r\n       *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\r\n       * });\r\n       * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   width: canvas.width,\r\n       *   height: canvas.height,\r\n       *   // Needed to position backgroundImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>backgroundImage loaded from cross-origin</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top',\r\n       *   crossOrigin: 'anonymous'\r\n       * });\r\n       */\r\n      setBackgroundImage: function (image, callback, options) {\r\n        return this.__setBgOverlayImage('backgroundImage', image, callback, options);\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\r\n       * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\r\n       * @param {Function} callback Callback to invoke when foreground color is set\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\r\n       * @example <caption>Normal overlayColor - color value</caption>\r\n       * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as overlayColor</caption>\r\n       * canvas.setOverlayColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\r\n       * }, canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\r\n       * canvas.setOverlayColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n       *   repeat: 'repeat',\r\n       *   offsetX: 200,\r\n       *   offsetY: 100\r\n       * }, canvas.renderAll.bind(canvas));\r\n       */\r\n      setOverlayColor: function(overlayColor, callback) {\r\n        return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\r\n       * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\r\n       * @param {Function} callback Callback to invoke when background color is set\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\r\n       * @example <caption>Normal backgroundColor - color value</caption>\r\n       * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as backgroundColor</caption>\r\n       * canvas.setBackgroundColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\r\n       * }, canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\r\n       * canvas.setBackgroundColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n       *   repeat: 'repeat',\r\n       *   offsetX: 200,\r\n       *   offsetY: 100\r\n       * }, canvas.renderAll.bind(canvas));\r\n       */\r\n      setBackgroundColor: function(backgroundColor, callback) {\r\n        return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\r\n       */\r\n      _setImageSmoothing: function() {\r\n        var ctx = this.getContext();\r\n\r\n        ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\r\n          || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\r\n        ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\r\n       * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\r\n       * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\r\n       * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\r\n       * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\r\n       */\r\n      __setBgOverlayImage: function(property, image, callback, options) {\r\n        if (typeof image === 'string') {\r\n          fabric.util.loadImage(image, function(img) {\r\n            img && (this[property] = new fabric.Image(img, options));\r\n            callback && callback(img);\r\n          }, this, options && options.crossOrigin);\r\n        }\r\n        else {\r\n          options && image.setOptions(options);\r\n          this[property] = image;\r\n          callback && callback(image);\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\r\n       * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\r\n       * @param {(Object|String|null)} color Object with pattern information, color value or null\r\n       * @param {Function} [callback] Callback is invoked when color is set\r\n       */\r\n      __setBgOverlayColor: function(property, color, callback) {\r\n        this[property] = color;\r\n        this._initGradient(color, property);\r\n        this._initPattern(color, property, callback);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createCanvasElement: function() {\r\n        var element = fabric.util.createCanvasElement();\r\n        if (!element) {\r\n          throw CANVAS_INIT_ERROR;\r\n        }\r\n        if (!element.style) {\r\n          element.style = { };\r\n        }\r\n        if (typeof element.getContext === 'undefined') {\r\n          throw CANVAS_INIT_ERROR;\r\n        }\r\n        return element;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initOptions: function (options) {\r\n        this._setOptions(options);\r\n\r\n        this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\r\n        this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\r\n\r\n        if (!this.lowerCanvasEl.style) {\r\n          return;\r\n        }\r\n\r\n        this.lowerCanvasEl.width = this.width;\r\n        this.lowerCanvasEl.height = this.height;\r\n\r\n        this.lowerCanvasEl.style.width = this.width + 'px';\r\n        this.lowerCanvasEl.style.height = this.height + 'px';\r\n\r\n        this.viewportTransform = this.viewportTransform.slice();\r\n      },\r\n\r\n      /**\r\n       * Creates a bottom canvas\r\n       * @private\r\n       * @param {HTMLElement} [canvasEl]\r\n       */\r\n      _createLowerCanvas: function (canvasEl) {\r\n        // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\r\n        if (canvasEl && canvasEl.getContext) {\r\n          this.lowerCanvasEl = canvasEl;\r\n        }\r\n        else {\r\n          this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\r\n        }\r\n\r\n        fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\r\n\r\n        if (this.interactive) {\r\n          this._applyCanvasStyle(this.lowerCanvasEl);\r\n        }\r\n\r\n        this.contextContainer = this.lowerCanvasEl.getContext('2d');\r\n      },\r\n\r\n      /**\r\n       * Returns canvas width (in px)\r\n       * @return {Number}\r\n       */\r\n      getWidth: function () {\r\n        return this.width;\r\n      },\r\n\r\n      /**\r\n       * Returns canvas height (in px)\r\n       * @return {Number}\r\n       */\r\n      getHeight: function () {\r\n        return this.height;\r\n      },\r\n\r\n      /**\r\n       * Sets width of this canvas instance\r\n       * @param {Number|String} value                         Value to set width to\r\n       * @param {Object}        [options]                     Options object\r\n       * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n       * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setWidth: function (value, options) {\r\n        return this.setDimensions({ width: value }, options);\r\n      },\r\n\r\n      /**\r\n       * Sets height of this canvas instance\r\n       * @param {Number|String} value                         Value to set height to\r\n       * @param {Object}        [options]                     Options object\r\n       * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n       * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setHeight: function (value, options) {\r\n        return this.setDimensions({ height: value }, options);\r\n      },\r\n\r\n      /**\r\n       * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\r\n       * @param {Object}        dimensions                    Object with width/height properties\r\n       * @param {Number|String} [dimensions.width]            Width of canvas element\r\n       * @param {Number|String} [dimensions.height]           Height of canvas element\r\n       * @param {Object}        [options]                     Options object\r\n       * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n       * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      setDimensions: function (dimensions, options) {\r\n        var cssValue;\r\n\r\n        options = options || {};\r\n\r\n        for (var prop in dimensions) {\r\n          cssValue = dimensions[prop];\r\n\r\n          if (!options.cssOnly) {\r\n            this._setBackstoreDimension(prop, dimensions[prop]);\r\n            cssValue += 'px';\r\n            this.hasLostContext = true;\r\n          }\r\n\r\n          if (!options.backstoreOnly) {\r\n            this._setCssDimension(prop, cssValue);\r\n          }\r\n        }\r\n        if (this._isCurrentlyDrawing) {\r\n          this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\r\n        }\r\n        this._initRetinaScaling();\r\n        this._setImageSmoothing();\r\n        this.calcOffset();\r\n\r\n        if (!options.cssOnly) {\r\n          this.requestRenderAll();\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Helper for setting width/height\r\n       * @private\r\n       * @param {String} prop property (width|height)\r\n       * @param {Number} value value to set property to\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      _setBackstoreDimension: function (prop, value) {\r\n        this.lowerCanvasEl[prop] = value;\r\n\r\n        if (this.upperCanvasEl) {\r\n          this.upperCanvasEl[prop] = value;\r\n        }\r\n\r\n        if (this.cacheCanvasEl) {\r\n          this.cacheCanvasEl[prop] = value;\r\n        }\r\n\r\n        this[prop] = value;\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Helper for setting css width/height\r\n       * @private\r\n       * @param {String} prop property (width|height)\r\n       * @param {String} value value to set property to\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      _setCssDimension: function (prop, value) {\r\n        this.lowerCanvasEl.style[prop] = value;\r\n\r\n        if (this.upperCanvasEl) {\r\n          this.upperCanvasEl.style[prop] = value;\r\n        }\r\n\r\n        if (this.wrapperEl) {\r\n          this.wrapperEl.style[prop] = value;\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns canvas zoom level\r\n       * @return {Number}\r\n       */\r\n      getZoom: function () {\r\n        return this.viewportTransform[0];\r\n      },\r\n\r\n      /**\r\n       * Sets viewport transform of this canvas instance\r\n       * @param {Array} vpt the transform in the form of context.transform\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setViewportTransform: function (vpt) {\r\n        var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\r\n        this.viewportTransform = vpt;\r\n        for (i = 0, len = this._objects.length; i < len; i++) {\r\n          object = this._objects[i];\r\n          object.group || object.setCoords(ignoreVpt, skipAbsolute);\r\n        }\r\n        if (activeObject && activeObject.type === 'activeSelection') {\r\n          activeObject.setCoords(ignoreVpt, skipAbsolute);\r\n        }\r\n        this.calcViewportBoundaries();\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets zoom level of this canvas instance, zoom centered around point\r\n       * @param {fabric.Point} point to zoom with respect to\r\n       * @param {Number} value to set zoom to, less than 1 zooms out\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      zoomToPoint: function (point, value) {\r\n        // TODO: just change the scale, preserve other transformations\r\n        var before = point, vpt = this.viewportTransform.slice(0);\r\n        point = transformPoint(point, invertTransform(this.viewportTransform));\r\n        vpt[0] = value;\r\n        vpt[3] = value;\r\n        var after = transformPoint(point, vpt);\r\n        vpt[4] += before.x - after.x;\r\n        vpt[5] += before.y - after.y;\r\n        return this.setViewportTransform(vpt);\r\n      },\r\n\r\n      /**\r\n       * Sets zoom level of this canvas instance\r\n       * @param {Number} value to set zoom to, less than 1 zooms out\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setZoom: function (value) {\r\n        this.zoomToPoint(new fabric.Point(0, 0), value);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Pan viewport so as to place point at top left corner of canvas\r\n       * @param {fabric.Point} point to move to\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      absolutePan: function (point) {\r\n        var vpt = this.viewportTransform.slice(0);\r\n        vpt[4] = -point.x;\r\n        vpt[5] = -point.y;\r\n        return this.setViewportTransform(vpt);\r\n      },\r\n\r\n      /**\r\n       * Pans viewpoint relatively\r\n       * @param {fabric.Point} point (position vector) to move by\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      relativePan: function (point) {\r\n        return this.absolutePan(new fabric.Point(\r\n          -point.x - this.viewportTransform[4],\r\n          -point.y - this.viewportTransform[5]\r\n        ));\r\n      },\r\n\r\n      /**\r\n       * Returns &lt;canvas> element corresponding to this instance\r\n       * @return {HTMLCanvasElement}\r\n       */\r\n      getElement: function () {\r\n        return this.lowerCanvasEl;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} obj Object that was added\r\n       */\r\n      _onObjectAdded: function(obj) {\r\n        this.stateful && obj.setupState();\r\n        obj._set('canvas', this);\r\n        obj.setCoords();\r\n        this.fire('object:added', { target: obj });\r\n        obj.fire('added');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} obj Object that was removed\r\n       */\r\n      _onObjectRemoved: function(obj) {\r\n        this.fire('object:removed', { target: obj });\r\n        obj.fire('removed');\r\n        delete obj.canvas;\r\n      },\r\n\r\n      /**\r\n       * Clears specified context of canvas element\r\n       * @param {CanvasRenderingContext2D} ctx Context to clear\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      clearContext: function(ctx) {\r\n        ctx.clearRect(0, 0, this.width, this.height);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns context of canvas where objects are drawn\r\n       * @return {CanvasRenderingContext2D}\r\n       */\r\n      getContext: function () {\r\n        return this.contextContainer;\r\n      },\r\n\r\n      /**\r\n       * Clears all contexts (background, main, top) of an instance\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      clear: function () {\r\n        this._objects.length = 0;\r\n        this.backgroundImage = null;\r\n        this.overlayImage = null;\r\n        this.backgroundColor = '';\r\n        this.overlayColor = '';\r\n        if (this._hasITextHandlers) {\r\n          this.off('mouse:up', this._mouseUpITextHandler);\r\n          this._iTextInstances = null;\r\n          this._hasITextHandlers = false;\r\n        }\r\n        this.clearContext(this.contextContainer);\r\n        this.fire('canvas:cleared');\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Renders the canvas\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderAll: function () {\r\n        var canvasToDrawOn = this.contextContainer;\r\n        this.renderCanvas(canvasToDrawOn, this._objects);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Function created to be instance bound at initialization\r\n       * used in requestAnimationFrame rendering\r\n       * Let the fabricJS call it. If you call it manually you could have more\r\n       * animationFrame stacking on to of each other\r\n       * for an imperative rendering, use canvas.renderAll\r\n       * @private\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderAndReset: function() {\r\n        this.isRendering = 0;\r\n        this.renderAll();\r\n      },\r\n\r\n      /**\r\n       * Append a renderAll request to next animation frame.\r\n       * unless one is already in progress, in that case nothing is done\r\n       * a boolean flag will avoid appending more.\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      requestRenderAll: function () {\r\n        if (!this.isRendering) {\r\n          this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Calculate the position of the 4 corner of canvas with current viewportTransform.\r\n       * helps to determinate when an object is in the current rendering viewport using\r\n       * object absolute coordinates ( aCoords )\r\n       * @return {Object} points.tl\r\n       * @chainable\r\n       */\r\n      calcViewportBoundaries: function() {\r\n        var points = { }, width = this.width, height = this.height,\r\n            iVpt = invertTransform(this.viewportTransform);\r\n        points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\r\n        points.br = transformPoint({ x: width, y: height }, iVpt);\r\n        points.tr = new fabric.Point(points.br.x, points.tl.y);\r\n        points.bl = new fabric.Point(points.tl.x, points.br.y);\r\n        this.vptCoords = points;\r\n        return points;\r\n      },\r\n\r\n      cancelRequestedRender: function() {\r\n        if (this.isRendering) {\r\n          fabric.util.cancelAnimFrame(this.isRendering);\r\n          this.isRendering = 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Renders background, objects, overlay and controls.\r\n       * @param {CanvasRenderingContext2D} ctx\r\n       * @param {Array} objects to render\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderCanvas: function(ctx, objects) {\r\n        var v = this.viewportTransform;\r\n        this.cancelRequestedRender();\r\n        this.calcViewportBoundaries();\r\n        this.clearContext(ctx);\r\n        this.fire('before:render');\r\n        if (this.clipTo) {\r\n          fabric.util.clipContext(this, ctx);\r\n        }\r\n        this._renderBackground(ctx);\r\n\r\n        ctx.save();\r\n        //apply viewport transform once for all rendering process\r\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        this._renderObjects(ctx, objects);\r\n        ctx.restore();\r\n        if (!this.controlsAboveOverlay && this.interactive) {\r\n          this.drawControls(ctx);\r\n        }\r\n        if (this.clipTo) {\r\n          ctx.restore();\r\n        }\r\n        this._renderOverlay(ctx);\r\n        if (this.controlsAboveOverlay && this.interactive) {\r\n          this.drawControls(ctx);\r\n        }\r\n        this.fire('after:render');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Array} objects to render\r\n       */\r\n      _renderObjects: function(ctx, objects) {\r\n        var i, len;\r\n        for (i = 0, len = objects.length; i < len; ++i) {\r\n          objects[i] && objects[i].render(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {string} property 'background' or 'overlay'\r\n       */\r\n      _renderBackgroundOrOverlay: function(ctx, property) {\r\n        var object = this[property + 'Color'], v;\r\n        if (object) {\r\n          ctx.fillStyle = object.toLive\r\n            ? object.toLive(ctx, this)\r\n            : object;\r\n\r\n          ctx.fillRect(\r\n            object.offsetX || 0,\r\n            object.offsetY || 0,\r\n            this.width,\r\n            this.height);\r\n        }\r\n        object = this[property + 'Image'];\r\n        if (object) {\r\n          if (this[property + 'Vpt']) {\r\n            v = this.viewportTransform;\r\n            ctx.save();\r\n            ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n          }\r\n          object.render(ctx);\r\n          this[property + 'Vpt'] && ctx.restore();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderBackground: function(ctx) {\r\n        this._renderBackgroundOrOverlay(ctx, 'background');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderOverlay: function(ctx) {\r\n        this._renderBackgroundOrOverlay(ctx, 'overlay');\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of a center of canvas.\r\n       * Returned value is an object with top and left properties\r\n       * @return {Object} object with \"top\" and \"left\" number values\r\n       */\r\n      getCenter: function () {\r\n        return {\r\n          top: this.height / 2,\r\n          left: this.width / 2\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally in the canvas\r\n       * @param {fabric.Object} object Object to center horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       */\r\n      centerObjectH: function (object) {\r\n        return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically in the canvas\r\n       * @param {fabric.Object} object Object to center vertically\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      centerObjectV: function (object) {\r\n        return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically and horizontally in the canvas\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      centerObject: function(object) {\r\n        var center = this.getCenter();\r\n\r\n        return this._centerObject(object, new fabric.Point(center.left, center.top));\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically and horizontally in the viewport\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterObject: function(object) {\r\n        var vpCenter = this.getVpCenter();\r\n\r\n        return this._centerObject(object, vpCenter);\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally in the viewport, object.top is unchanged\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterObjectH: function(object) {\r\n        var vpCenter = this.getVpCenter();\r\n        this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object Vertically in the viewport, object.top is unchanged\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterObjectV: function(object) {\r\n        var vpCenter = this.getVpCenter();\r\n\r\n        return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\r\n      },\r\n\r\n      /**\r\n       * Calculate the point in canvas that correspond to the center of actual viewport.\r\n       * @return {fabric.Point} vpCenter, viewport center\r\n       * @chainable\r\n       */\r\n      getVpCenter: function() {\r\n        var center = this.getCenter(),\r\n            iVpt = invertTransform(this.viewportTransform);\r\n        return transformPoint({ x: center.left, y: center.top }, iVpt);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} object Object to center\r\n       * @param {fabric.Point} center Center point\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      _centerObject: function(object, center) {\r\n        object.setPositionByOrigin(center, 'center', 'center');\r\n        object.setCoords();\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returs dataless JSON representation of canvas\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {String} json string\r\n       */\r\n      toDatalessJSON: function (propertiesToInclude) {\r\n        return this.toDatalessObject(propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of canvas\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function (propertiesToInclude) {\r\n        return this._toObjectMethod('toObject', propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * Returns dataless object representation of canvas\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toDatalessObject: function (propertiesToInclude) {\r\n        return this._toObjectMethod('toDatalessObject', propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObjectMethod: function (methodName, propertiesToInclude) {\r\n\r\n        var data = {\r\n          version: fabric.version,\r\n          objects: this._toObjects(methodName, propertiesToInclude)\r\n        };\r\n\r\n        extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\r\n\r\n        fabric.util.populateWithProperties(this, data, propertiesToInclude);\r\n\r\n        return data;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObjects: function(methodName, propertiesToInclude) {\r\n        return this._objects.filter(function(object) {\r\n          return !object.excludeFromExport;\r\n        }).map(function(instance) {\r\n          return this._toObject(instance, methodName, propertiesToInclude);\r\n        }, this);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObject: function(instance, methodName, propertiesToInclude) {\r\n        var originalValue;\r\n\r\n        if (!this.includeDefaultValues) {\r\n          originalValue = instance.includeDefaultValues;\r\n          instance.includeDefaultValues = false;\r\n        }\r\n\r\n        var object = instance[methodName](propertiesToInclude);\r\n        if (!this.includeDefaultValues) {\r\n          instance.includeDefaultValues = originalValue;\r\n        }\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __serializeBgOverlay: function(methodName, propertiesToInclude) {\r\n        var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\r\n\r\n        if (this.backgroundColor) {\r\n          data.background = this.backgroundColor.toObject\r\n            ? this.backgroundColor.toObject(propertiesToInclude)\r\n            : this.backgroundColor;\r\n        }\r\n\r\n        if (this.overlayColor) {\r\n          data.overlay = this.overlayColor.toObject\r\n            ? this.overlayColor.toObject(propertiesToInclude)\r\n            : this.overlayColor;\r\n        }\r\n        if (bgImage && !bgImage.excludeFromExport) {\r\n          data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\r\n        }\r\n        if (overlay && !overlay.excludeFromExport) {\r\n          data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\r\n        }\r\n\r\n        return data;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\r\n       * a zoomed canvas will then produce zoomed SVG output.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      svgViewportTransformation: true,\r\n\r\n      /**\r\n       * Returns SVG representation of canvas\r\n       * @function\r\n       * @param {Object} [options] Options object for SVG output\r\n       * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\r\n       * @param {Object} [options.viewBox] SVG viewbox object\r\n       * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\r\n       * @param {Number} [options.viewBox.y] y-coordinate of viewbox\r\n       * @param {Number} [options.viewBox.width] Width of viewbox\r\n       * @param {Number} [options.viewBox.height] Height of viewbox\r\n       * @param {String} [options.encoding=UTF-8] Encoding of SVG output\r\n       * @param {String} [options.width] desired width of svg with or without units\r\n       * @param {String} [options.height] desired height of svg with or without units\r\n       * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\r\n       * @return {String} SVG string\r\n       * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n       * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\r\n       * @example <caption>Normal SVG output</caption>\r\n       * var svg = canvas.toSVG();\r\n       * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\r\n       * var svg = canvas.toSVG({suppressPreamble: true});\r\n       * @example <caption>SVG output with viewBox attribute</caption>\r\n       * var svg = canvas.toSVG({\r\n       *   viewBox: {\r\n       *     x: 100,\r\n       *     y: 100,\r\n       *     width: 200,\r\n       *     height: 300\r\n       *   }\r\n       * });\r\n       * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\r\n       * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\r\n       * @example <caption>Modify SVG output with reviver function</caption>\r\n       * var svg = canvas.toSVG(null, function(svg) {\r\n       *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\r\n       * });\r\n       */\r\n      toSVG: function(options, reviver) {\r\n        options || (options = { });\r\n\r\n        var markup = [];\r\n\r\n        this._setSVGPreamble(markup, options);\r\n        this._setSVGHeader(markup, options);\r\n\r\n        this._setSVGBgOverlayColor(markup, 'backgroundColor');\r\n        this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\r\n\r\n        this._setSVGObjects(markup, reviver);\r\n\r\n        this._setSVGBgOverlayColor(markup, 'overlayColor');\r\n        this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\r\n\r\n        markup.push('</svg>');\r\n\r\n        return markup.join('');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGPreamble: function(markup, options) {\r\n        if (options.suppressPreamble) {\r\n          return;\r\n        }\r\n        markup.push(\r\n          '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\r\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\r\n          '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\r\n        );\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGHeader: function(markup, options) {\r\n        var width = options.width || this.width,\r\n            height = options.height || this.height,\r\n            vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n\r\n        if (options.viewBox) {\r\n          viewBox = 'viewBox=\"' +\r\n                  options.viewBox.x + ' ' +\r\n                  options.viewBox.y + ' ' +\r\n                  options.viewBox.width + ' ' +\r\n                  options.viewBox.height + '\" ';\r\n        }\r\n        else {\r\n          if (this.svgViewportTransformation) {\r\n            vpt = this.viewportTransform;\r\n            viewBox = 'viewBox=\"' +\r\n                    toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\r\n                    toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\r\n                    toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\r\n                    toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\r\n          }\r\n        }\r\n\r\n        markup.push(\r\n          '<svg ',\r\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\r\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\r\n          'version=\"1.1\" ',\r\n          'width=\"', width, '\" ',\r\n          'height=\"', height, '\" ',\r\n          viewBox,\r\n          'xml:space=\"preserve\">\\n',\r\n          '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\r\n          '<defs>\\n',\r\n          this.createSVGFontFacesMarkup(),\r\n          this.createSVGRefElementsMarkup(),\r\n          '</defs>\\n'\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Creates markup containing SVG referenced elements like patterns, gradients etc.\r\n       * @return {String}\r\n       */\r\n      createSVGRefElementsMarkup: function() {\r\n        var _this = this,\r\n            markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\r\n              var fill = _this[prop];\r\n              if (fill && fill.toLive) {\r\n                return fill.toSVG(_this, false);\r\n              }\r\n            });\r\n        return markup.join('');\r\n      },\r\n\r\n      /**\r\n       * Creates markup containing SVG font faces,\r\n       * font URLs for font faces must be collected by developers\r\n       * and are not extracted from the DOM by fabricjs\r\n       * @param {Array} objects Array of fabric objects\r\n       * @return {String}\r\n       */\r\n      createSVGFontFacesMarkup: function() {\r\n        var markup = '', fontList = { }, obj, fontFamily,\r\n            style, row, rowIndex, _char, charIndex, i, len,\r\n            fontPaths = fabric.fontPaths, objects = this._objects;\r\n\r\n        for (i = 0, len = objects.length; i < len; i++) {\r\n          obj = objects[i];\r\n          fontFamily = obj.fontFamily;\r\n          if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\r\n            continue;\r\n          }\r\n          fontList[fontFamily] = true;\r\n          if (!obj.styles) {\r\n            continue;\r\n          }\r\n          style = obj.styles;\r\n          for (rowIndex in style) {\r\n            row = style[rowIndex];\r\n            for (charIndex in row) {\r\n              _char = row[charIndex];\r\n              fontFamily = _char.fontFamily;\r\n              if (!fontList[fontFamily] && fontPaths[fontFamily]) {\r\n                fontList[fontFamily] = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        for (var j in fontList) {\r\n          markup += [\r\n            '\\t\\t@font-face {\\n',\r\n            '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\r\n            '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\r\n            '\\t\\t}\\n'\r\n          ].join('');\r\n        }\r\n\r\n        if (markup) {\r\n          markup = [\r\n            '\\t<style type=\"text/css\">',\r\n            '<![CDATA[\\n',\r\n            markup,\r\n            ']]>',\r\n            '</style>\\n'\r\n          ].join('');\r\n        }\r\n\r\n        return markup;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGObjects: function(markup, reviver) {\r\n        var instance, i, len, objects = this._objects;\r\n        for (i = 0, len = objects.length; i < len; i++) {\r\n          instance = objects[i];\r\n          if (instance.excludeFromExport) {\r\n            continue;\r\n          }\r\n          this._setSVGObject(markup, instance, reviver);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGObject: function(markup, instance, reviver) {\r\n        markup.push(instance.toSVG(reviver));\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGBgOverlayImage: function(markup, property, reviver) {\r\n        if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\r\n          markup.push(this[property].toSVG(reviver));\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGBgOverlayColor: function(markup, property) {\r\n        var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0],\r\n            finalHeight = this.height / vpt[3];\r\n        if (!filler) {\r\n          return;\r\n        }\r\n        if (filler.toLive) {\r\n          var repeat = filler.repeat;\r\n          markup.push(\r\n            '<rect transform=\"translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\r\n            ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\r\n            'width=\"',\r\n            (repeat === 'repeat-y' || repeat === 'no-repeat'\r\n              ? filler.source.width\r\n              : finalWidth ),\r\n            '\" height=\"',\r\n            (repeat === 'repeat-x' || repeat === 'no-repeat'\r\n              ? filler.source.height\r\n              : finalHeight),\r\n            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\r\n            '></rect>\\n'\r\n          );\r\n        }\r\n        else {\r\n          markup.push(\r\n            '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\r\n            'fill=\"', this[property], '\"',\r\n            '></rect>\\n'\r\n          );\r\n        }\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Moves an object or the objects of a multiple selection\r\n       * to the bottom of the stack of drawn objects\r\n       * @param {fabric.Object} object Object to send to back\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      sendToBack: function (object) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, objs;\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = objs.length; i--;) {\r\n            obj = objs[i];\r\n            removeFromArray(this._objects, obj);\r\n            this._objects.unshift(obj);\r\n          }\r\n        }\r\n        else {\r\n          removeFromArray(this._objects, object);\r\n          this._objects.unshift(object);\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Moves an object or the objects of a multiple selection\r\n       * to the top of the stack of drawn objects\r\n       * @param {fabric.Object} object Object to send\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      bringToFront: function (object) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, objs;\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = 0; i < objs.length; i++) {\r\n            obj = objs[i];\r\n            removeFromArray(this._objects, obj);\r\n            this._objects.push(obj);\r\n          }\r\n        }\r\n        else {\r\n          removeFromArray(this._objects, object);\r\n          this._objects.push(object);\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Moves an object or a selection down in stack of drawn objects\r\n       * An optional paramter, intersecting allowes to move the object in behind\r\n       * the first intersecting object. Where intersection is calculated with\r\n       * bounding box. If no intersection is found, there will not be change in the\r\n       * stack.\r\n       * @param {fabric.Object} object Object to send\r\n       * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      sendBackwards: function (object, intersecting) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, idx, newIdx, objs, objsMoved = 0;\r\n\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = 0; i < objs.length; i++) {\r\n            obj = objs[i];\r\n            idx = this._objects.indexOf(obj);\r\n            if (idx > 0 + objsMoved) {\r\n              newIdx = idx - 1;\r\n              removeFromArray(this._objects, obj);\r\n              this._objects.splice(newIdx, 0, obj);\r\n            }\r\n            objsMoved++;\r\n          }\r\n        }\r\n        else {\r\n          idx = this._objects.indexOf(object);\r\n          if (idx !== 0) {\r\n            // if object is not on the bottom of stack\r\n            newIdx = this._findNewLowerIndex(object, idx, intersecting);\r\n            removeFromArray(this._objects, object);\r\n            this._objects.splice(newIdx, 0, object);\r\n          }\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _findNewLowerIndex: function(object, idx, intersecting) {\r\n        var newIdx, i;\r\n\r\n        if (intersecting) {\r\n          newIdx = idx;\r\n\r\n          // traverse down the stack looking for the nearest intersecting object\r\n          for (i = idx - 1; i >= 0; --i) {\r\n\r\n            var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\r\n                                 object.isContainedWithinObject(this._objects[i]) ||\r\n                                 this._objects[i].isContainedWithinObject(object);\r\n\r\n            if (isIntersecting) {\r\n              newIdx = i;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          newIdx = idx - 1;\r\n        }\r\n\r\n        return newIdx;\r\n      },\r\n\r\n      /**\r\n       * Moves an object or a selection up in stack of drawn objects\r\n       * An optional paramter, intersecting allowes to move the object in front\r\n       * of the first intersecting object. Where intersection is calculated with\r\n       * bounding box. If no intersection is found, there will not be change in the\r\n       * stack.\r\n       * @param {fabric.Object} object Object to send\r\n       * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      bringForward: function (object, intersecting) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, idx, newIdx, objs, objsMoved = 0;\r\n\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = objs.length; i--;) {\r\n            obj = objs[i];\r\n            idx = this._objects.indexOf(obj);\r\n            if (idx < this._objects.length - 1 - objsMoved) {\r\n              newIdx = idx + 1;\r\n              removeFromArray(this._objects, obj);\r\n              this._objects.splice(newIdx, 0, obj);\r\n            }\r\n            objsMoved++;\r\n          }\r\n        }\r\n        else {\r\n          idx = this._objects.indexOf(object);\r\n          if (idx !== this._objects.length - 1) {\r\n            // if object is not on top of stack (last item in an array)\r\n            newIdx = this._findNewUpperIndex(object, idx, intersecting);\r\n            removeFromArray(this._objects, object);\r\n            this._objects.splice(newIdx, 0, object);\r\n          }\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _findNewUpperIndex: function(object, idx, intersecting) {\r\n        var newIdx, i, len;\r\n\r\n        if (intersecting) {\r\n          newIdx = idx;\r\n\r\n          // traverse up the stack looking for the nearest intersecting object\r\n          for (i = idx + 1, len = this._objects.length; i < len; ++i) {\r\n\r\n            var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\r\n                                 object.isContainedWithinObject(this._objects[i]) ||\r\n                                 this._objects[i].isContainedWithinObject(object);\r\n\r\n            if (isIntersecting) {\r\n              newIdx = i;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          newIdx = idx + 1;\r\n        }\r\n\r\n        return newIdx;\r\n      },\r\n\r\n      /**\r\n       * Moves an object to specified level in stack of drawn objects\r\n       * @param {fabric.Object} object Object to send\r\n       * @param {Number} index Position to move to\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      moveTo: function (object, index) {\r\n        removeFromArray(this._objects, object);\r\n        this._objects.splice(index, 0, object);\r\n        return this.renderOnAddRemove && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * Clears a canvas element and dispose objects\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      dispose: function () {\r\n        // cancel eventually ongoing renders\r\n        if (this.isRendering) {\r\n          fabric.util.cancelAnimFrame(this.isRendering);\r\n          this.isRendering = 0;\r\n        }\r\n        this.forEachObject(function(object) {\r\n          object.dispose && object.dispose();\r\n        });\r\n        this._objects = [];\r\n        if (this.backgroundImage && this.backgroundImage.dispose) {\r\n          this.backgroundImage.dispose();\r\n        }\r\n        this.backgroundImage = null;\r\n        if (this.overlayImage && this.overlayImage.dispose) {\r\n          this.overlayImage.dispose();\r\n        }\r\n        this.overlayImage = null;\r\n        this._iTextInstances = null;\r\n        this.contextContainer = null;\r\n        fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\r\n        this.lowerCanvasEl = undefined;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns a string representation of an instance\r\n       * @return {String} string representation of an instance\r\n       */\r\n      toString: function () {\r\n        return '#<fabric.Canvas (' + this.complexity() + '): ' +\r\n                 '{ objects: ' + this._objects.length + ' }>';\r\n      }\r\n    });\r\n\r\n    extend(fabric.StaticCanvas.prototype, fabric.Observable);\r\n    extend(fabric.StaticCanvas.prototype, fabric.Collection);\r\n    extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\r\n\r\n    extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\r\n\r\n      /**\r\n       * @static\r\n       * @type String\r\n       * @default\r\n       */\r\n      EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\r\n\r\n      /**\r\n       * Provides a way to check support of some of the canvas methods\r\n       * (either those of HTMLCanvasElement itself, or rendering context)\r\n       *\r\n       * @param {String} methodName Method to check support for;\r\n       *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\r\n       * @return {Boolean | null} `true` if method is supported (or at least exists),\r\n       *                          `null` if canvas element or context can not be initialized\r\n       */\r\n      supports: function (methodName) {\r\n        var el = fabric.util.createCanvasElement();\r\n\r\n        if (!el || !el.getContext) {\r\n          return null;\r\n        }\r\n\r\n        var ctx = el.getContext('2d');\r\n        if (!ctx) {\r\n          return null;\r\n        }\r\n\r\n        switch (methodName) {\r\n\r\n          case 'getImageData':\r\n            return typeof ctx.getImageData !== 'undefined';\r\n\r\n          case 'setLineDash':\r\n            return typeof ctx.setLineDash !== 'undefined';\r\n\r\n          case 'toDataURL':\r\n            return typeof el.toDataURL !== 'undefined';\r\n\r\n          case 'toDataURLWithQuality':\r\n            try {\r\n              el.toDataURL('image/jpeg', 0);\r\n              return true;\r\n            }\r\n            catch (e) { }\r\n            return false;\r\n\r\n          default:\r\n            return null;\r\n        }\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns JSON representation of canvas\r\n     * @function\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {String} JSON string\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n     * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\r\n     * @example <caption>JSON without additional properties</caption>\r\n     * var json = canvas.toJSON();\r\n     * @example <caption>JSON with additional properties included</caption>\r\n     * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\r\n     * @example <caption>JSON without default values</caption>\r\n     * canvas.includeDefaultValues = false;\r\n     * var json = canvas.toJSON();\r\n     */\r\n    fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\r\n\r\n    if (fabric.isLikelyNode) {\r\n      fabric.StaticCanvas.prototype.createPNGStream = function() {\r\n        var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\r\n        return impl && impl.createPNGStream();\r\n      };\r\n      fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\r\n        var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\r\n        return impl && impl.createJPEGStream(opts);\r\n      };\r\n    }\r\n  })();\r\n\r\n\r\n  /**\r\n   * BaseBrush class\r\n   * @class fabric.BaseBrush\r\n   * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\r\n   */\r\n  fabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\r\n\r\n    /**\r\n     * Color of a brush\r\n     * @type String\r\n     * @default\r\n     */\r\n    color: 'rgb(0, 0, 0)',\r\n\r\n    /**\r\n     * Width of a brush, has to be a Number, no string literals\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width: 1,\r\n\r\n    /**\r\n     * Shadow object representing shadow of this shape.\r\n     * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\r\n     * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\r\n     * @type fabric.Shadow\r\n     * @default\r\n     */\r\n    shadow: null,\r\n\r\n    /**\r\n     * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\r\n     * @type String\r\n     * @default\r\n     */\r\n    strokeLineCap: 'round',\r\n\r\n    /**\r\n     * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\r\n     * @type String\r\n     * @default\r\n     */\r\n    strokeLineJoin: 'round',\r\n\r\n    /**\r\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\r\n     * @type Number\r\n     * @default\r\n     */\r\n    strokeMiterLimit:         10,\r\n\r\n    /**\r\n     * Stroke Dash Array.\r\n     * @type Array\r\n     * @default\r\n     */\r\n    strokeDashArray: null,\r\n\r\n    /**\r\n     * Sets shadow of an object\r\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    setShadow: function(options) {\r\n      this.shadow = new fabric.Shadow(options);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets brush styles\r\n     * @private\r\n     */\r\n    _setBrushStyles: function() {\r\n      var ctx = this.canvas.contextTop;\r\n      ctx.strokeStyle = this.color;\r\n      ctx.lineWidth = this.width;\r\n      ctx.lineCap = this.strokeLineCap;\r\n      ctx.miterLimit = this.strokeMiterLimit;\r\n      ctx.lineJoin = this.strokeLineJoin;\r\n      if (fabric.StaticCanvas.supports('setLineDash')) {\r\n        ctx.setLineDash(this.strokeDashArray || []);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets the transformation on given context\r\n     * @param {RenderingContext2d} ctx context to render on\r\n     * @private\r\n     */\r\n    _saveAndTransform: function(ctx) {\r\n      var v = this.canvas.viewportTransform;\r\n      ctx.save();\r\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n    },\r\n\r\n    /**\r\n     * Sets brush shadow styles\r\n     * @private\r\n     */\r\n    _setShadow: function() {\r\n      if (!this.shadow) {\r\n        return;\r\n      }\r\n\r\n      var ctx = this.canvas.contextTop,\r\n          zoom = this.canvas.getZoom();\r\n\r\n      ctx.shadowColor = this.shadow.color;\r\n      ctx.shadowBlur = this.shadow.blur * zoom;\r\n      ctx.shadowOffsetX = this.shadow.offsetX * zoom;\r\n      ctx.shadowOffsetY = this.shadow.offsetY * zoom;\r\n    },\r\n\r\n    /**\r\n     * Removes brush shadow styles\r\n     * @private\r\n     */\r\n    _resetShadow: function() {\r\n      var ctx = this.canvas.contextTop;\r\n\r\n      ctx.shadowColor = '';\r\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n    }\r\n  });\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * PencilBrush class\r\n     * @class fabric.PencilBrush\r\n     * @extends fabric.BaseBrush\r\n     */\r\n    fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {fabric.Canvas} canvas\r\n       * @return {fabric.PencilBrush} Instance of a pencil brush\r\n       */\r\n      initialize: function(canvas) {\r\n        this.canvas = canvas;\r\n        this._points = [];\r\n      },\r\n\r\n      /**\r\n       * Invoked inside on mouse down and mouse move\r\n       * @param {Object} pointer\r\n       */\r\n      _drawSegment: function (ctx, p1, p2) {\r\n        var midPoint = p1.midPointFrom(p2);\r\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n        return midPoint;\r\n      },\r\n\r\n      /**\r\n       * Inovoked on mouse down\r\n       * @param {Object} pointer\r\n       */\r\n      onMouseDown: function(pointer) {\r\n        this._prepareForDrawing(pointer);\r\n        // capture coordinates immediately\r\n        // this allows to draw dots (when movement never occurs)\r\n        this._captureDrawingPath(pointer);\r\n        this._render();\r\n      },\r\n\r\n      /**\r\n       * Inovoked on mouse move\r\n       * @param {Object} pointer\r\n       */\r\n      onMouseMove: function(pointer) {\r\n        if (this._captureDrawingPath(pointer) && this._points.length > 1) {\r\n          if (this.needsFullRender) {\r\n            // redraw curve\r\n            // clear top canvas\r\n            this.canvas.clearContext(this.canvas.contextTop);\r\n            this._render();\r\n          }\r\n          else {\r\n            var points = this._points, length = points.length, ctx = this.canvas.contextTop;\r\n            // draw the curve update\r\n            this._saveAndTransform(ctx);\r\n            if (this.oldEnd) {\r\n              ctx.beginPath();\r\n              ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\r\n            }\r\n            this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Invoked on mouse up\r\n       */\r\n      onMouseUp: function() {\r\n        this.oldEnd = undefined;\r\n        this._finalizeAndAddPath();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} pointer Actual mouse position related to the canvas.\r\n       */\r\n      _prepareForDrawing: function(pointer) {\r\n\r\n        var p = new fabric.Point(pointer.x, pointer.y);\r\n\r\n        this._reset();\r\n        this._addPoint(p);\r\n        this.canvas.contextTop.moveTo(p.x, p.y);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Point} point Point to be added to points array\r\n       */\r\n      _addPoint: function(point) {\r\n        if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\r\n          return false;\r\n        }\r\n        this._points.push(point);\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Clear points array and set contextTop canvas style.\r\n       * @private\r\n       */\r\n      _reset: function() {\r\n        this._points.length = 0;\r\n        this._setBrushStyles();\r\n        var color = new fabric.Color(this.color);\r\n        this.needsFullRender = (color.getAlpha() < 1);\r\n        this._setShadow();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} pointer Actual mouse position related to the canvas.\r\n       */\r\n      _captureDrawingPath: function(pointer) {\r\n        var pointerPoint = new fabric.Point(pointer.x, pointer.y);\r\n        return this._addPoint(pointerPoint);\r\n      },\r\n\r\n      /**\r\n       * Draw a smooth path on the topCanvas using quadraticCurveTo\r\n       * @private\r\n       */\r\n      _render: function() {\r\n        var ctx  = this.canvas.contextTop, i, len,\r\n            p1 = this._points[0],\r\n            p2 = this._points[1];\r\n\r\n        this._saveAndTransform(ctx);\r\n        ctx.beginPath();\r\n        //if we only have 2 points in the path and they are the same\r\n        //it means that the user only clicked the canvas without moving the mouse\r\n        //then we should be drawing a dot. A path isn't drawn between two identical dots\r\n        //that's why we set them apart a bit\r\n        if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\r\n          var width = this.width / 1000;\r\n          p1 = new fabric.Point(p1.x, p1.y);\r\n          p2 = new fabric.Point(p2.x, p2.y);\r\n          p1.x -= width;\r\n          p2.x += width;\r\n        }\r\n        ctx.moveTo(p1.x, p1.y);\r\n\r\n        for (i = 1, len = this._points.length; i < len; i++) {\r\n          // we pick the point between pi + 1 & pi + 2 as the\r\n          // end point and p1 as our control point.\r\n          this._drawSegment(ctx, p1, p2);\r\n          p1 = this._points[i];\r\n          p2 = this._points[i + 1];\r\n        }\r\n        // Draw last line as a straight line while\r\n        // we wait for the next point to be able to calculate\r\n        // the bezier control point\r\n        ctx.lineTo(p1.x, p1.y);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Converts points to SVG path\r\n       * @param {Array} points Array of points\r\n       * @return {String} SVG path\r\n       */\r\n      convertPointsToSVGPath: function(points) {\r\n        var path = [], i, width = this.width / 1000,\r\n            p1 = new fabric.Point(points[0].x, points[0].y),\r\n            p2 = new fabric.Point(points[1].x, points[1].y),\r\n            len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\r\n\r\n        if (manyPoints) {\r\n          multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\r\n          multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\r\n        }\r\n        path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\r\n        for (i = 1; i < len; i++) {\r\n          if (!p1.eq(p2)) {\r\n            var midPoint = p1.midPointFrom(p2);\r\n            // p1 is our bezier control point\r\n            // midpoint is our endpoint\r\n            // start point is p(i-1) value.\r\n            path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\r\n          }\r\n          p1 = points[i];\r\n          if ((i + 1) < points.length) {\r\n            p2 = points[i + 1];\r\n          }\r\n        }\r\n        if (manyPoints) {\r\n          multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\r\n          multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\r\n        }\r\n        path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\r\n        return path;\r\n      },\r\n\r\n      /**\r\n       * Creates fabric.Path object to add on canvas\r\n       * @param {String} pathData Path data\r\n       * @return {fabric.Path} Path to add on canvas\r\n       */\r\n      createPath: function(pathData) {\r\n        var path = new fabric.Path(pathData, {\r\n          fill: null,\r\n          stroke: this.color,\r\n          strokeWidth: this.width,\r\n          strokeLineCap: this.strokeLineCap,\r\n          strokeMiterLimit: this.strokeMiterLimit,\r\n          strokeLineJoin: this.strokeLineJoin,\r\n          strokeDashArray: this.strokeDashArray,\r\n        });\r\n        var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\r\n        position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\r\n        path.top = position.y;\r\n        path.left = position.x;\r\n        if (this.shadow) {\r\n          this.shadow.affectStroke = true;\r\n          path.setShadow(this.shadow);\r\n        }\r\n\r\n        return path;\r\n      },\r\n\r\n      /**\r\n       * On mouseup after drawing the path on contextTop canvas\r\n       * we use the points captured to create an new fabric path object\r\n       * and add it to the fabric canvas.\r\n       */\r\n      _finalizeAndAddPath: function() {\r\n        var ctx = this.canvas.contextTop;\r\n        ctx.closePath();\r\n\r\n        var pathData = this.convertPointsToSVGPath(this._points).join('');\r\n        if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\r\n          // do not create 0 width/height paths, as they are\r\n          // rendered inconsistently across browsers\r\n          // Firefox 4, for example, renders a dot,\r\n          // whereas Chrome 10 renders nothing\r\n          this.canvas.requestRenderAll();\r\n          return;\r\n        }\r\n\r\n        var path = this.createPath(pathData);\r\n        this.canvas.clearContext(this.canvas.contextTop);\r\n        this.canvas.add(path);\r\n        this.canvas.renderAll();\r\n        path.setCoords();\r\n        this._resetShadow();\r\n\r\n\r\n        // fire event 'path' created\r\n        this.canvas.fire('path:created', { path: path });\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  /**\r\n   * CircleBrush class\r\n   * @class fabric.CircleBrush\r\n   */\r\n  fabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\r\n\r\n    /**\r\n     * Width of a brush\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width: 10,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {fabric.Canvas} canvas\r\n     * @return {fabric.CircleBrush} Instance of a circle brush\r\n     */\r\n    initialize: function(canvas) {\r\n      this.canvas = canvas;\r\n      this.points = [];\r\n    },\r\n\r\n    /**\r\n     * Invoked inside on mouse down and mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    drawDot: function(pointer) {\r\n      var point = this.addPoint(pointer),\r\n          ctx = this.canvas.contextTop;\r\n      this._saveAndTransform(ctx);\r\n      ctx.fillStyle = point.fill;\r\n      ctx.beginPath();\r\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse down\r\n     */\r\n    onMouseDown: function(pointer) {\r\n      this.points.length = 0;\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._setShadow();\r\n      this.drawDot(pointer);\r\n    },\r\n\r\n    /**\r\n     * Render the full state of the brush\r\n     * @private\r\n     */\r\n    _render: function() {\r\n      var ctx  = this.canvas.contextTop, i, len,\r\n          points = this.points, point;\r\n      this._saveAndTransform(ctx);\r\n      for (i = 0, len = points.length; i < len; i++) {\r\n        point = points[i];\r\n        ctx.fillStyle = point.fill;\r\n        ctx.beginPath();\r\n        ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseMove: function(pointer) {\r\n      this.drawDot(pointer);\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse up\r\n     */\r\n    onMouseUp: function() {\r\n      var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\r\n      this.canvas.renderOnAddRemove = false;\r\n\r\n      var circles = [];\r\n\r\n      for (i = 0, len = this.points.length; i < len; i++) {\r\n        var point = this.points[i],\r\n            circle = new fabric.Circle({\r\n              radius: point.radius,\r\n              left: point.x,\r\n              top: point.y,\r\n              originX: 'center',\r\n              originY: 'center',\r\n              fill: point.fill\r\n            });\r\n\r\n        this.shadow && circle.setShadow(this.shadow);\r\n\r\n        circles.push(circle);\r\n      }\r\n      var group = new fabric.Group(circles);\r\n      group.canvas = this.canvas;\r\n\r\n      this.canvas.add(group);\r\n      this.canvas.fire('path:created', { path: group });\r\n\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._resetShadow();\r\n      this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n      this.canvas.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * @param {Object} pointer\r\n     * @return {fabric.Point} Just added pointer point\r\n     */\r\n    addPoint: function(pointer) {\r\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y),\r\n\r\n          circleRadius = fabric.util.getRandomInt(\r\n            Math.max(0, this.width - 20), this.width + 20) / 2,\r\n\r\n          circleColor = new fabric.Color(this.color)\r\n            .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\r\n            .toRgba();\r\n\r\n      pointerPoint.radius = circleRadius;\r\n      pointerPoint.fill = circleColor;\r\n\r\n      this.points.push(pointerPoint);\r\n\r\n      return pointerPoint;\r\n    }\r\n  });\r\n\r\n\r\n  /**\r\n   * SprayBrush class\r\n   * @class fabric.SprayBrush\r\n   */\r\n  fabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\r\n\r\n    /**\r\n     * Width of a spray\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width:              10,\r\n\r\n    /**\r\n     * Density of a spray (number of dots per chunk)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    density:            20,\r\n\r\n    /**\r\n     * Width of spray dots\r\n     * @type Number\r\n     * @default\r\n     */\r\n    dotWidth:           1,\r\n\r\n    /**\r\n     * Width variance of spray dots\r\n     * @type Number\r\n     * @default\r\n     */\r\n    dotWidthVariance:   1,\r\n\r\n    /**\r\n     * Whether opacity of a dot should be random\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    randomOpacity:        false,\r\n\r\n    /**\r\n     * Whether overlapping dots (rectangles) should be removed (for performance reasons)\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    optimizeOverlapping:  true,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {fabric.Canvas} canvas\r\n     * @return {fabric.SprayBrush} Instance of a spray brush\r\n     */\r\n    initialize: function(canvas) {\r\n      this.canvas = canvas;\r\n      this.sprayChunks = [];\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse down\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseDown: function(pointer) {\r\n      this.sprayChunks.length = 0;\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._setShadow();\r\n\r\n      this.addSprayChunk(pointer);\r\n      this.render(this.sprayChunkPoints);\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseMove: function(pointer) {\r\n      this.addSprayChunk(pointer);\r\n      this.render(this.sprayChunkPoints);\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse up\r\n     */\r\n    onMouseUp: function() {\r\n      var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\r\n      this.canvas.renderOnAddRemove = false;\r\n\r\n      var rects = [];\r\n\r\n      for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\r\n        var sprayChunk = this.sprayChunks[i];\r\n\r\n        for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\r\n\r\n          var rect = new fabric.Rect({\r\n            width: sprayChunk[j].width,\r\n            height: sprayChunk[j].width,\r\n            left: sprayChunk[j].x + 1,\r\n            top: sprayChunk[j].y + 1,\r\n            originX: 'center',\r\n            originY: 'center',\r\n            fill: this.color\r\n          });\r\n          rects.push(rect);\r\n        }\r\n      }\r\n\r\n      if (this.optimizeOverlapping) {\r\n        rects = this._getOptimizedRects(rects);\r\n      }\r\n\r\n      var group = new fabric.Group(rects);\r\n      this.shadow && group.setShadow(this.shadow);\r\n      this.canvas.add(group);\r\n      this.canvas.fire('path:created', { path: group });\r\n\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._resetShadow();\r\n      this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n      this.canvas.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Array} rects\r\n     */\r\n    _getOptimizedRects: function(rects) {\r\n\r\n      // avoid creating duplicate rects at the same coordinates\r\n      var uniqueRects = { }, key, i, len;\r\n\r\n      for (i = 0, len = rects.length; i < len; i++) {\r\n        key = rects[i].left + '' + rects[i].top;\r\n        if (!uniqueRects[key]) {\r\n          uniqueRects[key] = rects[i];\r\n        }\r\n      }\r\n      var uniqueRectsArray = [];\r\n      for (key in uniqueRects) {\r\n        uniqueRectsArray.push(uniqueRects[key]);\r\n      }\r\n\r\n      return uniqueRectsArray;\r\n    },\r\n\r\n    /**\r\n     * Render new chunk of spray brush\r\n     */\r\n    render: function(sprayChunk) {\r\n      var ctx = this.canvas.contextTop, i, len;\r\n      ctx.fillStyle = this.color;\r\n\r\n      this._saveAndTransform(ctx);\r\n\r\n      for (i = 0, len = sprayChunk.length; i < len; i++) {\r\n        var point = sprayChunk[i];\r\n        if (typeof point.opacity !== 'undefined') {\r\n          ctx.globalAlpha = point.opacity;\r\n        }\r\n        ctx.fillRect(point.x, point.y, point.width, point.width);\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Render all spray chunks\r\n     */\r\n    _render: function() {\r\n      var ctx = this.canvas.contextTop, i, ilen;\r\n      ctx.fillStyle = this.color;\r\n\r\n      this._saveAndTransform(ctx);\r\n\r\n      for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\r\n        this.render(this.sprayChunks[i]);\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * @param {Object} pointer\r\n     */\r\n    addSprayChunk: function(pointer) {\r\n      this.sprayChunkPoints = [];\r\n\r\n      var x, y, width, radius = this.width / 2, i;\r\n\r\n      for (i = 0; i < this.density; i++) {\r\n\r\n        x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\r\n        y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\r\n\r\n        if (this.dotWidthVariance) {\r\n          width = fabric.util.getRandomInt(\r\n            // bottom clamp width to 1\r\n            Math.max(1, this.dotWidth - this.dotWidthVariance),\r\n            this.dotWidth + this.dotWidthVariance);\r\n        }\r\n        else {\r\n          width = this.dotWidth;\r\n        }\r\n\r\n        var point = new fabric.Point(x, y);\r\n        point.width = width;\r\n\r\n        if (this.randomOpacity) {\r\n          point.opacity = fabric.util.getRandomInt(0, 100) / 100;\r\n        }\r\n\r\n        this.sprayChunkPoints.push(point);\r\n      }\r\n\r\n      this.sprayChunks.push(this.sprayChunkPoints);\r\n    }\r\n  });\r\n\r\n\r\n  /**\r\n   * PatternBrush class\r\n   * @class fabric.PatternBrush\r\n   * @extends fabric.BaseBrush\r\n   */\r\n  fabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\r\n\r\n    getPatternSrc: function() {\r\n\r\n      var dotWidth = 20,\r\n          dotDistance = 5,\r\n          patternCanvas = fabric.util.createCanvasElement(),\r\n          patternCtx = patternCanvas.getContext('2d');\r\n\r\n      patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\r\n\r\n      patternCtx.fillStyle = this.color;\r\n      patternCtx.beginPath();\r\n      patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\r\n      patternCtx.closePath();\r\n      patternCtx.fill();\r\n\r\n      return patternCanvas;\r\n    },\r\n\r\n    getPatternSrcFunction: function() {\r\n      return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\r\n    },\r\n\r\n    /**\r\n     * Creates \"pattern\" instance property\r\n     */\r\n    getPattern: function() {\r\n      return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\r\n    },\r\n\r\n    /**\r\n     * Sets brush styles\r\n     */\r\n    _setBrushStyles: function() {\r\n      this.callSuper('_setBrushStyles');\r\n      this.canvas.contextTop.strokeStyle = this.getPattern();\r\n    },\r\n\r\n    /**\r\n     * Creates path\r\n     */\r\n    createPath: function(pathData) {\r\n      var path = this.callSuper('createPath', pathData),\r\n          topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\r\n\r\n      path.stroke = new fabric.Pattern({\r\n        source: this.source || this.getPatternSrcFunction(),\r\n        offsetX: -topLeft.x,\r\n        offsetY: -topLeft.y\r\n      });\r\n      return path;\r\n    }\r\n  });\r\n\r\n\r\n  (function() {\r\n\r\n    var getPointer = fabric.util.getPointer,\r\n        degreesToRadians = fabric.util.degreesToRadians,\r\n        radiansToDegrees = fabric.util.radiansToDegrees,\r\n        atan2 = Math.atan2,\r\n        abs = Math.abs,\r\n        supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\r\n\r\n        STROKE_OFFSET = 0.5;\r\n\r\n    /**\r\n     * Canvas class\r\n     * @class fabric.Canvas\r\n     * @extends fabric.StaticCanvas\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\r\n     * @see {@link fabric.Canvas#initialize} for constructor definition\r\n     *\r\n     * @fires object:modified\r\n     * @fires object:rotated\r\n     * @fires object:scaled\r\n     * @fires object:moved\r\n     * @fires object:skewed\r\n     * @fires object:rotating\r\n     * @fires object:scaling\r\n     * @fires object:moving\r\n     * @fires object:skewing\r\n     * @fires object:selected this event is deprecated. use selection:created\r\n     *\r\n     * @fires before:transform\r\n     * @fires before:selection:cleared\r\n     * @fires selection:cleared\r\n     * @fires selection:updated\r\n     * @fires selection:created\r\n     *\r\n     * @fires path:created\r\n     * @fires mouse:down\r\n     * @fires mouse:move\r\n     * @fires mouse:up\r\n     * @fires mouse:down:before\r\n     * @fires mouse:move:before\r\n     * @fires mouse:up:before\r\n     * @fires mouse:over\r\n     * @fires mouse:out\r\n     * @fires mouse:dblclick\r\n     *\r\n     * @fires dragover\r\n     * @fires dragenter\r\n     * @fires dragleave\r\n     * @fires drop\r\n     *\r\n     */\r\n    fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(el, options) {\r\n        options || (options = { });\r\n        this.renderAndResetBound = this.renderAndReset.bind(this);\r\n        this.requestRenderAllBound = this.requestRenderAll.bind(this);\r\n        this._initStatic(el, options);\r\n        this._initInteractive();\r\n        this._createCacheCanvas();\r\n      },\r\n\r\n      /**\r\n       * When true, objects can be transformed by one side (unproportionally)\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      uniScaleTransform:      false,\r\n\r\n      /**\r\n       * Indicates which key enable unproportional scaling\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled feature disabled.\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      uniScaleKey:           'shiftKey',\r\n\r\n      /**\r\n       * When true, objects use center point as the origin of scale transformation.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredScaling:        false,\r\n\r\n      /**\r\n       * When true, objects use center point as the origin of rotate transformation.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredRotation:       false,\r\n\r\n      /**\r\n       * Indicates which key enable centered Transform\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled feature disabled.\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      centeredKey:           'altKey',\r\n\r\n      /**\r\n       * Indicates which key enable alternate action on corner\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled feature disabled.\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      altActionKey:           'shiftKey',\r\n\r\n      /**\r\n       * Indicates that canvas is interactive. This property should not be changed.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      interactive:            true,\r\n\r\n      /**\r\n       * Indicates whether group selection should be enabled\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      selection:              true,\r\n\r\n      /**\r\n       * Indicates which key or keys enable multiple click selection\r\n       * Pass value as a string or array of strings\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or empty or containing any other string that is not a modifier key\r\n       * feature is disabled.\r\n       * @since 1.6.2\r\n       * @type String|Array\r\n       * @default\r\n       */\r\n      selectionKey:           'shiftKey',\r\n\r\n      /**\r\n       * Indicates which key enable alternative selection\r\n       * in case of target overlapping with active object\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * For a series of reason that come from the general expectations on how\r\n       * things should work, this feature works only for preserveObjectStacking true.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled.\r\n       * @since 1.6.5\r\n       * @type null|String\r\n       * @default\r\n       */\r\n      altSelectionKey:           null,\r\n\r\n      /**\r\n       * Color of selection\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\r\n\r\n      /**\r\n       * Default dash array pattern\r\n       * If not empty the selection border is dashed\r\n       * @type Array\r\n       */\r\n      selectionDashArray:     [],\r\n\r\n      /**\r\n       * Color of the border of selection (usually slightly darker than color of selection itself)\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\r\n\r\n      /**\r\n       * Width of a line used in object/group selection\r\n       * @type Number\r\n       * @default\r\n       */\r\n      selectionLineWidth:     1,\r\n\r\n      /**\r\n       * Select only shapes that are fully contained in the dragged selection rectangle.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      selectionFullyContained: false,\r\n\r\n      /**\r\n       * Default cursor value used when hovering over an object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      hoverCursor:            'move',\r\n\r\n      /**\r\n       * Default cursor value used when moving an object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      moveCursor:             'move',\r\n\r\n      /**\r\n       * Default cursor value used for the entire canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      defaultCursor:          'default',\r\n\r\n      /**\r\n       * Cursor value used during free drawing\r\n       * @type String\r\n       * @default\r\n       */\r\n      freeDrawingCursor:      'crosshair',\r\n\r\n      /**\r\n       * Cursor value used for rotation point\r\n       * @type String\r\n       * @default\r\n       */\r\n      rotationCursor:         'crosshair',\r\n\r\n      /**\r\n       * Cursor value used for disabled elements ( corners with disabled action )\r\n       * @type String\r\n       * @since 2.0.0\r\n       * @default\r\n       */\r\n      notAllowedCursor:         'not-allowed',\r\n\r\n      /**\r\n       * Default element class that's given to wrapper (div) element of canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      containerClass:         'canvas-container',\r\n\r\n      /**\r\n       * When true, object detection happens on per-pixel basis rather than on per-bounding-box\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      perPixelTargetFind:     false,\r\n\r\n      /**\r\n       * Number of pixels around target pixel to tolerate (consider active) during object detection\r\n       * @type Number\r\n       * @default\r\n       */\r\n      targetFindTolerance:    0,\r\n\r\n      /**\r\n       * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      skipTargetFind:         false,\r\n\r\n      /**\r\n       * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\r\n       * After mousedown, mousemove creates a shape,\r\n       * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\r\n       * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      isDrawingMode:          false,\r\n\r\n      /**\r\n       * Indicates whether objects should remain in current stack position when selected.\r\n       * When false objects are brought to top and rendered as part of the selection group\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      preserveObjectStacking: false,\r\n\r\n      /**\r\n       * Indicates the angle that an object will lock to while rotating.\r\n       * @type Number\r\n       * @since 1.6.7\r\n       * @default\r\n       */\r\n      snapAngle: 0,\r\n\r\n      /**\r\n       * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\r\n       * When `null`, the snapThreshold will default to the snapAngle.\r\n       * @type null|Number\r\n       * @since 1.6.7\r\n       * @default\r\n       */\r\n      snapThreshold: null,\r\n\r\n      /**\r\n       * Indicates if the right click on canvas can output the context menu or not\r\n       * @type Boolean\r\n       * @since 1.6.5\r\n       * @default\r\n       */\r\n      stopContextMenu: false,\r\n\r\n      /**\r\n       * Indicates if the canvas can fire right click events\r\n       * @type Boolean\r\n       * @since 1.6.5\r\n       * @default\r\n       */\r\n      fireRightClick: false,\r\n\r\n      /**\r\n       * Indicates if the canvas can fire middle click events\r\n       * @type Boolean\r\n       * @since 1.7.8\r\n       * @default\r\n       */\r\n      fireMiddleClick: false,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _initInteractive: function() {\r\n        this._currentTransform = null;\r\n        this._groupSelector = null;\r\n        this._initWrapperElement();\r\n        this._createUpperCanvas();\r\n        this._initEventListeners();\r\n\r\n        this._initRetinaScaling();\r\n\r\n        this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\r\n\r\n        this.calcOffset();\r\n      },\r\n\r\n      /**\r\n       * Divides objects in two groups, one to render immediately\r\n       * and one to render as activeGroup.\r\n       * @return {Array} objects to render immediately and pushes the other in the activeGroup.\r\n       */\r\n      _chooseObjectsToRender: function() {\r\n        var activeObjects = this.getActiveObjects(),\r\n            object, objsToRender, activeGroupObjects;\r\n\r\n        if (activeObjects.length > 0 && !this.preserveObjectStacking) {\r\n          objsToRender = [];\r\n          activeGroupObjects = [];\r\n          for (var i = 0, length = this._objects.length; i < length; i++) {\r\n            object = this._objects[i];\r\n            if (activeObjects.indexOf(object) === -1 ) {\r\n              objsToRender.push(object);\r\n            }\r\n            else {\r\n              activeGroupObjects.push(object);\r\n            }\r\n          }\r\n          if (activeObjects.length > 1) {\r\n            this._activeObject._objects = activeGroupObjects;\r\n          }\r\n          objsToRender.push.apply(objsToRender, activeGroupObjects);\r\n        }\r\n        else {\r\n          objsToRender = this._objects;\r\n        }\r\n        return objsToRender;\r\n      },\r\n\r\n      /**\r\n       * Renders both the top canvas and the secondary container canvas.\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderAll: function () {\r\n        if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\r\n          this.clearContext(this.contextTop);\r\n          this.contextTopDirty = false;\r\n        }\r\n        if (this.hasLostContext) {\r\n          this.renderTopLayer(this.contextTop);\r\n        }\r\n        var canvasToDrawOn = this.contextContainer;\r\n        this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\r\n        return this;\r\n      },\r\n\r\n      renderTopLayer: function(ctx) {\r\n        if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n          this.freeDrawingBrush && this.freeDrawingBrush._render();\r\n        }\r\n        // we render the top context - last object\r\n        if (this.selection && this._groupSelector) {\r\n          this._drawSelection(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method to render only the top canvas.\r\n       * Also used to render the group selection box.\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      renderTop: function () {\r\n        var ctx = this.contextTop;\r\n        this.clearContext(ctx);\r\n        this.renderTopLayer(ctx);\r\n        this.fire('after:render');\r\n        this.contextTopDirty = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Resets the current transform to its original values and chooses the type of resizing based on the event\r\n       * @private\r\n       */\r\n      _resetCurrentTransform: function() {\r\n        var t = this._currentTransform;\r\n\r\n        t.target.set({\r\n          scaleX: t.original.scaleX,\r\n          scaleY: t.original.scaleY,\r\n          skewX: t.original.skewX,\r\n          skewY: t.original.skewY,\r\n          left: t.original.left,\r\n          top: t.original.top\r\n        });\r\n\r\n        if (this._shouldCenterTransform(t.target)) {\r\n          if (t.originX !== 'center') {\r\n            if (t.originX === 'right') {\r\n              t.mouseXSign = -1;\r\n            }\r\n            else {\r\n              t.mouseXSign = 1;\r\n            }\r\n          }\r\n          if (t.originY !== 'center') {\r\n            if (t.originY === 'bottom') {\r\n              t.mouseYSign = -1;\r\n            }\r\n            else {\r\n              t.mouseYSign = 1;\r\n            }\r\n          }\r\n\r\n          t.originX = 'center';\r\n          t.originY = 'center';\r\n        }\r\n        else {\r\n          t.originX = t.original.originX;\r\n          t.originY = t.original.originY;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Checks if point is contained within an area of given object\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target Object to test against\r\n       * @param {Object} [point] x,y object of point coordinates we want to check.\r\n       * @return {Boolean} true if point is contained within an area of given object\r\n       */\r\n      containsPoint: function (e, target, point) {\r\n        var ignoreZoom = true,\r\n            pointer = point || this.getPointer(e, ignoreZoom),\r\n            xy;\r\n\r\n        if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\r\n          xy = this._normalizePointer(target.group, pointer);\r\n        }\r\n        else {\r\n          xy = { x: pointer.x, y: pointer.y };\r\n        }\r\n        // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\r\n        // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\r\n        return (target.containsPoint(xy) || target._findTargetCorner(pointer));\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _normalizePointer: function (object, pointer) {\r\n        var m = object.calcTransformMatrix(),\r\n            invertedM = fabric.util.invertTransform(m),\r\n            vptPointer = this.restorePointerVpt(pointer);\r\n        return fabric.util.transformPoint(vptPointer, invertedM);\r\n      },\r\n\r\n      /**\r\n       * Returns true if object is transparent at a certain location\r\n       * @param {fabric.Object} target Object to check\r\n       * @param {Number} x Left coordinate\r\n       * @param {Number} y Top coordinate\r\n       * @return {Boolean}\r\n       */\r\n      isTargetTransparent: function (target, x, y) {\r\n        if (target.shouldCache() && target._cacheCanvas) {\r\n          var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\r\n              targetRelativeX = target.cacheTranslationX + (normalizedPointer.x * target.zoomX),\r\n              targetRelativeY = target.cacheTranslationY + (normalizedPointer.y * target.zoomY);\r\n\r\n          var isTransparent = fabric.util.isTransparent(\r\n            target._cacheContext, targetRelativeX, targetRelativeY, this.targetFindTolerance);\r\n\r\n          return isTransparent;\r\n        }\r\n\r\n        var ctx = this.contextCache,\r\n            originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\r\n\r\n        target.selectionBackgroundColor = '';\r\n\r\n        this.clearContext(ctx);\r\n\r\n        ctx.save();\r\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        target.render(ctx);\r\n        ctx.restore();\r\n\r\n        target === this._activeObject && target._renderControls(ctx, {\r\n          hasBorders: false,\r\n          transparentCorners: false\r\n        }, {\r\n          hasBorders: false,\r\n        });\r\n\r\n        target.selectionBackgroundColor = originalColor;\r\n\r\n        var isTransparent = fabric.util.isTransparent(\r\n          ctx, x, y, this.targetFindTolerance);\r\n\r\n        return isTransparent;\r\n      },\r\n\r\n      /**\r\n       * takes an event and determins if selection key has been pressed\r\n       * @private\r\n       * @param {Event} e Event object\r\n       */\r\n      _isSelectionKeyPressed: function(e) {\r\n        var selectionKeyPressed = false;\r\n\r\n        if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\r\n          selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\r\n        }\r\n        else {\r\n          selectionKeyPressed = e[this.selectionKey];\r\n        }\r\n\r\n        return selectionKeyPressed;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       */\r\n      _shouldClearSelection: function (e, target) {\r\n        var activeObjects = this.getActiveObjects(),\r\n            activeObject = this._activeObject;\r\n\r\n        return (\r\n          !target\r\n          ||\r\n          (target &&\r\n            activeObject &&\r\n            activeObjects.length > 1 &&\r\n            activeObjects.indexOf(target) === -1 &&\r\n            activeObject !== target &&\r\n            !this._isSelectionKeyPressed(e))\r\n          ||\r\n          (target && !target.evented)\r\n          ||\r\n          (target &&\r\n            !target.selectable &&\r\n            activeObject &&\r\n            activeObject !== target)\r\n        );\r\n      },\r\n\r\n      /**\r\n       * centeredScaling from object can't override centeredScaling from canvas.\r\n       * this should be fixed, since object setting should take precedence over canvas.\r\n       * @private\r\n       * @param {fabric.Object} target\r\n       */\r\n      _shouldCenterTransform: function (target) {\r\n        if (!target) {\r\n          return;\r\n        }\r\n\r\n        var t = this._currentTransform,\r\n            centerTransform;\r\n\r\n        if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\r\n          centerTransform = this.centeredScaling || target.centeredScaling;\r\n        }\r\n        else if (t.action === 'rotate') {\r\n          centerTransform = this.centeredRotation || target.centeredRotation;\r\n        }\r\n\r\n        return centerTransform ? !t.altKey : t.altKey;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getOriginFromCorner: function(target, corner) {\r\n        var origin = {\r\n          x: target.originX,\r\n          y: target.originY\r\n        };\r\n\r\n        if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\r\n          origin.x = 'right';\r\n        }\r\n        else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\r\n          origin.x = 'left';\r\n        }\r\n\r\n        if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\r\n          origin.y = 'bottom';\r\n        }\r\n        else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\r\n          origin.y = 'top';\r\n        }\r\n\r\n        return origin;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getActionFromCorner: function(target, corner, e) {\r\n        if (!corner) {\r\n          return 'drag';\r\n        }\r\n\r\n        switch (corner) {\r\n          case 'mtr':\r\n            return 'rotate';\r\n          case 'ml':\r\n          case 'mr':\r\n            return e[this.altActionKey] ? 'skewY' : 'scaleX';\r\n          case 'mt':\r\n          case 'mb':\r\n            return e[this.altActionKey] ? 'skewX' : 'scaleY';\r\n          default:\r\n            return 'scale';\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       */\r\n      _setupCurrentTransform: function (e, target) {\r\n        if (!target) {\r\n          return;\r\n        }\r\n\r\n        var pointer = this.getPointer(e),\r\n            corner = target._findTargetCorner(this.getPointer(e, true)),\r\n            action = this._getActionFromCorner(target, corner, e),\r\n            origin = this._getOriginFromCorner(target, corner);\r\n\r\n        this._currentTransform = {\r\n          target: target,\r\n          action: action,\r\n          corner: corner,\r\n          scaleX: target.scaleX,\r\n          scaleY: target.scaleY,\r\n          skewX: target.skewX,\r\n          skewY: target.skewY,\r\n          // used by transation\r\n          offsetX: pointer.x - target.left,\r\n          offsetY: pointer.y - target.top,\r\n          originX: origin.x,\r\n          originY: origin.y,\r\n          ex: pointer.x,\r\n          ey: pointer.y,\r\n          lastX: pointer.x,\r\n          lastY: pointer.y,\r\n          // unsure they are usefull anymore.\r\n          // left: target.left,\r\n          // top: target.top,\r\n          theta: degreesToRadians(target.angle),\r\n          // end of unsure\r\n          width: target.width * target.scaleX,\r\n          mouseXSign: 1,\r\n          mouseYSign: 1,\r\n          shiftKey: e.shiftKey,\r\n          altKey: e[this.centeredKey],\r\n          original: fabric.util.saveObjectTransform(target),\r\n        };\r\n\r\n        this._currentTransform.original.originX = origin.x;\r\n        this._currentTransform.original.originY = origin.y;\r\n\r\n        this._resetCurrentTransform();\r\n        this._beforeTransform(e);\r\n      },\r\n\r\n      /**\r\n       * Translates object by \"setting\" its left/top\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @return {Boolean} true if the translation occurred\r\n       */\r\n      _translateObject: function (x, y) {\r\n        var transform = this._currentTransform,\r\n            target = transform.target,\r\n            newLeft = x - transform.offsetX,\r\n            newTop = y - transform.offsetY,\r\n            moveX = !target.get('lockMovementX') && target.left !== newLeft,\r\n            moveY = !target.get('lockMovementY') && target.top !== newTop;\r\n\r\n        moveX && target.set('left', newLeft);\r\n        moveY && target.set('top', newTop);\r\n        return moveX || moveY;\r\n      },\r\n\r\n      /**\r\n       * Check if we are increasing a positive skew or lower it,\r\n       * checking mouse direction and pressed corner.\r\n       * @private\r\n       */\r\n      _changeSkewTransformOrigin: function(mouseMove, t, by) {\r\n        var property = 'originX', origins = { 0: 'center' },\r\n            skew = t.target.skewX, originA = 'left', originB = 'right',\r\n            corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\r\n            flipSign = 1;\r\n\r\n        mouseMove = mouseMove > 0 ? 1 : -1;\r\n        if (by === 'y') {\r\n          skew = t.target.skewY;\r\n          originA = 'top';\r\n          originB = 'bottom';\r\n          property = 'originY';\r\n        }\r\n        origins[-1] = originA;\r\n        origins[1] = originB;\r\n\r\n        t.target.flipX && (flipSign *= -1);\r\n        t.target.flipY && (flipSign *= -1);\r\n\r\n        if (skew === 0) {\r\n          t.skewSign = -corner * mouseMove * flipSign;\r\n          t[property] = origins[-mouseMove];\r\n        }\r\n        else {\r\n          skew = skew > 0 ? 1 : -1;\r\n          t.skewSign = skew;\r\n          t[property] = origins[skew * corner * flipSign];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Skew object by mouse events\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @param {String} by Either 'x' or 'y'\r\n       * @return {Boolean} true if the skewing occurred\r\n       */\r\n      _skewObject: function (x, y, by) {\r\n        var t = this._currentTransform,\r\n            target = t.target, skewed = false,\r\n            lockSkewingX = target.get('lockSkewingX'),\r\n            lockSkewingY = target.get('lockSkewingY');\r\n\r\n        if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\r\n          return false;\r\n        }\r\n\r\n        // Get the constraint point\r\n        var center = target.getCenterPoint(),\r\n            actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\r\n            lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\r\n            actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\r\n\r\n        this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\r\n        actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\r\n        constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\r\n        // Actually skew the object\r\n        skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\r\n        t.lastX = x;\r\n        t.lastY = y;\r\n        // Make sure the constraints apply\r\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\r\n        return skewed;\r\n      },\r\n\r\n      /**\r\n       * Set object skew\r\n       * @private\r\n       * @return {Boolean} true if the skewing occurred\r\n       */\r\n      _setObjectSkew: function(localMouse, transform, by, _dim) {\r\n        var target = transform.target, newValue, skewed = false,\r\n            skewSign = transform.skewSign, newDim, dimNoSkew,\r\n            otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\r\n\r\n        if (by === 'x') {\r\n          otherBy = 'y';\r\n          _otherBy = 'Y';\r\n          _by = 'X';\r\n          skewX = 0;\r\n          skewY = target.skewY;\r\n        }\r\n        else {\r\n          otherBy = 'x';\r\n          _otherBy = 'X';\r\n          _by = 'Y';\r\n          skewX = target.skewX;\r\n          skewY = 0;\r\n        }\r\n\r\n        dimNoSkew = target._getTransformedDimensions(skewX, skewY);\r\n        newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\r\n        if (newDimMouse <= 2) {\r\n          newValue = 0;\r\n        }\r\n        else {\r\n          newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\r\n                                          (dimNoSkew[otherBy] / target['scale' + _otherBy]));\r\n          newValue = fabric.util.radiansToDegrees(newValue);\r\n        }\r\n        skewed = target['skew' + _by] !== newValue;\r\n        target.set('skew' + _by, newValue);\r\n        if (target['skew' + _otherBy] !== 0) {\r\n          newDim = target._getTransformedDimensions();\r\n          newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\r\n          target.set('scale' + _otherBy, newValue);\r\n        }\r\n        return skewed;\r\n      },\r\n\r\n      /**\r\n       * Scales object by invoking its scaleX/scaleY methods\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\r\n       *                    When not provided, an object is scaled by both dimensions equally\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _scaleObject: function (x, y, by) {\r\n        var t = this._currentTransform,\r\n            target = t.target,\r\n            lockScalingX = target.lockScalingX,\r\n            lockScalingY = target.lockScalingY,\r\n            lockScalingFlip = target.lockScalingFlip;\r\n\r\n        if (lockScalingX && lockScalingY) {\r\n          return false;\r\n        }\r\n\r\n        // Get the constraint point\r\n        var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\r\n            localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\r\n            dim = target._getTransformedDimensions(), scaled = false;\r\n\r\n        this._setLocalMouse(localMouse, t);\r\n\r\n        // Actually scale the object\r\n        scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\r\n\r\n        // Make sure the constraints apply\r\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\r\n        return scaled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\r\n        var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\r\n            changeX, changeY, scaleX, scaleY;\r\n\r\n        scaleX = localMouse.x * target.scaleX / _dim.x;\r\n        scaleY = localMouse.y * target.scaleY / _dim.y;\r\n        changeX = target.scaleX !== scaleX;\r\n        changeY = target.scaleY !== scaleY;\r\n\r\n        if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\r\n          forbidScalingX = true;\r\n          localMouse.x = 0;\r\n        }\r\n\r\n        if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\r\n          forbidScalingY = true;\r\n          localMouse.y = 0;\r\n        }\r\n\r\n        if (by === 'equally' && !lockScalingX && !lockScalingY) {\r\n          scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\r\n        }\r\n        else if (!by) {\r\n          forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\r\n          forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\r\n        }\r\n        else if (by === 'x' && !target.get('lockUniScaling')) {\r\n          forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\r\n        }\r\n        else if (by === 'y' && !target.get('lockUniScaling')) {\r\n          forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\r\n        }\r\n        transform.newScaleX = scaleX;\r\n        transform.newScaleY = scaleY;\r\n        forbidScalingX || forbidScalingY || this._flipObject(transform, by);\r\n        return scaled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _scaleObjectEqually: function(localMouse, target, transform, _dim) {\r\n\r\n        var dist = localMouse.y + localMouse.x,\r\n            lastDist = _dim.y * transform.original.scaleY / target.scaleY +\r\n                       _dim.x * transform.original.scaleX / target.scaleX,\r\n            scaled, signX = localMouse.x < 0 ? -1 : 1,\r\n            signY = localMouse.y < 0 ? -1 : 1;\r\n\r\n        // We use transform.scaleX/Y instead of target.scaleX/Y\r\n        // because the object may have a min scale and we'll loose the proportions\r\n        transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\r\n        transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\r\n        scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\r\n        target.set('scaleX', transform.newScaleX);\r\n        target.set('scaleY', transform.newScaleY);\r\n        return scaled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _flipObject: function(transform, by) {\r\n        if (transform.newScaleX < 0 && by !== 'y') {\r\n          if (transform.originX === 'left') {\r\n            transform.originX = 'right';\r\n          }\r\n          else if (transform.originX === 'right') {\r\n            transform.originX = 'left';\r\n          }\r\n        }\r\n\r\n        if (transform.newScaleY < 0 && by !== 'x') {\r\n          if (transform.originY === 'top') {\r\n            transform.originY = 'bottom';\r\n          }\r\n          else if (transform.originY === 'bottom') {\r\n            transform.originY = 'top';\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setLocalMouse: function(localMouse, t) {\r\n        var target = t.target, zoom = this.getZoom(),\r\n            padding = target.padding / zoom;\r\n\r\n        if (t.originX === 'right') {\r\n          localMouse.x *= -1;\r\n        }\r\n        else if (t.originX === 'center') {\r\n          localMouse.x *= t.mouseXSign * 2;\r\n          if (localMouse.x < 0) {\r\n            t.mouseXSign = -t.mouseXSign;\r\n          }\r\n        }\r\n\r\n        if (t.originY === 'bottom') {\r\n          localMouse.y *= -1;\r\n        }\r\n        else if (t.originY === 'center') {\r\n          localMouse.y *= t.mouseYSign * 2;\r\n          if (localMouse.y < 0) {\r\n            t.mouseYSign = -t.mouseYSign;\r\n          }\r\n        }\r\n\r\n        // adjust the mouse coordinates when dealing with padding\r\n        if (abs(localMouse.x) > padding) {\r\n          if (localMouse.x < 0) {\r\n            localMouse.x += padding;\r\n          }\r\n          else {\r\n            localMouse.x -= padding;\r\n          }\r\n        }\r\n        else { // mouse is within the padding, set to 0\r\n          localMouse.x = 0;\r\n        }\r\n\r\n        if (abs(localMouse.y) > padding) {\r\n          if (localMouse.y < 0) {\r\n            localMouse.y += padding;\r\n          }\r\n          else {\r\n            localMouse.y -= padding;\r\n          }\r\n        }\r\n        else {\r\n          localMouse.y = 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Rotates object by invoking its rotate method\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @return {Boolean} true if the rotation occurred\r\n       */\r\n      _rotateObject: function (x, y) {\r\n\r\n        var t = this._currentTransform,\r\n            target = t.target, constraintPosition,\r\n            constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\r\n\r\n        if (target.lockRotation) {\r\n          return false;\r\n        }\r\n\r\n        var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\r\n            curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\r\n            angle = radiansToDegrees(curAngle - lastAngle + t.theta),\r\n            hasRotated = true;\r\n\r\n        if (target.snapAngle > 0) {\r\n          var snapAngle  = target.snapAngle,\r\n              snapThreshold  = target.snapThreshold || snapAngle,\r\n              rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\r\n              leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\r\n\r\n          if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\r\n            angle = leftAngleLocked;\r\n          }\r\n          else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\r\n            angle = rightAngleLocked;\r\n          }\r\n        }\r\n\r\n        // normalize angle to positive value\r\n        if (angle < 0) {\r\n          angle = 360 + angle;\r\n        }\r\n        angle %= 360;\r\n\r\n        if (target.angle === angle) {\r\n          hasRotated = false;\r\n        }\r\n        else {\r\n          // rotation only happen here\r\n          target.angle = angle;\r\n          // Make sure the constraints apply\r\n          target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\r\n        }\r\n\r\n        return hasRotated;\r\n      },\r\n\r\n      /**\r\n       * Set the cursor type of the canvas element\r\n       * @param {String} value Cursor type of the canvas element.\r\n       * @see http://www.w3.org/TR/css3-ui/#cursor\r\n       */\r\n      setCursor: function (value) {\r\n        this.upperCanvasEl.style.cursor = value;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx to draw the selection on\r\n       */\r\n      _drawSelection: function (ctx) {\r\n        var groupSelector = this._groupSelector,\r\n            left = groupSelector.left,\r\n            top = groupSelector.top,\r\n            aleft = abs(left),\r\n            atop = abs(top);\r\n\r\n        if (this.selectionColor) {\r\n          ctx.fillStyle = this.selectionColor;\r\n\r\n          ctx.fillRect(\r\n            groupSelector.ex - ((left > 0) ? 0 : -left),\r\n            groupSelector.ey - ((top > 0) ? 0 : -top),\r\n            aleft,\r\n            atop\r\n          );\r\n        }\r\n\r\n        if (!this.selectionLineWidth || !this.selectionBorderColor) {\r\n          return;\r\n        }\r\n        ctx.lineWidth = this.selectionLineWidth;\r\n        ctx.strokeStyle = this.selectionBorderColor;\r\n\r\n        // selection border\r\n        if (this.selectionDashArray.length > 1 && !supportLineDash) {\r\n\r\n          var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\r\n              py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\r\n\r\n          ctx.beginPath();\r\n\r\n          fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\r\n          fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\r\n          fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\r\n          fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\r\n\r\n          ctx.closePath();\r\n          ctx.stroke();\r\n        }\r\n        else {\r\n          fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\r\n          ctx.strokeRect(\r\n            groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\r\n            groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\r\n            aleft,\r\n            atop\r\n          );\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method that determines what object we are clicking on\r\n       * the skipGroup parameter is for internal use, is needed for shift+click action\r\n       * @param {Event} e mouse event\r\n       * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\r\n       */\r\n      findTarget: function (e, skipGroup) {\r\n        if (this.skipTargetFind) {\r\n          return;\r\n        }\r\n\r\n        var ignoreZoom = true,\r\n            pointer = this.getPointer(e, ignoreZoom),\r\n            activeObject = this._activeObject,\r\n            aObjects = this.getActiveObjects(),\r\n            activeTarget, activeTargetSubs;\r\n\r\n        // first check current group (if one exists)\r\n        // active group does not check sub targets like normal groups.\r\n        // if active group just exits.\r\n        this.targets = [];\r\n\r\n        if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\r\n          return activeObject;\r\n        }\r\n        // if we hit the corner of an activeObject, let's return that.\r\n        if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\r\n          return activeObject;\r\n        }\r\n        if (aObjects.length === 1 &&\r\n          activeObject === this._searchPossibleTargets([activeObject], pointer)) {\r\n          if (!this.preserveObjectStacking) {\r\n            return activeObject;\r\n          }\r\n          else {\r\n            activeTarget = activeObject;\r\n            activeTargetSubs = this.targets;\r\n            this.targets = [];\r\n          }\r\n        }\r\n        var target = this._searchPossibleTargets(this._objects, pointer);\r\n        if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\r\n          target = activeTarget;\r\n          this.targets = activeTargetSubs;\r\n        }\r\n        return target;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _checkTarget: function(pointer, obj) {\r\n        if (obj &&\r\n            obj.visible &&\r\n            obj.evented &&\r\n            this.containsPoint(null, obj, pointer)){\r\n          if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\r\n            var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\r\n            if (!isTransparent) {\r\n              return true;\r\n            }\r\n          }\r\n          else {\r\n            return true;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _searchPossibleTargets: function(objects, pointer) {\r\n\r\n        // Cache all targets where their bounding box contains point.\r\n        var target, i = objects.length, normalizedPointer, subTarget;\r\n        // Do not check for currently grouped objects, since we check the parent group itself.\r\n        // until we call this function specifically to search inside the activeGroup\r\n        while (i--) {\r\n          if (this._checkTarget(pointer, objects[i])) {\r\n            target = objects[i];\r\n            if (target.subTargetCheck && target instanceof fabric.Group) {\r\n              normalizedPointer = this._normalizePointer(target, pointer);\r\n              subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\r\n              subTarget && this.targets.push(subTarget);\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        return target;\r\n      },\r\n\r\n      /**\r\n       * Returns pointer coordinates without the effect of the viewport\r\n       * @param {Object} pointer with \"x\" and \"y\" number values\r\n       * @return {Object} object with \"x\" and \"y\" number values\r\n       */\r\n      restorePointerVpt: function(pointer) {\r\n        return fabric.util.transformPoint(\r\n          pointer,\r\n          fabric.util.invertTransform(this.viewportTransform)\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Returns pointer coordinates relative to canvas.\r\n       * Can return coordinates with or without viewportTransform.\r\n       * ignoreZoom false gives back coordinates that represent\r\n       * the point clicked on canvas element.\r\n       * ignoreZoom true gives back coordinates after being processed\r\n       * by the viewportTransform ( sort of coordinates of what is displayed\r\n       * on the canvas where you are clicking.\r\n       * ignoreZoom true = HTMLElement coordinates relative to top,left\r\n       * ignoreZoom false, default = fabric space coordinates, the same used for shape position\r\n       * To interact with your shapes top and left you want to use ignoreZoom true\r\n       * most of the time, while ignoreZoom false will give you coordinates\r\n       * compatible with the object.oCoords system.\r\n       * of the time.\r\n       * @param {Event} e\r\n       * @param {Boolean} ignoreZoom\r\n       * @return {Object} object with \"x\" and \"y\" number values\r\n       */\r\n      getPointer: function (e, ignoreZoom) {\r\n        // return cached values if we are in the event processing chain\r\n        if (this._absolutePointer && !ignoreZoom) {\r\n          return this._absolutePointer;\r\n        }\r\n        if (this._pointer && ignoreZoom) {\r\n          return this._pointer;\r\n        }\r\n\r\n        var pointer = getPointer(e),\r\n            upperCanvasEl = this.upperCanvasEl,\r\n            bounds = upperCanvasEl.getBoundingClientRect(),\r\n            boundsWidth = bounds.width || 0,\r\n            boundsHeight = bounds.height || 0,\r\n            cssScale;\r\n\r\n        if (!boundsWidth || !boundsHeight ) {\r\n          if ('top' in bounds && 'bottom' in bounds) {\r\n            boundsHeight = Math.abs( bounds.top - bounds.bottom );\r\n          }\r\n          if ('right' in bounds && 'left' in bounds) {\r\n            boundsWidth = Math.abs( bounds.right - bounds.left );\r\n          }\r\n        }\r\n\r\n        this.calcOffset();\r\n        pointer.x = pointer.x - this._offset.left;\r\n        pointer.y = pointer.y - this._offset.top;\r\n        if (!ignoreZoom) {\r\n          pointer = this.restorePointerVpt(pointer);\r\n        }\r\n\r\n        if (boundsWidth === 0 || boundsHeight === 0) {\r\n          // If bounds are not available (i.e. not visible), do not apply scale.\r\n          cssScale = { width: 1, height: 1 };\r\n        }\r\n        else {\r\n          cssScale = {\r\n            width: upperCanvasEl.width / boundsWidth,\r\n            height: upperCanvasEl.height / boundsHeight\r\n          };\r\n        }\r\n\r\n        return {\r\n          x: pointer.x * cssScale.width,\r\n          y: pointer.y * cssScale.height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\r\n       */\r\n      _createUpperCanvas: function () {\r\n        var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\r\n\r\n        // there is no need to create a new upperCanvas element if we have already one.\r\n        if (this.upperCanvasEl) {\r\n          this.upperCanvasEl.className = '';\r\n        }\r\n        else {\r\n          this.upperCanvasEl = this._createCanvasElement();\r\n        }\r\n        fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\r\n\r\n        this.wrapperEl.appendChild(this.upperCanvasEl);\r\n\r\n        this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\r\n        this._applyCanvasStyle(this.upperCanvasEl);\r\n        this.contextTop = this.upperCanvasEl.getContext('2d');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createCacheCanvas: function () {\r\n        this.cacheCanvasEl = this._createCanvasElement();\r\n        this.cacheCanvasEl.setAttribute('width', this.width);\r\n        this.cacheCanvasEl.setAttribute('height', this.height);\r\n        this.contextCache = this.cacheCanvasEl.getContext('2d');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _initWrapperElement: function () {\r\n        this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\r\n          'class': this.containerClass\r\n        });\r\n        fabric.util.setStyle(this.wrapperEl, {\r\n          width: this.width + 'px',\r\n          height: this.height + 'px',\r\n          position: 'relative'\r\n        });\r\n        fabric.util.makeElementUnselectable(this.wrapperEl);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {HTMLElement} element canvas element to apply styles on\r\n       */\r\n      _applyCanvasStyle: function (element) {\r\n        var width = this.width || element.width,\r\n            height = this.height || element.height;\r\n\r\n        fabric.util.setStyle(element, {\r\n          position: 'absolute',\r\n          width: width + 'px',\r\n          height: height + 'px',\r\n          left: 0,\r\n          top: 0,\r\n          'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\r\n        });\r\n        element.width = width;\r\n        element.height = height;\r\n        fabric.util.makeElementUnselectable(element);\r\n      },\r\n\r\n      /**\r\n       * Copy the entire inline style from one element (fromEl) to another (toEl)\r\n       * @private\r\n       * @param {Element} fromEl Element style is copied from\r\n       * @param {Element} toEl Element copied style is applied to\r\n       */\r\n      _copyCanvasStyle: function (fromEl, toEl) {\r\n        toEl.style.cssText = fromEl.style.cssText;\r\n      },\r\n\r\n      /**\r\n       * Returns context of canvas where object selection is drawn\r\n       * @return {CanvasRenderingContext2D}\r\n       */\r\n      getSelectionContext: function() {\r\n        return this.contextTop;\r\n      },\r\n\r\n      /**\r\n       * Returns &lt;canvas> element on which object selection is drawn\r\n       * @return {HTMLCanvasElement}\r\n       */\r\n      getSelectionElement: function () {\r\n        return this.upperCanvasEl;\r\n      },\r\n\r\n      /**\r\n       * Returns currently active object\r\n       * @return {fabric.Object} active object\r\n       */\r\n      getActiveObject: function () {\r\n        return this._activeObject;\r\n      },\r\n\r\n      /**\r\n       * Returns an array with the current selected objects\r\n       * @return {fabric.Object} active object\r\n       */\r\n      getActiveObjects: function () {\r\n        var active = this._activeObject;\r\n        if (active) {\r\n          if (active.type === 'activeSelection' && active._objects) {\r\n            return active._objects.slice(0);\r\n          }\r\n          else {\r\n            return [active];\r\n          }\r\n        }\r\n        return [];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} obj Object that was removed\r\n       */\r\n      _onObjectRemoved: function(obj) {\r\n        // removing active object should fire \"selection:cleared\" events\r\n        if (obj === this._activeObject) {\r\n          this.fire('before:selection:cleared', { target: obj });\r\n          this._discardActiveObject();\r\n          this.fire('selection:cleared', { target: obj });\r\n          obj.fire('deselected');\r\n        }\r\n        if (this._hoveredTarget === obj) {\r\n          this._hoveredTarget = null;\r\n        }\r\n        this.callSuper('_onObjectRemoved', obj);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Compares the old activeObject with the current one and fires correct events\r\n       * @param {fabric.Object} obj old activeObject\r\n       */\r\n      _fireSelectionEvents: function(oldObjects, e) {\r\n        var somethingChanged = false, objects = this.getActiveObjects(),\r\n            added = [], removed = [], opt = { e: e };\r\n        oldObjects.forEach(function(oldObject) {\r\n          if (objects.indexOf(oldObject) === -1) {\r\n            somethingChanged = true;\r\n            oldObject.fire('deselected', opt);\r\n            removed.push(oldObject);\r\n          }\r\n        });\r\n        objects.forEach(function(object) {\r\n          if (oldObjects.indexOf(object) === -1) {\r\n            somethingChanged = true;\r\n            object.fire('selected', opt);\r\n            added.push(object);\r\n          }\r\n        });\r\n        if (oldObjects.length > 0 && objects.length > 0) {\r\n          opt.selected = added;\r\n          opt.deselected = removed;\r\n          // added for backward compatibility\r\n          opt.updated = added[0] || removed[0];\r\n          opt.target = this._activeObject;\r\n          somethingChanged && this.fire('selection:updated', opt);\r\n        }\r\n        else if (objects.length > 0) {\r\n          // deprecated event\r\n          if (objects.length === 1) {\r\n            opt.target = added[0];\r\n            this.fire('object:selected', opt);\r\n          }\r\n          opt.selected = added;\r\n          // added for backward compatibility\r\n          opt.target = this._activeObject;\r\n          this.fire('selection:created', opt);\r\n        }\r\n        else if (oldObjects.length > 0) {\r\n          opt.deselected = removed;\r\n          this.fire('selection:cleared', opt);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Sets given object as the only active object on canvas\r\n       * @param {fabric.Object} object Object to set as an active one\r\n       * @param {Event} [e] Event (passed along when firing \"object:selected\")\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      setActiveObject: function (object, e) {\r\n        var currentActives = this.getActiveObjects();\r\n        this._setActiveObject(object, e);\r\n        this._fireSelectionEvents(currentActives, e);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} object to set as active\r\n       * @param {Event} [e] Event (passed along when firing \"object:selected\")\r\n       * @return {Boolean} true if the selection happened\r\n       */\r\n      _setActiveObject: function(object, e) {\r\n        if (this._activeObject === object) {\r\n          return false;\r\n        }\r\n        if (!this._discardActiveObject(e, object)) {\r\n          return false;\r\n        }\r\n        if (object.onSelect({ e: e })) {\r\n          return false;\r\n        }\r\n        this._activeObject = object;\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _discardActiveObject: function(e, object) {\r\n        var obj = this._activeObject;\r\n        if (obj) {\r\n          // onDeselect return TRUE to cancel selection;\r\n          if (obj.onDeselect({ e: e, object: object })) {\r\n            return false;\r\n          }\r\n          this._activeObject = null;\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Discards currently active object and fire events. If the function is called by fabric\r\n       * as a consequence of a mouse event, the event is passed as a parameter and\r\n       * sent to the fire function for the custom events. When used as a method the\r\n       * e param does not have any application.\r\n       * @param {event} e\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      discardActiveObject: function (e) {\r\n        var currentActives = this.getActiveObjects();\r\n        if (currentActives.length) {\r\n          this.fire('before:selection:cleared', { target: currentActives[0], e: e });\r\n        }\r\n        this._discardActiveObject(e);\r\n        this._fireSelectionEvents(currentActives, e);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Clears a canvas element and removes all event listeners\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      dispose: function () {\r\n        var wrapper = this.wrapperEl;\r\n        this.removeListeners();\r\n        wrapper.removeChild(this.upperCanvasEl);\r\n        wrapper.removeChild(this.lowerCanvasEl);\r\n        this.contextCache = null;\r\n        this.contextTop = null;\r\n        ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\r\n          fabric.util.cleanUpJsdomNode(this[element]);\r\n          this[element] = undefined;\r\n        }).bind(this));\r\n        if (wrapper.parentNode) {\r\n          wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\r\n        }\r\n        delete this.wrapperEl;\r\n        fabric.StaticCanvas.prototype.dispose.call(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Clears all contexts (background, main, top) of an instance\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      clear: function () {\r\n        // this.discardActiveGroup();\r\n        this.discardActiveObject();\r\n        this.clearContext(this.contextTop);\r\n        return this.callSuper('clear');\r\n      },\r\n\r\n      /**\r\n       * Draws objects' controls (borders/controls)\r\n       * @param {CanvasRenderingContext2D} ctx Context to render controls on\r\n       */\r\n      drawControls: function(ctx) {\r\n        var activeObject = this._activeObject;\r\n\r\n        if (activeObject) {\r\n          activeObject._renderControls(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObject: function(instance, methodName, propertiesToInclude) {\r\n        //If the object is part of the current selection group, it should\r\n        //be transformed appropriately\r\n        //i.e. it should be serialised as it would appear if the selection group\r\n        //were to be destroyed.\r\n        var originalProperties = this._realizeGroupTransformOnObject(instance),\r\n            object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\r\n        //Undo the damage we did by changing all of its properties\r\n        this._unwindGroupTransformOnObject(instance, originalProperties);\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Realises an object's group transformation on it\r\n       * @private\r\n       * @param {fabric.Object} [instance] the object to transform (gets mutated)\r\n       * @returns the original values of instance which were changed\r\n       */\r\n      _realizeGroupTransformOnObject: function(instance) {\r\n        if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\r\n          var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\r\n          //Copy all the positionally relevant properties across now\r\n          var originalValues = {};\r\n          layoutProps.forEach(function(prop) {\r\n            originalValues[prop] = instance[prop];\r\n          });\r\n          this._activeObject.realizeTransform(instance);\r\n          return originalValues;\r\n        }\r\n        else {\r\n          return null;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Restores the changed properties of instance\r\n       * @private\r\n       * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\r\n       * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\r\n       */\r\n      _unwindGroupTransformOnObject: function(instance, originalValues) {\r\n        if (originalValues) {\r\n          instance.set(originalValues);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGObject: function(markup, instance, reviver) {\r\n        //If the object is in a selection group, simulate what would happen to that\r\n        //object when the group is deselected\r\n        var originalProperties = this._realizeGroupTransformOnObject(instance);\r\n        this.callSuper('_setSVGObject', markup, instance, reviver);\r\n        this._unwindGroupTransformOnObject(instance, originalProperties);\r\n      },\r\n\r\n      setViewportTransform: function (vpt) {\r\n        if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\r\n          this._activeObject.clearContextTop();\r\n        }\r\n        fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\r\n      }\r\n    });\r\n\r\n    // copying static properties manually to work around Opera's bug,\r\n    // where \"prototype\" property is enumerable and overrides existing prototype\r\n    for (var prop in fabric.StaticCanvas) {\r\n      if (prop !== 'prototype') {\r\n        fabric.Canvas[prop] = fabric.StaticCanvas[prop];\r\n      }\r\n    }\r\n\r\n    if (fabric.isTouchSupported) {\r\n      /** @ignore */\r\n      fabric.Canvas.prototype._setCursorFromEvent = function() { };\r\n    }\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var cursorOffset = {\r\n          mt: 0, // n\r\n          tr: 1, // ne\r\n          mr: 2, // e\r\n          br: 3, // se\r\n          mb: 4, // s\r\n          bl: 5, // sw\r\n          ml: 6, // w\r\n          tl: 7 // nw\r\n        },\r\n        addListener = fabric.util.addListener,\r\n        removeListener = fabric.util.removeListener,\r\n        RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\r\n        addEventOptions = { passive: false };\r\n\r\n    function checkClick(e, value) {\r\n      return 'which' in e ? e.which === value : e.button === value - 1;\r\n    }\r\n\r\n    fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\r\n\r\n      /**\r\n       * Map of cursor style values for each of the object controls\r\n       * @private\r\n       */\r\n      cursorMap: [\r\n        'n-resize',\r\n        'ne-resize',\r\n        'e-resize',\r\n        'se-resize',\r\n        's-resize',\r\n        'sw-resize',\r\n        'w-resize',\r\n        'nw-resize'\r\n      ],\r\n\r\n      /**\r\n       * Adds mouse listeners to canvas\r\n       * @private\r\n       */\r\n      _initEventListeners: function () {\r\n        // in case we initialized the class twice. This should not happen normally\r\n        // but in some kind of applications where the canvas element may be changed\r\n        // this is a workaround to having double listeners.\r\n        this.removeListeners();\r\n        this._bindEvents();\r\n        this.addOrRemove(addListener, 'add');\r\n      },\r\n\r\n      addOrRemove: function(functor, eventjsFunctor) {\r\n        functor(fabric.window, 'resize', this._onResize);\r\n        functor(this.upperCanvasEl, 'mousedown', this._onMouseDown);\r\n        functor(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\r\n        functor(this.upperCanvasEl, 'mouseout', this._onMouseOut);\r\n        functor(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\r\n        functor(this.upperCanvasEl, 'wheel', this._onMouseWheel);\r\n        functor(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\r\n        functor(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\r\n        functor(this.upperCanvasEl, 'touchstart', this._onMouseDown, addEventOptions);\r\n        functor(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\r\n        functor(this.upperCanvasEl, 'dragover', this._onDragOver);\r\n        functor(this.upperCanvasEl, 'dragenter', this._onDragEnter);\r\n        functor(this.upperCanvasEl, 'dragleave', this._onDragLeave);\r\n        functor(this.upperCanvasEl, 'drop', this._onDrop);\r\n        if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'gesture', this._onGesture);\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'drag', this._onDrag);\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'orientation', this._onOrientationChange);\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'shake', this._onShake);\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'longpress', this._onLongPress);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Removes all event listeners\r\n       */\r\n      removeListeners: function() {\r\n        this.addOrRemove(removeListener, 'remove');\r\n        // if you dispose on a mouseDown, before mouse up, you need to clean document to...\r\n        removeListener(fabric.document, 'mouseup', this._onMouseUp);\r\n        removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\r\n        removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\r\n        removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _bindEvents: function() {\r\n        if (this.eventsBound) {\r\n          // for any reason we pass here twice we do not want to bind events twice.\r\n          return;\r\n        }\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onResize = this._onResize.bind(this);\r\n        this._onGesture = this._onGesture.bind(this);\r\n        this._onDrag = this._onDrag.bind(this);\r\n        this._onShake = this._onShake.bind(this);\r\n        this._onLongPress = this._onLongPress.bind(this);\r\n        this._onOrientationChange = this._onOrientationChange.bind(this);\r\n        this._onMouseWheel = this._onMouseWheel.bind(this);\r\n        this._onMouseOut = this._onMouseOut.bind(this);\r\n        this._onMouseEnter = this._onMouseEnter.bind(this);\r\n        this._onContextMenu = this._onContextMenu.bind(this);\r\n        this._onDoubleClick = this._onDoubleClick.bind(this);\r\n        this._onDragOver = this._onDragOver.bind(this);\r\n        this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\r\n        this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\r\n        this._onDrop = this._simpleEventHandler.bind(this, 'drop');\r\n        this.eventsBound = true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js gesture\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onGesture: function(e, self) {\r\n        this.__onTransformGesture && this.__onTransformGesture(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js drag\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onDrag: function(e, self) {\r\n        this.__onDrag && this.__onDrag(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on wheel event\r\n       */\r\n      _onMouseWheel: function(e) {\r\n        this.__onMouseWheel(e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onMouseOut: function(e) {\r\n        var target = this._hoveredTarget;\r\n        this.fire('mouse:out', { target: target, e: e });\r\n        this._hoveredTarget = null;\r\n        target && target.fire('mouseout', { e: e });\r\n        if (this._iTextInstances) {\r\n          this._iTextInstances.forEach(function(obj) {\r\n            if (obj.isEditing) {\r\n              obj.hiddenTextarea.focus();\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseenter\r\n       */\r\n      _onMouseEnter: function(e) {\r\n        if (!this.findTarget(e)) {\r\n          this.fire('mouse:over', { target: null, e: e });\r\n          this._hoveredTarget = null;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js orientation change\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onOrientationChange: function(e, self) {\r\n        this.__onOrientationChange && this.__onOrientationChange(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js shake\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onShake: function(e, self) {\r\n        this.__onShake && this.__onShake(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js shake\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onLongPress: function(e, self) {\r\n        this.__onLongPress && this.__onLongPress(e, self);\r\n      },\r\n\r\n      /**\r\n       * prevent default to allow drop event to be fired\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js shake\r\n       */\r\n      _onDragOver: function(e) {\r\n        e.preventDefault();\r\n        var target = this._simpleEventHandler('dragover', e);\r\n        this._fireEnterLeaveEvents(target, e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onContextMenu: function (e) {\r\n        if (this.stopContextMenu) {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onDoubleClick: function (e) {\r\n        this._cacheTransformEventData(e);\r\n        this._handleEvent(e, 'dblclick');\r\n        this._resetTransformEventData(e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onMouseDown: function (e) {\r\n        this.__onMouseDown(e);\r\n        this._resetTransformEventData();\r\n        addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\r\n        addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n\r\n        removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\r\n        removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\r\n\r\n        if (e.type === 'touchstart') {\r\n          // Unbind mousedown to prevent double triggers from touch devices\r\n          removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\r\n        }\r\n        else {\r\n          addListener(fabric.document, 'mouseup', this._onMouseUp);\r\n          addListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      _onMouseUp: function (e) {\r\n        this.__onMouseUp(e);\r\n        this._resetTransformEventData();\r\n        removeListener(fabric.document, 'mouseup', this._onMouseUp);\r\n        removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\r\n\r\n        removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\r\n        removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n\r\n        addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\r\n        addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\r\n\r\n        if (e.type === 'touchend') {\r\n          // Wait 400ms before rebinding mousedown to prevent double triggers\r\n          // from touch devices\r\n          var _this = this;\r\n          setTimeout(function() {\r\n            addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\r\n          }, 400);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousemove\r\n       */\r\n      _onMouseMove: function (e) {\r\n        !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\r\n        this.__onMouseMove(e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onResize: function () {\r\n        this.calcOffset();\r\n      },\r\n\r\n      /**\r\n       * Decides whether the canvas should be redrawn in mouseup and mousedown events.\r\n       * @private\r\n       * @param {Object} target\r\n       * @param {Object} pointer\r\n       */\r\n      _shouldRender: function(target, pointer) {\r\n        var activeObject = this._activeObject;\r\n\r\n        if (activeObject && activeObject.isEditing && target === activeObject) {\r\n          // if we mouse up/down over a editing textbox a cursor change,\r\n          // there is no need to re render\r\n          return false;\r\n        }\r\n        return !!(\r\n          (target && (\r\n            target.isMoving ||\r\n            target !== activeObject))\r\n          ||\r\n          (!target && !!activeObject)\r\n          ||\r\n          (!target && !activeObject && !this._groupSelector)\r\n          ||\r\n          (pointer &&\r\n            this._previousPointer &&\r\n            this.selection && (\r\n              pointer.x !== this._previousPointer.x ||\r\n            pointer.y !== this._previousPointer.y))\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Method that defines the actions when mouse is released on canvas.\r\n       * The method resets the currentTransform parameters, store the image corner\r\n       * position in the image object and render the canvas on top.\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      __onMouseUp: function (e) {\r\n        var target, transform = this._currentTransform,\r\n            groupSelector = this._groupSelector,\r\n            isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\r\n        this._cacheTransformEventData(e);\r\n        target = this._target;\r\n        this._handleEvent(e, 'up:before');\r\n        // if right/middle click just fire events and return\r\n        // target undefined will make the _handleEvent search the target\r\n        if (checkClick(e, RIGHT_CLICK)) {\r\n          if (this.fireRightClick) {\r\n            this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (checkClick(e, MIDDLE_CLICK)) {\r\n          if (this.fireMiddleClick) {\r\n            this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\r\n          }\r\n          this._resetTransformEventData();\r\n          return;\r\n        }\r\n\r\n        if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n          this._onMouseUpInDrawingMode(e);\r\n          return;\r\n        }\r\n\r\n        if (transform) {\r\n          this._finalizeCurrentTransform(e);\r\n        }\r\n\r\n        var shouldRender = this._shouldRender(target, this._absolutePointer);\r\n\r\n        if (target || !isClick) {\r\n          this._maybeGroupObjects(e);\r\n        }\r\n        if (target) {\r\n          target.isMoving = false;\r\n        }\r\n        this._setCursorFromEvent(e, target);\r\n        this._handleEvent(e, 'up', LEFT_CLICK, isClick);\r\n        this._groupSelector = null;\r\n        this._currentTransform = null;\r\n        target && (target.__corner = 0);\r\n        shouldRender && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Handle event firing for target and subtargets\r\n       * @param {Event} e event from mouse\r\n       * @param {String} eventType event to fire (up, down or move)\r\n       * @return {Fabric.Object} target return the the target found, for internal reasons.\r\n       */\r\n      _simpleEventHandler: function(eventType, e) {\r\n        var target = this.findTarget(e),\r\n            targets = this.targets,\r\n            options = {\r\n              e: e,\r\n              target: target,\r\n              subTargets: targets,\r\n            };\r\n        this.fire(eventType, options);\r\n        target && target.fire(eventType, options);\r\n        if (!targets) {\r\n          return target;\r\n        }\r\n        for (var i = 0; i < targets.length; i++) {\r\n          targets[i].fire(eventType, options);\r\n        }\r\n        return target;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Handle event firing for target and subtargets\r\n       * @param {Event} e event from mouse\r\n       * @param {String} eventType event to fire (up, down or move)\r\n       * @param {fabric.Object} targetObj receiving event\r\n       * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\r\n       * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\r\n       */\r\n      _handleEvent: function(e, eventType, button, isClick) {\r\n        var target = this._target,\r\n            targets = this.targets || [],\r\n            options = {\r\n              e: e,\r\n              target: target,\r\n              subTargets: targets,\r\n              button: button || LEFT_CLICK,\r\n              isClick: isClick || false,\r\n              pointer: this._pointer,\r\n              absolutePointer: this._absolutePointer,\r\n              transform: this._currentTransform\r\n            };\r\n        this.fire('mouse:' + eventType, options);\r\n        target && target.fire('mouse' + eventType, options);\r\n        for (var i = 0; i < targets.length; i++) {\r\n          targets[i].fire('mouse' + eventType, options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\r\n       */\r\n      _finalizeCurrentTransform: function(e) {\r\n\r\n        var transform = this._currentTransform,\r\n            target = transform.target,\r\n            eventName,\r\n            options = {\r\n              e: e,\r\n              target: target,\r\n              transform: transform,\r\n            };\r\n\r\n        if (target._scaling) {\r\n          target._scaling = false;\r\n        }\r\n\r\n        target.setCoords();\r\n\r\n        if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\r\n          if (transform.actionPerformed) {\r\n            eventName = this._addEventOptions(options, transform);\r\n            this._fire(eventName, options);\r\n          }\r\n          this._fire('modified', options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Mutate option object in order to add by property and give back the event name.\r\n       * @private\r\n       * @param {Object} options to mutate\r\n       * @param {Object} transform to inspect action from\r\n       */\r\n      _addEventOptions: function(options, transform) {\r\n        // we can probably add more details at low cost\r\n        // scale change, rotation changes, translation changes\r\n        var eventName, by;\r\n        switch (transform.action) {\r\n          case 'scaleX':\r\n            eventName = 'scaled';\r\n            by = 'x';\r\n            break;\r\n          case 'scaleY':\r\n            eventName = 'scaled';\r\n            by = 'y';\r\n            break;\r\n          case 'skewX':\r\n            eventName = 'skewed';\r\n            by = 'x';\r\n            break;\r\n          case 'skewY':\r\n            eventName = 'skewed';\r\n            by = 'y';\r\n            break;\r\n          case 'scale':\r\n            eventName = 'scaled';\r\n            by = 'equally';\r\n            break;\r\n          case 'rotate':\r\n            eventName = 'rotated';\r\n            break;\r\n          case 'drag':\r\n            eventName = 'moved';\r\n            break;\r\n        }\r\n        options.by = by;\r\n        return eventName;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onMouseDownInDrawingMode: function(e) {\r\n        this._isCurrentlyDrawing = true;\r\n        if (this.getActiveObject()) {\r\n          this.discardActiveObject(e).requestRenderAll();\r\n        }\r\n        if (this.clipTo) {\r\n          fabric.util.clipContext(this, this.contextTop);\r\n        }\r\n        var pointer = this.getPointer(e);\r\n        this.freeDrawingBrush.onMouseDown(pointer);\r\n        this._handleEvent(e, 'down');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousemove\r\n       */\r\n      _onMouseMoveInDrawingMode: function(e) {\r\n        if (this._isCurrentlyDrawing) {\r\n          var pointer = this.getPointer(e);\r\n          this.freeDrawingBrush.onMouseMove(pointer);\r\n        }\r\n        this.setCursor(this.freeDrawingCursor);\r\n        this._handleEvent(e, 'move');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      _onMouseUpInDrawingMode: function(e) {\r\n        this._isCurrentlyDrawing = false;\r\n        if (this.clipTo) {\r\n          this.contextTop.restore();\r\n        }\r\n        this.freeDrawingBrush.onMouseUp();\r\n        this._handleEvent(e, 'up');\r\n      },\r\n\r\n      /**\r\n       * Method that defines the actions when mouse is clicked on canvas.\r\n       * The method inits the currentTransform parameters and renders all the\r\n       * canvas so the current image can be placed on the top canvas and the rest\r\n       * in on the container one.\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      __onMouseDown: function (e) {\r\n        this._cacheTransformEventData(e);\r\n        this._handleEvent(e, 'down:before');\r\n        var target = this._target;\r\n        // if right click just fire events\r\n        if (checkClick(e, RIGHT_CLICK)) {\r\n          if (this.fireRightClick) {\r\n            this._handleEvent(e, 'down', RIGHT_CLICK);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (checkClick(e, MIDDLE_CLICK)) {\r\n          if (this.fireMiddleClick) {\r\n            this._handleEvent(e, 'down', MIDDLE_CLICK);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (this.isDrawingMode) {\r\n          this._onMouseDownInDrawingMode(e);\r\n          return;\r\n        }\r\n\r\n        // ignore if some object is being transformed at this moment\r\n        if (this._currentTransform) {\r\n          return;\r\n        }\r\n\r\n        var pointer = this._pointer;\r\n        // save pointer for check in __onMouseUp event\r\n        this._previousPointer = pointer;\r\n        var shouldRender = this._shouldRender(target, pointer),\r\n            shouldGroup = this._shouldGroup(e, target);\r\n        if (this._shouldClearSelection(e, target)) {\r\n          this.discardActiveObject(e);\r\n        }\r\n        else if (shouldGroup) {\r\n          this._handleGrouping(e, target);\r\n          target = this._activeObject;\r\n        }\r\n\r\n        if (this.selection && (!target ||\r\n          (!target.selectable && !target.isEditing && target !== this._activeObject))) {\r\n          this._groupSelector = {\r\n            ex: pointer.x,\r\n            ey: pointer.y,\r\n            top: 0,\r\n            left: 0\r\n          };\r\n        }\r\n\r\n        if (target) {\r\n          if (target.selectable) {\r\n            this.setActiveObject(target, e);\r\n          }\r\n          if (target === this._activeObject && (target.__corner || !shouldGroup)) {\r\n            this._setupCurrentTransform(e, target);\r\n          }\r\n        }\r\n        this._handleEvent(e, 'down');\r\n        // we must renderAll so that we update the visuals\r\n        shouldRender && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * reset cache form common information needed during event processing\r\n       * @private\r\n       */\r\n      _resetTransformEventData: function() {\r\n        this._target = null;\r\n        this._pointer = null;\r\n        this._absolutePointer = null;\r\n      },\r\n\r\n      /**\r\n       * Cache common information needed during event processing\r\n       * @private\r\n       * @param {Event} e Event object fired on event\r\n       */\r\n      _cacheTransformEventData: function(e) {\r\n        // reset in order to avoid stale caching\r\n        this._resetTransformEventData();\r\n        this._pointer = this.getPointer(e, true);\r\n        this._absolutePointer = this.restorePointerVpt(this._pointer);\r\n        this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _beforeTransform: function(e) {\r\n        var t = this._currentTransform;\r\n        this.stateful && t.target.saveState();\r\n        this.fire('before:transform', {\r\n          e: e,\r\n          transform: t,\r\n        });\r\n        // determine if it's a drag or rotate case\r\n        if (t.corner) {\r\n          this.onBeforeScaleRotate(t.target);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method that defines the actions when mouse is hovering the canvas.\r\n       * The currentTransform parameter will definde whether the user is rotating/scaling/translating\r\n       * an image or neither of them (only hovering). A group selection is also possible and would cancel\r\n       * all any other type of action.\r\n       * In case of an image transformation only the top canvas will be rendered.\r\n       * @private\r\n       * @param {Event} e Event object fired on mousemove\r\n       */\r\n      __onMouseMove: function (e) {\r\n        this._handleEvent(e, 'move:before');\r\n        this._cacheTransformEventData(e);\r\n        var target, pointer;\r\n\r\n        if (this.isDrawingMode) {\r\n          this._onMouseMoveInDrawingMode(e);\r\n          return;\r\n        }\r\n        if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\r\n          return;\r\n        }\r\n\r\n        var groupSelector = this._groupSelector;\r\n\r\n        // We initially clicked in an empty area, so we draw a box for multiple selection\r\n        if (groupSelector) {\r\n          pointer = this._pointer;\r\n\r\n          groupSelector.left = pointer.x - groupSelector.ex;\r\n          groupSelector.top = pointer.y - groupSelector.ey;\r\n\r\n          this.renderTop();\r\n        }\r\n        else if (!this._currentTransform) {\r\n          target = this.findTarget(e) || null;\r\n          this._setCursorFromEvent(e, target);\r\n          this._fireOverOutEvents(target, e);\r\n        }\r\n        else {\r\n          this._transformObject(e);\r\n        }\r\n        this._handleEvent(e, 'move');\r\n        this._resetTransformEventData();\r\n      },\r\n\r\n      /**\r\n       * Manage the mouseout, mouseover events for the fabric object on the canvas\r\n       * @param {Fabric.Object} target the target where the target from the mousemove event\r\n       * @param {Event} e Event object fired on mousemove\r\n       * @private\r\n       */\r\n      _fireOverOutEvents: function(target, e) {\r\n        this.fireSynteticInOutEvents(target, e, {\r\n          targetName: '_hoveredTarget',\r\n          canvasEvtOut: 'mouse:out',\r\n          evtOut: 'mouseout',\r\n          canvasEvtIn: 'mouse:over',\r\n          evtIn: 'mouseover',\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\r\n       * @param {Fabric.Object} target the target where the target from the onDrag event\r\n       * @param {Event} e Event object fired on ondrag\r\n       * @private\r\n       */\r\n      _fireEnterLeaveEvents: function(target, e) {\r\n        this.fireSynteticInOutEvents(target, e, {\r\n          targetName: '_draggedoverTarget',\r\n          evtOut: 'dragleave',\r\n          evtIn: 'dragenter',\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Manage the syntetic in/out events for the fabric objects on the canvas\r\n       * @param {Fabric.Object} target the target where the target from the supported events\r\n       * @param {Event} e Event object fired\r\n       * @param {Object} config configuration for the function to work\r\n       * @param {String} config.targetName property on the canvas where the old target is stored\r\n       * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\r\n       * @param {String} config.evtOut name of the event to fire for out\r\n       * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\r\n       * @param {String} config.evtIn name of the event to fire for in\r\n       * @private\r\n       */\r\n      fireSynteticInOutEvents: function(target, e, config) {\r\n        var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,\r\n            targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\r\n        if (targetChanged) {\r\n          inOpt = { e: e, target: target, previousTarget: oldTarget };\r\n          outOpt = { e: e, target: oldTarget, nextTarget: target };\r\n          this[config.targetName] = target;\r\n        }\r\n        inFires = target && targetChanged;\r\n        outFires = oldTarget && targetChanged;\r\n        if (outFires) {\r\n          canvasEvtOut && this.fire(canvasEvtOut, outOpt);\r\n          oldTarget.fire(config.evtOut, outOpt);\r\n        }\r\n        if (inFires) {\r\n          canvasEvtIn && this.fire(canvasEvtIn, inOpt);\r\n          target.fire(config.evtIn, inOpt);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method that defines actions when an Event Mouse Wheel\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      __onMouseWheel: function(e) {\r\n        this._cacheTransformEventData(e);\r\n        this._handleEvent(e, 'wheel');\r\n        this._resetTransformEventData();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event fired on mousemove\r\n       */\r\n      _transformObject: function(e) {\r\n        var pointer = this.getPointer(e),\r\n            transform = this._currentTransform;\r\n\r\n        transform.reset = false;\r\n        transform.target.isMoving = true;\r\n        transform.shiftKey = e.shiftKey;\r\n        transform.altKey = e[this.centeredKey];\r\n\r\n        this._beforeScaleTransform(e, transform);\r\n        this._performTransformAction(e, transform, pointer);\r\n\r\n        transform.actionPerformed && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _performTransformAction: function(e, transform, pointer) {\r\n        var x = pointer.x,\r\n            y = pointer.y,\r\n            action = transform.action,\r\n            actionPerformed = false,\r\n            options = {\r\n              target: transform.target,\r\n              e: e,\r\n              transform: transform,\r\n              pointer: pointer\r\n            };\r\n\r\n        if (action === 'rotate') {\r\n          (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\r\n        }\r\n        else if (action === 'scale') {\r\n          (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\r\n        }\r\n        else if (action === 'scaleX') {\r\n          (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\r\n        }\r\n        else if (action === 'scaleY') {\r\n          (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\r\n        }\r\n        else if (action === 'skewX') {\r\n          (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\r\n        }\r\n        else if (action === 'skewY') {\r\n          (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\r\n        }\r\n        else {\r\n          actionPerformed = this._translateObject(x, y);\r\n          if (actionPerformed) {\r\n            this._fire('moving', options);\r\n            this.setCursor(options.target.moveCursor || this.moveCursor);\r\n          }\r\n        }\r\n        transform.actionPerformed = transform.actionPerformed || actionPerformed;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _fire: function(eventName, options) {\r\n        this.fire('object:' + eventName, options);\r\n        options.target.fire(eventName, options);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _beforeScaleTransform: function(e, transform) {\r\n        if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\r\n          var centerTransform = this._shouldCenterTransform(transform.target);\r\n\r\n          // Switch from a normal resize to center-based\r\n          if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\r\n             // Switch from center-based resize to normal one\r\n             (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\r\n          ) {\r\n            this._resetCurrentTransform();\r\n            transform.reset = true;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {Object} transform current tranform\r\n       * @param {Number} x mouse position x from origin\r\n       * @param {Number} y mouse poistion y from origin\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _onScale: function(e, transform, x, y) {\r\n        if (this._isUniscalePossible(e, transform.target)) {\r\n          transform.currentAction = 'scale';\r\n          return this._scaleObject(x, y);\r\n        }\r\n        else {\r\n          // Switch from a normal resize to proportional\r\n          if (!transform.reset && transform.currentAction === 'scale') {\r\n            this._resetCurrentTransform();\r\n          }\r\n\r\n          transform.currentAction = 'scaleEqually';\r\n          return this._scaleObject(x, y, 'equally');\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target current target\r\n       * @return {Boolean} true if unproportional scaling is possible\r\n       */\r\n      _isUniscalePossible: function(e, target) {\r\n        return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\r\n      },\r\n\r\n      /**\r\n       * Sets the cursor depending on where the canvas is being hovered.\r\n       * Note: very buggy in Opera\r\n       * @param {Event} e Event object\r\n       * @param {Object} target Object that the mouse is hovering, if so.\r\n       */\r\n      _setCursorFromEvent: function (e, target) {\r\n        if (!target) {\r\n          this.setCursor(this.defaultCursor);\r\n          return false;\r\n        }\r\n\r\n        var hoverCursor = target.hoverCursor || this.hoverCursor,\r\n            activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\r\n              this._activeObject : null,\r\n            // only show proper corner when group selection is not active\r\n            corner = (!activeSelection || !activeSelection.contains(target))\r\n                      && target._findTargetCorner(this.getPointer(e, true));\r\n\r\n        if (!corner) {\r\n          this.setCursor(hoverCursor);\r\n        }\r\n        else {\r\n          this.setCursor(this.getCornerCursor(corner, target, e));\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      getCornerCursor: function(corner, target, e) {\r\n        if (this.actionIsDisabled(corner, target, e)) {\r\n          return this.notAllowedCursor;\r\n        }\r\n        else if (corner in cursorOffset) {\r\n          return this._getRotatedCornerCursor(corner, target, e);\r\n        }\r\n        else if (corner === 'mtr' && target.hasRotatingPoint) {\r\n          return this.rotationCursor;\r\n        }\r\n        else {\r\n          return this.defaultCursor;\r\n        }\r\n      },\r\n\r\n      actionIsDisabled: function(corner, target, e) {\r\n        if (corner === 'mt' || corner === 'mb') {\r\n          return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\r\n        }\r\n        else if (corner === 'ml' || corner === 'mr') {\r\n          return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\r\n        }\r\n        else if (corner === 'mtr') {\r\n          return target.lockRotation;\r\n        }\r\n        else {\r\n          return this._isUniscalePossible(e, target) ?\r\n            target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getRotatedCornerCursor: function(corner, target, e) {\r\n        var n = Math.round((target.angle % 360) / 45);\r\n\r\n        if (n < 0) {\r\n          n += 8; // full circle ahead\r\n        }\r\n        n += cursorOffset[corner];\r\n        if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\r\n          //if we are holding shift and we are on a mx corner...\r\n          n += 2;\r\n        }\r\n        // normalize n to be from 0 to 7\r\n        n %= 8;\r\n\r\n        return this.cursorMap[n];\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var min = Math.min,\r\n        max = Math.max;\r\n\r\n    fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       * @return {Boolean}\r\n       */\r\n      _shouldGroup: function(e, target) {\r\n        var activeObject = this._activeObject;\r\n\r\n        return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\r\n              (activeObject !== target || activeObject.type === 'activeSelection');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       */\r\n      _handleGrouping: function (e, target) {\r\n        var activeObject = this._activeObject;\r\n        if (activeObject.__corner) {\r\n          return;\r\n        }\r\n        if (target === activeObject) {\r\n          // if it's a group, find target again, using activeGroup objects\r\n          target = this.findTarget(e, true);\r\n          // if even object is not found or we are on activeObjectCorner, bail out\r\n          if (!target) {\r\n            return;\r\n          }\r\n        }\r\n        if (activeObject && activeObject.type === 'activeSelection') {\r\n          this._updateActiveSelection(target, e);\r\n        }\r\n        else {\r\n          this._createActiveSelection(target, e);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _updateActiveSelection: function(target, e) {\r\n        var activeSelection = this._activeObject,\r\n            currentActiveObjects = activeSelection._objects.slice(0);\r\n        if (activeSelection.contains(target)) {\r\n          activeSelection.removeWithUpdate(target);\r\n          this._hoveredTarget = target;\r\n          if (activeSelection.size() === 1) {\r\n            // activate last remaining object\r\n            this._setActiveObject(activeSelection.item(0), e);\r\n          }\r\n        }\r\n        else {\r\n          activeSelection.addWithUpdate(target);\r\n          this._hoveredTarget = activeSelection;\r\n        }\r\n        this._fireSelectionEvents(currentActiveObjects, e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createActiveSelection: function(target, e) {\r\n        var currentActives = this.getActiveObjects(), group = this._createGroup(target);\r\n        this._hoveredTarget = group;\r\n        this._setActiveObject(group, e);\r\n        this._fireSelectionEvents(currentActives, e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} target\r\n       */\r\n      _createGroup: function(target) {\r\n        var objects = this._objects,\r\n            isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\r\n            groupObjects = isActiveLower\r\n              ? [this._activeObject, target]\r\n              : [target, this._activeObject];\r\n        this._activeObject.isEditing && this._activeObject.exitEditing();\r\n        return new fabric.ActiveSelection(groupObjects, {\r\n          canvas: this\r\n        });\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e mouse event\r\n       */\r\n      _groupSelectedObjects: function (e) {\r\n\r\n        var group = this._collectObjects(),\r\n            aGroup;\r\n\r\n        // do not create group for 1 element only\r\n        if (group.length === 1) {\r\n          this.setActiveObject(group[0], e);\r\n        }\r\n        else if (group.length > 1) {\r\n          aGroup = new fabric.ActiveSelection(group.reverse(), {\r\n            canvas: this\r\n          });\r\n          this.setActiveObject(aGroup, e);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _collectObjects: function() {\r\n        var group = [],\r\n            currentObject,\r\n            x1 = this._groupSelector.ex,\r\n            y1 = this._groupSelector.ey,\r\n            x2 = x1 + this._groupSelector.left,\r\n            y2 = y1 + this._groupSelector.top,\r\n            selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\r\n            selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\r\n            allowIntersect = !this.selectionFullyContained,\r\n            isClick = x1 === x2 && y1 === y2;\r\n        // we iterate reverse order to collect top first in case of click.\r\n        for (var i = this._objects.length; i--; ) {\r\n          currentObject = this._objects[i];\r\n\r\n          if (!currentObject || !currentObject.selectable || !currentObject.visible) {\r\n            continue;\r\n          }\r\n\r\n          if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\r\n              currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\r\n              (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\r\n              (allowIntersect && currentObject.containsPoint(selectionX2Y2))\r\n          ) {\r\n            group.push(currentObject);\r\n\r\n            // only add one object if it's a click\r\n            if (isClick) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return group;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _maybeGroupObjects: function(e) {\r\n        if (this.selection && this._groupSelector) {\r\n          this._groupSelectedObjects(e);\r\n        }\r\n        this.setCursor(this.defaultCursor);\r\n        // clear selection and current transformation\r\n        this._groupSelector = null;\r\n      }\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  (function () {\r\n\r\n    var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\r\n\r\n    fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n      /**\r\n       * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\r\n       * @param {Object} [options] Options object\r\n       * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n       * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n       * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\r\n       * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n       * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n       * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n       * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n       * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\r\n       * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n       * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\r\n       * @example <caption>Generate jpeg dataURL with lower quality</caption>\r\n       * var dataURL = canvas.toDataURL({\r\n       *   format: 'jpeg',\r\n       *   quality: 0.8\r\n       * });\r\n       * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\r\n       * var dataURL = canvas.toDataURL({\r\n       *   format: 'png',\r\n       *   left: 100,\r\n       *   top: 100,\r\n       *   width: 200,\r\n       *   height: 200\r\n       * });\r\n       * @example <caption>Generate double scaled png dataURL</caption>\r\n       * var dataURL = canvas.toDataURL({\r\n       *   format: 'png',\r\n       *   multiplier: 2\r\n       * });\r\n       */\r\n      toDataURL: function (options) {\r\n        options || (options = { });\r\n\r\n        var format = options.format || 'png',\r\n            quality = options.quality || 1,\r\n            multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? 1 : 1 / this.getRetinaScaling()),\r\n            cropping = {\r\n              left: options.left || 0,\r\n              top: options.top || 0,\r\n              width: options.width || 0,\r\n              height: options.height || 0,\r\n            };\r\n        return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\r\n\r\n        var origWidth = this.width,\r\n            origHeight = this.height,\r\n            scaledWidth = (cropping.width || this.width) * multiplier,\r\n            scaledHeight = (cropping.height || this.height) * multiplier,\r\n            zoom = this.getZoom(),\r\n            newZoom = zoom * multiplier,\r\n            vp = this.viewportTransform,\r\n            translateX = (vp[4] - cropping.left) * multiplier,\r\n            translateY = (vp[5] - cropping.top) * multiplier,\r\n            newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\r\n            originalInteractive = this.interactive,\r\n            originalSkipOffScreen = this.skipOffscreen,\r\n            needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\r\n\r\n        this.viewportTransform = newVp;\r\n        this.skipOffscreen = false;\r\n        // setting interactive to false avoid exporting controls\r\n        this.interactive = false;\r\n        if (needsResize) {\r\n          this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\r\n        }\r\n        // call a renderAll to force sync update. This will cancel the scheduled requestRenderAll\r\n        // from setDimensions\r\n        this.renderAll();\r\n        var data = this.__toDataURL(format, quality, cropping);\r\n        this.interactive = originalInteractive;\r\n        this.skipOffscreen = originalSkipOffScreen;\r\n        this.viewportTransform = vp;\r\n        //setDimensions with no option object is taking care of:\r\n        //this.width, this.height, this.requestRenderAll()\r\n        if (needsResize) {\r\n          this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\r\n        }\r\n        this.renderAll();\r\n        return data;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __toDataURL: function(format, quality) {\r\n\r\n        var canvasEl = this.contextContainer.canvas;\r\n        // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\r\n        if (format === 'jpg') {\r\n          format = 'jpeg';\r\n        }\r\n\r\n        var data = supportQuality\r\n          ? canvasEl.toDataURL('image/' + format, quality)\r\n          : canvasEl.toDataURL('image/' + format);\r\n\r\n        return data;\r\n      },\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Populates canvas with data from the specified dataless JSON.\r\n     * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\r\n     * @deprecated since 1.2.2\r\n     * @param {String|Object} json JSON string or object\r\n     * @param {Function} callback Callback, invoked when json is parsed\r\n     *                            and corresponding objects (e.g: {@link fabric.Image})\r\n     *                            are initialized\r\n     * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\r\n     */\r\n    loadFromDatalessJSON: function (json, callback, reviver) {\r\n      return this.loadFromJSON(json, callback, reviver);\r\n    },\r\n\r\n    /**\r\n     * Populates canvas with data from the specified JSON.\r\n     * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\r\n     * @param {String|Object} json JSON string or object\r\n     * @param {Function} callback Callback, invoked when json is parsed\r\n     *                            and corresponding objects (e.g: {@link fabric.Image})\r\n     *                            are initialized\r\n     * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\r\n     * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\r\n     * @example <caption>loadFromJSON</caption>\r\n     * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\r\n     * @example <caption>loadFromJSON with reviver</caption>\r\n     * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\r\n     *   // `o` = json object\r\n     *   // `object` = fabric.Object instance\r\n     *   // ... do some stuff ...\r\n     * });\r\n     */\r\n    loadFromJSON: function (json, callback, reviver) {\r\n      if (!json) {\r\n        return;\r\n      }\r\n\r\n      // serialize if it wasn't already\r\n      var serialized = (typeof json === 'string')\r\n        ? JSON.parse(json)\r\n        : fabric.util.object.clone(json);\r\n\r\n      var _this = this,\r\n          renderOnAddRemove = this.renderOnAddRemove;\r\n      this.renderOnAddRemove = false;\r\n\r\n      this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\r\n        _this.clear();\r\n        _this._setBgOverlay(serialized, function () {\r\n          enlivenedObjects.forEach(function(obj, index) {\r\n            // we splice the array just in case some custom classes restored from JSON\r\n            // will add more object to canvas at canvas init.\r\n            _this.insertAt(obj, index);\r\n          });\r\n          _this.renderOnAddRemove = renderOnAddRemove;\r\n          // remove parts i cannot set as options\r\n          delete serialized.objects;\r\n          delete serialized.backgroundImage;\r\n          delete serialized.overlayImage;\r\n          delete serialized.background;\r\n          delete serialized.overlay;\r\n          // this._initOptions does too many things to just\r\n          // call it. Normally loading an Object from JSON\r\n          // create the Object instance. Here the Canvas is\r\n          // already an instance and we are just loading things over it\r\n          _this._setOptions(serialized);\r\n          _this.renderAll();\r\n          callback && callback();\r\n        });\r\n      }, reviver);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} serialized Object with background and overlay information\r\n     * @param {Function} callback Invoked after all background and overlay images/patterns loaded\r\n     */\r\n    _setBgOverlay: function(serialized, callback) {\r\n      var loaded = {\r\n        backgroundColor: false,\r\n        overlayColor: false,\r\n        backgroundImage: false,\r\n        overlayImage: false\r\n      };\r\n\r\n      if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\r\n        callback && callback();\r\n        return;\r\n      }\r\n\r\n      var cbIfLoaded = function () {\r\n        if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\r\n          callback && callback();\r\n        }\r\n      };\r\n\r\n      this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\r\n      this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\r\n      this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\r\n      this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\r\n     * @param {(Object|String)} value Value to set\r\n     * @param {Object} loaded Set loaded property to true if property is set\r\n     * @param {Object} callback Callback function to invoke after property is set\r\n     */\r\n    __setBgOverlay: function(property, value, loaded, callback) {\r\n      var _this = this;\r\n\r\n      if (!value) {\r\n        loaded[property] = true;\r\n        callback && callback();\r\n        return;\r\n      }\r\n\r\n      if (property === 'backgroundImage' || property === 'overlayImage') {\r\n        fabric.util.enlivenObjects([value], function(enlivedObject){\r\n          _this[property] = enlivedObject[0];\r\n          loaded[property] = true;\r\n          callback && callback();\r\n        });\r\n      }\r\n      else {\r\n        this['set' + fabric.util.string.capitalize(property, true)](value, function() {\r\n          loaded[property] = true;\r\n          callback && callback();\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Array} objects\r\n     * @param {Function} callback\r\n     * @param {Function} [reviver]\r\n     */\r\n    _enlivenObjects: function (objects, callback, reviver) {\r\n      if (!objects || objects.length === 0) {\r\n        callback && callback([]);\r\n        return;\r\n      }\r\n\r\n      fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\r\n        callback && callback(enlivenedObjects);\r\n      }, null, reviver);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} format\r\n     * @param {Function} callback\r\n     */\r\n    _toDataURL: function (format, callback) {\r\n      this.clone(function (clone) {\r\n        callback(clone.toDataURL(format));\r\n      });\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} format\r\n     * @param {Number} multiplier\r\n     * @param {Function} callback\r\n     */\r\n    _toDataURLWithMultiplier: function (format, multiplier, callback) {\r\n      this.clone(function (clone) {\r\n        callback(clone.toDataURLWithMultiplier(format, multiplier));\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Clones canvas instance\r\n     * @param {Object} [callback] Receives cloned instance as a first argument\r\n     * @param {Array} [properties] Array of properties to include in the cloned canvas and children\r\n     */\r\n    clone: function (callback, properties) {\r\n      var data = JSON.stringify(this.toJSON(properties));\r\n      this.cloneWithoutData(function(clone) {\r\n        clone.loadFromJSON(data, function() {\r\n          callback && callback(clone);\r\n        });\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Clones canvas instance without cloning existing data.\r\n     * This essentially copies canvas dimensions, clipping properties, etc.\r\n     * but leaves data empty (so that you can populate it with your own)\r\n     * @param {Object} [callback] Receives cloned instance as a first argument\r\n     */\r\n    cloneWithoutData: function(callback) {\r\n      var el = fabric.util.createCanvasElement();\r\n\r\n      el.width = this.width;\r\n      el.height = this.height;\r\n\r\n      var clone = new fabric.Canvas(el);\r\n      clone.clipTo = this.clipTo;\r\n      if (this.backgroundImage) {\r\n        clone.setBackgroundImage(this.backgroundImage.src, function() {\r\n          clone.renderAll();\r\n          callback && callback(clone);\r\n        });\r\n        clone.backgroundImageOpacity = this.backgroundImageOpacity;\r\n        clone.backgroundImageStretch = this.backgroundImageStretch;\r\n      }\r\n      else {\r\n        callback && callback(clone);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        clone = fabric.util.object.clone,\r\n        toFixed = fabric.util.toFixed,\r\n        capitalize = fabric.util.string.capitalize,\r\n        degreesToRadians = fabric.util.degreesToRadians,\r\n        supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\r\n        objectCaching = !fabric.isLikelyNode,\r\n        ALIASING_LIMIT = 2;\r\n\r\n    if (fabric.Object) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Root object class from which all 2d shape classes inherit from\r\n     * @class fabric.Object\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\r\n     * @see {@link fabric.Object#initialize} for constructor definition\r\n     *\r\n     * @fires added\r\n     * @fires removed\r\n     *\r\n     * @fires selected\r\n     * @fires deselected\r\n     * @fires modified\r\n     * @fires modified\r\n     * @fires moved\r\n     * @fires scaled\r\n     * @fires rotated\r\n     * @fires skewed\r\n     *\r\n     * @fires rotating\r\n     * @fires scaling\r\n     * @fires moving\r\n     * @fires skewing\r\n     *\r\n     * @fires mousedown\r\n     * @fires mouseup\r\n     * @fires mouseover\r\n     * @fires mouseout\r\n     * @fires mousewheel\r\n     * @fires mousedblclick\r\n     *\r\n     * @fires dragover\r\n     * @fires dragenter\r\n     * @fires dragleave\r\n     * @fires drop\r\n     */\r\n    fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Type of an object (rect, circle, path, etc.).\r\n       * Note that this property is meant to be read-only and not meant to be modified.\r\n       * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\r\n       * @type String\r\n       * @default\r\n       */\r\n      type:                     'object',\r\n\r\n      /**\r\n       * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\r\n       * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\r\n       * @type String\r\n       * @default\r\n       */\r\n      originX:                  'left',\r\n\r\n      /**\r\n       * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\r\n       * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\r\n       * @type String\r\n       * @default\r\n       */\r\n      originY:                  'top',\r\n\r\n      /**\r\n       * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\r\n       * @type Number\r\n       * @default\r\n       */\r\n      top:                      0,\r\n\r\n      /**\r\n       * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\r\n       * @type Number\r\n       * @default\r\n       */\r\n      left:                     0,\r\n\r\n      /**\r\n       * Object width\r\n       * @type Number\r\n       * @default\r\n       */\r\n      width:                    0,\r\n\r\n      /**\r\n       * Object height\r\n       * @type Number\r\n       * @default\r\n       */\r\n      height:                   0,\r\n\r\n      /**\r\n       * Object scale factor (horizontal)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      scaleX:                   1,\r\n\r\n      /**\r\n       * Object scale factor (vertical)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      scaleY:                   1,\r\n\r\n      /**\r\n       * When true, an object is rendered as flipped horizontally\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      flipX:                    false,\r\n\r\n      /**\r\n       * When true, an object is rendered as flipped vertically\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      flipY:                    false,\r\n\r\n      /**\r\n       * Opacity of an object\r\n       * @type Number\r\n       * @default\r\n       */\r\n      opacity:                  1,\r\n\r\n      /**\r\n       * Angle of rotation of an object (in degrees)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      angle:                    0,\r\n\r\n      /**\r\n       * Angle of skew on x axes of an object (in degrees)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      skewX:                    0,\r\n\r\n      /**\r\n       * Angle of skew on y axes of an object (in degrees)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      skewY:                    0,\r\n\r\n      /**\r\n       * Size of object's controlling corners (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cornerSize:               13,\r\n\r\n      /**\r\n       * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      transparentCorners:       true,\r\n\r\n      /**\r\n       * Default cursor value used when hovering over this object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      hoverCursor:              null,\r\n\r\n      /**\r\n       * Default cursor value used when moving this object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      moveCursor:               null,\r\n\r\n      /**\r\n       * Padding between object and its controlling borders (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      padding:                  0,\r\n\r\n      /**\r\n       * Color of controlling borders of an object (when it's active)\r\n       * @type String\r\n       * @default\r\n       */\r\n      borderColor:              'rgba(102,153,255,0.75)',\r\n\r\n      /**\r\n       * Array specifying dash pattern of an object's borders (hasBorder must be true)\r\n       * @since 1.6.2\r\n       * @type Array\r\n       */\r\n      borderDashArray:          null,\r\n\r\n      /**\r\n       * Color of controlling corners of an object (when it's active)\r\n       * @type String\r\n       * @default\r\n       */\r\n      cornerColor:              'rgba(102,153,255,0.5)',\r\n\r\n      /**\r\n       * Color of controlling corners of an object (when it's active and transparentCorners false)\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      cornerStrokeColor:        null,\r\n\r\n      /**\r\n       * Specify style of control, 'rect' or 'circle'\r\n       * @since 1.6.2\r\n       * @type String\r\n       */\r\n      cornerStyle:          'rect',\r\n\r\n      /**\r\n       * Array specifying dash pattern of an object's control (hasBorder must be true)\r\n       * @since 1.6.2\r\n       * @type Array\r\n       */\r\n      cornerDashArray:          null,\r\n\r\n      /**\r\n       * When true, this object will use center point as the origin of transformation\r\n       * when being scaled via the controls.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredScaling:          false,\r\n\r\n      /**\r\n       * When true, this object will use center point as the origin of transformation\r\n       * when being rotated via the controls.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredRotation:         true,\r\n\r\n      /**\r\n       * Color of object's fill\r\n       * takes css colors https://www.w3.org/TR/css-color-3/\r\n       * @type String\r\n       * @default\r\n       */\r\n      fill:                     'rgb(0,0,0)',\r\n\r\n      /**\r\n       * Fill rule used to fill an object\r\n       * accepted values are nonzero, evenodd\r\n       * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\r\n       * @type String\r\n       * @default\r\n       */\r\n      fillRule:                 'nonzero',\r\n\r\n      /**\r\n       * Composite rule used for canvas globalCompositeOperation\r\n       * @type String\r\n       * @default\r\n       */\r\n      globalCompositeOperation: 'source-over',\r\n\r\n      /**\r\n       * Background color of an object.\r\n       * takes css colors https://www.w3.org/TR/css-color-3/\r\n       * @type String\r\n       * @default\r\n       */\r\n      backgroundColor:          '',\r\n\r\n      /**\r\n       * Selection Background color of an object. colored layer behind the object when it is active.\r\n       * does not mix good with globalCompositeOperation methods.\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionBackgroundColor:          '',\r\n\r\n      /**\r\n       * When defined, an object is rendered via stroke and this property specifies its color\r\n       * takes css colors https://www.w3.org/TR/css-color-3/\r\n       * @type String\r\n       * @default\r\n       */\r\n      stroke:                   null,\r\n\r\n      /**\r\n       * Width of a stroke used to render this object\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeWidth:              1,\r\n\r\n      /**\r\n       * Array specifying dash pattern of an object's stroke (stroke must be defined)\r\n       * @type Array\r\n       */\r\n      strokeDashArray:          null,\r\n\r\n      /**\r\n       * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\r\n       * @type String\r\n       * @default\r\n       */\r\n      strokeLineCap:            'butt',\r\n\r\n      /**\r\n       * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\r\n       * @type String\r\n       * @default\r\n       */\r\n      strokeLineJoin:           'miter',\r\n\r\n      /**\r\n       * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeMiterLimit:         4,\r\n\r\n      /**\r\n       * Shadow object representing shadow of this shape\r\n       * @type fabric.Shadow\r\n       * @default\r\n       */\r\n      shadow:                   null,\r\n\r\n      /**\r\n       * Opacity of object's controlling borders when object is active and moving\r\n       * @type Number\r\n       * @default\r\n       */\r\n      borderOpacityWhenMoving:  0.4,\r\n\r\n      /**\r\n       * Scale factor of object's controlling borders\r\n       * @type Number\r\n       * @default\r\n       */\r\n      borderScaleFactor:        1,\r\n\r\n      /**\r\n       * Transform matrix (similar to SVG's transform matrix)\r\n       * @type Array\r\n       */\r\n      transformMatrix:          null,\r\n\r\n      /**\r\n       * Minimum allowed scale value of an object\r\n       * @type Number\r\n       * @default\r\n       */\r\n      minScaleLimit:            0,\r\n\r\n      /**\r\n       * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\r\n       * But events still fire on it.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      selectable:               true,\r\n\r\n      /**\r\n       * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      evented:                  true,\r\n\r\n      /**\r\n       * When set to `false`, an object is not rendered on canvas\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      visible:                  true,\r\n\r\n      /**\r\n       * When set to `false`, object's controls are not displayed and can not be used to manipulate object\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      hasControls:              true,\r\n\r\n      /**\r\n       * When set to `false`, object's controlling borders are not rendered\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      hasBorders:               true,\r\n\r\n      /**\r\n       * When set to `false`, object's controlling rotating point will not be visible or selectable\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      hasRotatingPoint:         true,\r\n\r\n      /**\r\n       * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      rotatingPointOffset:      40,\r\n\r\n      /**\r\n       * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      perPixelTargetFind:       false,\r\n\r\n      /**\r\n       * When `false`, default object's values are not included in its serialization\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      includeDefaultValues:     true,\r\n\r\n      /**\r\n       * Function that determines clipping of an object (context is passed as a first argument).\r\n       * If you are using code minification, ctx argument can be minified/manglied you should use\r\n       * as a workaround `var ctx = arguments[0];` in the function;\r\n       * Note that context origin is at the object's center point (not left/top corner)\r\n       * @deprecated since 2.0.0\r\n       * @type Function\r\n       */\r\n      clipTo:                   null,\r\n\r\n      /**\r\n       * When `true`, object horizontal movement is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockMovementX:            false,\r\n\r\n      /**\r\n       * When `true`, object vertical movement is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockMovementY:            false,\r\n\r\n      /**\r\n       * When `true`, object rotation is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockRotation:             false,\r\n\r\n      /**\r\n       * When `true`, object horizontal scaling is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockScalingX:             false,\r\n\r\n      /**\r\n       * When `true`, object vertical scaling is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockScalingY:             false,\r\n\r\n      /**\r\n       * When `true`, object non-uniform scaling is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockUniScaling:           false,\r\n\r\n      /**\r\n       * When `true`, object horizontal skewing is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockSkewingX:             false,\r\n\r\n      /**\r\n       * When `true`, object vertical skewing is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockSkewingY:             false,\r\n\r\n      /**\r\n       * When `true`, object cannot be flipped by scaling into negative values\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockScalingFlip:          false,\r\n\r\n      /**\r\n       * When `true`, object is not exported in OBJECT/JSON\r\n       * since 1.6.3\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      excludeFromExport:        false,\r\n\r\n      /**\r\n       * When `true`, object is cached on an additional canvas.\r\n       * default to true\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default true\r\n       */\r\n      objectCaching:            objectCaching,\r\n\r\n      /**\r\n       * When `true`, object properties are checked for cache invalidation. In some particular\r\n       * situation you may want this to be disabled ( spray brush, very big, groups)\r\n       * or if your application does not allow you to modify properties for groups child you want\r\n       * to disable it for groups.\r\n       * default to false\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default false\r\n       */\r\n      statefullCache:            false,\r\n\r\n      /**\r\n       * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\r\n       * too much and will be redrawn with correct details at the end of scaling.\r\n       * this setting is performance and application dependant.\r\n       * default to true\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default true\r\n       */\r\n      noScaleCache:              true,\r\n\r\n      /**\r\n       * When set to `true`, object's cache will be rerendered next render call.\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default true\r\n       */\r\n      dirty:                true,\r\n\r\n      /**\r\n       * keeps the value of the last hovered coner during mouse move.\r\n       * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\r\n       * It should be private, but there is no harm in using it as\r\n       * a read-only property.\r\n       * @type number|string|any\r\n       * @default 0\r\n       */\r\n      __corner: 0,\r\n\r\n      /**\r\n       * Determins if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\r\n       * @type String\r\n       * @default\r\n       */\r\n      paintFirst:           'fill',\r\n\r\n      /**\r\n       * List of properties to consider when checking if state\r\n       * of an object is changed (fabric.Object#hasStateChanged)\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: (\r\n        'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\r\n        'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\r\n        'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\r\n        'skewX skewY fillRule paintFirst'\r\n      ).split(' '),\r\n\r\n      /**\r\n       * List of properties to consider when checking if cache needs refresh\r\n       * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\r\n       * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\r\n       * and refreshed at the next render\r\n       * @type Array\r\n       */\r\n      cacheProperties: (\r\n        'fill stroke strokeWidth strokeDashArray width height paintFirst' +\r\n        ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\r\n      ).split(' '),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        if (options) {\r\n          this.setOptions(options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Create a the canvas used to keep the cached copy of the object\r\n       * @private\r\n       */\r\n      _createCacheCanvas: function() {\r\n        this._cacheProperties = {};\r\n        this._cacheCanvas = fabric.util.createCanvasElement();\r\n        this._cacheContext = this._cacheCanvas.getContext('2d');\r\n        this._updateCacheCanvas();\r\n        // if canvas gets created, is empty, so dirty.\r\n        this.dirty = true;\r\n      },\r\n\r\n      /**\r\n       * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\r\n       * and each side do not cross fabric.cacheSideLimit\r\n       * those numbers are configurable so that you can get as much detail as you want\r\n       * making bargain with performances.\r\n       * @param {Object} dims\r\n       * @param {Object} dims.width width of canvas\r\n       * @param {Object} dims.height height of canvas\r\n       * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.width width of canvas\r\n       * @return {Object}.height height of canvas\r\n       * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       */\r\n      _limitCacheSize: function(dims) {\r\n        var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\r\n            width = dims.width, height = dims.height,\r\n            max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\r\n        if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\r\n          if (width < min) {\r\n            dims.width = min;\r\n          }\r\n          if (height < min) {\r\n            dims.height = min;\r\n          }\r\n          return dims;\r\n        }\r\n        var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\r\n            capValue = fabric.util.capValue,\r\n            x = capValue(min, limitedDims.x, max),\r\n            y = capValue(min, limitedDims.y, max);\r\n        if (width > x) {\r\n          dims.zoomX /= width / x;\r\n          dims.width = x;\r\n          dims.capped = true;\r\n        }\r\n        if (height > y) {\r\n          dims.zoomY /= height / y;\r\n          dims.height = y;\r\n          dims.capped = true;\r\n        }\r\n        return dims;\r\n      },\r\n\r\n      /**\r\n       * Return the dimension and the zoom level needed to create a cache canvas\r\n       * big enough to host the object to be cached.\r\n       * @private\r\n       * @param {Object} dim.x width of object to be cached\r\n       * @param {Object} dim.y height of object to be cached\r\n       * @return {Object}.width width of canvas\r\n       * @return {Object}.height height of canvas\r\n       * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       */\r\n      _getCacheCanvasDimensions: function() {\r\n        var objectScale = this.getTotalObjectScaling(),\r\n            dim = this._getNonTransformedDimensions(),\r\n            zoomX = objectScale.scaleX,\r\n            zoomY = objectScale.scaleY,\r\n            width = dim.x * zoomX,\r\n            height = dim.y * zoomY;\r\n        return {\r\n          // for sure this ALIASING_LIMIT is slightly crating problem\r\n          // in situation in wich the cache canvas gets an upper limit\r\n          width: width + ALIASING_LIMIT,\r\n          height: height + ALIASING_LIMIT,\r\n          zoomX: zoomX,\r\n          zoomY: zoomY,\r\n          x: dim.x,\r\n          y: dim.y\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Update width and height of the canvas for cache\r\n       * returns true or false if canvas needed resize.\r\n       * @private\r\n       * @return {Boolean} true if the canvas has been resized\r\n       */\r\n      _updateCacheCanvas: function() {\r\n        if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\r\n          var target = this.canvas._currentTransform.target,\r\n              action = this.canvas._currentTransform.action;\r\n          if (this === target && action.slice && action.slice(0, 5) === 'scale') {\r\n            return false;\r\n          }\r\n        }\r\n        var canvas = this._cacheCanvas,\r\n            dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\r\n            minCacheSize = fabric.minCacheSideLimit,\r\n            width = dims.width, height = dims.height, drawingWidth, drawingHeight,\r\n            zoomX = dims.zoomX, zoomY = dims.zoomY,\r\n            dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\r\n            zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\r\n            shouldRedraw = dimensionsChanged || zoomChanged,\r\n            additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\r\n        if (dimensionsChanged) {\r\n          var canvasWidth = this._cacheCanvas.width,\r\n              canvasHeight = this._cacheCanvas.height,\r\n              sizeGrowing = width > canvasWidth || height > canvasHeight,\r\n              sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\r\n                canvasWidth > minCacheSize && canvasHeight > minCacheSize;\r\n          shouldResizeCanvas = sizeGrowing || sizeShrinking;\r\n          if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\r\n            additionalWidth = width * 0.1;\r\n            additionalHeight = height * 0.1;\r\n          }\r\n        }\r\n        if (shouldRedraw) {\r\n          if (shouldResizeCanvas) {\r\n            canvas.width = Math.ceil(width + additionalWidth);\r\n            canvas.height = Math.ceil(height + additionalHeight);\r\n          }\r\n          else {\r\n            this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\r\n            this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\r\n          }\r\n          drawingWidth = dims.x * zoomX / 2;\r\n          drawingHeight = dims.y * zoomY / 2;\r\n          this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\r\n          this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\r\n          this.cacheWidth = width;\r\n          this.cacheHeight = height;\r\n          this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\r\n          this._cacheContext.scale(zoomX, zoomY);\r\n          this.zoomX = zoomX;\r\n          this.zoomY = zoomY;\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Sets object's properties from options\r\n       * @param {Object} [options] Options object\r\n       */\r\n      setOptions: function(options) {\r\n        this._setOptions(options);\r\n        this._initGradient(options.fill, 'fill');\r\n        this._initGradient(options.stroke, 'stroke');\r\n        this._initClipping(options);\r\n        this._initPattern(options.fill, 'fill');\r\n        this._initPattern(options.stroke, 'stroke');\r\n      },\r\n\r\n      /**\r\n       * Transforms context when rendering an object\r\n       * @param {CanvasRenderingContext2D} ctx Context\r\n       */\r\n      transform: function(ctx) {\r\n        var m;\r\n        if (this.group && !this.group._transformDone) {\r\n          m = this.calcTransformMatrix();\r\n        }\r\n        else {\r\n          m = this.calcOwnMatrix();\r\n        }\r\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n      },\r\n\r\n      /**\r\n       * Returns an object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n\r\n            object = {\r\n              type:                     this.type,\r\n              version:                  fabric.version,\r\n              originX:                  this.originX,\r\n              originY:                  this.originY,\r\n              left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\r\n              top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\r\n              width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\r\n              height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\r\n              fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\r\n              stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\r\n              strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\r\n              strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\r\n              strokeLineCap:            this.strokeLineCap,\r\n              strokeLineJoin:           this.strokeLineJoin,\r\n              strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\r\n              scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\r\n              scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\r\n              angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\r\n              flipX:                    this.flipX,\r\n              flipY:                    this.flipY,\r\n              opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\r\n              shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\r\n              visible:                  this.visible,\r\n              clipTo:                   this.clipTo && String(this.clipTo),\r\n              backgroundColor:          this.backgroundColor,\r\n              fillRule:                 this.fillRule,\r\n              paintFirst:               this.paintFirst,\r\n              globalCompositeOperation: this.globalCompositeOperation,\r\n              transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\r\n              skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\r\n              skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\r\n            };\r\n\r\n        fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n        if (!this.includeDefaultValues) {\r\n          object = this._removeDefaultValues(object);\r\n        }\r\n\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Returns (dataless) object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toDatalessObject: function(propertiesToInclude) {\r\n        // will be overwritten by subclasses\r\n        return this.toObject(propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} object\r\n       */\r\n      _removeDefaultValues: function(object) {\r\n        var prototype = fabric.util.getKlass(object.type).prototype,\r\n            stateProperties = prototype.stateProperties;\r\n        stateProperties.forEach(function(prop) {\r\n          if (object[prop] === prototype[prop]) {\r\n            delete object[prop];\r\n          }\r\n          var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\r\n                        Object.prototype.toString.call(prototype[prop]) === '[object Array]';\r\n\r\n          // basically a check for [] === []\r\n          if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\r\n            delete object[prop];\r\n          }\r\n        });\r\n\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Returns a string representation of an instance\r\n       * @return {String}\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.' + capitalize(this.type) + '>';\r\n      },\r\n\r\n      /**\r\n       * Return the object scale factor counting also the group scaling\r\n       * @return {Object} object with scaleX and scaleY properties\r\n       */\r\n      getObjectScaling: function() {\r\n        var scaleX = this.scaleX, scaleY = this.scaleY;\r\n        if (this.group) {\r\n          var scaling = this.group.getObjectScaling();\r\n          scaleX *= scaling.scaleX;\r\n          scaleY *= scaling.scaleY;\r\n        }\r\n        return { scaleX: scaleX, scaleY: scaleY };\r\n      },\r\n\r\n      /**\r\n       * Return the object scale factor counting also the group scaling, zoom and retina\r\n       * @return {Object} object with scaleX and scaleY properties\r\n       */\r\n      getTotalObjectScaling: function() {\r\n        var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\r\n        if (this.canvas) {\r\n          var zoom = this.canvas.getZoom();\r\n          var retina = this.canvas.getRetinaScaling();\r\n          scaleX *= zoom * retina;\r\n          scaleY *= zoom * retina;\r\n        }\r\n        return { scaleX: scaleX, scaleY: scaleY };\r\n      },\r\n\r\n      /**\r\n       * Return the object opacity counting also the group property\r\n       * @return {Number}\r\n       */\r\n      getObjectOpacity: function() {\r\n        var opacity = this.opacity;\r\n        if (this.group) {\r\n          opacity *= this.group.getObjectOpacity();\r\n        }\r\n        return opacity;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      _set: function(key, value) {\r\n        var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\r\n            isChanged = this[key] !== value, groupNeedsUpdate = false;\r\n\r\n        if (shouldConstrainValue) {\r\n          value = this._constrainScale(value);\r\n        }\r\n        if (key === 'scaleX' && value < 0) {\r\n          this.flipX = !this.flipX;\r\n          value *= -1;\r\n        }\r\n        else if (key === 'scaleY' && value < 0) {\r\n          this.flipY = !this.flipY;\r\n          value *= -1;\r\n        }\r\n        else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\r\n          value = new fabric.Shadow(value);\r\n        }\r\n        else if (key === 'dirty' && this.group) {\r\n          this.group.set('dirty', value);\r\n        }\r\n\r\n        this[key] = value;\r\n\r\n        if (isChanged) {\r\n          groupNeedsUpdate = this.group && this.group.isOnACache();\r\n          if (this.cacheProperties.indexOf(key) > -1) {\r\n            this.dirty = true;\r\n            groupNeedsUpdate && this.group.set('dirty', true);\r\n          }\r\n          else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\r\n            this.group.set('dirty', true);\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * This callback function is called by the parent group of an object every\r\n       * time a non-delegated property changes on the group. It is passed the key\r\n       * and value as parameters. Not adding in this function's signature to avoid\r\n       * Travis build error about unused variables.\r\n       */\r\n      setOnGroup: function() {\r\n        // implemented by sub-classes, as needed.\r\n      },\r\n\r\n      /**\r\n       * Retrieves viewportTransform from Object's canvas if possible\r\n       * @method getViewportTransform\r\n       * @memberOf fabric.Object.prototype\r\n       * @return {Boolean}\r\n       */\r\n      getViewportTransform: function() {\r\n        if (this.canvas && this.canvas.viewportTransform) {\r\n          return this.canvas.viewportTransform;\r\n        }\r\n        return fabric.iMatrix.concat();\r\n      },\r\n\r\n      /*\r\n       * @private\r\n       * return if the object would be visible in rendering\r\n       * @memberOf fabric.Object.prototype\r\n       * @return {Boolean}\r\n       */\r\n      isNotVisible: function() {\r\n        return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\r\n      },\r\n\r\n      /**\r\n       * Renders an object on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      render: function(ctx) {\r\n        // do not render if width/height are zeros or object is not visible\r\n        if (this.isNotVisible()) {\r\n          return;\r\n        }\r\n        if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\r\n          return;\r\n        }\r\n        ctx.save();\r\n        this._setupCompositeOperation(ctx);\r\n        this.drawSelectionBackground(ctx);\r\n        this.transform(ctx);\r\n        this._setOpacity(ctx);\r\n        this._setShadow(ctx, this);\r\n        if (this.transformMatrix) {\r\n          ctx.transform.apply(ctx, this.transformMatrix);\r\n        }\r\n        this.clipTo && fabric.util.clipContext(this, ctx);\r\n        if (this.shouldCache()) {\r\n          if (!this._cacheCanvas) {\r\n            this._createCacheCanvas();\r\n\r\n          }\r\n          if (this.isCacheDirty()) {\r\n            this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\r\n            this.drawObject(this._cacheContext);\r\n            this.dirty = false;\r\n          }\r\n          this.drawCacheOnCanvas(ctx);\r\n        }\r\n        else {\r\n          this._removeCacheCanvas();\r\n          this.dirty = false;\r\n          this.drawObject(ctx);\r\n          if (this.objectCaching && this.statefullCache) {\r\n            this.saveState({ propertySet: 'cacheProperties' });\r\n          }\r\n        }\r\n        this.clipTo && ctx.restore();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Remove cacheCanvas and its dimensions from the objects\r\n       */\r\n      _removeCacheCanvas: function() {\r\n        this._cacheCanvas = null;\r\n        this.cacheWidth = 0;\r\n        this.cacheHeight = 0;\r\n      },\r\n\r\n      /**\r\n       * When set to `true`, force the object to have its own cache, even if it is inside a group\r\n       * it may be needed when your object behave in a particular way on the cache and always needs\r\n       * its own isolated canvas to render correctly.\r\n       * Created to be overridden\r\n       * since 1.7.12\r\n       * @returns false\r\n       */\r\n      needsItsOwnCache: function() {\r\n        if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * objectCaching is a global flag, wins over everything\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group outside is cached.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        this.ownCaching = this.objectCaching &&\r\n        (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\r\n        return this.ownCaching;\r\n      },\r\n\r\n      /**\r\n       * Check if this object or a child object will cast a shadow\r\n       * used by Group.shouldCache to know if child has a shadow recursively\r\n       * @return {Boolean}\r\n       */\r\n      willDrawShadow: function() {\r\n        return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\r\n      },\r\n\r\n      /**\r\n       * Execute the drawing operation for an object on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawObject: function(ctx) {\r\n        this._renderBackground(ctx);\r\n        this._setStrokeStyles(ctx, this);\r\n        this._setFillStyles(ctx, this);\r\n        this._render(ctx);\r\n      },\r\n\r\n      /**\r\n       * Paint the cached copy of the object on the target context.\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawCacheOnCanvas: function(ctx) {\r\n        ctx.scale(1 / this.zoomX, 1 / this.zoomY);\r\n        ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\r\n      },\r\n\r\n      /**\r\n       * Check if cache is dirty\r\n       * @param {Boolean} skipCanvas skip canvas checks because this object is painted\r\n       * on parent canvas.\r\n       */\r\n      isCacheDirty: function(skipCanvas) {\r\n        if (this.isNotVisible()) {\r\n          return false;\r\n        }\r\n        if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\r\n          // in this case the context is already cleared.\r\n          return true;\r\n        }\r\n        else {\r\n          if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\r\n            if (this._cacheCanvas && !skipCanvas) {\r\n              var width = this.cacheWidth / this.zoomX;\r\n              var height = this.cacheHeight / this.zoomY;\r\n              this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\r\n            }\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Draws a background for the object big as its untrasformed dimensions\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderBackground: function(ctx) {\r\n        if (!this.backgroundColor) {\r\n          return;\r\n        }\r\n        var dim = this._getNonTransformedDimensions();\r\n        ctx.fillStyle = this.backgroundColor;\r\n\r\n        ctx.fillRect(\r\n          -dim.x / 2,\r\n          -dim.y / 2,\r\n          dim.x,\r\n          dim.y\r\n        );\r\n        // if there is background color no other shadows\r\n        // should be casted\r\n        this._removeShadow(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _setOpacity: function(ctx) {\r\n        if (this.group && !this.group._transformDone) {\r\n          ctx.globalAlpha = this.getObjectOpacity();\r\n        }\r\n        else {\r\n          ctx.globalAlpha *= this.opacity;\r\n        }\r\n      },\r\n\r\n      _setStrokeStyles: function(ctx, decl) {\r\n        if (decl.stroke) {\r\n          ctx.lineWidth = decl.strokeWidth;\r\n          ctx.lineCap = decl.strokeLineCap;\r\n          ctx.lineJoin = decl.strokeLineJoin;\r\n          ctx.miterLimit = decl.strokeMiterLimit;\r\n          ctx.strokeStyle = decl.stroke.toLive\r\n            ? decl.stroke.toLive(ctx, this)\r\n            : decl.stroke;\r\n        }\r\n      },\r\n\r\n      _setFillStyles: function(ctx, decl) {\r\n        if (decl.fill) {\r\n          ctx.fillStyle = decl.fill.toLive\r\n            ? decl.fill.toLive(ctx, this)\r\n            : decl.fill;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Sets line dash\r\n       * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\r\n       * @param {Array} dashArray array representing dashes\r\n       * @param {Function} alternative function to call if browaser does not support lineDash\r\n       */\r\n      _setLineDash: function(ctx, dashArray, alternative) {\r\n        if (!dashArray) {\r\n          return;\r\n        }\r\n        // Spec requires the concatenation of two copies the dash list when the number of elements is odd\r\n        if (1 & dashArray.length) {\r\n          dashArray.push.apply(dashArray, dashArray);\r\n        }\r\n        if (supportsLineDash) {\r\n          ctx.setLineDash(dashArray);\r\n        }\r\n        else {\r\n          alternative && alternative(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Renders controls and borders for the object\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} [styleOverride] properties to override the object style\r\n       */\r\n      _renderControls: function(ctx, styleOverride) {\r\n        var vpt = this.getViewportTransform(),\r\n            matrix = this.calcTransformMatrix(),\r\n            options, drawBorders, drawControls;\r\n        styleOverride = styleOverride || { };\r\n        drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\r\n        drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\r\n        matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\r\n        options = fabric.util.qrDecompose(matrix);\r\n        ctx.save();\r\n        ctx.translate(options.translateX, options.translateY);\r\n        ctx.lineWidth = 1 * this.borderScaleFactor;\r\n        if (!this.group) {\r\n          ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n        }\r\n        if (styleOverride.forActiveSelection) {\r\n          ctx.rotate(degreesToRadians(options.angle));\r\n          drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\r\n        }\r\n        else {\r\n          ctx.rotate(degreesToRadians(this.angle));\r\n          drawBorders && this.drawBorders(ctx, styleOverride);\r\n        }\r\n        drawControls && this.drawControls(ctx, styleOverride);\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _setShadow: function(ctx) {\r\n        if (!this.shadow) {\r\n          return;\r\n        }\r\n\r\n        var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\r\n            multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\r\n            scaling = this.getObjectScaling();\r\n        if (this.canvas && this.canvas._isRetinaScaling()) {\r\n          multX *= fabric.devicePixelRatio;\r\n          multY *= fabric.devicePixelRatio;\r\n        }\r\n        ctx.shadowColor = this.shadow.color;\r\n        ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant *\r\n          (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\r\n        ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\r\n        ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _removeShadow: function(ctx) {\r\n        if (!this.shadow) {\r\n          return;\r\n        }\r\n\r\n        ctx.shadowColor = '';\r\n        ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} filler fabric.Pattern or fabric.Gradient\r\n       */\r\n      _applyPatternGradientTransform: function(ctx, filler) {\r\n        if (!filler || !filler.toLive) {\r\n          return { offsetX: 0, offsetY: 0 };\r\n        }\r\n        var t = filler.gradientTransform || filler.patternTransform;\r\n        var offsetX = -this.width / 2 + filler.offsetX || 0,\r\n            offsetY = -this.height / 2 + filler.offsetY || 0;\r\n        ctx.translate(offsetX, offsetY);\r\n        if (t) {\r\n          ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\r\n        }\r\n        return { offsetX: offsetX, offsetY: offsetY };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderPaintInOrder: function(ctx) {\r\n        if (this.paintFirst === 'stroke') {\r\n          this._renderStroke(ctx);\r\n          this._renderFill(ctx);\r\n        }\r\n        else {\r\n          this._renderFill(ctx);\r\n          this._renderStroke(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderFill: function(ctx) {\r\n        if (!this.fill) {\r\n          return;\r\n        }\r\n\r\n        ctx.save();\r\n        this._applyPatternGradientTransform(ctx, this.fill);\r\n        if (this.fillRule === 'evenodd') {\r\n          ctx.fill('evenodd');\r\n        }\r\n        else {\r\n          ctx.fill();\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      _renderStroke: function(ctx) {\r\n        if (!this.stroke || this.strokeWidth === 0) {\r\n          return;\r\n        }\r\n\r\n        if (this.shadow && !this.shadow.affectStroke) {\r\n          this._removeShadow(ctx);\r\n        }\r\n\r\n        ctx.save();\r\n        this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\r\n        this._applyPatternGradientTransform(ctx, this.stroke);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it returns the center of the object in the svg\r\n       * untransformed coordinates\r\n       * @private\r\n       * @return {Object} center point from element coordinates\r\n       */\r\n      _findCenterFromElement: function() {\r\n        return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it decoompose the transformMatrix\r\n       * and assign properties to object.\r\n       * untransformed coordinates\r\n       * @private\r\n       * @chainable\r\n       */\r\n      _assignTransformMatrixProps: function() {\r\n        if (this.transformMatrix) {\r\n          var options = fabric.util.qrDecompose(this.transformMatrix);\r\n          this.flipX = false;\r\n          this.flipY = false;\r\n          this.set('scaleX', options.scaleX);\r\n          this.set('scaleY', options.scaleY);\r\n          this.angle = options.angle;\r\n          this.skewX = options.skewX;\r\n          this.skewY = 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it removes the transform matrix\r\n       * and set to object properties that fabricjs can handle\r\n       * @private\r\n       * @param {Object} preserveAspectRatioOptions\r\n       * @return {thisArg}\r\n       */\r\n      _removeTransformMatrix: function(preserveAspectRatioOptions) {\r\n        var center = this._findCenterFromElement();\r\n        if (this.transformMatrix) {\r\n          this._assignTransformMatrixProps();\r\n          center = fabric.util.transformPoint(center, this.transformMatrix);\r\n        }\r\n        this.transformMatrix = null;\r\n        if (preserveAspectRatioOptions) {\r\n          this.scaleX *= preserveAspectRatioOptions.scaleX;\r\n          this.scaleY *= preserveAspectRatioOptions.scaleY;\r\n          this.cropX = preserveAspectRatioOptions.cropX;\r\n          this.cropY = preserveAspectRatioOptions.cropY;\r\n          center.x += preserveAspectRatioOptions.offsetLeft;\r\n          center.y += preserveAspectRatioOptions.offsetTop;\r\n          this.width = preserveAspectRatioOptions.width;\r\n          this.height = preserveAspectRatioOptions.height;\r\n        }\r\n        this.setPositionByOrigin(center, 'center', 'center');\r\n      },\r\n\r\n      /**\r\n       * Clones an instance, using a callback method will work for every object.\r\n       * @param {Function} callback Callback is invoked with a clone as a first argument\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       */\r\n      clone: function(callback, propertiesToInclude) {\r\n        var objectForm = this.toObject(propertiesToInclude);\r\n        if (this.constructor.fromObject) {\r\n          this.constructor.fromObject(objectForm, callback);\r\n        }\r\n        else {\r\n          fabric.Object._fromObject('Object', objectForm, callback);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Creates an instance of fabric.Image out of an object\r\n       * @param {Function} callback callback, invoked with an instance as a first argument\r\n       * @param {Object} [options] for clone as image, passed to toDataURL\r\n       * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      cloneAsImage: function(callback, options) {\r\n        var dataUrl = this.toDataURL(options);\r\n        fabric.util.loadImage(dataUrl, function(img) {\r\n          if (callback) {\r\n            callback(new fabric.Image(img));\r\n          }\r\n        });\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Converts an object into a data-url-like string\r\n       * @param {Object} options Options object\r\n       * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n       * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n       * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n       * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n       * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n       * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n       * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n       * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n       * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n       * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n       */\r\n      toDataURL: function(options) {\r\n        options || (options = { });\r\n\r\n        var origParams = fabric.util.saveObjectTransform(this);\r\n\r\n        if (options.withoutTransform) {\r\n          fabric.util.resetObjectTransform(this);\r\n        }\r\n\r\n        var el = fabric.util.createCanvasElement(),\r\n            // skip canvas zoom and calculate with setCoords now.\r\n            boundingRect = this.getBoundingRect(true, true);\r\n\r\n        el.width = boundingRect.width;\r\n        el.height = boundingRect.height;\r\n        var canvas = new fabric.StaticCanvas(el, {\r\n          enableRetinaScaling: options.enableRetinaScaling,\r\n          renderOnAddRemove: false,\r\n          skipOffscreen: false,\r\n        });\r\n        // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\r\n        if (options.format === 'jpg') {\r\n          options.format = 'jpeg';\r\n        }\r\n\r\n        if (options.format === 'jpeg') {\r\n          canvas.backgroundColor = '#fff';\r\n        }\r\n\r\n        this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\r\n\r\n        var originalCanvas = this.canvas;\r\n        canvas.add(this);\r\n        var data = canvas.toDataURL(options);\r\n        this.set(origParams).setCoords();\r\n        this.canvas = originalCanvas;\r\n        // canvas.dispose will call image.dispose that will nullify the elements\r\n        // since this canvas is a simple element for the process, we remove references\r\n        // to objects in this way in order to avoid object trashing.\r\n        canvas._objects = [];\r\n        canvas.dispose();\r\n        canvas = null;\r\n\r\n        return data;\r\n      },\r\n\r\n      /**\r\n       * Returns true if specified type is identical to the type of an instance\r\n       * @param {String} type Type to check against\r\n       * @return {Boolean}\r\n       */\r\n      isType: function(type) {\r\n        return this.type === type;\r\n      },\r\n\r\n      /**\r\n       * Returns complexity of an instance\r\n       * @return {Number} complexity of this instance (is 1 unless subclassed)\r\n       */\r\n      complexity: function() {\r\n        return 1;\r\n      },\r\n\r\n      /**\r\n       * Returns a JSON representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} JSON\r\n       */\r\n      toJSON: function(propertiesToInclude) {\r\n        // delegate, not alias\r\n        return this.toObject(propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * Sets gradient (fill or stroke) of an object\r\n       * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\r\n       * @param {String} property Property name 'stroke' or 'fill'\r\n       * @param {Object} [options] Options object\r\n       * @param {String} [options.type] Type of gradient 'radial' or 'linear'\r\n       * @param {Number} [options.x1=0] x-coordinate of start point\r\n       * @param {Number} [options.y1=0] y-coordinate of start point\r\n       * @param {Number} [options.x2=0] x-coordinate of end point\r\n       * @param {Number} [options.y2=0] y-coordinate of end point\r\n       * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\r\n       * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\r\n       * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\r\n       * @param {Object} [options.gradientTransform] transforMatrix for gradient\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\r\n       * @example <caption>Set linear gradient</caption>\r\n       * object.setGradient('fill', {\r\n       *   type: 'linear',\r\n       *   x1: -object.width / 2,\r\n       *   y1: 0,\r\n       *   x2: object.width / 2,\r\n       *   y2: 0,\r\n       *   colorStops: {\r\n       *     0: 'red',\r\n       *     0.5: '#005555',\r\n       *     1: 'rgba(0,0,255,0.5)'\r\n       *   }\r\n       * });\r\n       * canvas.renderAll();\r\n       * @example <caption>Set radial gradient</caption>\r\n       * object.setGradient('fill', {\r\n       *   type: 'radial',\r\n       *   x1: 0,\r\n       *   y1: 0,\r\n       *   x2: 0,\r\n       *   y2: 0,\r\n       *   r1: object.width / 2,\r\n       *   r2: 10,\r\n       *   colorStops: {\r\n       *     0: 'red',\r\n       *     0.5: '#005555',\r\n       *     1: 'rgba(0,0,255,0.5)'\r\n       *   }\r\n       * });\r\n       * canvas.renderAll();\r\n       */\r\n      setGradient: function(property, options) {\r\n        options || (options = { });\r\n\r\n        var gradient = { colorStops: [] };\r\n\r\n        gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\r\n        gradient.coords = {\r\n          x1: options.x1,\r\n          y1: options.y1,\r\n          x2: options.x2,\r\n          y2: options.y2\r\n        };\r\n\r\n        if (options.r1 || options.r2) {\r\n          gradient.coords.r1 = options.r1;\r\n          gradient.coords.r2 = options.r2;\r\n        }\r\n\r\n        gradient.gradientTransform = options.gradientTransform;\r\n        fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\r\n\r\n        return this.set(property, fabric.Gradient.forObject(this, gradient));\r\n      },\r\n\r\n      /**\r\n       * Sets pattern fill of an object\r\n       * @param {Object} options Options object\r\n       * @param {(String|HTMLImageElement)} options.source Pattern source\r\n       * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\r\n       * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\r\n       * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\r\n       * @param {Function} [callback] Callback to invoke when image set as a pattern\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\r\n       * @example <caption>Set pattern</caption>\r\n       * object.setPatternFill({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n       *   repeat: 'repeat'\r\n       * },canvas.renderAll.bind(canvas));\r\n       */\r\n      setPatternFill: function(options, callback) {\r\n        return this.set('fill', new fabric.Pattern(options, callback));\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.Object#shadow|shadow} of an object\r\n       * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\r\n       * @param {String} [options.color=rgb(0,0,0)] Shadow color\r\n       * @param {Number} [options.blur=0] Shadow blur\r\n       * @param {Number} [options.offsetX=0] Shadow horizontal offset\r\n       * @param {Number} [options.offsetY=0] Shadow vertical offset\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\r\n       * @example <caption>Set shadow with string notation</caption>\r\n       * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\r\n       * canvas.renderAll();\r\n       * @example <caption>Set shadow with object notation</caption>\r\n       * object.setShadow({\r\n       *   color: 'red',\r\n       *   blur: 10,\r\n       *   offsetX: 20,\r\n       *   offsetY: 20\r\n       * });\r\n       * canvas.renderAll();\r\n       */\r\n      setShadow: function(options) {\r\n        return this.set('shadow', options ? new fabric.Shadow(options) : null);\r\n      },\r\n\r\n      /**\r\n       * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\r\n       * @param {String} color Color value\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setColor: function(color) {\r\n        this.set('fill', color);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets \"angle\" of an instance with centered rotation\r\n       * @param {Number} angle Angle value (in degrees)\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      rotate: function(angle) {\r\n        var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\r\n\r\n        if (shouldCenterOrigin) {\r\n          this._setOriginToCenter();\r\n        }\r\n\r\n        this.set('angle', angle);\r\n\r\n        if (shouldCenterOrigin) {\r\n          this._resetOrigin();\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally on canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      centerH: function () {\r\n        this.canvas && this.canvas.centerObjectH(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally on current viewport of canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterH: function () {\r\n        this.canvas && this.canvas.viewportCenterObjectH(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically on canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      centerV: function () {\r\n        this.canvas && this.canvas.centerObjectV(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically on current viewport of canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterV: function () {\r\n        this.canvas && this.canvas.viewportCenterObjectV(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically and horizontally on canvas to which is was added last\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      center: function () {\r\n        this.canvas && this.canvas.centerObject(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object on current viewport of canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenter: function () {\r\n        this.canvas && this.canvas.viewportCenterObject(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of a pointer relative to an object\r\n       * @param {Event} e Event to operate upon\r\n       * @param {Object} [pointer] Pointer to operate upon (instead of event)\r\n       * @return {Object} Coordinates of a pointer (x, y)\r\n       */\r\n      getLocalPointer: function(e, pointer) {\r\n        pointer = pointer || this.canvas.getPointer(e);\r\n        var pClicked = new fabric.Point(pointer.x, pointer.y),\r\n            objectLeftTop = this._getLeftTopCoords();\r\n        if (this.angle) {\r\n          pClicked = fabric.util.rotatePoint(\r\n            pClicked, objectLeftTop, degreesToRadians(-this.angle));\r\n        }\r\n        return {\r\n          x: pClicked.x - objectLeftTop.x,\r\n          y: pClicked.y - objectLeftTop.y\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Sets canvas globalCompositeOperation for specific object\r\n       * custom composition operation for the particular object can be specifed using globalCompositeOperation property\r\n       * @param {CanvasRenderingContext2D} ctx Rendering canvas context\r\n       */\r\n      _setupCompositeOperation: function (ctx) {\r\n        if (this.globalCompositeOperation) {\r\n          ctx.globalCompositeOperation = this.globalCompositeOperation;\r\n        }\r\n      }\r\n    });\r\n\r\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\r\n\r\n    extend(fabric.Object.prototype, fabric.Observable);\r\n\r\n    /**\r\n     * Defines the number of fraction digits to use when serializing object values.\r\n     * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\r\n     * @static\r\n     * @memberOf fabric.Object\r\n     * @constant\r\n     * @type Number\r\n     */\r\n    fabric.Object.NUM_FRACTION_DIGITS = 2;\r\n\r\n    fabric.Object._fromObject = function(className, object, callback, extraParam) {\r\n      var klass = fabric[className];\r\n      object = clone(object, true);\r\n      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\r\n        if (typeof patterns[0] !== 'undefined') {\r\n          object.fill = patterns[0];\r\n        }\r\n        if (typeof patterns[1] !== 'undefined') {\r\n          object.stroke = patterns[1];\r\n        }\r\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\r\n        callback && callback(instance);\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Unique id used internally when creating SVG elements\r\n     * @static\r\n     * @memberOf fabric.Object\r\n     * @type Number\r\n     */\r\n    fabric.Object.__uid = 0;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    var degreesToRadians = fabric.util.degreesToRadians,\r\n        originXOffset = {\r\n          left: -0.5,\r\n          center: 0,\r\n          right: 0.5\r\n        },\r\n        originYOffset = {\r\n          top: -0.5,\r\n          center: 0,\r\n          bottom: 0.5\r\n        };\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Translates the coordinates from a set of origin to another (based on the object's dimensions)\r\n       * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n       * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\r\n        var x = point.x,\r\n            y = point.y,\r\n            offsetX, offsetY, dim;\r\n\r\n        if (typeof fromOriginX === 'string') {\r\n          fromOriginX = originXOffset[fromOriginX];\r\n        }\r\n        else {\r\n          fromOriginX -= 0.5;\r\n        }\r\n\r\n        if (typeof toOriginX === 'string') {\r\n          toOriginX = originXOffset[toOriginX];\r\n        }\r\n        else {\r\n          toOriginX -= 0.5;\r\n        }\r\n\r\n        offsetX = toOriginX - fromOriginX;\r\n\r\n        if (typeof fromOriginY === 'string') {\r\n          fromOriginY = originYOffset[fromOriginY];\r\n        }\r\n        else {\r\n          fromOriginY -= 0.5;\r\n        }\r\n\r\n        if (typeof toOriginY === 'string') {\r\n          toOriginY = originYOffset[toOriginY];\r\n        }\r\n        else {\r\n          toOriginY -= 0.5;\r\n        }\r\n\r\n        offsetY = toOriginY - fromOriginY;\r\n\r\n        if (offsetX || offsetY) {\r\n          dim = this._getTransformedDimensions();\r\n          x = point.x + offsetX * dim.x;\r\n          y = point.y + offsetY * dim.y;\r\n        }\r\n\r\n        return new fabric.Point(x, y);\r\n      },\r\n\r\n      /**\r\n       * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\r\n       * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      translateToCenterPoint: function(point, originX, originY) {\r\n        var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\r\n        if (this.angle) {\r\n          return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\r\n        }\r\n        return p;\r\n      },\r\n\r\n      /**\r\n       * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\r\n       * @param {fabric.Point} center The point which corresponds to center of the object\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      translateToOriginPoint: function(center, originX, originY) {\r\n        var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\r\n        if (this.angle) {\r\n          return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\r\n        }\r\n        return p;\r\n      },\r\n\r\n      /**\r\n       * Returns the real center coordinates of the object\r\n       * @return {fabric.Point}\r\n       */\r\n      getCenterPoint: function() {\r\n        var leftTop = new fabric.Point(this.left, this.top);\r\n        return this.translateToCenterPoint(leftTop, this.originX, this.originY);\r\n      },\r\n\r\n      /**\r\n       * Returns the coordinates of the object based on center coordinates\r\n       * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n       * @return {fabric.Point}\r\n       */\r\n      // getOriginPoint: function(center) {\r\n      //   return this.translateToOriginPoint(center, this.originX, this.originY);\r\n      // },\r\n\r\n      /**\r\n       * Returns the coordinates of the object as if it has a different origin\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      getPointByOrigin: function(originX, originY) {\r\n        var center = this.getCenterPoint();\r\n        return this.translateToOriginPoint(center, originX, originY);\r\n      },\r\n\r\n      /**\r\n       * Returns the point in local coordinates\r\n       * @param {fabric.Point} point The point relative to the global coordinate system\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      toLocalPoint: function(point, originX, originY) {\r\n        var center = this.getCenterPoint(),\r\n            p, p2;\r\n\r\n        if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\r\n          p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\r\n        }\r\n        else {\r\n          p = new fabric.Point(this.left, this.top);\r\n        }\r\n\r\n        p2 = new fabric.Point(point.x, point.y);\r\n        if (this.angle) {\r\n          p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\r\n        }\r\n        return p2.subtractEquals(p);\r\n      },\r\n\r\n      /**\r\n       * Returns the point in global coordinates\r\n       * @param {fabric.Point} The point relative to the local coordinate system\r\n       * @return {fabric.Point}\r\n       */\r\n      // toGlobalPoint: function(point) {\r\n      //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\r\n      // },\r\n\r\n      /**\r\n       * Sets the position of the object taking into consideration the object's origin\r\n       * @param {fabric.Point} pos The new position of the object\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {void}\r\n       */\r\n      setPositionByOrigin: function(pos, originX, originY) {\r\n        var center = this.translateToCenterPoint(pos, originX, originY),\r\n            position = this.translateToOriginPoint(center, this.originX, this.originY);\r\n        this.set('left', position.x);\r\n        this.set('top', position.y);\r\n      },\r\n\r\n      /**\r\n       * @param {String} to One of 'left', 'center', 'right'\r\n       */\r\n      adjustPosition: function(to) {\r\n        var angle = degreesToRadians(this.angle),\r\n            hypotFull = this.getScaledWidth(),\r\n            xFull = fabric.util.cos(angle) * hypotFull,\r\n            yFull = fabric.util.sin(angle) * hypotFull,\r\n            offsetFrom, offsetTo;\r\n\r\n        //TODO: this function does not consider mixed situation like top, center.\r\n        if (typeof this.originX === 'string') {\r\n          offsetFrom = originXOffset[this.originX];\r\n        }\r\n        else {\r\n          offsetFrom = this.originX - 0.5;\r\n        }\r\n        if (typeof to === 'string') {\r\n          offsetTo = originXOffset[to];\r\n        }\r\n        else {\r\n          offsetTo = to - 0.5;\r\n        }\r\n        this.left += xFull * (offsetTo - offsetFrom);\r\n        this.top += yFull * (offsetTo - offsetFrom);\r\n        this.setCoords();\r\n        this.originX = to;\r\n      },\r\n\r\n      /**\r\n       * Sets the origin/position of the object to it's center point\r\n       * @private\r\n       * @return {void}\r\n       */\r\n      _setOriginToCenter: function() {\r\n        this._originalOriginX = this.originX;\r\n        this._originalOriginY = this.originY;\r\n\r\n        var center = this.getCenterPoint();\r\n\r\n        this.originX = 'center';\r\n        this.originY = 'center';\r\n\r\n        this.left = center.x;\r\n        this.top = center.y;\r\n      },\r\n\r\n      /**\r\n       * Resets the origin/position of the object to it's original origin\r\n       * @private\r\n       * @return {void}\r\n       */\r\n      _resetOrigin: function() {\r\n        var originPoint = this.translateToOriginPoint(\r\n          this.getCenterPoint(),\r\n          this._originalOriginX,\r\n          this._originalOriginY);\r\n\r\n        this.originX = this._originalOriginX;\r\n        this.originY = this._originalOriginY;\r\n\r\n        this.left = originPoint.x;\r\n        this.top = originPoint.y;\r\n\r\n        this._originalOriginX = null;\r\n        this._originalOriginY = null;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getLeftTopCoords: function() {\r\n        return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\r\n      },\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function getCoords(coords) {\r\n      return [\r\n        new fabric.Point(coords.tl.x, coords.tl.y),\r\n        new fabric.Point(coords.tr.x, coords.tr.y),\r\n        new fabric.Point(coords.br.x, coords.br.y),\r\n        new fabric.Point(coords.bl.x, coords.bl.y)\r\n      ];\r\n    }\r\n\r\n    var degreesToRadians = fabric.util.degreesToRadians,\r\n        multiplyMatrices = fabric.util.multiplyTransformMatrices,\r\n        transformPoint = fabric.util.transformPoint;\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Describe object's corner position in canvas element coordinates.\r\n       * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\r\n       * each property is an object with x, y and corner.\r\n       * The `corner` property contains in a similar manner the 4 points of the\r\n       * interactive area of the corner.\r\n       * The coordinates depends from this properties: width, height, scaleX, scaleY\r\n       * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\r\n       * The coordinates get updated with @method setCoords.\r\n       * You can calculate them without updating with @method calcCoords;\r\n       * @memberOf fabric.Object.prototype\r\n       */\r\n      oCoords: null,\r\n\r\n      /**\r\n       * Describe object's corner position in canvas object absolute coordinates\r\n       * properties are tl,tr,bl,br and describe the four main corner.\r\n       * each property is an object with x, y, instance of Fabric.Point.\r\n       * The coordinates depends from this properties: width, height, scaleX, scaleY\r\n       * skewX, skewY, angle, strokeWidth, top, left.\r\n       * Those coordinates are usefull to understand where an object is. They get updated\r\n       * with oCoords but they do not need to be updated when zoom or panning change.\r\n       * The coordinates get updated with @method setCoords.\r\n       * You can calculate them without updating with @method calcCoords(true);\r\n       * @memberOf fabric.Object.prototype\r\n       */\r\n      aCoords: null,\r\n\r\n      /**\r\n       * storage for object transform matrix\r\n       */\r\n      ownMatrixCache: null,\r\n\r\n      /**\r\n       * storage for object full transform matrix\r\n       */\r\n      matrixCache: null,\r\n\r\n      /**\r\n       * return correct set of coordinates for intersection\r\n       */\r\n      getCoords: function(absolute, calculate) {\r\n        if (!this.oCoords) {\r\n          this.setCoords();\r\n        }\r\n        var coords = absolute ? this.aCoords : this.oCoords;\r\n        return getCoords(calculate ? this.calcCoords(absolute) : coords);\r\n      },\r\n\r\n      /**\r\n       * Checks if object intersects with an area formed by 2 points\r\n       * @param {Object} pointTL top-left point of area\r\n       * @param {Object} pointBR bottom-right point of area\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object intersects with an area formed by 2 points\r\n       */\r\n      intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\r\n        var coords = this.getCoords(absolute, calculate),\r\n            intersection = fabric.Intersection.intersectPolygonRectangle(\r\n              coords,\r\n              pointTL,\r\n              pointBR\r\n            );\r\n        return intersection.status === 'Intersection';\r\n      },\r\n\r\n      /**\r\n       * Checks if object intersects with another object\r\n       * @param {Object} other Object to test\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object intersects with another object\r\n       */\r\n      intersectsWithObject: function(other, absolute, calculate) {\r\n        var intersection = fabric.Intersection.intersectPolygonPolygon(\r\n          this.getCoords(absolute, calculate),\r\n          other.getCoords(absolute, calculate)\r\n        );\r\n\r\n        return intersection.status === 'Intersection'\r\n          || other.isContainedWithinObject(this, absolute, calculate)\r\n          || this.isContainedWithinObject(other, absolute, calculate);\r\n      },\r\n\r\n      /**\r\n       * Checks if object is fully contained within area of another object\r\n       * @param {Object} other Object to test\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is fully contained within area of another object\r\n       */\r\n      isContainedWithinObject: function(other, absolute, calculate) {\r\n        var points = this.getCoords(absolute, calculate),\r\n            i = 0, lines = other._getImageLines(\r\n              calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\r\n            );\r\n        for (; i < 4; i++) {\r\n          if (!other.containsPoint(points[i], lines)) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Checks if object is fully contained within area formed by 2 points\r\n       * @param {Object} pointTL top-left point of area\r\n       * @param {Object} pointBR bottom-right point of area\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is fully contained within area formed by 2 points\r\n       */\r\n      isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\r\n        var boundingRect = this.getBoundingRect(absolute, calculate);\r\n\r\n        return (\r\n          boundingRect.left >= pointTL.x &&\r\n          boundingRect.left + boundingRect.width <= pointBR.x &&\r\n          boundingRect.top >= pointTL.y &&\r\n          boundingRect.top + boundingRect.height <= pointBR.y\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Checks if point is inside the object\r\n       * @param {fabric.Point} point Point to check against\r\n       * @param {Object} [lines] object returned from @method _getImageLines\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if point is inside the object\r\n       */\r\n      containsPoint: function(point, lines, absolute, calculate) {\r\n        var lines = lines || this._getImageLines(\r\n              calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\r\n            ),\r\n            xPoints = this._findCrossPoints(point, lines);\r\n\r\n        // if xPoints is odd then point is inside the object\r\n        return (xPoints !== 0 && xPoints % 2 === 1);\r\n      },\r\n\r\n      /**\r\n       * Checks if object is contained within the canvas with current viewportTransform\r\n       * the check is done stopping at first point that appears on screen\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is fully or partially contained within canvas\r\n       */\r\n      isOnScreen: function(calculate) {\r\n        if (!this.canvas) {\r\n          return false;\r\n        }\r\n        var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\r\n        var points = this.getCoords(true, calculate), point;\r\n        for (var i = 0; i < 4; i++) {\r\n          point = points[i];\r\n          if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\r\n            return true;\r\n          }\r\n        }\r\n        // no points on screen, check intersection with absolute coordinates\r\n        if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\r\n          return true;\r\n        }\r\n        return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\r\n      },\r\n\r\n      /**\r\n       * Checks if the object contains the midpoint between canvas extremities\r\n       * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\r\n       * @private\r\n       * @param {Fabric.Point} pointTL Top Left point\r\n       * @param {Fabric.Point} pointBR Top Right point\r\n       * @param {Boolean} calculate use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if the objects containe the point\r\n       */\r\n      _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\r\n        // worst case scenario the object is so big that contains the screen\r\n        var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\r\n        if (this.containsPoint(centerPoint, null, true, calculate)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Checks if object is partially contained within the canvas with current viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is partially contained within canvas\r\n       */\r\n      isPartiallyOnScreen: function(calculate) {\r\n        if (!this.canvas) {\r\n          return false;\r\n        }\r\n        var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\r\n        if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\r\n          return true;\r\n        }\r\n        return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\r\n      },\r\n\r\n      /**\r\n       * Method that returns an object with the object edges in it, given the coordinates of the corners\r\n       * @private\r\n       * @param {Object} oCoords Coordinates of the object corners\r\n       */\r\n      _getImageLines: function(oCoords) {\r\n        return {\r\n          topline: {\r\n            o: oCoords.tl,\r\n            d: oCoords.tr\r\n          },\r\n          rightline: {\r\n            o: oCoords.tr,\r\n            d: oCoords.br\r\n          },\r\n          bottomline: {\r\n            o: oCoords.br,\r\n            d: oCoords.bl\r\n          },\r\n          leftline: {\r\n            o: oCoords.bl,\r\n            d: oCoords.tl\r\n          }\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Helper method to determine how many cross points are between the 4 object edges\r\n       * and the horizontal line determined by a point on canvas\r\n       * @private\r\n       * @param {fabric.Point} point Point to check\r\n       * @param {Object} lines Coordinates of the object being evaluated\r\n       */\r\n      // remove yi, not used but left code here just in case.\r\n      _findCrossPoints: function(point, lines) {\r\n        var b1, b2, a1, a2, xi, // yi,\r\n            xcount = 0,\r\n            iLine;\r\n\r\n        for (var lineKey in lines) {\r\n          iLine = lines[lineKey];\r\n          // optimisation 1: line below point. no cross\r\n          if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\r\n            continue;\r\n          }\r\n          // optimisation 2: line above point. no cross\r\n          if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\r\n            continue;\r\n          }\r\n          // optimisation 3: vertical line case\r\n          if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\r\n            xi = iLine.o.x;\r\n            // yi = point.y;\r\n          }\r\n          // calculate the intersection point\r\n          else {\r\n            b1 = 0;\r\n            b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\r\n            a1 = point.y - b1 * point.x;\r\n            a2 = iLine.o.y - b2 * iLine.o.x;\r\n\r\n            xi = -(a1 - a2) / (b1 - b2);\r\n            // yi = a1 + b1 * xi;\r\n          }\r\n          // dont count xi < point.x cases\r\n          if (xi >= point.x) {\r\n            xcount += 1;\r\n          }\r\n          // optimisation 4: specific for square images\r\n          if (xcount === 2) {\r\n            break;\r\n          }\r\n        }\r\n        return xcount;\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of object's bounding rectangle (left, top, width, height)\r\n       * the box is intented as aligned to axis of canvas.\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\r\n       * @return {Object} Object with left, top, width, height properties\r\n       */\r\n      getBoundingRect: function(absolute, calculate) {\r\n        var coords = this.getCoords(absolute, calculate);\r\n        return fabric.util.makeBoundingBoxFromPoints(coords);\r\n      },\r\n\r\n      /**\r\n       * Returns width of an object bounding box counting transformations\r\n       * before 2.0 it was named getWidth();\r\n       * @return {Number} width value\r\n       */\r\n      getScaledWidth: function() {\r\n        return this._getTransformedDimensions().x;\r\n      },\r\n\r\n      /**\r\n       * Returns height of an object bounding box counting transformations\r\n       * before 2.0 it was named getHeight();\r\n       * @return {Number} height value\r\n       */\r\n      getScaledHeight: function() {\r\n        return this._getTransformedDimensions().y;\r\n      },\r\n\r\n      /**\r\n       * Makes sure the scale is valid and modifies it if necessary\r\n       * @private\r\n       * @param {Number} value\r\n       * @return {Number}\r\n       */\r\n      _constrainScale: function(value) {\r\n        if (Math.abs(value) < this.minScaleLimit) {\r\n          if (value < 0) {\r\n            return -this.minScaleLimit;\r\n          }\r\n          else {\r\n            return this.minScaleLimit;\r\n          }\r\n        }\r\n        else if (value === 0) {\r\n          return 0.0001;\r\n        }\r\n        return value;\r\n      },\r\n\r\n      /**\r\n       * Scales an object (equally by x and y)\r\n       * @param {Number} value Scale factor\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      scale: function(value) {\r\n        this._set('scaleX', value);\r\n        this._set('scaleY', value);\r\n        return this.setCoords();\r\n      },\r\n\r\n      /**\r\n       * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\r\n       * @param {Number} value New width value\r\n       * @param {Boolean} absolute ignore viewport\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      scaleToWidth: function(value, absolute) {\r\n        // adjust to bounding rect factor so that rotated shapes would fit as well\r\n        var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\r\n        return this.scale(value / this.width / boundingRectFactor);\r\n      },\r\n\r\n      /**\r\n       * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\r\n       * @param {Number} value New height value\r\n       * @param {Boolean} absolute ignore viewport\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      scaleToHeight: function(value, absolute) {\r\n        // adjust to bounding rect factor so that rotated shapes would fit as well\r\n        var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\r\n        return this.scale(value / this.height / boundingRectFactor);\r\n      },\r\n\r\n      /**\r\n       * Calculate and returns the .coords of an object.\r\n       * @return {Object} Object with tl, tr, br, bl ....\r\n       * @chainable\r\n       */\r\n      calcCoords: function(absolute) {\r\n        var rotateMatrix = this._calcRotateMatrix(),\r\n            translateMatrix = this._calcTranslateMatrix(),\r\n            startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\r\n            vpt = this.getViewportTransform(),\r\n            finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\r\n            dim = this._getTransformedDimensions(),\r\n            w = dim.x / 2, h = dim.y / 2,\r\n            tl = transformPoint({ x: -w, y: -h }, finalMatrix),\r\n            tr = transformPoint({ x: w, y: -h }, finalMatrix),\r\n            bl = transformPoint({ x: -w, y: h }, finalMatrix),\r\n            br = transformPoint({ x: w, y: h }, finalMatrix);\r\n        if (!absolute) {\r\n          var padding = this.padding, angle = degreesToRadians(this.angle),\r\n              cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\r\n              cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\r\n              cosPMinusSinP = cosP - sinP;\r\n          if (padding) {\r\n            tl.x -= cosPMinusSinP;\r\n            tl.y -= cosPSinP;\r\n            tr.x += cosPSinP;\r\n            tr.y -= cosPMinusSinP;\r\n            bl.x -= cosPSinP;\r\n            bl.y += cosPMinusSinP;\r\n            br.x += cosPMinusSinP;\r\n            br.y += cosPSinP;\r\n          }\r\n          var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\r\n              mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\r\n              mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\r\n              mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\r\n              mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\r\n        }\r\n\r\n        // if (!absolute) {\r\n        //   var canvas = this.canvas;\r\n        //   setTimeout(function() {\r\n        //     canvas.contextTop.clearRect(0, 0, 700, 700);\r\n        //     canvas.contextTop.fillStyle = 'green';\r\n        //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\r\n        //   }, 50);\r\n        // }\r\n\r\n        var coords = {\r\n          // corners\r\n          tl: tl, tr: tr, br: br, bl: bl,\r\n        };\r\n        if (!absolute) {\r\n          // middle\r\n          coords.ml = ml;\r\n          coords.mt = mt;\r\n          coords.mr = mr;\r\n          coords.mb = mb;\r\n          // rotating point\r\n          coords.mtr = mtr;\r\n        }\r\n        return coords;\r\n      },\r\n\r\n      /**\r\n       * Sets corner position coordinates based on current angle, width and height.\r\n       * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\r\n       * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\r\n       * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setCoords: function(ignoreZoom, skipAbsolute) {\r\n        this.oCoords = this.calcCoords(ignoreZoom);\r\n        if (!skipAbsolute) {\r\n          this.aCoords = this.calcCoords(true);\r\n        }\r\n\r\n        // set coordinates of the draggable boxes in the corners used to scale/rotate the image\r\n        ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * calculate rotation matrix of an object\r\n       * @return {Array} rotation matrix for the object\r\n       */\r\n      _calcRotateMatrix: function() {\r\n        if (this.angle) {\r\n          var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\r\n          return [cos, sin, -sin, cos, 0, 0];\r\n        }\r\n        return fabric.iMatrix.concat();\r\n      },\r\n\r\n      /**\r\n       * calculate the translation matrix for an object transform\r\n       * @return {Array} rotation matrix for the object\r\n       */\r\n      _calcTranslateMatrix: function() {\r\n        var center = this.getCenterPoint();\r\n        return [1, 0, 0, 1, center.x, center.y];\r\n      },\r\n\r\n      transformMatrixKey: function(skipGroup) {\r\n        var sep = '_', prefix = '';\r\n        if (!skipGroup && this.group) {\r\n          prefix = this.group.transformMatrixKey(skipGroup) + sep;\r\n        };\r\n        return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\r\n          sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\r\n          sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\r\n      },\r\n\r\n      /**\r\n       * calculate trasform Matrix that represent current transformation from\r\n       * object properties.\r\n       * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\r\n       * @return {Array} matrix Transform Matrix for the object\r\n       */\r\n      calcTransformMatrix: function(skipGroup) {\r\n        if (skipGroup) {\r\n          return this.calcOwnMatrix();\r\n        }\r\n        var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\r\n        if (cache.key === key) {\r\n          return cache.value;\r\n        }\r\n        var matrix = this.calcOwnMatrix();\r\n        if (this.group) {\r\n          matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\r\n        }\r\n        cache.key = key;\r\n        cache.value = matrix;\r\n        return matrix;\r\n      },\r\n\r\n      calcOwnMatrix: function() {\r\n        var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\r\n        if (cache.key === key) {\r\n          return cache.value;\r\n        }\r\n        var matrix = this._calcTranslateMatrix(),\r\n            rotateMatrix,\r\n            dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\r\n        if (this.angle) {\r\n          rotateMatrix = this._calcRotateMatrix();\r\n          matrix = multiplyMatrices(matrix, rotateMatrix);\r\n        }\r\n        matrix = multiplyMatrices(matrix, dimensionMatrix);\r\n        cache.key = key;\r\n        cache.value = matrix;\r\n        return matrix;\r\n      },\r\n\r\n      _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\r\n        var skewMatrix,\r\n            scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\r\n            scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\r\n            scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\r\n        if (skewX) {\r\n          skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\r\n          scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\r\n        }\r\n        if (skewY) {\r\n          skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\r\n          scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\r\n        }\r\n        return scaleMatrix;\r\n      },\r\n\r\n\r\n      /*\r\n       * Calculate object dimensions from its properties\r\n       * @private\r\n       * @return {Object} .x width dimension\r\n       * @return {Object} .y height dimension\r\n       */\r\n      _getNonTransformedDimensions: function() {\r\n        var strokeWidth = this.strokeWidth,\r\n            w = this.width + strokeWidth,\r\n            h = this.height + strokeWidth;\r\n        return { x: w, y: h };\r\n      },\r\n\r\n      /*\r\n       * Calculate object bounding boxdimensions from its properties scale, skew.\r\n       * @private\r\n       * @return {Object} .x width dimension\r\n       * @return {Object} .y height dimension\r\n       */\r\n      _getTransformedDimensions: function(skewX, skewY) {\r\n        if (typeof skewX === 'undefined') {\r\n          skewX = this.skewX;\r\n        }\r\n        if (typeof skewY === 'undefined') {\r\n          skewY = this.skewY;\r\n        }\r\n        var dimensions = this._getNonTransformedDimensions();\r\n        if (skewX === 0 && skewY === 0) {\r\n          return { x: dimensions.x * this.scaleX, y: dimensions.y * this.scaleY };\r\n        }\r\n        var dimX = dimensions.x / 2, dimY = dimensions.y / 2,\r\n            points = [\r\n              {\r\n                x: -dimX,\r\n                y: -dimY\r\n              },\r\n              {\r\n                x: dimX,\r\n                y: -dimY\r\n              },\r\n              {\r\n                x: -dimX,\r\n                y: dimY\r\n              },\r\n              {\r\n                x: dimX,\r\n                y: dimY\r\n              }],\r\n            i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\r\n            bbox;\r\n        for (i = 0; i < points.length; i++) {\r\n          points[i] = fabric.util.transformPoint(points[i], transformMatrix);\r\n        }\r\n        bbox = fabric.util.makeBoundingBoxFromPoints(points);\r\n        return { x: bbox.width, y: bbox.height };\r\n      },\r\n\r\n      /*\r\n       * Calculate object dimensions for controls. include padding and canvas zoom\r\n       * private\r\n       */\r\n      _calculateCurrentDimensions: function()  {\r\n        var vpt = this.getViewportTransform(),\r\n            dim = this._getTransformedDimensions(),\r\n            p = fabric.util.transformPoint(dim, vpt, true);\r\n\r\n        return p.scalarAdd(2 * this.padding);\r\n      },\r\n    });\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * Moves an object to the bottom of the stack of drawn objects\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    sendToBack: function() {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\r\n      }\r\n      else {\r\n        this.canvas.sendToBack(this);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object to the top of the stack of drawn objects\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    bringToFront: function() {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\r\n      }\r\n      else {\r\n        this.canvas.bringToFront(this);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object down in stack of drawn objects\r\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    sendBackwards: function(intersecting) {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\r\n      }\r\n      else {\r\n        this.canvas.sendBackwards(this, intersecting);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object up in stack of drawn objects\r\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    bringForward: function(intersecting) {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\r\n      }\r\n      else {\r\n        this.canvas.bringForward(this, intersecting);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object to specified level in stack of drawn objects\r\n     * @param {Number} index New position of object\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    moveTo: function(index) {\r\n      if (this.group && this.group.type !== 'activeSelection') {\r\n        fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\r\n      }\r\n      else {\r\n        this.canvas.moveTo(this, index);\r\n      }\r\n      return this;\r\n    }\r\n  });\r\n\r\n\r\n  /* _TO_SVG_START_ */\r\n  (function() {\r\n    function getSvgColorString(prop, value) {\r\n      if (!value) {\r\n        return prop + ': none; ';\r\n      }\r\n      else if (value.toLive) {\r\n        return prop + ': url(#SVGID_' + value.id + '); ';\r\n      }\r\n      else {\r\n        var color = new fabric.Color(value),\r\n            str = prop + ': ' + color.toRgb() + '; ',\r\n            opacity = color.getAlpha();\r\n        if (opacity !== 1) {\r\n          //change the color in rgb + opacity\r\n          str += prop + '-opacity: ' + opacity.toString() + '; ';\r\n        }\r\n        return str;\r\n      }\r\n    }\r\n\r\n    var toFixed = fabric.util.toFixed;\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n      /**\r\n       * Returns styles-string for svg-export\r\n       * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n       * @return {String}\r\n       */\r\n      getSvgStyles: function(skipShadow) {\r\n\r\n        var fillRule = this.fillRule,\r\n            strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\r\n            strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\r\n            strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\r\n            strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\r\n            strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\r\n            opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\r\n            visibility = this.visible ? '' : ' visibility: hidden;',\r\n            filter = skipShadow ? '' : this.getSvgFilter(),\r\n            fill = getSvgColorString('fill', this.fill),\r\n            stroke = getSvgColorString('stroke', this.stroke);\r\n\r\n        return [\r\n          stroke,\r\n          'stroke-width: ', strokeWidth, '; ',\r\n          'stroke-dasharray: ', strokeDashArray, '; ',\r\n          'stroke-linecap: ', strokeLineCap, '; ',\r\n          'stroke-linejoin: ', strokeLineJoin, '; ',\r\n          'stroke-miterlimit: ', strokeMiterLimit, '; ',\r\n          fill,\r\n          'fill-rule: ', fillRule, '; ',\r\n          'opacity: ', opacity, ';',\r\n          filter,\r\n          visibility\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns styles-string for svg-export\r\n       * @param {Object} style the object from which to retrieve style properties\r\n       * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\r\n       * @return {String}\r\n       */\r\n      getSvgSpanStyles: function(style, useWhiteSpace) {\r\n        var term = '; ';\r\n        var fontFamily = style.fontFamily ?\r\n          'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\r\n            '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\r\n        var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\r\n            fontFamily = fontFamily,\r\n            fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\r\n            fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\r\n            fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\r\n            fill = style.fill ? getSvgColorString('fill', style.fill) : '',\r\n            stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\r\n            textDecoration = this.getSvgTextDecoration(style),\r\n            deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\r\n        if (textDecoration) {\r\n          textDecoration = 'text-decoration: ' + textDecoration + term;\r\n        }\r\n\r\n        return [\r\n          stroke,\r\n          strokeWidth,\r\n          fontFamily,\r\n          fontSize,\r\n          fontStyle,\r\n          fontWeight,\r\n          textDecoration,\r\n          fill,\r\n          deltaY,\r\n          useWhiteSpace ? 'white-space: pre; ' : ''\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns text-decoration property for svg-export\r\n       * @param {Object} style the object from which to retrieve style properties\r\n       * @return {String}\r\n       */\r\n      getSvgTextDecoration: function(style) {\r\n        if ('overline' in style || 'underline' in style || 'linethrough' in style) {\r\n          return (style.overline ? 'overline ' : '') +\r\n            (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\r\n        }\r\n        return '';\r\n      },\r\n\r\n      /**\r\n       * Returns filter for svg shadow\r\n       * @return {String}\r\n       */\r\n      getSvgFilter: function() {\r\n        return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\r\n      },\r\n\r\n      /**\r\n       * Returns id attribute for svg output\r\n       * @return {String}\r\n       */\r\n      getSvgId: function() {\r\n        return this.id ? 'id=\"' + this.id + '\" ' : '';\r\n      },\r\n\r\n      /**\r\n       * Returns transform-string for svg-export\r\n       * @return {String}\r\n       */\r\n      getSvgTransform: function() {\r\n        var angle = this.angle,\r\n            skewX = (this.skewX % 360),\r\n            skewY = (this.skewY % 360),\r\n            center = this.getCenterPoint(),\r\n\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n\r\n            translatePart = 'translate(' +\r\n                              toFixed(center.x, NUM_FRACTION_DIGITS) +\r\n                              ' ' +\r\n                              toFixed(center.y, NUM_FRACTION_DIGITS) +\r\n                            ')',\r\n\r\n            anglePart = angle !== 0\r\n              ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\r\n              : '',\r\n\r\n            scalePart = (this.scaleX === 1 && this.scaleY === 1)\r\n              ? '' :\r\n              (' scale(' +\r\n                toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\r\n                ' ' +\r\n                toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\r\n              ')'),\r\n\r\n            skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\r\n\r\n            skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\r\n\r\n            flipXPart = this.flipX ? ' matrix(-1 0 0 1 0 0) ' : '',\r\n\r\n            flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 0)' : '';\r\n\r\n        return [\r\n          translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns transform-string for svg-export from the transform matrix of single elements\r\n       * @return {String}\r\n       */\r\n      getSvgTransformMatrix: function() {\r\n        return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\r\n      },\r\n\r\n      _setSVGBg: function(textBgRects) {\r\n        if (this.backgroundColor) {\r\n          var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n          textBgRects.push(\r\n            '\\t\\t<rect ',\r\n            this._getFillAttributes(this.backgroundColor),\r\n            ' x=\"',\r\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\r\n            '\" y=\"',\r\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\r\n            '\" width=\"',\r\n            toFixed(this.width, NUM_FRACTION_DIGITS),\r\n            '\" height=\"',\r\n            toFixed(this.height, NUM_FRACTION_DIGITS),\r\n            '\"></rect>\\n');\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createBaseSVGMarkup: function() {\r\n        var markup = [];\r\n\r\n        if (this.fill && this.fill.toLive) {\r\n          markup.push(this.fill.toSVG(this, false));\r\n        }\r\n        if (this.stroke && this.stroke.toLive) {\r\n          markup.push(this.stroke.toSVG(this, false));\r\n        }\r\n        if (this.shadow) {\r\n          markup.push(this.shadow.toSVG(this));\r\n        }\r\n        return markup;\r\n      },\r\n\r\n      addPaintOrder: function() {\r\n        return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\r\n      }\r\n    });\r\n  })();\r\n  /* _TO_SVG_END_ */\r\n\r\n\r\n  (function() {\r\n\r\n    var extend = fabric.util.object.extend,\r\n        originalSet = 'stateProperties';\r\n\r\n    /*\r\n      Depends on `stateProperties`\r\n    */\r\n    function saveProps(origin, destination, props) {\r\n      var tmpObj = { }, deep = true;\r\n      props.forEach(function(prop) {\r\n        tmpObj[prop] = origin[prop];\r\n      });\r\n      extend(origin[destination], tmpObj, deep);\r\n    }\r\n\r\n    function _isEqual(origValue, currentValue, firstPass) {\r\n      if (origValue === currentValue) {\r\n        // if the objects are identical, return\r\n        return true;\r\n      }\r\n      else if (Array.isArray(origValue)) {\r\n        if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\r\n          return false;\r\n        }\r\n        for (var i = 0, len = origValue.length; i < len; i++) {\r\n          if (!_isEqual(origValue[i], currentValue[i])) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      else if (origValue && typeof origValue === 'object') {\r\n        var keys = Object.keys(origValue), key;\r\n        if (!currentValue ||\r\n            typeof currentValue !== 'object' ||\r\n            (!firstPass && keys.length !== Object.keys(currentValue).length)\r\n        ) {\r\n          return false;\r\n        }\r\n        for (var i = 0, len = keys.length; i < len; i++) {\r\n          key = keys[i];\r\n          if (!_isEqual(origValue[key], currentValue[key])) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Returns true if object state (one of its state properties) was changed\r\n       * @param {String} [propertySet] optional name for the set of property we want to save\r\n       * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\r\n       */\r\n      hasStateChanged: function(propertySet) {\r\n        propertySet = propertySet || originalSet;\r\n        var dashedPropertySet = '_' + propertySet;\r\n        if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\r\n          return true;\r\n        }\r\n        return !_isEqual(this[dashedPropertySet], this, true);\r\n      },\r\n\r\n      /**\r\n       * Saves state of an object\r\n       * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      saveState: function(options) {\r\n        var propertySet = options && options.propertySet || originalSet,\r\n            destination = '_' + propertySet;\r\n        if (!this[destination]) {\r\n          return this.setupState(options);\r\n        }\r\n        saveProps(this, destination, this[propertySet]);\r\n        if (options && options.stateProperties) {\r\n          saveProps(this, destination, options.stateProperties);\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Setups state of an object\r\n       * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      setupState: function(options) {\r\n        options = options || { };\r\n        var propertySet = options.propertySet || originalSet;\r\n        options.propertySet = propertySet;\r\n        this['_' + propertySet] = { };\r\n        this.saveState(options);\r\n        return this;\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var degreesToRadians = fabric.util.degreesToRadians;\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * The object interactivity controls.\r\n       * @private\r\n       */\r\n      _controlsVisibility: null,\r\n\r\n      /**\r\n       * Determines which corner has been clicked\r\n       * @private\r\n       * @param {Object} pointer The pointer indicating the mouse position\r\n       * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\r\n       */\r\n      _findTargetCorner: function(pointer) {\r\n        // objects in group, anykind, are not self modificable,\r\n        // must not return an hovered corner.\r\n        if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\r\n          return false;\r\n        }\r\n\r\n        var ex = pointer.x,\r\n            ey = pointer.y,\r\n            xPoints,\r\n            lines;\r\n        this.__corner = 0;\r\n        for (var i in this.oCoords) {\r\n\r\n          if (!this.isControlVisible(i)) {\r\n            continue;\r\n          }\r\n\r\n          if (i === 'mtr' && !this.hasRotatingPoint) {\r\n            continue;\r\n          }\r\n\r\n          if (this.get('lockUniScaling') &&\r\n             (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\r\n            continue;\r\n          }\r\n\r\n          lines = this._getImageLines(this.oCoords[i].corner);\r\n\r\n          // debugging\r\n\r\n          // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\r\n\r\n          // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\r\n\r\n          // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\r\n\r\n          // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\r\n\r\n          xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\r\n          if (xPoints !== 0 && xPoints % 2 === 1) {\r\n            this.__corner = i;\r\n            return i;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Sets the coordinates of the draggable boxes in the corners of\r\n       * the image used to scale/rotate it.\r\n       * @private\r\n       */\r\n      _setCornerCoords: function() {\r\n        var coords = this.oCoords,\r\n            newTheta = degreesToRadians(45 - this.angle),\r\n            /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\r\n            /* 0.707106 stands for sqrt(2)/2 */\r\n            cornerHypotenuse = this.cornerSize * 0.707106,\r\n            cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\r\n            sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\r\n            x, y;\r\n\r\n        for (var point in coords) {\r\n          x = coords[point].x;\r\n          y = coords[point].y;\r\n          coords[point].corner = {\r\n            tl: {\r\n              x: x - sinHalfOffset,\r\n              y: y - cosHalfOffset\r\n            },\r\n            tr: {\r\n              x: x + cosHalfOffset,\r\n              y: y - sinHalfOffset\r\n            },\r\n            bl: {\r\n              x: x - cosHalfOffset,\r\n              y: y + sinHalfOffset\r\n            },\r\n            br: {\r\n              x: x + sinHalfOffset,\r\n              y: y + cosHalfOffset\r\n            }\r\n          };\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Draws a colored layer behind the object, inside its selection borders.\r\n       * Requires public options: padding, selectionBackgroundColor\r\n       * this function is called when the context is transformed\r\n       * has checks to be skipped when the object is on a staticCanvas\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawSelectionBackground: function(ctx) {\r\n        if (!this.selectionBackgroundColor ||\r\n          (this.canvas && !this.canvas.interactive) ||\r\n          (this.canvas && this.canvas._activeObject !== this)\r\n        ) {\r\n          return this;\r\n        }\r\n        ctx.save();\r\n        var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\r\n            vpt = this.canvas.viewportTransform;\r\n        ctx.translate(center.x, center.y);\r\n        ctx.scale(1 / vpt[0], 1 / vpt[3]);\r\n        ctx.rotate(degreesToRadians(this.angle));\r\n        ctx.fillStyle = this.selectionBackgroundColor;\r\n        ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\r\n        ctx.restore();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Draws borders of an object's bounding box.\r\n       * Requires public properties: width, height\r\n       * Requires public options: padding, borderColor\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @param {Object} styleOverride object to override the object style\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawBorders: function(ctx, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        var wh = this._calculateCurrentDimensions(),\r\n            strokeWidth = 1 / this.borderScaleFactor,\r\n            width = wh.x + strokeWidth,\r\n            height = wh.y + strokeWidth,\r\n            drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\r\n              styleOverride.hasRotatingPoint : this.hasRotatingPoint,\r\n            hasControls = typeof styleOverride.hasControls !== 'undefined' ?\r\n              styleOverride.hasControls : this.hasControls,\r\n            rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\r\n              styleOverride.rotatingPointOffset : this.rotatingPointOffset;\r\n\r\n        ctx.save();\r\n        ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\r\n        this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\r\n\r\n        ctx.strokeRect(\r\n          -width / 2,\r\n          -height / 2,\r\n          width,\r\n          height\r\n        );\r\n\r\n        if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\r\n\r\n          var rotateHeight = -height / 2;\r\n\r\n          ctx.beginPath();\r\n          ctx.moveTo(0, rotateHeight);\r\n          ctx.lineTo(0, rotateHeight - rotatingPointOffset);\r\n          ctx.stroke();\r\n        }\r\n\r\n        ctx.restore();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Draws borders of an object's bounding box when it is inside a group.\r\n       * Requires public properties: width, height\r\n       * Requires public options: padding, borderColor\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @param {object} options object representing current object parameters\r\n       * @param {Object} styleOverride object to override the object style\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawBordersInGroup: function(ctx, options, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        var p = this._getNonTransformedDimensions(),\r\n            matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\r\n            wh = fabric.util.transformPoint(p, matrix),\r\n            strokeWidth = 1 / this.borderScaleFactor,\r\n            width = wh.x + strokeWidth,\r\n            height = wh.y + strokeWidth;\r\n\r\n        ctx.save();\r\n        this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\r\n        ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\r\n\r\n        ctx.strokeRect(\r\n          -width / 2,\r\n          -height / 2,\r\n          width,\r\n          height\r\n        );\r\n\r\n        ctx.restore();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Draws corners of an object's bounding box.\r\n       * Requires public properties: width, height\r\n       * Requires public options: cornerSize, padding\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @param {Object} styleOverride object to override the object style\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawControls: function(ctx, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        var wh = this._calculateCurrentDimensions(),\r\n            width = wh.x,\r\n            height = wh.y,\r\n            scaleOffset = styleOverride.cornerSize || this.cornerSize,\r\n            left = -(width + scaleOffset) / 2,\r\n            top = -(height + scaleOffset) / 2,\r\n            transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\r\n              styleOverride.transparentCorners : this.transparentCorners,\r\n            hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\r\n              styleOverride.hasRotatingPoint : this.hasRotatingPoint,\r\n            methodName = transparentCorners ? 'stroke' : 'fill';\r\n\r\n        ctx.save();\r\n        ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\r\n        if (!this.transparentCorners) {\r\n          ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\r\n        }\r\n        this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\r\n\r\n        // top-left\r\n        this._drawControl('tl', ctx, methodName,\r\n          left,\r\n          top, styleOverride);\r\n\r\n        // top-right\r\n        this._drawControl('tr', ctx, methodName,\r\n          left + width,\r\n          top, styleOverride);\r\n\r\n        // bottom-left\r\n        this._drawControl('bl', ctx, methodName,\r\n          left,\r\n          top + height, styleOverride);\r\n\r\n        // bottom-right\r\n        this._drawControl('br', ctx, methodName,\r\n          left + width,\r\n          top + height, styleOverride);\r\n\r\n        if (!this.get('lockUniScaling')) {\r\n\r\n          // middle-top\r\n          this._drawControl('mt', ctx, methodName,\r\n            left + width / 2,\r\n            top, styleOverride);\r\n\r\n          // middle-bottom\r\n          this._drawControl('mb', ctx, methodName,\r\n            left + width / 2,\r\n            top + height, styleOverride);\r\n\r\n          // middle-right\r\n          this._drawControl('mr', ctx, methodName,\r\n            left + width,\r\n            top + height / 2, styleOverride);\r\n\r\n          // middle-left\r\n          this._drawControl('ml', ctx, methodName,\r\n            left,\r\n            top + height / 2, styleOverride);\r\n        }\r\n\r\n        // middle-top-rotate\r\n        if (hasRotatingPoint) {\r\n          this._drawControl('mtr', ctx, methodName,\r\n            left + width / 2,\r\n            top - this.rotatingPointOffset, styleOverride);\r\n        }\r\n\r\n        ctx.restore();\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        if (!this.isControlVisible(control)) {\r\n          return;\r\n        }\r\n        var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\r\n        switch (styleOverride.cornerStyle || this.cornerStyle) {\r\n          case 'circle':\r\n            ctx.beginPath();\r\n            ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\r\n            ctx[methodName]();\r\n            if (stroke) {\r\n              ctx.stroke();\r\n            }\r\n            break;\r\n          default:\r\n            this.transparentCorners || ctx.clearRect(left, top, size, size);\r\n            ctx[methodName + 'Rect'](left, top, size, size);\r\n            if (stroke) {\r\n              ctx.strokeRect(left, top, size, size);\r\n            }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns true if the specified control is visible, false otherwise.\r\n       * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\r\n       * @returns {Boolean} true if the specified control is visible, false otherwise\r\n       */\r\n      isControlVisible: function(controlName) {\r\n        return this._getControlsVisibility()[controlName];\r\n      },\r\n\r\n      /**\r\n       * Sets the visibility of the specified control.\r\n       * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\r\n       * @param {Boolean} visible true to set the specified control visible, false otherwise\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setControlVisible: function(controlName, visible) {\r\n        this._getControlsVisibility()[controlName] = visible;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets the visibility state of object controls.\r\n       * @param {Object} [options] Options object\r\n       * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\r\n       * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\r\n       * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\r\n       * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\r\n       * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\r\n       * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\r\n       * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\r\n       * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\r\n       * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setControlsVisibility: function(options) {\r\n        options || (options = { });\r\n\r\n        for (var p in options) {\r\n          this.setControlVisible(p, options[p]);\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns the instance of the control visibility set for this object.\r\n       * @private\r\n       * @returns {Object}\r\n       */\r\n      _getControlsVisibility: function() {\r\n        if (!this._controlsVisibility) {\r\n          this._controlsVisibility = {\r\n            tl: true,\r\n            tr: true,\r\n            br: true,\r\n            bl: true,\r\n            ml: true,\r\n            mt: true,\r\n            mr: true,\r\n            mb: true,\r\n            mtr: true\r\n          };\r\n        }\r\n        return this._controlsVisibility;\r\n      },\r\n\r\n      /**\r\n       * This callback function is called every time _discardActiveObject or _setActiveObject\r\n       * try to to deselect this object. If the function returns true, the process is cancelled\r\n       * @param {Object} [options] options sent from the upper functions\r\n       * @param {Event} [options.e] event if the process is generated by an event\r\n       */\r\n      onDeselect: function() {\r\n        // implemented by sub-classes, as needed.\r\n      },\r\n\r\n\r\n      /**\r\n       * This callback function is called every time _discardActiveObject or _setActiveObject\r\n       * try to to select this object. If the function returns true, the process is cancelled\r\n       * @param {Object} [options] options sent from the upper functions\r\n       * @param {Event} [options.e] event if the process is generated by an event\r\n       */\r\n      onSelect: function() {\r\n        // implemented by sub-classes, as needed.\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Animation duration (in ms) for fx* methods\r\n     * @type Number\r\n     * @default\r\n     */\r\n    FX_DURATION: 500,\r\n\r\n    /**\r\n     * Centers object horizontally with animation.\r\n     * @param {fabric.Object} object Object to center\r\n     * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxCenterObjectH: function (object, callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: object.left,\r\n        endValue: this.getCenter().left,\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          object.set('left', value);\r\n          _this.requestRenderAll();\r\n          onChange();\r\n        },\r\n        onComplete: function() {\r\n          object.setCoords();\r\n          onComplete();\r\n        }\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object vertically with animation.\r\n     * @param {fabric.Object} object Object to center\r\n     * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxCenterObjectV: function (object, callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: object.top,\r\n        endValue: this.getCenter().top,\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          object.set('top', value);\r\n          _this.requestRenderAll();\r\n          onChange();\r\n        },\r\n        onComplete: function() {\r\n          object.setCoords();\r\n          onComplete();\r\n        }\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Same as `fabric.Canvas#remove` but animated\r\n     * @param {fabric.Object} object Object to remove\r\n     * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxRemove: function (object, callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: object.opacity,\r\n        endValue: 0,\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          object.set('opacity', value);\r\n          _this.requestRenderAll();\r\n          onChange();\r\n        },\r\n        onComplete: function () {\r\n          _this.remove(object);\r\n          onComplete();\r\n        }\r\n      });\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n    /**\r\n     * Animates object's properties\r\n     * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\r\n     * @param {Number|Object} value Value to animate property to (if string was given first) or options object\r\n     * @return {fabric.Object} thisArg\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\r\n     * @chainable\r\n     *\r\n     * As object — multiple properties\r\n     *\r\n     * object.animate({ left: ..., top: ... });\r\n     * object.animate({ left: ..., top: ... }, { duration: ... });\r\n     *\r\n     * As string — one property\r\n     *\r\n     * object.animate('left', ...);\r\n     * object.animate('left', { duration: ... });\r\n     *\r\n     */\r\n    animate: function() {\r\n      if (arguments[0] && typeof arguments[0] === 'object') {\r\n        var propsToAnimate = [], prop, skipCallbacks;\r\n        for (prop in arguments[0]) {\r\n          propsToAnimate.push(prop);\r\n        }\r\n        for (var i = 0, len = propsToAnimate.length; i < len; i++) {\r\n          prop = propsToAnimate[i];\r\n          skipCallbacks = i !== len - 1;\r\n          this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\r\n        }\r\n      }\r\n      else {\r\n        this._animate.apply(this, arguments);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} property Property to animate\r\n     * @param {String} to Value to animate to\r\n     * @param {Object} [options] Options object\r\n     * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\r\n     */\r\n    _animate: function(property, to, options, skipCallbacks) {\r\n      var _this = this, propPair;\r\n\r\n      to = to.toString();\r\n\r\n      if (!options) {\r\n        options = { };\r\n      }\r\n      else {\r\n        options = fabric.util.object.clone(options);\r\n      }\r\n\r\n      if (~property.indexOf('.')) {\r\n        propPair = property.split('.');\r\n      }\r\n\r\n      var currentValue = propPair\r\n        ? this.get(propPair[0])[propPair[1]]\r\n        : this.get(property);\r\n\r\n      if (!('from' in options)) {\r\n        options.from = currentValue;\r\n      }\r\n\r\n      if (~to.indexOf('=')) {\r\n        to = currentValue + parseFloat(to.replace('=', ''));\r\n      }\r\n      else {\r\n        to = parseFloat(to);\r\n      }\r\n\r\n      fabric.util.animate({\r\n        startValue: options.from,\r\n        endValue: to,\r\n        byValue: options.by,\r\n        easing: options.easing,\r\n        duration: options.duration,\r\n        abort: options.abort && function() {\r\n          return options.abort.call(_this);\r\n        },\r\n        onChange: function(value, valueProgress, timeProgress) {\r\n          if (propPair) {\r\n            _this[propPair[0]][propPair[1]] = value;\r\n          }\r\n          else {\r\n            _this.set(property, value);\r\n          }\r\n          if (skipCallbacks) {\r\n            return;\r\n          }\r\n          options.onChange && options.onChange(value, valueProgress, timeProgress);\r\n        },\r\n        onComplete: function(value, valueProgress, timeProgress) {\r\n          if (skipCallbacks) {\r\n            return;\r\n          }\r\n\r\n          _this.setCoords();\r\n          options.onComplete && options.onComplete(value, valueProgress, timeProgress);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        clone = fabric.util.object.clone,\r\n        coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\r\n        supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\r\n\r\n    if (fabric.Line) {\r\n      fabric.warn('fabric.Line is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Line class\r\n     * @class fabric.Line\r\n     * @extends fabric.Object\r\n     * @see {@link fabric.Line#initialize} for constructor definition\r\n     */\r\n    fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'line',\r\n\r\n      /**\r\n       * x value or first line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      x1: 0,\r\n\r\n      /**\r\n       * y value or first line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      y1: 0,\r\n\r\n      /**\r\n       * x value or second line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      x2: 0,\r\n\r\n      /**\r\n       * y value or second line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      y2: 0,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Array} [points] Array of points\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Line} thisArg\r\n       */\r\n      initialize: function(points, options) {\r\n        if (!points) {\r\n          points = [0, 0, 0, 0];\r\n        }\r\n\r\n        this.callSuper('initialize', options);\r\n\r\n        this.set('x1', points[0]);\r\n        this.set('y1', points[1]);\r\n        this.set('x2', points[2]);\r\n        this.set('y2', points[3]);\r\n\r\n        this._setWidthHeight(options);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} [options] Options\r\n       */\r\n      _setWidthHeight: function(options) {\r\n        options || (options = { });\r\n\r\n        this.width = Math.abs(this.x2 - this.x1);\r\n        this.height = Math.abs(this.y2 - this.y1);\r\n\r\n        this.left = 'left' in options\r\n          ? options.left\r\n          : this._getLeftToOriginX();\r\n\r\n        this.top = 'top' in options\r\n          ? options.top\r\n          : this._getTopToOriginY();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       */\r\n      _set: function(key, value) {\r\n        this.callSuper('_set', key, value);\r\n        if (typeof coordProps[key] !== 'undefined') {\r\n          this._setWidthHeight();\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\r\n       */\r\n      _getLeftToOriginX: makeEdgeToOriginGetter(\r\n        { // property names\r\n          origin: 'originX',\r\n          axis1: 'x1',\r\n          axis2: 'x2',\r\n          dimension: 'width'\r\n        },\r\n        { // possible values of origin\r\n          nearest: 'left',\r\n          center: 'center',\r\n          farthest: 'right'\r\n        }\r\n      ),\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\r\n       */\r\n      _getTopToOriginY: makeEdgeToOriginGetter(\r\n        { // property names\r\n          origin: 'originY',\r\n          axis1: 'y1',\r\n          axis2: 'y2',\r\n          dimension: 'height'\r\n        },\r\n        { // possible values of origin\r\n          nearest: 'top',\r\n          center: 'center',\r\n          farthest: 'bottom'\r\n        }\r\n      ),\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        ctx.beginPath();\r\n\r\n        if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\r\n          // move from center (of virtual box) to its left/top corner\r\n          // we can't assume x1, y1 is top left and x2, y2 is bottom right\r\n          var p = this.calcLinePoints();\r\n          ctx.moveTo(p.x1, p.y1);\r\n          ctx.lineTo(p.x2, p.y2);\r\n        }\r\n\r\n        ctx.lineWidth = this.strokeWidth;\r\n\r\n        // TODO: test this\r\n        // make sure setting \"fill\" changes color of a line\r\n        // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\r\n        var origStrokeStyle = ctx.strokeStyle;\r\n        ctx.strokeStyle = this.stroke || ctx.fillStyle;\r\n        this.stroke && this._renderStroke(ctx);\r\n        ctx.strokeStyle = origStrokeStyle;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var p = this.calcLinePoints();\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it returns the center of the object in the svg\r\n       * untransformed coordinates\r\n       * @private\r\n       * @return {Object} center point from element coordinates\r\n       */\r\n      _findCenterFromElement: function() {\r\n        return {\r\n          x: (this.x1 + this.x2) / 2,\r\n          y: (this.y1 + this.y2) / 2,\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @methd toObject\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\r\n      },\r\n\r\n      /*\r\n       * Calculate object dimensions from its properties\r\n       * @private\r\n       */\r\n      _getNonTransformedDimensions: function() {\r\n        var dim = this.callSuper('_getNonTransformedDimensions');\r\n        if (this.strokeLineCap === 'butt') {\r\n          if (this.width === 0) {\r\n            dim.y -= this.strokeWidth;\r\n          }\r\n          if (this.height === 0) {\r\n            dim.x -= this.strokeWidth;\r\n          }\r\n        }\r\n        return dim;\r\n      },\r\n\r\n      /**\r\n       * Recalculates line points given width and height\r\n       * @private\r\n       */\r\n      calcLinePoints: function() {\r\n        var xMult = this.x1 <= this.x2 ? -1 : 1,\r\n            yMult = this.y1 <= this.y2 ? -1 : 1,\r\n            x1 = (xMult * this.width * 0.5),\r\n            y1 = (yMult * this.height * 0.5),\r\n            x2 = (xMult * this.width * -0.5),\r\n            y2 = (yMult * this.height * -0.5);\r\n\r\n        return {\r\n          x1: x1,\r\n          x2: x2,\r\n          y1: y1,\r\n          y2: y2\r\n        };\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(),\r\n            p = this.calcLinePoints();\r\n        markup.push(\r\n          '<line ', this.getSvgId(),\r\n          'x1=\"', p.x1,\r\n          '\" y1=\"', p.y1,\r\n          '\" x2=\"', p.x2,\r\n          '\" y2=\"', p.y2,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(),\r\n          this.getSvgTransformMatrix(),\r\n          '\"/>\\n'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Line\r\n     * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\r\n     */\r\n    fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\r\n\r\n    /**\r\n     * Returns fabric.Line instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Line\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} [callback] callback function invoked after parsing\r\n     */\r\n    fabric.Line.fromElement = function(element, callback, options) {\r\n      options = options || { };\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\r\n          points = [\r\n            parsedAttributes.x1 || 0,\r\n            parsedAttributes.y1 || 0,\r\n            parsedAttributes.x2 || 0,\r\n            parsedAttributes.y2 || 0\r\n          ];\r\n      callback(new fabric.Line(points, extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Line instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Line\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     */\r\n    fabric.Line.fromObject = function(object, callback) {\r\n      function _callback(instance) {\r\n        delete instance.points;\r\n        callback && callback(instance);\r\n      };\r\n      var options = clone(object, true);\r\n      options.points = [object.x1, object.y1, object.x2, object.y2];\r\n      fabric.Object._fromObject('Line', options, _callback, 'points');\r\n    };\r\n\r\n    /**\r\n     * Produces a function that calculates distance from canvas edge to Line origin.\r\n     */\r\n    function makeEdgeToOriginGetter(propertyNames, originValues) {\r\n      var origin = propertyNames.origin,\r\n          axis1 = propertyNames.axis1,\r\n          axis2 = propertyNames.axis2,\r\n          dimension = propertyNames.dimension,\r\n          nearest = originValues.nearest,\r\n          center = originValues.center,\r\n          farthest = originValues.farthest;\r\n\r\n      return function() {\r\n        switch (this.get(origin)) {\r\n          case nearest:\r\n            return Math.min(this.get(axis1), this.get(axis2));\r\n          case center:\r\n            return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\r\n          case farthest:\r\n            return Math.max(this.get(axis1), this.get(axis2));\r\n        }\r\n      };\r\n\r\n    }\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        pi = Math.PI;\r\n\r\n    if (fabric.Circle) {\r\n      fabric.warn('fabric.Circle is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Circle class\r\n     * @class fabric.Circle\r\n     * @extends fabric.Object\r\n     * @see {@link fabric.Circle#initialize} for constructor definition\r\n     */\r\n    fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'circle',\r\n\r\n      /**\r\n       * Radius of this circle\r\n       * @type Number\r\n       * @default\r\n       */\r\n      radius: 0,\r\n\r\n      /**\r\n       * Start angle of the circle, moving clockwise\r\n       * deprectated type, this should be in degree, this was an oversight.\r\n       * probably will change to degrees in next major version\r\n       * @type Number\r\n       * @default 0\r\n       */\r\n      startAngle: 0,\r\n\r\n      /**\r\n       * End angle of the circle\r\n       * deprectated type, this should be in degree, this was an oversight.\r\n       * probably will change to degrees in next major version\r\n       * @type Number\r\n       * @default 2Pi\r\n       */\r\n      endAngle: pi * 2,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       * @return {fabric.Circle} thisArg\r\n       */\r\n      _set: function(key, value) {\r\n        this.callSuper('_set', key, value);\r\n\r\n        if (key === 'radius') {\r\n          this.setRadius(value);\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\r\n            angle = (this.endAngle - this.startAngle) % ( 2 * pi);\r\n\r\n        if (angle === 0) {\r\n          markup.push(\r\n            '<circle ', this.getSvgId(),\r\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\r\n            'r=\"', this.radius,\r\n            '\" style=\"', this.getSvgStyles(),\r\n            '\" transform=\"', this.getSvgTransform(),\r\n            ' ', this.getSvgTransformMatrix(), '\"',\r\n            this.addPaintOrder(),\r\n            '/>\\n'\r\n          );\r\n        }\r\n        else {\r\n          var startX = fabric.util.cos(this.startAngle) * this.radius,\r\n              startY = fabric.util.sin(this.startAngle) * this.radius,\r\n              endX = fabric.util.cos(this.endAngle) * this.radius,\r\n              endY = fabric.util.sin(this.endAngle) * this.radius,\r\n              largeFlag = angle > pi ? '1' : '0';\r\n\r\n          markup.push(\r\n            '<path d=\"M ' + startX + ' ' + startY,\r\n            ' A ' + this.radius + ' ' + this.radius,\r\n            ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\r\n            '\" style=\"', this.getSvgStyles(),\r\n            '\" transform=\"', this.getSvgTransform(),\r\n            ' ', this.getSvgTransformMatrix(), '\"',\r\n            this.addPaintOrder(),\r\n            '/>\\n'\r\n          );\r\n        }\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          0,\r\n          0,\r\n          this.radius,\r\n          this.startAngle,\r\n          this.endAngle, false);\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * Returns horizontal radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRadiusX: function() {\r\n        return this.get('radius') * this.get('scaleX');\r\n      },\r\n\r\n      /**\r\n       * Returns vertical radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRadiusY: function() {\r\n        return this.get('radius') * this.get('scaleY');\r\n      },\r\n\r\n      /**\r\n       * Sets radius of an object (and updates width accordingly)\r\n       * @return {fabric.Circle} thisArg\r\n       */\r\n      setRadius: function(value) {\r\n        this.radius = value;\r\n        return this.set('width', value * 2).set('height', value * 2);\r\n      },\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Circle\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\r\n     */\r\n    fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Circle} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Circle\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} [callback] Options callback invoked after parsing is finished\r\n     * @param {Object} [options] Options object\r\n     * @throws {Error} If value of `r` attribute is missing or invalid\r\n     */\r\n    fabric.Circle.fromElement = function(element, callback) {\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\r\n\r\n      if (!isValidRadius(parsedAttributes)) {\r\n        throw new Error('value of `r` attribute is required and can not be negative');\r\n      }\r\n\r\n      parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\r\n      parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\r\n      callback(new fabric.Circle(parsedAttributes));\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function isValidRadius(attributes) {\r\n      return (('radius' in attributes) && (attributes.radius >= 0));\r\n    }\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns {@link fabric.Circle} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Circle\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     * @return {Object} Instance of fabric.Circle\r\n     */\r\n    fabric.Circle.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Circle', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Triangle) {\r\n      fabric.warn('fabric.Triangle is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Triangle class\r\n     * @class fabric.Triangle\r\n     * @extends fabric.Object\r\n     * @return {fabric.Triangle} thisArg\r\n     * @see {@link fabric.Triangle#initialize} for constructor definition\r\n     */\r\n    fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'triangle',\r\n\r\n      /**\r\n       * Width is set to 100 to compensate the old initialize code that was setting it to 100\r\n       * @type Number\r\n       * @default\r\n       */\r\n      width: 100,\r\n\r\n      /**\r\n       * Height is set to 100 to compensate the old initialize code that was setting it to 100\r\n       * @type Number\r\n       * @default\r\n       */\r\n      height: 100,\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        var widthBy2 = this.width / 2,\r\n            heightBy2 = this.height / 2;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(-widthBy2, heightBy2);\r\n        ctx.lineTo(0, -heightBy2);\r\n        ctx.lineTo(widthBy2, heightBy2);\r\n        ctx.closePath();\r\n\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var widthBy2 = this.width / 2,\r\n            heightBy2 = this.height / 2;\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(),\r\n            widthBy2 = this.width / 2,\r\n            heightBy2 = this.height / 2,\r\n            points = [\r\n              -widthBy2 + ' ' + heightBy2,\r\n              '0 ' + -heightBy2,\r\n              widthBy2 + ' ' + heightBy2\r\n            ]\r\n              .join(',');\r\n\r\n        markup.push(\r\n          '<polygon ', this.getSvgId(),\r\n          'points=\"', points,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(), '\"',\r\n          this.addPaintOrder(),\r\n          '/>'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /**\r\n     * Returns {@link fabric.Triangle} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Triangle\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     */\r\n    fabric.Triangle.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Triangle', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        piBy2   = Math.PI * 2;\r\n\r\n    if (fabric.Ellipse) {\r\n      fabric.warn('fabric.Ellipse is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Ellipse class\r\n     * @class fabric.Ellipse\r\n     * @extends fabric.Object\r\n     * @return {fabric.Ellipse} thisArg\r\n     * @see {@link fabric.Ellipse#initialize} for constructor definition\r\n     */\r\n    fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'ellipse',\r\n\r\n      /**\r\n       * Horizontal radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      rx:   0,\r\n\r\n      /**\r\n       * Vertical radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      ry:   0,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Ellipse} thisArg\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        this.set('rx', options && options.rx || 0);\r\n        this.set('ry', options && options.ry || 0);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       * @return {fabric.Ellipse} thisArg\r\n       */\r\n      _set: function(key, value) {\r\n        this.callSuper('_set', key, value);\r\n        switch (key) {\r\n\r\n          case 'rx':\r\n            this.rx = value;\r\n            this.set('width', value * 2);\r\n            break;\r\n\r\n          case 'ry':\r\n            this.ry = value;\r\n            this.set('height', value * 2);\r\n            break;\r\n\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns horizontal radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRx: function() {\r\n        return this.get('rx') * this.get('scaleX');\r\n      },\r\n\r\n      /**\r\n       * Returns Vertical radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRy: function() {\r\n        return this.get('ry') * this.get('scaleY');\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup();\r\n        markup.push(\r\n          '<ellipse ', this.getSvgId(),\r\n          'cx=\"0\" cy=\"0\" ',\r\n          'rx=\"', this.rx,\r\n          '\" ry=\"', this.ry,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(),\r\n          this.getSvgTransformMatrix(), '\"',\r\n          this.addPaintOrder(),\r\n          '/>\\n'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        ctx.beginPath();\r\n        ctx.save();\r\n        ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\r\n        ctx.arc(\r\n          0,\r\n          0,\r\n          this.rx,\r\n          0,\r\n          piBy2,\r\n          false);\r\n        ctx.restore();\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Ellipse\r\n     * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\r\n     */\r\n    fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Ellipse} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Ellipse\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} [callback] Options callback invoked after parsing is finished\r\n     * @return {fabric.Ellipse}\r\n     */\r\n    fabric.Ellipse.fromElement = function(element, callback) {\r\n\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\r\n\r\n      parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\r\n      parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\r\n      callback(new fabric.Ellipse(parsedAttributes));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns {@link fabric.Ellipse} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Ellipse\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     * @return {fabric.Ellipse}\r\n     */\r\n    fabric.Ellipse.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Ellipse', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend;\r\n\r\n    if (fabric.Rect) {\r\n      fabric.warn('fabric.Rect is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Rectangle class\r\n     * @class fabric.Rect\r\n     * @extends fabric.Object\r\n     * @return {fabric.Rect} thisArg\r\n     * @see {@link fabric.Rect#initialize} for constructor definition\r\n     */\r\n    fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\r\n\r\n      /**\r\n       * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'rect',\r\n\r\n      /**\r\n       * Horizontal border radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      rx:   0,\r\n\r\n      /**\r\n       * Vertical border radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      ry:   0,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        this._initRxRy();\r\n      },\r\n\r\n      /**\r\n       * Initializes rx/ry attributes\r\n       * @private\r\n       */\r\n      _initRxRy: function() {\r\n        if (this.rx && !this.ry) {\r\n          this.ry = this.rx;\r\n        }\r\n        else if (this.ry && !this.rx) {\r\n          this.rx = this.ry;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n\r\n        // optimize 1x1 case (used in spray brush)\r\n        if (this.width === 1 && this.height === 1) {\r\n          ctx.fillRect(-0.5, -0.5, 1, 1);\r\n          return;\r\n        }\r\n\r\n        var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\r\n            ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\r\n            w = this.width,\r\n            h = this.height,\r\n            x = -this.width / 2,\r\n            y = -this.height / 2,\r\n            isRounded = rx !== 0 || ry !== 0,\r\n            /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\r\n            k = 1 - 0.5522847498;\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(x + rx, y);\r\n\r\n        ctx.lineTo(x + w - rx, y);\r\n        isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\r\n\r\n        ctx.lineTo(x + w, y + h - ry);\r\n        isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\r\n\r\n        ctx.lineTo(x + rx, y + h);\r\n        isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\r\n\r\n        ctx.lineTo(x, y + ry);\r\n        isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\r\n\r\n        ctx.closePath();\r\n\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var x = -this.width / 2,\r\n            y = -this.height / 2,\r\n            w = this.width,\r\n            h = this.height;\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\r\n        markup.push(\r\n          '<rect ', this.getSvgId(),\r\n          'x=\"', x, '\" y=\"', y,\r\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\r\n          '\" width=\"', this.width, '\" height=\"', this.height,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(),\r\n          this.getSvgTransformMatrix(), '\"',\r\n          this.addPaintOrder(),\r\n          '/>\\n');\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\r\n     * @static\r\n     * @memberOf fabric.Rect\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\r\n     */\r\n    fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Rect} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Rect\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Rect.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n      options = options || { };\r\n\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\r\n\r\n      parsedAttributes.left = parsedAttributes.left || 0;\r\n      parsedAttributes.top  = parsedAttributes.top  || 0;\r\n      var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\r\n      rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\r\n      callback(rect);\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns {@link fabric.Rect} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Rect\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\r\n     */\r\n    fabric.Rect.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Rect', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        min = fabric.util.array.min,\r\n        max = fabric.util.array.max,\r\n        toFixed = fabric.util.toFixed;\r\n\r\n    if (fabric.Polyline) {\r\n      fabric.warn('fabric.Polyline is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Polyline class\r\n     * @class fabric.Polyline\r\n     * @extends fabric.Object\r\n     * @see {@link fabric.Polyline#initialize} for constructor definition\r\n     */\r\n    fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'polyline',\r\n\r\n      /**\r\n       * Points array\r\n       * @type Array\r\n       * @default\r\n       */\r\n      points: null,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Array} points Array of points (where each point is an object with x and y)\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Polyline} thisArg\r\n       * @example\r\n       * var poly = new fabric.Polyline([\r\n       *     { x: 10, y: 10 },\r\n       *     { x: 50, y: 30 },\r\n       *     { x: 40, y: 70 },\r\n       *     { x: 60, y: 50 },\r\n       *     { x: 100, y: 150 },\r\n       *     { x: 40, y: 100 }\r\n       *   ], {\r\n       *   stroke: 'red',\r\n       *   left: 100,\r\n       *   top: 100\r\n       * });\r\n       */\r\n      initialize: function(points, options) {\r\n        options = options || {};\r\n        this.points = points || [];\r\n        this.callSuper('initialize', options);\r\n        var calcDim = this._calcDimensions();\r\n        if (typeof options.left === 'undefined') {\r\n          this.left = calcDim.left;\r\n        }\r\n        if (typeof options.top === 'undefined') {\r\n          this.top = calcDim.top;\r\n        }\r\n        this.width = calcDim.width;\r\n        this.height = calcDim.height;\r\n        this.pathOffset = {\r\n          x: calcDim.left + this.width / 2,\r\n          y: calcDim.top + this.height / 2\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Calculate the polygon min and max point from points array,\r\n       * returning an object with left, top, widht, height to measure the\r\n       * polygon size\r\n       * @return {Object} object.left X coordinate of the polygon leftmost point\r\n       * @return {Object} object.top Y coordinate of the polygon topmost point\r\n       * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\r\n       * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\r\n       * @private\r\n       */\r\n      _calcDimensions: function() {\r\n\r\n        var points = this.points,\r\n            minX = min(points, 'x') || 0,\r\n            minY = min(points, 'y') || 0,\r\n            maxX = max(points, 'x') || 0,\r\n            maxY = max(points, 'y') || 0,\r\n            width = (maxX - minX),\r\n            height = (maxY - minY);\r\n\r\n        return {\r\n          left: minX,\r\n          top: minY,\r\n          width: width,\r\n          height: height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return extend(this.callSuper('toObject', propertiesToInclude), {\r\n          points: this.points.concat()\r\n        });\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\r\n            markup = this._createBaseSVGMarkup(),\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n\r\n        for (var i = 0, len = this.points.length; i < len; i++) {\r\n          points.push(\r\n            toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\r\n            toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\r\n          );\r\n        }\r\n        markup.push(\r\n          '<', this.type, ' ', this.getSvgId(),\r\n          'points=\"', points.join(''),\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(),\r\n          ' ', this.getSvgTransformMatrix(), '\"',\r\n          this.addPaintOrder(),\r\n          '/>\\n'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      commonRender: function(ctx) {\r\n        var point, len = this.points.length,\r\n            x = this.pathOffset.x,\r\n            y = this.pathOffset.y;\r\n\r\n        if (!len || isNaN(this.points[len - 1].y)) {\r\n          // do not draw if no points or odd points\r\n          // NaN comes from parseFloat of a empty string in parser\r\n          return false;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\r\n        for (var i = 0; i < len; i++) {\r\n          point = this.points[i];\r\n          ctx.lineTo(point.x - x, point.y - y);\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        if (!this.commonRender(ctx)) {\r\n          return;\r\n        }\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var p1, p2;\r\n\r\n        ctx.beginPath();\r\n        for (var i = 0, len = this.points.length; i < len; i++) {\r\n          p1 = this.points[i];\r\n          p2 = this.points[i + 1] || p1;\r\n          fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns complexity of an instance\r\n       * @return {Number} complexity of this instance\r\n       */\r\n      complexity: function() {\r\n        return this.get('points').length;\r\n      }\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Polyline\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\r\n     */\r\n    fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\r\n\r\n    /**\r\n     * Returns fabric.Polyline instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Polyline\r\n     * @param {SVGElement} element Element to parser\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Polyline.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n      options || (options = { });\r\n\r\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\r\n          parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\r\n\r\n      callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Polyline instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Polyline\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n     */\r\n    fabric.Polyline.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Polyline', object, callback, 'points');\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend;\r\n\r\n    if (fabric.Polygon) {\r\n      fabric.warn('fabric.Polygon is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Polygon class\r\n     * @class fabric.Polygon\r\n     * @extends fabric.Polyline\r\n     * @see {@link fabric.Polygon#initialize} for constructor definition\r\n     */\r\n    fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'polygon',\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        if (!this.commonRender(ctx)) {\r\n          return;\r\n        }\r\n        ctx.closePath();\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        this.callSuper('_renderDashedStroke', ctx);\r\n        ctx.closePath();\r\n      },\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\r\n     * @static\r\n     * @memberOf fabric.Polygon\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\r\n     */\r\n    fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\r\n\r\n    /**\r\n     * Returns {@link fabric.Polygon} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Polygon\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Polygon.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n\r\n      options || (options = { });\r\n\r\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\r\n          parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\r\n\r\n      callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Polygon instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Polygon\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n     */\r\n    fabric.Polygon.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Polygon', object, callback, 'points');\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        min = fabric.util.array.min,\r\n        max = fabric.util.array.max,\r\n        extend = fabric.util.object.extend,\r\n        _toString = Object.prototype.toString,\r\n        drawArc = fabric.util.drawArc,\r\n        commandLengths = {\r\n          m: 2,\r\n          l: 2,\r\n          h: 1,\r\n          v: 1,\r\n          c: 6,\r\n          s: 4,\r\n          q: 4,\r\n          t: 2,\r\n          a: 7\r\n        },\r\n        repeatedCommands = {\r\n          m: 'l',\r\n          M: 'L'\r\n        };\r\n\r\n    if (fabric.Path) {\r\n      fabric.warn('fabric.Path is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Path class\r\n     * @class fabric.Path\r\n     * @extends fabric.Object\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\r\n     * @see {@link fabric.Path#initialize} for constructor definition\r\n     */\r\n    fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'path',\r\n\r\n      /**\r\n       * Array of path points\r\n       * @type Array\r\n       * @default\r\n       */\r\n      path: null,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\r\n\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Path} thisArg\r\n       */\r\n      initialize: function(path, options) {\r\n        options = options || { };\r\n        this.callSuper('initialize', options);\r\n\r\n        if (!path) {\r\n          path = [];\r\n        }\r\n\r\n        var fromArray = _toString.call(path) === '[object Array]';\r\n\r\n        this.path = fromArray\r\n          ? path\r\n          // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\r\n          : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\r\n\r\n        if (!this.path) {\r\n          return;\r\n        }\r\n\r\n        if (!fromArray) {\r\n          this.path = this._parsePath();\r\n        }\r\n\r\n        this._setPositionDimensions(options);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} options Options object\r\n       */\r\n      _setPositionDimensions: function(options) {\r\n        var calcDim = this._parseDimensions();\r\n\r\n        this.width = calcDim.width;\r\n        this.height = calcDim.height;\r\n\r\n        if (typeof options.left === 'undefined') {\r\n          this.left = calcDim.left;\r\n        }\r\n\r\n        if (typeof options.top === 'undefined') {\r\n          this.top = calcDim.top;\r\n        }\r\n\r\n        this.pathOffset = this.pathOffset || {\r\n          x: calcDim.left + this.width / 2,\r\n          y: calcDim.top + this.height / 2\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render path on\r\n       */\r\n      _renderPathCommands: function(ctx) {\r\n        var current, // current instruction\r\n            previous = null,\r\n            subpathStartX = 0,\r\n            subpathStartY = 0,\r\n            x = 0, // current x\r\n            y = 0, // current y\r\n            controlX = 0, // current control point x\r\n            controlY = 0, // current control point y\r\n            tempX,\r\n            tempY,\r\n            l = -this.pathOffset.x,\r\n            t = -this.pathOffset.y;\r\n\r\n        ctx.beginPath();\r\n\r\n        for (var i = 0, len = this.path.length; i < len; ++i) {\r\n\r\n          current = this.path[i];\r\n\r\n          switch (current[0]) { // first letter\r\n\r\n            case 'l': // lineto, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'L': // lineto, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'h': // horizontal lineto, relative\r\n              x += current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'H': // horizontal lineto, absolute\r\n              x = current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'v': // vertical lineto, relative\r\n              y += current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'V': // verical lineto, absolute\r\n              y = current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'm': // moveTo, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              ctx.moveTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'M': // moveTo, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              ctx.moveTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'c': // bezierCurveTo, relative\r\n              tempX = x + current[5];\r\n              tempY = y + current[6];\r\n              controlX = x + current[3];\r\n              controlY = y + current[4];\r\n              ctx.bezierCurveTo(\r\n                x + current[1] + l, // x1\r\n                y + current[2] + t, // y1\r\n                controlX + l, // x2\r\n                controlY + t, // y2\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'C': // bezierCurveTo, absolute\r\n              x = current[5];\r\n              y = current[6];\r\n              controlX = current[3];\r\n              controlY = current[4];\r\n              ctx.bezierCurveTo(\r\n                current[1] + l,\r\n                current[2] + t,\r\n                controlX + l,\r\n                controlY + t,\r\n                x + l,\r\n                y + t\r\n              );\r\n              break;\r\n\r\n            case 's': // shorthand cubic bezierCurveTo, relative\r\n\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              ctx.bezierCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                x + current[1] + l,\r\n                y + current[2] + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'S': // shorthand cubic bezierCurveTo, absolute\r\n              tempX = current[3];\r\n              tempY = current[4];\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              ctx.bezierCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                current[1] + l,\r\n                current[2] + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n\r\n              break;\r\n\r\n            case 'q': // quadraticCurveTo, relative\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n\r\n              ctx.quadraticCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'Q': // quadraticCurveTo, absolute\r\n              tempX = current[3];\r\n              tempY = current[4];\r\n\r\n              ctx.quadraticCurveTo(\r\n                current[1] + l,\r\n                current[2] + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n              break;\r\n\r\n            case 't': // shorthand quadraticCurveTo, relative\r\n\r\n              // transform to absolute x,y\r\n              tempX = x + current[1];\r\n              tempY = y + current[2];\r\n\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              ctx.quadraticCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n\r\n              break;\r\n\r\n            case 'T':\r\n              tempX = current[1];\r\n              tempY = current[2];\r\n\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              ctx.quadraticCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'a':\r\n              // TODO: optimize this\r\n              drawArc(ctx, x + l, y + t, [\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6] + x + l,\r\n                current[7] + y + t\r\n              ]);\r\n              x += current[6];\r\n              y += current[7];\r\n              break;\r\n\r\n            case 'A':\r\n              // TODO: optimize this\r\n              drawArc(ctx, x + l, y + t, [\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6] + l,\r\n                current[7] + t\r\n              ]);\r\n              x = current[6];\r\n              y = current[7];\r\n              break;\r\n\r\n            case 'z':\r\n            case 'Z':\r\n              x = subpathStartX;\r\n              y = subpathStartY;\r\n              ctx.closePath();\r\n              break;\r\n          }\r\n          previous = current;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render path on\r\n       */\r\n      _render: function(ctx) {\r\n        this._renderPathCommands(ctx);\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of an instance\r\n       * @return {String} string representation of an instance\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Path (' + this.complexity() +\r\n          '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var o = extend(this.callSuper('toObject', propertiesToInclude), {\r\n          path: this.path.map(function(item) { return item.slice(); }),\r\n          top: this.top,\r\n          left: this.left,\r\n        });\r\n        return o;\r\n      },\r\n\r\n      /**\r\n       * Returns dataless object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toDatalessObject: function(propertiesToInclude) {\r\n        var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\r\n        if (o.sourcePath) {\r\n          delete o.path;\r\n        }\r\n        return o;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var chunks = [],\r\n            markup = this._createBaseSVGMarkup(), addTransform = '';\r\n\r\n        for (var i = 0, len = this.path.length; i < len; i++) {\r\n          chunks.push(this.path[i].join(' '));\r\n        }\r\n        var path = chunks.join(' ');\r\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\r\n        markup.push(\r\n          '<path ', this.getSvgId(),\r\n          'd=\"', path,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(), addTransform,\r\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\r\n          this.addPaintOrder(),\r\n          '/>\\n'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns number representation of an instance complexity\r\n       * @return {Number} complexity of this instance\r\n       */\r\n      complexity: function() {\r\n        return this.path.length;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _parsePath: function() {\r\n        var result = [],\r\n            coords = [],\r\n            currentPath,\r\n            parsed,\r\n            re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\r\n            match,\r\n            coordsStr;\r\n\r\n        for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\r\n          currentPath = this.path[i];\r\n\r\n          coordsStr = currentPath.slice(1).trim();\r\n          coords.length = 0;\r\n\r\n          while ((match = re.exec(coordsStr))) {\r\n            coords.push(match[0]);\r\n          }\r\n\r\n          coordsParsed = [currentPath.charAt(0)];\r\n\r\n          for (var j = 0, jlen = coords.length; j < jlen; j++) {\r\n            parsed = parseFloat(coords[j]);\r\n            if (!isNaN(parsed)) {\r\n              coordsParsed.push(parsed);\r\n            }\r\n          }\r\n\r\n          var command = coordsParsed[0],\r\n              commandLength = commandLengths[command.toLowerCase()],\r\n              repeatedCommand = repeatedCommands[command] || command;\r\n\r\n          if (coordsParsed.length - 1 > commandLength) {\r\n            for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\r\n              result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\r\n              command = repeatedCommand;\r\n            }\r\n          }\r\n          else {\r\n            result.push(coordsParsed);\r\n          }\r\n        }\r\n\r\n        return result;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _parseDimensions: function() {\r\n\r\n        var aX = [],\r\n            aY = [],\r\n            current, // current instruction\r\n            previous = null,\r\n            subpathStartX = 0,\r\n            subpathStartY = 0,\r\n            x = 0, // current x\r\n            y = 0, // current y\r\n            controlX = 0, // current control point x\r\n            controlY = 0, // current control point y\r\n            tempX,\r\n            tempY,\r\n            bounds;\r\n\r\n        for (var i = 0, len = this.path.length; i < len; ++i) {\r\n\r\n          current = this.path[i];\r\n\r\n          switch (current[0]) { // first letter\r\n\r\n            case 'l': // lineto, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'L': // lineto, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'h': // horizontal lineto, relative\r\n              x += current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'H': // horizontal lineto, absolute\r\n              x = current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'v': // vertical lineto, relative\r\n              y += current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'V': // verical lineto, absolute\r\n              y = current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'm': // moveTo, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'M': // moveTo, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'c': // bezierCurveTo, relative\r\n              tempX = x + current[5];\r\n              tempY = y + current[6];\r\n              controlX = x + current[3];\r\n              controlY = y + current[4];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                x + current[1], // x1\r\n                y + current[2], // y1\r\n                controlX, // x2\r\n                controlY, // y2\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'C': // bezierCurveTo, absolute\r\n              controlX = current[3];\r\n              controlY = current[4];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                current[1],\r\n                current[2],\r\n                controlX,\r\n                controlY,\r\n                current[5],\r\n                current[6]\r\n              );\r\n              x = current[5];\r\n              y = current[6];\r\n              break;\r\n\r\n            case 's': // shorthand cubic bezierCurveTo, relative\r\n\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                x + current[1],\r\n                y + current[2],\r\n                tempX,\r\n                tempY\r\n              );\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'S': // shorthand cubic bezierCurveTo, absolute\r\n              tempX = current[3];\r\n              tempY = current[4];\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                current[1],\r\n                current[2],\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n              break;\r\n\r\n            case 'q': // quadraticCurveTo, relative\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'Q': // quadraticCurveTo, absolute\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                current[3],\r\n                current[4]\r\n              );\r\n              x = current[3];\r\n              y = current[4];\r\n              break;\r\n\r\n            case 't': // shorthand quadraticCurveTo, relative\r\n              // transform to absolute x,y\r\n              tempX = x + current[1];\r\n              tempY = y + current[2];\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n\r\n              break;\r\n\r\n            case 'T':\r\n              tempX = current[1];\r\n              tempY = current[2];\r\n\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'a':\r\n              // TODO: optimize this\r\n              bounds = fabric.util.getBoundsOfArc(x, y,\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6] + x,\r\n                current[7] + y\r\n              );\r\n              x += current[6];\r\n              y += current[7];\r\n              break;\r\n\r\n            case 'A':\r\n              // TODO: optimize this\r\n              bounds = fabric.util.getBoundsOfArc(x, y,\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6],\r\n                current[7]\r\n              );\r\n              x = current[6];\r\n              y = current[7];\r\n              break;\r\n\r\n            case 'z':\r\n            case 'Z':\r\n              x = subpathStartX;\r\n              y = subpathStartY;\r\n              break;\r\n          }\r\n          previous = current;\r\n          bounds.forEach(function (point) {\r\n            aX.push(point.x);\r\n            aY.push(point.y);\r\n          });\r\n          aX.push(x);\r\n          aY.push(y);\r\n        }\r\n\r\n        var minX = min(aX) || 0,\r\n            minY = min(aY) || 0,\r\n            maxX = max(aX) || 0,\r\n            maxY = max(aY) || 0,\r\n            deltaX = maxX - minX,\r\n            deltaY = maxY - minY,\r\n\r\n            o = {\r\n              left: minX,\r\n              top: minY,\r\n              width: deltaX,\r\n              height: deltaY\r\n            };\r\n\r\n        return o;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Creates an instance of fabric.Path from an object\r\n     * @static\r\n     * @memberOf fabric.Path\r\n     * @param {Object} object\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n     */\r\n    fabric.Path.fromObject = function(object, callback) {\r\n      if (typeof object.sourcePath === 'string') {\r\n        var pathUrl = object.sourcePath;\r\n        fabric.loadSVGFromURL(pathUrl, function (elements) {\r\n          var path = elements[0];\r\n          path.setOptions(object);\r\n          callback && callback(path);\r\n        });\r\n      }\r\n      else {\r\n        fabric.Object._fromObject('Path', object, callback, 'path');\r\n      }\r\n    };\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\r\n     * @static\r\n     * @memberOf fabric.Path\r\n     * @see http://www.w3.org/TR/SVG/paths.html#PathElement\r\n     */\r\n    fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\r\n\r\n    /**\r\n     * Creates an instance of fabric.Path from an SVG <path> element\r\n     * @static\r\n     * @memberOf fabric.Path\r\n     * @param {SVGElement} element to parse\r\n     * @param {Function} callback Callback to invoke when an fabric.Path instance is created\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} [callback] Options callback invoked after parsing is finished\r\n     */\r\n    fabric.Path.fromElement = function(element, callback, options) {\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\r\n      callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        min = fabric.util.array.min,\r\n        max = fabric.util.array.max;\r\n\r\n    if (fabric.Group) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Group class\r\n     * @class fabric.Group\r\n     * @extends fabric.Object\r\n     * @mixes fabric.Collection\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\r\n     * @see {@link fabric.Group#initialize} for constructor definition\r\n     */\r\n    fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'group',\r\n\r\n      /**\r\n       * Width of stroke\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeWidth: 0,\r\n\r\n      /**\r\n       * Indicates if click events should also check for subtargets\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      subTargetCheck: false,\r\n\r\n      /**\r\n       * Groups are container, do not render anything on theyr own, ence no cache properties\r\n       * @type Array\r\n       * @default\r\n       */\r\n      cacheProperties: [],\r\n\r\n      /**\r\n       * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\r\n       * available setting this boolean to true.\r\n       * @type Boolean\r\n       * @since 2.0.0\r\n       * @default\r\n       */\r\n      useSetOnGroup: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} objects Group objects\r\n       * @param {Object} [options] Options object\r\n       * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(objects, options, isAlreadyGrouped) {\r\n        options = options || {};\r\n        this._objects = [];\r\n        // if objects enclosed in a group have been grouped already,\r\n        // we cannot change properties of objects.\r\n        // Thus we need to set options to group without objects,\r\n        isAlreadyGrouped && this.callSuper('initialize', options);\r\n        this._objects = objects || [];\r\n        for (var i = this._objects.length; i--; ) {\r\n          this._objects[i].group = this;\r\n        }\r\n\r\n        if (!isAlreadyGrouped) {\r\n          var center = options && options.centerPoint;\r\n          // we want to set origins before calculating the bounding box.\r\n          // so that the topleft can be set with that in mind.\r\n          // if specific top and left are passed, are overwritten later\r\n          // with the callSuper('initialize', options)\r\n          if (options.originX !== undefined) {\r\n            this.originX = options.originX;\r\n          }\r\n          if (options.originY !== undefined) {\r\n            this.originY = options.originY;\r\n          }\r\n          // if coming from svg i do not want to calc bounds.\r\n          // i assume width and height are passed along options\r\n          center || this._calcBounds();\r\n          this._updateObjectsCoords(center);\r\n          delete options.centerPoint;\r\n          this.callSuper('initialize', options);\r\n        }\r\n        else {\r\n          this._updateObjectsACoords();\r\n        }\r\n\r\n        this.setCoords();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\r\n       */\r\n      _updateObjectsACoords: function() {\r\n        var ignoreZoom = true, skipAbsolute = true;\r\n        for (var i = this._objects.length; i--; ){\r\n          this._objects[i].setCoords(ignoreZoom, skipAbsolute);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\r\n       */\r\n      _updateObjectsCoords: function(center) {\r\n        var center = center || this.getCenterPoint();\r\n        for (var i = this._objects.length; i--; ){\r\n          this._updateObjectCoords(this._objects[i], center);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} object\r\n       * @param {fabric.Point} center, current center of group.\r\n       */\r\n      _updateObjectCoords: function(object, center) {\r\n        var objectLeft = object.left,\r\n            objectTop = object.top,\r\n            ignoreZoom = true, skipAbsolute = true;\r\n\r\n        object.set({\r\n          left: objectLeft - center.x,\r\n          top: objectTop - center.y\r\n        });\r\n        object.group = this;\r\n        object.setCoords(ignoreZoom, skipAbsolute);\r\n      },\r\n\r\n      /**\r\n       * Returns string represenation of a group\r\n       * @return {String}\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Group: (' + this.complexity() + ')>';\r\n      },\r\n\r\n      /**\r\n       * Adds an object to a group; Then recalculates group's dimension, position.\r\n       * @param {Object} object\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      addWithUpdate: function(object) {\r\n        this._restoreObjectsState();\r\n        fabric.util.resetObjectTransform(this);\r\n        if (object) {\r\n          this._objects.push(object);\r\n          object.group = this;\r\n          object._set('canvas', this.canvas);\r\n        }\r\n        this._calcBounds();\r\n        this._updateObjectsCoords();\r\n        this.setCoords();\r\n        this.dirty = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Removes an object from a group; Then recalculates group's dimension, position.\r\n       * @param {Object} object\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      removeWithUpdate: function(object) {\r\n        this._restoreObjectsState();\r\n        fabric.util.resetObjectTransform(this);\r\n\r\n        this.remove(object);\r\n        this._calcBounds();\r\n        this._updateObjectsCoords();\r\n        this.setCoords();\r\n        this.dirty = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onObjectAdded: function(object) {\r\n        this.dirty = true;\r\n        object.group = this;\r\n        object._set('canvas', this.canvas);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onObjectRemoved: function(object) {\r\n        this.dirty = true;\r\n        delete object.group;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _set: function(key, value) {\r\n        var i = this._objects.length;\r\n        if (this.useSetOnGroup) {\r\n          while (i--) {\r\n            this._objects[i].setOnGroup(key, value);\r\n          }\r\n        }\r\n        if (key === 'canvas') {\r\n          while (i--) {\r\n            this._objects[i]._set(key, value);\r\n          }\r\n        }\r\n        fabric.Object.prototype._set.call(this, key, value);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var objsToObject = this._objects.map(function(obj) {\r\n          var originalDefaults = obj.includeDefaultValues;\r\n          obj.includeDefaultValues = obj.group.includeDefaultValues;\r\n          var _obj = obj.toObject(propertiesToInclude);\r\n          obj.includeDefaultValues = originalDefaults;\r\n          return _obj;\r\n        });\r\n        var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\r\n        obj.objects = objsToObject;\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance, in dataless mode.\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toDatalessObject: function(propertiesToInclude) {\r\n        var objsToObject, sourcePath = this.sourcePath;\r\n        if (sourcePath) {\r\n          objsToObject = sourcePath;\r\n        }\r\n        else {\r\n          objsToObject = this._objects.map(function(obj) {\r\n            var originalDefaults = obj.includeDefaultValues;\r\n            obj.includeDefaultValues = obj.group.includeDefaultValues;\r\n            var _obj = obj.toDatalessObject(propertiesToInclude);\r\n            obj.includeDefaultValues = originalDefaults;\r\n            return _obj;\r\n          });\r\n        }\r\n        var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\r\n        obj.objects = objsToObject;\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Renders instance on a given context\r\n       * @param {CanvasRenderingContext2D} ctx context to render instance on\r\n       */\r\n      render: function(ctx) {\r\n        this._transformDone = true;\r\n        this.callSuper('render', ctx);\r\n        this._transformDone = false;\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * objectCaching is a global flag, wins over everything\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group outside is cached.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\r\n        this.ownCaching = ownCache;\r\n        if (ownCache) {\r\n          for (var i = 0, len = this._objects.length; i < len; i++) {\r\n            if (this._objects[i].willDrawShadow()) {\r\n              this.ownCaching = false;\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return ownCache;\r\n      },\r\n\r\n      /**\r\n       * Check if this object or a child object will cast a shadow\r\n       * @return {Boolean}\r\n       */\r\n      willDrawShadow: function() {\r\n        if (this.shadow) {\r\n          return fabric.Object.prototype.willDrawShadow.call(this);\r\n        }\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          if (this._objects[i].willDrawShadow()) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Check if this group or its parent group are caching, recursively up\r\n       * @return {Boolean}\r\n       */\r\n      isOnACache: function() {\r\n        return this.ownCaching || (this.group && this.group.isOnACache());\r\n      },\r\n\r\n      /**\r\n       * Execute the drawing operation for an object on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawObject: function(ctx) {\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          this._objects[i].render(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Check if cache is dirty\r\n       */\r\n      isCacheDirty: function() {\r\n        if (this.callSuper('isCacheDirty')) {\r\n          return true;\r\n        }\r\n        if (!this.statefullCache) {\r\n          return false;\r\n        }\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          if (this._objects[i].isCacheDirty(true)) {\r\n            if (this._cacheCanvas) {\r\n              // if this group has not a cache canvas there is nothing to clean\r\n              var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\r\n              this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\r\n            }\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Retores original state of each of group objects (original state is that which was before group was created).\r\n       * @private\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      _restoreObjectsState: function() {\r\n        this._objects.forEach(this._restoreObjectState, this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Realises the transform from this group onto the supplied object\r\n       * i.e. it tells you what would happen if the supplied object was in\r\n       * the group, and then the group was destroyed. It mutates the supplied\r\n       * object.\r\n       * @param {fabric.Object} object\r\n       * @return {fabric.Object} transformedObject\r\n       */\r\n      realizeTransform: function(object) {\r\n        var matrix = object.calcTransformMatrix(),\r\n            options = fabric.util.qrDecompose(matrix),\r\n            center = new fabric.Point(options.translateX, options.translateY);\r\n        object.flipX = false;\r\n        object.flipY = false;\r\n        object.set('scaleX', options.scaleX);\r\n        object.set('scaleY', options.scaleY);\r\n        object.skewX = options.skewX;\r\n        object.skewY = options.skewY;\r\n        object.angle = options.angle;\r\n        object.setPositionByOrigin(center, 'center', 'center');\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Restores original state of a specified object in group\r\n       * @private\r\n       * @param {fabric.Object} object\r\n       * @return {fabric.Group} thisArg\r\n       */\r\n      _restoreObjectState: function(object) {\r\n        this.realizeTransform(object);\r\n        object.setCoords();\r\n        delete object.group;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Destroys a group (restoring state of its objects)\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      destroy: function() {\r\n        // when group is destroyed objects needs to get a repaint to be eventually\r\n        // displayed on canvas.\r\n        this._objects.forEach(function(object) {\r\n          object.set('dirty', true);\r\n        });\r\n        return this._restoreObjectsState();\r\n      },\r\n\r\n      /**\r\n       * make a group an active selection, remove the group from canvas\r\n       * the group has to be on canvas for this to work.\r\n       * @return {fabric.ActiveSelection} thisArg\r\n       * @chainable\r\n       */\r\n      toActiveSelection: function() {\r\n        if (!this.canvas) {\r\n          return;\r\n        }\r\n        var objects = this._objects, canvas = this.canvas;\r\n        this._objects = [];\r\n        var options = this.toObject();\r\n        delete options.objects;\r\n        var activeSelection = new fabric.ActiveSelection([]);\r\n        activeSelection.set(options);\r\n        activeSelection.type = 'activeSelection';\r\n        canvas.remove(this);\r\n        objects.forEach(function(object) {\r\n          object.group = activeSelection;\r\n          object.dirty = true;\r\n          canvas.add(object);\r\n        });\r\n        activeSelection.canvas = canvas;\r\n        activeSelection._objects = objects;\r\n        canvas._activeObject = activeSelection;\r\n        activeSelection.setCoords();\r\n        return activeSelection;\r\n      },\r\n\r\n      /**\r\n       * Destroys a group (restoring state of its objects)\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      ungroupOnCanvas: function() {\r\n        return this._restoreObjectsState();\r\n      },\r\n\r\n      /**\r\n       * Sets coordinates of all objects inside group\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      setObjectsCoords: function() {\r\n        var ignoreZoom = true, skipAbsolute = true;\r\n        this.forEachObject(function(object) {\r\n          object.setCoords(ignoreZoom, skipAbsolute);\r\n        });\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _calcBounds: function(onlyWidthHeight) {\r\n        var aX = [],\r\n            aY = [],\r\n            o, prop,\r\n            props = ['tr', 'br', 'bl', 'tl'],\r\n            i = 0, iLen = this._objects.length,\r\n            j, jLen = props.length,\r\n            ignoreZoom = true;\r\n\r\n        for ( ; i < iLen; ++i) {\r\n          o = this._objects[i];\r\n          o.setCoords(ignoreZoom);\r\n          for (j = 0; j < jLen; j++) {\r\n            prop = props[j];\r\n            aX.push(o.oCoords[prop].x);\r\n            aY.push(o.oCoords[prop].y);\r\n          }\r\n        }\r\n\r\n        this._getBounds(aX, aY, onlyWidthHeight);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getBounds: function(aX, aY, onlyWidthHeight) {\r\n        var minXY = new fabric.Point(min(aX), min(aY)),\r\n            maxXY = new fabric.Point(max(aX), max(aY)),\r\n            top = minXY.y || 0, left = minXY.x || 0,\r\n            width = (maxXY.x - minXY.x) || 0,\r\n            height = (maxXY.y - minXY.y) || 0;\r\n        this.width = width;\r\n        this.height = height;\r\n        if (!onlyWidthHeight) {\r\n          // the bounding box always finds the topleft most corner.\r\n          // whatever is the group origin, we set up here the left/top position.\r\n          this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\r\n        }\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup();\r\n        markup.push(\r\n          '<g ', this.getSvgId(), 'transform=\"',\r\n          /* avoiding styles intentionally */\r\n          this.getSvgTransform(),\r\n          this.getSvgTransformMatrix(),\r\n          '\" style=\"',\r\n          this.getSvgFilter(),\r\n          '\">\\n'\r\n        );\r\n\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          markup.push('\\t', this._objects[i].toSVG(reviver));\r\n        }\r\n\r\n        markup.push('</g>\\n');\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /**\r\n     * Returns {@link fabric.Group} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Group\r\n     * @param {Object} object Object to create a group from\r\n     * @param {Function} [callback] Callback to invoke when an group instance is created\r\n     */\r\n    fabric.Group.fromObject = function(object, callback) {\r\n      fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\r\n        var options = fabric.util.object.clone(object, true);\r\n        delete options.objects;\r\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\r\n      });\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.ActiveSelection) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Group class\r\n     * @class fabric.ActiveSelection\r\n     * @extends fabric.Group\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\r\n     * @see {@link fabric.ActiveSelection#initialize} for constructor definition\r\n     */\r\n    fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'activeSelection',\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} objects ActiveSelection objects\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(objects, options) {\r\n        options = options || {};\r\n        this._objects = objects || [];\r\n        for (var i = this._objects.length; i--; ) {\r\n          this._objects[i].group = this;\r\n        }\r\n\r\n        if (options.originX) {\r\n          this.originX = options.originX;\r\n        }\r\n        if (options.originY) {\r\n          this.originY = options.originY;\r\n        }\r\n        this._calcBounds();\r\n        this._updateObjectsCoords();\r\n        fabric.Object.prototype.initialize.call(this, options);\r\n        this.setCoords();\r\n      },\r\n\r\n      /**\r\n       * Change te activeSelection to a normal group,\r\n       * High level function that automatically adds it to canvas as\r\n       * active object. no events fired.\r\n       * @since 2.0.0\r\n       * @return {fabric.Group}\r\n       */\r\n      toGroup: function() {\r\n        var objects = this._objects.concat();\r\n        this._objects = [];\r\n        var options = fabric.Object.prototype.toObject.call(this);\r\n        var newGroup = new fabric.Group([]);\r\n        delete options.type;\r\n        newGroup.set(options);\r\n        objects.forEach(function(object) {\r\n          object.canvas.remove(object);\r\n          object.group = newGroup;\r\n        });\r\n        newGroup._objects = objects;\r\n        if (!this.canvas) {\r\n          return newGroup;\r\n        }\r\n        var canvas = this.canvas;\r\n        canvas.add(newGroup);\r\n        canvas._activeObject = newGroup;\r\n        newGroup.setCoords();\r\n        return newGroup;\r\n      },\r\n\r\n      /**\r\n       * If returns true, deselection is cancelled.\r\n       * @since 2.0.0\r\n       * @return {Boolean} [cancel]\r\n       */\r\n      onDeselect: function() {\r\n        this.destroy();\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of a group\r\n       * @return {String}\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * objectCaching is a global flag, wins over everything\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group outside is cached.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Check if this group or its parent group are caching, recursively up\r\n       * @return {Boolean}\r\n       */\r\n      isOnACache: function() {\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Renders controls and borders for the object\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} [styleOverride] properties to override the object style\r\n       * @param {Object} [childrenOverride] properties to override the children overrides\r\n       */\r\n      _renderControls: function(ctx, styleOverride, childrenOverride) {\r\n        ctx.save();\r\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n        this.callSuper('_renderControls', ctx, styleOverride);\r\n        childrenOverride = childrenOverride || { };\r\n        if (typeof childrenOverride.hasControls === 'undefined') {\r\n          childrenOverride.hasControls = false;\r\n        }\r\n        if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\r\n          childrenOverride.hasRotatingPoint = false;\r\n        }\r\n        childrenOverride.forActiveSelection = true;\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          this._objects[i]._renderControls(ctx, childrenOverride);\r\n        }\r\n        ctx.restore();\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns {@link fabric.ActiveSelection} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.ActiveSelection\r\n     * @param {Object} object Object to create a group from\r\n     * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\r\n     */\r\n    fabric.ActiveSelection.fromObject = function(object, callback) {\r\n      fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\r\n        delete object.objects;\r\n        callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\r\n      });\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var extend = fabric.util.object.extend;\r\n\r\n    //if (!global.fabric) {\r\n    //  global.fabric = { };\r\n    //}\r\n\r\n    //if (global.fabric.Image) {\r\n    if (fabric.Image) {\r\n      fabric.warn('fabric.Image is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Image class\r\n     * @class fabric.Image\r\n     * @extends fabric.Object\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\r\n     * @see {@link fabric.Image#initialize} for constructor definition\r\n     */\r\n    fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'image',\r\n\r\n      /**\r\n       * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\r\n       * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\r\n       * @type String\r\n       * @default\r\n       */\r\n      crossOrigin: '',\r\n\r\n      /**\r\n       * Width of a stroke.\r\n       * For image quality a stroke multiple of 2 gives better results.\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeWidth: 0,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaleX to detect\r\n       * if the Image got resized after the last Render\r\n       * @type Number\r\n       */\r\n      _lastScaleX: 1,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaleY to detect\r\n       * if the Image got resized after the last Render\r\n       * @type Number\r\n       */\r\n      _lastScaleY: 1,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaling applied by the apply filter chain\r\n       * @type Number\r\n       */\r\n      _filterScalingX: 1,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaling applied by the apply filter chain\r\n       * @type Number\r\n       */\r\n      _filterScalingY: 1,\r\n\r\n      /**\r\n       * minimum scale factor under which any resizeFilter is triggered to resize the image\r\n       * 0 will disable the automatic resize. 1 will trigger automatically always.\r\n       * number bigger than 1 are not implemented yet.\r\n       * @type Number\r\n       */\r\n      minimumScaleTrigger: 0.5,\r\n\r\n      /**\r\n       * List of properties to consider when checking if\r\n       * state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\r\n\r\n      /**\r\n       * When `true`, object is cached on an additional canvas.\r\n       * default to false for images\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      objectCaching: false,\r\n\r\n      /**\r\n       * key used to retrieve the texture representing this image\r\n       * since 2.0.0\r\n       * @type String\r\n       * @default\r\n       */\r\n      cacheKey: '',\r\n\r\n      /**\r\n       * Image crop in pixels from original image size.\r\n       * since 2.0.0\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cropX: 0,\r\n\r\n      /**\r\n       * Image crop in pixels from original image size.\r\n       * since 2.0.0\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cropY: 0,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {HTMLImageElement | String} element Image element\r\n       * @param {Object} [options] Options object\r\n       * @param {function} [callback] callback function to call after eventual filters applied.\r\n       * @return {fabric.Image} thisArg\r\n       */\r\n      initialize: function(element, options) {\r\n        options || (options = { });\r\n        this.filters = [];\r\n        this.cacheKey = 'texture' + fabric.Object.__uid++;\r\n        this.callSuper('initialize', options);\r\n        this._initElement(element, options);\r\n      },\r\n\r\n      /**\r\n       * Returns image element which this instance if based on\r\n       * @return {HTMLImageElement} Image element\r\n       */\r\n      getElement: function() {\r\n        return this._element || {};\r\n      },\r\n\r\n      /**\r\n       * Sets image element for this instance to a specified one.\r\n       * If filters defined they are applied to new image.\r\n       * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\r\n       * @param {HTMLImageElement} element\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Image} thisArg\r\n       * @chainable\r\n       */\r\n      setElement: function(element, options) {\r\n        this.removeTexture(this.cacheKey);\r\n        this.removeTexture(this.cacheKey + '_filtered');\r\n        this._element = element;\r\n        this._originalElement = element;\r\n        this._initConfig(options);\r\n        if (this.resizeFilter) {\r\n          this.applyResizeFilters();\r\n        }\r\n        if (this.filters.length !== 0) {\r\n          this.applyFilters();\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Delete a single texture if in webgl mode\r\n       */\r\n      removeTexture: function(key) {\r\n        var backend = fabric.filterBackend;\r\n        if (backend && backend.evictCachesForKey) {\r\n          backend.evictCachesForKey(key);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Delete textures, reference to elements and eventually JSDOM cleanup\r\n       */\r\n      dispose: function() {\r\n        this.removeTexture(this.cacheKey);\r\n        this.removeTexture(this.cacheKey + '_filtered');\r\n        this._cacheContext = undefined;\r\n        ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\r\n          fabric.util.cleanUpJsdomNode(this[element]);\r\n          this[element] = undefined;\r\n        }).bind(this));\r\n      },\r\n\r\n      /**\r\n       * Sets crossOrigin value (on an instance and corresponding image element)\r\n       * @return {fabric.Image} thisArg\r\n       * @chainable\r\n       */\r\n      setCrossOrigin: function(value) {\r\n        this.crossOrigin = value;\r\n        this._element.crossOrigin = value;\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns original size of an image\r\n       * @return {Object} Object with \"width\" and \"height\" properties\r\n       */\r\n      getOriginalSize: function() {\r\n        var element = this.getElement();\r\n        return {\r\n          width: element.naturalWidth || element.width,\r\n          height: element.naturalHeight || element.height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _stroke: function(ctx) {\r\n        if (!this.stroke || this.strokeWidth === 0) {\r\n          return;\r\n        }\r\n        var w = this.width / 2, h = this.height / 2;\r\n        ctx.beginPath();\r\n        ctx.moveTo(-w, -h);\r\n        ctx.lineTo(w, -h);\r\n        ctx.lineTo(w, h);\r\n        ctx.lineTo(-w, h);\r\n        ctx.lineTo(-w, -h);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var x = -this.width / 2,\r\n            y = -this.height / 2,\r\n            w = this.width,\r\n            h = this.height;\r\n\r\n        ctx.save();\r\n        this._setStrokeStyles(ctx, this);\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\r\n        ctx.closePath();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var filters = [];\r\n\r\n        this.filters.forEach(function(filterObj) {\r\n          if (filterObj) {\r\n            filters.push(filterObj.toObject());\r\n          }\r\n        });\r\n        var object = extend(\r\n          this.callSuper(\r\n            'toObject',\r\n            ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\r\n          ), {\r\n            src: this.getSrc(),\r\n            filters: filters,\r\n          });\r\n        if (this.resizeFilter) {\r\n          object.resizeFilter = this.resizeFilter.toObject();\r\n        }\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\r\n       * @return {Boolean}\r\n       */\r\n      hasCrop: function() {\r\n        return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2, clipPath = '';\r\n        if (this.hasCrop()) {\r\n          var clipPathId = fabric.Object.__uid++;\r\n          markup.push(\r\n            '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\r\n            '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\r\n            '</clipPath>\\n'\r\n          );\r\n          clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\r\n        }\r\n        markup.push('<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n');\r\n        var imageMarkup = ['\\t<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(true),\r\n          '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          // we're essentially moving origin of transformation from top/left corner to the center of the shape\r\n          // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\r\n          // so that object's center aligns with container's left/top\r\n          '\" width=\"', this._element.width || this._element.naturalWidth,\r\n          '\" height=\"', this._element.height || this._element.height,\r\n          '\"', clipPath,\r\n          '></image>\\n'];\r\n        if (this.paintFirst === 'fill') {\r\n          Array.prototype.push.apply(markup, imageMarkup);\r\n        }\r\n        if (this.stroke || this.strokeDashArray) {\r\n          var origFill = this.fill;\r\n          this.fill = null;\r\n          markup.push(\r\n            '\\t<rect ',\r\n            'x=\"', x, '\" y=\"', y,\r\n            '\" width=\"', this.width, '\" height=\"', this.height,\r\n            '\" style=\"', this.getSvgStyles(),\r\n            '\"/>\\n'\r\n          );\r\n          this.fill = origFill;\r\n        }\r\n        if (this.paintFirst !== 'fill') {\r\n          Array.prototype.push.apply(markup, imageMarkup);\r\n        }\r\n        markup.push('</g>\\n');\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns source of an image\r\n       * @param {Boolean} filtered indicates if the src is needed for svg\r\n       * @return {String} Source of an image\r\n       */\r\n      getSrc: function(filtered) {\r\n        var element = filtered ? this._element : this._originalElement;\r\n        if (element) {\r\n          if (element.toDataURL) {\r\n            return element.toDataURL();\r\n          }\r\n          return element.src;\r\n        }\r\n        else {\r\n          return this.src || '';\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Sets source of an image\r\n       * @param {String} src Source string (URL)\r\n       * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Image} thisArg\r\n       * @chainable\r\n       */\r\n      setSrc: function(src, callback, options) {\r\n        fabric.util.loadImage(src, function(img) {\r\n          this.setElement(img, options);\r\n          this._setWidthHeight();\r\n          callback(this);\r\n        }, this, options && options.crossOrigin);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of an instance\r\n       * @return {String} String representation of an instance\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\r\n      },\r\n\r\n      applyResizeFilters: function() {\r\n        var filter = this.resizeFilter,\r\n            minimumScale = this.minimumScaleTrigger,\r\n            objectScale = this.getTotalObjectScaling(),\r\n            scaleX = objectScale.scaleX,\r\n            scaleY = objectScale.scaleY,\r\n            elementToFilter = this._filteredEl || this._originalElement;\r\n        if (this.group) {\r\n          this.set('dirty', true);\r\n        }\r\n        if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\r\n          this._element = elementToFilter;\r\n          this._filterScalingX = 1;\r\n          this._filterScalingY = 1;\r\n          this._lastScaleX = scaleX;\r\n          this._lastScaleY = scaleY;\r\n          return;\r\n        }\r\n        if (!fabric.filterBackend) {\r\n          fabric.filterBackend = fabric.initFilterBackend();\r\n        }\r\n        var canvasEl = fabric.util.createCanvasElement(),\r\n            cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\r\n            sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\r\n        canvasEl.width = sourceWidth;\r\n        canvasEl.height = sourceHeight;\r\n        this._element = canvasEl;\r\n        this._lastScaleX = filter.scaleX = scaleX;\r\n        this._lastScaleY = filter.scaleY = scaleY;\r\n        fabric.filterBackend.applyFilters(\r\n          [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\r\n        this._filterScalingX = canvasEl.width / this._originalElement.width;\r\n        this._filterScalingY = canvasEl.height / this._originalElement.height;\r\n      },\r\n\r\n      /**\r\n       * Applies filters assigned to this image (from \"filters\" array) or from filter param\r\n       * @method applyFilters\r\n       * @param {Array} filters to be applied\r\n       * @param {Boolean} forResizing specify if the filter operation is a resize operation\r\n       * @return {thisArg} return the fabric.Image object\r\n       * @chainable\r\n       */\r\n      applyFilters: function(filters) {\r\n\r\n        filters = filters || this.filters || [];\r\n        filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\r\n        if (this.group) {\r\n          this.set('dirty', true);\r\n        }\r\n\r\n        // needs to clear out or WEBGL will not resize correctly\r\n        this.removeTexture(this.cacheKey + '_filtered');\r\n\r\n        if (filters.length === 0) {\r\n          this._element = this._originalElement;\r\n          this._filteredEl = null;\r\n          this._filterScalingX = 1;\r\n          this._filterScalingY = 1;\r\n          return this;\r\n        }\r\n\r\n        var imgElement = this._originalElement,\r\n            sourceWidth = imgElement.naturalWidth || imgElement.width,\r\n            sourceHeight = imgElement.naturalHeight || imgElement.height;\r\n\r\n        if (this._element === this._originalElement) {\r\n          // if the element is the same we need to create a new element\r\n          var canvasEl = fabric.util.createCanvasElement();\r\n          canvasEl.width = sourceWidth;\r\n          canvasEl.height = sourceHeight;\r\n          this._element = canvasEl;\r\n          this._filteredEl = canvasEl;\r\n        }\r\n        else {\r\n          // clear the existing element to get new filter data\r\n          // also dereference the eventual resized _element\r\n          this._element = this._filteredEl;\r\n          this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\r\n          // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\r\n          this._lastScaleX = 1;\r\n          this._lastScaleY = 1;\r\n        }\r\n        if (!fabric.filterBackend) {\r\n          fabric.filterBackend = fabric.initFilterBackend();\r\n        }\r\n        fabric.filterBackend.applyFilters(\r\n          filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\r\n        if (this._originalElement.width !== this._element.width ||\r\n          this._originalElement.height !== this._element.height) {\r\n          this._filterScalingX = this._element.width / this._originalElement.width;\r\n          this._filterScalingY = this._element.height / this._originalElement.height;\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\r\n          this.applyResizeFilters();\r\n        }\r\n        this._stroke(ctx);\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      _renderFill: function(ctx) {\r\n        var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY,\r\n            x = -w / 2, y = -h / 2, elementToDraw = this._element;\r\n        elementToDraw && ctx.drawImage(elementToDraw,\r\n          this.cropX * this._filterScalingX,\r\n          this.cropY * this._filterScalingY,\r\n          sW,\r\n          sH,\r\n          x, y, w, h);\r\n      },\r\n\r\n      /**\r\n       * @private, needed to check if image needs resize\r\n       */\r\n      _needsResize: function() {\r\n        var scale = this.getTotalObjectScaling();\r\n        return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _resetWidthHeight: function() {\r\n        this.set(this.getOriginalSize());\r\n      },\r\n\r\n      /**\r\n       * The Image class's initialization method. This method is automatically\r\n       * called by the constructor.\r\n       * @private\r\n       * @param {HTMLImageElement|String} element The element representing the image\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initElement: function(element, options) {\r\n        this.setElement(fabric.util.getById(element), options);\r\n        fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initConfig: function(options) {\r\n        options || (options = { });\r\n        this.setOptions(options);\r\n        this._setWidthHeight(options);\r\n        if (this._element && this.crossOrigin) {\r\n          this._element.crossOrigin = this.crossOrigin;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Array} filters to be initialized\r\n       * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\r\n       */\r\n      _initFilters: function(filters, callback) {\r\n        if (filters && filters.length) {\r\n          fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\r\n            callback && callback(enlivenedObjects);\r\n          }, 'fabric.Image.filters');\r\n        }\r\n        else {\r\n          callback && callback();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Set the width and the height of the image object, using the element or the\r\n       * options.\r\n       * @param {Object} [options] Object with width/height properties\r\n       */\r\n      _setWidthHeight: function(options) {\r\n        options || (options = { });\r\n        var el = this.getElement();\r\n        this.width = options.width || el.naturalWidth || el.width || 0;\r\n        this.height = options.height || el.naturalHeight || el.height || 0;\r\n      },\r\n\r\n      /**\r\n       * Calculate offset for center and scale factor for the image in order to respect\r\n       * the preserveAspectRatio attribute\r\n       * @private\r\n       * @return {Object}\r\n       */\r\n      parsePreserveAspectRatioAttribute: function() {\r\n        var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\r\n            rWidth = this._element.width, rHeight = this._element.height,\r\n            scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\r\n            offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\r\n        if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\r\n          if (pAR.meetOrSlice === 'meet') {\r\n            scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\r\n            offset = (pWidth - rWidth * scaleX) / 2;\r\n            if (pAR.alignX === 'Min') {\r\n              offsetLeft = -offset;\r\n            }\r\n            if (pAR.alignX === 'Max') {\r\n              offsetLeft = offset;\r\n            }\r\n            offset = (pHeight - rHeight * scaleY) / 2;\r\n            if (pAR.alignY === 'Min') {\r\n              offsetTop = -offset;\r\n            }\r\n            if (pAR.alignY === 'Max') {\r\n              offsetTop = offset;\r\n            }\r\n          }\r\n          if (pAR.meetOrSlice === 'slice') {\r\n            scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\r\n            offset = rWidth - pWidth / scaleX;\r\n            if (pAR.alignX === 'Mid') {\r\n              cropX = offset / 2;\r\n            }\r\n            if (pAR.alignX === 'Max') {\r\n              cropX = offset;\r\n            }\r\n            offset = rHeight - pHeight / scaleY;\r\n            if (pAR.alignY === 'Mid') {\r\n              cropY = offset / 2;\r\n            }\r\n            if (pAR.alignY === 'Max') {\r\n              cropY = offset;\r\n            }\r\n            rWidth = pWidth / scaleX;\r\n            rHeight = pHeight / scaleY;\r\n          }\r\n        }\r\n        else {\r\n          scaleX = pWidth / rWidth;\r\n          scaleY = pHeight / rHeight;\r\n        }\r\n        return {\r\n          width: rWidth,\r\n          height: rHeight,\r\n          scaleX: scaleX,\r\n          scaleY: scaleY,\r\n          offsetLeft: offsetLeft,\r\n          offsetTop: offsetTop,\r\n          cropX: cropX,\r\n          cropY: cropY\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Default CSS class name for canvas\r\n     * @static\r\n     * @type String\r\n     * @default\r\n     */\r\n    fabric.Image.CSS_CANVAS = 'canvas-img';\r\n\r\n    /**\r\n     * Alias for getSrc\r\n     * @static\r\n     */\r\n    fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\r\n\r\n    /**\r\n     * Creates an instance of fabric.Image from its object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} callback Callback to invoke when an image instance is created\r\n     */\r\n    fabric.Image.fromObject = function(_object, callback) {\r\n      var object = fabric.util.object.clone(_object);\r\n      fabric.util.loadImage(object.src, function(img, error) {\r\n        if (error) {\r\n          callback && callback(null, error);\r\n          return;\r\n        }\r\n        fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\r\n          object.filters = filters || [];\r\n          fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\r\n            object.resizeFilter = resizeFilters[0];\r\n            var image = new fabric.Image(img, object);\r\n            callback(image);\r\n          });\r\n        });\r\n      }, null, object.crossOrigin);\r\n    };\r\n\r\n    /**\r\n     * Creates an instance of fabric.Image from an URL string\r\n     * @static\r\n     * @param {String} url URL to create an image from\r\n     * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\r\n     * @param {Object} [imgOptions] Options object\r\n     */\r\n    fabric.Image.fromURL = function(url, callback, imgOptions) {\r\n      fabric.util.loadImage(url, function(img) {\r\n        callback && callback(new fabric.Image(img, imgOptions));\r\n      }, null, imgOptions && imgOptions.crossOrigin);\r\n    };\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\r\n     * @static\r\n     * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\r\n     */\r\n    fabric.Image.ATTRIBUTE_NAMES =\r\n      fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Image} instance from an SVG element\r\n     * @static\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} callback Callback to execute when fabric.Image object is created\r\n     * @return {fabric.Image} Instance of fabric.Image\r\n     */\r\n    fabric.Image.fromElement = function(element, callback, options) {\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\r\n      fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\r\n        extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * @private\r\n     * @return {Number} angle value\r\n     */\r\n    _getAngleValueForStraighten: function() {\r\n      var angle = this.angle % 360;\r\n      if (angle > 0) {\r\n        return Math.round((angle - 1) / 90) * 90;\r\n      }\r\n      return Math.round(angle / 90) * 90;\r\n    },\r\n\r\n    /**\r\n     * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    straighten: function() {\r\n      this.rotate(this._getAngleValueForStraighten());\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Same as {@link fabric.Object.prototype.straighten} but with animation\r\n     * @param {Object} callbacks Object with callback functions\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    fxStraighten: function(callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: this.get('angle'),\r\n        endValue: this._getAngleValueForStraighten(),\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          _this.rotate(value);\r\n          onChange();\r\n        },\r\n        onComplete: function() {\r\n          _this.setCoords();\r\n          onComplete();\r\n        },\r\n      });\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Straightens object, then rerenders canvas\r\n     * @param {fabric.Object} object Object to straighten\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    straightenObject: function (object) {\r\n      object.straighten();\r\n      this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\r\n     * @param {fabric.Object} object Object to straighten\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxStraightenObject: function (object) {\r\n      object.fxStraighten({\r\n        onChange: this.requestRenderAllBound\r\n      });\r\n      return this;\r\n    }\r\n  });\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Tests if webgl supports certain precision\r\n     * @param {WebGL} Canvas WebGL context to test on\r\n     * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\r\n     * @returns {Boolean} Whether the user's browser WebGL supports given precision.\r\n     */\r\n    function testPrecision(gl, precision){\r\n      var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\r\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n      gl.shaderSource(fragmentShader, fragmentSource);\r\n      gl.compileShader(fragmentShader);\r\n      if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Indicate whether this filtering backend is supported by the user's browser.\r\n     * @param {Number} tileSize check if the tileSize is supported\r\n     * @returns {Boolean} Whether the user's browser supports WebGL.\r\n     */\r\n    fabric.isWebglSupported = function(tileSize) {\r\n      if (fabric.isLikelyNode) {\r\n        return false;\r\n      }\r\n      tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\r\n      var canvas = document.createElement('canvas');\r\n      var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n      var isSupported = false;\r\n      // eslint-disable-next-line\r\n      if (gl) {\r\n        fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n        isSupported = fabric.maxTextureSize >= tileSize;\r\n        var precisions = ['highp', 'mediump', 'lowp'];\r\n        for (var i = 0; i < 3; i++){\r\n          if (testPrecision(gl, precisions[i])){\r\n            fabric.webGlPrecision = precisions[i];\r\n            break;\r\n          };\r\n        }\r\n      }\r\n      this.isSupported = isSupported;\r\n      return isSupported;\r\n    };\r\n\r\n    fabric.WebglFilterBackend = WebglFilterBackend;\r\n\r\n    /**\r\n     * WebGL filter backend.\r\n     */\r\n    function WebglFilterBackend(options) {\r\n      if (options && options.tileSize) {\r\n        this.tileSize = options.tileSize;\r\n      }\r\n      this.setupGLContext(this.tileSize, this.tileSize);\r\n      this.captureGPUInfo();\r\n    };\r\n\r\n    WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\r\n\r\n      tileSize: 2048,\r\n\r\n      /**\r\n       * Experimental. This object is a sort of repository of help layers used to avoid\r\n       * of recreating them during frequent filtering. If you are previewing a filter with\r\n       * a slider you problably do not want to create help layers every filter step.\r\n       * in this object there will be appended some canvases, created once, resized sometimes\r\n       * cleared never. Clearing is left to the developer.\r\n       **/\r\n      resources: {\r\n\r\n      },\r\n\r\n      /**\r\n       * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\r\n       */\r\n      setupGLContext: function(width, height) {\r\n        this.dispose();\r\n        this.createWebGLCanvas(width, height);\r\n        // eslint-disable-next-line\r\n        this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\r\n        this.chooseFastestCopyGLTo2DMethod(width, height);\r\n      },\r\n\r\n      /**\r\n       * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\r\n       * putImageData is faster than drawImage for that specific operation.\r\n       */\r\n      chooseFastestCopyGLTo2DMethod: function(width, height) {\r\n        var canMeasurePerf = typeof window.performance !== 'undefined';\r\n        var canUseImageData;\r\n        try {\r\n          new ImageData(1, 1);\r\n          canUseImageData = true;\r\n        }\r\n        catch (e) {\r\n          canUseImageData = false;\r\n        }\r\n        // eslint-disable-next-line no-undef\r\n        var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\r\n        // eslint-disable-next-line no-undef\r\n        var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\r\n\r\n        if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\r\n          return;\r\n        }\r\n\r\n        var targetCanvas = fabric.util.createCanvasElement();\r\n        // eslint-disable-next-line no-undef\r\n        var imageBuffer = new ArrayBuffer(width * height * 4);\r\n        var testContext = {\r\n          imageBuffer: imageBuffer,\r\n          destinationWidth: width,\r\n          destinationHeight: height,\r\n          targetCanvas: targetCanvas\r\n        };\r\n        var startTime, drawImageTime, putImageDataTime;\r\n        targetCanvas.width = width;\r\n        targetCanvas.height = height;\r\n\r\n        startTime = window.performance.now();\r\n        copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\r\n        drawImageTime = window.performance.now() - startTime;\r\n\r\n        startTime = window.performance.now();\r\n        copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\r\n        putImageDataTime = window.performance.now() - startTime;\r\n\r\n        if (drawImageTime > putImageDataTime) {\r\n          this.imageBuffer = imageBuffer;\r\n          this.copyGLTo2D = copyGLTo2DPutImageData;\r\n        }\r\n        else {\r\n          this.copyGLTo2D = copyGLTo2DDrawImage;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Create a canvas element and associated WebGL context and attaches them as\r\n       * class properties to the GLFilterBackend class.\r\n       */\r\n      createWebGLCanvas: function(width, height) {\r\n        var canvas = fabric.util.createCanvasElement();\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        var glOptions = {\r\n              alpha: true,\r\n              premultipliedAlpha: false,\r\n              depth: false,\r\n              stencil: false,\r\n              antialias: false\r\n            },\r\n            gl = canvas.getContext('webgl', glOptions);\r\n        if (!gl) {\r\n          gl = canvas.getContext('experimental-webgl', glOptions);\r\n        }\r\n        if (!gl) {\r\n          return;\r\n        }\r\n        gl.clearColor(0, 0, 0, 0);\r\n        // this canvas can fire webglcontextlost and webglcontextrestored\r\n        this.canvas = canvas;\r\n        this.gl = gl;\r\n      },\r\n\r\n      /**\r\n       * Attempts to apply the requested filters to the source provided, drawing the filtered output\r\n       * to the provided target canvas.\r\n       *\r\n       * @param {Array} filters The filters to apply.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\r\n       * @param {Number} width The width of the source input.\r\n       * @param {Number} height The height of the source input.\r\n       * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n       * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\r\n       * omitted, caching will be skipped.\r\n       */\r\n      applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\r\n        var gl = this.gl;\r\n        var cachedTexture;\r\n        if (cacheKey) {\r\n          cachedTexture = this.getCachedTexture(cacheKey, source);\r\n        }\r\n        var pipelineState = {\r\n          originalWidth: source.width || source.originalWidth,\r\n          originalHeight: source.height || source.originalHeight,\r\n          sourceWidth: width,\r\n          sourceHeight: height,\r\n          destinationWidth: width,\r\n          destinationHeight: height,\r\n          context: gl,\r\n          sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\r\n          targetTexture: this.createTexture(gl, width, height),\r\n          originalTexture: cachedTexture ||\r\n            this.createTexture(gl, width, height, !cachedTexture && source),\r\n          passes: filters.length,\r\n          webgl: true,\r\n          aPosition: this.aPosition,\r\n          programCache: this.programCache,\r\n          pass: 0,\r\n          filterBackend: this,\r\n          targetCanvas: targetCanvas\r\n        };\r\n        var tempFbo = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\r\n        filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\r\n        resizeCanvasIfNeeded(pipelineState);\r\n        this.copyGLTo2D(gl, pipelineState);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.deleteTexture(pipelineState.sourceTexture);\r\n        gl.deleteTexture(pipelineState.targetTexture);\r\n        gl.deleteFramebuffer(tempFbo);\r\n        targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\r\n        return pipelineState;\r\n      },\r\n\r\n      /**\r\n       * The same as the applyFilter method but with additional logging of WebGL\r\n       * errors.\r\n       */\r\n      applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\r\n        // The following code is useful when debugging a specific issue but adds ~10x slowdown.\r\n        var gl = this.gl;\r\n        var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\r\n        var glError = gl.getError();\r\n        if (glError !== gl.NO_ERROR) {\r\n          var errorString = this.glErrorToString(gl, glError);\r\n          var error = new Error('WebGL Error ' + errorString);\r\n          error.glErrorCode = glError;\r\n          throw error;\r\n        }\r\n        return ret;\r\n      },\r\n\r\n      glErrorToString: function(context, errorCode) {\r\n        if (!context) {\r\n          return 'Context undefined for error code: ' + errorCode;\r\n        }\r\n        else if (typeof errorCode !== 'number') {\r\n          return 'Error code is not a number';\r\n        }\r\n        switch (errorCode) {\r\n          case context.NO_ERROR:\r\n            return 'NO_ERROR';\r\n          case context.INVALID_ENUM:\r\n            return 'INVALID_ENUM';\r\n          case context.INVALID_VALUE:\r\n            return 'INVALID_VALUE';\r\n          case context.INVALID_OPERATION:\r\n            return 'INVALID_OPERATION';\r\n          case context.INVALID_FRAMEBUFFER_OPERATION:\r\n            return 'INVALID_FRAMEBUFFER_OPERATION';\r\n          case context.OUT_OF_MEMORY:\r\n            return 'OUT_OF_MEMORY';\r\n          case context.CONTEXT_LOST_WEBGL:\r\n            return 'CONTEXT_LOST_WEBGL';\r\n          default:\r\n            return 'UNKNOWN_ERROR';\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Detach event listeners, remove references, and clean up caches.\r\n       */\r\n      dispose: function() {\r\n        if (this.canvas) {\r\n          this.canvas = null;\r\n          this.gl = null;\r\n        }\r\n        this.clearWebGLCaches();\r\n      },\r\n\r\n      /**\r\n       * Wipe out WebGL-related caches.\r\n       */\r\n      clearWebGLCaches: function() {\r\n        this.programCache = {};\r\n        this.textureCache = {};\r\n      },\r\n\r\n      /**\r\n       * Create a WebGL texture object.\r\n       *\r\n       * Accepts specific dimensions to initialize the textuer to or a source image.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\r\n       * @param {Number} width The width to initialize the texture at.\r\n       * @param {Number} height The height to initialize the texture.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\r\n       * @returns {WebGLTexture}\r\n       */\r\n      createTexture: function(gl, width, height, textureImageSource) {\r\n        var texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        if (textureImageSource) {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\r\n        }\r\n        else {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n        }\r\n        return texture;\r\n      },\r\n\r\n      /**\r\n       * Can be optionally used to get a texture from the cache array\r\n       *\r\n       * If an existing texture is not found, a new texture is created and cached.\r\n       *\r\n       * @param {String} uniqueId A cache key to use to find an existing texture.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\r\n       * texture cache entry if one does not already exist.\r\n       */\r\n      getCachedTexture: function(uniqueId, textureImageSource) {\r\n        if (this.textureCache[uniqueId]) {\r\n          return this.textureCache[uniqueId];\r\n        }\r\n        else {\r\n          var texture = this.createTexture(\r\n            this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\r\n          this.textureCache[uniqueId] = texture;\r\n          return texture;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Clear out cached resources related to a source image that has been\r\n       * filtered previously.\r\n       *\r\n       * @param {String} cacheKey The cache key provided when the source image was filtered.\r\n       */\r\n      evictCachesForKey: function(cacheKey) {\r\n        if (this.textureCache[cacheKey]) {\r\n          this.gl.deleteTexture(this.textureCache[cacheKey]);\r\n          delete this.textureCache[cacheKey];\r\n        }\r\n      },\r\n\r\n      copyGLTo2D: copyGLTo2DDrawImage,\r\n\r\n      /**\r\n       * Attempt to extract GPU information strings from a WebGL context.\r\n       *\r\n       * Useful information when debugging or blacklisting specific GPUs.\r\n       *\r\n       * @returns {Object} A GPU info object with renderer and vendor strings.\r\n       */\r\n      captureGPUInfo: function() {\r\n        if (this.gpuInfo) {\r\n          return this.gpuInfo;\r\n        }\r\n        var gl = this.gl;\r\n        var ext = gl.getExtension('WEBGL_debug_renderer_info');\r\n        var gpuInfo = { renderer: '', vendor: '' };\r\n        if (ext) {\r\n          var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\r\n          var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\r\n          if (renderer) {\r\n            gpuInfo.renderer = renderer.toLowerCase();\r\n          }\r\n          if (vendor) {\r\n            gpuInfo.vendor = vendor.toLowerCase();\r\n          }\r\n        }\r\n        this.gpuInfo = gpuInfo;\r\n        return gpuInfo;\r\n      },\r\n    };\r\n  })();\r\n\r\n  function resizeCanvasIfNeeded(pipelineState) {\r\n    var targetCanvas = pipelineState.targetCanvas,\r\n        width = targetCanvas.width, height = targetCanvas.height,\r\n        dWidth = pipelineState.destinationWidth,\r\n        dHeight = pipelineState.destinationHeight;\r\n\r\n    if (width !== dWidth || height !== dHeight) {\r\n      targetCanvas.width = dWidth;\r\n      targetCanvas.height = dHeight;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy an input WebGL canvas on to an output 2D canvas.\r\n   *\r\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\r\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\r\n   *\r\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\r\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n   */\r\n  function copyGLTo2DDrawImage(gl, pipelineState) {\r\n    var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\r\n        ctx = targetCanvas.getContext('2d');\r\n    ctx.translate(0, targetCanvas.height); // move it down again\r\n    ctx.scale(1, -1); // vertical flip\r\n    // where is my image on the big glcanvas?\r\n    var sourceY = glCanvas.height - targetCanvas.height;\r\n    ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\r\n      targetCanvas.width, targetCanvas.height);\r\n  }\r\n\r\n  /**\r\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\r\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\r\n   *\r\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\r\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n   */\r\n  function copyGLTo2DPutImageData(gl, pipelineState) {\r\n    var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\r\n        dWidth = pipelineState.destinationWidth,\r\n        dHeight = pipelineState.destinationHeight,\r\n        numBytes = dWidth * dHeight * 4;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\r\n    // eslint-disable-next-line no-undef\r\n    var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\r\n\r\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\r\n    var imgData = new ImageData(u8Clamped, dWidth, dHeight);\r\n    ctx.putImageData(imgData, 0, 0);\r\n  }\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n\r\n    var noop = function() {};\r\n\r\n    fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\r\n\r\n    /**\r\n     * Canvas 2D filter backend.\r\n     */\r\n    function Canvas2dFilterBackend() {};\r\n\r\n    Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\r\n      evictCachesForKey: noop,\r\n      dispose: noop,\r\n      clearWebGLCaches: noop,\r\n\r\n      /**\r\n       * Experimental. This object is a sort of repository of help layers used to avoid\r\n       * of recreating them during frequent filtering. If you are previewing a filter with\r\n       * a slider you probably do not want to create help layers every filter step.\r\n       * in this object there will be appended some canvases, created once, resized sometimes\r\n       * cleared never. Clearing is left to the developer.\r\n       **/\r\n      resources: {\r\n\r\n      },\r\n\r\n      /**\r\n       * Apply a set of filters against a source image and draw the filtered output\r\n       * to the provided destination canvas.\r\n       *\r\n       * @param {EnhancedFilter} filters The filter to apply.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\r\n       * @param {Number} sourceWidth The width of the source input.\r\n       * @param {Number} sourceHeight The height of the source input.\r\n       * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n       */\r\n      applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\r\n        var ctx = targetCanvas.getContext('2d');\r\n        ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\r\n        var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n        var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n        var pipelineState = {\r\n          sourceWidth: sourceWidth,\r\n          sourceHeight: sourceHeight,\r\n          imageData: imageData,\r\n          originalEl: sourceElement,\r\n          originalImageData: originalImageData,\r\n          canvasEl: targetCanvas,\r\n          ctx: ctx,\r\n          filterBackend: this,\r\n        };\r\n        filters.forEach(function(filter) { filter.applyTo(pipelineState); });\r\n        if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\r\n          targetCanvas.width = pipelineState.imageData.width;\r\n          targetCanvas.height = pipelineState.imageData.height;\r\n        }\r\n        ctx.putImageData(pipelineState.imageData, 0, 0);\r\n        return pipelineState;\r\n      },\r\n\r\n    };\r\n  })();\r\n\r\n\r\n  /**\r\n   * @namespace fabric.Image.filters\r\n   * @memberOf fabric.Image\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   */\r\n  fabric.Image.filters = fabric.Image.filters || { };\r\n\r\n  /**\r\n   * Root filter class from which all filter classes inherit from\r\n   * @class fabric.Image.filters.BaseFilter\r\n   * @memberOf fabric.Image.filters\r\n   */\r\n  fabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'BaseFilter',\r\n\r\n    /**\r\n     * Array of attributes to send with buffers. do not modify\r\n     * @private\r\n     */\r\n\r\n    vertexSource: 'attribute vec2 aPosition;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'vTexCoord = aPosition;\\n' +\r\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\r\n      '}',\r\n\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'void main() {\\n' +\r\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     */\r\n    initialize: function(options) {\r\n      if (options) {\r\n        this.setOptions(options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets filter's properties from options\r\n     * @param {Object} [options] Options object\r\n     */\r\n    setOptions: function(options) {\r\n      for (var prop in options) {\r\n        this[prop] = options[prop];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Compile this filter's shader program.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\r\n     * @param {String} fragmentSource fragmentShader source for compilation\r\n     * @param {String} vertexSource vertexShader source for compilation\r\n     */\r\n    createProgram: function(gl, fragmentSource, vertexSource) {\r\n      fragmentSource = fragmentSource || this.fragmentSource;\r\n      vertexSource = vertexSource || this.vertexSource;\r\n      if (fabric.webGlPrecision !== 'highp'){\r\n        fragmentSource = fragmentSource.replace(\r\n          /precision highp float/g,\r\n          'precision ' + fabric.webGlPrecision + ' float'\r\n        );\r\n      }\r\n      var vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n      gl.shaderSource(vertexShader, vertexSource);\r\n      gl.compileShader(vertexShader);\r\n      if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\r\n        throw new Error(\r\n          // eslint-disable-next-line prefer-template\r\n          'Vertex shader compile error for ' + this.type + ': ' +\r\n          gl.getShaderInfoLog(vertexShader)\r\n        );\r\n      }\r\n\r\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n      gl.shaderSource(fragmentShader, fragmentSource);\r\n      gl.compileShader(fragmentShader);\r\n      if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n        throw new Error(\r\n          // eslint-disable-next-line prefer-template\r\n          'Fragment shader compile error for ' + this.type + ': ' +\r\n          gl.getShaderInfoLog(fragmentShader)\r\n        );\r\n      }\r\n\r\n      var program = gl.createProgram();\r\n      gl.attachShader(program, vertexShader);\r\n      gl.attachShader(program, fragmentShader);\r\n      gl.linkProgram(program);\r\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        throw new Error(\r\n          // eslint-disable-next-line prefer-template\r\n          'Shader link error for \"${this.type}\" ' +\r\n          gl.getProgramInfoLog(program)\r\n        );\r\n      }\r\n\r\n      var attributeLocations = this.getAttributeLocations(gl, program);\r\n      var uniformLocations = this.getUniformLocations(gl, program) || { };\r\n      uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\r\n      uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\r\n      return {\r\n        program: program,\r\n        attributeLocations: attributeLocations,\r\n        uniformLocations: uniformLocations\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Return a map of attribute names to WebGLAttributeLocation objects.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\r\n     * @returns {Object} A map of attribute names to attribute locations.\r\n     */\r\n    getAttributeLocations: function(gl, program) {\r\n      return {\r\n        aPosition: gl.getAttribLocation(program, 'aPosition'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Return a map of uniform names to WebGLUniformLocation objects.\r\n     *\r\n     * Intended to be overridden by subclasses.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\r\n     * @returns {Object} A map of uniform names to uniform locations.\r\n     */\r\n    getUniformLocations: function (/* gl, program */) {\r\n      // in case i do not need any special uniform i need to return an empty object\r\n      return { };\r\n    },\r\n\r\n    /**\r\n     * Send attribute data from this filter to its shader program on the GPU.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {Object} attributeLocations A map of shader attribute names to their locations.\r\n     */\r\n    sendAttributeData: function(gl, attributeLocations, aPositionData) {\r\n      var attributeLocation = attributeLocations.aPosition;\r\n      var buffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n      gl.enableVertexAttribArray(attributeLocation);\r\n      gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\r\n      gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\r\n    },\r\n\r\n    _setupFrameBuffer: function(options) {\r\n      var gl = options.context, width, height;\r\n      if (options.passes > 1) {\r\n        width = options.destinationWidth;\r\n        height = options.destinationHeight;\r\n        if (options.sourceWidth !== width || options.sourceHeight !== height) {\r\n          gl.deleteTexture(options.targetTexture);\r\n          options.targetTexture = options.filterBackend.createTexture(gl, width, height);\r\n        }\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\r\n          options.targetTexture, 0);\r\n      }\r\n      else {\r\n        // draw last filter on canvas and not to framebuffer.\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.finish();\r\n      }\r\n    },\r\n\r\n    _swapTextures: function(options) {\r\n      options.passes--;\r\n      options.pass++;\r\n      var temp = options.targetTexture;\r\n      options.targetTexture = options.sourceTexture;\r\n      options.sourceTexture = temp;\r\n    },\r\n\r\n    /**\r\n     * Generic isNeutral implementation for one parameter based filters.\r\n     * Used only in image applyFilters to discard filters that will not have an effect\r\n     * on the image\r\n     * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\r\n     * @param {Object} options\r\n     **/\r\n    isNeutralState: function(/* options */) {\r\n      var main = this.mainParameter,\r\n          _class = fabric.Image.filters[this.type].prototype;\r\n      if (main) {\r\n        if (Array.isArray(_class[main])) {\r\n          for (var i = _class[main].length; i--;) {\r\n            if (this[main][i] !== _class[main][i]) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n        else {\r\n          return _class[main] === this[main];\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Apply this filter to the input image data provided.\r\n     *\r\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Number} options.passes The number of filters remaining to be executed\r\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    applyTo: function(options) {\r\n      if (options.webgl) {\r\n        this._setupFrameBuffer(options);\r\n        this.applyToWebGL(options);\r\n        this._swapTextures(options);\r\n      }\r\n      else {\r\n        this.applyTo2d(options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Retrieves the cached shader.\r\n     * @param {Object} options\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    retrieveShader: function(options) {\r\n      if (!options.programCache.hasOwnProperty(this.type)) {\r\n        options.programCache[this.type] = this.createProgram(options.context);\r\n      }\r\n      return options.programCache[this.type];\r\n    },\r\n\r\n    /**\r\n     * Apply this filter using webgl.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Number} options.passes The number of filters remaining to be executed\r\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n     * @param {WebGLTexture} options.originalTexture The texture of the original input image.\r\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    applyToWebGL: function(options) {\r\n      var gl = options.context;\r\n      var shader = this.retrieveShader(options);\r\n      if (options.pass === 0 && options.originalTexture) {\r\n        gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\r\n      }\r\n      else {\r\n        gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\r\n      }\r\n      gl.useProgram(shader.program);\r\n      this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\r\n\r\n      gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\r\n      gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\r\n\r\n      this.sendUniformData(gl, shader.uniformLocations);\r\n      gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\r\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n    },\r\n\r\n    bindAdditionalTexture: function(gl, texture, textureUnit) {\r\n      gl.activeTexture(textureUnit);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      // reset active texture to 0 as usual\r\n      gl.activeTexture(gl.TEXTURE0);\r\n    },\r\n\r\n    unbindAdditionalTexture: function(gl, textureUnit) {\r\n      gl.activeTexture(textureUnit);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n      gl.activeTexture(gl.TEXTURE0);\r\n    },\r\n\r\n    getMainParameter: function() {\r\n      return this[this.mainParameter];\r\n    },\r\n\r\n    setMainParameter: function(value) {\r\n      this[this.mainParameter] = value;\r\n    },\r\n\r\n    /**\r\n     * Send uniform data from this filter to its shader program on the GPU.\r\n     *\r\n     * Intended to be overridden by subclasses.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {Object} uniformLocations A map of shader uniform names to their locations.\r\n     */\r\n    sendUniformData: function(/* gl, uniformLocations */) {\r\n      // Intentionally left blank.  Override me in subclasses.\r\n    },\r\n\r\n    /**\r\n     * If needed by a 2d filter, this functions can create an helper canvas to be used\r\n     * remember that options.targetCanvas is available for use till end of chain.\r\n     */\r\n    createHelpLayer: function(options) {\r\n      if (!options.helpLayer) {\r\n        var helpLayer = document.createElement('canvas');\r\n        helpLayer.width = options.sourceWidth;\r\n        helpLayer.height = options.sourceHeight;\r\n        options.helpLayer = helpLayer;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function() {\r\n      var object = { type: this.type }, mainP = this.mainParameter;\r\n      if (mainP) {\r\n        object[mainP] = this[mainP];\r\n      }\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * Returns a JSON representation of an instance\r\n     * @return {Object} JSON\r\n     */\r\n    toJSON: function() {\r\n      // delegate, not alias\r\n      return this.toObject();\r\n    }\r\n  });\r\n\r\n  fabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\r\n    var filter = new fabric.Image.filters[object.type](object);\r\n    callback && callback(filter);\r\n    return filter;\r\n  };\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Color Matrix filter class\r\n     * @class fabric.Image.filters.ColorMatrix\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\r\n     * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\r\n     * @example <caption>Kodachrome filter</caption>\r\n     * var filter = new fabric.Image.filters.ColorMatrix({\r\n     *  matrix: [\r\n         1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\r\n         -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\r\n         -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\r\n         0, 0, 0, 1, 0\r\n        ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'ColorMatrix',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'uniform mat4 uColorMatrix;\\n' +\r\n        'uniform vec4 uConstants;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'color *= uColorMatrix;\\n' +\r\n          'color += uConstants;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Colormatrix for pixels.\r\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\r\n       * outside the -1, 1 range.\r\n       * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n       * @param {Array} matrix array of 20 numbers.\r\n       * @default\r\n       */\r\n      matrix: [\r\n        1, 0, 0, 0, 0,\r\n        0, 1, 0, 0, 0,\r\n        0, 0, 1, 0, 0,\r\n        0, 0, 0, 1, 0\r\n      ],\r\n\r\n      mainParameter: 'matrix',\r\n\r\n      /**\r\n       * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\r\n       * to save some calculation\r\n       */\r\n      colorsOnly: true,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        // create a new array instead mutating the prototype with push\r\n        this.matrix = this.matrix.slice(0);\r\n      },\r\n\r\n      /**\r\n       * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data,\r\n            iLen = data.length,\r\n            m = this.matrix,\r\n            r, g, b, a, i, colorsOnly = this.colorsOnly;\r\n\r\n        for (i = 0; i < iLen; i += 4) {\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n          if (colorsOnly) {\r\n            data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\r\n            data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\r\n            data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\r\n          }\r\n          else {\r\n            a = data[i + 3];\r\n            data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\r\n            data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\r\n            data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\r\n            data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\r\n          uConstants: gl.getUniformLocation(program, 'uConstants'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var m = this.matrix,\r\n            matrix = [\r\n              m[0], m[1], m[2], m[3],\r\n              m[5], m[6], m[7], m[8],\r\n              m[10], m[11], m[12], m[13],\r\n              m[15], m[16], m[17], m[18]\r\n            ],\r\n            constants = [m[4], m[9], m[14], m[19]];\r\n        gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\r\n        gl.uniform4fv(uniformLocations.uConstants, constants);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] function to invoke after filter creation\r\n     * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\r\n     */\r\n    fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Brightness filter class\r\n     * @class fabric.Image.filters.Brightness\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Brightness({\r\n     *   brightness: 0.05\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Brightness',\r\n\r\n      /**\r\n       * Fragment source for the brightness program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uBrightness;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'color.rgb += uBrightness;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Brightness value, from -1 to 1.\r\n       * translated to -255 to 255 for 2d\r\n       * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n       * @param {Number} brightness\r\n       * @default\r\n       */\r\n      brightness: 0,\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'brightness',\r\n\r\n      /**\r\n      * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n      *\r\n      * @param {Object} options\r\n      * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n      */\r\n      applyTo2d: function(options) {\r\n        if (this.brightness === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i, len = data.length,\r\n            brightness = Math.round(this.brightness * 255);\r\n        for (i = 0; i < len; i += 4) {\r\n          data[i] = data[i] + brightness;\r\n          data[i + 1] = data[i + 1] + brightness;\r\n          data[i + 2] = data[i + 2] + brightness;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uBrightness: gl.getUniformLocation(program, 'uBrightness'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uBrightness, this.brightness);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\r\n     */\r\n    fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\r\n     * @class fabric.Image.filters.Convolute\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example <caption>Sharpen filter</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   matrix: [ 0, -1,  0,\r\n     *            -1,  5, -1,\r\n     *             0, -1,  0 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     * @example <caption>Blur filter</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   matrix: [ 1/9, 1/9, 1/9,\r\n     *             1/9, 1/9, 1/9,\r\n     *             1/9, 1/9, 1/9 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     * @example <caption>Emboss filter</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   matrix: [ 1,   1,  1,\r\n     *             1, 0.7, -1,\r\n     *            -1,  -1, -1 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     * @example <caption>Emboss filter with opaqueness</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   opaque: true,\r\n     *   matrix: [ 1,   1,  1,\r\n     *             1, 0.7, -1,\r\n     *            -1,  -1, -1 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Convolute',\r\n\r\n      /*\r\n       * Opaque value (true/false)\r\n       */\r\n      opaque: false,\r\n\r\n      /*\r\n       * matrix for the filter, max 9x9\r\n       */\r\n      matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n\r\n      /**\r\n       * Fragment source for the brightness program\r\n       */\r\n      fragmentSource: {\r\n        Convolute_3_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[9];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_3_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[9];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n        Convolute_5_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[25];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_5_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[25];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n        Convolute_7_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[49];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_7_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[49];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n        Convolute_9_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[81];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_9_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[81];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n      },\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.Convolute.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Boolean} [options.opaque=false] Opaque value (true/false)\r\n       * @param {Array} [options.matrix] Filter matrix\r\n       */\r\n\r\n\r\n      /**\r\n      * Retrieves the cached shader.\r\n      * @param {Object} options\r\n      * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n      * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n      */\r\n      retrieveShader: function(options) {\r\n        var size = Math.sqrt(this.matrix.length);\r\n        var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\r\n        var shaderSource = this.fragmentSource[cacheKey];\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      /**\r\n       * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data,\r\n            weights = this.matrix,\r\n            side = Math.round(Math.sqrt(weights.length)),\r\n            halfSide = Math.floor(side / 2),\r\n            sw = imageData.width,\r\n            sh = imageData.height,\r\n            output = options.ctx.createImageData(sw, sh),\r\n            dst = output.data,\r\n            // go through the destination image pixels\r\n            alphaFac = this.opaque ? 1 : 0,\r\n            r, g, b, a, dstOff,\r\n            scx, scy, srcOff, wt,\r\n            x, y, cx, cy;\r\n\r\n        for (y = 0; y < sh; y++) {\r\n          for (x = 0; x < sw; x++) {\r\n            dstOff = (y * sw + x) * 4;\r\n            // calculate the weighed sum of the source image pixels that\r\n            // fall under the convolution matrix\r\n            r = 0; g = 0; b = 0; a = 0;\r\n\r\n            for (cy = 0; cy < side; cy++) {\r\n              for (cx = 0; cx < side; cx++) {\r\n                scy = y + cy - halfSide;\r\n                scx = x + cx - halfSide;\r\n\r\n                // eslint-disable-next-line max-depth\r\n                if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\r\n                  continue;\r\n                }\r\n\r\n                srcOff = (scy * sw + scx) * 4;\r\n                wt = weights[cy * side + cx];\r\n\r\n                r += data[srcOff] * wt;\r\n                g += data[srcOff + 1] * wt;\r\n                b += data[srcOff + 2] * wt;\r\n                // eslint-disable-next-line max-depth\r\n                if (!alphaFac) {\r\n                  a += data[srcOff + 3] * wt;\r\n                }\r\n              }\r\n            }\r\n            dst[dstOff] = r;\r\n            dst[dstOff + 1] = g;\r\n            dst[dstOff + 2] = b;\r\n            if (!alphaFac) {\r\n              dst[dstOff + 3] = a;\r\n            }\r\n            else {\r\n              dst[dstOff + 3] = data[dstOff + 3];\r\n            }\r\n          }\r\n        }\r\n        options.imageData = output;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uMatrix: gl.getUniformLocation(program, 'uMatrix'),\r\n          uOpaque: gl.getUniformLocation(program, 'uOpaque'),\r\n          uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\r\n          uSize: gl.getUniformLocation(program, 'uSize'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return extend(this.callSuper('toObject'), {\r\n          opaque: this.opaque,\r\n          matrix: this.matrix\r\n        });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\r\n     */\r\n    fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Grayscale image filter class\r\n     * @class fabric.Image.filters.Grayscale\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Grayscale();\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Grayscale',\r\n\r\n      fragmentSource: {\r\n        average: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'float average = (color.r + color.b + color.g) / 3.0;\\n' +\r\n            'gl_FragColor = vec4(average, average, average, color.a);\\n' +\r\n          '}',\r\n        lightness: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform int uMode;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\r\n            'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\r\n            'gl_FragColor = vec4(average, average, average, col.a);\\n' +\r\n          '}',\r\n        luminosity: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform int uMode;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\r\n            'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\r\n            'gl_FragColor = vec4(average, average, average, col.a);\\n' +\r\n          '}',\r\n      },\r\n\r\n\r\n      /**\r\n       * Grayscale mode, between 'average', 'lightness', 'luminosity'\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      mode: 'average',\r\n\r\n      mainParameter: 'mode',\r\n\r\n      /**\r\n       * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i,\r\n            len = data.length, value,\r\n            mode = this.mode;\r\n        for (i = 0; i < len; i += 4) {\r\n          if (mode === 'average') {\r\n            value = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          }\r\n          else if (mode === 'lightness') {\r\n            value = (Math.min(data[i], data[i + 1], data[i + 2]) +\r\n              Math.max(data[i], data[i + 1], data[i + 2])) / 2;\r\n          }\r\n          else if (mode === 'luminosity') {\r\n            value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\r\n          }\r\n          data[i] = value;\r\n          data[i + 1] = value;\r\n          data[i + 2] = value;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var cacheKey = this.type + '_' + this.mode;\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          var shaderSource = this.fragmentSource[this.mode];\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uMode: gl.getUniformLocation(program, 'uMode'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        // default average mode.\r\n        var mode = 1;\r\n        gl.uniform1i(uniformLocations.uMode, mode);\r\n      },\r\n\r\n      /**\r\n       * Grayscale filter isNeutralState implementation\r\n       * The filter is never neutral\r\n       * on the image\r\n       **/\r\n      isNeutralState: function() {\r\n        return false;\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\r\n     */\r\n    fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Invert filter class\r\n     * @class fabric.Image.filters.Invert\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Invert();\r\n     * object.filters.push(filter);\r\n     * object.applyFilters(canvas.renderAll.bind(canvas));\r\n     */\r\n    filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Invert',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform int uInvert;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'if (uInvert == 1) {\\n' +\r\n            'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Filter invert. if false, does nothing\r\n       * @param {Boolean} invert\r\n       * @default\r\n       */\r\n      invert: true,\r\n\r\n      mainParameter: 'invert',\r\n\r\n      /**\r\n       * Apply the Invert operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i,\r\n            len = data.length;\r\n        for (i = 0; i < len; i += 4) {\r\n          data[i] = 255 - data[i];\r\n          data[i + 1] = 255 - data[i + 1];\r\n          data[i + 2] = 255 - data[i + 2];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Invert filter isNeutralState implementation\r\n       * Used only in image applyFilters to discard filters that will not have an effect\r\n       * on the image\r\n       * @param {Object} options\r\n       **/\r\n      isNeutralState: function() {\r\n        return !this.invert;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uInvert: gl.getUniformLocation(program, 'uInvert'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1i(uniformLocations.uInvert, this.invert);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\r\n     */\r\n    fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Noise filter class\r\n     * @class fabric.Image.filters.Noise\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Noise({\r\n     *   noise: 700\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Noise',\r\n\r\n      /**\r\n       * Fragment source for the noise program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'uniform float uNoise;\\n' +\r\n        'uniform float uSeed;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'float rand(vec2 co, float seed, float vScale) {\\n' +\r\n          'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\r\n        '}\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'noise',\r\n\r\n      /**\r\n       * Noise value, from\r\n       * @param {Number} noise\r\n       * @default\r\n       */\r\n      noise: 0,\r\n\r\n      /**\r\n       * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        if (this.noise === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i, len = data.length,\r\n            noise = this.noise, rand;\r\n\r\n        for (i = 0, len = data.length; i < len; i += 4) {\r\n\r\n          rand = (0.5 - Math.random()) * noise;\r\n\r\n          data[i] += rand;\r\n          data[i + 1] += rand;\r\n          data[i + 2] += rand;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uNoise: gl.getUniformLocation(program, 'uNoise'),\r\n          uSeed: gl.getUniformLocation(program, 'uSeed'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\r\n        gl.uniform1f(uniformLocations.uSeed, Math.random());\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return extend(this.callSuper('toObject'), {\r\n          noise: this.noise\r\n        });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\r\n     */\r\n    fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Pixelate filter class\r\n     * @class fabric.Image.filters.Pixelate\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Pixelate({\r\n     *   blocksize: 8\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Pixelate',\r\n\r\n      blocksize: 4,\r\n\r\n      mainParameter: 'blocksize',\r\n\r\n      /**\r\n       * Fragment source for the Pixelate program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uBlocksize;\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'float blockW = uBlocksize * uStepW;\\n' +\r\n          'float blockH = uBlocksize * uStepW;\\n' +\r\n          'int posX = int(vTexCoord.x / blockW);\\n' +\r\n          'int posY = int(vTexCoord.y / blockH);\\n' +\r\n          'float fposX = float(posX);\\n' +\r\n          'float fposY = float(posY);\\n' +\r\n          'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\r\n          'vec4 color = texture2D(uTexture, squareCoords);\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data,\r\n            iLen = imageData.height,\r\n            jLen = imageData.width,\r\n            index, i, j, r, g, b, a,\r\n            _i, _j, _iLen, _jLen;\r\n\r\n        for (i = 0; i < iLen; i += this.blocksize) {\r\n          for (j = 0; j < jLen; j += this.blocksize) {\r\n\r\n            index = (i * 4) * jLen + (j * 4);\r\n\r\n            r = data[index];\r\n            g = data[index + 1];\r\n            b = data[index + 2];\r\n            a = data[index + 3];\r\n\r\n            _iLen = Math.min(i + this.blocksize, iLen);\r\n            _jLen = Math.min(j + this.blocksize, jLen);\r\n            for (_i = i; _i < _iLen; _i++) {\r\n              for (_j = j; _j < _jLen; _j++) {\r\n                index = (_i * 4) * jLen + (_j * 4);\r\n                data[index] = r;\r\n                data[index + 1] = g;\r\n                data[index + 2] = b;\r\n                data[index + 3] = a;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Indicate when the filter is not gonna apply changes to the image\r\n       **/\r\n      isNeutralState: function() {\r\n        return this.blocksize === 1;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\r\n          uStepW: gl.getUniformLocation(program, 'uStepW'),\r\n          uStepH: gl.getUniformLocation(program, 'uStepH'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\r\n     */\r\n    fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Remove white filter class\r\n     * @class fabric.Image.filters.RemoveColor\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.RemoveColor({\r\n     *   threshold: 0.2,\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'RemoveColor',\r\n\r\n      /**\r\n       * Color to remove, in any format understood by fabric.Color.\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      color: '#FFFFFF',\r\n\r\n      /**\r\n       * Fragment source for the brightness program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec4 uLow;\\n' +\r\n        'uniform vec4 uHigh;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\r\n          'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\r\n            'gl_FragColor.a = 0.0;\\n' +\r\n          '}\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * distance to actual color, as value up or down from each r,g,b\r\n       * between 0 and 1\r\n       **/\r\n      distance: 0.02,\r\n\r\n      /**\r\n       * For color to remove inside distance, use alpha channel for a smoother deletion\r\n       * NOT IMPLEMENTED YET\r\n       **/\r\n      useAlpha: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.RemoveWhite.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Number} [options.color=#RRGGBB] Threshold value\r\n       * @param {Number} [options.distance=10] Distance value\r\n       */\r\n\r\n      /**\r\n       * Applies filter to canvas element\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i,\r\n            distance = this.distance * 255,\r\n            r, g, b,\r\n            source = new fabric.Color(this.color).getSource(),\r\n            lowC = [\r\n              source[0] - distance,\r\n              source[1] - distance,\r\n              source[2] - distance,\r\n            ],\r\n            highC = [\r\n              source[0] + distance,\r\n              source[1] + distance,\r\n              source[2] + distance,\r\n            ];\r\n\r\n\r\n        for (i = 0; i < data.length; i += 4) {\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n\r\n          if (r > lowC[0] &&\r\n              g > lowC[1] &&\r\n              b > lowC[2] &&\r\n              r < highC[0] &&\r\n              g < highC[1] &&\r\n              b < highC[2]) {\r\n            data[i + 3] = 0;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uLow: gl.getUniformLocation(program, 'uLow'),\r\n          uHigh: gl.getUniformLocation(program, 'uHigh'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var source = new fabric.Color(this.color).getSource(),\r\n            distance = parseFloat(this.distance),\r\n            lowC = [\r\n              0 + source[0] / 255 - distance,\r\n              0 + source[1] / 255 - distance,\r\n              0 + source[2] / 255 - distance,\r\n              1\r\n            ],\r\n            highC = [\r\n              source[0] / 255 + distance,\r\n              source[1] / 255 + distance,\r\n              source[2] / 255 + distance,\r\n              1\r\n            ];\r\n        gl.uniform4fv(uniformLocations.uLow, lowC);\r\n        gl.uniform4fv(uniformLocations.uHigh, highC);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return extend(this.callSuper('toObject'), {\r\n          color: this.color,\r\n          distance: this.distance\r\n        });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\r\n     */\r\n    fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    var matrices = {\r\n      Brownie: [\r\n        0.59970,0.34553,-0.27082,0,0.186,\r\n        -0.03770,0.86095,0.15059,0,-0.1449,\r\n        0.24113,-0.07441,0.44972,0,-0.02965,\r\n        0,0,0,1,0\r\n      ],\r\n      Vintage: [\r\n        0.62793,0.32021,-0.03965,0,0.03784,\r\n        0.02578,0.64411,0.03259,0,0.02926,\r\n        0.04660,-0.08512,0.52416,0,0.02023,\r\n        0,0,0,1,0\r\n      ],\r\n      Kodachrome: [\r\n        1.12855,-0.39673,-0.03992,0,0.24991,\r\n        -0.16404,1.08352,-0.05498,0,0.09698,\r\n        -0.16786,-0.56034,1.60148,0,0.13972,\r\n        0,0,0,1,0\r\n      ],\r\n      Technicolor: [\r\n        1.91252,-0.85453,-0.09155,0,0.04624,\r\n        -0.30878,1.76589,-0.10601,0,-0.27589,\r\n        -0.23110,-0.75018,1.84759,0,0.12137,\r\n        0,0,0,1,0\r\n      ],\r\n      Polaroid: [\r\n        1.438,-0.062,-0.062,0,0,\r\n        -0.122,1.378,-0.122,0,0,\r\n        -0.016,-0.016,1.483,0,0,\r\n        0,0,0,1,0\r\n      ],\r\n      Sepia: [\r\n        0.393, 0.769, 0.189, 0, 0,\r\n        0.349, 0.686, 0.168, 0, 0,\r\n        0.272, 0.534, 0.131, 0, 0,\r\n        0, 0, 0, 1, 0\r\n      ],\r\n      BlackWhite: [\r\n        1.5, 1.5, 1.5, 0, -1,\r\n        1.5, 1.5, 1.5, 0, -1,\r\n        1.5, 1.5, 1.5, 0, -1,\r\n        0, 0, 0, 1, 0,\r\n      ]\r\n    };\r\n\r\n    for (var key in matrices) {\r\n      filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\r\n\r\n        /**\r\n         * Filter type\r\n         * @param {String} type\r\n         * @default\r\n         */\r\n        type: key,\r\n\r\n        /**\r\n         * Colormatrix for the effect\r\n         * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\r\n         * outside the -1, 1 range.\r\n         * @param {Array} matrix array of 20 numbers.\r\n         * @default\r\n         */\r\n        matrix: matrices[key],\r\n\r\n        /**\r\n         * Lock the matrix export for this kind of static, parameter less filters.\r\n         */\r\n        mainParameter: false,\r\n        /**\r\n         * Lock the colormatrix on the color part, skipping alpha\r\n         */\r\n        colorsOnly: true,\r\n\r\n      });\r\n      fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n    }\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Color Blend filter class\r\n     * @class fabric.Image.filter.BlendColor\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @example\r\n     * var filter = new fabric.Image.filters.BlendColor({\r\n     *  color: '#000',\r\n     *  mode: 'multiply'\r\n     * });\r\n     *\r\n     * var filter = new fabric.Image.filters.BlendImage({\r\n     *  image: fabricImageObject,\r\n     *  mode: 'multiply',\r\n     *  alpha: 0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n\r\n    filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\r\n      type: 'BlendColor',\r\n\r\n      /**\r\n       * Color to make the blend operation with. default to a reddish color since black or white\r\n       * gives always strong result.\r\n       **/\r\n      color: '#F95C63',\r\n\r\n      /**\r\n       * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\r\n       * darken, lighten, overlay, exclusion, tint.\r\n       **/\r\n      mode: 'multiply',\r\n\r\n      /**\r\n       * alpha value. represent the strength of the blend color operation.\r\n       **/\r\n      alpha: 1,\r\n\r\n      /**\r\n       * Fragment source for the Multiply program\r\n       */\r\n      fragmentSource: {\r\n        multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\r\n        screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\r\n        add: 'gl_FragColor.rgb += uColor.rgb;\\n',\r\n        diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\r\n        subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\r\n        lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\r\n        darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\r\n        exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\r\n        overlay: 'if (uColor.r < 0.5) {\\n' +\r\n            'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\r\n          '}\\n' +\r\n          'if (uColor.g < 0.5) {\\n' +\r\n            'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\r\n          '}\\n' +\r\n          'if (uColor.b < 0.5) {\\n' +\r\n            'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\r\n          '}\\n',\r\n        tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\r\n          'gl_FragColor.rgb += uColor.rgb;\\n',\r\n      },\r\n\r\n      /**\r\n       * build the fragment source for the filters, joining the common part with\r\n       * the specific one.\r\n       * @param {String} mode the mode of the filter, a key of this.fragmentSource\r\n       * @return {String} the source to be compiled\r\n       * @private\r\n       */\r\n      buildSource: function(mode) {\r\n        return 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform vec4 uColor;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'if (color.a > 0.0) {\\n' +\r\n              this.fragmentSource[mode] +\r\n            '}\\n' +\r\n          '}';\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var cacheKey = this.type + '_' + this.mode, shaderSource;\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          shaderSource = this.buildSource(this.mode);\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      /**\r\n       * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, iLen = data.length,\r\n            tr, tg, tb,\r\n            r, g, b,\r\n            source, alpha1 = 1 - this.alpha;\r\n\r\n        source = new fabric.Color(this.color).getSource();\r\n        tr = source[0] * this.alpha;\r\n        tg = source[1] * this.alpha;\r\n        tb = source[2] * this.alpha;\r\n\r\n        for (var i = 0; i < iLen; i += 4) {\r\n\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n\r\n          switch (this.mode) {\r\n            case 'multiply':\r\n              data[i] = r * tr / 255;\r\n              data[i + 1] = g * tg / 255;\r\n              data[i + 2] = b * tb / 255;\r\n              break;\r\n            case 'screen':\r\n              data[i] = 255 - (255 - r) * (255 - tr) / 255;\r\n              data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\r\n              data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\r\n              break;\r\n            case 'add':\r\n              data[i] = r + tr;\r\n              data[i + 1] = g + tg;\r\n              data[i + 2] = b + tb;\r\n              break;\r\n            case 'diff':\r\n            case 'difference':\r\n              data[i] = Math.abs(r - tr);\r\n              data[i + 1] = Math.abs(g - tg);\r\n              data[i + 2] = Math.abs(b - tb);\r\n              break;\r\n            case 'subtract':\r\n              data[i] = r - tr;\r\n              data[i + 1] = g - tg;\r\n              data[i + 2] = b - tb;\r\n              break;\r\n            case 'darken':\r\n              data[i] = Math.min(r, tr);\r\n              data[i + 1] = Math.min(g, tg);\r\n              data[i + 2] = Math.min(b, tb);\r\n              break;\r\n            case 'lighten':\r\n              data[i] = Math.max(r, tr);\r\n              data[i + 1] = Math.max(g, tg);\r\n              data[i + 2] = Math.max(b, tb);\r\n              break;\r\n            case 'overlay':\r\n              data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\r\n              data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\r\n              data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\r\n              break;\r\n            case 'exclusion':\r\n              data[i] = tr + r - ((2 * tr * r) / 255);\r\n              data[i + 1] = tg + g - ((2 * tg * g) / 255);\r\n              data[i + 2] = tb + b - ((2 * tb * b) / 255);\r\n              break;\r\n            case 'tint':\r\n              data[i] = tr + r * alpha1;\r\n              data[i + 1] = tg + g * alpha1;\r\n              data[i + 2] = tb + b * alpha1;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uColor: gl.getUniformLocation(program, 'uColor'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var source = new fabric.Color(this.color).getSource();\r\n        source[0] = this.alpha * source[0] / 255;\r\n        source[1] = this.alpha * source[1] / 255;\r\n        source[2] = this.alpha * source[2] / 255;\r\n        source[3] = this.alpha;\r\n        gl.uniform4fv(uniformLocations.uColor, source);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return {\r\n          type: this.type,\r\n          color: this.color,\r\n          mode: this.mode,\r\n          alpha: this.alpha\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\r\n     */\r\n    fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Image Blend filter class\r\n     * @class fabric.Image.filter.BlendImage\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @example\r\n     * var filter = new fabric.Image.filters.BlendColor({\r\n     *  color: '#000',\r\n     *  mode: 'multiply'\r\n     * });\r\n     *\r\n     * var filter = new fabric.Image.filters.BlendImage({\r\n     *  image: fabricImageObject,\r\n     *  mode: 'multiply',\r\n     *  alpha: 0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n\r\n    filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\r\n      type: 'BlendImage',\r\n\r\n      /**\r\n       * Color to make the blend operation with. default to a reddish color since black or white\r\n       * gives always strong result.\r\n       **/\r\n      image: null,\r\n\r\n      /**\r\n       * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\r\n       * darken, lighten, overlay, exclusion, tint.\r\n       **/\r\n      mode: 'multiply',\r\n\r\n      /**\r\n       * alpha value. represent the strength of the blend image operation.\r\n       * not implemented.\r\n       **/\r\n      alpha: 1,\r\n\r\n      vertexSource: 'attribute vec2 aPosition;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'varying vec2 vTexCoord2;\\n' +\r\n        'uniform mat3 uTransformMatrix;\\n' +\r\n        'void main() {\\n' +\r\n          'vTexCoord = aPosition;\\n' +\r\n          'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\r\n          'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Fragment source for the Multiply program\r\n       */\r\n      fragmentSource: {\r\n        multiply: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform sampler2D uImage;\\n' +\r\n          'uniform vec4 uColor;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'varying vec2 vTexCoord2;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\r\n            'color.rgba *= color2.rgba;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        mask: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform sampler2D uImage;\\n' +\r\n          'uniform vec4 uColor;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'varying vec2 vTexCoord2;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\r\n            'color.a = color2.a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var cacheKey = this.type + '_' + this.mode;\r\n        var shaderSource = this.fragmentSource[this.mode];\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      applyToWebGL: function(options) {\r\n        // load texture to blend.\r\n        var gl = options.context,\r\n            texture = this.createTexture(options.filterBackend, this.image);\r\n        this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\r\n        this.callSuper('applyToWebGL', options);\r\n        this.unbindAdditionalTexture(gl, gl.TEXTURE1);\r\n      },\r\n\r\n      createTexture: function(backend, image) {\r\n        return backend.getCachedTexture(image.cacheKey, image._element);\r\n      },\r\n\r\n      /**\r\n       * Calculate a transformMatrix to adapt the image to blend over\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      calculateMatrix: function() {\r\n        var image = this.image,\r\n            width = image._element.width,\r\n            height = image._element.height;\r\n        return [\r\n          1 / image.scaleX, 0, 0,\r\n          0, 1 / image.scaleY, 0,\r\n          -image.left / width, -image.top / height, 1\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            resources = options.filterBackend.resources,\r\n            data = imageData.data, iLen = data.length,\r\n            width = imageData.width,\r\n            height = imageData.height,\r\n            tr, tg, tb, ta,\r\n            r, g, b, a,\r\n            canvas1, context, image = this.image, blendData;\r\n\r\n        if (!resources.blendImage) {\r\n          resources.blendImage = fabric.util.createCanvasElement();\r\n        }\r\n        canvas1 = resources.blendImage;\r\n        context = canvas1.getContext('2d');\r\n        if (canvas1.width !== width || canvas1.height !== height) {\r\n          canvas1.width = width;\r\n          canvas1.height = height;\r\n        }\r\n        else {\r\n          context.clearRect(0, 0, width, height);\r\n        }\r\n        context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\r\n        context.drawImage(image._element, 0, 0, width, height);\r\n        blendData = context.getImageData(0, 0, width, height).data;\r\n        for (var i = 0; i < iLen; i += 4) {\r\n\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n          a = data[i + 3];\r\n\r\n          tr = blendData[i];\r\n          tg = blendData[i + 1];\r\n          tb = blendData[i + 2];\r\n          ta = blendData[i + 3];\r\n\r\n          switch (this.mode) {\r\n            case 'multiply':\r\n              data[i] = r * tr / 255;\r\n              data[i + 1] = g * tg / 255;\r\n              data[i + 2] = b * tb / 255;\r\n              data[i + 3] = a * ta / 255;\r\n              break;\r\n            case 'mask':\r\n              data[i + 3] = ta;\r\n              break;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\r\n          uImage: gl.getUniformLocation(program, 'uImage'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var matrix = this.calculateMatrix();\r\n        gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\r\n        gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return {\r\n          type: this.type,\r\n          image: this.image && this.image.toObject(),\r\n          mode: this.mode,\r\n          alpha: this.alpha\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} callback to be invoked after filter creation\r\n     * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\r\n     */\r\n    fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\r\n      fabric.Image.fromObject(object.image, function(image) {\r\n        var options = fabric.util.object.clone(object);\r\n        options.image = image;\r\n        callback(new fabric.Image.filters.BlendImage(options));\r\n      });\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }), \r\n        pow = Math.pow, floor = Math.floor,\r\n        sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\r\n        ceil = Math.ceil,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Resize image filter class\r\n     * @class fabric.Image.filters.Resize\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Resize();\r\n     * object.filters.push(filter);\r\n     * object.applyFilters(canvas.renderAll.bind(canvas));\r\n     */\r\n    filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Resize',\r\n\r\n      /**\r\n       * Resize type\r\n       * for webgl resizyType is just lanczos, for canvas2d can be:\r\n       * bilinear, hermite, sliceHacl, lanczos.\r\n       * @param {String} resizeType\r\n       * @default\r\n       */\r\n      resizeType: 'hermite',\r\n\r\n      /**\r\n       * Scale factor for resizing, x axis\r\n       * @param {Number} scaleX\r\n       * @default\r\n       */\r\n      scaleX: 1,\r\n\r\n      /**\r\n       * Scale factor for resizing, y axis\r\n       * @param {Number} scaleY\r\n       * @default\r\n       */\r\n      scaleY: 1,\r\n\r\n      /**\r\n       * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\r\n       * @param {Number} lanczosLobes\r\n       * @default\r\n       */\r\n      lanczosLobes: 3,\r\n\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uDelta: gl.getUniformLocation(program, 'uDelta'),\r\n          uTaps: gl.getUniformLocation(program, 'uTaps'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\r\n        gl.uniform1fv(uniformLocations.uTaps, this.taps);\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          var fragmentShader = this.generateShader(filterWindow);\r\n          options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      getFilterWindow: function() {\r\n        var scale = this.tempScale;\r\n        return Math.ceil(this.lanczosLobes / scale);\r\n      },\r\n\r\n      getTaps: function() {\r\n        var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\r\n            filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\r\n        for (var i = 1; i <= filterWindow; i++) {\r\n          taps[i - 1] = lobeFunction(i * scale);\r\n        }\r\n        return taps;\r\n      },\r\n\r\n      /**\r\n       * Generate vertex and shader sources from the necessary steps numbers\r\n       * @param {Number} filterWindow\r\n       */\r\n      generateShader: function(filterWindow) {\r\n        var offsets = new Array(filterWindow),\r\n            fragmentShader = this.fragmentSourceTOP, filterWindow;\r\n\r\n        for (var i = 1; i <= filterWindow; i++) {\r\n          offsets[i - 1] = i + '.0 * uDelta';\r\n        }\r\n\r\n        fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\r\n        fragmentShader += 'void main() {\\n';\r\n        fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\r\n        fragmentShader += '  float sum = 1.0;\\n';\r\n\r\n        offsets.forEach(function(offset, i) {\r\n          fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\r\n          fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\r\n          fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\r\n        });\r\n        fragmentShader += '  gl_FragColor = color / sum;\\n';\r\n        fragmentShader += '}';\r\n        return fragmentShader;\r\n      },\r\n\r\n      fragmentSourceTOP: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec2 uDelta;\\n' +\r\n        'varying vec2 vTexCoord;\\n',\r\n\r\n      /**\r\n       * Apply the resize filter to the image\r\n       * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n       *\r\n       * @param {Object} options\r\n       * @param {Number} options.passes The number of filters remaining to be executed\r\n       * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n       * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n       * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      applyTo: function(options) {\r\n        if (options.webgl) {\r\n          options.passes++;\r\n          this.width = options.sourceWidth;\r\n          this.horizontal = true;\r\n          this.dW = Math.round(this.width * this.scaleX);\r\n          this.dH = options.sourceHeight;\r\n          this.tempScale = this.dW / this.width;\r\n          this.taps = this.getTaps();\r\n          options.destinationWidth = this.dW;\r\n          this._setupFrameBuffer(options);\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n          options.sourceWidth = options.destinationWidth;\r\n\r\n          this.height = options.sourceHeight;\r\n          this.horizontal = false;\r\n          this.dH = Math.round(this.height * this.scaleY);\r\n          this.tempScale = this.dH / this.height;\r\n          this.taps = this.getTaps();\r\n          options.destinationHeight = this.dH;\r\n          this._setupFrameBuffer(options);\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n          options.sourceHeight = options.destinationHeight;\r\n        }\r\n        else {\r\n          this.applyTo2d(options);\r\n        }\r\n      },\r\n\r\n      isNeutralState: function() {\r\n        return this.scaleX === 1 && this.scaleY === 1;\r\n      },\r\n\r\n      lanczosCreate: function(lobes) {\r\n        return function(x) {\r\n          if (x >= lobes || x <= -lobes) {\r\n            return 0.0;\r\n          }\r\n          if (x < 1.19209290E-07 && x > -1.19209290E-07) {\r\n            return 1.0;\r\n          }\r\n          x *= Math.PI;\r\n          var xx = x / lobes;\r\n          return (sin(x) / x) * sin(xx) / xx;\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Applies filter to canvas element\r\n       * @memberOf fabric.Image.filters.Resize.prototype\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} scaleX\r\n       * @param {Number} scaleY\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            scaleX = this.scaleX,\r\n            scaleY = this.scaleY;\r\n\r\n        this.rcpScaleX = 1 / scaleX;\r\n        this.rcpScaleY = 1 / scaleY;\r\n\r\n        var oW = imageData.width, oH = imageData.height,\r\n            dW = round(oW * scaleX), dH = round(oH * scaleY),\r\n            newData;\r\n\r\n        if (this.resizeType === 'sliceHack') {\r\n          newData = this.sliceByTwo(options, oW, oH, dW, dH);\r\n        }\r\n        else if (this.resizeType === 'hermite') {\r\n          newData = this.hermiteFastResize(options, oW, oH, dW, dH);\r\n        }\r\n        else if (this.resizeType === 'bilinear') {\r\n          newData = this.bilinearFiltering(options, oW, oH, dW, dH);\r\n        }\r\n        else if (this.resizeType === 'lanczos') {\r\n          newData = this.lanczosResize(options, oW, oH, dW, dH);\r\n        }\r\n        options.imageData = newData;\r\n      },\r\n\r\n      /**\r\n       * Filter sliceByTwo\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      sliceByTwo: function(options, oW, oH, dW, dH) {\r\n        var imageData = options.imageData,\r\n            mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\r\n            stepH = oH * mult, resources = fabric.filterBackend.resources,\r\n            tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\r\n        if (!resources.sliceByTwo) {\r\n          resources.sliceByTwo = document.createElement('canvas');\r\n        }\r\n        tmpCanvas = resources.sliceByTwo;\r\n        if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\r\n          tmpCanvas.width = oW * 1.5;\r\n          tmpCanvas.height = oH;\r\n        }\r\n        ctx = tmpCanvas.getContext('2d');\r\n        ctx.clearRect(0, 0, oW * 1.5, oH);\r\n        ctx.putImageData(imageData, 0, 0);\r\n\r\n        dW = floor(dW);\r\n        dH = floor(dH);\r\n\r\n        while (!doneW || !doneH) {\r\n          oW = stepW;\r\n          oH = stepH;\r\n          if (dW < floor(stepW * mult)) {\r\n            stepW = floor(stepW * mult);\r\n          }\r\n          else {\r\n            stepW = dW;\r\n            doneW = true;\r\n          }\r\n          if (dH < floor(stepH * mult)) {\r\n            stepH = floor(stepH * mult);\r\n          }\r\n          else {\r\n            stepH = dH;\r\n            doneH = true;\r\n          }\r\n          ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\r\n          sX = dX;\r\n          sY = dY;\r\n          dY += stepH;\r\n        }\r\n        return ctx.getImageData(sX, sY, dW, dH);\r\n      },\r\n\r\n      /**\r\n       * Filter lanczosResize\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      lanczosResize: function(options, oW, oH, dW, dH) {\r\n\r\n        function process(u) {\r\n          var v, i, weight, idx, a, red, green,\r\n              blue, alpha, fX, fY;\r\n          center.x = (u + 0.5) * ratioX;\r\n          icenter.x = floor(center.x);\r\n          for (v = 0; v < dH; v++) {\r\n            center.y = (v + 0.5) * ratioY;\r\n            icenter.y = floor(center.y);\r\n            a = 0; red = 0; green = 0; blue = 0; alpha = 0;\r\n            for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\r\n              if (i < 0 || i >= oW) {\r\n                continue;\r\n              }\r\n              fX = floor(1000 * abs(i - center.x));\r\n              if (!cacheLanc[fX]) {\r\n                cacheLanc[fX] = { };\r\n              }\r\n              for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\r\n                if (j < 0 || j >= oH) {\r\n                  continue;\r\n                }\r\n                fY = floor(1000 * abs(j - center.y));\r\n                if (!cacheLanc[fX][fY]) {\r\n                  cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\r\n                }\r\n                weight = cacheLanc[fX][fY];\r\n                if (weight > 0) {\r\n                  idx = (j * oW + i) * 4;\r\n                  a += weight;\r\n                  red += weight * srcData[idx];\r\n                  green += weight * srcData[idx + 1];\r\n                  blue += weight * srcData[idx + 2];\r\n                  alpha += weight * srcData[idx + 3];\r\n                }\r\n              }\r\n            }\r\n            idx = (v * dW + u) * 4;\r\n            destData[idx] = red / a;\r\n            destData[idx + 1] = green / a;\r\n            destData[idx + 2] = blue / a;\r\n            destData[idx + 3] = alpha / a;\r\n          }\r\n\r\n          if (++u < dW) {\r\n            return process(u);\r\n          }\r\n          else {\r\n            return destImg;\r\n          }\r\n        }\r\n\r\n        var srcData = options.imageData.data,\r\n            destImg = options.ctx.createImageData(dW, dH),\r\n            destData = destImg.data,\r\n            lanczos = this.lanczosCreate(this.lanczosLobes),\r\n            ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\r\n            rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\r\n            range2X = ceil(ratioX * this.lanczosLobes / 2),\r\n            range2Y = ceil(ratioY * this.lanczosLobes / 2),\r\n            cacheLanc = { }, center = { }, icenter = { };\r\n\r\n        return process(0);\r\n      },\r\n\r\n      /**\r\n       * bilinearFiltering\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      bilinearFiltering: function(options, oW, oH, dW, dH) {\r\n        var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\r\n            color, offset = 0, origPix, ratioX = this.rcpScaleX,\r\n            ratioY = this.rcpScaleY,\r\n            w4 = 4 * (oW - 1), img = options.imageData,\r\n            pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\r\n            destPixels = destImage.data;\r\n        for (i = 0; i < dH; i++) {\r\n          for (j = 0; j < dW; j++) {\r\n            x = floor(ratioX * j);\r\n            y = floor(ratioY * i);\r\n            xDiff = ratioX * j - x;\r\n            yDiff = ratioY * i - y;\r\n            origPix = 4 * (y * oW + x);\r\n\r\n            for (chnl = 0; chnl < 4; chnl++) {\r\n              a = pixels[origPix + chnl];\r\n              b = pixels[origPix + 4 + chnl];\r\n              c = pixels[origPix + w4 + chnl];\r\n              d = pixels[origPix + w4 + 4 + chnl];\r\n              color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\r\n                      c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\r\n              destPixels[offset++] = color;\r\n            }\r\n          }\r\n        }\r\n        return destImage;\r\n      },\r\n\r\n      /**\r\n       * hermiteFastResize\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      hermiteFastResize: function(options, oW, oH, dW, dH) {\r\n        var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\r\n            ratioWHalf = ceil(ratioW / 2),\r\n            ratioHHalf = ceil(ratioH / 2),\r\n            img = options.imageData, data = img.data,\r\n            img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\r\n        for (var j = 0; j < dH; j++) {\r\n          for (var i = 0; i < dW; i++) {\r\n            var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\r\n                gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\r\n            for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\r\n              var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\r\n                  centerX = (i + 0.5) * ratioW, w0 = dy * dy;\r\n              for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\r\n                var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\r\n                    w = sqrt(w0 + dx * dx);\r\n                /* eslint-disable max-depth */\r\n                if (w > 1 && w < -1) {\r\n                  continue;\r\n                }\r\n                //hermite filter\r\n                weight = 2 * w * w * w - 3 * w * w + 1;\r\n                if (weight > 0) {\r\n                  dx = 4 * (xx + yy * oW);\r\n                  //alpha\r\n                  gxA += weight * data[dx + 3];\r\n                  weightsAlpha += weight;\r\n                  //colors\r\n                  if (data[dx + 3] < 255) {\r\n                    weight = weight * data[dx + 3] / 250;\r\n                  }\r\n                  gxR += weight * data[dx];\r\n                  gxG += weight * data[dx + 1];\r\n                  gxB += weight * data[dx + 2];\r\n                  weights += weight;\r\n                }\r\n                /* eslint-enable max-depth */\r\n              }\r\n            }\r\n            data2[x2] = gxR / weights;\r\n            data2[x2 + 1] = gxG / weights;\r\n            data2[x2 + 2] = gxB / weights;\r\n            data2[x2 + 3] = gxA / weightsAlpha;\r\n          }\r\n        }\r\n        return img2;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return {\r\n          type: this.type,\r\n          scaleX: this.scaleX,\r\n          scaleY: this.scaleY,\r\n          resizeType: this.resizeType,\r\n          lanczosLobes: this.lanczosLobes\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\r\n     */\r\n    fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Contrast filter class\r\n     * @class fabric.Image.filters.Contrast\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Contrast({\r\n     *   contrast: 40\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Contrast',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uContrast;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\r\n          'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      contrast: 0,\r\n\r\n      mainParameter: 'contrast',\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.Contrast.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\r\n       */\r\n\r\n      /**\r\n        * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\r\n        *\r\n        * @param {Object} options\r\n        * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n        */\r\n      applyTo2d: function(options) {\r\n        if (this.contrast === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData, i, len,\r\n            data = imageData.data, len = data.length,\r\n            contrast = Math.floor(this.contrast * 255),\r\n            contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n          data[i] = contrastF * (data[i] - 128) + 128;\r\n          data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\r\n          data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uContrast: gl.getUniformLocation(program, 'uContrast'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uContrast, this.contrast);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\r\n     */\r\n    fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Saturate filter class\r\n     * @class fabric.Image.filters.Saturation\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Saturation({\r\n     *   saturation: 100\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Saturation',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uSaturation;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'float rgMax = max(color.r, color.g);\\n' +\r\n          'float rgbMax = max(rgMax, color.b);\\n' +\r\n          'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\r\n          'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\r\n          'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      saturation: 0,\r\n\r\n      mainParameter: 'saturation',\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.Saturate.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\r\n       */\r\n\r\n      /**\r\n       * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        if (this.saturation === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData,\r\n            data = imageData.data, len = data.length,\r\n            adjust = -this.saturation, i, max;\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n          max = Math.max(data[i], data[i + 1], data[i + 2]);\r\n          data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\r\n          data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\r\n          data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uSaturation: gl.getUniformLocation(program, 'uSaturation'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\r\n     */\r\n    fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Blur filter class\r\n     * @class fabric.Image.filters.Blur\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Blur({\r\n     *   blur: 0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\r\n\r\n      type: 'Blur',\r\n\r\n      /*\r\n  'gl_FragColor = vec4(0.0);',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\r\n  */\r\n\r\n      /* eslint-disable max-len */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec2 uDelta;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'const float nSamples = 15.0;\\n' +\r\n        'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\r\n        'float random(vec3 scale) {\\n' +\r\n          /* use the fragment position for a different seed per-pixel */\r\n          'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\r\n        '}\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0.0);\\n' +\r\n          'float total = 0.0;\\n' +\r\n          'float offset = random(v3offset);\\n' +\r\n          'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\r\n            'float percent = (t + offset - 0.5) / nSamples;\\n' +\r\n            'float weight = 1.0 - abs(percent);\\n' +\r\n            'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\r\n            'total += weight;\\n' +\r\n          '}\\n' +\r\n          'gl_FragColor = color / total;\\n' +\r\n        '}',\r\n      /* eslint-enable max-len */\r\n\r\n      /**\r\n       * blur value, in percentage of image dimensions.\r\n       * specific to keep the image blur constant at different resolutions\r\n       * range bewteen 0 and 1.\r\n       */\r\n      blur: 0,\r\n\r\n      mainParameter: 'blur',\r\n\r\n      applyTo: function(options) {\r\n        if (options.webgl) {\r\n          // this aspectRatio is used to give the same blur to vertical and horizontal\r\n          this.aspectRatio = options.sourceWidth / options.sourceHeight;\r\n          options.passes++;\r\n          this._setupFrameBuffer(options);\r\n          this.horizontal = true;\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n          this._setupFrameBuffer(options);\r\n          this.horizontal = false;\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n        }\r\n        else {\r\n          this.applyTo2d(options);\r\n        }\r\n      },\r\n\r\n      applyTo2d: function(options) {\r\n        // paint canvasEl with current image data.\r\n        //options.ctx.putImageData(options.imageData, 0, 0);\r\n        options.imageData = this.simpleBlur(options);\r\n      },\r\n\r\n      simpleBlur: function(options) {\r\n        var resources = options.filterBackend.resources, canvas1, canvas2,\r\n            width = options.imageData.width,\r\n            height = options.imageData.height;\r\n\r\n        if (!resources.blurLayer1) {\r\n          resources.blurLayer1 = fabric.util.createCanvasElement();\r\n          resources.blurLayer2 = fabric.util.createCanvasElement();\r\n        }\r\n        canvas1 = resources.blurLayer1;\r\n        canvas2 = resources.blurLayer2;\r\n        if (canvas1.width !== width || canvas1.height !== height) {\r\n          canvas2.width = canvas1.width = width;\r\n          canvas2.height = canvas1.height = height;\r\n        }\r\n        var ctx1 = canvas1.getContext('2d'),\r\n            ctx2 = canvas2.getContext('2d'),\r\n            nSamples = 15,\r\n            random, percent, j, i,\r\n            blur = this.blur * 0.06 * 0.5;\r\n\r\n        // load first canvas\r\n        ctx1.putImageData(options.imageData, 0, 0);\r\n        ctx2.clearRect(0, 0, width, height);\r\n\r\n        for (i = -nSamples; i <= nSamples; i++) {\r\n          random = (Math.random() - 0.5) / 4;\r\n          percent = i / nSamples;\r\n          j = blur * percent * width + random;\r\n          ctx2.globalAlpha = 1 - Math.abs(percent);\r\n          ctx2.drawImage(canvas1, j, random);\r\n          ctx1.drawImage(canvas2, 0, 0);\r\n          ctx2.globalAlpha = 1;\r\n          ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        }\r\n        for (i = -nSamples; i <= nSamples; i++) {\r\n          random = (Math.random() - 0.5) / 4;\r\n          percent = i / nSamples;\r\n          j = blur * percent * height + random;\r\n          ctx2.globalAlpha = 1 - Math.abs(percent);\r\n          ctx2.drawImage(canvas1, random, j);\r\n          ctx1.drawImage(canvas2, 0, 0);\r\n          ctx2.globalAlpha = 1;\r\n          ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        }\r\n        options.ctx.drawImage(canvas1, 0, 0);\r\n        var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\r\n        ctx1.globalAlpha = 1;\r\n        ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\r\n        return newImageData;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          delta: gl.getUniformLocation(program, 'uDelta'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var delta = this.chooseRightDelta();\r\n        gl.uniform2fv(uniformLocations.delta, delta);\r\n      },\r\n\r\n      /**\r\n       * choose right value of image percentage to blur with\r\n       * @returns {Array} a numeric array with delta values\r\n       */\r\n      chooseRightDelta: function() {\r\n        var blurScale = 1, delta = [0, 0], blur;\r\n        if (this.horizontal) {\r\n          if (this.aspectRatio > 1) {\r\n            // image is wide, i want to shrink radius horizontal\r\n            blurScale = 1 / this.aspectRatio;\r\n          }\r\n        }\r\n        else {\r\n          if (this.aspectRatio < 1) {\r\n            // image is tall, i want to shrink radius vertical\r\n            blurScale = this.aspectRatio;\r\n          }\r\n        }\r\n        blur = blurScale * this.blur * 0.12;\r\n        if (this.horizontal) {\r\n          delta[0] = blur;\r\n        }\r\n        else {\r\n          delta[1] = blur;\r\n        }\r\n        return delta;\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Deserialize a JSON definition of a BlurFilter into a concrete instance.\r\n     */\r\n    filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Gamma filter class\r\n     * @class fabric.Image.filters.Gamma\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Gamma({\r\n     *   brightness: 200\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Gamma',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec3 uGamma;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'vec3 correction = (1.0 / uGamma);\\n' +\r\n          'color.r = pow(color.r, correction.r);\\n' +\r\n          'color.g = pow(color.g, correction.g);\\n' +\r\n          'color.b = pow(color.b, correction.b);\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n          'gl_FragColor.rgb *= color.a;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Gamma array value, from 0.01 to 2.2.\r\n       * @param {Array} gamma\r\n       * @default\r\n       */\r\n      gamma: [1, 1, 1],\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'gamma',\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        this.gamma = [1, 1, 1];\r\n        filters.BaseFilter.prototype.initialize.call(this, options);\r\n      },\r\n\r\n      /**\r\n       * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData, data = imageData.data,\r\n            gamma = this.gamma, len = data.length,\r\n            rInv = 1 / gamma[0], gInv = 1 / gamma[1],\r\n            bInv = 1 / gamma[2], i;\r\n\r\n        if (!this.rVals) {\r\n          // eslint-disable-next-line\r\n          this.rVals = new Uint8Array(256);\r\n          // eslint-disable-next-line\r\n          this.gVals = new Uint8Array(256);\r\n          // eslint-disable-next-line\r\n          this.bVals = new Uint8Array(256);\r\n        }\r\n\r\n        // This is an optimization - pre-compute a look-up table for each color channel\r\n        // instead of performing these pow calls for each pixel in the image.\r\n        for (i = 0, len = 256; i < len; i++) {\r\n          this.rVals[i] = Math.pow(i / 255, rInv) * 255;\r\n          this.gVals[i] = Math.pow(i / 255, gInv) * 255;\r\n          this.bVals[i] = Math.pow(i / 255, bInv) * 255;\r\n        }\r\n        for (i = 0, len = data.length; i < len; i += 4) {\r\n          data[i] = this.rVals[data[i]];\r\n          data[i + 1] = this.gVals[data[i + 1]];\r\n          data[i + 2] = this.bVals[data[i + 2]];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uGamma: gl.getUniformLocation(program, 'uGamma'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform3fv(uniformLocations.uGamma, this.gamma);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\r\n     */\r\n    fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * A container class that knows how to apply a sequence of filters to an input image.\r\n     */\r\n    filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\r\n\r\n      type: 'Composed',\r\n\r\n      /**\r\n       * A non sparse array of filters to apply\r\n       */\r\n      subFilters: [],\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        // create a new array instead mutating the prototype with push\r\n        this.subFilters = this.subFilters.slice(0);\r\n      },\r\n\r\n      /**\r\n       * Apply this container's filters to the input image provided.\r\n       *\r\n       * @param {Object} options\r\n       * @param {Number} options.passes The number of filters remaining to be applied.\r\n       */\r\n      applyTo: function(options) {\r\n        options.passes += this.subFilters.length - 1;\r\n        this.subFilters.forEach(function(filter) {\r\n          filter.applyTo(options);\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Serialize this filter into JSON.\r\n       *\r\n       * @returns {Object} A JSON representation of this filter.\r\n       */\r\n      toObject: function() {\r\n        return fabric.util.object.extend(this.callSuper('toObject'), {\r\n          subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\r\n        });\r\n      },\r\n\r\n      isNeutralState: function() {\r\n        return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\r\n     */\r\n    fabric.Image.filters.Composed.fromObject = function(object, callback) {\r\n      var filters = object.subFilters || [],\r\n          subFilters = filters.map(function(filter) {\r\n            return new fabric.Image.filters[filter.type](filter);\r\n          }),\r\n          instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\r\n      callback && callback(instance);\r\n      return instance;\r\n    };\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * HueRotation filter class\r\n     * @class fabric.Image.filters.HueRotation\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.HueRotation({\r\n     *   rotation: -0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'HueRotation',\r\n\r\n      /**\r\n       * HueRotation value, from -1 to 1.\r\n       * the unit is radians\r\n       * @param {Number} myParameter\r\n       * @default\r\n       */\r\n      rotation: 0,\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'rotation',\r\n\r\n      calculateMatrix: function() {\r\n        var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\r\n            aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\r\n        this.matrix = [\r\n          1, 0, 0, 0, 0,\r\n          0, 1, 0, 0, 0,\r\n          0, 0, 1, 0, 0,\r\n          0, 0, 0, 1, 0\r\n        ];\r\n        this.matrix[0] = cos + OneMinusCos / 3;\r\n        this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\r\n        this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\r\n        this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\r\n        this.matrix[6] = cos + aThird * OneMinusCos;\r\n        this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\r\n        this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\r\n        this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\r\n        this.matrix[12] = cos + aThird * OneMinusCos;\r\n      },\r\n\r\n      /**\r\n       * HueRotation isNeutralState implementation\r\n       * Used only in image applyFilters to discard filters that will not have an effect\r\n       * on the image\r\n       * @param {Object} options\r\n       **/\r\n      isNeutralState: function(options) {\r\n        this.calculateMatrix();\r\n        return filters.BaseFilter.prototype.isNeutralState.call(this, options);\r\n      },\r\n\r\n      /**\r\n       * Apply this filter to the input image data provided.\r\n       *\r\n       * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n       *\r\n       * @param {Object} options\r\n       * @param {Number} options.passes The number of filters remaining to be executed\r\n       * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n       * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n       * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      applyTo: function(options) {\r\n        this.calculateMatrix();\r\n        filters.BaseFilter.prototype.applyTo.call(this, options);\r\n      },\r\n\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\r\n     */\r\n    fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        clone = fabric.util.object.clone;\r\n\r\n    if (fabric.Text) {\r\n      fabric.warn('fabric.Text is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Text class\r\n     * @class fabric.Text\r\n     * @extends fabric.Object\r\n     * @return {fabric.Text} thisArg\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\r\n     * @see {@link fabric.Text#initialize} for constructor definition\r\n     */\r\n    fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\r\n\r\n      /**\r\n       * Properties which when set cause object to change dimensions\r\n       * @type Array\r\n       * @private\r\n       */\r\n      _dimensionAffectingProps: [\r\n        'fontSize',\r\n        'fontWeight',\r\n        'fontFamily',\r\n        'fontStyle',\r\n        'lineHeight',\r\n        'text',\r\n        'charSpacing',\r\n        'textAlign',\r\n        'styles',\r\n      ],\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _reNewline: /\\r?\\n/,\r\n\r\n      /**\r\n       * Use this regular expression to filter for whitespaces that is not a new line.\r\n       * Mostly used when text is 'justify' aligned.\r\n       * @private\r\n       */\r\n      _reSpacesAndTabs: /[ \\t\\r]/g,\r\n\r\n      /**\r\n       * Use this regular expression to filter for whitespace that is not a new line.\r\n       * Mostly used when text is 'justify' aligned.\r\n       * @private\r\n       */\r\n      _reSpaceAndTab: /[ \\t\\r]/,\r\n\r\n      /**\r\n       * Use this regular expression to filter consecutive groups of non spaces.\r\n       * Mostly used when text is 'justify' aligned.\r\n       * @private\r\n       */\r\n      _reWords: /\\S+/g,\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type:                 'text',\r\n\r\n      /**\r\n       * Font size (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      fontSize:             40,\r\n\r\n      /**\r\n       * Font weight (e.g. bold, normal, 400, 600, 800)\r\n       * @type {(Number|String)}\r\n       * @default\r\n       */\r\n      fontWeight:           'normal',\r\n\r\n      /**\r\n       * Font family\r\n       * @type String\r\n       * @default\r\n       */\r\n      fontFamily:           'Times New Roman',\r\n\r\n      /**\r\n       * Text decoration underline.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      underline:       false,\r\n\r\n      /**\r\n       * Text decoration overline.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      overline:       false,\r\n\r\n      /**\r\n       * Text decoration linethrough.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      linethrough:       false,\r\n\r\n      /**\r\n       * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\r\n       * \"justify-left\", \"justify-center\" or \"justify-right\".\r\n       * @type String\r\n       * @default\r\n       */\r\n      textAlign:            'left',\r\n\r\n      /**\r\n       * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\r\n       * @type String\r\n       * @default\r\n       */\r\n      fontStyle:            'normal',\r\n\r\n      /**\r\n       * Line height\r\n       * @type Number\r\n       * @default\r\n       */\r\n      lineHeight:           1.16,\r\n\r\n      /**\r\n       * Superscript schema object (minimum overlap)\r\n       * @type {Object}\r\n       * @default\r\n       */\r\n      superscript: {\r\n        size:      0.60, // fontSize factor\r\n        baseline: -0.35  // baseline-shift factor (upwards)\r\n      },\r\n\r\n      /**\r\n       * Subscript schema object (minimum overlap)\r\n       * @type {Object}\r\n       * @default\r\n       */\r\n      subscript: {\r\n        size:      0.60, // fontSize factor\r\n        baseline:  0.11  // baseline-shift factor (downwards)\r\n      },\r\n\r\n      /**\r\n       * Background color of text lines\r\n       * @type String\r\n       * @default\r\n       */\r\n      textBackgroundColor:  '',\r\n\r\n      /**\r\n       * List of properties to consider when checking if\r\n       * state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\r\n        'fontWeight',\r\n        'fontSize',\r\n        'text',\r\n        'underline',\r\n        'overline',\r\n        'linethrough',\r\n        'textAlign',\r\n        'fontStyle',\r\n        'lineHeight',\r\n        'textBackgroundColor',\r\n        'charSpacing',\r\n        'styles'),\r\n\r\n      /**\r\n       * List of properties to consider when checking if cache needs refresh\r\n       * @type Array\r\n       */\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\r\n        'fontWeight',\r\n        'fontSize',\r\n        'text',\r\n        'underline',\r\n        'overline',\r\n        'linethrough',\r\n        'textAlign',\r\n        'fontStyle',\r\n        'lineHeight',\r\n        'textBackgroundColor',\r\n        'charSpacing',\r\n        'styles'),\r\n\r\n      /**\r\n       * When defined, an object is rendered via stroke and this property specifies its color.\r\n       * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\r\n       * @type String\r\n       * @default\r\n       */\r\n      stroke:               null,\r\n\r\n      /**\r\n       * Shadow object representing shadow of this shape.\r\n       * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\r\n       * @type fabric.Shadow\r\n       * @default\r\n       */\r\n      shadow:               null,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _fontSizeFraction: 0.222,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      offsets: {\r\n        underline: 0.10,\r\n        linethrough: -0.315,\r\n        overline: -0.88\r\n      },\r\n\r\n      /**\r\n       * Text Line proportion to font Size (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      _fontSizeMult:             1.13,\r\n\r\n      /**\r\n       * additional space between characters\r\n       * expressed in thousands of em unit\r\n       * @type Number\r\n       * @default\r\n       */\r\n      charSpacing:             0,\r\n\r\n      /**\r\n       * Object containing character styles - top-level properties -> line numbers,\r\n       * 2nd-level properties - charater numbers\r\n       * @type Object\r\n       * @default\r\n       */\r\n      styles: null,\r\n\r\n      /**\r\n       * Reference to a context to measure text char or couple of chars\r\n       * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\r\n       * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\r\n       * text object created.\r\n       * @type {CanvasRenderingContext2D}\r\n       * @default\r\n       */\r\n      _measuringContext: null,\r\n\r\n      /**\r\n       * Baseline shift, stlyes only, keep at 0 for the main text object\r\n       * @type {Number}\r\n       * @default\r\n       */\r\n      deltaY: 0,\r\n\r\n      /**\r\n       * Array of properties that define a style unit (of 'styles').\r\n       * @type {Array}\r\n       * @default\r\n       */\r\n      _styleProperties: [\r\n        'stroke',\r\n        'strokeWidth',\r\n        'fill',\r\n        'fontFamily',\r\n        'fontSize',\r\n        'fontWeight',\r\n        'fontStyle',\r\n        'underline',\r\n        'overline',\r\n        'linethrough',\r\n        'deltaY',\r\n        'textBackgroundColor',\r\n      ],\r\n\r\n      /**\r\n       * contains characters bounding boxes\r\n       */\r\n      __charBounds: [],\r\n\r\n      /**\r\n       * use this size when measuring text. To avoid IE11 rounding errors\r\n       * @type {Number}\r\n       * @default\r\n       * @readonly\r\n       * @private\r\n       */\r\n      CACHE_FONT_SIZE: 400,\r\n\r\n      /**\r\n       * contains the min text width to avoid getting 0\r\n       * @type {Number}\r\n       * @default\r\n       */\r\n      MIN_TEXT_WIDTH: 2,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {String} text Text string\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Text} thisArg\r\n       */\r\n      initialize: function(text, options) {\r\n        this.styles = options ? (options.styles || { }) : { };\r\n        this.text = text;\r\n        this.__skipDimension = true;\r\n        this.callSuper('initialize', options);\r\n        this.__skipDimension = false;\r\n        this.initDimensions();\r\n        this.setCoords();\r\n        this.setupState({ propertySet: '_dimensionAffectingProps' });\r\n      },\r\n\r\n      /**\r\n       * Return a contex for measurement of text string.\r\n       * if created it gets stored for reuse\r\n       * @param {String} text Text string\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Text} thisArg\r\n       */\r\n      getMeasuringContext: function() {\r\n        // if we did not return we have to measure something.\r\n        if (!fabric._measuringContext) {\r\n          fabric._measuringContext = this.canvas && this.canvas.contextCache ||\r\n            fabric.util.createCanvasElement().getContext('2d');\r\n        }\r\n        return fabric._measuringContext;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Divides text into lines of text and lines of graphemes.\r\n       */\r\n      _splitText: function() {\r\n        var newLines = this._splitTextIntoLines(this.text);\r\n        this.textLines = newLines.lines;\r\n        this._textLines = newLines.graphemeLines;\r\n        this._unwrappedTextLines = newLines._unwrappedLines;\r\n        this._text = newLines.graphemeText;\r\n        return newLines;\r\n      },\r\n\r\n      /**\r\n       * Initialize or update text dimensions.\r\n       * Updates this.width and this.height with the proper values.\r\n       * Does not return dimensions.\r\n       */\r\n      initDimensions: function() {\r\n        if (this.__skipDimension) {\r\n          return;\r\n        }\r\n        this._splitText();\r\n        this._clearCache();\r\n        this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\r\n        if (this.textAlign.indexOf('justify') !== -1) {\r\n          // once text is measured we need to make space fatter to make justified text.\r\n          this.enlargeSpaces();\r\n        }\r\n        this.height = this.calcTextHeight();\r\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\r\n      },\r\n\r\n      /**\r\n       * Enlarge space boxes and shift the others\r\n       */\r\n      enlargeSpaces: function() {\r\n        var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\r\n            continue;\r\n          }\r\n          accumulatedSpace = 0;\r\n          line = this._textLines[i];\r\n          currentLineWidth = this.getLineWidth(i);\r\n          if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\r\n            numberOfSpaces = spaces.length;\r\n            diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\r\n            for (var j = 0, jlen = line.length; j <= jlen; j++) {\r\n              charBound = this.__charBounds[i][j];\r\n              if (this._reSpaceAndTab.test(line[j])) {\r\n                charBound.width += diffSpace;\r\n                charBound.kernedWidth += diffSpace;\r\n                charBound.left += accumulatedSpace;\r\n                accumulatedSpace += diffSpace;\r\n              }\r\n              else {\r\n                charBound.left += accumulatedSpace;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Detect if the text line is ended with an hard break\r\n       * text and itext do not have wrapping, return false\r\n       * @return {Boolean}\r\n       */\r\n      isEndOfWrapping: function(lineIndex) {\r\n        return lineIndex === this._textLines.length - 1;\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of an instance\r\n       * @return {String} String representation of text object\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Text (' + this.complexity() +\r\n          '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\r\n      },\r\n\r\n      /**\r\n       * Return the dimension and the zoom level needed to create a cache canvas\r\n       * big enough to host the object to be cached.\r\n       * @private\r\n       * @param {Object} dim.x width of object to be cached\r\n       * @param {Object} dim.y height of object to be cached\r\n       * @return {Object}.width width of canvas\r\n       * @return {Object}.height height of canvas\r\n       * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       */\r\n      _getCacheCanvasDimensions: function() {\r\n        var dims = this.callSuper('_getCacheCanvasDimensions');\r\n        var fontSize = this.fontSize;\r\n        dims.width += fontSize * dims.zoomX;\r\n        dims.height += fontSize * dims.zoomY;\r\n        return dims;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        this._setTextStyles(ctx);\r\n        this._renderTextLinesBackground(ctx);\r\n        this._renderTextDecoration(ctx, 'underline');\r\n        this._renderText(ctx);\r\n        this._renderTextDecoration(ctx, 'overline');\r\n        this._renderTextDecoration(ctx, 'linethrough');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderText: function(ctx) {\r\n        if (this.paintFirst === 'stroke') {\r\n          this._renderTextStroke(ctx);\r\n          this._renderTextFill(ctx);\r\n        }\r\n        else {\r\n          this._renderTextFill(ctx);\r\n          this._renderTextStroke(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set the font parameter of the context with the object properties or with charStyle\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} [charStyle] object with font style properties\r\n       * @param {String} [charStyle.fontFamily] Font Family\r\n       * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\r\n       * @param {String} [charStyle.fontWeight] Font weight\r\n       * @param {String} [charStyle.fontStyle] Font style (italic|normal)\r\n       */\r\n      _setTextStyles: function(ctx, charStyle, forMeasuring) {\r\n        ctx.textBaseline = 'alphabetic';\r\n        ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\r\n      },\r\n\r\n      /**\r\n       * calculate and return the text Width measuring each line.\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @return {Number} Maximum width of fabric.Text object\r\n       */\r\n      calcTextWidth: function() {\r\n        var maxWidth = this.getLineWidth(0);\r\n\r\n        for (var i = 1, len = this._textLines.length; i < len; i++) {\r\n          var currentLineWidth = this.getLineWidth(i);\r\n          if (currentLineWidth > maxWidth) {\r\n            maxWidth = currentLineWidth;\r\n          }\r\n        }\r\n        return maxWidth;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {String} line Text to render\r\n       * @param {Number} left Left position of text\r\n       * @param {Number} top Top position of text\r\n       * @param {Number} lineIndex Index of a line in a text\r\n       */\r\n      _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\r\n        this._renderChars(method, ctx, line, left, top, lineIndex);\r\n      },\r\n\r\n      /**\r\n       * Renders the text background for lines, taking care of style\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextLinesBackground: function(ctx) {\r\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\r\n          return;\r\n        }\r\n        var lineTopOffset = 0, heightOfLine,\r\n            lineLeftOffset, originalFill = ctx.fillStyle,\r\n            line, lastColor,\r\n            leftOffset = this._getLeftOffset(),\r\n            topOffset = this._getTopOffset(),\r\n            boxStart = 0, boxWidth = 0, charBox, currentColor;\r\n\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          heightOfLine = this.getHeightOfLine(i);\r\n          if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\r\n            lineTopOffset += heightOfLine;\r\n            continue;\r\n          }\r\n          line = this._textLines[i];\r\n          lineLeftOffset = this._getLineLeftOffset(i);\r\n          boxWidth = 0;\r\n          boxStart = 0;\r\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n          for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n            charBox = this.__charBounds[i][j];\r\n            currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n            if (currentColor !== lastColor) {\r\n              ctx.fillStyle = lastColor;\r\n              lastColor && ctx.fillRect(\r\n                leftOffset + lineLeftOffset + boxStart,\r\n                topOffset + lineTopOffset,\r\n                boxWidth,\r\n                heightOfLine / this.lineHeight\r\n              );\r\n              boxStart = charBox.left;\r\n              boxWidth = charBox.width;\r\n              lastColor = currentColor;\r\n            }\r\n            else {\r\n              boxWidth += charBox.kernedWidth;\r\n            }\r\n          }\r\n          if (currentColor) {\r\n            ctx.fillStyle = currentColor;\r\n            ctx.fillRect(\r\n              leftOffset + lineLeftOffset + boxStart,\r\n              topOffset + lineTopOffset,\r\n              boxWidth,\r\n              heightOfLine / this.lineHeight\r\n            );\r\n          }\r\n          lineTopOffset += heightOfLine;\r\n        }\r\n        ctx.fillStyle = originalFill;\r\n        // if there is text background color no\r\n        // other shadows should be casted\r\n        this._removeShadow(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} decl style declaration for cache\r\n       * @param {String} decl.fontFamily fontFamily\r\n       * @param {String} decl.fontStyle fontStyle\r\n       * @param {String} decl.fontWeight fontWeight\r\n       * @return {Object} reference to cache\r\n       */\r\n      getFontCache: function(decl) {\r\n        var fontFamily = decl.fontFamily.toLowerCase();\r\n        if (!fabric.charWidthsCache[fontFamily]) {\r\n          fabric.charWidthsCache[fontFamily] = { };\r\n        }\r\n        var cache = fabric.charWidthsCache[fontFamily],\r\n            cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\r\n        if (!cache[cacheProp]) {\r\n          cache[cacheProp] = { };\r\n        }\r\n        return cache[cacheProp];\r\n      },\r\n\r\n      /**\r\n       * apply all the character style to canvas for rendering\r\n       * @private\r\n       * @param {String} _char\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {Object} [decl]\r\n       */\r\n      _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\r\n\r\n        this._setFillStyles(ctx, styleDeclaration);\r\n        this._setStrokeStyles(ctx, styleDeclaration);\r\n\r\n        ctx.font = this._getFontDeclaration(styleDeclaration);\r\n      },\r\n\r\n      /**\r\n       * measure and return the width of a single character.\r\n       * possibly overridden to accommodate different measure logic or\r\n       * to hook some external lib for character measurement\r\n       * @private\r\n       * @param {String} char to be measured\r\n       * @param {Object} charStyle style of char to be measured\r\n       * @param {String} [previousChar] previous char\r\n       * @param {Object} [prevCharStyle] style of previous char\r\n       */\r\n      _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\r\n        // first i try to return from cache\r\n        var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\r\n            previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\r\n            stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\r\n            fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\r\n\r\n        if (previousChar && fontCache[previousChar] !== undefined) {\r\n          previousWidth = fontCache[previousChar];\r\n        }\r\n        if (fontCache[_char] !== undefined) {\r\n          kernedWidth = width = fontCache[_char];\r\n        }\r\n        if (stylesAreEqual && fontCache[couple] !== undefined) {\r\n          coupleWidth = fontCache[couple];\r\n          kernedWidth = coupleWidth - previousWidth;\r\n        }\r\n        if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\r\n          var ctx = this.getMeasuringContext();\r\n          // send a TRUE to specify measuring font size CACHE_FONT_SIZE\r\n          this._setTextStyles(ctx, charStyle, true);\r\n        }\r\n        if (width === undefined) {\r\n          kernedWidth = width = ctx.measureText(_char).width;\r\n          fontCache[_char] = width;\r\n        }\r\n        if (previousWidth === undefined && stylesAreEqual && previousChar) {\r\n          previousWidth = ctx.measureText(previousChar).width;\r\n          fontCache[previousChar] = previousWidth;\r\n        }\r\n        if (stylesAreEqual && coupleWidth === undefined) {\r\n          // we can measure the kerning couple and subtract the width of the previous character\r\n          coupleWidth = ctx.measureText(couple).width;\r\n          fontCache[couple] = coupleWidth;\r\n          kernedWidth = coupleWidth - previousWidth;\r\n        }\r\n        return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\r\n      },\r\n\r\n      /**\r\n       * Computes height of character at given position\r\n       * @param {Number} line the line number\r\n       * @param {Number} char the character number\r\n       * @return {Number} fontSize of the character\r\n       */\r\n      getHeightOfChar: function(line, char) {\r\n        return this.getValueOfPropertyAt(line, char, 'fontSize');\r\n      },\r\n\r\n      /**\r\n       * measure a text line measuring all characters.\r\n       * @param {Number} lineIndex line number\r\n       * @return {Number} Line width\r\n       */\r\n      measureLine: function(lineIndex) {\r\n        var lineInfo = this._measureLine(lineIndex);\r\n        if (this.charSpacing !== 0) {\r\n          lineInfo.width -= this._getWidthOfCharSpacing();\r\n        }\r\n        if (lineInfo.width < 0) {\r\n          lineInfo.width = 0;\r\n        }\r\n        return lineInfo;\r\n      },\r\n\r\n      /**\r\n       * measure every grapheme of a line, populating __charBounds\r\n       * @param {Number} lineIndex\r\n       * @return {Object} object.width total width of characters\r\n       * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\r\n       */\r\n      _measureLine: function(lineIndex) {\r\n        var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\r\n            graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\r\n\r\n        this.__charBounds[lineIndex] = lineBounds;\r\n        for (i = 0; i < line.length; i++) {\r\n          grapheme = line[i];\r\n          graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\r\n          lineBounds[i] = graphemeInfo;\r\n          width += graphemeInfo.kernedWidth;\r\n          prevGrapheme = grapheme;\r\n        }\r\n        // this latest bound box represent the last character of the line\r\n        // to simplify cursor handling in interactive mode.\r\n        lineBounds[i] = {\r\n          left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\r\n          width: 0,\r\n          kernedWidth: 0,\r\n          height: this.fontSize\r\n        };\r\n        return { width: width, numOfSpaces: numOfSpaces };\r\n      },\r\n\r\n      /**\r\n       * Measure and return the info of a single grapheme.\r\n       * needs the the info of previous graphemes already filled\r\n       * @private\r\n       * @param {String} grapheme to be measured\r\n       * @param {Number} lineIndex index of the line where the char is\r\n       * @param {Number} charIndex position in the line\r\n       * @param {String} [prevGrapheme] character preceding the one to be measured\r\n       */\r\n      _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\r\n        var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n            prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\r\n            info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\r\n            kernedWidth = info.kernedWidth,\r\n            width = info.width, charSpacing;\r\n\r\n        if (this.charSpacing !== 0) {\r\n          charSpacing = this._getWidthOfCharSpacing();\r\n          width += charSpacing;\r\n          kernedWidth += charSpacing;\r\n        }\r\n\r\n        var box = {\r\n          width: width,\r\n          left: 0,\r\n          height: style.fontSize,\r\n          kernedWidth: kernedWidth,\r\n          deltaY: style.deltaY,\r\n        };\r\n        if (charIndex > 0 && !skipLeft) {\r\n          var previousBox = this.__charBounds[lineIndex][charIndex - 1];\r\n          box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\r\n        }\r\n        return box;\r\n      },\r\n\r\n      /**\r\n       * Calculate height of line at 'lineIndex'\r\n       * @param {Number} lineIndex index of line to calculate\r\n       * @return {Number}\r\n       */\r\n      getHeightOfLine: function(lineIndex) {\r\n        if (this.__lineHeights[lineIndex]) {\r\n          return this.__lineHeights[lineIndex];\r\n        }\r\n\r\n        var line = this._textLines[lineIndex],\r\n            // char 0 is measured before the line cycle because it nneds to char\r\n            // emptylines\r\n            maxHeight = this.getHeightOfChar(lineIndex, 0);\r\n        for (var i = 1, len = line.length; i < len; i++) {\r\n          maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\r\n        }\r\n\r\n        return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\r\n      },\r\n\r\n      /**\r\n       * Calculate text box height\r\n       */\r\n      calcTextHeight: function() {\r\n        var lineHeight, height = 0;\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          lineHeight = this.getHeightOfLine(i);\r\n          height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\r\n        }\r\n        return height;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} Left offset\r\n       */\r\n      _getLeftOffset: function() {\r\n        return -this.width / 2;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} Top offset\r\n       */\r\n      _getTopOffset: function() {\r\n        return -this.height / 2;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n       */\r\n      _renderTextCommon: function(ctx, method) {\r\n        ctx.save();\r\n        var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\r\n            offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          var heightOfLine = this.getHeightOfLine(i),\r\n              maxHeight = heightOfLine / this.lineHeight,\r\n              leftOffset = this._getLineLeftOffset(i);\r\n          this._renderTextLine(\r\n            method,\r\n            ctx,\r\n            this._textLines[i],\r\n            left + leftOffset - offsets.offsetX,\r\n            top + lineHeights + maxHeight - offsets.offsetY,\r\n            i\r\n          );\r\n          lineHeights += heightOfLine;\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextFill: function(ctx) {\r\n        if (!this.fill && !this.styleHas('fill')) {\r\n          return;\r\n        }\r\n\r\n        this._renderTextCommon(ctx, 'fillText');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextStroke: function(ctx) {\r\n        if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\r\n          return;\r\n        }\r\n\r\n        if (this.shadow && !this.shadow.affectStroke) {\r\n          this._removeShadow(ctx);\r\n        }\r\n\r\n        ctx.save();\r\n        this._setLineDash(ctx, this.strokeDashArray);\r\n        ctx.beginPath();\r\n        this._renderTextCommon(ctx, 'strokeText');\r\n        ctx.closePath();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} method\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {String} line Content of the line\r\n       * @param {Number} left\r\n       * @param {Number} top\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charOffset\r\n       */\r\n      _renderChars: function(method, ctx, line, left, top, lineIndex) {\r\n        // set proper line offset\r\n        var lineHeight = this.getHeightOfLine(lineIndex),\r\n            isJustify = this.textAlign.indexOf('justify') !== -1,\r\n            actualStyle,\r\n            nextStyle,\r\n            charsToRender = '',\r\n            charBox,\r\n            boxWidth = 0,\r\n            timeToRender,\r\n            shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\r\n\r\n        ctx.save();\r\n        top -= lineHeight * this._fontSizeFraction / this.lineHeight;\r\n        if (shortCut) {\r\n          // render all the line in one pass without checking\r\n          this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\r\n          ctx.restore();\r\n          return;\r\n        }\r\n        for (var i = 0, len = line.length - 1; i <= len; i++) {\r\n          timeToRender = i === len || this.charSpacing;\r\n          charsToRender += line[i];\r\n          charBox = this.__charBounds[lineIndex][i];\r\n          if (boxWidth === 0) {\r\n            left += charBox.kernedWidth - charBox.width;\r\n            boxWidth += charBox.width;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n          if (isJustify && !timeToRender) {\r\n            if (this._reSpaceAndTab.test(line[i])) {\r\n              timeToRender = true;\r\n            }\r\n          }\r\n          if (!timeToRender) {\r\n            // if we have charSpacing, we render char by char\r\n            actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n            nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n            timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\r\n          }\r\n          if (timeToRender) {\r\n            this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\r\n            charsToRender = '';\r\n            actualStyle = nextStyle;\r\n            left += boxWidth;\r\n            boxWidth = 0;\r\n          }\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} method\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {String} _char\r\n       * @param {Number} left Left coordinate\r\n       * @param {Number} top Top coordinate\r\n       * @param {Number} lineHeight Height of the line\r\n       */\r\n      _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\r\n        var decl = this._getStyleDeclaration(lineIndex, charIndex),\r\n            fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n            shouldFill = method === 'fillText' && fullDecl.fill,\r\n            shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\r\n\r\n        if (!shouldStroke && !shouldFill) {\r\n          return;\r\n        }\r\n        decl && ctx.save();\r\n\r\n        this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\r\n\r\n        if (decl && decl.textBackgroundColor) {\r\n          this._removeShadow(ctx);\r\n        }\r\n        if (decl && decl.deltaY) {\r\n          top += decl.deltaY;\r\n        }\r\n\r\n        shouldFill && ctx.fillText(_char, left, top);\r\n        shouldStroke && ctx.strokeText(_char, left, top);\r\n        decl && ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Turns the character into a 'superior figure' (i.e. 'superscript')\r\n       * @param {Number} start selection start\r\n       * @param {Number} end selection end\r\n       * @returns {fabric.Text} thisArg\r\n       * @chainable\r\n       */\r\n      setSuperscript: function(start, end) {\r\n        return this._setScript(start, end, this.superscript);\r\n      },\r\n\r\n      /**\r\n       * Turns the character into an 'inferior figure' (i.e. 'subscript')\r\n       * @param {Number} start selection start\r\n       * @param {Number} end selection end\r\n       * @returns {fabric.Text} thisArg\r\n       * @chainable\r\n       */\r\n      setSubscript: function(start, end) {\r\n        return this._setScript(start, end, this.subscript);\r\n      },\r\n\r\n      /**\r\n       * Applies 'schema' at given position\r\n       * @private\r\n       * @param {Number} start selection start\r\n       * @param {Number} end selection end\r\n       * @param {Number} schema\r\n       * @returns {fabric.Text} thisArg\r\n       * @chainable\r\n       */\r\n      _setScript: function(start, end, schema) {\r\n        var loc = this.get2DCursorLocation(start, true),\r\n            fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\r\n            dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\r\n            style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\r\n        this.setSelectionStyles(style, start, end);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} prevStyle\r\n       * @param {Object} thisStyle\r\n       */\r\n      _hasStyleChanged: function(prevStyle, thisStyle) {\r\n        return prevStyle.fill !== thisStyle.fill ||\r\n                prevStyle.stroke !== thisStyle.stroke ||\r\n                prevStyle.strokeWidth !== thisStyle.strokeWidth ||\r\n                prevStyle.fontSize !== thisStyle.fontSize ||\r\n                prevStyle.fontFamily !== thisStyle.fontFamily ||\r\n                prevStyle.fontWeight !== thisStyle.fontWeight ||\r\n                prevStyle.fontStyle !== thisStyle.fontStyle ||\r\n                prevStyle.deltaY !== thisStyle.deltaY;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} prevStyle\r\n       * @param {Object} thisStyle\r\n       */\r\n      _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\r\n        return this._hasStyleChanged(prevStyle, thisStyle) ||\r\n          prevStyle.overline !== thisStyle.overline ||\r\n          prevStyle.underline !== thisStyle.underline ||\r\n          prevStyle.linethrough !== thisStyle.linethrough;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Number} lineIndex index text line\r\n       * @return {Number} Line left offset\r\n       */\r\n      _getLineLeftOffset: function(lineIndex) {\r\n        var lineWidth = this.getLineWidth(lineIndex);\r\n        if (this.textAlign === 'center') {\r\n          return (this.width - lineWidth) / 2;\r\n        }\r\n        if (this.textAlign === 'right') {\r\n          return this.width - lineWidth;\r\n        }\r\n        if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\r\n          return (this.width - lineWidth) / 2;\r\n        }\r\n        if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\r\n          return this.width - lineWidth;\r\n        }\r\n        return 0;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _clearCache: function() {\r\n        this.__lineWidths = [];\r\n        this.__lineHeights = [];\r\n        this.__charBounds = [];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _shouldClearDimensionCache: function() {\r\n        var shouldClear = this._forceClearCache;\r\n        shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\r\n        if (shouldClear) {\r\n          this.dirty = true;\r\n          this._forceClearCache = false;\r\n        }\r\n        return shouldClear;\r\n      },\r\n\r\n      /**\r\n       * Measure a single line given its index. Used to calculate the initial\r\n       * text bounding box. The values are calculated and stored in __lineWidths cache.\r\n       * @private\r\n       * @param {Number} lineIndex line number\r\n       * @return {Number} Line width\r\n       */\r\n      getLineWidth: function(lineIndex) {\r\n        if (this.__lineWidths[lineIndex]) {\r\n          return this.__lineWidths[lineIndex];\r\n        }\r\n\r\n        var width, line = this._textLines[lineIndex], lineInfo;\r\n\r\n        if (line === '') {\r\n          width = 0;\r\n        }\r\n        else {\r\n          lineInfo = this.measureLine(lineIndex);\r\n          width = lineInfo.width;\r\n        }\r\n        this.__lineWidths[lineIndex] = width;\r\n        return width;\r\n      },\r\n\r\n      _getWidthOfCharSpacing: function() {\r\n        if (this.charSpacing !== 0) {\r\n          return this.fontSize * this.charSpacing / 1000;\r\n        }\r\n        return 0;\r\n      },\r\n\r\n      /**\r\n       * Retrieves the value of property at given character position\r\n       * @param {Number} lineIndex the line number\r\n       * @param {Number} charIndex the charater number\r\n       * @param {String} property the property name\r\n       * @returns the value of 'property'\r\n       */\r\n      getValueOfPropertyAt: function(lineIndex, charIndex, property) {\r\n        var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\r\n        if (charStyle && typeof charStyle[property] !== 'undefined') {\r\n          return charStyle[property];\r\n        }\r\n        return this[property];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextDecoration: function(ctx, type) {\r\n        if (!this[type] && !this.styleHas(type)) {\r\n          return;\r\n        }\r\n        var heightOfLine, size, _size,\r\n            lineLeftOffset, dy, _dy,\r\n            line, lastDecoration,\r\n            leftOffset = this._getLeftOffset(),\r\n            topOffset = this._getTopOffset(), top,\r\n            boxStart, boxWidth, charBox, currentDecoration,\r\n            maxHeight, currentFill, lastFill,\r\n            charSpacing = this._getWidthOfCharSpacing();\r\n\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          heightOfLine = this.getHeightOfLine(i);\r\n          if (!this[type] && !this.styleHas(type, i)) {\r\n            topOffset += heightOfLine;\r\n            continue;\r\n          }\r\n          line = this._textLines[i];\r\n          maxHeight = heightOfLine / this.lineHeight;\r\n          lineLeftOffset = this._getLineLeftOffset(i);\r\n          boxStart = 0;\r\n          boxWidth = 0;\r\n          lastDecoration = this.getValueOfPropertyAt(i, 0, type);\r\n          lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\r\n          top = topOffset + maxHeight * (1 - this._fontSizeFraction);\r\n          size = this.getHeightOfChar(i, 0);\r\n          dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\r\n          for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n            charBox = this.__charBounds[i][j];\r\n            currentDecoration = this.getValueOfPropertyAt(i, j, type);\r\n            currentFill = this.getValueOfPropertyAt(i, j, 'fill');\r\n            _size = this.getHeightOfChar(i, j);\r\n            _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\r\n            if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\r\n                boxWidth > 0) {\r\n              ctx.fillStyle = lastFill;\r\n              lastDecoration && lastFill && ctx.fillRect(\r\n                leftOffset + lineLeftOffset + boxStart,\r\n                top + this.offsets[type] * size + dy,\r\n                boxWidth,\r\n                this.fontSize / 15\r\n              );\r\n              boxStart = charBox.left;\r\n              boxWidth = charBox.width;\r\n              lastDecoration = currentDecoration;\r\n              lastFill = currentFill;\r\n              size = _size;\r\n              dy = _dy;\r\n            }\r\n            else {\r\n              boxWidth += charBox.kernedWidth;\r\n            }\r\n          }\r\n          ctx.fillStyle = currentFill;\r\n          currentDecoration && currentFill && ctx.fillRect(\r\n            leftOffset + lineLeftOffset + boxStart,\r\n            top + this.offsets[type] * size + dy,\r\n            boxWidth - charSpacing,\r\n            this.fontSize / 15\r\n          );\r\n          topOffset += heightOfLine;\r\n        }\r\n        // if there is text background color no\r\n        // other shadows should be casted\r\n        this._removeShadow(ctx);\r\n      },\r\n\r\n      /**\r\n       * return font declaration string for canvas context\r\n       * @param {Object} [styleObject] object\r\n       * @returns {String} font declaration formatted for canvas context.\r\n       */\r\n      _getFontDeclaration: function(styleObject, forMeasuring) {\r\n        var style = styleObject || this, family = this.fontFamily,\r\n            fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\r\n        var fontFamily = family === undefined ||\r\n        family.indexOf('\\'') > -1 ||\r\n        family.indexOf('\"') > -1 || fontIsGeneric\r\n          ? style.fontFamily : '\"' + style.fontFamily + '\"';\r\n        return [\r\n          // node-canvas needs \"weight style\", while browsers need \"style weight\"\r\n          (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\r\n          (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\r\n          forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\r\n          fontFamily\r\n        ].join(' ');\r\n      },\r\n\r\n      /**\r\n       * Renders text instance on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      render: function(ctx) {\r\n        // do not render if object is not visible\r\n        if (!this.visible) {\r\n          return;\r\n        }\r\n        if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\r\n          return;\r\n        }\r\n        if (this._shouldClearDimensionCache()) {\r\n          this.initDimensions();\r\n        }\r\n        this.callSuper('render', ctx);\r\n      },\r\n\r\n      /**\r\n       * Returns the text as an array of lines.\r\n       * @param {String} text text to split\r\n       * @returns {Array} Lines in the text\r\n       */\r\n      _splitTextIntoLines: function(text) {\r\n        var lines = text.split(this._reNewline),\r\n            newLines = new Array(lines.length),\r\n            newLine = ['\\n'],\r\n            newText = [];\r\n        for (var i = 0; i < lines.length; i++) {\r\n          newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\r\n          newText = newText.concat(newLines[i], newLine);\r\n        }\r\n        newText.pop();\r\n        return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var additionalProperties = [\r\n          'text',\r\n          'fontSize',\r\n          'fontWeight',\r\n          'fontFamily',\r\n          'fontStyle',\r\n          'lineHeight',\r\n          'underline',\r\n          'overline',\r\n          'linethrough',\r\n          'textAlign',\r\n          'textBackgroundColor',\r\n          'charSpacing',\r\n        ].concat(propertiesToInclude);\r\n        var obj = this.callSuper('toObject', additionalProperties);\r\n        obj.styles = clone(this.styles, true);\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\r\n       * @param {String|Object} key Property name or object (if object, iterate over the object properties)\r\n       * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      set: function(key, value) {\r\n        this.callSuper('set', key, value);\r\n        var needsDims = false;\r\n        if (typeof key === 'object') {\r\n          for (var _key in key) {\r\n            needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\r\n          }\r\n        }\r\n        else {\r\n          needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\r\n        }\r\n        if (needsDims) {\r\n          this.initDimensions();\r\n          this.setCoords();\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns complexity of an instance\r\n       * @return {Number} complexity\r\n       */\r\n      complexity: function() {\r\n        return 1;\r\n      }\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     * @see: http://www.w3.org/TR/SVG/text.html#TextElement\r\n     */\r\n    fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\r\n      'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\r\n\r\n    /**\r\n     * Default SVG font size\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     */\r\n    fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\r\n\r\n    /**\r\n     * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Text.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\r\n          parsedAnchor = parsedAttributes.textAnchor || 'left';\r\n      options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\r\n\r\n      options.top = options.top || 0;\r\n      options.left = options.left || 0;\r\n      if (parsedAttributes.textDecoration) {\r\n        var textDecoration = parsedAttributes.textDecoration;\r\n        if (textDecoration.indexOf('underline') !== -1) {\r\n          options.underline = true;\r\n        }\r\n        if (textDecoration.indexOf('overline') !== -1) {\r\n          options.overline = true;\r\n        }\r\n        if (textDecoration.indexOf('line-through') !== -1) {\r\n          options.linethrough = true;\r\n        }\r\n        delete options.textDecoration;\r\n      }\r\n      if ('dx' in parsedAttributes) {\r\n        options.left += parsedAttributes.dx;\r\n      }\r\n      if ('dy' in parsedAttributes) {\r\n        options.top += parsedAttributes.dy;\r\n      }\r\n      if (!('fontSize' in options)) {\r\n        options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n      }\r\n\r\n      var textContent = '';\r\n\r\n      // The XML is not properly parsed in IE9 so a workaround to get\r\n      // textContent is through firstChild.data. Another workaround would be\r\n      // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\r\n      if (!('textContent' in element)) {\r\n        if ('firstChild' in element && element.firstChild !== null) {\r\n          if ('data' in element.firstChild && element.firstChild.data !== null) {\r\n            textContent = element.firstChild.data;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        textContent = element.textContent;\r\n      }\r\n\r\n      textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\r\n      var originalStrokeWidth = options.strokeWidth;\r\n      options.strokeWidth = 0;\r\n\r\n      var text = new fabric.Text(textContent, options),\r\n          textHeightScaleFactor = text.getScaledHeight() / text.height,\r\n          lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\r\n          scaledDiff = lineHeightDiff * textHeightScaleFactor,\r\n          textHeight = text.getScaledHeight() + scaledDiff,\r\n          offX = 0;\r\n      /*\r\n        Adjust positioning:\r\n          x/y attributes in SVG correspond to the bottom-left corner of text bounding box\r\n          fabric output by default at top, left.\r\n      */\r\n      if (parsedAnchor === 'center') {\r\n        offX = text.getScaledWidth() / 2;\r\n      }\r\n      if (parsedAnchor === 'right') {\r\n        offX = text.getScaledWidth();\r\n      }\r\n      text.set({\r\n        left: text.left - offX,\r\n        top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\r\n        strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\r\n      });\r\n      callback(text);\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Text instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\r\n     */\r\n    fabric.Text.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Text', object, callback, 'text');\r\n    };\r\n\r\n    fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\r\n\r\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n    fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\r\n      /**\r\n       * Returns true if object has no styling or no styling in a line\r\n       * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n       * @return {Boolean}\r\n       */\r\n      isEmptyStyles: function(lineIndex) {\r\n        if (!this.styles) {\r\n          return true;\r\n        }\r\n        if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n          return true;\r\n        }\r\n        var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n        for (var p1 in obj) {\r\n          for (var p2 in obj[p1]) {\r\n            // eslint-disable-next-line no-unused-vars\r\n            for (var p3 in obj[p1][p2]) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Returns true if object has a style property or has it ina specified line\r\n       * @param {Number} lineIndex\r\n       * @return {Boolean}\r\n       */\r\n      styleHas: function(property, lineIndex) {\r\n        if (!this.styles || !property || property === '') {\r\n          return false;\r\n        }\r\n        if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n          return false;\r\n        }\r\n        var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n        // eslint-disable-next-line\r\n        for (var p1 in obj) {\r\n          // eslint-disable-next-line\r\n          for (var p2 in obj[p1]) {\r\n            if (typeof obj[p1][p2][property] !== 'undefined') {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Check if characters in a text have a value for a property\r\n       * whose value matches the textbox's value for that property.  If so,\r\n       * the character-level property is deleted.  If the character\r\n       * has no other properties, then it is also deleted.  Finally,\r\n       * if the line containing that character has no other characters\r\n       * then it also is deleted.\r\n       *\r\n       * @param {string} property The property to compare between characters and text.\r\n       */\r\n      cleanStyle: function(property) {\r\n        if (!this.styles || !property || property === '') {\r\n          return false;\r\n        }\r\n        var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\r\n            allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\r\n        // eslint-disable-next-line\r\n        for (var p1 in obj) {\r\n          letterCount = 0;\r\n          // eslint-disable-next-line\r\n          for (var p2 in obj[p1]) {\r\n            var styleObject = obj[p1][p2],\r\n                stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\r\n\r\n            stylesCount++;\r\n\r\n            if (stylePropertyHasBeenSet) {\r\n              if (!stylePropertyValue) {\r\n                stylePropertyValue = styleObject[property];\r\n              }\r\n              else if (styleObject[property] !== stylePropertyValue) {\r\n                allStyleObjectPropertiesMatch = false;\r\n              }\r\n\r\n              if (styleObject[property] === this[property]) {\r\n                delete styleObject[property];\r\n              }\r\n            }\r\n            else {\r\n              allStyleObjectPropertiesMatch = false;\r\n            }\r\n\r\n            if (Object.keys(styleObject).length !== 0) {\r\n              letterCount++;\r\n            }\r\n            else {\r\n              delete obj[p1][p2];\r\n            }\r\n          }\r\n\r\n          if (letterCount === 0) {\r\n            delete obj[p1];\r\n          }\r\n        }\r\n        // if every grapheme has the same style set then\r\n        // delete those styles and set it on the parent\r\n        for (var i = 0; i < this._textLines.length; i++) {\r\n          graphemeCount += this._textLines[i].length;\r\n        }\r\n        if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\r\n          this[property] = stylePropertyValue;\r\n          this.removeStyle(property);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Remove a style property or properties from all individual character styles\r\n       * in a text object.  Deletes the character style object if it contains no other style\r\n       * props.  Deletes a line style object if it contains no other character styles.\r\n       *\r\n       * @param {String} props The property to remove from character styles.\r\n       */\r\n      removeStyle: function(property) {\r\n        if (!this.styles || !property || property === '') {\r\n          return;\r\n        }\r\n        var obj = this.styles, line, lineNum, charNum;\r\n        for (lineNum in obj) {\r\n          line = obj[lineNum];\r\n          for (charNum in line) {\r\n            delete line[charNum][property];\r\n            if (Object.keys(line[charNum]).length === 0) {\r\n              delete line[charNum];\r\n            }\r\n          }\r\n          if (Object.keys(line).length === 0) {\r\n            delete obj[lineNum];\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _extendStyles: function(index, styles) {\r\n        var loc = this.get2DCursorLocation(index);\r\n\r\n        if (!this._getLineStyle(loc.lineIndex)) {\r\n          this._setLineStyle(loc.lineIndex, {});\r\n        }\r\n\r\n        if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\r\n          this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\r\n        }\r\n\r\n        fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\r\n      },\r\n\r\n      /**\r\n       * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\r\n       * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\r\n       * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\r\n       */\r\n      get2DCursorLocation: function(selectionStart, skipWrapping) {\r\n        if (typeof selectionStart === 'undefined') {\r\n          selectionStart = this.selectionStart;\r\n        }\r\n        var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\r\n        var len = lines.length;\r\n        for (var i = 0; i < len; i++) {\r\n          if (selectionStart <= lines[i].length) {\r\n            return {\r\n              lineIndex: i,\r\n              charIndex: selectionStart\r\n            };\r\n          }\r\n          selectionStart -= lines[i].length + 1;\r\n        }\r\n        return {\r\n          lineIndex: i - 1,\r\n          charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Gets style of a current selection/cursor (at the start position)\r\n       * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\r\n       * @param {Number} [startIndex] Start index to get styles at\r\n       * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n       * @param {Boolean} [complete] get full style or not\r\n       * @return {Array} styles an array with one, zero or more Style objects\r\n       */\r\n      getSelectionStyles: function(startIndex, endIndex, complete) {\r\n        if (typeof startIndex === 'undefined') {\r\n          startIndex = this.selectionStart || 0;\r\n        }\r\n        if (typeof endIndex === 'undefined') {\r\n          endIndex = this.selectionEnd || startIndex;\r\n        }\r\n        var styles = [];\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n          styles.push(this.getStyleAtPosition(i, complete));\r\n        }\r\n        return styles;\r\n      },\r\n\r\n      /**\r\n       * Gets style of a current selection/cursor position\r\n       * @param {Number} position  to get styles at\r\n       * @param {Boolean} [complete] full style if true\r\n       * @return {Object} style Style object at a specified index\r\n       * @private\r\n       */\r\n      getStyleAtPosition: function(position, complete) {\r\n        var loc = this.get2DCursorLocation(position),\r\n            style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\r\n              this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\r\n        return style || {};\r\n      },\r\n\r\n      /**\r\n       * Sets style of a current selection, if no selection exist, do not set anything.\r\n       * @param {Object} [styles] Styles object\r\n       * @param {Number} [startIndex] Start index to get styles at\r\n       * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      setSelectionStyles: function(styles, startIndex, endIndex) {\r\n        if (typeof startIndex === 'undefined') {\r\n          startIndex = this.selectionStart || 0;\r\n        }\r\n        if (typeof endIndex === 'undefined') {\r\n          endIndex = this.selectionEnd || startIndex;\r\n        }\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n          this._extendStyles(i, styles);\r\n        }\r\n        /* not included in _extendStyles to avoid clearing cache more than once */\r\n        this._forceClearCache = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * get the reference, not a clone, of the style object for a given character\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @return {Object} style object\r\n       */\r\n      _getStyleDeclaration: function(lineIndex, charIndex) {\r\n        var lineStyle = this.styles && this.styles[lineIndex];\r\n        if (!lineStyle) {\r\n          return null;\r\n        }\r\n        return lineStyle[charIndex];\r\n      },\r\n\r\n      /**\r\n       * return a new object that contains all the style property for a character\r\n       * the object returned is newly created\r\n       * @param {Number} lineIndex of the line where the character is\r\n       * @param {Number} charIndex position of the character on the line\r\n       * @return {Object} style object\r\n       */\r\n      getCompleteStyleDeclaration: function(lineIndex, charIndex) {\r\n        var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\r\n            styleObject = { }, prop;\r\n        for (var i = 0; i < this._styleProperties.length; i++) {\r\n          prop = this._styleProperties[i];\r\n          styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\r\n        }\r\n        return styleObject;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setStyleDeclaration: function(lineIndex, charIndex, style) {\r\n        this.styles[lineIndex][charIndex] = style;\r\n      },\r\n\r\n      /**\r\n       *\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @private\r\n       */\r\n      _deleteStyleDeclaration: function(lineIndex, charIndex) {\r\n        delete this.styles[lineIndex][charIndex];\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _getLineStyle: function(lineIndex) {\r\n        return this.styles[lineIndex];\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setLineStyle: function(lineIndex, style) {\r\n        this.styles[lineIndex] = style;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _deleteLineStyle: function(lineIndex) {\r\n        delete this.styles[lineIndex];\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function parseDecoration(object) {\r\n      if (object.textDecoration) {\r\n        object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\r\n        object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\r\n        object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\r\n        delete object.textDecoration;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\r\n     * prefix when observing canvas.\r\n     * @class fabric.IText\r\n     * @extends fabric.Text\r\n     * @mixes fabric.Observable\r\n     *\r\n     * @fires changed\r\n     * @fires selection:changed\r\n     * @fires editing:entered\r\n     * @fires editing:exited\r\n     *\r\n     * @return {fabric.IText} thisArg\r\n     * @see {@link fabric.IText#initialize} for constructor definition\r\n     *\r\n     * <p>Supported key combinations:</p>\r\n     * <pre>\r\n     *   Move cursor:                    left, right, up, down\r\n     *   Select character:               shift + left, shift + right\r\n     *   Select text vertically:         shift + up, shift + down\r\n     *   Move cursor by word:            alt + left, alt + right\r\n     *   Select words:                   shift + alt + left, shift + alt + right\r\n     *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\r\n     *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\r\n     *   Jump to start/end of text:      cmd + up, cmd + down\r\n     *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\r\n     *   Delete character:               backspace\r\n     *   Delete word:                    alt + backspace\r\n     *   Delete line:                    cmd + backspace\r\n     *   Forward delete:                 delete\r\n     *   Copy text:                      ctrl/cmd + c\r\n     *   Paste text:                     ctrl/cmd + v\r\n     *   Cut text:                       ctrl/cmd + x\r\n     *   Select entire text:             ctrl/cmd + a\r\n     *   Quit editing                    tab or esc\r\n     * </pre>\r\n     *\r\n     * <p>Supported mouse/touch combination</p>\r\n     * <pre>\r\n     *   Position cursor:                click/touch\r\n     *   Create selection:               click/touch & drag\r\n     *   Create selection:               click & shift + click\r\n     *   Select word:                    double click\r\n     *   Select line:                    triple click\r\n     * </pre>\r\n     */\r\n    fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'i-text',\r\n\r\n      /**\r\n       * Index where text selection starts (or where cursor is when there is no selection)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      selectionStart: 0,\r\n\r\n      /**\r\n       * Index where text selection ends\r\n       * @type Number\r\n       * @default\r\n       */\r\n      selectionEnd: 0,\r\n\r\n      /**\r\n       * Color of text selection\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionColor: 'rgba(17,119,255,0.3)',\r\n\r\n      /**\r\n       * Indicates whether text is in editing mode\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      isEditing: false,\r\n\r\n      /**\r\n       * Indicates whether a text can be edited\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      editable: true,\r\n\r\n      /**\r\n       * Border color of text object while it's in editing mode\r\n       * @type String\r\n       * @default\r\n       */\r\n      editingBorderColor: 'rgba(102,153,255,0.25)',\r\n\r\n      /**\r\n       * Width of cursor (in px)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cursorWidth: 2,\r\n\r\n      /**\r\n       * Color of default cursor (when not overwritten by character style)\r\n       * @type String\r\n       * @default\r\n       */\r\n      cursorColor: '#333',\r\n\r\n      /**\r\n       * Delay between cursor blink (in ms)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cursorDelay: 1000,\r\n\r\n      /**\r\n       * Duration of cursor fadein (in ms)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cursorDuration: 600,\r\n\r\n      /**\r\n       * Indicates whether internal text char widths can be cached\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      caching: true,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _reSpace: /\\s|\\n/,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _currentCursorOpacity: 0,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _selectionDirection: null,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _abortCursorAnimation: false,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __widthOfSpace: [],\r\n\r\n      /**\r\n       * Helps determining when the text is in composition, so that the cursor\r\n       * rendering is altered.\r\n       */\r\n      inCompositionMode: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {String} text Text string\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.IText} thisArg\r\n       */\r\n      initialize: function(text, options) {\r\n        this.callSuper('initialize', text, options);\r\n        this.initBehavior();\r\n      },\r\n\r\n      /**\r\n       * Sets selection start (left boundary of a selection)\r\n       * @param {Number} index Index to set selection start to\r\n       */\r\n      setSelectionStart: function(index) {\r\n        index = Math.max(index, 0);\r\n        this._updateAndFire('selectionStart', index);\r\n      },\r\n\r\n      /**\r\n       * Sets selection end (right boundary of a selection)\r\n       * @param {Number} index Index to set selection end to\r\n       */\r\n      setSelectionEnd: function(index) {\r\n        index = Math.min(index, this.text.length);\r\n        this._updateAndFire('selectionEnd', index);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} property 'selectionStart' or 'selectionEnd'\r\n       * @param {Number} index new position of property\r\n       */\r\n      _updateAndFire: function(property, index) {\r\n        if (this[property] !== index) {\r\n          this._fireSelectionChanged();\r\n          this[property] = index;\r\n        }\r\n        this._updateTextarea();\r\n      },\r\n\r\n      /**\r\n       * Fires the even of selection changed\r\n       * @private\r\n       */\r\n      _fireSelectionChanged: function() {\r\n        this.fire('selection:changed');\r\n        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\r\n      },\r\n\r\n      /**\r\n       * Initialize text dimensions. Render all text on given context\r\n       * or on a offscreen canvas to get the text width with measureText.\r\n       * Updates this.width and this.height with the proper values.\r\n       * Does not return dimensions.\r\n       * @private\r\n       */\r\n      initDimensions: function() {\r\n        this.isEditing && this.initDelayedCursor();\r\n        this.clearContextTop();\r\n        this.callSuper('initDimensions');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      render: function(ctx) {\r\n        this.clearContextTop();\r\n        this.callSuper('render', ctx);\r\n        // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\r\n        // the correct position but not at every cursor animation.\r\n        this.cursorOffsetCache = { };\r\n        this.renderCursorOrSelection();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        this.callSuper('_render', ctx);\r\n      },\r\n\r\n      /**\r\n       * Prepare and clean the contextTop\r\n       */\r\n      clearContextTop: function(skipRestore) {\r\n        if (!this.isEditing) {\r\n          return;\r\n        }\r\n        if (this.canvas && this.canvas.contextTop) {\r\n          var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\r\n          ctx.save();\r\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n          this.transform(ctx);\r\n          this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\r\n          this._clearTextArea(ctx);\r\n          skipRestore || ctx.restore();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Renders cursor or selection (depending on what exists)\r\n       */\r\n      renderCursorOrSelection: function() {\r\n        if (!this.isEditing || !this.canvas) {\r\n          return;\r\n        }\r\n        var boundaries = this._getCursorBoundaries(), ctx;\r\n        if (this.canvas && this.canvas.contextTop) {\r\n          ctx = this.canvas.contextTop;\r\n          this.clearContextTop(true);\r\n        }\r\n        else {\r\n          ctx = this.canvas.contextContainer;\r\n          ctx.save();\r\n        }\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          this.renderCursor(boundaries, ctx);\r\n        }\r\n        else {\r\n          this.renderSelection(boundaries, ctx);\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      _clearTextArea: function(ctx) {\r\n        // we add 4 pixel, to be sure to do not leave any pixel out\r\n        var width = this.width + 4, height = this.height + 4;\r\n        ctx.clearRect(-width / 2, -height / 2, width, height);\r\n      },\r\n\r\n      /**\r\n       * Returns cursor boundaries (left, top, leftOffset, topOffset)\r\n       * @private\r\n       * @param {Array} chars Array of characters\r\n       * @param {String} typeOfBoundaries\r\n       */\r\n      _getCursorBoundaries: function(position) {\r\n\r\n        // left/top are left/top of entire text box\r\n        // leftOffset/topOffset are offset from that left/top point of a text box\r\n\r\n        if (typeof position === 'undefined') {\r\n          position = this.selectionStart;\r\n        }\r\n\r\n        var left = this._getLeftOffset(),\r\n            top = this._getTopOffset(),\r\n            offsets = this._getCursorBoundariesOffsets(position);\r\n\r\n        return {\r\n          left: left,\r\n          top: top,\r\n          leftOffset: offsets.left,\r\n          topOffset: offsets.top\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getCursorBoundariesOffsets: function(position) {\r\n        if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\r\n          return this.cursorOffsetCache;\r\n        }\r\n        var lineLeftOffset,\r\n            lineIndex,\r\n            charIndex,\r\n            topOffset = 0,\r\n            leftOffset = 0,\r\n            boundaries,\r\n            cursorPosition = this.get2DCursorLocation(position);\r\n        charIndex = cursorPosition.charIndex;\r\n        lineIndex = cursorPosition.lineIndex;\r\n        for (var i = 0; i < lineIndex; i++) {\r\n          topOffset += this.getHeightOfLine(i);\r\n        }\r\n        lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n        var bound = this.__charBounds[lineIndex][charIndex];\r\n        bound && (leftOffset = bound.left);\r\n        if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\r\n          leftOffset -= this._getWidthOfCharSpacing();\r\n        }\r\n        boundaries = {\r\n          top: topOffset,\r\n          left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\r\n        };\r\n        this.cursorOffsetCache = boundaries;\r\n        return this.cursorOffsetCache;\r\n      },\r\n\r\n      /**\r\n       * Renders cursor\r\n       * @param {Object} boundaries\r\n       * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n       */\r\n      renderCursor: function(boundaries, ctx) {\r\n        var cursorLocation = this.get2DCursorLocation(),\r\n            lineIndex = cursorLocation.lineIndex,\r\n            charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\r\n            charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\r\n            multiplier = this.scaleX * this.canvas.getZoom(),\r\n            cursorWidth = this.cursorWidth / multiplier,\r\n            topOffset = boundaries.topOffset,\r\n            dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\r\n\r\n        topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\r\n          - charHeight * (1 - this._fontSizeFraction);\r\n\r\n        if (this.inCompositionMode) {\r\n          this.renderSelection(boundaries, ctx);\r\n        }\r\n\r\n        ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\r\n        ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\r\n        ctx.fillRect(\r\n          boundaries.left + boundaries.leftOffset - cursorWidth / 2,\r\n          topOffset + boundaries.top + dy,\r\n          cursorWidth,\r\n          charHeight);\r\n      },\r\n\r\n      /**\r\n       * Renders text selection\r\n       * @param {Object} boundaries Object with left/top/leftOffset/topOffset\r\n       * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n       */\r\n      renderSelection: function(boundaries, ctx) {\r\n\r\n        var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\r\n            selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\r\n            isJustify = this.textAlign.indexOf('justify') !== -1,\r\n            start = this.get2DCursorLocation(selectionStart),\r\n            end = this.get2DCursorLocation(selectionEnd),\r\n            startLine = start.lineIndex,\r\n            endLine = end.lineIndex,\r\n            startChar = start.charIndex < 0 ? 0 : start.charIndex,\r\n            endChar = end.charIndex < 0 ? 0 : end.charIndex;\r\n\r\n        for (var i = startLine; i <= endLine; i++) {\r\n          var lineOffset = this._getLineLeftOffset(i) || 0,\r\n              lineHeight = this.getHeightOfLine(i),\r\n              realLineHeight = 0, boxStart = 0, boxEnd = 0;\r\n\r\n          if (i === startLine) {\r\n            boxStart = this.__charBounds[startLine][startChar].left;\r\n          }\r\n          if (i >= startLine && i < endLine) {\r\n            boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\r\n          }\r\n          else if (i === endLine) {\r\n            if (endChar === 0) {\r\n              boxEnd = this.__charBounds[endLine][endChar].left;\r\n            }\r\n            else {\r\n              var charSpacing = this._getWidthOfCharSpacing();\r\n              boxEnd = this.__charBounds[endLine][endChar - 1].left\r\n                + this.__charBounds[endLine][endChar - 1].width - charSpacing;\r\n            }\r\n          }\r\n          realLineHeight = lineHeight;\r\n          if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\r\n            lineHeight /= this.lineHeight;\r\n          }\r\n          if (this.inCompositionMode) {\r\n            ctx.fillStyle = this.compositionColor || 'black';\r\n            ctx.fillRect(\r\n              boundaries.left + lineOffset + boxStart,\r\n              boundaries.top + boundaries.topOffset + lineHeight,\r\n              boxEnd - boxStart,\r\n              1);\r\n          }\r\n          else {\r\n            ctx.fillStyle = this.selectionColor;\r\n            ctx.fillRect(\r\n              boundaries.left + lineOffset + boxStart,\r\n              boundaries.top + boundaries.topOffset,\r\n              boxEnd - boxStart,\r\n              lineHeight);\r\n          }\r\n\r\n\r\n          boundaries.topOffset += realLineHeight;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * High level function to know the height of the cursor.\r\n       * the currentChar is the one that precedes the cursor\r\n       * Returns fontSize of char at the current cursor\r\n       * @return {Number} Character font size\r\n       */\r\n      getCurrentCharFontSize: function() {\r\n        var cp = this._getCurrentCharIndex();\r\n        return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\r\n      },\r\n\r\n      /**\r\n       * High level function to know the color of the cursor.\r\n       * the currentChar is the one that precedes the cursor\r\n       * Returns color (fill) of char at the current cursor\r\n       * @return {String} Character color (fill)\r\n       */\r\n      getCurrentCharColor: function() {\r\n        var cp = this._getCurrentCharIndex();\r\n        return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\r\n      },\r\n\r\n      /**\r\n       * Returns the cursor position for the getCurrent.. functions\r\n       * @private\r\n       */\r\n      _getCurrentCharIndex: function() {\r\n        var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\r\n            charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\r\n        return { l: cursorPosition.lineIndex, c: charIndex };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns fabric.IText instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.IText\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as argument\r\n     */\r\n    fabric.IText.fromObject = function(object, callback) {\r\n      parseDecoration(object);\r\n      if (object.styles) {\r\n        for (var i in object.styles) {\r\n          for (var j in object.styles[i]) {\r\n            parseDecoration(object.styles[i][j]);\r\n          }\r\n        }\r\n      }\r\n      fabric.Object._fromObject('IText', object, callback, 'text');\r\n    };\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var clone = fabric.util.object.clone;\r\n\r\n    fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n\r\n      /**\r\n       * Initializes all the interactive behavior of IText\r\n       */\r\n      initBehavior: function() {\r\n        this.initAddedHandler();\r\n        this.initRemovedHandler();\r\n        this.initCursorSelectionHandlers();\r\n        this.initDoubleClickSimulation();\r\n        this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\r\n      },\r\n\r\n      onDeselect: function() {\r\n        this.isEditing && this.exitEditing();\r\n        this.selected = false;\r\n      },\r\n\r\n      /**\r\n       * Initializes \"added\" event handler\r\n       */\r\n      initAddedHandler: function() {\r\n        var _this = this;\r\n        this.on('added', function() {\r\n          var canvas = _this.canvas;\r\n          if (canvas) {\r\n            if (!canvas._hasITextHandlers) {\r\n              canvas._hasITextHandlers = true;\r\n              _this._initCanvasHandlers(canvas);\r\n            }\r\n            canvas._iTextInstances = canvas._iTextInstances || [];\r\n            canvas._iTextInstances.push(_this);\r\n          }\r\n        });\r\n      },\r\n\r\n      initRemovedHandler: function() {\r\n        var _this = this;\r\n        this.on('removed', function() {\r\n          var canvas = _this.canvas;\r\n          if (canvas) {\r\n            canvas._iTextInstances = canvas._iTextInstances || [];\r\n            fabric.util.removeFromArray(canvas._iTextInstances, _this);\r\n            if (canvas._iTextInstances.length === 0) {\r\n              canvas._hasITextHandlers = false;\r\n              _this._removeCanvasHandlers(canvas);\r\n            }\r\n          }\r\n        });\r\n      },\r\n\r\n      /**\r\n       * register canvas event to manage exiting on other instances\r\n       * @private\r\n       */\r\n      _initCanvasHandlers: function(canvas) {\r\n        canvas._mouseUpITextHandler = function() {\r\n          if (canvas._iTextInstances) {\r\n            canvas._iTextInstances.forEach(function(obj) {\r\n              obj.__isMousedown = false;\r\n            });\r\n          }\r\n        };\r\n        canvas.on('mouse:up', canvas._mouseUpITextHandler);\r\n      },\r\n\r\n      /**\r\n       * remove canvas event to manage exiting on other instances\r\n       * @private\r\n       */\r\n      _removeCanvasHandlers: function(canvas) {\r\n        canvas.off('mouse:up', canvas._mouseUpITextHandler);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _tick: function() {\r\n        this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\r\n\r\n        var tickState;\r\n\r\n        tickState = {\r\n          isAborted: false,\r\n          abort: function() {\r\n            this.isAborted = true;\r\n          },\r\n        };\r\n\r\n        obj.animate('_currentCursorOpacity', targetOpacity, {\r\n          duration: duration,\r\n          onComplete: function() {\r\n            if (!tickState.isAborted) {\r\n              obj[completeMethod]();\r\n            }\r\n          },\r\n          onChange: function() {\r\n            // we do not want to animate a selection, only cursor\r\n            if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\r\n              obj.renderCursorOrSelection();\r\n            }\r\n          },\r\n          abort: function() {\r\n            return tickState.isAborted;\r\n          }\r\n        });\r\n        return tickState;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onTickComplete: function() {\r\n\r\n        var _this = this;\r\n\r\n        if (this._cursorTimeout1) {\r\n          clearTimeout(this._cursorTimeout1);\r\n        }\r\n        this._cursorTimeout1 = setTimeout(function() {\r\n          _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\r\n        }, 100);\r\n      },\r\n\r\n      /**\r\n       * Initializes delayed cursor\r\n       */\r\n      initDelayedCursor: function(restart) {\r\n        var _this = this,\r\n            delay = restart ? 0 : this.cursorDelay;\r\n\r\n        this.abortCursorAnimation();\r\n        this._currentCursorOpacity = 1;\r\n        this._cursorTimeout2 = setTimeout(function() {\r\n          _this._tick();\r\n        }, delay);\r\n      },\r\n\r\n      /**\r\n       * Aborts cursor animation and clears all timeouts\r\n       */\r\n      abortCursorAnimation: function() {\r\n        var shouldClear = this._currentTickState || this._currentTickCompleteState,\r\n            canvas = this.canvas;\r\n        this._currentTickState && this._currentTickState.abort();\r\n        this._currentTickCompleteState && this._currentTickCompleteState.abort();\r\n\r\n        clearTimeout(this._cursorTimeout1);\r\n        clearTimeout(this._cursorTimeout2);\r\n\r\n        this._currentCursorOpacity = 0;\r\n        // to clear just itext area we need to transform the context\r\n        // it may not be worth it\r\n        if (shouldClear && canvas) {\r\n          canvas.clearContext(canvas.contextTop || canvas.contextContainer);\r\n        }\r\n\r\n      },\r\n\r\n      /**\r\n       * Selects entire text\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      selectAll: function() {\r\n        this.selectionStart = 0;\r\n        this.selectionEnd = this._text.length;\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns selected text\r\n       * @return {String}\r\n       */\r\n      getSelectedText: function() {\r\n        return this._text.slice(this.selectionStart, this.selectionEnd).join('');\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing start of current word according to current selection index\r\n       * @param {Number} startFrom Surrent selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findWordBoundaryLeft: function(startFrom) {\r\n        var offset = 0, index = startFrom - 1;\r\n\r\n        // remove space before cursor first\r\n        if (this._reSpace.test(this._text[index])) {\r\n          while (this._reSpace.test(this._text[index])) {\r\n            offset++;\r\n            index--;\r\n          }\r\n        }\r\n        while (/\\S/.test(this._text[index]) && index > -1) {\r\n          offset++;\r\n          index--;\r\n        }\r\n\r\n        return startFrom - offset;\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing end of current word according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findWordBoundaryRight: function(startFrom) {\r\n        var offset = 0, index = startFrom;\r\n\r\n        // remove space after cursor first\r\n        if (this._reSpace.test(this._text[index])) {\r\n          while (this._reSpace.test(this._text[index])) {\r\n            offset++;\r\n            index++;\r\n          }\r\n        }\r\n        while (/\\S/.test(this._text[index]) && index < this.text.length) {\r\n          offset++;\r\n          index++;\r\n        }\r\n\r\n        return startFrom + offset;\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing start of current line according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findLineBoundaryLeft: function(startFrom) {\r\n        var offset = 0, index = startFrom - 1;\r\n\r\n        while (!/\\n/.test(this._text[index]) && index > -1) {\r\n          offset++;\r\n          index--;\r\n        }\r\n\r\n        return startFrom - offset;\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing end of current line according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findLineBoundaryRight: function(startFrom) {\r\n        var offset = 0, index = startFrom;\r\n\r\n        while (!/\\n/.test(this._text[index]) && index < this.text.length) {\r\n          offset++;\r\n          index++;\r\n        }\r\n\r\n        return startFrom + offset;\r\n      },\r\n\r\n      /**\r\n       * Finds index corresponding to beginning or end of a word\r\n       * @param {Number} selectionStart Index of a character\r\n       * @param {Number} direction 1 or -1\r\n       * @return {Number} Index of the beginning or end of a word\r\n       */\r\n      searchWordBoundary: function(selectionStart, direction) {\r\n        var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\r\n            _char     = this.text.charAt(index),\r\n            reNonWord = /[ \\n\\.,;!\\?\\-]/;\r\n\r\n        while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\r\n          index += direction;\r\n          _char = this.text.charAt(index);\r\n        }\r\n        if (reNonWord.test(_char) && _char !== '\\n') {\r\n          index += direction === 1 ? 0 : 1;\r\n        }\r\n        return index;\r\n      },\r\n\r\n      /**\r\n       * Selects a word based on the index\r\n       * @param {Number} selectionStart Index of a character\r\n       */\r\n      selectWord: function(selectionStart) {\r\n        selectionStart = selectionStart || this.selectionStart;\r\n        var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\r\n            newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\r\n\r\n        this.selectionStart = newSelectionStart;\r\n        this.selectionEnd = newSelectionEnd;\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        this.renderCursorOrSelection();\r\n      },\r\n\r\n      /**\r\n       * Selects a line based on the index\r\n       * @param {Number} selectionStart Index of a character\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      selectLine: function(selectionStart) {\r\n        selectionStart = selectionStart || this.selectionStart;\r\n        var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\r\n            newSelectionEnd = this.findLineBoundaryRight(selectionStart);\r\n\r\n        this.selectionStart = newSelectionStart;\r\n        this.selectionEnd = newSelectionEnd;\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Enters editing state\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      enterEditing: function(e) {\r\n        if (this.isEditing || !this.editable) {\r\n          return;\r\n        }\r\n\r\n        if (this.canvas) {\r\n          this.canvas.calcOffset();\r\n          this.exitEditingOnOthers(this.canvas);\r\n        }\r\n\r\n        this.isEditing = true;\r\n\r\n        this.initHiddenTextarea(e);\r\n        this.hiddenTextarea.focus();\r\n        this.hiddenTextarea.value = this.text;\r\n        this._updateTextarea();\r\n        this._saveEditingProps();\r\n        this._setEditingProps();\r\n        this._textBeforeEdit = this.text;\r\n\r\n        this._tick();\r\n        this.fire('editing:entered');\r\n        this._fireSelectionChanged();\r\n        if (!this.canvas) {\r\n          return this;\r\n        }\r\n        this.canvas.fire('text:editing:entered', { target: this });\r\n        this.initMouseMoveHandler();\r\n        this.canvas.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      exitEditingOnOthers: function(canvas) {\r\n        if (canvas._iTextInstances) {\r\n          canvas._iTextInstances.forEach(function(obj) {\r\n            obj.selected = false;\r\n            if (obj.isEditing) {\r\n              obj.exitEditing();\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Initializes \"mousemove\" event handler\r\n       */\r\n      initMouseMoveHandler: function() {\r\n        this.canvas.on('mouse:move', this.mouseMoveHandler);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      mouseMoveHandler: function(options) {\r\n        if (!this.__isMousedown || !this.isEditing) {\r\n          return;\r\n        }\r\n\r\n        var newSelectionStart = this.getSelectionStartFromPointer(options.e),\r\n            currentStart = this.selectionStart,\r\n            currentEnd = this.selectionEnd;\r\n        if (\r\n          (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\r\n          &&\r\n          (currentStart === newSelectionStart || currentEnd === newSelectionStart)\r\n        ) {\r\n          return;\r\n        }\r\n        if (newSelectionStart > this.__selectionStartOnMouseDown) {\r\n          this.selectionStart = this.__selectionStartOnMouseDown;\r\n          this.selectionEnd = newSelectionStart;\r\n        }\r\n        else {\r\n          this.selectionStart = newSelectionStart;\r\n          this.selectionEnd = this.__selectionStartOnMouseDown;\r\n        }\r\n        if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\r\n          this.restartCursorIfNeeded();\r\n          this._fireSelectionChanged();\r\n          this._updateTextarea();\r\n          this.renderCursorOrSelection();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setEditingProps: function() {\r\n        this.hoverCursor = 'text';\r\n\r\n        if (this.canvas) {\r\n          this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\r\n        }\r\n\r\n        this.borderColor = this.editingBorderColor;\r\n\r\n        this.hasControls = this.selectable = false;\r\n        this.lockMovementX = this.lockMovementY = true;\r\n      },\r\n\r\n      /**\r\n       * convert from textarea to grapheme indexes\r\n       */\r\n      fromStringToGraphemeSelection: function(start, end, text) {\r\n        var smallerTextStart = text.slice(0, start),\r\n            graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\r\n        if (start === end) {\r\n          return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n        }\r\n        var smallerTextEnd = text.slice(start, end),\r\n            graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\r\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\r\n      },\r\n\r\n      /**\r\n       * convert from fabric to textarea values\r\n       */\r\n      fromGraphemeToStringSelection: function(start, end, _text) {\r\n        var smallerTextStart = _text.slice(0, start),\r\n            graphemeStart = smallerTextStart.join('').length;\r\n        if (start === end) {\r\n          return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n        }\r\n        var smallerTextEnd = _text.slice(start, end),\r\n            graphemeEnd = smallerTextEnd.join('').length;\r\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _updateTextarea: function() {\r\n        this.cursorOffsetCache = { };\r\n        if (!this.hiddenTextarea) {\r\n          return;\r\n        }\r\n        if (!this.inCompositionMode) {\r\n          var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\r\n          this.hiddenTextarea.selectionStart = newSelection.selectionStart;\r\n          this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\r\n        }\r\n        this.updateTextareaPosition();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      updateFromTextArea: function() {\r\n        if (!this.hiddenTextarea) {\r\n          return;\r\n        }\r\n        this.cursorOffsetCache = { };\r\n        this.text = this.hiddenTextarea.value;\r\n        if (this._shouldClearDimensionCache()) {\r\n          this.initDimensions();\r\n          this.setCoords();\r\n        }\r\n        var newSelection = this.fromStringToGraphemeSelection(\r\n          this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\r\n        this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\r\n        if (!this.inCompositionMode) {\r\n          this.selectionStart = newSelection.selectionStart;\r\n        }\r\n        this.updateTextareaPosition();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      updateTextareaPosition: function() {\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          var style = this._calcTextareaPosition();\r\n          this.hiddenTextarea.style.left = style.left;\r\n          this.hiddenTextarea.style.top = style.top;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Object} style contains style for hiddenTextarea\r\n       */\r\n      _calcTextareaPosition: function() {\r\n        if (!this.canvas) {\r\n          return { x: 1, y: 1 };\r\n        }\r\n        var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\r\n            boundaries = this._getCursorBoundaries(desiredPostion),\r\n            cursorLocation = this.get2DCursorLocation(desiredPostion),\r\n            lineIndex = cursorLocation.lineIndex,\r\n            charIndex = cursorLocation.charIndex,\r\n            charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\r\n            leftOffset = boundaries.leftOffset,\r\n            m = this.calcTransformMatrix(),\r\n            p = {\r\n              x: boundaries.left + leftOffset,\r\n              y: boundaries.top + boundaries.topOffset + charHeight\r\n            },\r\n            upperCanvas = this.canvas.upperCanvasEl,\r\n            upperCanvasWidth = upperCanvas.width,\r\n            upperCanvasHeight = upperCanvas.height,\r\n            maxWidth = upperCanvasWidth - charHeight,\r\n            maxHeight = upperCanvasHeight - charHeight,\r\n            scaleX = upperCanvas.clientWidth / upperCanvasWidth,\r\n            scaleY = upperCanvas.clientHeight / upperCanvasHeight;\r\n\r\n        p = fabric.util.transformPoint(p, m);\r\n        p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\r\n        p.x *= scaleX;\r\n        p.y *= scaleY;\r\n        if (p.x < 0) {\r\n          p.x = 0;\r\n        }\r\n        if (p.x > maxWidth) {\r\n          p.x = maxWidth;\r\n        }\r\n        if (p.y < 0) {\r\n          p.y = 0;\r\n        }\r\n        if (p.y > maxHeight) {\r\n          p.y = maxHeight;\r\n        }\r\n\r\n        // add canvas offset on document\r\n        p.x += this.canvas._offset.left;\r\n        p.y += this.canvas._offset.top;\r\n\r\n        return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _saveEditingProps: function() {\r\n        this._savedProps = {\r\n          hasControls: this.hasControls,\r\n          borderColor: this.borderColor,\r\n          lockMovementX: this.lockMovementX,\r\n          lockMovementY: this.lockMovementY,\r\n          hoverCursor: this.hoverCursor,\r\n          defaultCursor: this.canvas && this.canvas.defaultCursor,\r\n          moveCursor: this.canvas && this.canvas.moveCursor\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _restoreEditingProps: function() {\r\n        if (!this._savedProps) {\r\n          return;\r\n        }\r\n\r\n        this.hoverCursor = this._savedProps.hoverCursor;\r\n        this.hasControls = this._savedProps.hasControls;\r\n        this.borderColor = this._savedProps.borderColor;\r\n        this.lockMovementX = this._savedProps.lockMovementX;\r\n        this.lockMovementY = this._savedProps.lockMovementY;\r\n\r\n        if (this.canvas) {\r\n          this.canvas.defaultCursor = this._savedProps.defaultCursor;\r\n          this.canvas.moveCursor = this._savedProps.moveCursor;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Exits from editing state\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      exitEditing: function() {\r\n        var isTextChanged = (this._textBeforeEdit !== this.text);\r\n        this.selected = false;\r\n        this.isEditing = false;\r\n        this.selectable = true;\r\n\r\n        this.selectionEnd = this.selectionStart;\r\n\r\n        if (this.hiddenTextarea) {\r\n          this.hiddenTextarea.blur && this.hiddenTextarea.blur();\r\n          this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\r\n          this.hiddenTextarea = null;\r\n        }\r\n\r\n        this.abortCursorAnimation();\r\n        this._restoreEditingProps();\r\n        this._currentCursorOpacity = 0;\r\n        if (this._shouldClearDimensionCache()) {\r\n          this.initDimensions();\r\n          this.setCoords();\r\n        }\r\n        this.fire('editing:exited');\r\n        isTextChanged && this.fire('modified');\r\n        if (this.canvas) {\r\n          this.canvas.off('mouse:move', this.mouseMoveHandler);\r\n          this.canvas.fire('text:editing:exited', { target: this });\r\n          isTextChanged && this.canvas.fire('object:modified', { target: this });\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _removeExtraneousStyles: function() {\r\n        for (var prop in this.styles) {\r\n          if (!this._textLines[prop]) {\r\n            delete this.styles[prop];\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * remove and reflow a style block from start to end.\r\n       * @param {Number} start linear start position for removal (included in removal)\r\n       * @param {Number} end linear end position for removal ( excluded from removal )\r\n       */\r\n      removeStyleFromTo: function(start, end) {\r\n        var cursorStart = this.get2DCursorLocation(start, true),\r\n            cursorEnd = this.get2DCursorLocation(end, true),\r\n            lineStart = cursorStart.lineIndex,\r\n            charStart = cursorStart.charIndex,\r\n            lineEnd = cursorEnd.lineIndex,\r\n            charEnd = cursorEnd.charIndex,\r\n            i, styleObj;\r\n        if (lineStart !== lineEnd) {\r\n          // step1 remove the trailing of lineStart\r\n          if (this.styles[lineStart]) {\r\n            for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\r\n              delete this.styles[lineStart][i];\r\n            }\r\n          }\r\n          // step2 move the trailing of lineEnd to lineStart if needed\r\n          if (this.styles[lineEnd]) {\r\n            for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\r\n              styleObj = this.styles[lineEnd][i];\r\n              if (styleObj) {\r\n                this.styles[lineStart] || (this.styles[lineStart] = { });\r\n                this.styles[lineStart][charStart + i - charEnd] = styleObj;\r\n              }\r\n            }\r\n          }\r\n          // step3 detects lines will be completely removed.\r\n          for (i = lineStart + 1; i <= lineEnd; i++) {\r\n            delete this.styles[i];\r\n          }\r\n          // step4 shift remaining lines.\r\n          this.shiftLineStyles(lineEnd, lineStart - lineEnd);\r\n        }\r\n        else {\r\n          // remove and shift left on the same line\r\n          if (this.styles[lineStart]) {\r\n            styleObj = this.styles[lineStart];\r\n            var diff = charEnd - charStart, numericChar, _char;\r\n            for (i = charStart; i < charEnd; i++) {\r\n              delete styleObj[i];\r\n            }\r\n            for (_char in this.styles[lineStart]) {\r\n              numericChar = parseInt(_char, 10);\r\n              if (numericChar >= charEnd) {\r\n                styleObj[numericChar - diff] = styleObj[_char];\r\n                delete styleObj[_char];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Shifts line styles up or down\r\n       * @param {Number} lineIndex Index of a line\r\n       * @param {Number} offset Can any number?\r\n       */\r\n      shiftLineStyles: function(lineIndex, offset) {\r\n        // shift all line styles by offset upward or downward\r\n        // do not clone deep. we need new array, not new style objects\r\n        var clonedStyles = clone(this.styles);\r\n        for (var line in this.styles) {\r\n          var numericLine = parseInt(line, 10);\r\n          if (numericLine > lineIndex) {\r\n            this.styles[numericLine + offset] = clonedStyles[numericLine];\r\n            if (!clonedStyles[numericLine - offset]) {\r\n              delete this.styles[numericLine];\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      restartCursorIfNeeded: function() {\r\n        if (!this._currentTickState || this._currentTickState.isAborted\r\n          || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\r\n        ) {\r\n          this.initDelayedCursor();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Inserts new style object\r\n       * @param {Number} lineIndex Index of a line\r\n       * @param {Number} charIndex Index of a char\r\n       * @param {Number} qty number of lines to add\r\n       * @param {Array} copiedStyle Array of objects styles\r\n       */\r\n      insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\r\n        var currentCharStyle,\r\n            newLineStyles = {},\r\n            somethingAdded = false;\r\n\r\n        qty || (qty = 1);\r\n        this.shiftLineStyles(lineIndex, qty);\r\n        if (this.styles[lineIndex]) {\r\n          currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\r\n        }\r\n\r\n        // we clone styles of all chars\r\n        // after cursor onto the current line\r\n        for (var index in this.styles[lineIndex]) {\r\n          var numIndex = parseInt(index, 10);\r\n          if (numIndex >= charIndex) {\r\n            somethingAdded = true;\r\n            newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\r\n            // remove lines from the previous line since they're on a new line now\r\n            delete this.styles[lineIndex][index];\r\n          }\r\n        }\r\n        if (somethingAdded) {\r\n          this.styles[lineIndex + qty] = newLineStyles;\r\n        }\r\n        else {\r\n          delete this.styles[lineIndex + qty];\r\n        }\r\n        // for the other lines\r\n        // we clone current char style onto the next (otherwise empty) line\r\n        while (qty > 1) {\r\n          qty--;\r\n          if (copiedStyle && copiedStyle[qty]) {\r\n            this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\r\n          }\r\n          else if (currentCharStyle) {\r\n            this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\r\n          }\r\n          else {\r\n            delete this.styles[lineIndex + qty];\r\n          }\r\n        }\r\n        this._forceClearCache = true;\r\n      },\r\n\r\n      /**\r\n       * Inserts style object for a given line/char index\r\n       * @param {Number} lineIndex Index of a line\r\n       * @param {Number} charIndex Index of a char\r\n       * @param {Number} quantity number Style object to insert, if given\r\n       * @param {Array} copiedStyle array of style objecs\r\n       */\r\n      insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\r\n        if (!this.styles) {\r\n          this.styles = {};\r\n        }\r\n        var currentLineStyles       = this.styles[lineIndex],\r\n            currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\r\n\r\n        quantity || (quantity = 1);\r\n        // shift all char styles by quantity forward\r\n        // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\r\n        for (var index in currentLineStylesCloned) {\r\n          var numericIndex = parseInt(index, 10);\r\n          if (numericIndex >= charIndex) {\r\n            currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\r\n            // only delete the style if there was nothing moved there\r\n            if (!currentLineStylesCloned[numericIndex - quantity]) {\r\n              delete currentLineStyles[numericIndex];\r\n            }\r\n          }\r\n        }\r\n        this._forceClearCache = true;\r\n        if (copiedStyle) {\r\n          while (quantity--) {\r\n            if (!Object.keys(copiedStyle[quantity]).length) {\r\n              continue;\r\n            }\r\n            if (!this.styles[lineIndex]) {\r\n              this.styles[lineIndex] = {};\r\n            }\r\n            this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\r\n          }\r\n          return;\r\n        }\r\n        if (!currentLineStyles) {\r\n          return;\r\n        }\r\n        var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\r\n        while (newStyle && quantity--) {\r\n          this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Inserts style object(s)\r\n       * @param {Array} insertedText Characters at the location where style is inserted\r\n       * @param {Number} start cursor index for inserting style\r\n       * @param {Array} [copiedStyle] array of style objects to insert.\r\n       */\r\n      insertNewStyleBlock: function(insertedText, start, copiedStyle) {\r\n        var cursorLoc = this.get2DCursorLocation(start, true),\r\n            addedLines = [0], linesLenght = 0;\r\n        for (var i = 0; i < insertedText.length; i++) {\r\n          if (insertedText[i] === '\\n') {\r\n            linesLenght++;\r\n            addedLines[linesLenght] = 0;\r\n          }\r\n          else {\r\n            addedLines[linesLenght]++;\r\n          }\r\n        }\r\n        if (addedLines[0] > 0) {\r\n          this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\r\n          copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\r\n        }\r\n        linesLenght && this.insertNewlineStyleObject(\r\n          cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\r\n        for (var i = 1; i < linesLenght; i++) {\r\n          if (addedLines[i] > 0) {\r\n            this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\r\n          }\r\n          else if (copiedStyle) {\r\n            this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\r\n          }\r\n          copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\r\n        }\r\n        // we use i outside the loop to get it like linesLength\r\n        if (addedLines[i] > 0) {\r\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set the selectionStart and selectionEnd according to the ne postion of cursor\r\n       * mimic the key - mouse navigation when shift is pressed.\r\n       */\r\n      setSelectionStartEndWithShift: function(start, end, newSelection) {\r\n        if (newSelection <= start) {\r\n          if (end === start) {\r\n            this._selectionDirection = 'left';\r\n          }\r\n          else if (this._selectionDirection === 'right') {\r\n            this._selectionDirection = 'left';\r\n            this.selectionEnd = start;\r\n          }\r\n          this.selectionStart = newSelection;\r\n        }\r\n        else if (newSelection > start && newSelection < end) {\r\n          if (this._selectionDirection === 'right') {\r\n            this.selectionEnd = newSelection;\r\n          }\r\n          else {\r\n            this.selectionStart = newSelection;\r\n          }\r\n        }\r\n        else {\r\n          // newSelection is > selection start and end\r\n          if (end === start) {\r\n            this._selectionDirection = 'right';\r\n          }\r\n          else if (this._selectionDirection === 'left') {\r\n            this._selectionDirection = 'right';\r\n            this.selectionStart = end;\r\n          }\r\n          this.selectionEnd = newSelection;\r\n        }\r\n      },\r\n\r\n      setSelectionInBoundaries: function() {\r\n        var length = this.text.length;\r\n        if (this.selectionStart > length) {\r\n          this.selectionStart = length;\r\n        }\r\n        else if (this.selectionStart < 0) {\r\n          this.selectionStart = 0;\r\n        }\r\n        if (this.selectionEnd > length) {\r\n          this.selectionEnd = length;\r\n        }\r\n        else if (this.selectionEnd < 0) {\r\n          this.selectionEnd = 0;\r\n        }\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n    /**\r\n     * Initializes \"dbclick\" event handler\r\n     */\r\n    initDoubleClickSimulation: function() {\r\n\r\n      // for double click\r\n      this.__lastClickTime = +new Date();\r\n\r\n      // for triple click\r\n      this.__lastLastClickTime = +new Date();\r\n\r\n      this.__lastPointer = { };\r\n\r\n      this.on('mousedown', this.onMouseDown);\r\n    },\r\n\r\n    /**\r\n     * Default event handler to simulate triple click\r\n     * @private\r\n     */\r\n    onMouseDown: function(options) {\r\n      if (!this.canvas) {\r\n        return;\r\n      }\r\n      this.__newClickTime = +new Date();\r\n      var newPointer = options.pointer;\r\n      if (this.isTripleClick(newPointer)) {\r\n        this.fire('tripleclick', options);\r\n        this._stopEvent(options.e);\r\n      }\r\n      this.__lastLastClickTime = this.__lastClickTime;\r\n      this.__lastClickTime = this.__newClickTime;\r\n      this.__lastPointer = newPointer;\r\n      this.__lastIsEditing = this.isEditing;\r\n      this.__lastSelected = this.selected;\r\n    },\r\n\r\n    isTripleClick: function(newPointer) {\r\n      return this.__newClickTime - this.__lastClickTime < 500 &&\r\n          this.__lastClickTime - this.__lastLastClickTime < 500 &&\r\n          this.__lastPointer.x === newPointer.x &&\r\n          this.__lastPointer.y === newPointer.y;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _stopEvent: function(e) {\r\n      e.preventDefault && e.preventDefault();\r\n      e.stopPropagation && e.stopPropagation();\r\n    },\r\n\r\n    /**\r\n     * Initializes event handlers related to cursor or selection\r\n     */\r\n    initCursorSelectionHandlers: function() {\r\n      this.initMousedownHandler();\r\n      this.initMouseupHandler();\r\n      this.initClicks();\r\n    },\r\n\r\n    /**\r\n     * Initializes double and triple click event handlers\r\n     */\r\n    initClicks: function() {\r\n      this.on('mousedblclick', function(options) {\r\n        this.selectWord(this.getSelectionStartFromPointer(options.e));\r\n      });\r\n      this.on('tripleclick', function(options) {\r\n        this.selectLine(this.getSelectionStartFromPointer(options.e));\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Default event handler for the basic functionalities needed on _mouseDown\r\n     * can be overridden to do something different.\r\n     * Scope of this implementation is: find the click position, set selectionStart\r\n     * find selectionEnd, initialize the drawing of either cursor or selection area\r\n     */\r\n    _mouseDownHandler: function(options) {\r\n      if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\r\n        return;\r\n      }\r\n\r\n      this.__isMousedown = true;\r\n\r\n      if (this.selected) {\r\n        this.setCursorByClick(options.e);\r\n      }\r\n\r\n      if (this.isEditing) {\r\n        this.__selectionStartOnMouseDown = this.selectionStart;\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          this.abortCursorAnimation();\r\n        }\r\n        this.renderCursorOrSelection();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Default event handler for the basic functionalities needed on mousedown:before\r\n     * can be overridden to do something different.\r\n     * Scope of this implementation is: verify the object is already selected when mousing down\r\n     */\r\n    _mouseDownHandlerBefore: function(options) {\r\n      if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\r\n        return;\r\n      }\r\n      if (this === this.canvas._activeObject) {\r\n        this.selected = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Initializes \"mousedown\" event handler\r\n     */\r\n    initMousedownHandler: function() {\r\n      this.on('mousedown', this._mouseDownHandler);\r\n      this.on('mousedown:before', this._mouseDownHandlerBefore);\r\n    },\r\n\r\n    /**\r\n     * Initializes \"mouseup\" event handler\r\n     */\r\n    initMouseupHandler: function() {\r\n      this.on('mouseup', this.mouseUpHandler);\r\n    },\r\n\r\n    /**\r\n     * standard hander for mouse up, overridable\r\n     * @private\r\n     */\r\n    mouseUpHandler: function(options) {\r\n      this.__isMousedown = false;\r\n      if (!this.editable || this.group ||\r\n        (options.transform && options.transform.actionPerformed) ||\r\n        (options.e.button && options.e.button !== 1)) {\r\n        return;\r\n      }\r\n\r\n      if (this.__lastSelected && !this.__corner) {\r\n        this.selected = false;\r\n        this.__lastSelected = false;\r\n        this.enterEditing(options.e);\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          this.initDelayedCursor(true);\r\n        }\r\n        else {\r\n          this.renderCursorOrSelection();\r\n        }\r\n      }\r\n      else {\r\n        this.selected = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Changes cursor location in a text depending on passed pointer (x/y) object\r\n     * @param {Event} e Event object\r\n     */\r\n    setCursorByClick: function(e) {\r\n      var newSelection = this.getSelectionStartFromPointer(e),\r\n          start = this.selectionStart, end = this.selectionEnd;\r\n      if (e.shiftKey) {\r\n        this.setSelectionStartEndWithShift(start, end, newSelection);\r\n      }\r\n      else {\r\n        this.selectionStart = newSelection;\r\n        this.selectionEnd = newSelection;\r\n      }\r\n      if (this.isEditing) {\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns index of a character corresponding to where an object was clicked\r\n     * @param {Event} e Event object\r\n     * @return {Number} Index of a character\r\n     */\r\n    getSelectionStartFromPointer: function(e) {\r\n      var mouseOffset = this.getLocalPointer(e),\r\n          prevWidth = 0,\r\n          width = 0,\r\n          height = 0,\r\n          charIndex = 0,\r\n          lineIndex = 0,\r\n          lineLeftOffset,\r\n          line;\r\n\r\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n        if (height <= mouseOffset.y) {\r\n          height += this.getHeightOfLine(i) * this.scaleY;\r\n          lineIndex = i;\r\n          if (i > 0) {\r\n            charIndex += this._textLines[i - 1].length + 1;\r\n          }\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n      width = lineLeftOffset * this.scaleX;\r\n      line = this._textLines[lineIndex];\r\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n        prevWidth = width;\r\n        // i removed something about flipX here, check.\r\n        width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\r\n        if (width <= mouseOffset.x) {\r\n          charIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\r\n      // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\r\n      var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\r\n          distanceBtwNextCharAndCursor = width - mouseOffset.x,\r\n          offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\r\n            distanceBtwNextCharAndCursor < 0 ? 0 : 1,\r\n          newSelectionStart = index + offset;\r\n      // if object is horizontally flipped, mirror cursor location from the end\r\n      if (this.flipX) {\r\n        newSelectionStart = jlen - newSelectionStart;\r\n      }\r\n\r\n      if (newSelectionStart > this._text.length) {\r\n        newSelectionStart = this._text.length;\r\n      }\r\n\r\n      return newSelectionStart;\r\n    }\r\n  });\r\n\r\n\r\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n\r\n    /**\r\n     * Initializes hidden textarea (needed to bring up keyboard in iOS)\r\n     */\r\n    initHiddenTextarea: function() {\r\n      this.hiddenTextarea = fabric.document.createElement('textarea');\r\n      this.hiddenTextarea.setAttribute('autocapitalize', 'off');\r\n      this.hiddenTextarea.setAttribute('autocorrect', 'off');\r\n      this.hiddenTextarea.setAttribute('autocomplete', 'off');\r\n      this.hiddenTextarea.setAttribute('spellcheck', 'false');\r\n      this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\r\n      this.hiddenTextarea.setAttribute('wrap', 'off');\r\n      var style = this._calcTextareaPosition();\r\n      // line-height: 1px; was removed from the style to fix this:\r\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\r\n      this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\r\n      '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\r\n      ' paddingｰtop: ' + style.fontSize + ';';\r\n      fabric.document.body.appendChild(this.hiddenTextarea);\r\n\r\n      fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\r\n\r\n      if (!this._clickHandlerInitialized && this.canvas) {\r\n        fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\r\n        this._clickHandlerInitialized = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * For functionalities on keyDown\r\n     * Map a special key to a function of the instance/prototype\r\n     * If you need different behaviour for ESC or TAB or arrows, you have to change\r\n     * this map setting the name of a function that you build on the fabric.Itext or\r\n     * your prototype.\r\n     * the map change will affect all Instances unless you need for only some text Instances\r\n     * in that case you have to clone this object and assign your Instance.\r\n     * this.keysMap = fabric.util.object.clone(this.keysMap);\r\n     * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\r\n     */\r\n    keysMap: {\r\n      9:  'exitEditing',\r\n      27: 'exitEditing',\r\n      33: 'moveCursorUp',\r\n      34: 'moveCursorDown',\r\n      35: 'moveCursorRight',\r\n      36: 'moveCursorLeft',\r\n      37: 'moveCursorLeft',\r\n      38: 'moveCursorUp',\r\n      39: 'moveCursorRight',\r\n      40: 'moveCursorDown',\r\n    },\r\n\r\n    /**\r\n     * For functionalities on keyUp + ctrl || cmd\r\n     */\r\n    ctrlKeysMapUp: {\r\n      67: 'copy',\r\n      88: 'cut'\r\n    },\r\n\r\n    /**\r\n     * For functionalities on keyDown + ctrl || cmd\r\n     */\r\n    ctrlKeysMapDown: {\r\n      65: 'selectAll'\r\n    },\r\n\r\n    onClick: function() {\r\n      // No need to trigger click event here, focus is enough to have the keyboard appear on Android\r\n      this.hiddenTextarea && this.hiddenTextarea.focus();\r\n    },\r\n\r\n    /**\r\n     * Handles keyup event\r\n     * @param {Event} e Event object\r\n     */\r\n    onKeyDown: function(e) {\r\n      if (!this.isEditing || this.inCompositionMode) {\r\n        return;\r\n      }\r\n      if (e.keyCode in this.keysMap) {\r\n        this[this.keysMap[e.keyCode]](e);\r\n      }\r\n      else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\r\n        this[this.ctrlKeysMapDown[e.keyCode]](e);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n      e.stopImmediatePropagation();\r\n      e.preventDefault();\r\n      if (e.keyCode >= 33 && e.keyCode <= 40) {\r\n        // if i press an arrow key just update selection\r\n        this.clearContextTop();\r\n        this.renderCursorOrSelection();\r\n      }\r\n      else {\r\n        this.canvas && this.canvas.requestRenderAll();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handles keyup event\r\n     * We handle KeyUp because ie11 and edge have difficulties copy/pasting\r\n     * if a copy/cut event fired, keyup is dismissed\r\n     * @param {Event} e Event object\r\n     */\r\n    onKeyUp: function(e) {\r\n      if (!this.isEditing || this._copyDone || this.inCompositionMode) {\r\n        this._copyDone = false;\r\n        return;\r\n      }\r\n      if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\r\n        this[this.ctrlKeysMapUp[e.keyCode]](e);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n      e.stopImmediatePropagation();\r\n      e.preventDefault();\r\n      this.canvas && this.canvas.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * Handles onInput event\r\n     * @param {Event} e Event object\r\n     */\r\n    onInput: function(e) {\r\n      var fromPaste = this.fromPaste;\r\n      this.fromPaste = false;\r\n      e && e.stopPropagation();\r\n      if (!this.isEditing) {\r\n        return;\r\n      }\r\n      // decisions about style changes.\r\n      var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\r\n          charCount = this._text.length,\r\n          nextCharCount = nextText.length,\r\n          removedText, insertedText,\r\n          charDiff = nextCharCount - charCount;\r\n      if (this.hiddenTextarea.value === '') {\r\n        this.styles = { };\r\n        this.updateFromTextArea();\r\n        this.fire('changed');\r\n        if (this.canvas) {\r\n          this.canvas.fire('text:changed', { target: this });\r\n          this.canvas.requestRenderAll();\r\n        }\r\n        return;\r\n      }\r\n\r\n      var textareaSelection = this.fromStringToGraphemeSelection(\r\n        this.hiddenTextarea.selectionStart,\r\n        this.hiddenTextarea.selectionEnd,\r\n        this.hiddenTextarea.value\r\n      );\r\n      var backDelete = this.selectionStart > textareaSelection.selectionStart;\r\n\r\n      if (this.selectionStart !== this.selectionEnd) {\r\n        removedText = this._text.slice(this.selectionStart, this.selectionEnd);\r\n        charDiff += this.selectionEnd - this.selectionStart;\r\n      }\r\n      else if (nextCharCount < charCount) {\r\n        if (backDelete) {\r\n          removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\r\n        }\r\n        else {\r\n          removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\r\n        }\r\n      }\r\n      insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\r\n      if (removedText && removedText.length) {\r\n        if (this.selectionStart !== this.selectionEnd) {\r\n          this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\r\n        }\r\n        else if (backDelete) {\r\n          // detect differencies between forwardDelete and backDelete\r\n          this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\r\n        }\r\n        else {\r\n          this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\r\n        }\r\n      }\r\n      if (insertedText.length) {\r\n        if (fromPaste && insertedText.join('') === fabric.copiedText) {\r\n          this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\r\n        }\r\n        else {\r\n          this.insertNewStyleBlock(insertedText, this.selectionStart);\r\n        }\r\n      }\r\n      this.updateFromTextArea();\r\n      this.fire('changed');\r\n      if (this.canvas) {\r\n        this.canvas.fire('text:changed', { target: this });\r\n        this.canvas.requestRenderAll();\r\n      }\r\n    },\r\n    /**\r\n     * Composition start\r\n     */\r\n    onCompositionStart: function() {\r\n      this.inCompositionMode = true;\r\n    },\r\n\r\n    /**\r\n     * Composition end\r\n     */\r\n    onCompositionEnd: function() {\r\n      this.inCompositionMode = false;\r\n    },\r\n\r\n    // /**\r\n    //  * Composition update\r\n    //  */\r\n    onCompositionUpdate: function(e) {\r\n      this.compositionStart = e.target.selectionStart;\r\n      this.compositionEnd = e.target.selectionEnd;\r\n      this.updateTextareaPosition();\r\n    },\r\n\r\n    /**\r\n     * Copies selected text\r\n     * @param {Event} e Event object\r\n     */\r\n    copy: function() {\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        //do not cut-copy if no selection\r\n        return;\r\n      }\r\n\r\n      fabric.copiedText = this.getSelectedText();\r\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\r\n      this._copyDone = true;\r\n    },\r\n\r\n    /**\r\n     * Pastes text\r\n     * @param {Event} e Event object\r\n     */\r\n    paste: function() {\r\n      this.fromPaste = true;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object\r\n     * @return {Object} Clipboard data object\r\n     */\r\n    _getClipboardData: function(e) {\r\n      return (e && e.clipboardData) || fabric.window.clipboardData;\r\n    },\r\n\r\n    /**\r\n     * Finds the width in pixels before the cursor on the same line\r\n     * @private\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @return {Number} widthBeforeCursor width before cursor\r\n     */\r\n    _getWidthBeforeCursor: function(lineIndex, charIndex) {\r\n      var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\r\n\r\n      if (charIndex > 0) {\r\n        bound = this.__charBounds[lineIndex][charIndex - 1];\r\n        widthBeforeCursor += bound.left + bound.width;\r\n      }\r\n      return widthBeforeCursor;\r\n    },\r\n\r\n    /**\r\n     * Gets start offset of a selection\r\n     * @param {Event} e Event object\r\n     * @param {Boolean} isRight\r\n     * @return {Number}\r\n     */\r\n    getDownCursorOffset: function(e, isRight) {\r\n      var selectionProp = this._getSelectionForOffset(e, isRight),\r\n          cursorLocation = this.get2DCursorLocation(selectionProp),\r\n          lineIndex = cursorLocation.lineIndex;\r\n      // if on last line, down cursor goes to end of line\r\n      if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\r\n        // move to the end of a text\r\n        return this._text.length - selectionProp;\r\n      }\r\n      var charIndex = cursorLocation.charIndex,\r\n          widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n          indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\r\n          textAfterCursor = this._textLines[lineIndex].slice(charIndex);\r\n      return textAfterCursor.length + indexOnOtherLine + 2;\r\n    },\r\n\r\n    /**\r\n     * private\r\n     * Helps finding if the offset should be counted from Start or End\r\n     * @param {Event} e Event object\r\n     * @param {Boolean} isRight\r\n     * @return {Number}\r\n     */\r\n    _getSelectionForOffset: function(e, isRight) {\r\n      if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\r\n        return this.selectionEnd;\r\n      }\r\n      else {\r\n        return this.selectionStart;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Event} e Event object\r\n     * @param {Boolean} isRight\r\n     * @return {Number}\r\n     */\r\n    getUpCursorOffset: function(e, isRight) {\r\n      var selectionProp = this._getSelectionForOffset(e, isRight),\r\n          cursorLocation = this.get2DCursorLocation(selectionProp),\r\n          lineIndex = cursorLocation.lineIndex;\r\n      if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\r\n        // if on first line, up cursor goes to start of line\r\n        return -selectionProp;\r\n      }\r\n      var charIndex = cursorLocation.charIndex,\r\n          widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n          indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\r\n          textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\r\n      // return a negative offset\r\n      return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\r\n    },\r\n\r\n    /**\r\n     * for a given width it founds the matching character.\r\n     * @private\r\n     */\r\n    _getIndexOnLine: function(lineIndex, width) {\r\n\r\n      var line = this._textLines[lineIndex],\r\n          lineLeftOffset = this._getLineLeftOffset(lineIndex),\r\n          widthOfCharsOnLine = lineLeftOffset,\r\n          indexOnLine = 0, charWidth, foundMatch;\r\n\r\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n        charWidth = this.__charBounds[lineIndex][j].width;\r\n        widthOfCharsOnLine += charWidth;\r\n        if (widthOfCharsOnLine > width) {\r\n          foundMatch = true;\r\n          var leftEdge = widthOfCharsOnLine - charWidth,\r\n              rightEdge = widthOfCharsOnLine,\r\n              offsetFromLeftEdge = Math.abs(leftEdge - width),\r\n              offsetFromRightEdge = Math.abs(rightEdge - width);\r\n\r\n          indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      // reached end\r\n      if (!foundMatch) {\r\n        indexOnLine = line.length - 1;\r\n      }\r\n\r\n      return indexOnLine;\r\n    },\r\n\r\n\r\n    /**\r\n     * Moves cursor down\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorDown: function(e) {\r\n      if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\r\n        return;\r\n      }\r\n      this._moveCursorUpOrDown('Down', e);\r\n    },\r\n\r\n    /**\r\n     * Moves cursor up\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorUp: function(e) {\r\n      if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n        return;\r\n      }\r\n      this._moveCursorUpOrDown('Up', e);\r\n    },\r\n\r\n    /**\r\n     * Moves cursor up or down, fires the events\r\n     * @param {String} direction 'Up' or 'Down'\r\n     * @param {Event} e Event object\r\n     */\r\n    _moveCursorUpOrDown: function(direction, e) {\r\n      // getUpCursorOffset\r\n      // getDownCursorOffset\r\n      var action = 'get' + direction + 'CursorOffset',\r\n          offset = this[action](e, this._selectionDirection === 'right');\r\n      if (e.shiftKey) {\r\n        this.moveCursorWithShift(offset);\r\n      }\r\n      else {\r\n        this.moveCursorWithoutShift(offset);\r\n      }\r\n      if (offset !== 0) {\r\n        this.setSelectionInBoundaries();\r\n        this.abortCursorAnimation();\r\n        this._currentCursorOpacity = 1;\r\n        this.initDelayedCursor();\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor with shift\r\n     * @param {Number} offset\r\n     */\r\n    moveCursorWithShift: function(offset) {\r\n      var newSelection = this._selectionDirection === 'left'\r\n        ? this.selectionStart + offset\r\n        : this.selectionEnd + offset;\r\n      this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\r\n      return offset !== 0;\r\n    },\r\n\r\n    /**\r\n     * Moves cursor up without shift\r\n     * @param {Number} offset\r\n     */\r\n    moveCursorWithoutShift: function(offset) {\r\n      if (offset < 0) {\r\n        this.selectionStart += offset;\r\n        this.selectionEnd = this.selectionStart;\r\n      }\r\n      else {\r\n        this.selectionEnd += offset;\r\n        this.selectionStart = this.selectionEnd;\r\n      }\r\n      return offset !== 0;\r\n    },\r\n\r\n    /**\r\n     * Moves cursor left\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorLeft: function(e) {\r\n      if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n        return;\r\n      }\r\n      this._moveCursorLeftOrRight('Left', e);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @return {Boolean} true if a change happened\r\n     */\r\n    _move: function(e, prop, direction) {\r\n      var newValue;\r\n      if (e.altKey) {\r\n        newValue = this['findWordBoundary' + direction](this[prop]);\r\n      }\r\n      else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\r\n        newValue = this['findLineBoundary' + direction](this[prop]);\r\n      }\r\n      else {\r\n        this[prop] += direction === 'Left' ? -1 : 1;\r\n        return true;\r\n      }\r\n      if (typeof newValue !== undefined && this[prop] !== newValue) {\r\n        this[prop] = newValue;\r\n        return true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _moveLeft: function(e, prop) {\r\n      return this._move(e, prop, 'Left');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _moveRight: function(e, prop) {\r\n      return this._move(e, prop, 'Right');\r\n    },\r\n\r\n    /**\r\n     * Moves cursor left without keeping selection\r\n     * @param {Event} e\r\n     */\r\n    moveCursorLeftWithoutShift: function(e) {\r\n      var change = true;\r\n      this._selectionDirection = 'left';\r\n\r\n      // only move cursor when there is no selection,\r\n      // otherwise we discard it, and leave cursor on same place\r\n      if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\r\n        change = this._moveLeft(e, 'selectionStart');\r\n\r\n      }\r\n      this.selectionEnd = this.selectionStart;\r\n      return change;\r\n    },\r\n\r\n    /**\r\n     * Moves cursor left while keeping selection\r\n     * @param {Event} e\r\n     */\r\n    moveCursorLeftWithShift: function(e) {\r\n      if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\r\n        return this._moveLeft(e, 'selectionEnd');\r\n      }\r\n      else if (this.selectionStart !== 0){\r\n        this._selectionDirection = 'left';\r\n        return this._moveLeft(e, 'selectionStart');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorRight: function(e) {\r\n      if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\r\n        return;\r\n      }\r\n      this._moveCursorLeftOrRight('Right', e);\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right or Left, fires event\r\n     * @param {String} direction 'Left', 'Right'\r\n     * @param {Event} e Event object\r\n     */\r\n    _moveCursorLeftOrRight: function(direction, e) {\r\n      var actionName = 'moveCursor' + direction + 'With';\r\n      this._currentCursorOpacity = 1;\r\n\r\n      if (e.shiftKey) {\r\n        actionName += 'Shift';\r\n      }\r\n      else {\r\n        actionName += 'outShift';\r\n      }\r\n      if (this[actionName](e)) {\r\n        this.abortCursorAnimation();\r\n        this.initDelayedCursor();\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right while keeping selection\r\n     * @param {Event} e\r\n     */\r\n    moveCursorRightWithShift: function(e) {\r\n      if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\r\n        return this._moveRight(e, 'selectionStart');\r\n      }\r\n      else if (this.selectionEnd !== this._text.length) {\r\n        this._selectionDirection = 'right';\r\n        return this._moveRight(e, 'selectionEnd');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right without keeping selection\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorRightWithoutShift: function(e) {\r\n      var changed = true;\r\n      this._selectionDirection = 'right';\r\n\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        changed = this._moveRight(e, 'selectionStart');\r\n        this.selectionEnd = this.selectionStart;\r\n      }\r\n      else {\r\n        this.selectionStart = this.selectionEnd;\r\n      }\r\n      return changed;\r\n    },\r\n\r\n    /**\r\n     * Removes characters from start/end\r\n     * start/end ar per grapheme position in _text array.\r\n     *\r\n     * @param {Number} start\r\n     * @param {Number} end default to start + 1\r\n     */\r\n    removeChars: function(start, end) {\r\n      if (typeof end === 'undefined') {\r\n        end = start + 1;\r\n      }\r\n      this.removeStyleFromTo(start, end);\r\n      this._text.splice(start, end - start);\r\n      this.text = this._text.join('');\r\n      this.set('dirty', true);\r\n      if (this._shouldClearDimensionCache()) {\r\n        this.initDimensions();\r\n        this.setCoords();\r\n      }\r\n      this._removeExtraneousStyles();\r\n    },\r\n\r\n    /**\r\n     * insert characters at start position, before start position.\r\n     * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\r\n     * if style array is provided, it must be as the same length of text in graphemes\r\n     * if end is provided and is bigger than start, old text is replaced.\r\n     * start/end ar per grapheme position in _text array.\r\n     *\r\n     * @param {String} text text to insert\r\n     * @param {Array} style array of style objects\r\n     * @param {Number} start\r\n     * @param {Number} end default to start + 1\r\n     */\r\n    insertChars: function(text, style, start, end) {\r\n      if (typeof end === 'undefined') {\r\n        end = start;\r\n      }\r\n      if (end > start) {\r\n        this.removeStyleFromTo(start, end);\r\n      }\r\n      var graphemes = fabric.util.string.graphemeSplit(text);\r\n      this.insertNewStyleBlock(graphemes, start, style);\r\n      this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\r\n      this.text = this._text.join('');\r\n      this.set('dirty', true);\r\n      if (this._shouldClearDimensionCache()) {\r\n        this.initDimensions();\r\n        this.setCoords();\r\n      }\r\n      this._removeExtraneousStyles();\r\n    },\r\n\r\n  });\r\n\r\n\r\n  /* _TO_SVG_START_ */\r\n  (function() {\r\n    var toFixed = fabric.util.toFixed,\r\n        multipleSpacesRegex = /  +/g;\r\n\r\n    fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\r\n\r\n      /**\r\n       * Returns SVG representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(),\r\n            offsets = this._getSVGLeftTopOffsets(),\r\n            textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\r\n        this._wrapSVGTextAndBg(markup, textAndBg);\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getSVGLeftTopOffsets: function() {\r\n        return {\r\n          textLeft: -this.width / 2,\r\n          textTop: -this.height / 2,\r\n          lineTop: this.getHeightOfLine(0)\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _wrapSVGTextAndBg: function(markup, textAndBg) {\r\n        var noShadow = true, filter = this.getSvgFilter(),\r\n            style = filter === '' ? '' : ' style=\"' + filter + '\"',\r\n            textDecoration = this.getSvgTextDecoration(this);\r\n        markup.push(\r\n          '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\r\n          style, '>\\n',\r\n          textAndBg.textBgRects.join(''),\r\n          '\\t\\t<text xml:space=\"preserve\" ',\r\n          (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\r\n          (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\r\n          (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\r\n          (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\r\n          (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\r\n          'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\r\n          textAndBg.textSpans.join(''),\r\n          '</text>\\n',\r\n          '\\t</g>\\n'\r\n        );\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Number} textTopOffset Text top offset\r\n       * @param {Number} textLeftOffset Text left offset\r\n       * @return {Object}\r\n       */\r\n      _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\r\n        var textSpans = [],\r\n            textBgRects = [],\r\n            height = textTopOffset, lineOffset;\r\n        // bounding-box background\r\n        this._setSVGBg(textBgRects);\r\n\r\n        // text and text-background\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          lineOffset = this._getLineLeftOffset(i);\r\n          if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\r\n            this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\r\n          }\r\n          this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\r\n          height += this.getHeightOfLine(i);\r\n        }\r\n\r\n        return {\r\n          textSpans: textSpans,\r\n          textBgRects: textBgRects\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createTextCharSpan: function(_char, styleDecl, left, top) {\r\n        var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\r\n            styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\r\n            fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\r\n            dy = styleDecl.deltaY, dySpan = '',\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n        if (dy) {\r\n          dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\r\n        }\r\n        return [\r\n          '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\r\n          toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\r\n          fillStyles, '>',\r\n          fabric.util.string.escapeXml(_char),\r\n          '</tspan>'\r\n        ].join('');\r\n      },\r\n\r\n      _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\r\n        // set proper line offset\r\n        var lineHeight = this.getHeightOfLine(lineIndex),\r\n            isJustify = this.textAlign.indexOf('justify') !== -1,\r\n            actualStyle,\r\n            nextStyle,\r\n            charsToRender = '',\r\n            charBox, style,\r\n            boxWidth = 0,\r\n            line = this._textLines[lineIndex],\r\n            timeToRender;\r\n\r\n        textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\r\n        for (var i = 0, len = line.length - 1; i <= len; i++) {\r\n          timeToRender = i === len || this.charSpacing;\r\n          charsToRender += line[i];\r\n          charBox = this.__charBounds[lineIndex][i];\r\n          if (boxWidth === 0) {\r\n            textLeftOffset += charBox.kernedWidth - charBox.width;\r\n            boxWidth += charBox.width;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n          if (isJustify && !timeToRender) {\r\n            if (this._reSpaceAndTab.test(line[i])) {\r\n              timeToRender = true;\r\n            }\r\n          }\r\n          if (!timeToRender) {\r\n            // if we have charSpacing, we render char by char\r\n            actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n            nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n            timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\r\n          }\r\n          if (timeToRender) {\r\n            style = this._getStyleDeclaration(lineIndex, i) || { };\r\n            textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\r\n            charsToRender = '';\r\n            actualStyle = nextStyle;\r\n            textLeftOffset += boxWidth;\r\n            boxWidth = 0;\r\n          }\r\n        }\r\n      },\r\n\r\n      _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n        textBgRects.push(\r\n          '\\t\\t<rect ',\r\n          this._getFillAttributes(color),\r\n          ' x=\"',\r\n          toFixed(left, NUM_FRACTION_DIGITS),\r\n          '\" y=\"',\r\n          toFixed(top, NUM_FRACTION_DIGITS),\r\n          '\" width=\"',\r\n          toFixed(width, NUM_FRACTION_DIGITS),\r\n          '\" height=\"',\r\n          toFixed(height, NUM_FRACTION_DIGITS),\r\n          '\"></rect>\\n');\r\n      },\r\n\r\n      _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\r\n        var line = this._textLines[i],\r\n            heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\r\n            boxWidth = 0,\r\n            boxStart = 0,\r\n            charBox, currentColor,\r\n            lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n          charBox = this.__charBounds[i][j];\r\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n          if (currentColor !== lastColor) {\r\n            lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\r\n              textTopOffset, boxWidth, heightOfLine);\r\n            boxStart = charBox.left;\r\n            boxWidth = charBox.width;\r\n            lastColor = currentColor;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n        }\r\n        currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\r\n          textTopOffset, boxWidth, heightOfLine);\r\n      },\r\n\r\n      /**\r\n       * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\r\n       * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\r\n       *\r\n       * @private\r\n       * @param {*} value\r\n       * @return {String}\r\n       */\r\n      _getFillAttributes: function(value) {\r\n        var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\r\n        if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\r\n          return 'fill=\"' + value + '\"';\r\n        }\r\n        return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getSVGLineTopOffset: function(lineIndex) {\r\n        var lineTopOffset = 0, lastHeight = 0;\r\n        for (var j = 0; j < lineIndex; j++) {\r\n          lineTopOffset += this.getHeightOfLine(j);\r\n        }\r\n        lastHeight = this.getHeightOfLine(j);\r\n        return {\r\n          lineTop: lineTopOffset,\r\n          offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns styles-string for svg-export\r\n       * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n       * @return {String}\r\n       */\r\n      getSvgStyles: function(skipShadow) {\r\n        var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\r\n        return svgStyle + ' white-space: pre;';\r\n      },\r\n    });\r\n  })();\r\n  /* _TO_SVG_END_ */\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    //var fabric = global.fabric || (global.fabric = {});\r\n\r\n    /**\r\n     * Textbox class, based on IText, allows the user to resize the text rectangle\r\n     * and wraps lines automatically. Textboxes have their Y scaling locked, the\r\n     * user can only change width. Height is adjusted automatically based on the\r\n     * wrapping of lines.\r\n     * @class fabric.Textbox\r\n     * @extends fabric.IText\r\n     * @mixes fabric.Observable\r\n     * @return {fabric.Textbox} thisArg\r\n     * @see {@link fabric.Textbox#initialize} for constructor definition\r\n     */\r\n    fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'textbox',\r\n\r\n      /**\r\n       * Minimum width of textbox, in pixels.\r\n       * @type Number\r\n       * @default\r\n       */\r\n      minWidth: 20,\r\n\r\n      /**\r\n       * Minimum calculated width of a textbox, in pixels.\r\n       * fixed to 2 so that an empty textbox cannot go to 0\r\n       * and is still selectable without text.\r\n       * @type Number\r\n       * @default\r\n       */\r\n      dynamicMinWidth: 2,\r\n\r\n      /**\r\n       * Cached array of text wrapping.\r\n       * @type Array\r\n       */\r\n      __cachedLines: null,\r\n\r\n      /**\r\n       * Override standard Object class values\r\n       */\r\n      lockScalingFlip: true,\r\n\r\n      /**\r\n       * Override standard Object class values\r\n       * Textbox needs this on false\r\n       */\r\n      noScaleCache: false,\r\n\r\n      /**\r\n       * Properties which when set cause object to change dimensions\r\n       * @type Object\r\n       * @private\r\n       */\r\n      _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\r\n\r\n      /**\r\n       * Unlike superclass's version of this function, Textbox does not update\r\n       * its width.\r\n       * @private\r\n       * @override\r\n       */\r\n      initDimensions: function() {\r\n        if (this.__skipDimension) {\r\n          return;\r\n        }\r\n        this.isEditing && this.initDelayedCursor();\r\n        this.clearContextTop();\r\n        this._clearCache();\r\n        // clear dynamicMinWidth as it will be different after we re-wrap line\r\n        this.dynamicMinWidth = 0;\r\n        // wrap lines\r\n        this._styleMap = this._generateStyleMap(this._splitText());\r\n        // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\r\n        if (this.dynamicMinWidth > this.width) {\r\n          this._set('width', this.dynamicMinWidth);\r\n        }\r\n        if (this.textAlign.indexOf('justify') !== -1) {\r\n          // once text is measured we need to make space fatter to make justified text.\r\n          this.enlargeSpaces();\r\n        }\r\n        // clear cache and re-calculate height\r\n        this.height = this.calcTextHeight();\r\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\r\n      },\r\n\r\n      /**\r\n       * Generate an object that translates the style object so that it is\r\n       * broken up by visual lines (new lines and automatic wrapping).\r\n       * The original text styles object is broken up by actual lines (new lines only),\r\n       * which is only sufficient for Text / IText\r\n       * @private\r\n       */\r\n      _generateStyleMap: function(textInfo) {\r\n        var realLineCount     = 0,\r\n            realLineCharCount = 0,\r\n            charCount         = 0,\r\n            map               = {};\r\n\r\n        for (var i = 0; i < textInfo.graphemeLines.length; i++) {\r\n          if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\r\n            realLineCharCount = 0;\r\n            charCount++;\r\n            realLineCount++;\r\n          }\r\n          else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\r\n            // this case deals with space's that are removed from end of lines when wrapping\r\n            realLineCharCount++;\r\n            charCount++;\r\n          }\r\n\r\n          map[i] = { line: realLineCount, offset: realLineCharCount };\r\n\r\n          charCount += textInfo.graphemeLines[i].length;\r\n          realLineCharCount += textInfo.graphemeLines[i].length;\r\n        }\r\n\r\n        return map;\r\n      },\r\n\r\n      /**\r\n       * Returns true if object has a style property or has it ina specified line\r\n       * @param {Number} lineIndex\r\n       * @return {Boolean}\r\n       */\r\n      styleHas: function(property, lineIndex) {\r\n        if (this._styleMap && !this.isWrapping) {\r\n          var map = this._styleMap[lineIndex];\r\n          if (map) {\r\n            lineIndex = map.line;\r\n          }\r\n        }\r\n        return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\r\n      },\r\n\r\n      /**\r\n       * Returns true if object has no styling or no styling in a line\r\n       * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n       * @return {Boolean}\r\n       */\r\n      isEmptyStyles: function(lineIndex) {\r\n        var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\r\n        var map = this._styleMap[lineIndex];\r\n        var mapNextLine = this._styleMap[lineIndex + 1];\r\n        if (map) {\r\n          lineIndex = map.line;\r\n          offset = map.offset;\r\n        }\r\n        if (mapNextLine) {\r\n          nextLineIndex = mapNextLine.line;\r\n          shouldLimit = nextLineIndex === lineIndex;\r\n          nextOffset = mapNextLine.offset;\r\n        }\r\n        obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n        for (var p1 in obj) {\r\n          for (var p2 in obj[p1]) {\r\n            if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\r\n              // eslint-disable-next-line no-unused-vars\r\n              for (var p3 in obj[p1][p2]) {\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @private\r\n       */\r\n      _getStyleDeclaration: function(lineIndex, charIndex) {\r\n        if (this._styleMap && !this.isWrapping) {\r\n          var map = this._styleMap[lineIndex];\r\n          if (!map) {\r\n            return null;\r\n          }\r\n          lineIndex = map.line;\r\n          charIndex = map.offset + charIndex;\r\n        }\r\n        return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setStyleDeclaration: function(lineIndex, charIndex, style) {\r\n        var map = this._styleMap[lineIndex];\r\n        lineIndex = map.line;\r\n        charIndex = map.offset + charIndex;\r\n\r\n        this.styles[lineIndex][charIndex] = style;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @private\r\n       */\r\n      _deleteStyleDeclaration: function(lineIndex, charIndex) {\r\n        var map = this._styleMap[lineIndex];\r\n        lineIndex = map.line;\r\n        charIndex = map.offset + charIndex;\r\n\r\n        delete this.styles[lineIndex][charIndex];\r\n      },\r\n\r\n      /**\r\n      * probably broken need a fix\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _getLineStyle: function(lineIndex) {\r\n        var map = this._styleMap[lineIndex];\r\n        return this.styles[map.line];\r\n      },\r\n\r\n      /**\r\n       * probably broken need a fix\r\n       * @param {Number} lineIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setLineStyle: function(lineIndex, style) {\r\n        var map = this._styleMap[lineIndex];\r\n        this.styles[map.line] = style;\r\n      },\r\n\r\n      /**\r\n       * probably broken need a fix\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _deleteLineStyle: function(lineIndex) {\r\n        var map = this._styleMap[lineIndex];\r\n        delete this.styles[map.line];\r\n      },\r\n\r\n      /**\r\n       * Wraps text using the 'width' property of Textbox. First this function\r\n       * splits text on newlines, so we preserve newlines entered by the user.\r\n       * Then it wraps each line using the width of the Textbox by calling\r\n       * _wrapLine().\r\n       * @param {Array} lines The string array of text that is split into lines\r\n       * @param {Number} desiredWidth width you want to wrap to\r\n       * @returns {Array} Array of lines\r\n       */\r\n      _wrapText: function(lines, desiredWidth) {\r\n        var wrapped = [], i;\r\n        this.isWrapping = true;\r\n        for (i = 0; i < lines.length; i++) {\r\n          wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\r\n        }\r\n        this.isWrapping = false;\r\n        return wrapped;\r\n      },\r\n\r\n      /**\r\n       * Helper function to measure a string of text, given its lineIndex and charIndex offset\r\n       * it gets called when charBounds are not available yet.\r\n       * @param {CanvasRenderingContext2D} ctx\r\n       * @param {String} text\r\n       * @param {number} lineIndex\r\n       * @param {number} charOffset\r\n       * @returns {number}\r\n       * @private\r\n       */\r\n      _measureWord: function(word, lineIndex, charOffset) {\r\n        var width = 0, prevGrapheme, skipLeft = true;\r\n        charOffset = charOffset || 0;\r\n        for (var i = 0, len = word.length; i < len; i++) {\r\n          var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\r\n          width += box.kernedWidth;\r\n          prevGrapheme = word[i];\r\n        }\r\n        return width;\r\n      },\r\n\r\n      /**\r\n       * Wraps a line of text using the width of the Textbox and a context.\r\n       * @param {Array} line The grapheme array that represent the line\r\n       * @param {Number} lineIndex\r\n       * @param {Number} desiredWidth width you want to wrap the line to\r\n       * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\r\n       * @returns {Array} Array of line(s) into which the given text is wrapped\r\n       * to.\r\n       */\r\n      _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\r\n        var lineWidth        = 0,\r\n            graphemeLines    = [],\r\n            line             = [],\r\n            // spaces in different languges?\r\n            words            = _line.split(this._reSpaceAndTab),\r\n            word             = '',\r\n            offset           = 0,\r\n            infix            = ' ',\r\n            wordWidth        = 0,\r\n            infixWidth       = 0,\r\n            largestWordWidth = 0,\r\n            lineJustStarted = true,\r\n            additionalSpace = this._getWidthOfCharSpacing(),\r\n            reservedSpace = reservedSpace || 0;\r\n\r\n        desiredWidth -= reservedSpace;\r\n        for (var i = 0; i < words.length; i++) {\r\n          // i would avoid resplitting the graphemes\r\n          word = fabric.util.string.graphemeSplit(words[i]);\r\n          wordWidth = this._measureWord(word, lineIndex, offset);\r\n          offset += word.length;\r\n\r\n          lineWidth += infixWidth + wordWidth - additionalSpace;\r\n\r\n          if (lineWidth >= desiredWidth && !lineJustStarted) {\r\n            graphemeLines.push(line);\r\n            line = [];\r\n            lineWidth = wordWidth;\r\n            lineJustStarted = true;\r\n          }\r\n          else {\r\n            lineWidth += additionalSpace;\r\n          }\r\n\r\n          if (!lineJustStarted) {\r\n            line.push(infix);\r\n          }\r\n          line = line.concat(word);\r\n\r\n          infixWidth = this._measureWord([infix], lineIndex, offset);\r\n          offset++;\r\n          lineJustStarted = false;\r\n          // keep track of largest word\r\n          if (wordWidth > largestWordWidth) {\r\n            largestWordWidth = wordWidth;\r\n          }\r\n        }\r\n\r\n        i && graphemeLines.push(line);\r\n\r\n        if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\r\n          this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\r\n        }\r\n\r\n        return graphemeLines;\r\n      },\r\n\r\n      /**\r\n       * Detect if the text line is ended with an hard break\r\n       * text and itext do not have wrapping, return false\r\n       * @param {Number} lineIndex text to split\r\n       * @return {Boolean}\r\n       */\r\n      isEndOfWrapping: function(lineIndex) {\r\n        if (!this._styleMap[lineIndex + 1]) {\r\n          // is last line, return true;\r\n          return true;\r\n        }\r\n        if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\r\n          // this is last line before a line break, return true;\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n      * Gets lines of text to render in the Textbox. This function calculates\r\n      * text wrapping on the fly every time it is called.\r\n      * @param {String} text text to split\r\n      * @returns {Array} Array of lines in the Textbox.\r\n      * @override\r\n      */\r\n      _splitTextIntoLines: function(text) {\r\n        var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\r\n            graphemeLines = this._wrapText(newText.lines, this.width),\r\n            lines = new Array(graphemeLines.length);\r\n\r\n        for (var i = 0; i < graphemeLines.length; i++) {\r\n          lines[i] = graphemeLines[i].join('');\r\n        }\r\n        newText.lines = lines;\r\n        newText.graphemeLines = graphemeLines;\r\n        return newText;\r\n      },\r\n\r\n      getMinWidth: function() {\r\n        return Math.max(this.minWidth, this.dynamicMinWidth);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @method toObject\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns fabric.Textbox instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Textbox\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\r\n     */\r\n    fabric.Textbox.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Textbox', object, callback, 'text');\r\n    };\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\r\n     * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\r\n     */\r\n    var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\r\n\r\n    fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\r\n      lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\r\n\r\n      var t = transform.target;\r\n      if (by === 'x' && t instanceof fabric.Textbox) {\r\n        var tw = t._getTransformedDimensions().x;\r\n        var w = t.width * (localMouse.x / tw);\r\n        if (w >= t.getMinWidth()) {\r\n          t.set('width', w);\r\n          return true;\r\n        }\r\n      }\r\n      else {\r\n        return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\r\n          lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\r\n      }\r\n    };\r\n\r\n    fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\r\n      /**\r\n       * @private\r\n       */\r\n      _removeExtraneousStyles: function() {\r\n        for (var prop in this._styleMap) {\r\n          if (!this._textLines[prop]) {\r\n            delete this.styles[this._styleMap[prop].line];\r\n          }\r\n        }\r\n      },\r\n\r\n    });\r\n\r\n  })();\r\n\r\n  return fabric;\r\n});\r\n\r\n\ndefine('skylark-graphics-canvas2d/Canvas',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Canvas = fabric.Canvas;\r\n});\ndefine('skylark-graphics-canvas2d/Circle',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Circle = fabric.Circle;\r\n});\ndefine('skylark-graphics-canvas2d/Color',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Color = fabric.Color;\r\n});\ndefine('skylark-graphics-canvas2d/Ellipse',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Ellipse = fabric.Ellipse;\r\n});\ndefine('skylark-graphics-canvas2d/Group',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Group = fabric.Group;\r\n});\ndefine('skylark-graphics-canvas2d/Image',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Image = fabric.Image;\r\n});\ndefine('skylark-graphics-canvas2d/Line',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Line = fabric.Line;\r\n});\ndefine('skylark-graphics-canvas2d/Object',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n\tfabric.Object.remove = function() {\r\n        return this.canvas.remove(this);\r\n    };\r\n    \r\n    return canvas2d.Object = fabric.Object;\r\n});\ndefine('skylark-graphics-canvas2d/Path',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Path = fabric.Path;\r\n});\ndefine('skylark-graphics-canvas2d/Point',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Point = fabric.Point;\r\n});\ndefine('skylark-graphics-canvas2d/Polygon',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Polygon = fabric.Polygon;\r\n});\ndefine('skylark-graphics-canvas2d/Polyline',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Polyline = fabric.Polyline;\r\n});\ndefine('skylark-graphics-canvas2d/Rect',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Rect = fabric.Rect;\r\n});\ndefine('skylark-graphics-canvas2d/Text',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Text = fabric.Text;\r\n});\ndefine('skylark-graphics-canvas2d/Triangle',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Triangle = fabric.Triangle;\r\n});\ndefine('skylark-graphics-canvas2d/util',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.util = fabric.util;\r\n});\ndefine('skylark-graphics-canvas2d/main',[\r\n    \"./canvas2d\",\r\n    \"./Canvas\",\r\n    \"./Circle\",\r\n    \"./Color\",\r\n    \"./Ellipse\",\r\n    \"./Group\",\r\n    \"./Image\",\r\n    \"./Line\",\r\n    \"./Object\",\r\n    \"./Path\",\r\n    \"./Point\",\r\n    \"./Polygon\",\r\n    \"./Polyline\",\r\n    \"./Rect\",\r\n    \"./Text\",\r\n    \"./Triangle\",\r\n    \"./util\"\r\n], function(canvas2d) {\r\n    return canvas2d;\r\n});\r\n\ndefine('skylark-graphics-canvas2d', ['skylark-graphics-canvas2d/main'], function (main) { return main; });\n\ndefine('skylark-darkroomjs/Imager',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/finder\",\r\n    \"skylark-ui-swt/Widget\",\r\n    \"skylark-graphics-canvas2d\"\r\n], function(skylark, langx, noder,finder,Widget,canvas2d) {\r\n  'use strict';\r\n\r\n  var Plugins = {};\r\n\r\n  function computeImageViewPort(image) {\r\n    //return {\r\n    //  height : image.height,\r\n    //  width : image.width\r\n    //};\r\n    return {\r\n      height: Math.abs(image.getWidth() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getHeight() * (Math.cos(image.getAngle() * Math.PI/180))),\r\n      width: Math.abs(image.getHeight() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getWidth() * (Math.cos(image.getAngle() * Math.PI/180))),\r\n    }\r\n  }\r\n\r\n // Toolbar object.\r\n  function Toolbar(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  Toolbar.prototype = {\r\n    createButtonGroup: function(options) {\r\n      var buttonGroup = document.createElement('div');\r\n      buttonGroup.className = 'darkroom-button-group';\r\n      this.element.appendChild(buttonGroup);\r\n\r\n      return new ButtonGroup(buttonGroup);\r\n    }\r\n  };\r\n\r\n  // ButtonGroup object.\r\n  function ButtonGroup(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  ButtonGroup.prototype = {\r\n    createButton: function(options) {\r\n      var defaults = {\r\n        image: 'help',\r\n        type: 'default',\r\n        group: 'default',\r\n        hide: false,\r\n        disabled: false\r\n      };\r\n\r\n      options = langx.mixin({},defaults,options);\r\n\r\n      var buttonElement = document.createElement('button');\r\n      buttonElement.type = 'button';\r\n      buttonElement.className = 'darkroom-button darkroom-button-' + options.type;\r\n      buttonElement.innerHTML = '<svg class=\"darkroom-icon\"><use xlink:href=\"#' + options.image + '\" /></svg>';\r\n      this.element.appendChild(buttonElement);\r\n\r\n      var button = new Button(buttonElement);\r\n      button.hide(options.hide);\r\n      button.disable(options.disabled);\r\n\r\n      return button;\r\n    }\r\n  }\r\n\r\n  // Button object.\r\n  function Button(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  Button.prototype = {\r\n    addEventListener: function(eventName, listener) {\r\n      if (this.element.addEventListener){\r\n        this.element.addEventListener(eventName, listener);\r\n      } else if (this.element.attachEvent) {\r\n        this.element.attachEvent('on' + eventName, listener);\r\n      }\r\n    },\r\n    removeEventListener: function(eventName, listener) {\r\n      if (this.element.removeEventListener){\r\n        this.element.removeEventListener(eventName, listener);\r\n      }\r\n    },\r\n    active: function(value) {\r\n      if (value)\r\n        this.element.classList.add('darkroom-button-active');\r\n      else\r\n        this.element.classList.remove('darkroom-button-active');\r\n    },\r\n    hide: function(value) {\r\n      if (value)\r\n        this.element.classList.add('darkroom-button-hidden');\r\n      else\r\n        this.element.classList.remove('darkroom-button-hidden');\r\n    },\r\n    disable: function(value) {\r\n      this.element.disabled = (value) ? true : false;\r\n    }\r\n  };\r\n\r\n  var Imager = Widget.inherit({\r\n    klassName : \"Imager\",\r\n\r\n    /*\r\n     * @param {Element} el The container element. \r\n     */\r\n    _construct : function(el,options,plugins) {\r\n      if (typeof el === 'string') {\r\n        el = finder.find(el);\r\n      }\r\n\r\n      this._initializeDOM(el);\r\n      this.overrided(this.containerElement,options);\r\n      //this.options = langx.mixin({}, this.defaults,options);\r\n\r\n      // List of the instancied plugins\r\n      this.plugins = {};\r\n\r\n//      var image = new Image();\r\n//      image.onload = function() {\r\n        // Initialize the DOM/canvas2d elements\r\n        this._initializeImage();\r\n\r\n        // Then initialize the plugins\r\n        this._initializePlugins();\r\n\r\n        // Public method to adjust image according to the canvas\r\n        this.refresh(function() {\r\n          // Execute a custom callback after initialization\r\n          this.options.initialize.bind(this).call();\r\n        }.bind(this));\r\n\r\n  //    }.bind(this)\r\n\r\n      //image.crossOrigin = 'anonymous';\r\n      //image.src = el.src;\r\n    },\r\n\r\n    // Reference to the main container element\r\n    containerElement: null,\r\n\r\n    // Reference to the canvas2d canvas object\r\n    canvas: null,\r\n\r\n    // Reference to the canvas2d image object\r\n    image: null,\r\n\r\n    // Reference to the canvas2d source canvas object\r\n    sourceCanvas: null,\r\n\r\n    // Reference to the canvas2d source image object\r\n    sourceImage: null,\r\n\r\n    // Track of the original image element\r\n    originalImageElement: null,\r\n\r\n    // Stack of transformations to apply to the image source\r\n    transformations: [],\r\n\r\n    // Default options\r\n    options: {\r\n      // Canvas properties (dimension, ratio, color)\r\n      minWidth: null,\r\n      minHeight: null,\r\n      maxWidth: null,\r\n      maxHeight: null,\r\n      ratio: null,\r\n      backgroundColor: '#fff',\r\n\r\n      // Plugins options\r\n      plugins: {},\r\n\r\n      // Post-initialisation callback\r\n      initialize: function() { /* noop */ }\r\n    },\r\n\r\n\r\n\r\n    selfDestroy: function() {\r\n      var container = this.containerElement;\r\n      var image = new Image();\r\n      image.onload = function() {\r\n        container.parentNode.replaceChild(image, container);\r\n      }\r\n\r\n      image.src = this.sourceImage.toDataURL();\r\n    },\r\n\r\n    // Add ability to attach event listener on the core object.\r\n    // It uses the canvas element to process events.\r\n    addEventListener: function(eventName, callback) {\r\n      var el = this.canvas.getElement();\r\n      if (el.addEventListener){\r\n        el.addEventListener(eventName, callback);\r\n      } else if (el.attachEvent) {\r\n        el.attachEvent('on' + eventName, callback);\r\n      }\r\n    },\r\n\r\n    dispatchEvent: function(eventName) {\r\n      // Use the old way of creating event to be IE compatible\r\n      // See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\r\n      var event = document.createEvent('Event');\r\n      event.initEvent(eventName, true, true);\r\n\r\n      this.canvas.getElement().dispatchEvent(event);\r\n    },\r\n\r\n    // Adjust image & canvas dimension according to min/max width/height\r\n    // and ratio specified in the options.\r\n    // This method should be called after each image transformation.\r\n    refresh: function(next) {\r\n      var clone = new Image();\r\n      clone.onload = function() {\r\n        this._replaceCurrentImage(new canvas2d.Image(clone));\r\n\r\n        if (next) next();\r\n      }.bind(this);\r\n      clone.src = this.sourceImage.toDataURL();\r\n    },\r\n\r\n    _replaceCurrentImage: function(newImage) {\r\n      if (this.image) {\r\n        this.image.remove();\r\n      }\r\n\r\n      this.image = newImage;\r\n      this.image.selectable = false;\r\n\r\n      // Adjust width or height according to specified ratio\r\n      var viewport = computeImageViewPort(this.image);\r\n      var canvasWidth = viewport.width;\r\n      var canvasHeight = viewport.height;\r\n\r\n      if (null !== this.options.ratio) {\r\n        var canvasRatio = +this.options.ratio;\r\n        var currentRatio = canvasWidth / canvasHeight;\r\n\r\n        if (currentRatio > canvasRatio) {\r\n          canvasHeight = canvasWidth / canvasRatio;\r\n        } else if (currentRatio < canvasRatio) {\r\n          canvasWidth = canvasHeight * canvasRatio;\r\n        }\r\n      }\r\n\r\n      // Then scale the image to fit into dimension limits\r\n      var scaleMin = 1;\r\n      var scaleMax = 1;\r\n      var scaleX = 1;\r\n      var scaleY = 1;\r\n\r\n      if (null !== this.options.maxWidth && this.options.maxWidth < canvasWidth) {\r\n        scaleX =  this.options.maxWidth / canvasWidth;\r\n      }\r\n      if (null !== this.options.maxHeight && this.options.maxHeight < canvasHeight) {\r\n        scaleY =  this.options.maxHeight / canvasHeight;\r\n      }\r\n      scaleMin = Math.min(scaleX, scaleY);\r\n\r\n      scaleX = 1;\r\n      scaleY = 1;\r\n      if (null !== this.options.minWidth && this.options.minWidth > canvasWidth) {\r\n        scaleX =  this.options.minWidth / canvasWidth;\r\n      }\r\n      if (null !== this.options.minHeight && this.options.minHeight > canvasHeight) {\r\n        scaleY =  this.options.minHeight / canvasHeight;\r\n      }\r\n      scaleMax = Math.max(scaleX, scaleY);\r\n\r\n      var scale = scaleMax * scaleMin; // one should be equals to 1\r\n\r\n      canvasWidth *= scale;\r\n      canvasHeight *= scale;\r\n\r\n      // Finally place the image in the center of the canvas\r\n      this.image.setScaleX(1 * scale);\r\n      this.image.setScaleY(1 * scale);\r\n      this.canvas.add(this.image);\r\n      this.canvas.setWidth(canvasWidth);\r\n      this.canvas.setHeight(canvasHeight);\r\n      this.canvas.centerObject(this.image);\r\n      this.image.setCoords();\r\n    },\r\n\r\n    // Apply the transformation on the current image and save it in the\r\n    // transformations stack (in order to reconstitute the previous states\r\n    // of the image).\r\n    applyTransformation: function(transformation) {\r\n      this.transformations.push(transformation);\r\n\r\n      transformation.applyTransformation(\r\n        this.sourceCanvas,\r\n        this.sourceImage,\r\n        this._postTransformation.bind(this)\r\n      );\r\n    },\r\n\r\n    _postTransformation: function(newImage) {\r\n      if (newImage)\r\n        this.sourceImage = newImage;\r\n\r\n      this.refresh(function() {\r\n        this.dispatchEvent('core:transformation');\r\n      }.bind(this));\r\n    },\r\n\r\n    // Initialize image from original element plus re-apply every\r\n    // transformations.\r\n    reinitializeImage: function() {\r\n      this.sourceImage.remove();\r\n      this._initializeImage();\r\n      this._popTransformation(this.transformations.slice())\r\n    },\r\n\r\n    _popTransformation: function(transformations) {\r\n      if (0 === transformations.length) {\r\n        this.dispatchEvent('core:reinitialized');\r\n        this.refresh();\r\n        return;\r\n      }\r\n\r\n      var transformation = transformations.shift();\r\n\r\n      var next = function(newImage) {\r\n        if (newImage) this.sourceImage = newImage;\r\n        this._popTransformation(transformations)\r\n      };\r\n\r\n      transformation.applyTransformation(\r\n        this.sourceCanvas,\r\n        this.sourceImage,\r\n        next.bind(this)\r\n      );\r\n    },\r\n\r\n    // Create the DOM elements and instanciate the canvas2d canvas.\r\n    // The image element is replaced by a new `div` element.\r\n    // However the original image is re-injected in order to keep a trace of it.\r\n    _initializeDOM: function(imageElement) {\r\n      // Container\r\n      var mainContainerElement = document.createElement('div');\r\n      mainContainerElement.className = 'darkroom-container';\r\n\r\n      // Toolbar\r\n      var toolbarElement = document.createElement('div');\r\n      toolbarElement.className = 'darkroom-toolbar';\r\n      mainContainerElement.appendChild(toolbarElement);\r\n\r\n      // Viewport canvas\r\n      var canvasContainerElement = document.createElement('div');\r\n      canvasContainerElement.className = 'darkroom-image-container';\r\n      var canvasElement = this.canvasElement = document.createElement('canvas');\r\n      canvasContainerElement.appendChild(canvasElement);\r\n      mainContainerElement.appendChild(canvasContainerElement);\r\n\r\n      // Source canvas\r\n      var sourceCanvasContainerElement = document.createElement('div');\r\n      sourceCanvasContainerElement.className = 'darkroom-source-container';\r\n      sourceCanvasContainerElement.style.display = 'none';\r\n      var sourceCanvasElement = this.sourceCanvasElement = document.createElement('canvas');\r\n      sourceCanvasContainerElement.appendChild(sourceCanvasElement);\r\n      mainContainerElement.appendChild(sourceCanvasContainerElement);\r\n\r\n      // Original image\r\n      imageElement.parentNode.replaceChild(mainContainerElement, imageElement);\r\n      imageElement.style.display = 'none';\r\n      mainContainerElement.appendChild(imageElement);\r\n\r\n      // Instanciate object from elements\r\n      this.containerElement = mainContainerElement;\r\n      this.originalImageElement = imageElement;\r\n\r\n      this.toolbar = new Toolbar(toolbarElement);\r\n\r\n    },\r\n\r\n    // Instanciate the canvas2d image object.\r\n    // The image is created as a static element with no control,\r\n    // then it is add in the canvas2d canvas object.\r\n    _initializeImage: function() {\r\n      this.canvas = new canvas2d.Canvas(this.canvasElement, {\r\n        selection: false,\r\n        backgroundColor: this.options.backgroundColor\r\n      });\r\n\r\n      this.sourceCanvas = new canvas2d.Canvas(this.sourceCanvasElement, {\r\n        selection: false,\r\n        backgroundColor: this.options.backgroundColor\r\n      });\r\n \r\n      this.sourceImage = new canvas2d.Image(this.originalImageElement, {\r\n        // Some options to make the image static\r\n        selectable: false,\r\n        evented: false,\r\n        lockMovementX: true,\r\n        lockMovementY: true,\r\n        lockRotation: true,\r\n        lockScalingX: true,\r\n        lockScalingY: true,\r\n        lockUniScaling: true,\r\n        hasControls: false,\r\n        hasBorders: false,\r\n      });\r\n\r\n      this.sourceCanvas.add(this.sourceImage);\r\n\r\n      // Adjust width or height according to specified ratio\r\n      var viewport = computeImageViewPort(this.sourceImage);\r\n      var canvasWidth = viewport.width;\r\n      var canvasHeight = viewport.height;\r\n\r\n      this.sourceCanvas.setWidth(canvasWidth);\r\n      this.sourceCanvas.setHeight(canvasHeight);\r\n      this.sourceCanvas.centerObject(this.sourceImage);\r\n      this.sourceImage.setCoords();\r\n    },\r\n\r\n    // Initialize every plugins.\r\n    // Note that plugins are instanciated in the same order than they\r\n    // are declared in the parameter object.\r\n    _initializePlugins: function() {\r\n      for (var name in Plugins) {\r\n        var pluginInfo = Plugins[name];\r\n        var options = this.options.plugins[name];\r\n\r\n        // Setting false into the plugin options will disable the plugin\r\n        if (options === false)\r\n          continue;\r\n\r\n        // Avoid any issues with _proto_\r\n        if (!Plugins.hasOwnProperty(name))\r\n          continue;\r\n\r\n        this.plugins[name] = new pluginInfo.ctor(this, options);\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n\r\n  Imager.Plugin = langx.Evented.inherit({\r\n    klassName : \"Plugin\",\r\n\r\n    defaults: {},\r\n\r\n    init : function(imager,options) {\r\n      this.imager = imager;\r\n      this.options = langx.mixin({},this.defaults,options);\r\n\r\n    }\r\n  });\r\n\r\n\r\n  Imager.Transformation = langx.Evented.inherit({\r\n    klassName : \"Transformation\",\r\n\r\n    init : function(options) {\r\n      this.options = options;\r\n    }\r\n  });\r\n\r\n\r\n  Imager.installPlugin = function(setting) {\r\n\r\n    //Plugins.push(setting);\r\n    Plugins[setting.name] = setting;\r\n  };\r\n\r\n  return skylark.attach(\"itg.darkroomjs.Imager\",Imager);\r\n\r\n});\r\n\r\n\ndefine('skylark-darkroomjs/plugins/history',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-graphics-canvas2d\",\r\n  '../Imager',\r\n],function(langx,noder, $, canvas2d,Imager) {\r\n  'use strict';\r\n\r\n  var HistoryPlugin= Imager.Plugin.inherit({\r\n     undoTransformations: null,\r\n\r\n     init : function(imager,options) {\r\n      this.overrided(imager,options);\r\n      this.undoTransformations = [];\r\n      this._initButtons();\r\n\r\n      this.imager.addEventListener('core:transformation', this._onTranformationApplied.bind(this));\r\n    },\r\n\r\n    undo: function() {\r\n      if (this.imager.transformations.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var lastTransformation = this.imager.transformations.pop();\r\n      this.undoTransformations.unshift(lastTransformation);\r\n\r\n      this.imager.reinitializeImage();\r\n      this._updateButtons();\r\n    },\r\n\r\n    redo: function() {\r\n      if (this.undoTransformations.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var cancelTransformation = this.undoTransformations.shift();\r\n      this.imager.transformations.push(cancelTransformation);\r\n\r\n      this.imager.reinitializeImage();\r\n      this._updateButtons();\r\n    },\r\n\r\n    _initButtons: function() {\r\n      var buttonGroup = this.imager.toolbar.createButtonGroup();\r\n\r\n      this.backButton = buttonGroup.createButton({\r\n        image: 'undo',\r\n        disabled: true\r\n      });\r\n\r\n      this.forwardButton = buttonGroup.createButton({\r\n        image: 'redo',\r\n        disabled: true\r\n      });\r\n\r\n      this.backButton.addEventListener('click', this.undo.bind(this));\r\n      this.forwardButton.addEventListener('click', this.redo.bind(this));\r\n\r\n      return this;\r\n    },\r\n\r\n    _updateButtons: function() {\r\n      this.backButton.disable((this.imager.transformations.length === 0))\r\n      this.forwardButton.disable((this.undoTransformations.length === 0))\r\n    },\r\n\r\n    _onTranformationApplied: function() {\r\n      this.undoTransformations = [];\r\n      this._updateButtons();\r\n    }\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"history\",\r\n    ctor : HistoryPlugin\r\n  };\r\n\r\n  Imager.installPlugin(pluginInfo);\r\n\r\n  return pluginInfo;\r\n\r\n  \r\n});\r\n\ndefine('skylark-utils-dom/transforms',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(dom,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return dom.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils-dom/images',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(dom,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return dom.images = images;\r\n});\r\n\ndefine('skylark-darkroomjs/plugins/crop',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/images\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-graphics-canvas2d\",\r\n  '../Imager',\r\n],function(langx,noder, images,$, canvas2d,Imager) {\r\n  'use strict';\r\n\r\n  function computeImageViewPort(image) {\r\n    //return {\r\n    //  height : image.height,\r\n    //  width : image.width\r\n    //};\r\n    return {\r\n      height: Math.abs(image.getWidth() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getHeight() * (Math.cos(image.getAngle() * Math.PI/180))),\r\n      width: Math.abs(image.getHeight() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getWidth() * (Math.cos(image.getAngle() * Math.PI/180))),\r\n    }\r\n  }\r\n  \r\n\r\n  var Crop = Imager.Transformation.inherit({\r\n    applyTransformation: function(canvas, image, next) {\r\n      // Snapshot the image delimited by the crop zone\r\n      var snapshot = new Image();\r\n\r\n      var viewport = computeImageViewPort(image);\r\n      var imageWidth = viewport.width;\r\n      var imageHeight = viewport.height;\r\n\r\n      var left = this.options.left * imageWidth;\r\n      var top = this.options.top * imageHeight;\r\n      var width = Math.min(this.options.width * imageWidth, imageWidth - left);\r\n      var height = Math.min(this.options.height * imageHeight, imageHeight - top);\r\n\r\n      snapshot.src = canvas.toDataURL({\r\n        left: left,\r\n        top: top,\r\n        width: width,\r\n        height: height,\r\n      });\r\n\r\n      images.loaded(snapshot).then(function() {\r\n        // Validate image\r\n        if (height < 1 || width < 1)\r\n          return;\r\n\r\n        var imgInstance = new canvas2d.Image(snapshot, {\r\n          // options to make the image static\r\n          selectable: false,\r\n          evented: false,\r\n          lockMovementX: true,\r\n          lockMovementY: true,\r\n          lockRotation: true,\r\n          lockScalingX: true,\r\n          lockScalingY: true,\r\n          lockUniScaling: true,\r\n          hasControls: false,\r\n          hasBorders: false\r\n        });\r\n\r\n        var width = snapshot.width;\r\n        var height = snapshot.height;\r\n\r\n        // Update canvas size\r\n        canvas.setWidth(width);\r\n        canvas.setHeight(height);\r\n\r\n        // Add image\r\n        image.remove();\r\n        canvas.add(imgInstance);\r\n\r\n        next(imgInstance);\r\n      });\r\n    }\r\n  });\r\n\r\n  var CropZone = canvas2d.util.createClass(canvas2d.Rect, {\r\n    _render: function(ctx) {\r\n      this.callSuper('_render', ctx);\r\n\r\n      var canvas = ctx.canvas;\r\n      var dashWidth = 7;\r\n\r\n      // Set original scale\r\n      var flipX = this.flipX ? -1 : 1;\r\n      var flipY = this.flipY ? -1 : 1;\r\n      var scaleX = flipX / this.scaleX;\r\n      var scaleY = flipY / this.scaleY;\r\n\r\n      ctx.scale(scaleX, scaleY);\r\n\r\n      // Overlay rendering\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n      this._renderOverlay(ctx);\r\n\r\n      // Set dashed borders\r\n      if (ctx.setLineDash !== undefined)\r\n        ctx.setLineDash([dashWidth, dashWidth]);\r\n      else if (ctx.mozDash !== undefined)\r\n        ctx.mozDash = [dashWidth, dashWidth];\r\n\r\n      // First lines rendering with black\r\n      ctx.strokeStyle = 'rgba(0, 0, 0, 0.2)';\r\n      this._renderBorders(ctx);\r\n      this._renderGrid(ctx);\r\n\r\n      // Re render lines in white\r\n      ctx.lineDashOffset = dashWidth;\r\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.4)';\r\n      this._renderBorders(ctx);\r\n      this._renderGrid(ctx);\r\n\r\n      // Reset scale\r\n      ctx.scale(1/scaleX, 1/scaleY);\r\n    },\r\n\r\n    _renderOverlay: function(ctx) {\r\n      var canvas = ctx.canvas;\r\n\r\n      //\r\n      //    x0    x1        x2      x3\r\n      // y0 +------------------------+\r\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\r\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\r\n      // y1 +------+---------+-------+\r\n      //    |\\\\\\\\\\\\|         |\\\\\\\\\\\\\\|\r\n      //    |\\\\\\\\\\\\|    0    |\\\\\\\\\\\\\\|\r\n      //    |\\\\\\\\\\\\|         |\\\\\\\\\\\\\\|\r\n      // y2 +------+---------+-------+\r\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\r\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\r\n      // y3 +------------------------+\r\n      //\r\n\r\n      var x0 = Math.ceil(-this.getWidth() / 2 - this.getLeft());\r\n      var x1 = Math.ceil(-this.getWidth() / 2);\r\n      var x2 = Math.ceil(this.getWidth() / 2);\r\n      var x3 = Math.ceil(this.getWidth() / 2 + (canvas.width - this.getWidth() - this.getLeft()));\r\n\r\n      var y0 = Math.ceil(-this.getHeight() / 2 - this.getTop());\r\n      var y1 = Math.ceil(-this.getHeight() / 2);\r\n      var y2 = Math.ceil(this.getHeight() / 2);\r\n      var y3 = Math.ceil(this.getHeight() / 2 + (canvas.height - this.getHeight() - this.getTop()));\r\n\r\n      ctx.beginPath();\r\n      \r\n      // Draw outer rectangle.\r\n      // Numbers are +/-1 so that overlay edges don't get blurry.\r\n      ctx.moveTo(x0 - 1, y0 - 1);\r\n      ctx.lineTo(x3 + 1, y0 - 1);\r\n      ctx.lineTo(x3 + 1, y3 + 1);\r\n      ctx.lineTo(x0 - 1, y3 - 1);\r\n      ctx.lineTo(x0 - 1, y0 - 1);\r\n      ctx.closePath();\r\n\r\n      // Draw inner rectangle.\r\n      ctx.moveTo(x1, y1);\r\n      ctx.lineTo(x1, y2);\r\n      ctx.lineTo(x2, y2);\r\n      ctx.lineTo(x2, y1);\r\n      ctx.lineTo(x1, y1);\r\n\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    },\r\n\r\n    _renderBorders: function(ctx) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getWidth()/2, -this.getHeight()/2); // upper left\r\n      ctx.lineTo(this.getWidth()/2, -this.getHeight()/2); // upper right\r\n      ctx.lineTo(this.getWidth()/2, this.getHeight()/2); // down right\r\n      ctx.lineTo(-this.getWidth()/2, this.getHeight()/2); // down left\r\n      ctx.lineTo(-this.getWidth()/2, -this.getHeight()/2); // upper left\r\n      ctx.stroke();\r\n    },\r\n\r\n    _renderGrid: function(ctx) {\r\n      return;\r\n      // Vertical lines\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getWidth()/2 + 1/3 * this.getWidth(), -this.getHeight()/2);\r\n      ctx.lineTo(-this.getWidth()/2 + 1/3 * this.getWidth(), this.getHeight()/2);\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getWidth()/2 + 2/3 * this.getWidth(), -this.getHeight()/2);\r\n      ctx.lineTo(-this.getWidth()/2 + 2/3 * this.getWidth(), this.getHeight()/2);\r\n      ctx.stroke();\r\n      // Horizontal lines\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getWidth()/2, -this.getHeight()/2 + 1/3 * this.getHeight());\r\n      ctx.lineTo(this.getWidth()/2, -this.getHeight()/2 + 1/3 * this.getHeight());\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getWidth()/2, -this.getHeight()/2 + 2/3 * this.getHeight());\r\n      ctx.lineTo(this.getWidth()/2, -this.getHeight()/2 + 2/3 * this.getHeight());\r\n      ctx.stroke();\r\n    }\r\n  });\r\n\r\n  var CropPlugin = Imager.Plugin.inherit({\r\n    // Init point\r\n    startX: null,\r\n    startY: null,\r\n\r\n    // Keycrop\r\n    isKeyCroping: false,\r\n    isKeyLeft: false,\r\n    isKeyUp: false,\r\n\r\n    defaults: {\r\n      // min crop dimension\r\n      minHeight: 1,\r\n      minWidth: 1,\r\n      // ensure crop ratio\r\n      ratio: null,\r\n      // quick crop feature (set a key code to enable it)\r\n      quickCropKey: false\r\n    },\r\n\r\n     init : function(imager,options) {\r\n      this.overrided(imager,options);\r\n      var buttonGroup = this.imager.toolbar.createButtonGroup();\r\n\r\n      this.cropButton = buttonGroup.createButton({\r\n        image: 'crop'\r\n      });\r\n      this.okButton = buttonGroup.createButton({\r\n        image: 'done',\r\n        type: 'success',\r\n        hide: true\r\n      });\r\n      this.cancelButton = buttonGroup.createButton({\r\n        image: 'close',\r\n        type: 'danger',\r\n        hide: true\r\n      });\r\n\r\n      // Buttons click\r\n      this.cropButton.addEventListener('click', this.toggleCrop.bind(this));\r\n      this.okButton.addEventListener('click', this.cropCurrentZone.bind(this));\r\n      this.cancelButton.addEventListener('click', this.releaseFocus.bind(this));\r\n\r\n      // Canvas events\r\n      this.imager.canvas.on('mouse:down', this.onMouseDown.bind(this));\r\n      this.imager.canvas.on('mouse:move', this.onMouseMove.bind(this));\r\n      this.imager.canvas.on('mouse:up', this.onMouseUp.bind(this));\r\n      this.imager.canvas.on('object:moving', this.onObjectMoving.bind(this));\r\n      this.imager.canvas.on('object:scaling', this.onObjectScaling.bind(this));\r\n\r\n      canvas2d.util.addListener(document, 'keydown', this.onKeyDown.bind(this));\r\n      canvas2d.util.addListener(document, 'keyup', this.onKeyUp.bind(this));\r\n\r\n      this.imager.addEventListener('core:transformation', this.releaseFocus.bind(this));\r\n    },\r\n\r\n    // Avoid crop zone to go beyond the canvas edges\r\n    onObjectMoving: function(event) {\r\n      if (!this.hasFocus()) {\r\n        return;\r\n      }\r\n\r\n      var currentObject = event.target;\r\n      if (currentObject !== this.cropZone)\r\n        return;\r\n\r\n      var canvas = this.imager.canvas;\r\n      var x = currentObject.getLeft(), y = currentObject.getTop();\r\n      var w = currentObject.getWidth(), h = currentObject.getHeight();\r\n      var maxX = canvas.getWidth() - w;\r\n      var maxY = canvas.getHeight() - h;\r\n\r\n      if (x < 0)\r\n        currentObject.set('left', 0);\r\n      if (y < 0)\r\n        currentObject.set('top', 0);\r\n      if (x > maxX)\r\n        currentObject.set('left', maxX);\r\n      if (y > maxY)\r\n        currentObject.set('top', maxY);\r\n\r\n      this.imager.dispatchEvent('crop:update');\r\n    },\r\n\r\n    // Prevent crop zone from going beyond the canvas edges (like mouseMove)\r\n    onObjectScaling: function(event) {\r\n      if (!this.hasFocus()) {\r\n        return;\r\n      }\r\n\r\n      var preventScaling = false;\r\n      var currentObject = event.target;\r\n      if (currentObject !== this.cropZone)\r\n        return;\r\n\r\n      var canvas = this.imager.canvas;\r\n      var pointer = canvas.getPointer(event.e);\r\n      var x = pointer.x;\r\n      var y = pointer.y;\r\n\r\n      var minX = currentObject.getLeft();\r\n      var minY = currentObject.getTop();\r\n      var maxX = currentObject.getLeft() + currentObject.getWidth();\r\n      var maxY = currentObject.getTop() + currentObject.getHeight();\r\n\r\n      if (null !== this.options.ratio) {\r\n        if (minX < 0 || maxX > canvas.getWidth() || minY < 0 || maxY > canvas.getHeight()) {\r\n          preventScaling = true;\r\n        }\r\n      }\r\n\r\n      if (minX < 0 || maxX > canvas.getWidth() || preventScaling) {\r\n        var lastScaleX = this.lastScaleX || 1;\r\n        currentObject.setScaleX(lastScaleX);\r\n      }\r\n      if (minX < 0) {\r\n        currentObject.setLeft(0);\r\n      }\r\n\r\n      if (minY < 0 || maxY > canvas.getHeight() || preventScaling) {\r\n        var lastScaleY = this.lastScaleY || 1;\r\n        currentObject.setScaleY(lastScaleY);\r\n      }\r\n      if (minY < 0) {\r\n        currentObject.setTop(0);\r\n      }\r\n\r\n      if (currentObject.getWidth() < this.options.minWidth) {\r\n        currentObject.scaleToWidth(this.options.minWidth);\r\n      }\r\n      if (currentObject.getHeight() < this.options.minHeight) {\r\n        currentObject.scaleToHeight(this.options.minHeight);\r\n      }\r\n\r\n      this.lastScaleX = currentObject.getScaleX();\r\n      this.lastScaleY = currentObject.getScaleY();\r\n\r\n      this.imager.dispatchEvent('crop:update');\r\n    },\r\n\r\n    // Init crop zone\r\n    onMouseDown: function(event) {\r\n      if (!this.hasFocus()) {\r\n        return;\r\n      }\r\n\r\n      var canvas = this.imager.canvas;\r\n\r\n      // recalculate offset, in case canvas was manipulated since last `calcOffset`\r\n      canvas.calcOffset();\r\n      var pointer = canvas.getPointer(event.e);\r\n      var x = pointer.x;\r\n      var y = pointer.y;\r\n      var point = new canvas2d.Point(x, y);\r\n\r\n      // Check if user want to scale or drag the crop zone.\r\n      var activeObject = canvas.getActiveObject();\r\n      if (activeObject === this.cropZone || this.cropZone.containsPoint(point)) {\r\n        return;\r\n      }\r\n\r\n      canvas.discardActiveObject();\r\n      this.cropZone.setWidth(0);\r\n      this.cropZone.setHeight(0);\r\n      this.cropZone.setScaleX(1);\r\n      this.cropZone.setScaleY(1);\r\n\r\n      this.startX = x;\r\n      this.startY = y;\r\n    },\r\n\r\n    // Extend crop zone\r\n    onMouseMove: function(event) {\r\n      // Quick crop feature\r\n      if (this.isKeyCroping)\r\n        return this.onMouseMoveKeyCrop(event);\r\n\r\n      if (null === this.startX || null === this.startY) {\r\n        return;\r\n      }\r\n\r\n      var canvas = this.imager.canvas;\r\n      var pointer = canvas.getPointer(event.e);\r\n      var x = pointer.x;\r\n      var y = pointer.y;\r\n\r\n      this._renderCropZone(this.startX, this.startY, x, y);\r\n    },\r\n\r\n    onMouseMoveKeyCrop: function(event) {\r\n      var canvas = this.imager.canvas;\r\n      var zone = this.cropZone;\r\n\r\n      var pointer = canvas.getPointer(event.e);\r\n      var x = pointer.x;\r\n      var y = pointer.y;\r\n\r\n      if (!zone.left || !zone.top) {\r\n        zone.setTop(y);\r\n        zone.setLeft(x);\r\n      }\r\n\r\n      this.isKeyLeft =  x < zone.left + zone.width / 2 ;\r\n      this.isKeyUp = y < zone.top + zone.height / 2 ;\r\n\r\n      this._renderCropZone(\r\n        Math.min(zone.left, x),\r\n        Math.min(zone.top, y),\r\n        Math.max(zone.left+zone.width, x),\r\n        Math.max(zone.top+zone.height, y)\r\n      );\r\n    },\r\n\r\n    // Finish crop zone\r\n    onMouseUp: function(event) {\r\n      if (null === this.startX || null === this.startY) {\r\n        return;\r\n      }\r\n\r\n      var canvas = this.imager.canvas;\r\n      this.cropZone.setCoords();\r\n      canvas.setActiveObject(this.cropZone);\r\n      canvas.calcOffset();\r\n\r\n      this.startX = null;\r\n      this.startY = null;\r\n    },\r\n\r\n    onKeyDown: function(event) {\r\n      if (false === this.options.quickCropKey || event.keyCode !== this.options.quickCropKey || this.isKeyCroping)\r\n        return;\r\n\r\n      // Active quick crop flow\r\n      this.isKeyCroping = true ;\r\n      this.imager.canvas.discardActiveObject();\r\n      this.cropZone.setWidth(0);\r\n      this.cropZone.setHeight(0);\r\n      this.cropZone.setScaleX(1);\r\n      this.cropZone.setScaleY(1);\r\n      this.cropZone.setTop(0);\r\n      this.cropZone.setLeft(0);\r\n    },\r\n\r\n    onKeyUp: function(event) {\r\n      if (false === this.options.quickCropKey || event.keyCode !== this.options.quickCropKey || !this.isKeyCroping)\r\n        return;\r\n\r\n      // Unactive quick crop flow\r\n      this.isKeyCroping = false;\r\n      this.startX = 1;\r\n      this.startY = 1;\r\n      this.onMouseUp();\r\n    },\r\n\r\n    selectZone: function(x, y, width, height, forceDimension) {\r\n      if (!this.hasFocus())\r\n        this.requireFocus();\r\n\r\n      if (!forceDimension) {\r\n        this._renderCropZone(x, y, x+width, y+height);\r\n      } else {\r\n        this.cropZone.set({\r\n          'left': x,\r\n          'top': y,\r\n          'width': width,\r\n          'height': height\r\n        });\r\n      }\r\n\r\n      var canvas = this.imager.canvas;\r\n      canvas.bringToFront(this.cropZone);\r\n      this.cropZone.setCoords();\r\n      canvas.setActiveObject(this.cropZone);\r\n      canvas.calcOffset();\r\n\r\n      this.imager.dispatchEvent('crop:update');\r\n    },\r\n\r\n    toggleCrop: function() {\r\n      if (!this.hasFocus())\r\n        this.requireFocus();\r\n      else\r\n        this.releaseFocus();\r\n    },\r\n\r\n    cropCurrentZone: function() {\r\n      if (!this.hasFocus())\r\n        return;\r\n\r\n      // Avoid croping empty zone\r\n      if (this.cropZone.width < 1 && this.cropZone.height < 1)\r\n        return;\r\n\r\n      var image = this.imager.image;\r\n\r\n      // Compute crop zone dimensions\r\n      var top = this.cropZone.getTop() - image.getTop();\r\n      var left = this.cropZone.getLeft() - image.getLeft();\r\n      var width = this.cropZone.getWidth();\r\n      var height = this.cropZone.getHeight();\r\n\r\n      // Adjust dimensions to image only\r\n      if (top < 0) {\r\n        height += top;\r\n        top = 0;\r\n      }\r\n\r\n      if (left < 0) {\r\n        width += left;\r\n        left = 0;\r\n      }\r\n\r\n      // Apply crop transformation.\r\n      // Make sure to use relative dimension since the crop will be applied\r\n      // on the source image.\r\n      this.imager.applyTransformation(new Crop({\r\n        top: top / image.getHeight(),\r\n        left: left / image.getWidth(),\r\n        width: width / image.getWidth(),\r\n        height: height / image.getHeight(),\r\n      }));\r\n    },\r\n\r\n    // Test wether crop zone is set\r\n    hasFocus: function() {\r\n      return this.cropZone !== undefined;\r\n    },\r\n\r\n    // Create the crop zone\r\n    requireFocus: function() {\r\n      this.cropZone = new CropZone({\r\n        fill: 'transparent',\r\n        hasBorders: false,\r\n        originX: 'left',\r\n        originY: 'top',\r\n        //stroke: '#444',\r\n        //strokeDashArray: [5, 5],\r\n        //borderColor: '#444',\r\n        cornerColor: '#444',\r\n        cornerSize: 8,\r\n        transparentCorners: false,\r\n        lockRotation: true,\r\n        hasRotatingPoint: false,\r\n      });\r\n\r\n      if (null !== this.options.ratio) {\r\n        this.cropZone.set('lockUniScaling', true);\r\n      }\r\n\r\n      this.imager.canvas.add(this.cropZone);\r\n      this.imager.canvas.defaultCursor = 'crosshair';\r\n\r\n      this.cropButton.active(true);\r\n      this.okButton.hide(false);\r\n      this.cancelButton.hide(false);\r\n    },\r\n\r\n    // Remove the crop zone\r\n    releaseFocus: function() {\r\n      if (undefined === this.cropZone)\r\n        return;\r\n\r\n      this.cropZone.remove();\r\n      this.cropZone = undefined;\r\n\r\n      this.cropButton.active(false);\r\n      this.okButton.hide(true);\r\n      this.cancelButton.hide(true);\r\n\r\n      this.imager.canvas.defaultCursor = 'default';\r\n\r\n      this.imager.dispatchEvent('crop:update');\r\n    },\r\n\r\n    _renderCropZone: function(fromX, fromY, toX, toY) {\r\n      var canvas = this.imager.canvas;\r\n\r\n      var isRight = (toX > fromX);\r\n      var isLeft = !isRight;\r\n      var isDown = (toY > fromY);\r\n      var isUp = !isDown;\r\n\r\n      var minWidth = Math.min(+this.options.minWidth, canvas.getWidth());\r\n      var minHeight = Math.min(+this.options.minHeight, canvas.getHeight());\r\n\r\n      // Define corner coordinates\r\n      var leftX = Math.min(fromX, toX);\r\n      var rightX = Math.max(fromX, toX);\r\n      var topY = Math.min(fromY, toY);\r\n      var bottomY = Math.max(fromY, toY);\r\n\r\n      // Replace current point into the canvas\r\n      leftX = Math.max(0, leftX);\r\n      rightX = Math.min(canvas.getWidth(), rightX);\r\n      topY = Math.max(0, topY)\r\n      bottomY = Math.min(canvas.getHeight(), bottomY);\r\n\r\n      // Recalibrate coordinates according to given options\r\n      if (rightX - leftX < minWidth) {\r\n        if (isRight)\r\n          rightX = leftX + minWidth;\r\n        else\r\n          leftX = rightX - minWidth;\r\n      }\r\n      if (bottomY - topY < minHeight) {\r\n        if (isDown)\r\n          bottomY = topY + minHeight;\r\n        else\r\n          topY = bottomY - minHeight;\r\n      }\r\n\r\n      // Truncate truncate according to canvas dimensions\r\n      if (leftX < 0) {\r\n        // Translate to the left\r\n        rightX += Math.abs(leftX);\r\n        leftX = 0\r\n      }\r\n      if (rightX > canvas.getWidth()) {\r\n        // Translate to the right\r\n        leftX -= (rightX - canvas.getWidth());\r\n        rightX = canvas.getWidth();\r\n      }\r\n      if (topY < 0) {\r\n        // Translate to the bottom\r\n        bottomY += Math.abs(topY);\r\n        topY = 0\r\n      }\r\n      if (bottomY > canvas.getHeight()) {\r\n        // Translate to the right\r\n        topY -= (bottomY - canvas.getHeight());\r\n        bottomY = canvas.getHeight();\r\n      }\r\n\r\n      var width = rightX - leftX;\r\n      var height = bottomY - topY;\r\n      var currentRatio = width / height;\r\n\r\n      if (this.options.ratio && +this.options.ratio !== currentRatio) {\r\n        var ratio = +this.options.ratio;\r\n\r\n        if(this.isKeyCroping) {\r\n          isLeft = this.isKeyLeft;\r\n          isUp = this.isKeyUp;\r\n        }\r\n\r\n        if (currentRatio < ratio) {\r\n          var newWidth = height * ratio;\r\n          if (isLeft) {\r\n            leftX -= (newWidth - width);\r\n          }\r\n          width = newWidth;\r\n        } else if (currentRatio > ratio) {\r\n          var newHeight = height / (ratio * height/width);\r\n          if (isUp) {\r\n            topY -= (newHeight - height);\r\n          }\r\n          height = newHeight;\r\n        }\r\n\r\n        if (leftX < 0) {\r\n          leftX = 0;\r\n          //TODO\r\n        }\r\n        if (topY < 0) {\r\n          topY = 0;\r\n          //TODO\r\n        }\r\n        if (leftX + width > canvas.getWidth()) {\r\n          var newWidth = canvas.getWidth() - leftX;\r\n          height = newWidth * height / width;\r\n          width = newWidth;\r\n          if (isUp) {\r\n            topY = fromY - height;\r\n          }\r\n        }\r\n        if (topY + height > canvas.getHeight()) {\r\n          var newHeight = canvas.getHeight() - topY;\r\n          width = width * newHeight / height;\r\n          height = newHeight;\r\n          if (isLeft) {\r\n            leftX = fromX - width;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Apply coordinates\r\n      this.cropZone.left = leftX;\r\n      this.cropZone.top = topY;\r\n      this.cropZone.width = width;\r\n      this.cropZone.height = height;\r\n\r\n      this.imager.canvas.bringToFront(this.cropZone);\r\n\r\n      this.imager.dispatchEvent('crop:update');\r\n    }\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"crop\",\r\n    ctor : CropPlugin\r\n  };\r\n\r\n  Imager.installPlugin(pluginInfo);\r\n\r\n  return pluginInfo;\r\n\r\n});\r\n\ndefine('skylark-darkroomjs/plugins/rotate',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-graphics-canvas2d\",\r\n  '../Imager',\r\n],function(langx,noder, $, canvas2d,Imager) {\r\n  'use strict';\r\n\r\nvar Rotation = Imager.Transformation.inherit({\r\n\r\n  applyTransformation: function(canvas, image, next) {\r\n    var angle = (image.getAngle() + this.options.angle) % 360;\r\n    image.rotate(angle);\r\n\r\n    var width, height;\r\n    height = Math.abs(image.getWidth()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getHeight()*(Math.cos(angle*Math.PI/180)));\r\n    width = Math.abs(image.getHeight()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getWidth()*(Math.cos(angle*Math.PI/180)));\r\n\r\n    canvas.setWidth(width);\r\n    canvas.setHeight(height);\r\n\r\n    canvas.centerObject(image);\r\n    image.setCoords();\r\n    canvas.renderAll();\r\n\r\n    next();\r\n  }\r\n});\r\n\r\n\r\n  var RotatePlugin = Imager.Plugin.inherit({\r\n    init: function(imager,options) {\r\n      this.overrided(imager,options);\r\n      var buttonGroup = this.imager.toolbar.createButtonGroup();\r\n\r\n      var leftButton = buttonGroup.createButton({\r\n        image: 'rotate-left'\r\n      });\r\n\r\n      var rightButton = buttonGroup.createButton({\r\n        image: 'rotate-right'\r\n      });\r\n\r\n      leftButton.addEventListener('click', this.rotateLeft.bind(this));\r\n      rightButton.addEventListener('click', this.rotateRight.bind(this));\r\n    },\r\n\r\n    rotateLeft: function() {\r\n      this.rotate(-90);\r\n    },\r\n\r\n    rotateRight: function() {\r\n      this.rotate(90);\r\n    },\r\n\r\n    rotate: function rotate(angle) {\r\n      this.imager.applyTransformation(\r\n        new Rotation({angle: angle})\r\n      );\r\n    }\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"rotate\",\r\n    ctor : RotatePlugin\r\n  };\r\n\r\n  Imager.installPlugin(pluginInfo);\r\n\r\n  return pluginInfo;\r\n\r\n});\r\n\ndefine('skylark-darkroomjs/plugins/save',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-graphics-canvas2d\",\r\n  '../Imager',\r\n],function(langx,noder, $, canvas2d,Imager) {\r\n  'use strict';\r\n\r\n  var SavePlugin= Imager.Plugin.inherit({\r\n\r\n    defaults: {\r\n      callback: function() {\r\n        this.imager.selfDestroy();\r\n      }\r\n    },\r\n\r\n    init: function(imager,options) {\r\n      this.overrided(imager,options);\r\n\r\n      var buttonGroup = this.imager.toolbar.createButtonGroup();\r\n\r\n      this.destroyButton = buttonGroup.createButton({\r\n        image: 'save'\r\n      });\r\n\r\n      this.destroyButton.addEventListener('click', this.options.callback.bind(this));\r\n    },\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"save\",\r\n    ctor : SavePlugin\r\n  };\r\n\r\n  Imager.installPlugin(pluginInfo);\r\n\r\n  return pluginInfo;  \r\n\r\n});\r\n\ndefine('skylark-darkroomjs/main',[\r\n    \"./Imager\",\r\n    \"./plugins/history\",\r\n    \"./plugins/crop\",\r\n    \"./plugins/rotate\",\r\n    \"./plugins/save\"\r\n], function(Imager) {\r\n    return Imager;\r\n})\r\n;\ndefine('skylark-darkroomjs', ['skylark-darkroomjs/main'], function (main) { return main; });\n\n"]}