{"version":3,"sources":["skylark-darkroomjs-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","proxy","context","TypeError","TMP","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","text","settings","render","matcher","RegExp","join","match","variable","e","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","parse","event","segs","Emitter","on","events","selector","one","_hub","parsed","emit","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","v","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","Stateful","attributes","cid","cidPrefix","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","html","$1","container","dom","removeChild","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","elem","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","toArray","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","preventDefault","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","eventMethods","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","delegateMethodNames","files","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","top","onchange","webkitEntries","webkitdirectory","picker","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","Dimension","m","margin","cb","mb","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","collections","Collection","_clear","it","iterator","hasNext","thisArg","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","strKey","oldValue","updated","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","Widget","_elmx","_parse","_velm","_create","_init","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","parentElement","_startup","optionsAttr","options1","eval","widgetClass","_refresh","updates","mapping","attributs","styles","_addons","category","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName","sqrt","atan2","pow","PiBy180","PiBy2","min","degreesToRadians","originXOffset","originYOffset","toFixed","multipleSpacesRegex","fabric","jsdom","virtualWindow","JSDOM","decodeURIComponent","features","FetchExternalResources","resources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","DOMParser","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","getContext","translate","sourceY","drawImage","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","isTouchSupported","maxTouchPoints","isLikelyNode","Buffer","SHARED_ATTRIBUTES","DPI","reNum","rePathCommand","reNonWord","fontPaths","iMatrix","svgNS","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","disableStyleCopyPaste","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","forceGLPutImageData","initFilterBackend","isWebglSupported","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","__eventListeners","eventListener","fill","observe","stopObserving","fire","listenersForEvent","Observable","_objects","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","nonSplicing","somethingRemoved","_onObjectRemoved","forEachObject","getObjects","o","complexity","memo","CommonMethods","_initGradient","filler","colorStops","Gradient","_initPattern","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","_setObject","_set","exports","PI","cos","angle","angleSlice","sin","removeFromArray","getRandomInt","floor","degrees","radiansToDegrees","radians","rotatePoint","point","subtractEquals","rotateVector","Point","addEquals","vector","rx","ry","transformPoint","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","yPoints","minY","maxY","invertTransform","fractionDigits","Number","parseUnit","fontSize","unit","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","camelize","resolveNamespace","getSvgAttributes","loadImage","crossOrigin","createImage","onLoadCallback","onload","onerror","substring","loadImageInDom","enlivenObjects","reviver","enlivenedObjects","numLoadedObjects","numTotalObjects","onLoaded","fromObject","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","groupSVGElements","centerPoint","Group","sourcePath","populateWithProperties","destination","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","calcRotateMatrix","theta","calcDimensionsMatrix","scaleMatrix","flipX","flipY","multiply","tan","composeMatrix","matrix","customTransformMatrix","resetObjectTransform","saveObjectTransform","isTransparent","tolerance","temp","_isTransparent","imageData","getImageData","parsePreserveAspectRatioAttribute","meetOrSlice","alignX","alignY","aspectRatioAttrs","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","matrixToSVG","NUM_FRACTION_DIGITS","_join","arcToSegments","toX","toY","large","sweep","rotateX","argsString","sinTh","cosTh","fromX","fromY","py","rx2","ry2","py2","px2","pl","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","drawArc","fy","tx","ty","segsNorm","bezierCurveTo","getBoundsOfArc","bound","byProperty","condition","k","invoke","value2","Element","getWholeChar","code","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","Subclass","callSuper","parentMethod","_this","superClassMethod","initialize","subclasses","couldUseAttachEvent","attachEvent","addListener","removeListener","getPointer","getScrollLeftTop","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","parseEl","supportsOpacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","setStyle","elementStyle","normalizedProperty","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","arrayLike","makeElement","htmlFor","docElement","host","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","getById","wrapElement","getElementOffset","docElem","scrollLeftTop","box","offsetAttributes","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","defaultEasing","_requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","_cancelAnimFrame","cancelAnimationFrame","requestAnimFrame","timestamp","Date","finish","onChange","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","fill-opacity","fill-rule","font-family","font-size","font-style","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","vector-effect","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","transformMatrix","parseTransformAttribute","fillIndex","strokeIndex","getSvgRegex","_getMultipleNodes","nodeNames","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","classNames","elementById","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","commaWsp","transformList","reTransformList","reTransform","matrices","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","recursivelyParseGradientsXlink","gradient","xLink","substr","referencedGradient","referenceClone","parseSVGDocument","parsingOptions","xlink","el2","currentTrans","oldLength","el3","setAttributeNS","parseUseDirectives","svgUid","__uid","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","cssAttrs","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","chunk","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","loadXML","_options","allElements","loadSVGFromString","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","regex","lastIndex","gradientDef","opacityAttr","createClipPathCallback","_newObj","fillRule","clipRule","usingElement","objTransformInv","gTransform","clipPath","calcTransformMatrix","clipPathTag","clipPathOwner","setPositionByOrigin","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiplyEquals","divideEquals","lte","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","multiplier","colorAlpha","keyValuePairs","__convertPercentUnitsToValues","svgOptions","gradientUnits","propValue","finalValue","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","withViewport","additionalTransform","pathOffset","minRadius","maxRadius","percentageShift","colorStop","toLive","stops","createLinearGradient","createRadialGradient","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","naturalWidth","naturalHeight","createPattern","Shadow","affectStroke","includeDefaultValues","nonScaling","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","renderAndResetBound","renderAndReset","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","_createLowerCanvas","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","scaleRatio","__initRetinaScaling","lowerCanvasEl","contextContainer","upperCanvasEl","contextTop","_offset","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","setZoom","absolutePan","relativePan","getElement","setupState","clearContext","clearRect","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","_renderBackgroundOrOverlay","needsVpt","lineTo","closePath","fillStyle","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","_toObject","__serializeBgOverlay","excludeFromExport","originalValue","bgImage","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","row","rowIndex","_char","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","shouldInvert","sendToBack","objs","activeSelection","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","needsFullRender","_resetShadow","PencilBrush","decimate","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","pointer","_isMainEvent","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","decimatePoints","distance","adjustedDistance","lastPoint","newPoints","CircleBrush","drawDot","addPoint","dot","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","originX","originY","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","fillRect","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","targets","_hoveredTarget","_hoveredTargets","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","selectable","centerTransform","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ey","lastX","lastY","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","newScaleX","newScaleY","Textbox","getMinWidth","_scaleObjectEqually","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","retinaScaling","lowerCanvasClass","_copyCanvasStyle","touch-action","-ms-touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","_discardActiveObject","_fireSelectionEvents","oldObjects","somethingChanged","removed","opt","oldObject","deselected","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","cursorOffset","mr","ml","addEventOptions","passive","checkClick","cursorMap","mainTouchId","_bindEvents","addOrRemove","_getEventPrefix","enablePointerEvents","functor","eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","_onTouchEnd","eventsBound","_simpleEventHandler","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","currentTransform","__onOrientationChange","__onShake","__onLongPress","_fireEnterLeaveEvents","_cacheTransformEventData","_handleEvent","_resetTransformEventData","getPointerId","evt","pointerId","isPrimary","touches","__onMouseDown","__onMouseUp","_willAddMouseDown","__onMouseMove","_shouldRender","shouldRender","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","_setCursorFromEvent","__corner","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","_transformObject","_fireOverOutEvents","fireSyntheticInOutEvents","oldTarget","evtOut","canvasEvtOut","evtIn","canvasEvtIn","_draggedoverTarget","config","inOpt","outOpt","inFires","targetChanged","previousTarget","nextTarget","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","newVp","originalRetina","originalContextTop","loadFromDatalessJSON","json","loadFromJSON","serialized","_enlivenObjects","_setBgOverlay","enlivenedCanvasClip","__setupCanvas","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_getNonTransformedDimensions","_removeShadow","decl","lineDashOffset","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_applyPatternForTransformedGradient","pCtx","pCanvas","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","objectForm","_fromObject","cloneAsImage","utils","origParams","originalGroup","originalShadow","withoutTransform","withoutShadow","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","intersection","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","tMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDimensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","svgTransform","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","styleInfo","shadowInfo","withShadow","vectorEffect","absoluteClipPath","addPaintOrder","saveProps","tmpObj","dashedPropertySet","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","_setPositionDimensions","correctLeftTop","calcDim","_calcDimensions","fromSVG","diffX","diffY","commonRender","fromElementGenerator","_class","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_renderPathCommands","tempX","tempY","subpathStartX","subpathStartY","controlX","controlY","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","setElement","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","copyGLTo2D","startTime","drawImageTime","putImageDataTime","testContext","now","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","gpuInfo","renderer","vendor","ext","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalImageData","originalEl","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","mainParameter","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","missingNewlineOffset","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","fontDeclaration","previousFontDeclaration","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","stylePropertyHasBeenSet","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","lineOffset","realLineHeight","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","graphemeEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPosition","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","doubleClickHandler","tripleClickHandler","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","svgStyle","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","nextLineIndex","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","linesToKeep","canvas2d","Plugins","computeImageViewPort","Toolbar","ButtonGroup","Button","createButtonGroup","buttonGroup","createButton","buttonElement","Darkroom","_initializeDOM","containerElement","_initializeImage","_initializePlugins","refresh","sourceCanvas","sourceImage","originalImageElement","transformations","minHeight","ratio","selfDestroy","initEvent","_replaceCurrentImage","newImage","canvasRatio","currentRatio","scaleMin","applyTransformation","transformation","_postTransformation","reinitializeImage","_popTransformation","imageElement","mainContainerElement","toolbarElement","canvasContainerElement","sourceCanvasContainerElement","sourceCanvasElement","toolbar","pluginInfo","Transformation","installPlugin","HistoryPlugin","undoTransformations","_initButtons","_onTranformationApplied","undo","lastTransformation","_updateButtons","redo","cancelTransformation","backButton","forwardButton","css3Transform","radian","Cos","Sin","M11","M12","M21","M22","transformData","calcs","degress","hZoom","vZoom","zoomin","zoomout","calcFunc","watch","imgs","totalCount","progressedCount","successedCount","faileredCount","successed","failered","isLoaded","progressed","isCompleted","addBackgroundImage","elm1","childImgs","viewer","loadedCallback","_load","border","images","imagesLoaded","imagesViewer","preload","urls","Crop","snapshot","imageWidth","imageHeight","imgInstance","CropZone","mozDash","_renderBorders","_renderGrid","CropPlugin","isKeyCroping","isKeyLeft","isKeyUp","quickCropKey","cropButton","okButton","cancelButton","toggleCrop","cropCurrentZone","releaseFocus","onObjectMoving","onObjectScaling","hasFocus","cropZone","preventScaling","lastScaleX","setScaleX","setLeft","lastScaleY","setScaleY","setTop","onMouseMoveKeyCrop","_renderCropZone","zone","selectZone","forceDimension","requireFocus","isLeft","isDown","isUp","leftX","rightX","topY","bottomY","newWidth","newHeight","Rotation","RotatePlugin","leftButton","rightButton","rotateLeft","rotateRight","SavePlugin","destroyButton"],"mappings":";;;;;;;u+BAAAA,OAAA,8BAAA,WACA,OAAA,SAAAC,EAAAC,EAAAC,GACA,iBAAAD,IACAA,EAAAA,EAAAE,MAAA,MAOA,IALA,IAAAC,EAAAH,EAAAG,OACAC,EAAAL,EACAM,EAAA,EACAC,EAAAN,EAAAK,KAEAA,EAAAF,GACAC,EAAAA,EAAAE,GAAAF,EAAAE,OACAA,EAAAN,EAAAK,KAGA,OAAAD,EAAAE,GAAAL,KAGAH,OAAA,uBACA,aACA,SAAAS,GACA,IAAAC,GACAC,OAAA,SAAAT,EAAAU,GACA,OAAAH,EAAAC,EAAAR,EAAAU,KAGA,OAAAF,IAGAV,OAAA,yBACA,QACA,SAAAU,GACA,OAAAA,IAEAV,OAAA,oBAAA,yBAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,oBACA,SAAAM,GACA,OAAAA,IAGAN,OAAA,6BACA,oBACA,SAAAU,GACA,IAGAI,EAHAC,KAAAA,SAEAC,GACAF,KAGA,uEAAAV,MAAA,KAAAa,QAAA,SAAAT,GACAM,EAAA,WAAAN,EAAA,KAAAA,EAAAU,gBAGA,SAAAN,GACA,OAAA,MAAAA,EAAAO,OAAAP,GACAE,EAAAC,EAAAK,KAAAR,KAAA,WArBA,SAAAS,EAAAT,GACA,IAAAJ,EACA,IAAAA,KAAAI,EACA,GAAA,OAAAA,EAAAJ,GACA,OAAA,EAGA,OAAA,EAiBA,SAAAc,EAAAC,GACA,MAAA,YAAAP,EAAAO,GAGA,SAAAC,EAAAZ,GACA,OAAAA,GAAAA,EAAAa,SA0BA,SAAAC,EAAAd,GACA,MAAA,iBAAAA,EAGA,SAAAe,EAAAf,GACA,MAAA,UAAAI,EAAAJ,GAOA,SAAAgB,EAAAhB,GACA,MAAA,iBAAAA,EAGA,SAAAiB,EAAAjB,GACA,OAAAA,GAAAA,GAAAA,EAAAkB,OAmCA,OAAApB,EAAAC,OAAA,eAEAoB,QApFA,SAAAC,GACA,OAAAA,GAAAA,EAAAC,cAAAC,OAqFAC,YA5IA,SAAAvB,GACA,OAAAgB,EAAAhB,KAAAY,EAAAZ,IAAA,iBAAAA,EAAAP,SAAAiB,EAAAV,IA6IAwB,UA7HA,SAAAxB,GACA,MAAA,kBAAA,GA8HAyB,UA3HA,SAAAzB,GACA,YAAA,IAAAA,GA4HA0B,WAzHA,SAAA1B,GACA,OAAA,MAAAA,GAAAA,EAAAa,UAAAb,EAAA2B,eA0HAC,QAAAnB,EAEAA,cAAAA,EAEAC,WAAAA,EAEAE,WAAAA,EAEAiB,OA5EA,SAAAlB,GACA,MAAA,SAAAP,EAAAO,IA6EAG,SAAAA,EAEAgB,UAAAhB,EAEAC,SAAAA,EAEAgB,cAxEA,SAAA/B,GACA,OAAAe,EAAAf,KAAAiB,EAAAjB,IAAAgC,OAAAC,eAAAjC,IAAAgC,OAAAE,WAyEAlB,SAAAA,EAEAmB,aAhEA,SAAAC,GACA,GAAAA,EAAA,CACA,IAAAC,EAAAC,SAAAC,SAAA,KAAAD,SAAAE,SAIA,OAHAF,SAAAG,OACAJ,GAAA,IAAAC,SAAAG,MAEAL,EAAAM,WAAAL,KA4DAM,SA3CA,SAAAhC,GACA,MAAA,iBAAAA,GACAiC,aAAAjC,IAAAkC,eAAArC,KAAAG,IAAAmC,WA2CAC,YAxCA,SAAApC,GACA,YAAAqC,IAAArC,GAyCAM,SAAAA,EAEAb,KAAAA,MAIAhB,OAAA,4BACA,WACA,SAAA6D,GACA,OAAAA,IAEA7D,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,iCACA,mBACA,uBACA,SAAAU,EAAAmD,GACA,IAAAlC,EAAAkC,EAAAlC,SACA4B,EAAAM,EAAAN,SAEAO,EAAA,EAAA,EAEAC,EAAA,uBACAC,EAAA,IAGAC,EAAA,aAGAC,EAAA,qBAGAC,EAAA,aAGAC,EAAA,cAMAC,EAAAC,SAyBA,SAAAC,EAAAhD,GACA,IAAAA,EACA,OAAA,IAAAA,EAAAA,EAAA,EAGA,IADAA,EAAAiD,EAAAjD,MACAuC,GAAAvC,KAAAuC,EAAA,CACA,IAAAW,EAAAlD,EAAA,GAAA,EAAA,EACA,OAAAkD,EAAAV,EAEA,OAAAxC,GAAAA,EAAAA,EAAA,EAyDA,SAAAiD,EAAAjD,GACA,GAAA,iBAAAA,EACA,OAAAA,EAEA,GAAAgC,EAAAhC,GACA,OAAAyC,EAEA,GAAArC,EAAAJ,GAAA,CACA,IAAAmD,EAAA,mBAAAnD,EAAAoD,QAAApD,EAAAoD,UAAApD,EACAA,EAAAI,EAAA+C,GAAAA,EAAA,GAAAA,EAEA,GAAA,iBAAAnD,EACA,OAAA,IAAAA,EAAAA,GAAAA,EAEAA,EAAAA,EAAAqD,QAAAX,EAAA,IACA,IAAAY,EAAAV,EAAAW,KAAAvD,GACA,OAAAsD,GAAAT,EAAAU,KAAAvD,GACA8C,EAAA9C,EAAAwD,MAAA,GAAAF,EAAA,EAAA,GACAX,EAAAY,KAAAvD,GAAAyC,GAAAzC,EAGA,OAAAb,EAAAC,OAAA,iBACA4D,SAAAA,EACAC,SAAAA,EACAQ,UAtDA,SAAAzD,GACA,IAAA0D,EAAAV,EAAAhD,GACA2D,EAAAD,EAAA,EAEA,OAAAA,GAAAA,EAAAC,EAAAD,EAAAC,EAAAD,EAAA,OAqDAjF,OAAA,8BACA,aACA,SAAAmF,GACA,OAAAA,IAEAnF,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,iCACA,sBACA,2BACA,sBACA,yBACA,SAAAU,EAAAD,EAAAoD,EAAAsB,GACA,IA+BAC,EAAAC,EA/BAC,EAAA1C,OAAAE,UAAAwC,eACAP,EAAA7C,MAAAY,UAAAiC,MACA3C,EAAAyB,EAAAzB,UACAd,EAAAuC,EAAAvC,WACAK,EAAAkC,EAAAlC,SACAgB,EAAAkB,EAAAlB,cACAZ,EAAA8B,EAAA9B,QACAI,EAAA0B,EAAA1B,YACAP,EAAAiC,EAAAjC,SACAoD,EAAAG,EAAAH,UAuBA,IApBAO,EAAAC,EAoBAC,EAAA,oBAAAC,OAAAA,OAAA5C,UAAA,KA0GA,SAAA6C,EAAA/E,GACA,IAAAe,EAAAf,GAAA,SACA,IAAAgF,KACA,IAAA,IAAAC,KAAAjF,EAAAgF,EAAAE,KAAAD,GACA,OAAAD,EA0DA,SAAAG,EAAAnF,EAAAV,GACA,IAAA6B,EAAA7B,GACA,OAAA,MAAAU,GAAA0E,EAAAlE,KAAAR,EAAAV,GAGA,IADA,IAAAG,EAAAH,EAAAG,OACAE,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAsF,EAAA3F,EAAAK,GACA,GAAA,MAAAK,IAAA0E,EAAAlE,KAAAR,EAAAiF,GACA,OAAA,EAEAjF,EAAAA,EAAAiF,GAEA,QAAAxF,EAgEA,SAAA2F,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAP,KAAAK,EAIAE,QAAAxC,IAAAqC,EAAAJ,KAGAM,IAAAxD,EAAAuD,EAAAL,KAAA9D,EAAAmE,EAAAL,MACAlD,EAAAuD,EAAAL,MAAAlD,EAAAsD,EAAAJ,MACAI,EAAAJ,OAEA9D,EAAAmE,EAAAL,MAAA9D,EAAAkE,EAAAJ,MACAI,EAAAJ,OAEAG,EAAAC,EAAAJ,GAAAK,EAAAL,GAAAM,EAAAC,SACAxC,IAAAsC,EAAAL,KACAI,EAAAJ,GAAAK,EAAAL,KAGA,OAAAI,EAGA,SAAAI,EAAAC,GACA,IAAAC,EAAAxB,EAAA3D,KAAAoF,UAAA,GACAP,EAAAM,EAAAE,QACAN,GAAA,EAKA,OAJA/D,EAAAmE,EAAAA,EAAAlG,OAAA,MACA8F,EAAAI,EAAAG,QAIAT,OAAAA,EACAU,QAAAJ,EACAJ,KAAAA,GAIA,SAAAS,IACA,IAAAN,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAA1F,QAAA,SAAAiF,GACAF,EAAAM,EAAAL,OAAAC,EAAAI,EAAAH,MAAA,KAEAG,EAAAL,OAkFA,SAAAc,EAAAnG,GAIA,IAHA,IAAAgF,EAAAD,EAAA/E,GACAP,EAAAuF,EAAAvF,OACA0G,EAAA7E,MAAA7B,GACAE,EAAA,EAAAA,EAAAF,EAAAE,IACAwG,EAAAxG,GAAAK,EAAAgF,EAAArF,IAEA,OAAAwG,EA2BA,OAlZA3B,EAAA,SAAA4B,EAAAC,EAAAC,EAAAC,GAGA,GAAAH,IAAAC,EAAA,OAAA,IAAAD,GAAA,EAAAA,GAAA,EAAAC,EAEA,GAAA,MAAAD,GAAA,MAAAC,EAAA,OAAA,EAEA,GAAAD,GAAAA,EAAA,OAAAC,GAAAA,EAEA,IAAAjG,SAAAgG,EACA,OAAA,aAAAhG,GAAA,WAAAA,GAAA,iBAAAiG,IACA5B,EAAA2B,EAAAC,EAAAC,EAAAC,IAIA9B,EAAA,SAAA2B,EAAAC,EAAAC,EAAAC,GAKA,IAAAC,EAAArG,SAAAK,KAAA4F,GACA,GAAAI,IAAArG,SAAAK,KAAA6F,GAAA,OAAA,EACA,OAAAG,GAEA,IAAA,kBAEA,IAAA,kBAGA,MAAA,GAAAJ,GAAA,GAAAC,EACA,IAAA,kBAGA,OAAAD,IAAAA,GAAAC,IAAAA,EAEA,IAAAD,EAAA,GAAAA,GAAA,EAAAC,GAAAD,IAAAC,EACA,IAAA,gBACA,IAAA,mBAIA,OAAAD,IAAAC,EACA,IAAA,kBACA,OAAAxB,EAAAd,QAAAvD,KAAA4F,KAAAvB,EAAAd,QAAAvD,KAAA6F,GAGA,IAAAI,EAAA,mBAAAD,EACA,IAAAC,EAAA,CACA,GAAA,iBAAAL,GAAA,iBAAAC,EAAA,OAAA,EAGA,IAAAK,EAAAN,EAAA/E,YAAAsF,EAAAN,EAAAhF,YACA,GAAAqF,IAAAC,KAAAjG,EAAAgG,IAAAA,aAAAA,GACAhG,EAAAiG,IAAAA,aAAAA,IACA,gBAAAP,GAAA,gBAAAC,EACA,OAAA,EAQAC,EAAAA,MACAC,EAAAA,MAEA,IADA,IAAA9G,EAAA6G,EAAA7G,OACAA,KAGA,GAAA6G,EAAA7G,KAAA2G,EAAA,OAAAG,EAAA9G,KAAA4G,EAQA,GAJAC,EAAApB,KAAAkB,GACAG,EAAArB,KAAAmB,GAGAI,EAAA,CAGA,IADAhH,EAAA2G,EAAA3G,UACA4G,EAAA5G,OAAA,OAAA,EAEA,KAAAA,KACA,IAAA+E,EAAA4B,EAAA3G,GAAA4G,EAAA5G,GAAA6G,EAAAC,GAAA,OAAA,MAEA,CAEA,IAAAtB,EAAAD,EAAAhD,OAAAgD,KAAAoB,GAGA,GAFA3G,EAAAuF,EAAAvF,OAEAuC,OAAAgD,KAAAqB,GAAA5G,SAAAA,EAAA,OAAA,EACA,KAAAA,KAGA,GADAwF,EAAAD,EAAAvF,QACAuD,IAAAqD,EAAApB,KAAAT,EAAA4B,EAAAnB,GAAAoB,EAAApB,GAAAqB,EAAAC,GAAA,OAAA,EAMA,OAFAD,EAAAR,MACAS,EAAAT,OACA,GA8SAhG,EAAAC,OAAA,iBACAgF,QAAAA,EAEAhF,OAAAF,EAEA+G,MA7BA,SAAAA,EAAAC,EAAAC,GACA,IAAAC,EACA,QAAA/D,IAAA6D,GAAA,OAAAA,EACAE,EAAAF,OACA,GAAAC,GAAAD,EAAAD,MACAG,EAAAF,EAAAD,aACA,GAAAzF,EAAA0F,GAAA,CACAE,KACA,IAAA,IAAApH,EAAA,EAAAA,EAAAkH,EAAApH,OAAAE,IACAoH,EAAA7B,KAAA0B,EAAAC,EAAAlH,UAEA,GAAAoC,EAAA8E,GAEA,IAAA,IAAA5B,KADA8B,KACAF,EACAE,EAAA9B,GAAA2B,EAAAC,EAAA5B,SAGA8B,EAAAF,EAGA,OAAAE,GAWAnC,UA/aAD,EA+aAI,EA/aAH,GA+aA,EA9aA,SAAA5E,GACA,IAAAP,EAAAmG,UAAAnG,OAEA,GADAmF,IAAA5E,EAAAgC,OAAAhC,IACAP,EAAA,GAAA,MAAAO,EAAA,OAAAA,EACA,IAAA,IAAAgH,EAAA,EAAAA,EAAAvH,EAAAuH,IAIA,IAHA,IAAA1B,EAAAM,UAAAoB,GACAhC,EAAAL,EAAAW,GACA2B,EAAAjC,EAAAvF,OACAE,EAAA,EAAAA,EAAAsH,EAAAtH,IAAA,CACA,IAAAsF,EAAAD,EAAArF,GACAiF,QAAA,IAAA5E,EAAAiF,KAAAjF,EAAAiF,GAAAK,EAAAL,IAGA,OAAAjF,IAmaAkH,KA5SA,SAAAlH,EAAAmH,GACA,IAAA1H,EAAAwF,EAAAtF,EAAAgB,EAEA,GAAAX,EAGA,QALAoH,KAGA3H,EAAAO,EAAAP,SAIA,IAAAwF,KAAAjF,EACA,GAAAA,EAAA0E,eAAAO,KACAtE,EAAAX,EAAAiF,IACA,IAAAkC,EAAA3G,KAAAG,EAAAsE,EAAAtE,IACA,WAMA,IAAAhB,EAAA,EAAAA,EAAAF,IACAkB,EAAAX,EAAAL,IACA,IAAAwH,EAAA3G,KAAAG,EAAAhB,EAAAgB,IAFAhB,KASA,OAAAuG,MAmRAmB,OAhRA,SAAAhC,GACA,IAAAE,EAAAG,EAAAvB,EAAA3D,KAAAoF,UAAA,GACA,kBAAAP,IACAE,EAAAF,EACAA,EAAAK,EAAAG,SAEA,GAAAH,EAAAjG,SACAiG,GAAAL,GACAA,EAAAa,MAKA,OAHAR,EAAArF,QAAA,SAAAiH,GACAtB,EAAAX,EAAAiC,EAAA/B,KAEAF,GAqQAF,IAAAA,EAEAoC,QA/LA,SAAAnB,EAAAC,GACA,OAAA7B,EAAA4B,EAAAC,IAgMAmB,SAhNA,SAAAC,EAAA9G,EAAA+G,EAAAC,GACAF,EAAAlG,EAAAkG,GAAAA,EAAAtB,EAAAsB,GACAC,EAAAA,IAAAC,EAAAvD,EAAAsD,GAAA,EAEA,IAAAjI,EAAAgI,EAAAhI,OACAiI,EAAA,IACAA,EAAAE,UAAAnI,EAAAiI,EAAA,IAEA,OAAA1G,EAAAyG,GACAC,GAAAjI,GAAAgI,EAAAI,QAAAlH,EAAA+G,IAAA,IACAjI,GAAAqI,YAAAL,EAAA9G,EAAA+G,IAAA,GAwMAK,QA9LA,SAAA3G,EAAA4G,GACA,IAAAhD,EAAAA,EAAAgD,GAAAvI,EAAAuF,EAAAvF,OACA,GAAA,MAAA2B,EAAA,OAAA3B,EAEA,IADA,IAAAO,EAAAgC,OAAAZ,GACAzB,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAsF,EAAAD,EAAArF,GACA,GAAAqI,EAAA/C,KAAAjF,EAAAiF,MAAAA,KAAAjF,GAAA,OAAA,EAEA,OAAA,GAwLAgF,KAxQA,SAAAhF,GACA,GAAAe,EAAAf,GAAA,SACA,IAAAgF,KACA,IAAA,IAAAC,KAAAjF,EAAAmF,EAAAnF,EAAAiF,IAAAD,EAAAE,KAAAD,GACA,OAAAD,GAsQAgB,MAAAA,EAEAiC,KAzIA,SAAAjI,EAAAkI,EAAAC,GACA,IAAAnI,EACA,OAAA,KAGA,IADA,IAAAqE,EAAA2B,KAAAhG,GACAL,EAAA,EAAAA,EAAAiG,UAAAnG,OAAAE,IAAA,CACA,IAAAyI,EAAAxC,UAAAjG,GACAyI,KAAApI,UACAqE,EAAA+D,GAGA,OAAA/D,GAgIAgE,KA3HA,SAAArI,EAAAkI,EAAAC,GACA,IAAAnI,EACA,OAAA,KAGA,IADA,IAAAqE,KACA1E,EAAA,EAAAA,EAAAiG,UAAAnG,OAAAE,IAAA,CACA,IAAAyI,EAAAxC,UAAAjG,GACAyI,KAAApI,IACAqE,EAAA+D,GAAApI,EAAAoI,IAGA,OAAA/D,GAkHAiE,WA/GA,SAAAC,EAAAC,GACA,GAAArH,EAAAoH,GAAA,CACA,IAAAE,EAAAF,EAAAV,QAAAW,IACA,GAAAC,GACAF,EAAAG,OAAAD,EAAA,QAEA,GAAA1G,EAAAwG,GACA,IAAA,IAAAtD,KAAAsD,EACA,GAAAA,EAAAtD,IAAAuD,EAAA,QACAD,EAAAtD,GACA,MAKA,OAAAiB,MAkGA7B,OA/FA,SAAArE,EAAAV,EAAAqJ,GACAxH,EAAA7B,KACAA,EAAAA,EAAAE,MAAA,MAEA,IAAAC,EAAAH,EAAAG,OACA,IAAAA,EACA,OAAAiB,EAAAiI,GAAAA,EAAAnI,KAAAR,GAAA2I,EAEA,IAAA,IAAAhJ,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAiJ,EAAA,MAAA5I,OAAA,EAAAA,EAAAV,EAAAK,SACA,IAAAiJ,IACAA,EAAAD,EACAhJ,EAAAF,GAEAO,EAAAU,EAAAkI,GAAAA,EAAApI,KAAAR,GAAA4I,EAGA,OAAA5I,GAgFA6I,UA7EA,WACA,IAAAnD,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAA1F,QAAA,SAAAiF,GACAF,EAAAM,EAAAL,OAAAC,EAAAI,EAAAH,MAAA,KAEAG,EAAAL,QAyEAc,OAAAA,MAKA/G,OAAA,8BACA,aACA,SAAA0J,GACA,OAAAA,IAEA1J,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,+BACA,sBACA,sBACA,yBACA,SAAAU,EAAAmD,EAAA6F,GACA,IAAAC,EAAAzH,MAAAY,UAAA6G,OACAC,EAAA1H,MAAAY,UAAA8G,KACAzH,EAAA0B,EAAA1B,YAYA,SAAA0H,EAAAC,EAAAC,EAAAzB,EAAA0B,GAIA,IAHA,IAAA3J,EAAAyJ,EAAAzJ,OACAuH,EAAAU,GAAA0B,EAAA,GAAA,GAEAA,EAAApC,MAAAA,EAAAvH,GACA,GAAA0J,EAAAD,EAAAlC,GAAAA,EAAAkC,GACA,OAAAlC,EAGA,OAAA,EAiCA,SAAAqC,EAAA1I,GACA,OAAAA,GAAAA,EAcA,SAAA2I,EAAAJ,GACA,GAAA3H,EAAA2H,GAAA,CAEA,IADA,IAAA7E,KACA1E,EAAA,EAAAA,EAAAuJ,EAAAzJ,OAAAE,IAAA,CACA,IAAA6I,EAAAU,EAAAvJ,GACA,GAAA4B,EAAAiH,GACA,IAAA,IAAAe,EAAA,EAAAA,EAAAf,EAAA/I,OAAA8J,IACAlF,EAAAa,KAAAsD,EAAAe,SAGAlF,EAAAa,KAAAsD,GAGA,OAAAnE,EAEA,OAAA6E,EAuGA,OAAApJ,EAAAC,OAAA,gBACAkJ,cAAAA,EAEAnB,YA9JA,SAAAoB,EAAAvI,EAAA+G,GACA,GAAA/G,GAAAA,EACA,OAAAsI,EAAAC,EAAAG,EAAA3B,GAEA,IAAAV,EAAAU,EAAA,EACAjI,EAAAyJ,EAAAzJ,OAEA,OAAAuH,EAAAvH,GACA,GAAAyJ,EAAAlC,KAAArG,EACA,OAAAqG,EAGA,OAAA,GAoJAwC,QArIA,SAAAN,GACA,OAAAH,EAAAvI,KAAA0I,EAAA,SAAAV,GACA,OAAA,MAAAA,KAqIAiB,MAAA,SAAAlB,EAAAmB,GACA,OAAAA,EACAnB,EAAApE,MAAA,EAAAuF,GAEAnB,EAAA,IAIAQ,OAzIA,SAAAG,EAAAS,GACA,OAAAZ,EAAAvI,KAAA0I,EAAAS,IA0IAX,KArBA,SAAAE,EAAAS,GACA,OAAAX,EAAAxI,KAAA0I,EAAAS,IAsBAL,QAAAA,EAEAM,KAvHA,SAAAV,EAAA/B,GACA,IAAA0C,KAQA,OANAf,EAAA5B,KAAAgC,EAAA,SAAAvJ,EAAA6I,GACArB,EAAAqB,EAAA7I,IACAkK,EAAA3E,KAAAsD,KAIAqB,GAgHAC,QA7GA,SAAAtB,EAAAU,GACA,IAAAA,EACA,OAAA,EAEA,IAAAvJ,EAEA,GAAAuJ,EAAArB,QACA,OAAAqB,EAAArB,QAAAW,GAGA7I,EAAAuJ,EAAAzJ,OACA,KAAAE,KACA,GAAAuJ,EAAAvJ,KAAA6I,EACA,OAAA7I,EAIA,OAAA,GA8FAoK,UA3FA,SAAA/J,EAAAgK,EAAAC,GACA,GAAA1I,EAAAvB,GACA,OAAAiK,OAAAC,OAAA5I,MAAAY,UAAAiC,MAAA3D,KAAAR,EAAAgK,GAAA,IAIA,OAAAhK,IAuFAmK,MA7DA,SAAAV,EAAAW,GACA,IAAAnD,EAAAmD,EAAA3K,OACAE,EAAA8J,EAAAhK,OACA8J,EAAA,EAEA,GAAA,iBAAAtC,EACA,KAAAsC,EAAAtC,EAAAsC,IACAE,EAAA9J,KAAAyK,EAAAb,QAGA,UAAAvG,IAAAoH,EAAAb,IACAE,EAAA9J,KAAAyK,EAAAb,KAMA,OAFAE,EAAAhK,OAAAE,EAEA8J,GA8CApJ,QArFA,SAAAgK,EAAAC,GACA,GAAAD,EAAAhK,QAAA,OAAAgK,EAAAhK,QAAAiK,GACA,IAAA,IAAA3K,EAAA,EAAAA,EAAA0K,EAAA5K,OAAAE,IAAA2K,EAAAD,EAAA1K,GAAAA,IAqFA4K,IAlFA,SAAAC,EAAArD,GACA,IAAAxG,EACAhB,EAAAsF,EADAkB,KAEA,GAAA5E,EAAAiJ,GACA,IAAA7K,EAAA,EAAAA,EAAA6K,EAAA/K,OAAAE,IAEA,OADAgB,EAAAwG,EAAA3G,KAAAgK,EAAA7K,GAAA6K,EAAA7K,GAAAA,KACAwG,EAAAjB,KAAAvE,QAGA,IAAAsE,KAAAuF,EAEA,OADA7J,EAAAwG,EAAA3G,KAAAgK,EAAAvF,GAAAuF,EAAAvF,GAAAA,KACAkB,EAAAjB,KAAAvE,GAEA,OAAA2I,EAAAnD,IAuEAsE,OA/CA,SAAAvB,EAAA/B,EAAAuD,GACA,OAAApJ,MAAAY,UAAAuI,OAAAjK,KAAA0I,EAAA/B,EAAAuD,IAgDAC,KA7CA,SAAAzB,GACA,OAAAH,EAAAvI,KAAA0I,EAAA,SAAAV,EAAAC,GACA,OAAAS,EAAArB,QAAAW,IAAAC,SA+CArJ,OAAA,6BACA,YACA,SAAAwL,GACA,OAAAA,IAEAxL,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,wBACA,wBACA,SAAAwL,GACA,OAAAA,IAEAxL,OAAA,6BACA,sBACA,sBACA,wBACA,wBACA,SAAAU,EAAAmD,EAAA6F,EAAA8B,GACA,IAAAD,EAAAC,EAAAD,KACAxF,EAAA2D,EAAA3D,IACAa,EAAA8C,EAAA9C,MACA7E,EAAA8B,EAAA9B,QACAM,EAAAwB,EAAAxB,UAuDA,IAsLAoJ,EAtLA,WAsGA,SAAAC,IACA,OAAA5E,KAAA6E,WACA7E,KAAA6E,WAAA9E,MAAAC,KAAAN,WACAM,KAAA8E,KACA9E,KAAA8E,KAAA/E,MAAAC,KAAAN,gBADA,EAKA,OAAA,SAAAiF,EAAAI,EAAAC,EAAAC,EAAAC,GACAjK,EAAA+J,KACAE,EAAAD,EACAA,EAAAD,EACAA,EAAA,MAEAA,EAAAA,GAAAlJ,OAEAP,EAAA0J,KAAAhK,EAAAgK,KACAC,EAAAD,EACAA,GAAA,GAGA,IAAAE,EAAAH,EAEAC,IACAA,EAlFA,SAAAG,EAAAH,GACA,IAAA9G,KAmCA,OAjCA8G,EAAA9K,QAAA,SAAA2F,GACA,GAAAb,EAAAa,EAAA,cACA,MAAA,IAAAuF,MAAA,iBAGA,IADA,IAAAC,KACAxF,GACAwF,EAAAC,QAAAzF,GACAA,EAAAA,EAAA0F,WAEArH,EAAAA,EAAA6F,OAAAsB,MAKAnH,GAFAA,EAAAsG,EAAAtG,IAEA0E,OAAA,SAAA/C,GAEA,IADA,IAAA2F,EAAAL,EACAK,GAAA,CACA,GAAA3F,IAAA2F,EACA,OAAA,EAEA,GAAAxG,EAAAwG,EAAA,cAEA,IADA,IAAAC,EAAAD,EAAA,WACAhM,EAAA,EAAAA,EAAAiM,EAAAnM,OAAAE,IACA,GAAAiM,EAAAjM,KAAAqG,EACA,OAAA,EAIA2F,EAAAA,EAAAD,WAEA,OAAA,KAGAjM,OAAA,GACA4E,EA6CAwH,CAAAR,EAAAF,IAGAA,IACAE,EA3CA,SAAAC,EAAAH,GAEA,IADA,IAAAW,EAAAR,EACA3L,EAAA,EAAAA,EAAAwL,EAAA1L,OAAAE,IAAA,CACA,IAAAoM,EAAA,IAAAC,SACAD,EAAA7J,UAAAF,OAAAiK,OAAAH,EAAA5J,WACA6J,EAAAG,UAAAJ,EACAC,EAAAL,WAAA,KACA1F,EAAA+F,EAAA7J,UAAAiJ,EAAAxL,GAAAuC,WACA6J,EAAA7J,UAAAiK,UAAAhB,EAAAxL,GACAmM,EAAAC,EAGA,OAAAD,EA+BAM,CAAAf,EAAAF,IAGA,IAAAkB,EAAApB,EAAAoB,WAAA,GACAf,EAAA,IAAAU,SACA,mBAAAK,EAAA,6KADA,GA4CA,OA/BAf,EAAApJ,UAAAF,OAAAiK,OAAAZ,EAAAnJ,WAGAoJ,EAAApJ,UAAAb,YAAAiK,EACAA,EAAAI,WAAAR,EAGAI,EAAAY,UAAAb,EAGAC,EAAAR,eACAQ,EAAAR,aAAAA,GAGAK,IACAG,EAAAgB,WAAAnB,GAGAG,EAAAiB,UACAjB,EAAAiB,QAAA,SAAAtB,EAAAG,GACA,OAtKA,SAAAE,EAAAL,EAAAG,GAEA,IAAAoB,EAAAlB,EAAApJ,UACAuK,EAAAnB,EAAAI,WAAAxJ,UACAwK,EAAAtB,GAAAA,EAAAsB,YACAtB,GAAAA,EAAAuB,UAEA,IAAA,IAAA/M,KAAAqL,EACA,GAAA,gBAAArL,EAAA,CAKA,IAAAgJ,EAAAqC,EAAArL,GACA,mBAAAqL,EAAArL,GACA4M,EAAA5M,GAAAgJ,EAAAkC,cAAA4B,GAAA,mBAAAD,EAAA7M,GAkBAgJ,EAjBA,SAAAhJ,EAAA0K,EAAAsC,GACA,OAAA,WACA,IAAAC,EAAA3G,KAAA4G,UAIA5G,KAAA4G,UAAAF,EAIA,IAAAG,EAAAzC,EAAArE,MAAAC,KAAAN,WAIA,OAFAM,KAAA4G,UAAAD,EAEAE,GAdA,CAgBAnN,EAAAgJ,EAAA6D,EAAA7M,IAEAqD,EAAAlB,cAAA6G,IAAA,OAAAA,GAAAA,EAAA,IACA5G,OAAAgL,eAAAR,EAAA5M,EAAAgJ,GAEA4D,EAAA5M,GAAAgJ,EAGA,OAAA0C,EA8HA2B,CAAA/G,KAAA+E,EAAAG,KAGAE,EAAA4B,UACA5B,EAAA4B,QAAA,SAAAjC,EAAAE,EAAAC,GACA,OAAAP,EAAAI,EAAA/E,KAAAiF,EAAAC,KAIAE,EAAAiB,QAAAtB,EAAAG,GAEAE,GAIA6B,GAEA,OAAArN,EAAAC,OAAA,cAAA8K,KAEAzL,OAAA,4BACA,WACA,SAAAgO,GACA,OAAAA,IAEAhO,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,uBACA,uBACA,SAAAgO,GACA,OAAAA,IAEAhO,OAAA,4BACA,WACA,SAAAgO,GACA,IA4JAC,EAAA,SAAAC,GAuBA,IAAAA,EACA,OAAAA,EAGA,IAAAC,IAAAD,EAAAE,KAKA,SAAAC,EAAAC,GAGAJ,EAAAI,GAAA,WACA,IAAAhI,EAAAE,UACAvB,EAAAsJ,SAAAC,KAAAN,EAAA,SAAAA,GAEA,OAAAD,EAAA/L,MAAAY,UAAAwL,GAAAzH,MAAAqH,EAAA5H,MAIA,GAAA,YAAAgI,GAAAH,EACA,OAAAlJ,GAaA,OA5BAkJ,IACAD,EAAAtL,OAAA6L,SAAAP,IAmBAG,EAAA,WACAA,EAAA,UACAA,EAAA,OACA,MAAAH,EAAAQ,QACAR,EAAAQ,MAAAH,SAAAC,KAAAN,EAAA,SAAAA,GACA,OAAAA,EAAA7N,UAGA6N,GAGAS,EAAAX,GACAf,UAAA,aAEA2B,YA3NA,SAAAC,EAAA7C,GA6CA,cAAA6C,GACA,QACA,MAAA,IAAA1C,MAAA,+BAAA0C,GACA,IAAA,SAAA,IAAA,YACA,IAAAC,EAAAD,EACAA,EAAA,SAAA7M,GACA,IAAA,IAAA6D,KAAAiJ,EAAA,CACA,IAAAC,EAAAD,EAAAjJ,GACA,GAAAkJ,GAAAA,EAAAjK,MAEA,IAAAiK,EAAAjK,KAAA9C,EAAA6D,GAAA7D,GACA,OAAA,OAEA,GAAA+M,GAAA/M,EAAA6D,GACA,OAAA,EAGA,OAAA,GAEA,MACA,IAAA,SAEA,IAAAiB,KAAA+H,GACA,MAAA,IAAA1C,MAAA,sBAAA0C,EAAA,uBAEAA,EAAA/H,KAAA+H,GAEA,IAAA,YAkDA,SAAAG,EAAAlF,GAEA,IAAAoE,EAhDA,SAAAjD,EAAAlD,EAAAkH,GAyBA,IAAA1N,EAAAhB,EAAA,EAAAsH,EAAAoD,GAAAA,EAAA5K,QAAA,EAAAoK,KACA5C,GAAA,iBAAAoD,IAAAA,EAAAA,EAAA7K,MAAA,KACA,iBAAA2H,IAAAA,EAAAmH,MAAAnH,IAAAoH,QAAApH,IACA,GAAAkH,EACA,KAAA1O,EAAAsH,IAAAtH,EACAgB,EAAA0J,EAAA1K,GACAwH,EAAA3G,KAAA6N,EAAA1N,EAAAhB,EAAA0K,IACAR,EAAA3E,KAAAvE,QAIA,KAAAhB,EAAAsH,IAAAtH,EACAgB,EAAA0J,EAAA1K,GACAwH,EAAAxG,EAAAhB,EAAA0K,IACAR,EAAA3E,KAAAvE,GAIA,OAAAkJ,EAKAd,CAAAG,EAAA+E,GAEAO,EAAApD,GAAAA,EAAAqD,KAmBA,GAlBAD,GACAlB,EAAAmB,KAAA,mBAAAD,EAAAA,EAAA,SAAApI,EAAAC,GACA,IAAA,IAAAoI,EAAA9O,EAAA,EAAA8O,EAAAD,EAAA7O,GAAAA,IAAA,CACA,IAAA+O,EAAAtI,EAAAqI,EAAAE,WACAC,EAAAvI,EAAAoI,EAAAE,WAIA,GAFAD,EAAA,MAAAA,EAAAA,EAAA3K,UAAA2K,EACAE,EAAA,MAAAA,EAAAA,EAAA7K,UAAA6K,EACAF,GAAAE,EAGA,QAAAH,EAAAI,aAAA,MAAAH,GAAAA,EAAAE,IAAA,EAAA,EAGA,OAAA,IAIAxD,IAAAA,EAAA0D,OAAA1D,EAAA2D,OAAA,CACA,IAAAjB,EAAAR,EAAA7N,QACA6N,EAAAA,EAAAnJ,MAAAiH,EAAA0D,OAAA,GAAA1D,EAAA0D,OAAA,IAAA1D,EAAA2D,OAAAC,EAAAA,KACAlB,MAAAA,EAEA,OAAAR,EAGA,OADAc,EAAAa,QAAAhB,EACAG,GAoEAc,WAAA,KAGAC,IAAA,SAAAC,GAOA,OAAAlJ,KAAAmJ,KAAAnJ,KAAAc,MAAAoI,KAGAE,YAAA,SAAAlO,GACA,OAAAA,EAAA8E,KAAAgJ,aAGAK,IAAA,SAAAnO,EAAAgK,GACA,IAAAiE,EAAAnJ,KAAAmJ,KACArI,EAAAd,KAAAc,MACAkI,EAAAhJ,KAAAgJ,WACAE,EAAAhO,EAAA8N,GAAA9D,GAAA,OAAAA,EAAAA,EAAAgE,GAAAF,KAAA9N,EAAAA,EAAA8N,GAAAM,KAAAC,SACA,GAAAL,KAAApI,EAAA,CAEA,GAAAoE,IAAA,IAAAA,EAAAsE,UACA,MAAA,IAAAnE,MAAA,yBAGA8D,EAAArI,EAAAoI,IAAAhO,OAGA4F,EAAAoI,GAAAC,EAAAnK,KAAA9D,GAAA,EAEA,OAAAgO,GAGAO,IAAA,SAAAvO,EAAAgK,GAGA,OAFAA,EAAAA,OAAAsE,WAAA,EAEAxJ,KAAAqJ,IAAAnO,EAAAgK,IAGAwE,OAAA,SAAAR,GAOA,IAAApI,EAAAd,KAAAc,MACAqI,EAAAnJ,KAAAmJ,KACA,GAAAD,KAAApI,EAIA,OAHAqI,EAAA3G,OAAA1B,EAAAoI,GAAA,GAEAlJ,KAAA2J,QAAAR,IACA,GAGApB,MAAA,SAAAA,EAAA7C,GA8BA,OAAAiC,EAAAnH,KAAA8H,YAAAC,EAAA7C,EAAAlF,CAAAA,KAAAmJ,QAGAQ,QAAA,SAAAR,GAKAA,EAAA9G,OAEArC,KAAAgJ,WAAAG,EAAAS,YAAA5J,KAAAgJ,WACAG,EAAAnJ,KAAAmJ,KAAAA,EAAA9G,OAEArC,KAAAmJ,KAAAA,EAEAnJ,KAAAc,SACA,IAAA,IAAArH,EAAA,EAAAsH,EAAAoI,EAAA5P,OAAAE,EAAAsH,EAAAtH,IACAuG,KAAAc,MAAAqI,EAAA1P,GAAAuG,KAAAgJ,aAAAvP,GAIAqL,KAAA,SAAAI,GACA,IAAA,IAAAzL,KAAAyL,EACAlF,KAAAvG,GAAAyL,EAAAzL,GAEAuG,KAAA2J,QAAA3J,KAAAmJ,aAKA,OAAAtB,IAEA3O,OAAA,+BACA,oBACA,SAAAU,GAEA,IAAAkD,EAAA+M,EAAA,EAqEA,SAAAC,EAAA5P,GACA,OAAA,SAAAiF,EAAA4K,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAhL,EAAA4K,GACAI,GAAAA,EAAAhL,QAAAA,IAEAA,EAAA4K,GAAAG,EAAA,WAKA,IAJA,IAAAE,EAAAP,EAEArK,EAAAE,UACA2K,EAAAH,EAAAG,OACAA,GACA7K,EAAA6K,EAAAL,OAAAjK,MAAAC,KAAAR,IAAAA,EACA6K,EAAAA,EAAAC,KAGA,GAAAJ,EAAAK,OACA,IAAAnD,EAAA8C,EAAAK,OAAAP,OAAAhK,KAAAR,GAIA,IADA,IAAAgL,EAAAN,EAAAM,MACAA,GAAAA,EAAAtB,GAAAkB,GAAA,CACA,GAAAI,EAAAP,iBAAA,CACA,IAAAQ,EAAAD,EAAAR,OAAAjK,MAAAC,KAAAR,GAEA4H,EAAAqD,IAAA3N,EAAAsK,EAAAqD,OAEArD,EAAAoD,EAAAR,OAAA1P,KAAA0F,KAAAoH,EAAA5H,GAEAgL,EAAAA,EAAAF,KAEA,OAAAlD,GAEA+C,IACAD,EAAAK,QAAAP,OAAA,SAAA7K,EAAAK,GACA,OAAA2K,EAAApK,MAAAZ,EAAAK,MAGA0K,EAAA/K,OAAAA,GAEA,IAAAiI,EA3GA,SAAA8C,EAAAhQ,EAAA8P,EAAAC,GACA,IAEAS,EAFAC,EAAAT,EAAAhQ,GACAqQ,EAAA,UAAArQ,EAEA,GAAAqQ,EAAA,CACA,IAAAK,EAAAZ,EAAA,WACA,OAAAW,EAAAX,OAAAhK,KAAAN,aAEAgL,GACAhB,OAAA,WACAkB,IACAA,EAAAV,EAAAF,EAAA,OAGAA,OAAA,SAAA7K,EAAAK,GACA,OAAAoL,EACAA,EAAA7K,MAAAZ,EAAAK,GACAmL,EAAAX,OAAA7K,EAAAK,UAKAkL,GACAhB,OAAA,WACA,GAAAgB,EAAAV,OAAA,CACA,IAAAW,EAAAD,EAAAC,SACAL,EAAAI,EAAAJ,KACAA,GAAAK,GAGAA,EACAA,EAAAL,KAAAA,EAEAJ,EAAAhQ,GAAAoQ,EAEAA,IACAA,EAAAK,SAAAA,WARAT,EAAAhQ,GAaAgQ,EAAAF,EAAAU,EAAAV,OAAA,OAGAd,GAAAW,IACAG,OAAAA,EACAC,iBAAAA,GAGA,GAAAU,IAAAJ,EACA,GAAA,SAAArQ,EAAA,CAGA,KAAAyQ,EAAAL,OAAAK,EAAAA,EAAAL,QACAK,EAAAL,KAAAI,EACAA,EAAAC,SAAAA,MACA,UAAAzQ,IAEAgQ,EAAAhQ,GAAAwQ,EACAA,EAAAJ,KAAAK,EACAA,EAAAA,SAAAD,QAIAR,EAAAhQ,GAAAwQ,EAEA,OAAAA,EAyCAG,CAAAX,GAAAC,EAAAjQ,EAAA8P,EAAAC,GAEA,OADAD,EAAA,KACA5C,GAIA,OAAAxN,EAAAC,OAAA,gBACA2Q,MAAAV,EAAA,SAEAS,OAAAT,EAAA,UAEAO,OAAAP,EAAA,cAGA5Q,OAAA,6BACA,YACA,SAAA4Q,GACA,OAAAA,IAEA5Q,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,wBACA,wBACA,SAAA4Q,GACA,OAAAA,IAEA5Q,OAAA,6BACA,sBACA,sBACA,yBACA,SAAAU,EAAAmD,EAAA6F,GACA,IAAA9C,EAAA8C,EAAA9C,MACA7B,EAAA7C,MAAAY,UAAAiC,MACAzD,EAAAuC,EAAAvC,WACAM,EAAAiC,EAAAjC,SAcA,SAAAgQ,EAAA1G,EAAA2G,GACA,IAAAvL,EAAA,KAAAE,WAAAzB,EAAA3D,KAAAoF,UAAA,GACA,GAAAlF,EAAA4J,GAAA,CAIA,OAHA,WACA,OAAAA,EAAArE,MAAAgL,EAAAvL,EAAAA,EAAAwE,OAAA/F,EAAA3D,KAAAoF,YAAAA,YAGA,GAAA5E,EAAAiQ,GACA,OAAAvL,GACAA,EAAA+F,QAAAnB,EAAA2G,GAAA3G,GACA0G,EAAA/K,MAAA,KAAAP,IAEAsL,EAAA1G,EAAA2G,GAAA3G,GAGA,MAAA,IAAA4G,UAAA,qBAiBA,IAAArD,EAAA,WAEA,SAAAsD,KACA,OAAA,SAAAnR,EAAAiL,GACAkG,EAAAjP,UAAAlC,EACA,IAAA6M,EAAA,IAAAsE,EAKA,OAJAA,EAAAjP,UAAA,KACA+I,GACAjF,EAAA6G,EAAA5B,GAEA4B,GAVA,GAiBAuE,GACAC,SAAA,kBACAC,YAAA,mBACAC,OAAA,oBAMAC,EAAA,OAKAC,GACAC,IAAA,IACAC,KAAA,KACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAGAC,EAAA,+BA0FA,OAAAnS,EAAAC,OAAA,eACAmS,KAAAlB,EAEAmB,SAnJA,SAAA7H,EAAA8H,GACA,IAAAC,EACA,OAAA,WACA,IAAApB,EAAA/K,KAAAR,EAAAE,UAKAyM,GAAAC,aAAAD,GACAA,EAAAE,WALA,WACAF,EAAA,KACA/H,EAAArE,MAAAgL,EAAAvL,IAGA0M,KA4IAvE,SAAAA,EAEA2E,MAtLA,SAAAlI,GACAmI,sBACAA,sBAAAnI,GAEAoI,cAAApI,GAEA,OAAApE,MAkLAyM,OAnBA,SAAAxJ,GACA,GAAA,mBAAAA,EACA,MAAA,IAAA+H,UAAA,uBAEA,OAAA,YAAAxL,GACA,OAAAyD,EAAAlD,MAAAC,KAAAR,KAgBAkN,KAjLA,aAmLA5B,MAAAA,EAEA6B,WAAA,WACA,OAAA,GAGAC,YAAA,WACA,OAAA,GAGA1B,iBAAAA,EACA2B,SA/GA,SAAAC,EAAA3D,EAAA4D,GACA,IAAAC,EACAD,EAAAnK,EAAAlE,YAAAqO,EAAA7B,GAGA,IAAA+B,EAAAC,SACAH,EAAA1B,QAAAC,GAAAlM,QACA2N,EAAA3B,aAAAE,GAAAlM,QACA2N,EAAA5B,UAAAG,GAAAlM,QACA+N,KAAA,KAAA,KAAA,KAGArM,EAAA,EACA1B,EAAA,SACA0N,EAAAhP,QAAAmP,EAAA,SAAAG,EAAA/B,EAAAD,EAAAD,EAAArH,GAcA,OAbA1E,GAAA0N,EAAA7O,MAAA6C,EAAAgD,GACAhG,QAAAiO,EAAA,SAAAqB,GAAA,MAAA,KAAA7B,EAAA6B,KAEA/B,IACAjM,GAAA,cAAAiM,EAAA,kCAEAD,IACAhM,GAAA,cAAAgM,EAAA,wBAEAD,IACA/L,GAAA,OAAA+L,EAAA,YAEArK,EAAAgD,EAAAsJ,EAAA7T,OACA6T,IAEAhO,GAAA,OAGA2N,EAAAM,WAAAjO,EAAA,mBAAAA,EAAA,OAEAA,EAAA,4FAEAA,EAAA,gBAEA,IACA4N,EAAA,IAAAlH,SAAAiH,EAAAM,UAAA,MAAA,IAAAjO,GACA,MAAAkO,GAEA,MADAA,EAAAlO,OAAAA,EACAkO,EAGA,GAAAnE,EACA,OAAA6D,EAAA7D,EAAAnJ,MAEA,IAAA6M,EAAA/B,EAAA,SAAA3B,GACA,OAAA6D,EAAA1S,KAAA0F,KAAAmJ,EAAAnJ,OACAA,MAGAuN,EAAAR,EAAAM,UAAA,MAGA,OAFAR,EAAAzN,OAAA,YAAAmO,EAAA,OAAAnO,EAAA,IAEAyN,OAyDA3T,OAAA,4BACA,WACA,SAAAsU,GACA,OAAAA,IAEAtU,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,gCACA,uBACA,sBACA,yBACA,SAAAwL,EAAA8I,EAAA5K,GACA,aAEA,IAAA6K,EAAA7O,OAAAA,SAAA,gBACA8O,EAAA9O,OAAAA,SAAA,eAEAX,EAAA7C,MAAAY,UAAAiC,MACA6M,EAAA0C,EAAA1C,MACAjH,EAAAa,EAAAb,UACA1F,EAAAyE,EAAAzE,OACA2B,EAAA8C,EAAA9C,MAEAA,EAAA6N,QAAA3R,WACA4R,OAAA,SAAAC,GAIA,OADA7N,KAAAsH,KAAAuG,EAAAA,GACA7N,MAEA8N,KAAA,WACA,IAAA,IAAArU,EAAA,EAAAA,EAAAiG,UAAAnG,OAAAE,IACAuG,KAAAsH,KAAA5H,UAAAjG,IAEA,OAAAuG,MAEA+N,KAAA,SAAAF,GAIA,OADA7N,KAAAgO,MAAAH,GACA7N,QAKA,IAAAyH,EAAA,WACA,IAAAwG,EAAAjO,KACAkO,EAAAlO,KAAAmO,QAAA,IAAAR,QAAA,SAAAS,EAAAC,GACAJ,EAAAK,SAAAF,EACAH,EAAAM,QAAAF,IAGAG,EAAAN,EAAAD,GAEAjO,KAAAyN,MACAzN,KAAA0N,OAQA,SAAAc,EAAAN,EAAAO,GACA,IAAAC,GACAC,MAAA,WACA,OAAAF,EAAAG,aACA,WAEAH,EAAAI,aACA,WAEA,WAEAvH,KAAA,SAAAwH,EAAAC,EAAAC,GAIA,OAHAA,GACAhP,KAAAiP,SAAAD,GAEAR,EAAAb,QAAA3R,UAAAsL,KAAAhN,KAAA0F,KACA8O,GAAA,SAAAtP,GACA,OAAAA,QAAA1C,IAAA0C,EAAA0P,QACAJ,EAAA/O,MAAAP,EAAA0P,QAAA1P,GAEAsP,EAAAtP,IAGAuP,GAAA,SAAAvP,GACA,OAAAA,QAAA1C,IAAA0C,EAAA0P,QACAH,EAAAhP,MAAAP,EAAA0P,QAAA1P,GAEAuP,EAAAvP,OAIAyP,SAAA,SAAApB,GAKA,OAJAY,EAAAf,GAAAvT,QAAA,SAAAM,GACAoT,EAAApT,KAEAgU,EAAAhB,GAAAzO,KAAA6O,GACA7N,OAMA,OADA0O,EAAAS,KAAAT,EAAApH,KACAxH,EAAAoO,EAAAQ,GA8HA,OA1HAjH,EAAAzL,UAAAoS,QAAA,SAAA3T,GACA,IAAA+E,EAAAvB,EAAA3D,KAAAoF,WACA,OAAAM,KAAAoP,YAAA,KAAA5P,IAGAiI,EAAAzL,UAAAoT,YAAA,SAAArE,EAAAvL,GAKA,OAJAA,EAAAA,EAAAqE,EAAArE,OACA0P,QAAAnE,EACA/K,KAAAsO,SAAA9O,GACAQ,KAAAqP,WAAA,EACArP,MAGAyH,EAAAzL,UAAAsT,OAAA,SAAA7U,GACA,IAGA,OAFAuF,KAAA0N,GAAA1O,KAAAvE,GAEAuF,KAAAyN,GAAAtT,QAAA,SAAAoV,GACA,OAAAA,EAAA9U,KAEA,MAAA+U,GACAxP,KAAAqO,OAAAmB,GAEA,OAAAxP,MAGAyH,EAAAzL,UAAAqS,OAAA,SAAAoB,GACA,IAAAjQ,EAAAvB,EAAA3D,KAAAoF,WACA,OAAAM,KAAA0P,WAAA,KAAAlQ,IAGAiI,EAAAzL,UAAA0T,WAAA,SAAA3E,EAAAvL,GAKA,OAJAA,EAAAA,EAAAqE,EAAArE,OACA0P,QAAAnE,EACA/K,KAAAuO,QAAA/O,GACAQ,KAAA2P,WAAA,EACA3P,MAGAyH,EAAAzL,UAAA4S,WAAA,WACA,QAAA5O,KAAAqP,WAGA5H,EAAAzL,UAAA6S,WAAA,WACA,QAAA7O,KAAA2P,WAGAlI,EAAAzL,UAAAsL,KAAA,SAAArG,EAAA2O,EAAAC,GACA,IAAA3B,EAAA/P,EAAA6B,KAAA,WACA,OAAAkO,EAAA5G,KAAArG,EAAA2O,EAAAC,IAGApI,EAAAzL,UAAAiT,SAAA,SAAAY,GACA,IAAA3B,EAAA/P,EAAA6B,KAAA,WACA,OAAAkO,EAAAe,SAAAY,IAGApI,EAAAzL,UAAAgS,MAAA,SAAA4B,GACA,IAAA1B,EAAA/P,EAAA6B,KAAA,WACA,OAAAkO,EAAAF,MAAA4B,IAIAnI,EAAAzL,UAAA8R,KAAA,WACA,IAAAI,EAAA/P,EAAA6B,KAAA,WACA,OAAAkO,EAAAJ,KAAA/N,MAAAmO,EAAAxO,YAGA+H,EAAAzL,UAAA+R,KAAA,SAAA6B,GACA,IAAA1B,EAAA/P,EAAA6B,KAAA,WACA,OAAAkO,EAAAH,KAAA6B,IAIAnI,EAAAqI,IAAA,SAAA9M,GAEA,IAAAyL,EAAA,IAAAhH,EAEA,OADAkG,QAAAmC,IAAA9M,GAAAsE,KAAAmH,EAAAL,QAAApC,KAAAyC,GAAAA,EAAAJ,OAAArC,KAAAyC,IACAtQ,EAAAsQ,EAAA,YAGAhH,EAAAlE,MAAA,SAAAP,GACA,OAAAwL,EAAAb,QAAAoC,KAAA/M,KAIAyE,EAAAC,KAAA,SAAAsI,EAAA/O,EAAA2O,EAAAC,GACA,IAAAI,EAAAD,GAAA,mBAAAA,EAAA1I,KACA4I,EAAAD,GAAAD,aAAArC,QAEA,IAAAsC,EACA,OAAAvQ,UAAAnG,OAAA,EACA0H,EAAAA,EAAA+O,GAAAA,GAEA,IAAAvI,GAAA2G,QAAA4B,GAEA,IAAAE,EAAA,CACA,IAAAC,EAAA,IAAA1I,EAAAuI,EAAAI,QACAJ,EAAA1I,KAAAwD,EAAAqF,EAAA/B,QAAA+B,GAAArF,EAAAqF,EAAA9B,OAAA8B,GAAAA,EAAAb,QACAU,EAAAG,EAAAhC,QAGA,OAAAlN,GAAA2O,GAAAC,EACAG,EAAA1I,KAAArG,EAAA2O,EAAAC,GAEAG,GAGAvI,EAAA4G,OAAA,SAAAgC,GACA,IAAA5B,EAAA,IAAAhH,EAEA,OADAgH,EAAAJ,OAAAgC,GACA5B,EAAAN,SASA1G,EAAA6I,UANA7I,EAAA2G,QAAA,SAAAjF,GACA,IAAAsF,EAAA,IAAAhH,EAEA,OADAgH,EAAAL,QAAArO,MAAA0O,EAAA/O,WACA+O,EAAAN,SAKA1G,IAEAvO,OAAA,6BACA,mBACA,wBACA,cACA,SAAAU,EAAAgJ,EAAA6E,GACA,IAAAzG,EAAA4B,EAAA5B,KAEAuP,GACA9I,SAAAA,EAEA+I,SAAA,SAAArM,EAAA3E,EAAAiR,GACA,IAAAC,KAQA,OAPAD,EAAAA,GAAA,KACAjR,EAAAA,MAEAwB,EAAAmD,EAAA,SAAA1K,EAAAgK,GACAiN,EAAA1R,KAAAyE,EAAA1D,MAAA0Q,EAAAjR,MAGAiI,EAAAqI,IAAAY,IAGAC,OAAA,SAAAxM,EAAA3E,EAAAiR,GACA,IAAAC,KACAjC,EAAA,IAAAhH,EACAyG,EAAAO,EAAAN,QAaA,OAXAsC,EAAAA,GAAA,KACAjR,EAAAA,MAEAiP,EAAAL,UACApN,EAAAmD,EAAA,SAAA1K,EAAAgK,GACAyK,EAAAA,EAAA5G,KAAA,WACA,OAAA7D,EAAA1D,MAAA0Q,EAAAjR,KAEAkR,EAAA1R,KAAAkP,KAGAzG,EAAAqI,IAAAY,IAGAE,SAAA,SAAAzM,EAAA3E,EAAAiR,GACA,IAAAhC,EAAA,IAAAhH,EACAyG,EAAAO,EAAAN,QAUA,OARAsC,EAAAA,GAAA,KACAjR,EAAAA,MAEAiP,EAAAW,YAAAqB,EAAAjR,GAEAwB,EAAAmD,EAAA,SAAA1K,EAAAgK,GACAyK,EAAAA,EAAA5G,KAAA7D,KAEAyK,IAIA,OAAAtU,EAAAC,OAAA,cAAA0W,KAEArX,OAAA,4BACA,WACA,SAAAqX,GACA,OAAAA,IAEArX,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,uBACA,uBACA,SAAAqX,GACA,OAAAA,IAEArX,OAAA,qCACA,oBACA,SAAAU,GA2DA,OAAAA,EAAAC,OAAA,mBACAgX,kBA3DA,SAAAC,GAEA,IAAAC,EAAAD,EAAAxX,MAAA,KACA0X,EAAAxT,SAAAuT,EAAA,IAEA,GAAAE,MAAAD,GACA,OAAA,EAKA,OAAAD,EAAA,GAAAG,OAAApT,QAAA,MAAA,KACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAAkT,EACA,IAAA,QACA,IAAA,OACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,OAfA,KAeAA,EACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAAA,EACA,IAAA,OACA,IAAA,MACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,OAAA,MAAAA,EACA,IAAA,SACA,IAAA,QACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,IACA,IAAA,IACA,OAAA,OAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,OACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,QACA,OAAA,QAQA9X,OAAA,gCACA,eACA,SAAAiY,GACA,OAAAA,IAEAjY,OAAA,2BAAA,gCAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,2BACA,2BACA,SAAAiY,GACA,OAAAA,IAEAjY,OAAA,0BACA,gCACA,SAAAuO,GACA,OAAAA,IAEAvO,OAAA,iCACA,sBACA,sBACA,wBACA,uBACA,uBACA,SAAAU,EAAAmD,EAAA6F,EAAA8B,EAAAwC,GACA,IAAAjJ,EAAA7C,MAAAY,UAAAiC,MACAqF,EAAAoB,EAAApB,QACA/H,EAAAwB,EAAAxB,UACAM,EAAAkB,EAAAlB,cACArB,EAAAuC,EAAAvC,WACAM,EAAAiC,EAAAjC,SACAP,EAAAwC,EAAAxC,cACAuF,EAAA8C,EAAA9C,MACA6C,EAAAC,EAAAD,UAEA,SAAAyO,EAAAC,GACA,IAAAC,GAAA,GAAAD,GAAA/X,MAAA,KACA,OACAI,KAAA4X,EAAA,GACA9X,GAAA8X,EAAArT,MAAA,GAAAkP,KAAA,MAIA,IAAAoE,EAAArK,GACAsK,GAAA,SAAAC,EAAAC,EAAAvI,EAAAlI,EAAAwP,EAAAkB,GACA,IAAA1D,EAAAjO,KACA4R,EAAA5R,KAAA4R,OAAA5R,KAAA4R,SAEA,OAAA/V,EAAA4V,IACAhB,EAAAxP,EACAD,KAAAyQ,EAAA,SAAAvX,EAAAkK,GACA6J,EAAAuD,GAAAtX,EAAAwX,EAAAvI,EAAA/E,EAAAqM,EAAAkB,KAEA3R,OAGAlF,EAAA4W,IAAAlX,EAAAyG,KACAwP,EAAAxP,EACAA,EAAAkI,EACAA,EAAAuI,EACAA,OAAA5U,GAGAtC,EAAA2O,KACAsH,EAAAxP,EACAA,EAAAkI,EACAA,EAAA,MAGArO,EAAA2W,KACAA,EAAAA,EAAAnY,MAAA,OAGAmY,EAAAtX,QAAA,SAAAkX,GACA,IAAAQ,EAAAT,EAAAC,GACA3X,EAAAmY,EAAAnY,KACAF,EAAAqY,EAAArY,IAEAoY,EAAAlY,KAAAkY,EAAAlY,QAAAsF,MACAoF,GAAAnD,EACAyQ,SAAAA,EACAvI,KAAAA,EACAsH,IAAAA,EACAjX,GAAAA,EACAmY,IAAAA,MAIA3R,OAGA2R,IAAA,SAAAF,EAAAC,EAAAvI,EAAAlI,EAAAwP,GACA,OAAAzQ,KAAAwR,GAAAC,EAAAC,EAAAvI,EAAAlI,EAAAwP,EAAA,IAGAqB,KAAA,SAAAxE,GACA,IAAAtN,KAAA4R,KACA,OAAA5R,KAGA,IAAAiO,EAAAjO,KAEAlF,EAAAwS,KACAA,EAAA,IAAAyE,YAAAzE,IAGAxR,OAAAgL,eAAAwG,EAAA,UACA7S,MAAAuF,OAGA,IAAAR,EAAAvB,EAAA3D,KAAAoF,UAAA,GA2CA,OAzCAF,EADAjE,EAAAiE,IACA8N,GAAAtJ,OAAAxE,IAEA8N,IAEAA,EAAApT,MAAAoT,EAAA5T,KAAA,OAAAS,QAAA,SAAA6X,GACA,IAAAH,EAAAT,EAAAY,GACAtY,EAAAmY,EAAAnY,KACAF,EAAAqY,EAAArY,GAEAyY,EAAAhE,EAAA2D,KAAAlY,GACA,GAAAuY,EAAA,CAOA,IAHA,IAAAC,EAAAD,EAAA1Y,OACA4Y,GAAA,EAEA1Y,EAAA,EAAAA,EAAAyY,EAAAzY,IAAA,CACA,IAAA8V,EAAA0C,EAAAxY,KACAD,GAAA+V,EAAA/V,IAAA+V,EAAA/V,GAAAgD,WAAAhD,MAGA8T,EAAAnE,KACAoG,EAAApG,OACAmE,EAAAnE,KAAArJ,KAAAyP,EAAApG,KAAAmE,EAAAnE,OAGAmE,EAAAnE,KAAAoG,EAAApG,MAAA,KAEAoG,EAAAnL,GAAArE,MAAAwP,EAAAkB,IAAAjR,GACA+P,EAAAoC,MACAM,EAAAxY,GAAA,KACA0Y,GAAA,IAIAA,IACAlE,EAAA2D,KAAAI,GAAA1O,EAAA2O,OAIAjS,MAGAoS,SAAA,SAAAf,GACA,IAAAgB,GAAArS,KAAA4R,OAAA5R,KAAAsS,aAAAjB,OACA,OAAAgB,EAAA9Y,OAAA,GAGAgZ,SAAA,SAAAzY,EAAAuX,EAAApQ,EAAA0Q,GACA,IAAA7X,EACA,OAAAkG,KAIAlF,EAAAmG,KACAA,EAAAjB,KAAAiB,IAGA0Q,EACA7X,EAAA6X,IAAAN,EAAApQ,EAAAjB,MAEAlG,EAAA0X,GAAAH,EAAApQ,EAAAjB,MAOA,IAHA,IACAwS,EADAC,EAAAzS,KAAA0S,eAAA1S,KAAA0S,iBAGAjZ,EAAA,EAAAA,EAAAgZ,EAAAlZ,OAAAE,IACA,GAAAgZ,EAAAhZ,GAAAK,KAAAA,EAAA,CACA0Y,EAAAC,EAAAhZ,GACA,MAGA+Y,GACAC,EAAAzT,KACAwT,GACA1Y,IAAAA,EACA2X,YAIA,IAAAkB,EAAAH,EAAAf,OACAmB,EAAAD,EAAAtB,GAAAsB,EAAAtB,OAKA,OAJA,GAAAuB,EAAAjR,QAAAV,IACA2R,EAAA5T,KAAAiC,GAGAjB,MAGA6S,aAAA,SAAA/Y,EAAAuX,EAAApQ,GACA,OAAAjB,KAAAuS,SAAAzY,EAAAuX,EAAApQ,EAAA,IAGA6R,IAAA,SAAArB,EAAAxQ,GACA,IAAA2Q,EAAA5R,KAAA4R,OAAA5R,KAAA4R,SAuCA,OAtCA9W,EAAA2W,KACAA,EAAAA,EAAAnY,MAAA,OAGAmY,EAAAtX,QAAA,SAAAkX,GACA,IAAAQ,EAAAT,EAAAC,GACA3X,EAAAmY,EAAAnY,KACAF,EAAAqY,EAAArY,GAEAuZ,EAAAnB,EAAAlY,GAEA,GAAAqZ,EAAA,CACA,IAAAC,KAEA,GAAA/R,GAAAzH,EACA,IAAA,IAAAC,EAAA,EAAAyY,EAAAa,EAAAxZ,OAAAE,EAAAyY,EAAAzY,IAEAwH,GAAA8R,EAAAtZ,GAAA2K,KAAAnD,GAAA8R,EAAAtZ,GAAA2K,GAAA6O,IAAAhS,EACA+R,EAAAhU,KAAA+T,EAAAtZ,KAIAD,GAAAuZ,EAAAtZ,GAAAD,IAAA,GAAAuZ,EAAAtZ,GAAAD,GAAAmI,QAAAnI,IACAwZ,EAAAhU,KAAA+T,EAAAtZ,IAMAuZ,EAAAzZ,OACAqY,EAAAlY,GAAAsZ,SAEApB,EAAAlY,MAMAsG,MAEAkT,WAAA,SAAApZ,EAAAuX,EAAApQ,GACA,IAAAwR,EAAAzS,KAAA0S,aACA,IAAAD,EACA,OAAAzS,KAEA,IAAA,IAAAvG,EAAA,EAAAA,EAAAgZ,EAAAlZ,OAAAE,IAAA,CACA,IAAA+Y,EAAAC,EAAAhZ,GAEA,IAAAK,GAAAA,GAAA0Y,EAAA1Y,IAAA,CAIA,IAAA6Y,EAAAH,EAAAf,OACA,IAAA,IAAAO,KAAAW,EACA,IAAAtB,GAAAA,GAAAW,EAAA,CAMA,IAFA,IAAAY,EAAAD,EAAAX,GAEA3O,EAAA,EAAAA,EAAAuP,EAAArZ,OAAA8J,IACApC,GAAAA,GAAA2R,EAAAnZ,KACA+Y,EAAA1Y,IAAAgZ,IAAAd,EAAAY,EAAAnZ,GAAAuG,MACA4S,EAAAnZ,GAAA,MAIAmZ,EAAAD,EAAAX,GAAA1O,EAAAsP,GAEArY,EAAAqY,KACAD,EAAAX,GAAA,MAKAzX,EAAAoY,KACAF,EAAAhZ,GAAA,OASA,OALAgZ,EAAAzS,KAAA0S,aAAApP,EAAAmP,GACAlY,EAAAkY,KACAzS,KAAA0S,aAAA,MAGA1S,MAGAmT,QAAA,WACA,OAAAnT,KAAA8R,KAAA/R,MAAAC,KAAAN,cASA,OALA6R,EAAA6B,YAAA,SAAAlZ,EAAA6K,GACA,IAAAuI,EAAA,IAAAyE,YAAA7X,EAAA6K,GACA,OAAApC,EAAA2K,EAAAvI,IAGAnL,EAAAC,OAAA,gBAAA0X,KAGArY,OAAA,iCACA,sBACA,aACA,SAAAU,EAAA2X,GACA,OAAA3X,EAAAC,OAAA,gBAAA0X,KAEArY,OAAA,8BACA,YACA,aACA,SAAAqY,GACA,OAAAA,IAEArY,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,yBACA,SAAAma,GACA,OAAAA,IAEAna,OAAA,yBACA,yBACA,SAAAma,GACA,OAAAA,IAEAna,OAAA,uBACA,uBACA,SAAAsU,GACA,OAAAA,IAEAtU,OAAA,+BACA,oBACA,SAAAU,GAEA,IAAA0Z,GACAC,WAAA,EACAC,OAAA,KACAC,OAAAzT,KACA0T,QAAA,KACAC,KAAA,MAGA,iBAAAC,SAAAA,QAAAC,UAAAD,QAAAC,SAAAF,MAAAC,QAAAC,SAAAC,KACAR,EAAAE,QAAA,EACAF,EAAAC,WAAA,GAGAD,EAAAG,OAAA,WACA,MAAA,oBAAAA,QAAA,mBAAAA,OAIAA,OACA,oBAAAzY,OAEAA,OAEA,oBAAAiT,KAEAA,KAEAjO,KAdA,GAiBA,IAAA+T,EAAA,KAWA,GATAjY,OAAAgL,eAAAwM,EAAA,WAAA,WACA,IAAAS,EAAA,CACA,IAAAC,EAAA,oBAAAhZ,OAAAiZ,QAAA,gBAAAjZ,OACA+Y,EAAAC,EAAAE,SAGA,OAAAH,IAGAT,EAAAC,UAAA,CAiBA,IAAAY,EAhBA,SAAAC,GACAA,EAAAA,EAAAha,cAEA,IAAAgT,EAAA,wBAAAiH,KAAAD,IACA,wBAAAC,KAAAD,IACA,qCAAAC,KAAAD,IACA,kBAAAC,KAAAD,IACAA,EAAAzS,QAAA,cAAA,GAAA,gCAAA0S,KAAAD,OAGA,OACAV,QAAAtG,EAAA,IAAA,GACAkH,QAAAlH,EAAA,IAAA,KAIAmH,CAAAC,UAAAC,WAEAf,EAAAJ,EAAAI,WAEAS,EAAAT,UACAA,EAAAS,EAAAT,UAAA,EACAA,EAAAY,QAAAH,EAAAG,SAIAZ,EAAAgB,OACAhB,EAAAiB,QAAA,EACAjB,EAAAiB,SACAjB,EAAAkB,QAAA,GAIA,OAAAhb,EAAAC,OAAA,eAAAyZ,KAEApa,OAAA,6BACA,YACA,SAAAoa,GACA,OAAAA,IAEApa,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,wBACA,wBACA,SAAAoa,GACA,OAAAA,IAEApa,OAAA,yBACA,yBACA,SAAAmF,GACA,OAAAA,IAEAnF,OAAA,yBACA,yBACA,SAAA0J,GACA,OAAAA,IAEA1J,OAAA,iCACA,oBACA,SAAAU,GAEA,IAAAib,EAAA/Y,OAAAgZ,QACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACA1J,IAAA,SACA2J,IAAA,SACAC,IAAA,WAEA,SAAAC,EAAAC,GACA,OAAAT,EAAAS,GAEA,IAAAC,EAAA,aA2GA,IAAAC,EAAA,EAWA,SAAA3I,EAAA3D,EAAAC,GA0BA,IAEAzP,EAAA+b,EACAC,EAAAC,EAgBAlS,EACAY,EACAuR,EArBAC,EAAAnW,UAAAoW,OAwBA,OAvBAD,EAAAzN,MAAAc,KAAA2M,EAAAzN,MAAAc,IACAxP,EAAAwP,EAAAuM,EAAA,YAAAzX,KAAAkL,GAAA2M,EAAA5M,IAAAC,IAAAxP,EAAA,mBAAAwP,GACAwM,EAAA,EAAAC,GACA,UACAE,EAAAxI,SAAA,OAAAwI,EAAAxI,SAAA,iBAAA,wBACA,gBACAoI,EACA3X,QAAA,MAAA,KAAAA,QAAA,MAAA,KACAA,QAAA,0BAAA,SACAA,QAAA,aAAA,IACAA,QAAA,WAAA,WAAA,MAAA,sBAAA4X,EAAA,uBACA5X,QAAA,qBAAA,gBACAA,QAAA,kBAAA,+BACAA,QAAA,iBAAA,wBACA,OAAA+X,EAAAxI,SAAA,GAAA,KAAA,qEACA3T,EAAA,mDACAA,EAAA,MACAoE,QAAA,qBAAA,IACA2F,EAAA,IAAAqC,SAAA6P,GACAtR,GAAA0Q,IAAA,QAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,SAAA1J,IAAA,UACAoK,EAAA,SAAAH,GAAA,OAAA,GAAAA,GAAA3X,QAAA,aAAA,SAAAmV,GAAA,OAAA5O,EAAA4O,MACA,SAAA8C,GAAA,OAAAtS,EAAAnJ,KAAAub,EAAA9K,SAAA6K,WAAAA,EAAAF,KAAA,EAAA7O,IAAA,GAAAkP,MAAAA,OAEA5M,EAAA0M,EAAAzN,MAAAc,GAAAC,GAAA0M,EAAAzN,MAAAc,GA+DA,OA5DA2D,EAAAzE,SAGAyE,EAAA5D,IAAA,SAAAC,GACA,OAAAgL,SAAA8B,eAAA9M,GAAA+M,WAwDArc,EAAAC,OAAA,iBACAqc,UAAA,SAAApF,GACA,OAAAA,EAAAhT,QAAA,cAAA,SAAAoC,GACA,OAAAA,EAAAiW,cAAArY,QAAA,IAAA,OAIAsY,UArOA,SAAAtF,GACA,OAAAA,EAAAhT,QAAA,MAAA,KACAA,QAAA,wBAAA,SACAA,QAAA,oBAAA,SACAA,QAAA,KAAA,KACA1D,eAkOAic,iBA/NA,SAAA5b,GACA,IACA,OAAAA,EACA,QAAAA,GACA,SAAAA,IACA,QAAAA,EAAA,MACAA,EAAA,IAAAA,GAAAA,EACA,UAAAuD,KAAAvD,GAAA6b,KAAAlF,MAAA3W,GACAA,GAAAA,EACA,MAAA6S,GACA,OAAA7S,IAuNAmb,WAnNA,SAAA9E,GACA,GAAA,MAAAA,EACA,MAAA,GAEA,IAAAA,EACA,OAAAzW,OAAAyW,GAGA,OAAAA,EAAA7W,WAAA6D,QAAAyX,EAAAF,IA6MAkB,aA1MA,WACA,MAAA,uCAAAzY,QAAA,QAAA,SAAAwX,GACA,IAAAkB,EAAA,GAAAlN,KAAAC,SAAA,EACAkN,EAAA,MAAAnB,EAAAkB,EAAA,EAAAA,EAAA,EACA,OAAAC,EAAAxc,SAAA,OAwMAyc,WAAA,SAAA5F,GACA,OAAAA,EAAA6F,OAAA,GAAAvc,cAAA0W,EAAA7S,MAAA,IAGA2Y,MAxEA,SAAA9F,GACA,OAAAA,EAAAhT,QAAA,QAAA,KAyEA+Y,eAAA,SAAApc,GACA,OAAA6b,KAAAQ,UAAArc,IAIAsc,WA3MA,SAAAlK,EAEAxI,EAEA2S,EAEA7O,GAmBA,SAAA8O,EAAAlY,EAAAsF,GACA,GAAAtF,EAAAqO,MAAA,MAAA,CACA,IAAA8J,EACAC,EAAA,SAAArY,EAAAhF,GACA,IAAAsd,EAAAtY,EAAAc,MACA,OAAAwX,EACAtd,EAAAsd,GACAD,EAAArY,EAAAoY,EAAApd,EAAAsd,IADA,KAGAF,GAGA,OAAAC,EAAApY,EAAAzF,MAAA,KAAA+d,UAAAhT,GAEA,OAAAA,EAAAtF,GAIA,OAxBAoJ,EAAAA,GAAAnN,OACAgc,EAAAA,EACAlM,MAAA3C,EAAA6O,GAAA,SAAAP,GACA,OAAAA,GAqBA5J,EAAA/O,QAAA,yCACA,SAAAsP,EAAArO,EAAAuY,GACA,IAAA7c,EAAAwc,EAAAlY,EAAAsF,GAIA,OAHAiT,IACA7c,EAAAwc,EAAAK,EAAAnP,GAAA7N,KAAA6N,EAAA1N,EAAAsE,IAEAiY,EAAAvc,EAAAsE,GAAA9E,cA4JAsd,QA5EA,SAAAzG,GAIAA,GAHAA,EAAAA,EAAAhT,QAAA,aAAA,KAGA1D,cAKA,IAFA,IAAAod,EAAA,qGAEA/d,EAAA,EAAAsH,EAAAyW,EAAAje,OAAAE,EAAAsH,EAAAtH,IACAqX,EAAAA,EAAAhT,QAAA,IAAAoP,OAAAsK,EAAAb,OAAAld,GAAA,KAFA,qGAEAkd,OAAAld,IAUA,OAJAqX,EAAAA,EAAAhT,QAAA,OAAA,KAEAA,QAAA,MAAA,MA8DAoT,KArNA,SAAAJ,GACA,OAAA,MAAAA,EAAA,GAAAzW,OAAA2B,UAAAkV,KAAA5W,KAAAwW,IAsNA2G,SA7JA,SAAAC,GACA,IAAAxO,IAAAsM,EAAA,GACA,OAAAkC,EAAAA,EAAAxO,EAAAA,GA6JAyO,WAAA,SAAA7G,GACA,OAAAA,EAAA6F,OAAA,GAAAR,cAAArF,EAAA7S,MAAA,QAKA/E,OAAA,8BACA,aACA,SAAA0e,GACA,OAAAA,IAEA1e,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,yBACA,SAAA0e,GACA,OAAAA,IAEA1e,OAAA,0BACA,YACA,YACA,aACA,SAAAma,EAAAuE,EAAAhV,GACA,IAAAvB,EAAAuB,EAAAvB,QACAvB,EAAA8C,EAAA9C,MACA3B,EAAAyE,EAAAzE,OACA5D,EAAAqI,EAAArI,cACAmG,EAAAkC,EAAAlC,MACA+W,EAAAG,EAAAH,SAEAI,EAAAxE,EAAArM,SACAnC,WAAA,SAAAiT,EAAA5S,GACA,IAAApD,EAAAgW,MACA5S,IAAAA,MACAlF,KAAA+X,IAAAN,EAAAzX,KAAAgY,WACAhY,KAAA8X,cACA5S,EAAA3D,aAAAvB,KAAAuB,WAAA2D,EAAA3D,YACA2D,EAAAkM,QAAAtP,EAAA9B,KAAAoR,MAAAtP,EAAAoD,QACA,IAAAxG,EAAAP,EAAA6B,KAAA,YACA8B,EAAAhC,KAAApB,EAAAoD,GACA9B,KAAAiY,IAAAnW,EAAAoD,GACAlF,KAAAkY,YAIAA,QAAA,KAGAC,gBAAA,KAIAC,YAAA,KAIAJ,UAAA,IAIAK,OAAA,SAAAnT,GACA,OAAAxE,EAAAV,KAAA8X,aAKA7O,IAAA,SAAAqP,GACA,OAAAtY,KAAA8X,WAAAQ,IAKArZ,IAAA,SAAAqZ,GACA,OAAA,MAAAtY,KAAAiJ,IAAAqP,IAMAL,IAAA,SAAAlZ,EAAAwZ,EAAArT,GACA,GAAA,MAAAnG,EAAA,OAAAiB,KAGA,IAAA8B,EAWA,GAVA,iBAAA/C,GACA+C,EAAA/C,EACAmG,EAAAqT,IAEAzW,MAAA/C,GAAAwZ,EAGArT,IAAAA,OAGAlF,KAAAwY,UAAA1W,EAAAoD,GAAA,OAAA,EAGA,IAAAuT,EAAAvT,EAAAuT,MACAC,EAAAxT,EAAAwT,OACAC,KACAC,EAAA5Y,KAAA6Y,UACA7Y,KAAA6Y,WAAA,EAEAD,IACA5Y,KAAA8Y,oBAAApY,EAAAV,KAAA8X,YACA9X,KAAAkY,YAGA,IAAAa,EAAA/Y,KAAA8X,WACAI,EAAAlY,KAAAkY,QACAc,EAAAhZ,KAAA8Y,oBAGA,IAAA,IAAAR,KAAAxW,EACAyW,EAAAzW,EAAAwW,GACAjX,EAAA0X,EAAAT,GAAAC,IAAAI,EAAA3Z,KAAAsZ,GACAjX,EAAA2X,EAAAV,GAAAC,UAGAL,EAAAI,GAFAJ,EAAAI,GAAAC,EAIAE,SAAAM,EAAAT,GAAAS,EAAAT,GAAAC,EAOA,GAHAvY,KAAAoY,eAAAtW,IAAA9B,KAAAkJ,GAAAlJ,KAAAiJ,IAAAjJ,KAAAoY,eAGAM,EAAA,CACAC,EAAApf,SAAAyG,KAAAiZ,SAAA/T,GACA,IAAA,IAAAzL,EAAA,EAAAA,EAAAkf,EAAApf,OAAAE,IACAuG,KAAAmT,QAAA,UAAAwF,EAAAlf,GAAAuG,KAAA+Y,EAAAJ,EAAAlf,IAAAyL,GAMA,GAAA0T,EAAA,OAAA5Y,KACA,IAAA0Y,EACA,KAAA1Y,KAAAiZ,UACA/T,EAAAlF,KAAAiZ,SACAjZ,KAAAiZ,UAAA,EACAjZ,KAAAmT,QAAA,SAAAnT,KAAAkF,GAKA,OAFAlF,KAAAiZ,UAAA,EACAjZ,KAAA6Y,WAAA,EACA7Y,MAKAyY,MAAA,SAAAH,EAAApT,GACA,OAAAlF,KAAAiY,IAAAK,OAAA,EAAAxY,KAAAoF,GAAAuT,OAAA,MAIAS,MAAA,SAAAhU,GACA,IAAApD,KACA,IAAA,IAAA/C,KAAAiB,KAAA8X,WAAAhW,EAAA/C,QAAA,EACA,OAAAiB,KAAAiY,IAAAnW,EAAAhC,KAAAoF,GAAAuT,OAAA,MAKAU,WAAA,SAAAb,GACA,OAAA,MAAAA,GAAA/d,EAAAyF,KAAAkY,cACApb,IAAAkD,KAAAkY,QAAAI,IASAc,kBAAA,SAAAC,GACA,IAAAA,EAAA,QAAArZ,KAAAmZ,cAAAzY,EAAAV,KAAAkY,SACA,IAAAoB,EAAAtZ,KAAA6Y,UAAA7Y,KAAA8Y,oBAAA9Y,KAAA8X,WACAI,KACA,IAAA,IAAAI,KAAAe,EAAA,CACA,IAAAd,EAAAc,EAAAf,GACAjX,EAAAiY,EAAAhB,GAAAC,KACAL,EAAAI,GAAAC,GAEA,OAAAhe,EAAA2d,IAAAA,GAKAvN,SAAA,SAAA2N,GACA,OAAA,MAAAA,GAAAtY,KAAA8Y,oBACA9Y,KAAA8Y,oBAAAR,GADA,MAMAiB,mBAAA,WACA,OAAA7Y,EAAAV,KAAA8Y,sBAIApY,MAAA,WACA,OAAA,IAAAV,KAAA7E,YAAA6E,KAAA8X,aAIA0B,MAAA,WACA,OAAAxZ,KAAAf,IAAAe,KAAAoY,cAIAqB,QAAA,SAAAvU,GACA,OAAAlF,KAAAwY,aAAA1Y,KAAAoF,GAAAwU,UAAA,MAKAlB,UAAA,SAAA1W,EAAAoD,GACA,IAAAA,EAAAwU,WAAA1Z,KAAA0Z,SAAA,OAAA,EACA5X,EAAAhC,KAAAE,KAAA8X,WAAAhW,GACA,IAAA0N,EAAAxP,KAAAmY,gBAAAnY,KAAA0Z,SAAA5X,EAAAoD,IAAA,KACA,OAAAsK,IACAxP,KAAAmT,QAAA,UAAAnT,KAAAwP,EAAA1P,EAAAoF,GAAAiT,gBAAA3I,MACA,MAIA,OAAAqI,IAEA3e,OAAA,6BACA,mBACA,iCACA,SAAAU,EAAAyZ,GACA,IAAAsG,EAAA,IAAAtG,EAEA,OAAAzZ,EAAAC,OAAA,eACA+f,QAAA,SAAAlgB,EAAAmgB,EAAAC,GACA,IAAA3Q,KAAAlL,MAAA3D,KAAAoF,UAAA,GAEA,OAAAia,EAAAxG,SACAjZ,KAAAR,EACAyP,KAAAA,KAIA4Q,UAAA,SAAArgB,EAAA6V,EAAAkB,GACA,IAAA5C,EAAA,SAAAP,GACAiC,EAAAxP,MAAA0Q,EAAAnD,EAAAnE,OAGA,OADAwQ,EAAAnI,GAAA9X,EAAAmU,IAEAnE,OAAA,WACAiQ,EAAA7G,IAAApZ,EAAAmU,UAQA3U,OAAA,4BACA,WACA,SAAA8gB,GACA,OAAAA,IAEA9gB,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,uBACA,uBACA,SAAA8gB,GACA,OAAAA,IAEA9gB,OAAA,uBACA,uBACA,SAAA6D,GACA,OAAAA,IAEA7D,OAAA,uBACA,YACA,WACA,eACA,WACA,UACA,cACA,aACA,YACA,YACA,UACA,WACA,UACA,YACA,YACA,aACA,YACA,UACA,WACA,SAAAU,EAAA8K,EAAAmD,EAAAiC,EAAAyG,EAAAY,EAAA1J,EAAA8J,EAAA8B,EAAA7F,EAAA8F,EAAApM,EAAA7I,EAAAuE,EAAAiV,EAAAD,EAAAoC,EAAAjd,GACA,aAEA3B,MAAAY,UAAAgI,OACA5I,MAAAY,UAAA2F,QACAvG,MAAAY,UAAAiC,MACA7C,MAAAY,UAAA6G,OAJA,IAKA/C,EAAA8C,EAAA9C,MAEAtF,GADAoI,EAAAD,UACA5F,EAAAvC,YA6BA,IAAAyf,EAAA,EAMA,SAAAC,IACA,OAAAA,EAuCA,OApCApa,EAAAoa,GACA9G,YAAA7B,EAAA6B,YAEA+G,QAvCA,SAAApP,EAAA3J,EAAAmB,EAAA6X,GACA,OAAA5f,EAAA4G,GAAAA,EAAA9G,KAAAyQ,EAAAxI,EAAA6X,GAAAhZ,GAwCAiZ,eArCA,SAAAC,GACA,IACAhJ,GADAgJ,EAAAA,GAAAtf,OAAAoB,SAAAF,MACA5C,MAAA,KACAmG,KAEA6R,EAAA/X,OAAA,GACA+X,EAAA,GAAAhY,MAAA,KAAAa,QAAA,SAAAogB,GACA,IAAAC,EAAAD,EAAAjhB,MAAA,KACAmG,EAAA+a,EAAA,IAAAA,EAAA,KAGA,OAAA/a,GA4BAgb,QAxBA,SAAAhgB,GAGA,OAAAigB,WAAAjgB,IAAA,GAuBAkgB,IAjBA,SAAA7gB,GACA,OAAAA,EAAAmgB,OAAAngB,EAAAmgB,KAAAA,MAkBAW,IAAA,oBAAA5f,OAAAA,OAAA4f,KAAA5f,OAAA6f,UAAA,OAKA/a,EAAAoa,EAAAxV,EAAAoF,EAAAqH,EAAA3D,EAAAnP,EAAAuE,EAAAgV,EAAA7a,GACA8K,WAAAA,EAEA0I,MAAAA,EAEA9I,SAAAA,EAEA8J,QAAAA,EAEA8B,QAAAA,EAEAC,OAAAA,EAEApM,MAAAA,EAEA2Q,SAAAA,EAEAmC,MAAAA,IAGApgB,EAAAsgB,MAAAA,IAEAhhB,OAAA,gCACA,wBACA,uBACA,SAAAU,EAAAsgB,GACA,aAEA,IAqBAY,EACAC,EAtBArH,EAAAwG,EAAA5G,OAAAI,QAKAsH,GACAC,iBAAA,sBACAC,cAAA,gBACAC,YAAA,gCACAC,WAAA,iBAEAC,EAAA,KAGAC,EAAA,GAEAC,EAAA,GAEAC,KACAC,KAIAC,EAAA,qCAEAxH,EAAAlZ,OAAAkZ,SACAyH,EAAAzH,EAAA0H,cAAA,OAEAC,EAAAF,EAAAG,uBACAH,EAAAI,oBACAJ,EAAAK,kBACAL,EAAAE,gBAEAI,EAAAN,EAAAO,mBACAP,EAAAQ,yBACAR,EAAAS,sBACAT,EAAAU,oBAOAC,GALApI,EAAAqI,gBACArI,EAAAsI,wBACAtI,EAAAuI,qBACAvI,EAAAwI,iBAEAf,EAAAgB,OAEA,IAAA,IAAAjjB,KAAA4iB,EAAA,CACA,IAAAnI,EAAAza,EAAA0T,MAAA2N,GAAAW,GACA,GAAAvH,EAAA,CACA4G,IACAD,EAAA3G,EAAA,GACA4G,EAAA,IAAA7N,OAAA,KAAA4N,EAAA,UAEAA,EACAQ,EAAA,IAAAR,EAAA1gB,cAAA,IACAmhB,EAAAT,EAAA1gB,eAGAohB,EAAAtB,EAAAxD,WAAAvC,EAAA,KAAAza,EACA,IAAAkjB,EAAA1C,EAAA9D,UAAAjC,EAAA,IACAsH,EAAAmB,GAAAtB,EAAAsB,EAEA5B,EAAAthB,KACA2hB,EAAAL,EAAAthB,KA0DA,OArDA2hB,QACAve,IAAAwf,EAAA,aACAjB,EAAAL,EAAA,YAgBAd,EAAApa,MAAA4T,GACA4H,eAAAA,EAEAuB,OAAA,QAAAxI,KAAArZ,OAAAwZ,UAAAC,WAEAqI,uBATA,SAAApjB,GACA,OAAA8hB,EAAA9hB,IAAAA,GAUAqjB,qBAfA,SAAArjB,GACA,OAAA+hB,EAAA/hB,IAAAA,GAgBAsjB,kBArBA,SAAAtjB,GACA,OAAA6hB,EAAAA,EAAA7hB,EAAAA,EAAAU,eAsBAyhB,gBAAAA,EAEAI,kBAAAA,EAEAM,eAAAN,EAEA7f,SAAA,WACA,OAAApB,OAAAoB,UAGA6gB,aAMA5B,IACA3H,EAAAuJ,QAAA7B,YACA8B,IAAA7B,IAIAM,EAAA,KAEA/hB,EAAAC,OAAA,eAAA6Z,KAGAxa,OAAA,6BACA,aACA,SAAAwa,GACA,OAAAA,IAEAxa,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,4BACA,wBACA,sBACA,wBACA,SAAAU,EAAAsgB,EAAAxG,GACA,IAAAmJ,IAAArI,UAAAC,UAAArH,MAAA,eAAAoH,UAAAC,UAAArH,MAAA,SACA+P,EAAA,qBACAC,EAAA,6BACAC,EAAAnJ,SAAA0H,cAAA,OACA0B,EAAApJ,SAAA0H,cAAA,SACA2B,EAAArJ,SAAA0H,cAAA,SACA4B,EAAAtJ,SAAA0H,cAAA,MACA6B,GACAC,GAAAH,EACAI,MAAAL,EACAM,MAAAN,EACAO,MAAAP,EACAQ,GAAAN,EACAO,GAAAP,EACAQ,IAAAX,GAEAY,EAAA,mBACA5Z,EAAAjJ,MAAAY,UAAAqI,IACApG,EAAA7C,MAAAY,UAAAiC,MAEA,SAAAigB,EAAAC,EAAAC,GASA,OARAlE,EAAA7e,YAAA8iB,KACAA,GAAAA,IAEAC,IACAD,EAAA9Z,EAAA/J,KAAA6jB,EAAA,SAAAxK,GACA,OAAAA,EAAA0K,WAAA,MAGAnE,EAAA9W,QAAA+a,GAGA,SAAAG,EAAAC,EAAAC,GACA,IAAA9kB,EAAA6kB,EAAAD,UAAAC,EAAAD,SAAAlkB,cACA,YAAA0C,IAAA0hB,EACA9kB,IAAA8kB,EAAApkB,cAEAV,EAiCA,SAAA+kB,EAAAC,EAAA/K,GACA,GAAAuG,EAAA1f,WAAAkkB,GACA,OAAAA,EAAA3e,MAAA4T,MAEA,GAAAuG,EAAA7e,YAAAqjB,GAAA,CAEA,IADA,IAAAC,EACAllB,EAAA,EAAAA,EAAAilB,EAAAnlB,OAAAE,IACAygB,EAAA1f,WAAAkkB,EAAAjlB,MACAilB,EAAAjlB,GAAAilB,EAAAjlB,GAAAsG,MAAA4T,MACAuG,EAAA7e,YAAAqjB,EAAAjlB,MACAklB,GAAA,IAIAA,IACAD,EAAAxE,EAAA9W,QAAAsb,IAGA,OAAAA,EAqBA,SAAAE,EAAAjL,EAAA+K,EAAAN,GACAM,EAAAD,EAAAC,EAAA/K,GAGA,IAFA,IAAAkL,EAAAlL,EACAwK,EAAAD,EAAAQ,EAAAN,GACA3kB,EAAA,EAAAA,EAAA0kB,EAAA5kB,OAAAE,IACAolB,EAAAC,YAAAX,EAAA1kB,IAEA,OAAAuG,KAgCA,SAAA4b,EAAAmD,EAAAha,EAAAC,GACA,IAAA2O,EAQA,GALAA,EADA,OAAA3V,KAAA+gB,GACA7K,SAAA8K,gBAAA,6BAAAD,GAEA7K,SAAA0H,cAAAmD,GAGAha,EACA,IAAA,IAAArL,KAAAqL,EACA4O,EAAAsL,aAAAvlB,EAAAqL,EAAArL,IAMA,OAHAsL,GACA4Z,EAAA5Z,EAAA2O,GAEAA,EAuJA,IAAAuL,EAAA,0EAqCA,SAAAC,EAAAxL,EAAA3O,EAAAoa,GACA,GAAAA,EACA,OAAAzL,EAAAkL,aAAA7Z,EAEA,GAAAkP,SAAAmL,gBAAAC,SACA,OAAAta,EAAAsa,SAAA3L,GAEA,KAAAA,GAAA,CACA,GAAA3O,IAAA2O,EACA,OAAA,EAGAA,EAAAA,EAAAkL,WAGA,OAAA,EAiCA,SAAAU,EAAAhB,GACA,OAAAA,EAIA,GAAAA,EAAA5jB,SACA4jB,EAGAA,EAAAiB,cAPAtL,SAsLA,SAAAuL,IACA,OAAAA,EA8EA,OA3EAvF,EAAApa,MAAA2f,GACAC,OAriBA,SAAAC,GAEA,IAAAC,EADAD,EAAAA,GAAAzL,SAKA,IACA0L,EAAAD,EAAAE,cACA,MAAArQ,GACAoQ,EAAAD,EAAAhK,KAMAiK,IACAA,EAAAD,EAAAhK,MAMAiK,EAAAtB,WACAsB,EAAAD,EAAAhK,MAGA,OAAAiK,GA6gBAE,KAAA,SAAAF,GACAA,EAAAE,QAGAnK,KAAA,WACA,OAAAzB,SAAAyB,MAGAjV,MAjZA,SAAAiT,EAAAtU,GACA,IACAqB,EADAuN,EAAAjO,KAIA,IAAA6c,GAAA,IAAAlJ,EAAAhZ,UAAA0E,EACA,OAAAsU,EAAA0K,UAAAhf,GAIA,IAAAA,EAQA,OAPAqB,EAAAwT,SAAA0H,cAAAjI,EAAA2K,UAGAtd,KAAAiN,EAAA8R,WAAApM,GAAA,SAAA2E,GACArK,EAAA+R,UAAAtf,EAAA4X,EAAAgG,SAAArQ,EAAAgS,UAAAtM,EAAA2E,EAAAgG,aAGA5d,GAgYAwf,SAldA,SAAA3B,GACA,GAAAD,EAAAC,EAAA,UACA,OAAAA,EAAA4B,gBAEA,OAAA5B,EAAA6B,YAgdAxE,cAAAA,EAEAyE,eAjbA,SAAAC,GAGA,GADAA,EAAApG,EAAAhJ,KAAAoP,GACAlD,EAAApf,KAAAsiB,GACA,OAAA1E,EAAA1O,OAAAqT,KAGA,IAAA7mB,EAAAyjB,EAAAnf,KAAAsiB,IAAApT,OAAAqT,GACA7mB,KAAA+jB,IACA/jB,EAAA,KAEA,IAAA8mB,EAAA/C,EAAA/jB,GAQA,OAPA8mB,EAAAvK,UAAA,GAAAqK,EACAG,IAAAxiB,EAAA3D,KAAAkmB,EAAAJ,YAEAK,IAAAtmB,QAAA,SAAAwZ,GACA6M,EAAAE,YAAA/M,KAGA8M,KAgaAnB,SA7XA,SAAA3L,EAAAgN,GACA,OAAAxB,EAAAwB,EAAAhN,IA8XAiN,eAtXA,SAAA9T,GACA,OAAAoH,SAAA0M,eAAA9T,IAuXA6S,IAjXA,WACA,OAAAzL,UAkXA2M,MA3WA,SAAAlN,GACA,KAAAA,EAAAmN,iBAAA,CACA,IAAAH,EAAAhN,EAAAoN,WACApN,EAAA+M,YAAAC,GAEA,OAAA3gB,MAwWAghB,WAnWA,SAAApB,GACA,IAAA,IAAAA,EACAlM,EAAAuN,eAAAlhB,MAAAmU,cACA,CAAA,IAAA0L,EAIA,OACA1L,SAAAgN,mBACAhN,SAAAiN,yBACAjN,SAAAkN,sBACAlN,SAAAmN,oBAPA3N,EAAAuI,kBAAAlc,MAAA6f,GACAA,IAgWA0B,UAnVA,SAAAC,EAAAC,GACA,IAAAnd,EAAAod,EAAAC,EAAAC,EAAAC,EACAtD,EAAAiD,EAAAjD,SAAAlkB,cAEA,GAAA,SAAAkkB,EAGA,OAFAja,EAAAkd,EAAA1C,WACA4C,EAAApd,EAAA3K,QACA6nB,EAAArlB,OAAAulB,GAAA,QAAApd,EAAAia,SAAAlkB,kBAGAsnB,EAAAG,EAAA,gBAAAJ,EAAA,OACAloB,OAAA,GAAAmoB,EAAAI,GAAA,aAGA,0CAAA9jB,KAAAsgB,IACAqD,GAAAJ,EAAAQ,YAQAH,EAAAC,EAAAN,GAAAS,QAAA,YAAA,MAEAL,GAAAC,EAAAG,UAIAJ,EADA,MAAArD,GACAiD,EAAArlB,MAEAslB,EAGA,OAAAG,GAAAE,EAAAN,GAAAO,GAAA,aAAAG,QAAAJ,EAAAN,KAmTAjB,KAxSA,SAAA3M,EAAA2M,GACA,QAAAxjB,IAAAwjB,EACA,OAAA3M,EAAAsC,UAOA,GALAjW,KAAA6gB,MAAAlN,GACA2M,EAAAA,GAAA,GACApG,EAAApf,SAAAwlB,KACAA,EAAAA,EAAAxiB,QAAAohB,EAAA,cAEAhF,EAAApf,SAAAwlB,IAAApG,EAAAtf,SAAA0lB,GACA3M,EAAAsC,UAAAqK,OACA,GAAApG,EAAA7e,YAAAilB,GACA,IAAA,IAAA7mB,EAAA,EAAAA,EAAA6mB,EAAA/mB,OAAAE,IACAka,EAAAmL,YAAAwB,EAAA7mB,SAGAka,EAAAmL,YAAAwB,GAGA,OAAAtgB,MAuRAmf,UAAAA,EAEA3jB,WAxPA,SAAAmY,GACA,OAAA,MAAAA,GAAAA,EAAAhZ,UAAAgZ,EAAAlY,eAyPAymB,aAlPA,SAAAvO,GACA,OAAAA,IAAAO,SAAAyB,MAAAzB,SAAAyB,KAAA2J,SAAA3L,IAmPA5Y,SAAAmf,EAAAnf,SAEAujB,SAAAA,EAEA6D,aAzLA,SAAA5D,GACA,IAAAvZ,EAAAuZ,EAAA4D,cAAAjO,SAAAyB,KACA,KAAA3Q,IAAAiZ,EAAAjgB,KAAAgH,EAAAsZ,WAAA,UAAApK,SAAAkO,YAAAC,iBAAArd,GAAAsd,UACAtd,EAAAA,EAAAmd,aAEA,OAAAnd,GAsLAua,SAAAA,EAEAgD,YA1NA,SAAAhE,GACA,IAAAoB,EAAAJ,EAAAhB,GACA,OAAAoB,EAAAyC,aAAAzC,EAAA6C,cA0NAhY,MAniBA,SAAAmJ,EAAA+K,EAAAN,GACAM,EAAAD,EAAAC,EAAA/K,GACA,IACA3O,GADAyd,EAAA9O,GACAkL,WACA,GAAA7Z,EAIA,IAHA,IAAAmZ,EAAAD,EAAAQ,EAAAN,GACAqE,EAAAA,EAAAC,YAEAjpB,EAAA,EAAAA,EAAA0kB,EAAA5kB,OAAAE,IACAgpB,EACAzd,EAAA2d,aAAAxE,EAAA1kB,GAAAgpB,GAEAzd,EAAA8Z,YAAAX,EAAA1kB,IAIA,OAAAuG,MAqhBAqK,OAxgBA,SAAAsJ,EAAA+K,EAAAN,GACAM,EAAAD,EAAAC,EAAA/K,GACA,IAAA8O,EAAA9O,EACA3O,EAAAyd,EAAA5D,WACA,GAAA7Z,EAEA,IADA,IAAAmZ,EAAAD,EAAAQ,EAAAN,GACA3kB,EAAA,EAAAA,EAAA0kB,EAAA5kB,OAAAE,IACAuL,EAAA2d,aAAAxE,EAAA1kB,GAAAgpB,GAGA,OAAAziB,MAggBA4iB,QArNA,SAAAjP,EAAA+K,EAAAN,GAIA,IAHA,IAAAS,EAAAlL,EACA8O,EAAA5D,EAAAkC,WACA5C,EAAAD,EAAAQ,EAAAN,GACA3kB,EAAA,EAAAA,EAAA0kB,EAAA5kB,OAAAE,IACAgpB,EACA5D,EAAA8D,aAAAxE,EAAA1kB,GAAAgpB,GAEA5D,EAAAC,YAAAX,EAAA1kB,IAGA,OAAAuG,MA4MA4e,OAAAA,EAEAiE,OAlJA,SAAAtE,GACA,MAAAqB,KACArB,EAAArK,UAIA,OAFAqK,EAAAuE,aAEA9iB,MA8IA0J,OA7LA,SAAAiK,GACA,GAAAA,GAAAA,EAAAkL,WACA,IACAlL,EAAAkL,WAAA6B,YAAA/M,GACA,MAAArG,GACAyV,QAAAC,KAAA,8BAAA1V,GAGA,OAAAtN,MAuLA0gB,YApLA,SAAA/M,EAAAsP,GACA/I,EAAA7e,YAAA4nB,KACAA,GAAAA,IAEA,IAAA,IAAAxpB,EAAA,EAAAA,EAAAwpB,EAAA1pB,OAAAE,IACAka,EAAA+M,YAAAuC,EAAAxpB,IAGA,OAAAuG,MA8KAlC,QA1IA,SAAA6V,EAAAuP,GAEA,OADAA,EAAArE,WAAAsE,aAAAxP,EAAAuP,GACAljB,MA0IAojB,SAjIA,SAAAA,EAAAzP,EAAAvP,GACAA,EAAAuP,GACA,IAAA,IAAAla,EAAA,EAAAyY,EAAAyB,EAAAyM,WAAA7mB,OAAAE,EAAAyY,EAAAzY,IACA2pB,EAAAzP,EAAAyM,WAAA3mB,GAAA2K,GAEA,OAAApE,MA8HAqX,QAvHA,SAAA1D,GAEA,IADA,IAAAoN,EAAApN,EAAAoN,WACAtnB,EAAAka,EAAAsP,SAAA1pB,OAAA,EAAAE,EAAA,EAAAA,IACA,GAAAA,EAAA,EAAA,CACA,IAAAknB,EAAAhN,EAAAsP,SAAAxpB,GACAka,EAAAgP,aAAAhC,EAAAI,KAoHAsC,QA1GA,SAAA1P,EAAA2P,GACApJ,EAAApf,SAAAwoB,KACAA,EAAAtjB,KAAAqgB,eAAAiD,GAAAvC,YAEApN,EAAAkL,WAAA8D,aAAAW,EAAA3P,GACA2P,EAAAxE,YAAAnL,IAuGA4P,aA/FA,SAAA5P,EAAA2P,GACA,IAAAlD,EAAAniB,EAAA3D,KAAAqZ,EAAAyM,YACAzM,EAAAmL,YAAAwE,GACA,IAAA,IAAA7pB,EAAA,EAAAA,EAAA2mB,EAAA7mB,OAAAE,IACA6pB,EAAAxE,YAAAsB,EAAA3mB,IAEA,OAAAuG,MA2FAwjB,OApFA,SAAA7P,GACA,IAAA3O,EAAA2O,EAAAkL,WACA,GAAA7Z,EAAA,CACA,GAAAhF,KAAAyjB,MAAAze,EAAA6Z,YAAA,OACA7Z,EAAA6Z,WAAA8D,aAAAhP,EAAA3O,OAmFApL,EAAAC,OAAA,aAAA4lB,KAEAvmB,OAAA,2BACA,WACA,SAAAumB,GACA,OAAAA,IAEAvmB,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,8BACA,wBACA,sBACA,uBACA,sBACA,SAAAU,EAAAsgB,EAAAxG,EAAA+L,GACA,IAAAiE,KACA7gB,EAAAzH,MAAAY,UAAA6G,OACA5E,EAAA7C,MAAAY,UAAAiC,MACA0lB,EAAAjQ,EAAAmI,iBAUA,WAEA,IAAAhK,EACA+R,EACAC,EACAC,EAyDAtM,EAxDApP,KACA2b,KACAC,EAAA,MAEA5S,EAAA,SAAA6S,EAAAC,GACA,GAAA,MAAAD,EAAA,OAAA,KACA,IAAA,IAAAA,EAAAE,MAAA,OAAAF,EACAA,GAAA,GAAAA,GAAAnmB,QAAA,aAAA,IAEA,IAAAsmB,GADAN,IAAAI,GACAH,EAAA3b,EACA,GAAAgc,EAAAH,GAAA,OAAAG,EAAAH,GAUA,IATApS,GACAsS,OAAA,EACAE,eACAC,IAAAL,EACA5M,QAAA,WACA,OAAAjG,EAAApR,KAAAskB,KAAA,KAGAV,GAAA,EACAK,IAAAA,EAAAA,EAAAnmB,QAAAymB,EAAAC,MAEA,OADA3S,EAAAtY,OAAAsY,EAAAwS,YAAA9qB,OACA6qB,EAAAvS,EAAAyS,KAAA,EAAAjN,EAAAxF,GAAAA,GAGA4S,EAAA,SAAAC,GACA,MAAA,MAAAA,EAAA,IACA,MAAAA,EAAA,IACA,KAAA1mB,KAAA0mB,GAAAA,EAAA5mB,QAAA,KAAA,IACA,IAAA4mB,GAGArN,EAAA,SAAA4M,GAEA,IADA,IAAAI,EAAAJ,EAAAI,YACA5qB,EAAA,EAAAA,EAAA4qB,EAAA9qB,OAAAE,IAAA,CAQA,IAPA,IAAAkrB,EAAAN,EAAA5qB,GACAmrB,GACAC,SACA9F,IAAA,IACA2F,WAAAD,EAAAE,EAAA,GAAAD,aAGArhB,EAAA,EAAAA,EAAAshB,EAAAprB,OAAA8J,IAAA,CACA,IAAAyhB,EAAAH,EAAAthB,GACAyhB,EAAAL,oBAAAK,EAAAL,kBAAA,KACAK,EAAAJ,WAAAI,EAAAL,yBACAK,EAAAL,kBAGAE,EAAAtN,UAAArY,KAAA4lB,GAEA,OAAAX,GAGAc,GAEAvN,EAAA,kCAEA,SAAA/B,GACA,OAAAA,EAAA3X,QAAA0Z,EAFA,QAMA+M,EAAA,IAAArX,OACA,0QACApP,QAAA,eAAA,IAAAinB,EAAA,sBAAA,KACAjnB,QAAA,aAAA,8CACAA,QAAA,cAAA,gDAGA,SAAA0mB,EACAQ,EAEAC,EACAP,EACAQ,EAEAC,EACAjc,EACA5I,EAEA8kB,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAAX,IAAA,IAAArB,KACA/R,EAAAwS,cAAAT,MACAC,GAAA,EACAoB,GAAA,MAAA,GAGA,GAAAP,GAAAQ,IAAA,IAAArB,EAAA,CACAa,EAAAA,GAAA,IACA,IAAAmB,EAAAhU,EAAAwS,YAAAT,GACAE,GAAA+B,EAAAhC,KACAgC,EAAAhC,GAAAY,kBAAAA,EAAAC,IACAmB,IAAAhC,IACAa,WAAAA,EACA3F,IAAA,KAIA,IAAA+G,EAAAjU,EAAAwS,YAAAT,GAAAC,GAEA,GAAAsB,EACAW,EAAA/G,IAAAoG,EAAArnB,QAAAkmB,EAAA,SAEA,GAAA9a,EACA4c,EAAA5c,GAAAA,EAAApL,QAAAkmB,EAAA,SAEA,GAAA1jB,EACAA,EAAAA,EAAAxC,QAAAkmB,EAAA,IAEA8B,EAAAC,YAAAD,EAAAC,cACAD,EAAAE,UAAAF,EAAAE,YACAF,EAAAC,UAAA/mB,KAAAsB,GACAwlB,EAAAE,QAAAhnB,MACAvE,MAAA6F,EACAikB,OAAA,IAAArX,OAAA,UAAA6X,EAAAzkB,GAAA,kBAGA,GAAAmlB,EAEAG,GADAA,EAAAA,GAAAD,GACAC,EAAA9nB,QAAAkmB,EAAA,IAAA,KAEA8B,EAAAG,UAAAH,EAAAG,YACAH,EAAAG,QAAAjnB,MACAD,IAAA0mB,EAAA3nB,QAAAkmB,EAAA,IACAvpB,MAAAmrB,EACA1rB,KAAA,GAAAsrB,EAAAjsB,OAAA,QAAA,iBAGA,GAAA6rB,EAAA,CAIA,IAAApnB,EAAAumB,EAEA,OALAa,EAAAA,EAAAtnB,QAAAkmB,EAAA,IACAuB,GAAAA,GAAA,IAAAznB,QAAAkmB,EAAA,IAIAqB,GACA,IAAA,KACAd,EAAA,IAAArX,OAAA,IAAA6X,EAAAQ,IACA,MACA,IAAA,KACAhB,EAAA,IAAArX,OAAA6X,EAAAQ,GAAA,KACA,MACA,IAAA,KACAhB,EAAA,IAAArX,OAAA,UAAA6X,EAAAQ,GAAA,WACA,MACA,IAAA,KACAhB,EAAA,IAAArX,OAAA,IAAA6X,EAAAQ,GAAA,SACA,MACA,IAAA,IACAvnB,EAAA,SAAAvD,GACA,OAAA8qB,GAAA9qB,GAEA,MACA,IAAA,KACAuD,EAAA,SAAAvD,GACA,OAAAA,GAAAA,EAAAkH,QAAA4jB,IAAA,GAEA,MACA,IAAA,KACAvnB,EAAA,SAAAvD,GACA,OAAA8qB,GAAA9qB,GAEA,MACA,QACAuD,EAAA,SAAAvD,GACA,QAAAA,GAIA,IAAA8qB,GAAA,WAAAvnB,KAAAqnB,KAAArnB,EAAA,WACA,OAAA,IAGAA,IAAAA,EAAA,SAAAvD,GACA,OAAAA,GAAA8pB,EAAAvmB,KAAAvD,KAGAqrB,EAAAhO,aAAAgO,EAAAhO,eACAgO,EAAAhO,WAAA9Y,MACAD,IAAAqmB,EACAc,SAAAb,EACA5qB,MAAA8qB,EACAvnB,KAAAA,IAKA,MAAA,GAKA,IAAAmmB,EAAAnkB,KAAAmkB,UAEAA,EAAA/S,MAAA,SAAA6S,GACA,OAAA7S,EAAA6S,IAGAE,EAAAY,aAAAA,EAEA/kB,KAAAmkB,QAAAnkB,KAAAmkB,MAAAA,KAEApkB,MAAA2jB,GAGA,IAEAyC,EAAA,sCACAC,EAAA,SACAnoB,EAAA7C,MAAAY,UAAAiC,MAGAylB,EAAA2C,cAAA3C,EAAAS,MAAA/S,MAGA,IAAA6U,EAAAvC,EAAAuC,SAEAK,OAAA,SAAAC,GACA,IAAA7sB,EAAA6sB,EAAAjI,SAAAlkB,cACA,MAAA,UAAAV,GAAA,WAAA6sB,EAAArsB,MAAA,WAAAR,GAGA8sB,QAAA,SAAAjI,GACA,QAAAA,EAAAiI,SAGAlH,SAAA,SAAAf,EAAAhc,EAAA4b,EAAArR,GACA,GAAA+U,EAAA7hB,MAAA8M,OAAAnL,QAAAmL,IAAA,EAAA,OAAA9M,MAGA+hB,SAAA,SAAAxD,GACA,QAAAA,EAAAwD,UAGA0E,QAAA,SAAAlI,GACA,OAAAA,EAAAwD,UAGAzjB,GAAA,SAAAigB,EAAAhc,EAAA4b,EAAA1jB,GACA,OAAA8H,GAAA9H,GAGAisB,KAAA,SAAAnI,EAAAhc,EAAA4b,EAAA1jB,GACA,OAAA8H,EAAA,GAAA,GAGAokB,MAAA,SAAApI,GACA,OAAArK,SAAA2L,gBAAAtB,IAAAA,EAAAriB,MAAAqiB,EAAArkB,MAAAqkB,EAAAqI,WAGAtF,UAAA,SAAA/C,GACA,OAAAkB,EAAA6B,UAAA/C,EAAA,MAAAA,EAAAqI,WAGArjB,MAAA,SAAAgb,EAAAhc,GACA,OAAA,IAAAA,GAGAskB,GAAA,SAAAtI,EAAAhc,EAAA4b,EAAA1jB,GACA,OAAA8H,EAAA9H,GAGAwE,IAAA,SAAAsf,EAAAhc,EAAA4b,EAAA2I,GACA,OAAAhkB,EAAAyb,EAAAuI,IAIAC,OAAA,SAAAR,GACA,OAAAH,EAAApoB,KAAAuoB,EAAAjI,WAGA0I,OAAA,SAAAzI,GACA,OAAAmF,EAAAuC,QAAA,QAAA1H,IAGA0I,MAAA,SAAAV,GACA,OAAAJ,EAAAnoB,KAAAuoB,EAAAjI,WAGAsG,KAAA,SAAArG,EAAAhc,EAAA4b,GACA,OAAA5b,IAAA4b,EAAA5kB,OAAA,GAGA2tB,GAAA,SAAA3I,EAAAhc,EAAA4b,EAAA1jB,GACA,OAAA8H,EAAA9H,GAGA0sB,IAAA,SAAA5I,EAAAhc,EAAA4b,EAAA2I,GACA,OAAA/d,EAAAwV,EAAAuI,IAGAM,IAAA,SAAA7I,EAAAhc,EAAA4b,EAAA1jB,GACA,OAAA8H,EAAA,GAAA,GAOAyC,OAAA,SAAAuZ,GACA,QAAAA,EAAAM,YAGAwI,SAAA,SAAA9I,GACA,QAAAA,EAAA8I,UAGAC,SAAA,SAAA/I,GACA,IAAAgJ,EAAAhJ,EAAAqI,SACApF,EAAA,MAAA+F,EACA,QAAA/F,GAAA+F,GAAA,IAAA9H,EAAA6B,UAAAC,QAAAC,IAGA1U,KAAA,SAAAyR,GACA,MAAA,SAAAA,EAAArkB,MAGA+nB,QAAA,SAAA1D,GACA,OAAAA,EAAAiJ,aAAAjJ,EAAAiJ,aAEA3G,MAAA,SAAAtC,GACA,OAAAA,EAAAuC,kBAYA,SAAA2G,EAAAvtB,GACA,OAAA,SAAAqsB,GACA,IAAA7sB,EAAA6sB,EAAAjI,SAAAlkB,cACA,MAAA,UAAAV,GAAA6sB,EAAArsB,OAAAA,GAIA,SAAAwtB,EAAAxtB,GACA,OAAA,SAAAqsB,GACA,IAAA7sB,EAAA6sB,EAAAjI,SAAAlkB,cACA,OAAA,UAAAV,GAAA,WAAAA,IAAA6sB,EAAArsB,OAAAA,GAKA,IAAAT,KAvBA,QAAA,KAAA,QAAAU,QAAA,SAAAmI,GACA2jB,EAAA3jB,GAAAqlB,eAAA,IAKA1B,EAAA,IAAAA,EAAA,IAkBA2B,OAAA,EACAC,UAAA,EACAC,MAAA,EACAC,UAAA,EACAC,OAAA,GAEA/B,EAAAxsB,GAAAguB,EAAAhuB,GAEA,IAAAA,KACAwuB,QAAA,EACAC,OAAA,GAEAjC,EAAAxsB,GAAAiuB,EAAAjuB,GAiWA,SAAA0uB,EAAAxU,EAAAjC,EAAA0W,GAGA,IAFA,IAAAvhB,KACAwhB,EAAAD,GAAAlO,EAAApf,SAAAstB,IACAzU,EAAAA,EAAAkL,aAAA,IAAAlL,EAAAhZ,UAAA,CACA,GAAAytB,EACA,GAAAC,GACA,GAAAtf,EAAA4K,EAAAyU,GACA,WAEA,GAAAlO,EAAA7e,YAAA+sB,IACA,GAAAlO,EAAAtW,QAAA+P,EAAAyU,IAAA,EACA,WAEA,GAAAzU,GAAAyU,EACA,MAGA1W,IAAA3I,EAAA4K,EAAAjC,IACA7K,EAAA7H,KAAA2U,GAOA,OAAA9M,EAkBA,SAAAoc,EAAAtP,EAAAjC,GAGA,IAFA,IAAA0O,EAAAzM,EAAAyM,WACAvZ,KACApN,EAAA,EAAAA,EAAA2mB,EAAA7mB,OAAAE,IAAA,CACA,IAAAka,EAAAyM,EAAA3mB,GACA,GAAAka,EAAAhZ,UACAkM,EAAA7H,KAAA2U,GAMA,OAHAjC,IACA7K,EAAA6c,EAAA7gB,OAAAgE,EAAA6K,IAEA7K,EAgBA,SAAAyhB,EAAA/J,EAAA7M,GAEA,IACA,OAAAzT,EAAA3D,KAAAikB,EAAAgK,iBAAA7W,IACA,MAAA8W,IAGA,OAAA9E,EAAA3b,MAAAwW,EAAA7M,GAQA,SAAA+W,EAAAlK,EAAA7M,GAEA,IACA,OAAA6M,EAAAmK,cAAAhX,GACA,MAAA8W,IAGA,IAAArK,EAAAuF,EAAA3b,MAAAwW,EAAA7M,GACA,OAAAyM,EAAA5kB,OAAA,EACA4kB,EAAA,GAEA,KASA,SAAArb,EAAAyb,EAAA7M,GAKA,OAJAA,IACAA,EAAA6M,EACAA,EAAArK,SAAAyB,MAEA5M,EAAAwV,EAAA7M,GACA6M,EAEAkK,EAAAlK,EAAA7M,GAuBA,SAAAqP,EAAAxC,EAAA7M,EAAAnO,GAGA,IAFA,IAAA6c,EAAA7B,EAAA6B,WACAzM,EAAAyM,EAAA,GACAzM,GAAA,CACA,GAAA,GAAAA,EAAAhZ,SAAA,CACA,IAAA+W,GAAA3I,EAAA4K,EAAAjC,GACA,OAAAiC,EAEA,GAAApQ,EACA,MAGAoQ,EAAAA,EAAA+O,YAGA,OAAA,KASA,SAAAiG,EAAApK,EAAA7M,EAAAkT,GAGA,IAFA,IAAAxE,EAAA7B,EAAA6B,WACAzM,EAAAyM,EAAAA,EAAA7mB,OAAA,GACAoa,GAAA,CACA,GAAA,GAAAA,EAAAhZ,SAAA,CACA,IAAA+W,GAAA3I,EAAA4K,EAAAjC,GACA,OAAAiC,EAEA,GAAAiR,EACA,MAGAjR,EAAAA,EAAAiV,gBAGA,OAAA,KAQA,SAAA7f,EAAAwV,EAAA7M,GACA,IAAAA,IAAA6M,GAAA,IAAAA,EAAA5jB,SACA,OAAA,EAGA,GAAAuf,EAAApf,SAAA4W,GAAA,CACA,IACA,OAAAiS,EAAArpB,KAAAikB,EAAA7M,EAAA5T,QAAA,iCAAA,cACA,MAAA0qB,IAGA,OAAA9E,EAAAtW,MAAAmR,EAAA7M,GACA,OAAAwI,EAAA7e,YAAAqW,GACAwI,EAAAtW,QAAA2a,EAAA7M,IAAA,EACAwI,EAAAre,cAAA6V,GACAgS,EAAAmF,MAAAtK,EAAA7M,GAEA6M,IAAA7M,EAWA,SAAAgR,EAAAnE,EAAA7M,EAAAoX,GAEA,IADA,IAAAnV,EAAA4K,EAAAmE,YACA/O,GAAA,CACA,GAAA,GAAAA,EAAAhZ,SAAA,CACA,IAAA+W,GAAA3I,EAAA4K,EAAAjC,GACA,OAAAiC,EAEA,GAAAmV,EACA,MAGAnV,EAAAA,EAAA+O,YAEA,OAAA,KAQA,SAAAqG,EAAAxK,EAAA7M,GAGA,IAFA,IAAAiC,EAAA4K,EAAAmE,YACA7b,KACA8M,GACA,GAAAA,EAAAhZ,WACA+W,IAAA3I,EAAA4K,EAAAjC,IACA7K,EAAA7H,KAAA2U,IAGAA,EAAAA,EAAA+O,YAEA,OAAA7b,EAQA,SAAA7B,EAAAuZ,EAAA7M,GACA,IAAAiC,EAAA4K,EAAAM,WACA,OAAAlL,GAAAjC,IAAA3I,EAAA4K,EAAAjC,GAIA,KAHAiC,EAYA,SAAAiV,EAAArK,EAAA7M,EAAAoX,GAEA,IADA,IAAAnV,EAAA4K,EAAAqK,gBACAjV,GAAA,CACA,GAAA,GAAAA,EAAAhZ,SAAA,CACA,IAAA+W,GAAA3I,EAAA4K,EAAAjC,GACA,OAAAiC,EAEA,GAAAmV,EACA,MAGAnV,EAAAA,EAAAiV,gBAEA,OAAA,KAQA,SAAAI,EAAAzK,EAAA7M,GAGA,IAFA,IAAAiC,EAAA4K,EAAAqK,gBACA/hB,KACA8M,GACA,GAAAA,EAAAhZ,WACA+W,IAAA3I,EAAA4K,EAAAjC,IACA7K,EAAA7H,KAAA2U,IAGAA,EAAAA,EAAAiV,gBAEA,OAAA/hB,EAQA,SAAAoiB,EAAA1K,EAAA7M,GAGA,IAFA,IAAAiC,EAAA4K,EAAAM,WAAAkC,WACAla,KACA8M,GACA,GAAAA,EAAAhZ,UAAAgZ,IAAA4K,IACA7M,IAAA3I,EAAA4K,EAAAjC,IACA7K,EAAA7H,KAAA2U,IAGAA,EAAAA,EAAA+O,YAEA,OAAA7b,EA3pBA6c,EAAAwF,OAAA,SAAAC,GACA,IAEApK,EACA7V,EACA8c,EACAlO,EACAmO,EANAmD,EAAA,GACAC,KAWA,IAHAngB,EAAAigB,EAAAjgB,MACAkgB,GAAA,IAAAlgB,GAEA8c,EAAAmD,EAAAnD,QACA,IAAA,IAAAvsB,EAAAusB,EAAAzsB,OAAAE,KACA2vB,GAAA,IAAApD,EAAAvsB,GAAAgB,MAGA,GAAAqd,EAAAqR,EAAArR,WACA,IAAA,IAAAre,EAAA,EAAAA,EAAAqe,EAAAve,OAAAE,IACAqe,EAAAre,GAAAysB,SACAkD,GAAA,IAAAtR,EAAAre,GAAAsF,IAAA+Y,EAAAre,GAAAysB,SAAA5P,KAAAQ,UAAAgB,EAAAre,GAAAgB,OAAA,IAEA2uB,GAAA,IAAAtR,EAAAre,GAAAsF,IAAA,IAIA,GAAAknB,EAAAkD,EAAAlD,QACA,IAAAxsB,EAAAwsB,EAAA1sB,OAAAE,KACA6vB,KAAArD,EAAAxsB,GACAuG,KAAAimB,QAAAqD,KAAAvqB,KACAsqB,EAAArqB,KAAAsqB,WAEAxsB,IAAAwsB,KAAA7uB,QACA2uB,GAAA,IAAAE,KAAAvqB,IAAA,IAAAuX,KAAAQ,UAAAwS,OAgBA,OAVAvK,EAAAoK,EAAApK,MACA,MAAAA,IACAqK,EAAArK,EAAA5I,cAAAiT,GAIAA,IACAA,EAAA,MAIAA,eAAAA,EACAC,cAAAA,IAKA3F,EAAAmF,MAAA,SAAAlV,EAAAwV,EAAA5mB,EAAA4b,EAAAoL,GACA,IAAAxK,EACA7V,EACA8c,EACAlO,EACAmO,EAEAxsB,EAAA6vB,EAAA7jB,EAAA+jB,EAEA,IAAAD,EAAA,CACA,GAAAxK,EAAAoK,EAAApK,IAAA,CACA,IAAAT,EAAA3K,EAAA2K,SAAAnI,cACA,GAAA,KAAA4I,GACA,GAAAT,EAAA,IAAA,OAAA,OAEA,GAAAA,IAAAS,GAAA,IAAA5I,cAAA,OAAA,EAIA,IAAAjN,EAAAigB,EAAAjgB,KACAyK,EAAA8V,aAAA,OAAAvgB,EACA,OAAA,EAKA,GAAA8c,EAAAmD,EAAAnD,QACA,IAAAvsB,EAAAusB,EAAAzsB,OAAAE,KAEA,KADAgM,EAAAkO,EAAA8V,aAAA,YACAzD,EAAAvsB,GAAA8qB,OAAAvmB,KAAAyH,GAAA,OAAA,EAIA,GAAAqS,EAAAqR,EAAArR,WACA,IAAAre,EAAAqe,EAAAve,OAAAE,KAEA,IADA6vB,EAAAxR,EAAAre,IACAysB,UAAAoD,EAAAtrB,KAAA2V,EAAA8V,aAAAH,EAAAvqB,OAAA4U,EAAA+V,aAAAJ,EAAAvqB,KAAA,OAAA,EAKA,GAAAknB,EAAAkD,EAAAlD,QACA,IAAAxsB,EAAAwsB,EAAA1sB,OAAAE,KAEA,GADA6vB,EAAArD,EAAAxsB,GACA+vB,EAAAxpB,KAAAimB,QAAAqD,EAAAvqB,MACA,IAAAwqB,GAAAC,EAAA7B,gBAAA4B,IAAAC,EAAA7B,iBACA6B,EAAA7V,EAAApR,EAAA4b,EAAAmL,EAAA7uB,OACA,OAAA,OAIA,IAAA8uB,IAAA5F,EAAArpB,KAAAqZ,EAAA2V,EAAAvqB,KACA,OAAA,EAKA,OAAA,GAGA2kB,EAAAtW,MAAA,SAAAuG,EAAAjC,GAEA,IAAAG,EAQA,KALAA,EADAqI,EAAApf,SAAA4W,GACAgS,EAAAS,MAAA/S,MAAAM,GAEAA,GAIA,OAAA,EAIA,IAEAjY,EACAkwB,EAHAtF,EAAAxS,EAAAwS,YACAuF,EAAA,EAGA,IAAAnwB,EAAA,EACAkwB,EAAAtF,EAAA5qB,GAAAA,IACA,GAAA,GAAAkwB,EAAApwB,OAAA,CACA,IAAAorB,EAAAgF,EAAA,GACA,GAAA3pB,KAAA6oB,MAAAlV,EAAAgR,GACA,OAAA,EAEAiF,IAIA,GAAAA,GAAA/X,EAAAtY,OACA,OAAA,EAGA,IACA+I,EADA6b,EAAAne,KAAA+H,MAAAmM,SAAArC,GAEA,IAAApY,EAAA,EAAA6I,EAAA6b,EAAA1kB,MACA,GAAA6I,IAAAqR,EACA,OAAA,EAGA,OAAA,GAIA+P,EAAAmG,aAAA,SAAA1L,EAAAwG,GACA,IAAAmF,EAAAjnB,EAAAvI,KAAA6jB,EAAA,SAAAxK,EAAApR,GACA,OAAAmhB,EAAAmF,MAAAlV,EAAAgR,EAAApiB,EAAA4b,GAAA,KAMA,OAHA2L,EAAAjnB,EAAAvI,KAAAwvB,EAAA,SAAAnW,EAAApR,GACA,OAAAmhB,EAAAmF,MAAAlV,EAAAgR,EAAApiB,EAAAunB,GAAA,MAKApG,EAAA7gB,OAAA,SAAAsb,EAAAzM,GAGA,IAAAwI,EAAApf,SAAA4W,GAGA,OAAAgS,EAAAmG,aAAA1L,EAAAzM,GAIA,IACAjY,EACAkwB,EAFAtF,EANAX,EAAAS,MAAA/S,MAAAM,GAMA2S,YAGAxd,KACA,IAAApN,EAAA,EACAkwB,EAAAtF,EAAA5qB,GAAAA,IAAA,CACA,GAAA,GAAAkwB,EAAApwB,OAOA,MAAA,IAAA8L,MAAA,0BAAAqM,GANA,IAAAiT,EAAAgF,EAAA,GAEAG,EAAApG,EAAAmG,aAAA1L,EAAAwG,GAEA9d,EAAAqT,EAAAzV,KAAAoC,EAAA7C,OAAA8lB,IAMA,OAAAjjB,GAIA6c,EAAAqG,QAAA,SAAAxL,EAAAyL,GACA,IAEAC,EAFAC,EAAAF,EAAAtF,WACAyE,EAAAa,EAEA7L,KAEA,OAAA+L,GACA,IAAA,IACA/L,EAAA8E,EAAA1E,EAAA4K,GACA,MACA,IAAA,KACAc,EAAAvH,EAAAnE,EAAA4K,GAAA,KAEAhL,EAAAnf,KAAAirB,GAEA,MACA,IAAA,KACAA,EAAAlJ,EAAAxC,EAAA4K,GAAA,KAEAhL,EAAAnf,KAAAirB,GAEA,MACA,IAAA,IACA9L,EAAA4K,EAAAxK,EAAA4K,GACA,MACA,IAAA,KACA,IAAAnQ,EAAA4P,EAAArK,EAAA4K,GAAA,GACA7e,EAAAoY,EAAAnE,EAAA4K,GAAA,GACAnQ,GACAmF,EAAAnf,KAAAga,GAEA1O,GACA6T,EAAAnf,KAAAsL,GAEA,MACA,IAAA,KACA6T,EAAA8K,EAAA1K,EAAA4K,GACA,MACA,IAAA,IACAhL,EAAAgK,EAAA5J,EAAA4K,GACA,MACA,IAAA,MACAc,EAAAjlB,EAAAuZ,EAAA4K,KAEAhL,EAAAnf,KAAAirB,GAEA,MACA,IAAA,KACA9L,EAAAyK,EAAArK,EAAA4K,GAAA,GACA,MACA,IAAA,MACAc,EAAAtB,EAAApK,EAAA4K,GAAA,KAEAhL,EAAAnf,KAAAirB,GAEA,MACA,IAAA,KACA9L,EAAA6K,EAAAzK,EAAA4K,GACA,MACA,QACA,IAAAgB,EAAAnqB,KAAAkpB,OAAAc,GAEA,GADA7L,EAAAlgB,EAAA3D,KAAAikB,EAAAgK,iBAAA4B,EAAAf,iBACAe,EAAAd,cACA,IAAA,IAAA5vB,EAAA0wB,EAAAd,cAAA9vB,OAAA,EAAAE,GAAA,EAAAA,IACA0kB,EAAAtb,EAAAvI,KAAA6jB,EAAA,SAAA7b,EAAAC,GACA,OAAAmhB,EAAAmF,MAAAvmB,GACA2jB,SAAAkE,EAAAd,cAAA5vB,KACA8I,EAAA4b,GAAA,KAGAA,EAAAtb,EAAAvI,KAAA6jB,EAAA,SAAA7b,EAAAC,GACA,OAAAmhB,EAAAmF,MAAAvmB,GACA2jB,SAAAkE,EAAAd,cAAA5vB,KACA8I,EAAA4b,GAAA,KAOA,OAAAA,GAGAuF,EAAA3b,MAAA,SAAA4L,EAAAjC,EAAA0Y,GAUA,IAPA,IAIAT,EAAAU,EAJAxY,EAAA7R,KAAAmkB,MAAA/S,MAAAM,GAGA4Y,KAEAjG,EAAAxS,EAAAwS,YAEA5qB,EAAA,EACAkwB,EAAAtF,EAAA5qB,GAAAA,IAAA,CAGA,IAFA,IACA8wB,EADAC,GAAA7W,GAEAtQ,EAAA,EACAgnB,EAAAV,EAAAtmB,GAAAA,KACAknB,EAAArQ,EAAA7V,IAAAmmB,EAAA,SAAAloB,EAAA7I,GACA,OAAAiqB,EAAAqG,QAAAznB,EAAA+nB,QAGAG,EAAAD,GAGAA,IACAD,EAAAA,EAAAtmB,OAAAumB,IAIA,OAAAD,GAmWA,IAAAG,EAAA,WACA,OAAAA,GA4CA,OAzCAvQ,EAAApa,MAAA2qB,GAEAC,SAhWA,SAAA/W,EAAAjC,EAAA0W,GACA,IAAAC,EAAAD,GAAAlO,EAAApf,SAAAstB,GACA,KAAAzU,EAAAA,EAAAkL,YAAA,CACA,GAAA9V,EAAA4K,EAAAjC,GACA,OAAAiC,EAEA,GAAAyU,EACA,GAAAC,GACA,GAAAtf,EAAA4K,EAAAyU,GACA,WAEA,GAAAzU,GAAAyU,EACA,MAIA,OAAA,MAkVAD,UAAAA,EAEAwC,KA1SA,SAAAzhB,EAAAyW,GAEA,OADAA,EAAAA,GAAAF,EAAAE,OACA3J,eAAA9M,IA0SA+Z,SAAAA,EAEAjB,QArRA,SAAArO,EAAAjC,GACA,KAAAiC,IAAA5K,EAAA4K,EAAAjC,IACAiC,EAAAA,EAAAkL,WAGA,OAAAlL,GAkRA8U,WAAAA,EAEAH,YAAAA,EAEAxlB,KAAAA,EAEA8nB,QA5NA,SAAArM,EAAA7M,GACAA,IACAA,EAAA6M,EACAA,EAAArK,SAAAyB,MAEA,OAAA2S,EAAA/J,EAAA7M,IAyNAqP,WAAAA,EAEA4H,UAAAA,EAEA5f,QAAAA,EAEA2Z,YAAAA,EAEAqG,aAAAA,EAEA/jB,OAAAA,EAEA4jB,gBAAAA,EAEAI,iBAAAA,EAEA/C,QAAAvC,EAAAuC,QAEAgD,SAAAA,IAGArvB,EAAAC,OAAA,cAAA4wB,KAEAvxB,OAAA,4BACA,YACA,SAAAuxB,GAEA,OAAAA,IAEAvxB,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,wBACA,sBACA,sBACA,sBACA,SAAAU,EAAAsgB,EAAAuQ,EAAAhL,GACA,IAAApb,EAAAjJ,MAAAY,UAAAqI,IAEA6R,GADA9a,MAAAY,UAAA6G,OACAqX,EAAAhE,WACAG,EAAA6D,EAAA7D,iBAEAwU,EAAA,WACAC,GACAlE,SAAA,WACAmE,SAAA,WACAC,IAAA,UACAC,MAAA,YACAC,UAAA,YACAC,YAAA,cACAC,YAAA,cACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,YAAA,cACAC,gBAAA,mBAUA,IAAAC,GACAC,QACA1iB,IAAA,SAAAsd,GACA,IAAAhO,EAAAgO,EAAAkD,aAAA,SACA,OAAA,MAAAlR,EAAAA,GAAAzL,EAAAyZ,GATAnZ,MAAA,0BACAD,KAAA,OAWAye,QACA3iB,IAAA,SAAAsd,GACA,IAAA9rB,EAAAkxB,EAAAlyB,EACAyL,EAAAqhB,EAAArhB,QACApE,EAAAylB,EAAAsF,cACAla,EAAA,eAAA4U,EAAArsB,KACA+F,EAAA0R,EAAA,QACAma,EAAAna,EAAA7Q,EAAA,EAAAoE,EAAA3L,OAUA,IAPAE,EADAqH,EAAA,EACAgrB,EAGAna,EAAA7Q,EAAA,EAIArH,EAAAqyB,EAAAryB,IAGA,IAFAkyB,EAAAzmB,EAAAzL,IAEA4tB,WAGAsE,EAAA5J,YACA4J,EAAA9M,WAAAkD,WACAtC,EAAAnB,SAAAqN,EAAA9M,WAAA,aAAA,CAMA,GAHApkB,EAAA8d,EAAAoT,GAGAha,EACA,OAAAlX,EAIAwF,EAAAjB,KAAAvE,GAIA,OAAAwF,GAGAgY,IAAA,SAAAsO,EAAA9rB,GAMA,IALA,IAAAsxB,EAAAJ,EACAzmB,EAAAqhB,EAAArhB,QACAjF,EAAAia,EAAArW,UAAApJ,GACAhB,EAAAyL,EAAA3L,OAEAE,OACAkyB,EAAAzmB,EAAAzL,IAIA4tB,SACAnN,EAAAtW,QAAA8nB,EAAAC,OAAA1iB,IAAA0iB,GAAA1rB,IAAA,KAEA8rB,GAAA,GAUA,OAHAA,IACAxF,EAAAsF,eAAA,GAEA5rB,KA6CA,SAAAqY,EAAAiG,EAAA7kB,EAAAe,GACA,QAAAqC,IAAArC,EAAA,CACA,GAAA,iBAAAf,EAAA,CACA,IAAA,IAAAsyB,KAAAtyB,EACA4e,EAAAiG,EAAAyN,EAAAtyB,EAAAsyB,IAEA,OAAAhsB,KAEA,OAAAue,EAAAkL,aAAA/vB,GAIA,OADA6kB,EAAAU,aAAAvlB,EAAAe,GACAuF,KAoBA,SAAAisB,EAAA1N,EAAA2N,GACA,IAAAC,EAAA5N,EAAA,SAIA,OAHA4N,GAAAD,IACAC,EAAA5N,EAAA,SAbA,SAAAA,GACA,IAAA4N,KAMA,OALAjS,EAAAlZ,KAAAud,EAAAzG,eAAA,SAAAre,EAAA6e,GACA,GAAAA,EAAA5e,KAAAiI,QAAA,WACAwqB,EAAAjW,EAAAoC,EAAA5e,KAAAoE,QAAA,QAAA,MAAAuY,EAAAiC,EAAA7d,UAGA0xB,EAMAC,CAAA7N,IAEA4N,EAuBA,SAAAE,EAAA9N,EAAA7kB,EAAAe,GACA,IAAA0xB,EAAAF,EAAA1N,GAAA,GACA4N,EAAAjW,EAAAxc,IAAAe,EAUA,SAAA0O,EAAAoV,EAAA7kB,EAAAe,GAEA,QAAAqC,IAAArC,EAAA,CACA,GAAA,iBAAAf,EAAA,CACA,IAAA,IAAA4yB,KAAA5yB,EACA2yB,EAAA9N,EAAA+N,EAAA5yB,EAAA4yB,IAEA,OAAAtsB,KAEA,OAzCA,SAAAue,EAAA7kB,GACA,QAAAoD,IAAApD,EACA,OAAAuyB,EAAA1N,GAAA,GAEA,IAAA4N,EAAAF,EAAA1N,GACA,GAAA4N,EAAA,CACA,GAAAzyB,KAAAyyB,EACA,OAAAA,EAAAzyB,GAEA,IAAA6yB,EAAArW,EAAAxc,GACA,GAAA6yB,KAAAJ,EACA,OAAAA,EAAAI,GAGA,IAAAP,EAAA,QAAAtyB,EAAAoE,QAAA+sB,EAAA,OAAAzwB,cACA,OAAAke,EAAAiG,EAAAyN,GA0BAQ,CAAAjO,EAAA7kB,GAIA,OADA2yB,EAAA9N,EAAA7kB,EAAAe,GACAuF,KAQA,SAAAysB,EAAAlO,GACAA,EAAA,iBACAA,EAAA,SAiFA,SAAAzR,EAAAyR,EAAAmO,GACA,YAAA5vB,IAAA4vB,EACAnO,EAAAoO,aAEApO,EAAAoO,YAAA,MAAAD,EAAA,GAAA,GAAAA,EACA1sB,MASA,SAAAuY,EAAAgG,EAAA9jB,GACA,IAAAmyB,EAAAlB,EAAAnN,EAAArkB,OAAAwxB,EAAAnN,EAAAD,SAAAlkB,eACA,QAAA0C,IAAArC,EAgBA,OAAAmyB,GAAA,QAAAA,QAAA9vB,KAAA+J,IAAA+lB,EAAA3jB,IAAAsV,EAAA,UACA1X,KAGAA,IAAA0X,EAAA9jB,MAGA,iBAAAoM,IACAA,IAAA/I,QAAA,MAAA,IAIA,MAAA+I,IAAA,GAAAA,KAYA,MAAApM,EACAA,EAAA,GAEA,iBAAAA,EACAA,GAAA,GAEAyf,EAAAjf,QAAAR,KACAA,EAAAyf,EAAA7V,IAAA5J,EAAA,SAAAoyB,GACA,OAAA,MAAAA,EAAA,GAAAA,EAAA,MAKAD,GAAA,QAAAA,QAAA9vB,IAAA8vB,EAAA3U,IAAAsG,EAAA9jB,EAAA,WACA8jB,EAAA9jB,MAAAA,GAWA,SAAAqyB,IACA,OAAAA,EA6BA,OArUA5S,EAAAlZ,MAAA,QAAA,YAAA,WACA0qB,EAAA1rB,OACAiY,IAAA,SAAAsO,EAAA9rB,GACA,GAAAyf,EAAAjf,QAAAR,GACA,OAAA8rB,EAAAC,QAAAtM,EAAAtW,QAAA2U,EAAAgO,GAAA9rB,IAAA,MA8RAgwB,EAAAxE,QAAA9c,KAAA,SAAAod,EAAA9sB,EAAA2T,EAAA2f,GACA,QAAA5jB,EAAAod,EAAAwG,GAAA3f,EAAA,KAQA8M,EAAApa,MAAAgtB,GACAE,KAjRA,SAAAzO,EAAA7kB,EAAAe,GACA,OAAAuF,KAAAsY,KAAAiG,EAAA,QAAA7kB,EAAAe,IAkRA6d,KAAAA,EAEAmU,UAAAA,EAEAtjB,KAAAA,EAEA8jB,MAlJA,SAAA9O,EAAA+O,GACA,OAAA7oB,EAAA/J,KAAA6jB,EAAA,SAAAI,GACA,OAAAA,EAAA2O,MAkJAxqB,KAxIA,SAAA6b,EAAA7kB,EAAAe,GAEA,OADAf,EAAAoxB,EAAApxB,IAAAA,OACAoD,IAAArC,EACA8jB,EAAA7kB,IAEA6kB,EAAA7kB,GAAAe,EACAuF,OAoIAmtB,WA3HA,SAAA5O,EAAA7kB,GAIA,OAHAA,EAAAJ,MAAA,KAAAa,QAAA,SAAAme,IA3KA,SAAAiG,EAAA7kB,EAAAe,GACA,MAAAA,EACA8jB,EAAA6O,gBAAA1zB,GAEA6kB,EAAAU,aAAAvlB,EAAAe,GAwKAwkB,CAAAV,EAAAjG,KAEAtY,MAyHAqtB,WA5KA,SAAA9O,EAAA+O,GACA,GAAAA,EAAA,CACApT,EAAApf,SAAAwyB,KACAA,EAAAA,EAAAh0B,MAAA,QAEA,IAAA6yB,EAAAF,EAAA1N,GAAA,GACA+O,EAAAnzB,QAAA,SAAAT,UACAyyB,EAAAzyB,UAGA+yB,EAAAlO,GAEA,OAAAve,MAkKAutB,WAlHA,SAAAhP,EAAA7kB,GAIA,OAHAA,EAAAJ,MAAA,KAAAa,QAAA,SAAAuI,UACA6b,EAAA7b,KAEA1C,MAgHA8M,KAAAA,EAEAyL,IAAAA,EAEAmT,SAAAA,IAGA9xB,EAAAC,OAAA,YAAAizB,KAEA5zB,OAAA,4BACA,wBACA,sBACA,qBACA,uBACA,SAAAU,EAAAsgB,EAAAuF,EAAAgL,GACA,IAUA+C,EAVAC,EAAAryB,MAAAY,UAAAyxB,KACAzuB,EAAA5D,MAAAY,UAAAgD,KAGAf,GAFA7C,MAAAY,UAAA0xB,MACAtyB,MAAAY,UAAAgI,OACA5I,MAAAY,UAAAiC,OAEA4E,GADAzH,MAAAY,UAAAqI,IACAjJ,MAAAY,UAAA6G,QACA1I,EAAAiB,MAAAY,UAAA7B,QACAwH,EAAAvG,MAAAY,UAAA2F,QACA4G,EAAAnN,MAAAY,UAAAuM,KAGAolB,EAAA,2CAEAxT,EAAAD,EAAAC,QACA9e,EAAA6e,EAAA7e,YACAP,EAAAof,EAAApf,SACA2J,EAAAyV,EAAAzV,KACAjK,EAAA0f,EAAA1f,WAEAN,EAAAggB,EAAAhgB,KAOAW,GANAqf,EAAAjf,QAEAif,EAAAnf,SAEAmf,EAAA1e,WAEA0e,EAAArf,UAEAqf,EAAAre,cAEAqe,EAAA5W,QAEA4W,EAAA9W,QAEA8W,EAAAhE,UAEAgE,EAAA9D,UACAqU,EAAAxH,SAEA,SAAA2K,EAAAnqB,EAAAsH,EAAA8iB,GACA,OAAA,SAAAvN,GACA,IAAAwN,EAAA3P,EAAAjE,EAAA7V,IAAA3E,UAAA,SAAA0B,GAEA,MAAA,aADA0sB,EAAA5zB,EAAAkH,KACA,UAAA0sB,GAAA,SAAAA,GAAA,MAAA1sB,EACAA,EAAAqe,EAAAY,eAAAjf,KAEA,OAAA+c,EAAA5kB,OAAA,EACAyG,MAEAA,KAAAgB,KAAA,SAAAuB,GACAkB,EAAA1D,MAAAgL,GAAA/K,KAAAme,EAAA5b,EAAA,MAEAvC,OAIA,SAAA+tB,EAAAtqB,EAAAsH,GACA,OAAA,WACA,IACAtL,EAAAxB,EAAA3D,KAAAoF,WACAvB,EAAA+b,EAAA7V,IAFArE,KAEA,SAAAumB,EAAAhkB,GACA,OAAAkB,EAAA1D,MAAAgL,GAAAwb,GAAAviB,OAAAvE,MAEA,OAAAsI,EAAAtD,EAAAtG,KAIA,SAAA6vB,EAAAvqB,EAAAsH,EAAA6Z,GACA,OAAA,SAAAlT,GAEAzT,EAAA3D,KAAAoF,WADA,IAEAvB,EAAA6B,KAAAqE,IAAA,SAAA9B,EAAAgkB,GAGA,OAAA9iB,EAAA1D,MAAAgL,EAAA6Z,GAAA2B,IAAAA,EAAA7U,MAGA,OAAAkT,GAAAlT,EACAvT,EAAA0E,OAAA6O,GAEAvT,GAKA,SAAA8vB,EAAAxqB,EAAAsH,EAAA6Z,GACA,OAAA,SAAAsJ,EAAAxc,GAEAzT,EAAA3D,KAAAoF,WADA,IAMAvB,EAAA6B,KAAAqE,IAAA,SAAA9B,EAAAgkB,GAGA,OAAA9iB,EAAA1D,MAAAgL,EAAA6Z,GAAA2B,EAAA2H,IAAA3H,EAAA7U,EAAAwc,MAGA,OAAAtJ,GAAAlT,EACAvT,EAAA0E,OAAA6O,GAEAvT,GAMA,SAAAgwB,EAAA1qB,EAAAsH,GACA,OAAA,WACA,IACAtL,EAAAxB,EAAA3D,KAAAoF,WAIA,OAHAM,KAAAgB,KAAA,SAAAuB,EAAAoR,GACAlQ,EAAA1D,MAAAgL,GAAA/K,MAAAgE,OAAAvE,MAHAO,MAuDA,SAAAouB,EAAA3qB,EAAAsH,EAAA8iB,GACA,OAAA,SAAApzB,GAGA,OAAAyf,EAAA3e,UAAAd,IACAN,EAAAG,KAHA0F,KAGA,SAAAumB,EAAAhkB,GACA,IAAA8rB,EAEAA,EADAR,EACA1T,EAAAoM,EAAA9rB,EAAA8H,EAAAsrB,EAAAtH,IAEA9rB,EAEAgJ,EAAA1D,MAAAgL,GAAAwb,EAAA8H,MAVAruB,MAAAA,KAcA,GACAyD,EAAA1D,MAAAgL,GAfA/K,KAeA,UADA,GAQA,IAkfA6hB,EAlfAyM,EAAApU,EAAAhT,OACAf,UAAA,aACArB,KAAA,SAAA4M,EAAA3G,GACA,IACAqC,EAAA+Q,EAAAxK,EAAA5O,EAsDA,GApDA2M,IAHA1R,KAIA+K,QAAAA,EAAAA,GAAA0U,EAAAE,MAEA7kB,EAAA4W,IANA1R,KAQA0R,SAAAA,GAGAtE,EADA,MAAAsE,EAAAiF,OAAA,IAAA,MAAAjF,EAAAiF,OAAAjF,EAAAnY,OAAA,IAAAmY,EAAAnY,QAAA,GACA,KAAAmY,EAAA,MAEAic,EAAAtZ,KAAA3C,IAIAtE,EAAA,IAEA+Q,EAAAsB,EAAAY,eAAA3O,GAEAwI,EAAAre,cAAAkP,KACAhG,EAAAgG,KAIA4I,EAAA8W,EAAAE,KAAAvd,EAAA,GAAAqS,EAAAF,SAAAxU,OAIAoT,GAAAxK,KAMAuG,EAAApf,SAAAiQ,KACAA,EAAA0f,EAAA3nB,KAAAiI,IAGAoT,EAAAsM,EAAAnC,YAAAvd,EAAA2G,KAKAyM,EAFAzM,IAAA1W,QAAAK,EAAAqW,GAEAA,GAGAA,IAOAyM,IAEAnf,EAAAe,MAzDAC,KAyDAme,GAEApZ,GACA,IAAA,IAAArL,KAAAqL,EAEAmV,EAAA1f,WAAAwF,KAAAtG,IACAsG,KAAAtG,GAAAqL,EAAArL,IAEAsG,KAAAsY,KAAA5e,EAAAqL,EAAArL,IAMA,OAvEAsG,QA2EA+H,EAAA,WACAylB,EAAA,SAAAtyB,GACA,OAAAA,aAAAozB,GAEAxpB,KAAA,SAAA4M,EAAA3G,GACA,OAAA,IAAAujB,EAAA5c,EAAA3G,IAGA,IAAA8W,EAAA,SAAAnQ,EAAA3G,GACA,IAAAvQ,EAAAkX,GAIA,OAAA8b,EAAA9b,GACAA,EAEA3G,GAAAyiB,EAAAziB,IAAAjQ,EAAA4W,GACA3G,EAAAjI,KAAA4O,GAEA5M,KAAA4M,EAAA3G,GATA8W,EAAA0M,MAAA,WACA7c,EAAAmQ,MAYAA,EAAAzd,GAAAkqB,EAAAtyB,UACAke,EAAApa,MAAA+hB,EAAAzd,IAGA7K,OAAA,EAEA8K,IAAA,SAAAD,GACA,OAAAyd,EAAApd,EAAAyV,EAAA7V,IAAArE,KAAA,SAAA4f,EAAAnmB,GACA,OAAA2K,EAAA9J,KAAAslB,EAAAnmB,EAAAmmB,QAIA3hB,MAAA,WACA,OAAA4jB,EAAA5jB,EAAA8B,MAAAC,KAAAN,aAGAvF,QAAA,WACA,OAAAA,EAAA4F,MAAAC,KAAAN,YAGAuJ,IAAA,SAAA1G,GACA,YAAAzF,IAAAyF,EAAAtE,EAAA3D,KAAA0F,MAAAA,KAAAuC,GAAA,EAAAA,EAAAA,EAAAvC,KAAAzG,SAGAoI,QAAA,WACA,OAAAA,EAAA5B,MAAAC,KAAAN,YAGA6I,KAAA,WACA,OAAAA,EAAAxI,MAAAC,KAAAN,YAGA8uB,QAAA,WACA,OAAAvwB,EAAA3D,KAAA0F,OAGAyuB,KAAA,WACA,OAAAzuB,KAAAzG,QAIAmQ,OAAA,SAAAgI,GACA,OAAAA,EACA1R,KAAA8C,KAAA4O,GAAAhI,UAEA1J,KAAAgB,KAAA,SAAAvH,EAAAka,GACA8L,EAAA/V,OAAAiK,KAEA3T,OAGAgB,KAAA,SAAAC,GAEA,OADAiZ,EAAAlZ,KAAAhB,KAAAiB,GACAjB,MAGA6C,OAAA,SAAA6O,GACA,OAAAlX,EAAAkX,GAAA1R,KAAAmnB,IAAAnnB,KAAAmnB,IAAAzV,IACAmQ,EAAAhf,EAAAvI,KAAA0F,KAAA,SAAAuhB,GACA,OAAAkJ,EAAA1hB,QAAAwY,EAAA7P,OAIAjI,IAAA,SAAAiI,EAAA3G,GACA,OAAA8W,EAAApd,EAAAzE,KAAAwuB,UAAAxqB,OAAA6d,EAAAnQ,EAAA3G,GAAAyjB,cAGA1M,GAAA,SAAApQ,GACA,GAAA1R,KAAAzG,OAAA,EAAA,CAEA,GAAA2gB,EAAApf,SAAA4W,GACA,OAAA+b,EAAAnzB,KAFA0F,KAEA,SAAAumB,GACA,OAAAkE,EAAA1hB,QAAAwd,EAAA7U,KAEA,GAAAwI,EAAA7e,YAAAqW,GACA,OAAA+b,EAAAnzB,KANA0F,KAMA,SAAAumB,GACA,OAAArM,EAAAtW,QAAA2iB,EAAA7U,IAAA,IAEA,GAAAwI,EAAAxf,WAAAgX,GACA,OAAA+b,EAAAnzB,KAVA0F,KAUA,SAAAumB,GACA,OAAAA,GAAA7U,IAIA,OAAA,GAGAyV,IAAA,SAAAzV,GACA,IAAAyM,KACA,GAAA3jB,EAAAkX,SAAA5U,IAAA4U,EAAApX,KACA0F,KAAAgB,KAAA,SAAAuB,EAAAoR,GACAjC,EAAApX,KAAA0F,KAAAuC,EAAAoR,IAAAwK,EAAAnf,KAAAgB,YAEA,CACA,IAAA0uB,EAAA,iBAAAhd,EAAA1R,KAAA6C,OAAA6O,GACArW,EAAAqW,IAAAlX,EAAAkX,EAAApP,MAAArE,EAAA3D,KAAAoX,GAAAmQ,EAAAnQ,GACA1R,KAAA7F,QAAA,SAAAylB,GACA8O,EAAA/sB,QAAAie,GAAA,GAAAzB,EAAAnf,KAAA4gB,KAGA,OAAAiC,EAAA1D,IAGAlf,IAAA,SAAAyS,GACA,OAAA1R,KAAA6C,OAAA,WACA,OAAAhI,EAAA6W,GACA+N,EAAAH,SAAAtf,KAAA0R,GACAmQ,EAAA7hB,MAAA8C,KAAA4O,GAAA+c,UAIAnwB,GAAA,SAAAiE,GACA,OAAA,IAAAA,EAAAvC,KAAA/B,MAAAsE,GAAAvC,KAAA/B,MAAAsE,GAAAA,EAAA,IAGAgB,MAAA,WACA,OAAAvD,KAAA1B,GAAA,IAGAsmB,KAAA,WACA,OAAA5kB,KAAA1B,IAAA,IAGAwE,KAAAkrB,EAAAvD,EAAAnC,YAAAmC,GAEAzI,QAAAgM,EAAAvD,EAAAzI,QAAAyI,GAaAkE,QAAAX,EAAAvD,EAAAtC,UAAAsC,GAEAmE,aAAAX,EAAAxD,EAAAtC,UAAAsC,GAGAzlB,OAAAgpB,EAAAvD,EAAAzlB,OAAAylB,GAEAxH,SAAA+K,EAAAvD,EAAAxH,SAAAwH,GAEAvK,SAAA6N,EAAAtO,EAAAS,SAAAT,GAEAoB,MAAAsN,EAAA1O,EAAAoB,MAAApB,GAEAa,KAAA8N,EAAA3O,EAAAa,KAAAb,GAGAwN,MAAA,SAAAC,GACA,OAAAhT,EAAA7V,IAAArE,KAAA,SAAA4f,GACA,OAAAA,EAAAsN,MAIA2B,UAAA,SAAAC,GACA,IAAAjoB,EAAAgb,EAAAiN,GAEA,OADAjoB,EAAAkoB,WAAA/uB,KACA6G,GAGAmoB,YAAA,SAAAC,GACA,OAAAjvB,KAAAqK,OAAA4kB,GAAAvlB,UAGAwlB,KAAA,SAAA5O,GAcA,IAAA6O,EAAA,mBAAA7O,EAEA,OAAAtgB,KAAAgB,KAAA,SAAAvH,GACAooB,EAAA7hB,MAAAovB,QAAAD,EAAA7O,EAAAhmB,KAAA0F,KAAAvG,GAAA6mB,MAIA8O,QAAA,SAAA9O,GAaA,IAAA4O,EAyBA,OAvBAlvB,KAAA,KACA,mBAAAsgB,IACAA,EAAAA,EAAAhmB,KAAA0F,KAAA,KAIAkvB,EAAArN,EAAAvB,EAAAtgB,KAAA,GAAAwf,eAAAlhB,GAAA,GAAAoC,OAAA,GAEAV,KAAA,GAAA6e,YACAqQ,EAAAvM,aAAA3iB,KAAA,IAGAkvB,EAAA7qB,IAAA,WAGA,IAFA,IAAAkiB,EAAAvmB,KAEAumB,EAAA8I,mBACA9I,EAAAA,EAAA8I,kBAGA,OAAA9I,IACA3H,OAAA5e,OAGAA,MAIAsvB,UAAA,SAAAhP,GAUA,MAAA,mBAAAA,EACAtgB,KAAAgB,KAAA,SAAAvH,GACAooB,EAAA7hB,MAAAsvB,UAAAhP,EAAAhmB,KAAA0F,KAAAvG,MAIAuG,KAAAgB,KAAA,WACA,IAAAiN,EAAA4T,EAAA7hB,MACAkgB,EAAAjS,EAAAiS,WAEAA,EAAA3mB,OACA2mB,EAAAkP,QAAA9O,GAGArS,EAAA2Q,OAAA0B,MAMAkD,OAAA,SAAA9R,GAiBA,OAHA1R,KAAAgF,OAAA0M,GAAAyV,IAAA,QAAAnmB,KAAA,WACA6gB,EAAA7hB,MAAAgvB,YAAAhvB,KAAAogB,cAEApgB,MAIAU,MAAA,WACA,OAAAV,KAAAqE,IAAA,WACA,OAAArE,KAAAqe,WAAA,MAKAkR,OAAA,SAAAC,GACA,OAAAxvB,KAAAgB,KAAA,WACA,IAAA4e,EAAAiC,EAAA7hB,YACAlD,IAAA0yB,EAAA,QAAA5P,EAAA6P,IAAA,WAAAD,GAAA5P,EAAA8P,OAAA9P,EAAA+P,UAIA3W,KAAA,SAAAtH,GACA,OAAAmQ,EAAA7hB,KAAAitB,MAAA,2BAAApqB,OAAA6O,GAAA,MAGAke,QAAA5B,EAAAvD,EAAAzB,iBAAAyB,GAEAngB,KAAA,SAAAoH,GACA,OAAAmQ,EAAA7hB,KAAAitB,MAAA,uBAAApqB,OAAA6O,GAAA,MAGAme,QAAA7B,EAAAvD,EAAA1B,aAAA0B,GAEAxB,SAAA+E,EAAAvD,EAAAxB,SAAAwB,GAEA3pB,MAAA,SAAAylB,GACA,OAAAA,EACAvmB,KAAA2B,QAAAkgB,EAAA0E,GAAA,IAEAvmB,KAAAgF,SAAAie,WAAAthB,QAAA3B,KAAA,OAMA6hB,EAAAzd,GAAA0rB,OAAAjO,EAAAzd,GAAAsF,OAEAmY,EAAAzd,GAAA2rB,MAAA,SAAAC,EAAAC,GACA,OAAAjwB,KAAAkwB,WAAAF,GAAAG,WAAAF,GAAAD,IAIAvQ,EAAA2D,SAiEA,OA9DAvB,EAAAzd,GAAAoG,MAAAojB,EAAAnO,EAAAjV,MAAAiV,GAEAoC,EAAAzd,GAAAwe,QAAAgL,EAAAnO,EAAAmD,QAAAnD,GAEAoC,EAAAzd,GAAAiG,OAAAujB,EAAAnO,EAAApV,OAAAoV,GAEAoC,EAAAzd,GAAAwa,OAAAgP,EAAAnO,EAAAb,OAAAa,GAGAvF,EAAAlZ,MACAovB,SAAA,SACAC,UAAA,UACA1N,aAAA,SACA2N,YAAA,QACAC,WAAA,eACA,SAAA72B,EAAA82B,GACA3O,EAAAzd,GAAA1K,GAAA,SAAAgY,GAOA,IANA,IAAA+e,EACA5pB,KACA6pB,EAAA7O,EAAAnQ,GACAkT,EAAA8L,EAAAn3B,OAAA,EACAE,EAAA,EAEAA,GAAAmrB,EAAAnrB,IACAg3B,EAAAh3B,IAAAmrB,EAAA5kB,KAAAA,KAAAU,OAAA,GACAmhB,EAAA6O,EAAAj3B,IAAA+2B,GAAAC,GAIAzxB,EAAAe,MAAA8G,EAAA4pB,EAAAxnB,OAGA,OAAAjJ,KAAA6uB,UAAAhoB,MA8BAgb,EAjaA,GA2kBA,OAvKAA,EAmBA9Z,GAlBA3D,GAAAusB,aAAA,SAAAC,GACA,IAAAtO,EAAAtiB,KAAAyvB,IAAA,YACAoB,EAAA,aAAAvO,EACAwO,EAAAF,EAAA,uBAAA,gBACAD,EAAA3wB,KAAA2uB,UAAA9rB,OAAA,WACA,IAAAmC,EAAA6c,EAAA7hB,MACA,QAAA6wB,GAAA,WAAA7rB,EAAAyqB,IAAA,cAGAqB,EAAA9yB,KAAAgH,EAAAyqB,IAAA,YAAAzqB,EAAAyqB,IAAA,cACAzqB,EAAAyqB,IAAA,iBACAnxB,GAAA,GAEA,MAAA,UAAAgkB,GAAAqO,EAAAp3B,OAEAo3B,EADA9O,EAAA7hB,KAAA,GAAAwf,eAAAtL,WAOA,SAAA2N,GACAA,EAAAzd,GAAA8Y,IAAA,WACA,OAAAld,KAAA+uB,YAAAlN,KAGAA,EAAAzd,GAAA2sB,QAAA,WACA,OAAA/wB,KAAAyJ,IAAAzJ,KAAA+uB,YAAAlN,MAGAA,EAAAzd,GAAA4sB,QAAA,SAAAtf,GACA,OAAA1R,KAAA+uB,WACArd,EACA1R,KAAAyJ,IAAAzJ,KAAA+uB,WAAAlsB,OAAA6O,IAEA1R,KAAAyJ,IAAAzJ,KAAA+uB,YAGA/uB,MAIA,uGAAA1G,MAAA,KAAAa,QAAA,SAAA+yB,GACA,IAAA9oB,EAAAyd,EAAAzd,GAAA8oB,GACArL,EAAAzd,GAAA8oB,GAAA,WACA,IAAArmB,EAAAzC,EAAArE,MAAAC,KAAAN,WAEA,OADAmH,EAAAkoB,WAAA/uB,KACA6G,KA1BA,CA6BAkB,GAGA,SAAA8Z,GA6DA,IACAoP,EA7DApP,EAAAzd,GAAA2D,MAAA8Z,EAAAzd,GAAAtB,KAEA+e,EAAAzd,GAAA8sB,MAAA,SAAAzO,EAAAH,GAwBA,OALApI,EAAApf,SAAA2nB,GACAA,EAAAgI,EAAAhC,WAAAhG,GACA+K,EAAA/K,KACAA,EAAAA,EAAA,IAEAziB,KAAAgB,KAAA,SAAAvH,EAAAka,GACA,OAAA2O,GACA,IAAA,SACA7C,EAAApV,OAAAoY,EAAA9O,GACA,MACA,IAAA,QACA8L,EAAAjV,MAAAiY,EAAA9O,GACA,MACA,IAAA,UACA8L,EAAA3hB,QAAA2kB,EAAA9O,GACA,MACA,IAAA,OACA8L,EAAAoB,MAAA4B,GACAhD,EAAAb,OAAA6D,EAAA9O,GACA,MACA,IAAA,QACA8L,EAAAmD,QAAAH,EAAA9O,GACA,MAEA,QACA8L,EAAAb,OAAA6D,EAAA9O,OAKAkO,EAAAzd,GAAA+sB,WAAA,SAAAC,EAAA9O,GAIA,OAHA8O,EAAAvkB,WACAukB,EAAAlX,EAAAnD,WAAAqa,EAAAvkB,SAAAukB,IAEApxB,KAAA4e,OAAAwS,IAKAvP,EAAAzd,GAAAitB,kBACAJ,EAAA,kBAAA/c,SAAA0H,cAAA,OACA,cACA,YAEA,WACA,OAAA5b,KAAAwR,GAAAyf,EAAA,uBAAA,SAAA5f,GACAA,EAAAigB,qBAKAzP,EAAAzd,GAAAmtB,gBAAA,WACA,OAAAvxB,KAAA8S,IAAA,yBAGA+O,EAAAzd,GAAAye,OAAA,WACA,OAAApD,EAAA+R,KAAAxxB,KAAA,KAGA6hB,EAAAzd,GAAAqtB,YAAA,WACA,OAAAhS,EAAAgS,YAAAzxB,KAAA,KAlFA,CAsFA+H,GAEAA,EAAA3D,GAAAstB,OAAA,SAAAh4B,EAAAwL,GACA,IAAA1F,EAAAvB,EAAA3D,KAAAoF,UAAA,GACAuO,EAAAjO,KACA2xB,EAAA3xB,KAKA,OAHAA,KAAAgB,KAAA,WACA2wB,EAAAC,QAAAC,YAAA9xB,MAAAkO,GAAAjO,KAAAtG,GAAAsK,OAAAxE,MAEAmyB,GAIA5pB,EAAA+pB,OACAlE,uBAAAA,EACAG,YAAAA,EACAK,cAAAA,EACAJ,iBAAAA,EACA+D,iBA3sBA,SAAAtuB,EAAAsH,GACA,OAAA,WACA,IACAtL,EAAAxB,EAAA3D,KAAAoF,WACA,OAAA+tB,EAAAnzB,KAFA0F,KAEA,SAAAumB,GACA,OAAA9iB,EAAA1D,MAAAgL,GAAAwb,GAAAviB,OAAAvE,QAusBAwuB,uBAAAA,EACA+D,+BAztBA,SAAAvuB,EAAAsH,EAAA8iB,GACA,OAAA,SAAAhU,GACA,IACApa,EAAAxB,EAAA3D,KAAAoF,WAKA,OAJAvF,EAAAG,KAFA0F,KAEA,SAAAumB,EAAAhkB,GACA4X,EAAAoM,EAAA1M,EAAAtX,EAAAsrB,EAAAtH,IACA9iB,EAAA1D,MAAAgL,GAAAwb,EAAA1M,GAAA7V,OAAAvE,EAAAxB,MAAA,OAJA+B,OAwtBAmuB,kBAAAA,EACA8D,mBArsBA,SAAAxuB,EAAAsH,EAAA8iB,GACA,OAAA,SAAAn0B,EAAAe,GAGA,OAAAyf,EAAAre,cAAAnC,IAAAwgB,EAAA3e,UAAAd,IACAN,EAAAG,KAHA0F,KAGA,SAAAumB,EAAAhkB,GACA,IAAA8rB,EAEAA,EADAR,EACA1T,EAAAoM,EAAA9rB,EAAA8H,EAAAsrB,EAAAtH,EAAA7sB,IAEAe,EAEAgJ,EAAA1D,MAAAgL,GAAAwb,EAAA7sB,EAAA20B,MAVAruB,MAAAA,KAcA,GACAyD,EAAA1D,MAAAgL,GAfA/K,KAeA,GAAAtG,SADA,KAyrBAE,EAAAC,OAAA,aAAAkO,KAGA7O,OAAA,2BACA,WACA,SAAA6O,GACA,OAAAA,IAEA7O,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,wBACA,sBACA,qBACA,sBACA,sBACA,SAAAU,EAAAsgB,EAAAuF,EAAAgL,EAAA5I,GACA,IAAAxd,EAAAjJ,MAAAY,UAAAqI,IACApG,EAAA7C,MAAAY,UAAAiC,MAKAi0B,EAAAhY,EAAAhT,OACAf,UAAA,gBAEAtB,WAAA,SAAA8O,GACAuG,EAAApf,SAAA6Y,KAGAA,EAFA,MAAAA,EAAAgD,OAAA,GAEA8I,EAAAY,eAAA1M,GAAA,GAGAO,SAAA8B,eAAArC,IAGA3T,KAAAmyB,KAAAxe,KAIAue,EAAAl2B,UAAA6lB,EAAAqQ,EAAAl2B,UAAA+L,MAAA,SAAA2J,GACA,OAAAmQ,EAAAnQ,EAAA1R,KAAAmyB,OAGAD,EAAAl2B,UAAAuiB,IAAA,WACA,OAAAve,KAAAmyB,MAMA,IAAA/J,EAAA,IAAA8J,EAAAhe,SAAAyB,MACAyc,EAAA,SAAAze,GACA,OAAAA,EACA,IAAAue,EAAAve,GAEAyU,GAgIA,OA7FAlO,EAAApa,MAAAsyB,GACAC,MAAA,SAAAlU,EAAAmU,EAAA9yB,GAMA,OALA2e,EAAAhkB,QAAA,SAAAwZ,GACA,IAAA4K,EAAA5K,aAAAue,EAAAve,EAAAye,EAAAze,GACA4K,EAAA+T,GAAAvyB,MAAAwe,EAAA/e,KAGAQ,MAGAooB,KAAA,IAAA8J,EAAAhe,SAAAyB,MAEAuc,cAAAA,EAEA7rB,QAAA,SAAA3M,EAAA0K,GACA,IAAAW,KAEAA,EAAArL,GAAA0K,EAEA8tB,EAAA7rB,QAAAtB,IAGA4C,SAAA,SAAA2lB,EAAAviB,GACA,IAAAhG,KAEAuoB,EAAAnzB,QAAA,SAAAT,GACAqL,EAAArL,GArDA,SAAA0K,EAAA2G,GACA,OAAA,WACA,IACAwb,EADAvmB,KACAmyB,KACAtrB,EAAAzC,EAAArE,MAAAgL,GAAAwb,GAAAviB,OAAA/F,EAAA3D,KAAAoF,aAEA,GAAAmH,EAAA,CACA,GAAAA,IAAAkE,EACA,OANA/K,KAQA6G,aAAA0rB,YACA1rB,EAAA,IAAAqrB,EAAArrB,GACAqT,EAAA7e,YAAAwL,KACAA,EAAAxC,EAAA/J,KAAAuM,EAAA,SAAA+Y,GACA,OAAAA,aAAA2S,YACA,IAAAL,EAAAtS,GAEAA,KAMA,OAAA/Y,GA8BA2rB,CAAAznB,EAAArR,GAAAqR,KAGAmnB,EAAA7rB,QAAAtB,MAKAqtB,EAAAzqB,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA8iB,GAMA2H,EAAAtvB,KAAA,SAAA4O,GACA,MAAA,SAAAA,EACA1R,KAAAooB,KAEApoB,KAAAooB,KAAAK,WAAA/W,IAMA0gB,EAAAzqB,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,aACA,eACA,WACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACA8X,GAGA7lB,EAAAC,OAAA,YAAAu4B,KAEAl5B,OAAA,0BACA,UACA,SAAAk5B,GACA,OAAAA,IAEAl5B,OAAA,qBAAA,0BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,SACA,oBACA,sBACA,SAAAiQ,EAAAipB,EAAAvQ,GA6BA,OA3BAuQ,EAAAzqB,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAwB,GAEA0Y,EAAAzd,GAAA0I,KAAA+U,EAAAiQ,MAAA1D,cAAAjlB,EAAA2D,KAAA3D,EAAAA,EAAA2D,MAEA+U,EAAAzd,GAAAkU,KAAAuJ,EAAAiQ,MAAAG,mBAAA9oB,EAAAmP,KAAAnP,EAAAA,EAAAmP,MAEAuJ,EAAAzd,GAAA+oB,WAAAtL,EAAAiQ,MAAA3D,kBAAAhlB,EAAAgkB,WAAAhkB,GAEA0Y,EAAAzd,GAAA1B,KAAAmf,EAAAiQ,MAAAG,mBAAA9oB,EAAAzG,KAAAyG,EAAAA,EAAAzG,MAEAmf,EAAAzd,GAAAmpB,WAAA1L,EAAAiQ,MAAA3D,kBAAAhlB,EAAAokB,WAAApkB,GAEA0Y,EAAAzd,GAAA+E,KAAA0Y,EAAAiQ,MAAAG,mBAAA9oB,EAAAA,KAAAA,EAAAA,EAAAA,MAEA0Y,EAAAzd,GAAAipB,WAAAxL,EAAAiQ,MAAA3D,kBAAAhlB,EAAAkkB,WAAAlkB,GAEA0Y,EAAAzd,GAAAmU,IAAAsJ,EAAAiQ,MAAA1D,cAAAjlB,EAAAoP,IAAApP,EAAAA,EAAAoP,KAGApP,IAEAjQ,OAAA,qBAAA,0BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,gCACA,wBACA,sBACA,uBACA,sBACA,qBACA,qBACA,SAAAU,EAAAsgB,EAAAxG,EAAA+W,EAAAhL,EAAAqN,GACA5S,EAAApa,MAAA,IACAkB,EAAAkZ,EAAAlZ,KAEA2Z,GADAvf,MAAAY,UAAAiC,MACAic,EAAAS,KACA8X,EAAA,mCACAC,GACApB,eAAA,qBACAqB,yBAAA,gCACAC,gBAAA,wBAEAC,EAAA,8BAEA,SAAAC,EAAAzhB,EAAAjS,GAeA,OAdAA,GAAAiS,EAAA0hB,qBACA3zB,IACAA,EAAAiS,GAGA6I,EAAAlZ,KAAA0xB,EAAA,SAAAh5B,EAAAuJ,GACA,IAAA+vB,EAAA5zB,EAAA1F,GACA2X,EAAA3X,GAAA,WAEA,OADAsG,KAAAiD,GAAAiX,EAAAvN,WACAqmB,GAAAA,EAAAjzB,MAAAX,EAAAM,YAEA2R,EAAApO,GAAAiX,EAAAtN,eAGAyE,EAGA,SAAAD,EAAAC,GACA,IAAAC,GAAA,GAAAD,GAAA/X,MAAA,KACA,OACAY,KAAAoX,EAAA,GACA9X,GAAA8X,EAAArT,MAAA,GAAAsK,OAAA4E,KAAA,MAKA,IAAA8lB,GACAj4B,OAAA,YACAA,OAAA,iBACAA,OAAA,UACAA,OAAA,MACAA,OAAA,WACAA,OAAA,cACAA,OAAA,aACAA,OAAA,WACAA,OAAA,iBACAA,OAAA,gBACAA,OAAA,cACAA,OAAA,cACAA,OAAA,UACAA,OAAA,WACAA,OAAA,QACAA,OAAA,WACAA,OAAA,gBAEAk4B,GACAC,iBAAA,EACAC,eAAA,EACAC,kBAAA,EAEAC,WAAA,GACAC,UAAA,GACAC,YAAA,GACA3yB,KAAA,GACA4yB,IAAA,GACAC,MAAA,GAEAC,KAAA,EACAC,QAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,KAAA,EAEAC,MAAA,EACAC,OAAA,EACA5kB,MAAA,EACA6kB,gBAAA,EACApM,OAAA,EACAC,MAAA,EAEAvB,MAAA,EACA7G,KAAA,EACAwU,QAAA,EACAC,SAAA,EAEAC,QAAA,EACAC,SAAA,EACAC,MAAA,EAEAC,QAAA,EAEAC,MAAA,EACAC,YAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,UAAA,EACAC,UAAA,EACAC,SAAA,EACAjF,WAAA,EACAC,WAAA,EAGAiF,UAAA,GAEAC,WAAA,GACAC,UAAA,GACAC,SAAA,GAEAC,KAAA,GACAC,OAAA,GACA7J,OAAA,GACA8J,OAAA,GACAC,OAAA,GAEAC,MAAA,IAIAxiB,EAAA,WAUA,OAAA,SAAAlZ,EAAA6K,GAGAmV,EAAApf,SAAAZ,GACA6K,EAAAA,MAGA7K,GADA6K,EAAA7K,OACAA,MAAA,GAEA,IAAA2X,EAAAT,EAAAlX,GACAA,EAAA2X,EAAA3X,KAEA6K,EAAAmV,EAAApa,OACA+1B,SAAA,EACAC,YAAA,GACA/wB,GAEA8M,EAAArY,KACAuL,EAAAgxB,UAAAlkB,EAAArY,IAGA,IAAA4L,EA7BA,SAAAlL,GACA,IAAAqI,EAAA2wB,EAAAh5B,GACAqI,IACAA,EAAA,GAEA,OAAA0wB,EAAA1wB,GAwBAyzB,CAAA97B,GACAoT,EAAA,IAAAlI,EAAAlL,EAAA6K,GAIA,OAFAmV,EAAAvX,UAAA2K,EAAAvI,GAEA+tB,EAAAxlB,IApCA,GAwCA,SAAA2oB,EAAAt1B,EAAAoE,GACA,IAAAhG,EACA+L,GACAorB,cAAAv1B,GAEA,IAAA5B,KAAA4B,EACA,kBAAA5B,GAAA0zB,EAAAz0B,KAAAe,SAAAjC,IAAA6D,EAAA5B,KACA+L,EAAA/L,GAAA4B,EAAA5B,IAMA,OAHAgG,GACAmV,EAAApa,MAAAgL,EAAA/F,GAEA+tB,EAAAhoB,EAAAnK,GAGA,IACAw1B,KACAC,EAAA,cAAAp7B,OACA2rB,GAAAA,MAAA,UAAA7G,KAAA,YACAiQ,GAAAG,WAAA,YAAAC,WAAA,YACAkG,EAAA,SAAAn8B,GACA,OAAA61B,EAAA71B,IAAAk8B,GAAAzP,EAAAzsB,IAAAA,GAEAo8B,KACAC,EAAArc,EAAAhT,OACApC,KAAA,SAAA3F,EAAAkS,GACArR,KAAAw2B,QAAAr3B,EACAa,KAAAy2B,OAAAplB,EACArR,KAAA02B,cAGAjtB,IAAA,SAAArF,EAAAc,GACA,IAAAyxB,EAAA32B,KAAA02B,UACAE,GACAxyB,GAAAA,EACAc,QAAAgV,EAAApa,SAAAoF,IAGAyxB,EAAA33B,KAAA43B,GAEA,IAAA3oB,EAAAjO,KACA,IAAAiO,EAAA4oB,UAAA,CACA5oB,EAAA4oB,UAAA,SAAAC,GACA,IAAAvY,EAAAve,KACAsN,EAAA2oB,EAAAa,GACAt3B,EAAAs3B,EAAAC,MACAJ,EAAA1oB,EAAAyoB,UACAl9B,EAAA8T,EAAAyoB,UAGAv2B,EADA0a,EAAA3e,UAAAiE,IACA8N,GAAAtJ,OAAAxE,IAEA8N,GAGA4M,EAAAlZ,KAAA21B,EAAA,SAAAp0B,EAAAq0B,GACA,IAAAxpB,EAAAmR,EACA,GAAAjR,EAAA0pB,+BAAA1pB,EAAA0pB,gCACA,OAAA,EAEA,IAAA5yB,EAAAwyB,EAAAxyB,GACAc,EAAA0xB,EAAA1xB,YACAwM,EAAAxM,EAAAwM,SACAC,EAAAzM,EAAAyM,IACAxI,EAAAjE,EAAAiE,KAEA,IAAA3P,GAAAA,GAAA0L,EAAA1L,KAAA,IAAA0L,EAAA1L,GAAAmI,QAAAnI,GAAA,CAGA,GAAAkY,EAAA,CAEA,KADAtE,EAAAqd,EAAAzI,QAAA1U,EAAAnO,OAAAuS,KACAtE,IAAAmR,EAMA,OALArE,EAAApa,MAAAwN,GACA2pB,cAAA7pB,EACA8pB,UAAA3Y,IAOA,IAAA2X,EAAAjoB,EAAAwoB,OACA,GAAAP,KAAAnG,EAAA,CACA,IAAAoH,EAAA7pB,EAAA8pB,cACA,GAAAD,IAAAA,IAAA/pB,GAAAqS,EAAAH,SAAAlS,EAAA+pB,IACA,OAIAjd,EAAA3e,UAAA4N,KACAmE,EAAAnE,KAAAA,GAGAwI,GACA1D,EAAAvE,OAAAtF,EAAAc,GAGA,IAAA/G,EAAAiG,EAAArE,MAAAqN,EAAA5N,IAEA,IAAArB,IACAmP,EAAAgkB,iBACAhkB,EAAAslB,uBAKA,IAAAvhB,EAAApD,EAAAwoB,OAaAxoB,EAAAuoB,QAAAa,iBACAppB,EAAAuoB,QAAAa,iBAAAhB,EAAAhlB,GAAApD,EAAA4oB,WAAA,GAEA9T,QAAAC,KAAA,yBAAA/U,EAAAuoB,WAKA9sB,OAAA,SAAAtF,EAAAc,GAMA,IAAA+H,EAHAzT,GAFA0L,EAAAgV,EAAApa,SAAAoF,IAMA1L,KAJAA,EAKA0L,EAAA1L,GAAAyT,EAJA,IAAAC,OAAA,UAAA1T,EAAAsE,QAAA,IAAA,SAAA,YAOAkC,KAAA02B,UAAA12B,KAAA02B,UAAA7zB,OAAA,SAAA+zB,GACA,IAAAU,IAAAlzB,GAAAA,IAAAwyB,EAAAxyB,OACA6I,GAAAA,EAAAjP,KAAA44B,EAAA1xB,QAAA1L,QACA0L,EAAAwM,UAAAxM,EAAAwM,UAAAklB,EAAA1xB,QAAAwM,UAEA,OAAA4lB,IAEA,GAAAt3B,KAAA02B,UAAAn9B,SACAyG,KAAAw2B,QAAAe,qBACAv3B,KAAAw2B,QAAAe,oBAAAlB,EAAAr2B,KAAAy2B,QAAAz2B,KAAA62B,WAAA,GAEA72B,KAAA62B,UAAA,SAIAW,EAAAtd,EAAAhT,OACApC,KAAA,SAAAyZ,GACAve,KAAAw2B,QAAAjY,EACAve,KAAAy3B,aAKAC,SAAA,SAAArmB,EAAApQ,EAAAiE,GAEA,IAAA2M,EAAAT,EAAAC,GACAA,EAAAQ,EAAA3X,KACAy9B,EAAAxB,EAAA9kB,GACAumB,EAAAD,IAAAA,EAAAE,UAAAF,EAAAG,eAEArmB,EAAAzR,KAAAy3B,cAGA36B,IAAA2U,EAAAJ,KACAI,EAAAJ,GAAA,IAAAklB,EAAAv2B,KAAAw2B,QAAAoB,GAAAvmB,IAIAI,EAAAJ,GAAA5H,IAAAxI,EAAAiZ,EAAApa,OACAtG,GAAAqY,EAAArY,IACA0L,KAIA6yB,WAAA,SAAA1mB,EAAAjN,EAAAc,GAEA,IAAAuM,EAAAzR,KAAAy3B,SACA5lB,EAAAT,EAAAC,GAGA,GAFAA,EAAAQ,EAAA3X,KAEA,CACA,IAAAqV,EAAAkC,EAAAJ,GAEA9B,GACAA,EAAA7F,OAAAtF,EAAA8V,EAAApa,OACAtG,GAAAqY,EAAArY,IACA0L,SAIA,IAAAmM,KAAAI,EAAA,CACA,IAAAlC,EAAAkC,EAAAJ,GACA9B,EAAA7F,OAAAtF,EAAA8V,EAAApa,OACAtG,GAAAqY,EAAArY,IACA0L,QAMA8yB,EAAA,SAAAzZ,GACA,IAAArV,EAAAyR,EAAA4D,GACA1Q,EAAAyoB,EAAAptB,GAIA,OAHA2E,IACAA,EAAAyoB,EAAAptB,GAAA,IAAAsuB,EAAAjZ,IAEA1Q,GAwDA,SAAA2D,EAAA+M,EAAA9M,EAAAC,EAAAvI,EAAAlI,EAAA0Q,GAGA,GAAAuI,EAAAre,cAAA4V,GAIA,OAHAyI,EAAAlZ,KAAAyQ,EAAA,SAAAvX,EAAAkK,GACAoN,EAAA+M,EAAArkB,EAAAwX,EAAAvI,EAAA/E,EAAAuN,KAEA3R,KAGAka,EAAApf,SAAA4W,IAAAwI,EAAA1f,WAAAyG,KACAA,EAAAkI,EACAA,EAAAuI,EACAA,OAAA5U,GAGAod,EAAA1f,WAAA2O,KACAlI,EAAAkI,EACAA,OAAArM,IAGA,IAAAmE,IACAA,EAAAiZ,EAAAtN,aAGA,iBAAA6E,IAEAA,EADAA,EAAA9P,QAAA,MAAA,EACA8P,EAAAnY,MAAA,KAEAmY,EAAAnY,MAAA,OAIA,IAAAuU,EAAAmqB,EAAAzZ,GAYA,OAVA9M,EAAAtX,QAAA,SAAAkX,GACA,GAAA,SAAAA,EACA,OAAAkd,EAAAttB,GAEA4M,EAAA6pB,SAAArmB,EAAApQ,GACAkI,KAAAA,EACAuI,SAAAA,EACAC,MAAAA,MAGA3R,KA2DA,SAAAuuB,EAAAttB,GASA,OANA4xB,EAAA70B,KAAAkW,SAAA+jB,aAAA/jB,SAAAyB,KACAuE,EAAA5N,MAAArL,GAEAiT,SAAAmjB,iBAAA,mBAAAp2B,GAAA,GAGAjB,KAGA,IAAAk4B,GACAC,UAAA,EACAC,MAAA,IACAC,OAAA,GACAC,KAAA,GACApb,IAAA,GACAqb,MAAA,GACAltB,OAAA,GACAmtB,KAAA,GACAC,KAAA,GACAC,UAAA,GACAC,QAAA,GACAC,OAAA,IACAC,MAAA,GACAC,MAAA,GACAC,IAAA,EACAC,GAAA,IA8EA,SAAAC,IACA,OAAAA,EAwDA,OAnEAvlB,EAAAuJ,QAAA7B,aACA+a,EAAA+C,eAIArB,SAAAnkB,EAAAuJ,QAAA7B,WAAA8B,IACAic,aAAAzlB,EAAAuJ,QAAA7B,WAAA8B,MAQAhD,EAAApa,MAAAm5B,GACA/F,aAAAA,EAEAntB,OAAAqN,EAEAtU,KAAAo5B,EAEAplB,IA3QA,SAAAA,EAAAyL,EAAA9M,EAAAC,EAAAzQ,GAEA,GAAAiZ,EAAAre,cAAA4V,GAIA,OAHAyI,EAAAlZ,KAAAyQ,EAAA,SAAAvX,EAAAkK,GACA0O,EAAAyL,EAAArkB,EAAAwX,EAAAtN,KAHApE,KAQAka,EAAApf,SAAA4W,IAAAwI,EAAA1f,WAAAyG,KAAA,IAAAA,IACAA,EAAAyQ,EACAA,OAAA5U,IAGA,IAAAmE,IACAA,EAAAiZ,EAAAtN,aAGA,iBAAA6E,IAEAA,EADAA,EAAA9P,QAAA,MAAA,EACA8P,EAAAnY,MAAA,KAEAmY,EAAAnY,MAAA,OAIA,IAAAuU,EAAAmqB,EAAAzZ,GAEA9M,GAAAA,EAAAtX,QAAA,SAAAkX,GAEAxD,EAAAkqB,WAAA1mB,EAAApQ,GACAyQ,SAAAA,MAGA,OAAA1R,MA2OAwR,GAAAA,EAEAG,IAzKA,SAAA4M,EAAA9M,EAAAC,EAAAvI,EAAAlI,GAGA,OAFAuQ,EAAA+M,EAAA9M,EAAAC,EAAAvI,EAAAlI,EAAA,GAEAjB,MAwKA8K,MAAAmrB,EAEA1H,MAAAA,EAEA6K,UA/FA,SAAA7a,GAEA,IAAA8a,EAAAvM,EAAA3jB,KAAAoV,EAAA,aACA,IAAA8a,EAAA,CACAA,KACAvM,EAAA3jB,KAAAoV,EAAA,YAAA8a,GACA,IAAAC,EAAA,SAAAC,EAAAloB,GACA,IAAA7N,EAAA6N,EAAAmoB,SAAAnoB,EAAAooB,QACA,GAAAF,EAAAG,MAAAl2B,GAAA+1B,EAAAI,KAAAtoB,EAAAuoB,QAAAL,EAAA55B,OAAA0R,EAAAwoB,WACAxoB,EAAAyoB,SAAAP,EAAAO,SAAAzoB,EAAA0oB,UAAA1oB,EAAA0oB,UAAAR,EAAAQ,UAKA,OAJA1oB,EAAAigB,iBACA,WAAAjgB,EAAAnX,MACAq/B,EAAAn1B,GAAAiN,IAEA,GAIAG,EAAA+M,EAAA,yBAAA,SAAAlN,GACA,IAAA,iBAAArT,KAAAqT,EAAAlS,OAAAmf,UACA,IAAA,IAAAvf,KAAAs6B,EACAC,EAAAD,EAAAt6B,GAAAsS,KAOA,OACA5H,IAAA,SAAAuwB,EAAA51B,IAEA41B,EAAAr4B,QAAA,MAAA,EACAq4B,EAAA5/B,cAAAd,MAAA,KAEA0gC,EAAA5/B,cAAAd,MAAA,MAEAa,QAAA,SAAA8/B,GACA,IAAAzK,GACAprB,GAAAA,EACAu1B,KAAA,EACAD,MAAA,EACA/5B,OAAA,GAEAs6B,EAAA3gC,MAAA,KAAAa,QAAA,SAAA4E,GACA,OAAAA,GACA,IAAA,MACA,IAAA,OACA,IAAA,QACAywB,EAAAzwB,IAAA,EACA,MACA,QACAywB,EAAAuK,SAAAh7B,EAAAm7B,WAAA,GACA1K,EAAAsK,QAAA5B,EAAAn5B,IAAAA,EAAAoX,cAAA+jB,WAAA,MAGA,IAAAC,GAAA3K,EAAAkK,KAAA,OAAA,IAAA,KAAAlK,EAAAmK,IAAA,MAAA,IAAA,KAAAnK,EAAA7vB,MAAA,QAAA,IAAA,IAAA6vB,EAAAsK,QACAT,EAAAc,GAAA3K,OAyCA4K,QAAAjE,EAEAkE,KAzKA,SAAAhpB,GACArW,OAAAkZ,SAAApE,MACAuB,EAAAyoB,QAAA,GAEAzoB,EAAAigB,iBACAjgB,EAAAigB,iBACAjgB,EAAAuhB,mBAEA,OAAA5yB,MAmKAmT,QA3JA,SAAAmnB,EAAApgC,EAAAsF,GACA,IAAA8N,EAEAA,EADApT,aAAAqgC,MACArgC,EAEAkZ,EAAAlZ,EAAAsF,GAEA8N,EAAAypB,MAAAv3B,EAEA,IAAA4E,EAAAk2B,EAAAE,eAAAF,EAAAnnB,QACA/O,EACAA,EAAA9J,KAAAggC,EAAAhtB,GAEAyV,QAAAC,KAAA,mDAGA,OAAAhjB,QA+IAgB,EAAAkyB,EAAA,SAAAx5B,GACAu/B,EAAAv/B,GAAA,SAAA6kB,EAAA7M,EAAAvI,EAAAlI,GACA,OAAAvB,UAAAnG,OAAA,EACAyG,KAAAwR,GAAA+M,EAAA7kB,EAAAgY,EAAAvI,EAAAlI,IAEA,SAAAvH,EACA6kB,EAAAoI,OACApI,EAAAoI,QAEA,QAAAjtB,EACA6kB,EAAAuB,MACAvB,EAAAuB,OAEA,SAAApmB,EACA6kB,EAAAqW,OACArW,EAAAqW,QAGA50B,KAAAmT,QAAAoL,EAAA7kB,GAGAsG,SAKApG,EAAAC,OAAA,eAAAo/B,KAEA//B,OAAA,6BACA,sBACA,YACA,oBACA,sBACA,SAAAghB,EAAA+e,EAAA7G,EAAAvQ,GAEA,IAAA4Y,GACA,MACA,KACA,MACA,WA8CA,OA3CAvgB,EAAAlZ,KAAAi4B,EAAA/F,aAAA,SAAAx5B,GACA+gC,EAAAz7B,KAAAtF,KAIA04B,EAAAzqB,SAAA8yB,EAAAxB,GAEA/e,EAAAlZ,KAAAy5B,EAAA,SAAAhhC,EAAAC,GACAmoB,EAAAzd,GAAA1K,GAAAmoB,EAAAiQ,MAAA3D,kBAAA8K,EAAAv/B,GAAAu/B,KAiCApX,EAAA0M,MAAA0K,EAAA1K,MAEA0K,IAEA//B,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,4BACA,yBACA,SAAAU,GAeA,IAAA8gC,EAAA,WACA,OAAAA,GAGA,OAAA9gC,EAAAC,OAAA,aAAA6gC,KAEAxhC,OAAA,8BACA,wBACA,uBACA,SAAAU,EAAAsgB,GACA9e,MAAAY,UAAA0xB,MAAA,IACAvzB,EAAAiB,MAAAY,UAAA7B,QACA+b,EAAAgE,EAAAhE,UACAE,EAAA8D,EAAA9D,UAEA,SAAAukB,EAAAjhC,EAAAe,GACA,MAAA,iBAAAA,GAAAmgC,EAAAxkB,EAAA1c,IAAAe,EAAAA,EAAA,KAGA,IAAAmgC,GACAC,eAAA,EACAC,QAAA,EACAC,cAAA,EACAC,cAAA,EACAC,QAAA,EACAC,UAAA,EACAC,KAAA,GAEAC,KAIA,SAAAC,EAAA3hC,GACA,OAAAA,KAAA0hC,EACAA,EAAA1hC,GAAA0hC,EAAA1hC,GAAA,IAAAwT,OAAA,UAAAxT,EAAA,WASA,SAAA4G,EAAAqT,EAAAlZ,GACA,IAAAyM,EAAAyM,EAAArT,WAAA,GACAg7B,EAAAp0B,QAAApK,IAAAoK,EAAAq0B,QAEA,QAAAz+B,IAAArC,EAAA,OAAA6gC,EAAAp0B,EAAAq0B,QAAAr0B,EACAo0B,EAAAp0B,EAAAq0B,QAAA9gC,EAAAkZ,EAAArT,UAAA7F,EAaA,IAAA+gC,KAiEA,SAAAC,EAAAlV,GAKA,IAAAmV,EAAAnV,EAAA/G,cAAA4C,YAMA,OAJAsZ,GAAAA,EAAAC,SACAD,EAAA1gC,QAGA0gC,EAAArZ,iBAAAkE,GAgHA,IAAAqV,EAAA,WACA,OAAAA,GAqBA,OAlBA1hB,EAAApa,MAAA87B,GACAC,YAAA,EACAC,YAIAC,SA1JA,SAAAxd,EAAA7kB,GACA,IAAAA,EAAA,OAAAsG,KACA,IACAstB,EADA7nB,EAAAnF,EAAAie,GAGA+O,EADApT,EAAApf,SAAApB,GACAA,EAAAJ,MAAA,QAEAI,EAWA,OATA4zB,EAAAnzB,QAAA,SAAA+M,GACA,IAAA80B,EAAAX,EAAAn0B,GACAzB,EAAA2H,MAAA4uB,KACAv2B,IAAAA,EAAA,IAAA,IAAAyB,KAIA5G,EAAAie,EAAA9Y,GAEAzF,MAyIAM,UAAAA,EACAmvB,IAlHA,SAAAlR,EAAA2O,EAAAzyB,GACA,GAAAiF,UAAAnG,OAAA,EAAA,CACA,IACA0iC,EAAAR,EAAAld,GACA,GAAArE,EAAApf,SAAAoyB,GACA,OAAA3O,EAAA5B,MAAAzG,EAAAgX,KAAA+O,EAAAC,iBAAA9lB,EAAA8W,IACA,GAAAhT,EAAA7e,YAAA6xB,GAAA,CACA,IAAAnoB,KAIA,OAHA5K,EAAAG,KAAA4yB,EAAA,SAAAxqB,GACAqC,EAAArC,GAAA6b,EAAA5B,MAAAzG,EAAAxT,KAAAu5B,EAAAC,iBAAA9lB,EAAA1T,MAEAqC,GAIA,IAAA0qB,EAAA,GACA,GAAA,iBAAA,EACAh1B,GAAA,IAAAA,EAGAg1B,EAAArZ,EAAA8W,GAAA,IAAAyN,EAAAzN,EAAAzyB,GAFA8jB,EAAA5B,MAAAwf,eAAA/lB,EAAA8W,SAKA,IAAAnuB,OAAAmuB,OACApwB,IAAAowB,EAAAnuB,OAGAmuB,EAAAnuB,MAAA,IAAAmuB,EAAAnuB,KAGA0wB,GAAArZ,EAAArX,KAAA,IAAA47B,EAAA57B,IAAAmuB,EAAAnuB,MAAA,IAFAwf,EAAA5B,MAAAwf,eAAA/lB,EAAArX,OAQA,OADAwf,EAAA5B,MAAAyf,SAAA,IAAA3M,EACAzvB,MA+EA+hB,SAnNA,SAAAxD,EAAA9jB,GACA,GAAAiF,UAAAnG,OAAA,EACA,QAAAyG,KAAAygB,IAAAsB,SAKA,OAFAxD,EAAAwD,SAAAtnB,EAEAuF,MA6MAq8B,SAxEA,SAAA9d,EAAA7kB,GACA,IAAAsiC,EAAAX,EAAA3hC,GACA,OAAA6kB,EAAAje,WAAAie,EAAAje,UAAA8M,MAAA4uB,IAuEArM,KAzKA,SAAApR,GAEA,OADAqd,EAAAnM,IAAAlR,EAAA,UAAA,QACAve,MAwKAs8B,YAlLA,SAAA/d,GACA,MAAA,QAAAqd,EAAAnM,IAAAlR,EAAA,YAAA,GAAAqd,EAAAnM,IAAAlR,EAAA,YAkLAge,YAjEA,SAAAhe,EAAA7kB,GACA,GAAAA,EAAA,CACA,IAAA+L,EAAAnF,EAAAie,IAGArE,EAAApf,SAAApB,GACAA,EAAAJ,MAAA,QAEAI,GAGAS,QAAA,SAAA+M,GACA,IAAA80B,EAAAX,EAAAn0B,GACAzB,EAAA2H,MAAA4uB,KACAv2B,EAAAA,EAAA3H,QAAAk+B,EAAA,QAIA17B,EAAAie,EAAA9Y,EAAAyL,aAEA5Q,EAAAie,EAAA,IAGA,OAAAve,MA2CA0vB,KA5LA,SAAAnR,GACAqd,EAAAnM,IAAAlR,EAAA,UAAA,IACA,QAAAqd,EAAAnM,IAAAlR,EAAA,YACAqd,EAAAnM,IAAAlR,EAAA,UAnBA,SAAAD,GACA,IAAAiD,EAAAib,EACAhB,EAAAld,KACAiD,EAAArN,SAAA0H,cAAA0C,GACApK,SAAAyB,KAAAmJ,YAAAyC,GACAib,EAAAf,EAAAla,GAAA2a,iBAAA,WACA3a,EAAA1C,WAAA6B,YAAAa,GACA,QAAAib,IAAAA,EAAA,SACAhB,EAAAld,GAAAke,GAEA,OAAAhB,EAAAld,GASAme,CAAAle,EAAAD,WAEA,OAAAte,MAwLA08B,YAnCA,SAAAne,EAAA7kB,EAAAgO,GACA,IAAAuG,EAAAjO,KAYA,OAXAtG,EAAAJ,MAAA,QAAAa,QAAA,SAAA+M,QACApK,IAAA4K,IACAA,GAAAuG,EAAAouB,SAAA9d,EAAArX,IAEAQ,EACAuG,EAAA8tB,SAAAxd,EAAArX,GAEA+G,EAAAsuB,YAAAhe,EAAArX,KAIA+G,KAyBArU,EAAAC,OAAA,cAAA+hC,KAEA1iC,OAAA,4BACA,WACA,oBACA,sBACA,SAAA0iC,EAAAxJ,EAAAvQ,GAGAuQ,EAAAzqB,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAi0B,GAmDA,OA/CA,WAAA,OAAA,MAAA,QAAA,SAAA,QAAA,SAAA,SAAA,aACA,YAAA,cAAA,eAAA,cAAA,UAAA,WAAA,SAAA,aAAA,YAAA,cAAA,eAAA,UAAA,cAAA,aAAA,eAAA,gBAAA,QACA,aAAA,kBAAA,UAAA,WAAA,aAAA,YAAA,iBAAA,gBAAA,SAAA,UAEAzhC,QAAA,SAAA+yB,GAEA,IAAA1lB,EAAA0lB,EAEAkF,EAAAF,cAAAl2B,UAAAwL,GAAA,SAAA/M,GAIA,OAFAuF,KAAAyvB,IAAAvC,EAAAzyB,GAEAuF,QAOA6hB,EAAAzd,GAAAuY,MAAAkF,EAAAiQ,MAAAG,mBAAA2J,EAAAnM,IAAAmM,GAEA/Z,EAAAzd,GAAAqrB,IAAA5N,EAAAiQ,MAAAG,mBAAA2J,EAAAnM,IAAAmM,GAGA/Z,EAAAzd,GAAAi4B,SAAAxa,EAAAiQ,MAAAC,iBAAA6J,EAAAS,SAAAT,GAGA/Z,EAAAzd,GAAA23B,SAAAla,EAAAiQ,MAAAE,+BAAA4J,EAAAG,SAAAH,EAAAA,EAAAt7B,WAGAuhB,EAAAzd,GAAAm4B,YAAA1a,EAAAiQ,MAAAE,+BAAA4J,EAAAW,YAAAX,EAAAA,EAAAt7B,WAGAuhB,EAAAzd,GAAAs4B,YAAA7a,EAAAiQ,MAAAE,+BAAA4J,EAAAc,YAAAd,EAAAA,EAAAt7B,WAEAuhB,EAAAzd,GAAAu4B,aAAA,SAAAC,EAAAC,GAGA,OAFA78B,KAAAu8B,YAAAM,GACA78B,KAAA+7B,SAAAa,GACA58B,MAGA6hB,EAAAzd,GAAAu4B,aAAA,SAAAC,EAAAC,GAGA,OAFA78B,KAAAu8B,YAAAM,GACA78B,KAAA+7B,SAAAa,GACA58B,MAGA47B,IAEA1iC,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,kCACA,yBACA,SAAAU,GAeA,IAAAkjC,EAAA,WACA,OAAAA,GAGA,OAAAljC,EAAAC,OAAA,kBAAAijC,KAEA5jC,OAAA,oCACA,uBACA,yBACA,YACA,SAAAwL,EAAA+C,EAAAq1B,GACA,IAAA94B,EAAA5I,MAAAY,UAAAgI,OACA+4B,EAAA,WACA,SAAAprB,EAAAqrB,EAAA5jC,GACA,IAAAqV,EAAA,IAAAhH,EACAw1B,EAAA,SAAA3vB,GACAmB,EAAAJ,OAAAf,IAIA,GADAlU,EAAAA,GAAA,GACA4jC,EAAAE,OACAF,EAAAlV,KAAA,SAAAA,GACAA,EAAAqV,aAAA/jC,EACAqV,EAAAL,QAAA0Z,IACAmV,QACA,GAAAD,EAAAI,YAAA,CACA,IAAAC,EAAAL,EAAAM,eACAD,EAAAE,YAAA,SAAAC,GACA1tB,EACA0tB,EACApkC,EAAA4jC,EAAAtjC,KAAA,KACA4N,KAAA,SAAAozB,GACAjsB,EAAAL,QAAAssB,KACA1sB,MAAAivB,IACAA,QAIAxuB,EAAAL,YAEA,OAAAK,EAAAN,QAGA,SAAA2B,EAAA0tB,EAAApkC,GACA,OAAAqO,EAAAqI,IACApL,EAAAL,IAAAm5B,EAAA,SAAAR,GACA,OAAArrB,EAAAqrB,EAAA5jC,MAEAkO,KAAA,WACA,OAAAtD,EAAAjE,SAAAL,aAIA,OACAiS,IAAAA,EACA7B,IAAAA,GA3CA,GA+CA,OAAAgtB,EAAAC,SAAAA,IAEA7jC,OAAA,+BACA,uBACA,yBACA,sBACA,uBACA,UACA,oCACA,SAAAwL,EAAA+C,EAAAm0B,EAAA3C,EAAAyB,EAAAqC,GA4DA,OAAArC,EAAA+C,SAvDA,SAAAlf,EAAA9e,GAEA,IAAAi+B,GADAj+B,EAAAA,OACAi+B,YAAA,WACAC,EAAAl+B,EAAAm+B,QAEAC,EAAA,EA+CA,OA9CA5E,EAAAznB,GAAA+M,EAAA,YAAA,SAAAjR,GACAA,EAAAwwB,cAAAxwB,EAAAwwB,aAAA/gC,MAAA4E,QAAA,UAAA,IACAs3B,EAAAoB,KAAA/sB,GACAuwB,IACAjC,EAAAG,SAAAxd,EAAAmf,MAIAzE,EAAAznB,GAAA+M,EAAA,WAAA,SAAAjR,GACAA,EAAAwwB,cAAAxwB,EAAAwwB,aAAA/gC,MAAA4E,QAAA,UAAA,GACAs3B,EAAAoB,KAAA/sB,KAIA2rB,EAAAznB,GAAA+M,EAAA,YAAA,SAAAjR,GACAA,EAAAwwB,cAAAxwB,EAAAwwB,aAAA/gC,MAAA4E,QAAA,UAAA,GAEA,KADAk8B,GAEAjC,EAAAW,YAAAhe,EAAAmf,KAKAzE,EAAAznB,GAAA+M,EAAA,OAAA,SAAAjR,GACA,GAAAA,EAAAwwB,cAAAxwB,EAAAwwB,aAAA/gC,MAAA4E,QAAA,UAAA,IACAi6B,EAAAW,YAAAhe,EAAAmf,GACAzE,EAAAoB,KAAA/sB,GACAqwB,GAAA,CACA,IAAAt7B,EAAAiL,EAAAwwB,aAAAz7B,MACAA,GAAAA,EAAA9I,SAAA8I,EAAA,GAAA07B,kBACA17B,EAAA,GAAA27B,YACAjB,EAAAjtB,IACApL,EAAAL,IAAAhC,EAAA,SAAAC,GACA,OAAAA,EAAAy7B,iBACAz7B,EAAAy7B,mBAEAz7B,EAAA07B,gBAEA12B,KAAAq2B,GAEAA,EAAArwB,EAAAwwB,aAAApD,UAMA16B,QAKA9G,OAAA,gCACA,wBACA,uBACA,WACA,SAAA0J,EAAAq2B,EAAAyB,GA0BA,OAAAA,EAAAuD,UAzBA,SAAA1f,EAAA9e,IACAA,EAAAA,OACAi+B,WAAA,IACAQ,EAAAz+B,EAAA0+B,OAmBA,OAjBAlF,EAAAznB,GAAA+M,EAAA,QAAA,SAAAjR,GACA,IAAAjL,EAAAiL,EAAA4oB,eAAA5oB,EAAA4oB,cAAAkI,eACA9wB,EAAA4oB,cAAAkI,cAAA/7B,MACAq4B,KACAr4B,GAAAA,EAAA9I,QACAqJ,EAAA5B,KAAAqB,EAAA,SAAAvB,EAAAwB,GACA,IAAAwlB,EAAAxlB,EAAA+7B,WAAA/7B,EAAA+7B,YACAvW,GACA4S,EAAA17B,KAAA8oB,KAIAoW,GAAAxD,EAAAnhC,QACA2kC,EAAAxD,KAIA16B,QAOA9G,OAAA,kCACA,YACA,SAAA4jC,GACA,IAAAwB,EAGAC,EAAA,EAAA,EAkDA,OAAAzB,EAAAlR,OAhDA,SAAAnsB,GAEA,IAAA++B,GADA/+B,EAAAA,OACA++B,YAAA,EACAC,EAAAh/B,EAAAg/B,WAAA,EACAC,EAAAj/B,EAAAi/B,QAAA,GACAC,EAAAl/B,EAAAk/B,OAAA,GACAC,EAAAn/B,EAAAo/B,OACA,IAAAP,EAAA,CACA,IAAArX,EAAAqX,EAAApqB,SAAA0H,cAAA,SAEA,SAAAkjB,EAAAC,GACA,IAAA,IAAAtlC,EAAAslC,EAAAxlC,OAAAE,KACAslC,EAAAtlC,GAAAg1B,KAAA8P,GACAQ,EAAAv8B,OAAA/I,EAAA,GAGAmlC,EAAAG,GAGA9X,EAAA/sB,KAAA,OACA+sB,EAAAtK,MAAA2F,SAAA,QACA2E,EAAAtK,MAAA8b,KAAA,EACAxR,EAAAtK,MAAAqiB,IAAA,EACA/X,EAAAtK,MAAAse,QAAA,KACA/mB,SAAAyB,KAAAmJ,YAAAmI,GAEAA,EAAAgY,SAAA,SAAA3xB,GACA,IAAAkwB,EAAAlwB,EAAAnO,OAAA+/B,eAAA5xB,EAAAnO,OAAAq+B,QAEAA,GAAAA,EAAAjkC,OACAwjC,SAAAjtB,IAAA0tB,GAAAl2B,KAAA,SAAAozB,GACAoE,EAAApE,KAGAoE,EAAA1jC,MAAAY,UAAAiC,MAAA3D,KAAAgT,EAAAnO,OAAAu7B,QAGAzT,EAAAxsB,MAAA,IAGA6jC,EAAAG,SAAAA,EACAH,EAAAI,OAAAA,EACAJ,EAAAK,MAAAA,EAEAL,EAAAa,gBAAAX,EACAF,EAAA1J,WAOA17B,OAAA,6BACA,wBACA,uBACA,UACA,kCACA,SAAA0J,EAAAq2B,EAAAyB,EAAA9O,GAcA,OAAA8O,EAAA0E,OARA,SAAA7gB,EAAA9e,GAKA,OAJAw5B,EAAAznB,GAAA+M,EAAA,QAAA,SAAAjR,GACAA,EAAAgkB,iBACA1F,EAAAnsB,KAEAO,QASA9G,OAAA,2BACA,UACA,oBACA,qBACA,aACA,cACA,YACA,SAAAwhC,EAAAtI,EAAAvQ,GAWA,OAVAuQ,EAAAzqB,UACA,WACA,YACA,UACA+yB,GAEA7Y,EAAAzd,GAAA65B,UAAApc,EAAAiQ,MAAA3D,kBAAAuM,EAAAuD,UAAAvD,GACA7Y,EAAAzd,GAAAq5B,SAAA5b,EAAAiQ,MAAA3D,kBAAAuM,EAAA+C,SAAA/C,GACA7Y,EAAAzd,GAAAg7B,OAAAvd,EAAAiQ,MAAA3D,kBAAAuM,EAAA0E,OAAA1E,GAEAA,IAEAxhC,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,wBACA,sBACA,qBACA,uBACA,SAAAU,EAAAsgB,EAAAuF,EAAAmc,GACA,IAGAyD,EAHAphB,EAAA,mBACAqhB,EAAAplB,EAAAO,QACA0H,EAAA1C,EAAA0C,aAGA,SAAAod,IACA,QAAAziC,IAAAuiC,EACA,OAAAA,EAEA,IAAAG,EAAAC,EACApiB,EAAAoC,EAAAY,eAAA,6IAEA,GACAqf,EAAAriB,EAAA+C,WAAA,GAgBA,OAdAX,EAAAb,OAAA1K,SAAAyB,KAAA0H,GAEAmiB,EAAAE,EAAAlY,YAEAoU,EAAAnM,IAAApS,EAAA,WAAA,UAEAoiB,EAAAC,EAAAlY,YAEAgY,IAAAC,IACAA,EAAApiB,EAAA,GAAAsiB,aAGAlgB,EAAA/V,OAAA2T,GAEAgiB,EAAAG,EAAAC,EAMA,SAAAG,EAAArhB,GACA,GAAAkB,EAAA1kB,SAAAwjB,GACA,OACAka,KAAA,EACAuG,IAAA,EACAnG,MAAA,EACAgH,OAAA,GAEA,IAAAC,EAAAzd,iBAAA9D,GACA,OACAka,KAAA6G,EAAAQ,EAAAC,gBAAAxhB,GACAygB,IAAAM,EAAAQ,EAAAE,eAAAzhB,GACAsa,MAAAyG,EAAAQ,EAAAG,iBAAA1hB,GACAshB,OAAAP,EAAAQ,EAAAI,kBAAA3hB,IAUA,SAAA4hB,EAAA5hB,EAAA6hB,GACA,QAAAtjC,IAAAsjC,EACA,OAAAniB,EAAAjgB,KAAAugB,EAAAD,WAAA0gB,IAAA,EAAAvG,KAAA,GAAAla,EAAA8hB,wBAEA,IACAr7B,EAAAmd,EAAA5D,GAEA+hB,EAAAH,EAAAn7B,GACAu7B,EAAAC,EAAAjiB,GACAkiB,EAAAb,EAAA56B,GAMA,OAJA07B,EAAAniB,GACAygB,IAAAoB,EAAApB,IAAAsB,EAAAtB,IAAAuB,EAAAvB,IAAAyB,EAAAzB,IACAvG,KAAA2H,EAAA3H,KAAA6H,EAAA7H,KAAA8H,EAAA9H,KAAAgI,EAAAhI,OAEAz4B,KASA,SAAA2gC,EAAApiB,EAAA6hB,GACA,YAAAtjC,IAAAsjC,EACA7hB,EAAA8hB,yBAEAF,EAAA5hB,EAAA6hB,GACA3R,EAAAlQ,EAAA6hB,GACApgC,MAwBA,SAAA4gC,EAAAriB,EAAAsiB,GACA,QAAA/jC,GAAA+jC,EACA,OACAC,MAAAviB,EAAAohB,YACAoB,OAAAxiB,EAAAyiB,cAGA,IAAAC,EAAA,eAAArF,EAAAnM,IAAAlR,EAAA,cACAxZ,GACA+7B,MAAAD,EAAAC,MACAC,OAAAF,EAAAE,QAEA,GAAAE,EAUA,CACA,IAAAC,EAAAtB,EAAArhB,QAEAzhB,IAAAiI,EAAA+7B,QACA/7B,EAAA+7B,MAAA/7B,EAAA+7B,MAAAI,EAAAzI,KAAAyI,EAAArI,YAGA/7B,IAAAiI,EAAAg8B,SACAh8B,EAAAg8B,OAAAh8B,EAAAg8B,OAAAG,EAAAlC,IAAAkC,EAAArB,YAlBA,CACA,IAAAsB,EAAAC,EAAA7iB,QAEAzhB,IAAAiI,EAAA+7B,QACA/7B,EAAA+7B,MAAA/7B,EAAA+7B,MAAAK,EAAA1I,KAAA0I,EAAAtI,YAGA/7B,IAAAiI,EAAAg8B,SACAh8B,EAAAg8B,OAAAh8B,EAAAg8B,OAAAI,EAAAnC,IAAAmC,EAAAtB,QAeA,OADAjE,EAAAnM,IAAAlR,EAAAxZ,GACA/E,KAkDA,SAAAqhC,EAAA1hB,GACA,IAAAN,EAAAM,EAAAN,gBACA1J,EAAAgK,EAAAhK,KACAmW,EAAAxiB,KAAAwiB,IACAwV,EAAAxV,EAAAzM,EAAAiiB,YAAA3rB,EAAA2rB,aACA3B,EAAA7T,EAAAzM,EAAAsgB,YAAAhqB,EAAAgqB,aACAnY,EAAAsE,EAAAzM,EAAAmI,YAAA7R,EAAA6R,aACA+Z,EAAAzV,EAAAzM,EAAAkiB,aAAA5rB,EAAA4rB,cACAP,EAAAlV,EAAAzM,EAAA2hB,aAAArrB,EAAAqrB,cACAle,EAAAgJ,EAAAzM,EAAAyD,aAAAnN,EAAAmN,cAEA,OACAge,MAAAQ,EAAA9Z,EAAAmY,EAAA2B,EACAP,OAAAQ,EAAAze,EAAAke,EAAAO,GAwBA,SAAAf,EAAAjiB,GACA,GAAAkB,EAAA1kB,SAAAwjB,GACA,OACAka,KAAA,EACAuG,IAAA,EACAnG,MAAA,EACAgH,OAAA,GAGA,IAAAC,EAAAzd,iBAAA9D,GACA,OACAka,KAAA6G,EAAAQ,EAAA0B,YACAxC,IAAAM,EAAAQ,EAAA2B,WACA5I,MAAAyG,EAAAQ,EAAA4B,aACA7B,OAAAP,EAAAQ,EAAA6B,eAkBA,SAAAC,EAAArjB,GACA,IAAAzkB,EAAA20B,EAAAlQ,GACA1I,EAAA2qB,EAAAjiB,GAEA,OACAuiB,MAAAhnC,EAAAgnC,MAAAjrB,EAAA4iB,KAAA5iB,EAAAgjB,MACAkI,OAAAjnC,EAAAinC,OAAAlrB,EAAAmpB,IAAAnpB,EAAAgqB,QAQA,SAAAuB,EAAA7iB,GACA,GAAAkB,EAAA1kB,SAAAwjB,GACA,OACAka,KAAA,EACAuG,IAAA,EACAnG,MAAA,EACAgH,OAAA,GAGA,IAAAC,EAAAzd,iBAAA9D,GACA,OACAka,KAAA6G,EAAAQ,EAAA+B,aACA7C,IAAAM,EAAAQ,EAAAgC,YACAjJ,MAAAyG,EAAAQ,EAAAiC,cACAlC,OAAAP,EAAAQ,EAAAkC,gBAUA,SAAAC,EAAA1jB,EAAA6hB,GACA,QAAAtjC,IAAAsjC,EAAA,CACA,IAAAtmC,EAAAykB,EAAA8hB,wBACA,OACA5H,KAAA3+B,EAAA2+B,KAAAz9B,OAAAknC,YACAlD,IAAAllC,EAAAklC,IAAAhkC,OAAAmnC,aAGA,IACAn9B,EAAAmd,EAAA5D,GAEA+hB,EAAA2B,EAAAj9B,GACAu7B,EAAAC,EAAAjiB,GACAkiB,EAAAb,EAAA56B,GAMA,OAJA07B,EAAAniB,GACAygB,IAAAoB,EAAApB,IAAAsB,EAAAtB,IAAAuB,EAAAvB,IAAAyB,EAAAzB,IACAvG,KAAA2H,EAAA3H,KAAA6H,EAAA7H,KAAA8H,EAAA9H,KAAAgI,EAAAhI,OAEAz4B,KA+BA,SAAA0gC,EAAAniB,EAAA6hB,GACA,QAAAtjC,GAAAsjC,EAAA,CACA,IACAp7B,EAAAmd,EAAA5D,GAEAza,EAAAq8B,EAAA5hB,GACA+hB,EAAAH,EAAAn7B,GAEAy7B,GADAD,EAAAjiB,GACAqhB,EAAA56B,IAGA,OACAg6B,IAAAl7B,EAAAk7B,IAAAsB,EAAAtB,IAAAyB,EAAAzB,IACAvG,KAAA30B,EAAA20B,KAAA6H,EAAA7H,KAAAgI,EAAAhI,MAGA,IAAA1zB,GACAi6B,IAAAoB,EAAApB,IACAvG,KAAA2H,EAAA3H,MAOA,MAJA,UAAAmD,EAAAnM,IAAAlR,EAAA,cACAxZ,EAAA,SAAA,YAEA62B,EAAAnM,IAAAlR,EAAAxZ,GACA/E,KASA,SAAAoiC,EAAA7jB,EAAA6hB,GACA,QAAAtjC,IAAAsjC,EAAA,CACA,IACAp7B,EAAAmd,EAAA5D,GAEAza,EAAA68B,EAAApiB,GACA+hB,EAAAH,EAAAn7B,GAEAy7B,GADAD,EAAAjiB,GACAqhB,EAAA56B,IAGA,OACAg6B,IAAAl7B,EAAAk7B,IAAAsB,EAAAtB,IAAAyB,EAAAzB,IACAvG,KAAA30B,EAAA20B,KAAA6H,EAAA7H,KAAAgI,EAAAhI,KACAqI,MAAAh9B,EAAAg9B,MACAC,OAAAj9B,EAAAi9B,QAKA,OAFAL,EAAAniB,EAAA6hB,GACA3R,EAAAlQ,EAAA6hB,GACApgC,KAmDA,SAAAqiC,EAAA9jB,EAAA9jB,GACA,IAAA8jB,EAAA5jB,WACA4jB,EAAAA,EAAA6D,aAEA,IAAAkgB,EAAA,eAAA/jB,EACA,YAAAzhB,IAAArC,EACA6nC,EAAA/jB,EAAA8jB,WAAA9jB,EAAA2jB,aAEAI,EACA/jB,EAAA8jB,WAAA5nC,EAEA8jB,EAAAgkB,SAAA9nC,EAAA8jB,EAAAikB,SAEAxiC,MAQA,SAAAyiC,EAAAlkB,EAAA9jB,GACA,IAAA8jB,EAAA5jB,WACA4jB,EAAAA,EAAA6D,aAEA,IAAAsgB,EAAA,cAAAnkB,EAEA,YAAAzhB,IAAArC,EACAioC,EAAAnkB,EAAAkkB,UAAAlkB,EAAA4jB,aAEAO,EACAnkB,EAAAkkB,UAAAhoC,EAEA8jB,EAAAgkB,SAAAhkB,EAAAokB,QAAAloC,GAEAuF,MAQA,SAAAyuB,EAAAlQ,EAAAsiB,GACA,QAAA/jC,GAAA+jC,EACA,OAAA3mB,EAAAnf,SAAAwjB,IAEAuiB,MAAAviB,EAAAqkB,WACA7B,OAAAxiB,EAAAskB,aAGA3oB,EAAA1e,WAAA+iB,GACA8iB,EAAAntB,WAGA4sB,MAAAviB,EAAAiJ,YACAuZ,OAAAxiB,EAAAuE,cAIA,IAAAme,EAAA,eAAArF,EAAAnM,IAAAlR,EAAA,cACAxZ,GACA+7B,MAAAD,EAAAC,MACAC,OAAAF,EAAAE,QAEA,IAAAE,EAAA,CACA,IAAAE,EAAAC,EAAA7iB,GACA2iB,EAAAtB,EAAArhB,QAEAzhB,IAAAiI,EAAA+7B,OAAA,KAAA/7B,EAAA+7B,OAAA,OAAA/7B,EAAA+7B,QACA/7B,EAAA+7B,MAAA/7B,EAAA+7B,MAAAK,EAAA1I,KAAA0I,EAAAtI,MAAAqI,EAAAzI,KAAAyI,EAAArI,YAGA/7B,IAAAiI,EAAAg8B,QAAA,KAAAh8B,EAAAg8B,QAAA,OAAAh8B,EAAAg8B,SACAh8B,EAAAg8B,OAAAh8B,EAAAg8B,OAAAI,EAAAnC,IAAAmC,EAAAtB,OAAAqB,EAAAlC,IAAAkC,EAAArB,QAIA,OADAjE,EAAAnM,IAAAlR,EAAAxZ,GACA/E,KAmBA,SAAA8iC,IACA,OAAAA,EAifA,OA9eA5oB,EAAApa,MAAAgjC,GACAlD,cAAAA,EAEAO,iBAAAA,EAEAQ,aAAAA,EAEAK,aAtdA,SAAAziB,EAAA9jB,GACA,YAAAqC,GAAArC,EACAmmC,EAAAriB,GAAAwiB,OAEAH,EAAAriB,GACAwiB,OAAAtmC,KAmdAmmC,WAAAA,EAEAjB,YA3ZA,SAAAphB,EAAA9jB,GACA,YAAAqC,GAAArC,EACAmmC,EAAAriB,GAAAuiB,OAEAF,EAAAriB,GACAuiB,MAAArmC,IAEAuF,OAsZA+iC,YA9YA,SAAAxkB,GACA,IAAAykB,EAAApC,EAAAriB,GACA4iB,EAAAC,EAAA7iB,GAQA,OACAka,KAAA0I,EAAA1I,KACAuG,IAAAmC,EAAAnC,IACA8B,MAAAkC,EAAAlC,MAAAK,EAAA1I,KAAA0I,EAAAtI,MACAkI,OAAAiC,EAAAjC,OAAAI,EAAAnC,IAAAmC,EAAAtB,SAkYAwB,gBAAAA,EAEAN,OAtWA,SAAAxiB,EAAA9jB,GACA,YAAAqC,GAAArC,EACAg0B,EAAAlQ,GAAAwiB,QAEAtS,EAAAlQ,GACAwiB,OAAAtmC,IAEAuF,OAiWAwgC,cAAAA,EAEAyC,WAxUA,SAAA1kB,GACA,IAAAzkB,EAAAsoC,EAAA7jB,GACA1I,EAAA2qB,EAAAjiB,GAEA,OACAka,KAAA3+B,EAAA2+B,KACAuG,IAAAllC,EAAAklC,IACA8B,MAAAhnC,EAAAgnC,MAAAjrB,EAAA4iB,KAAA5iB,EAAAgjB,MACAkI,OAAAjnC,EAAAinC,OAAAlrB,EAAAmpB,IAAAnpB,EAAAgqB,SAkUA+B,WAAAA,EAEAzf,aAAAA,EAEAif,eAAAA,EAGAa,aAAAA,EAEAiB,SApQA,SAAA3kB,EAAA6hB,GACA,QAAAtjC,IAAAsjC,EAAA,CACA,IAAAtmC,EAAAykB,EAAA8hB,wBACA,OACA5H,KAAA3+B,EAAA2+B,KAAAz9B,OAAAknC,YACAlD,IAAAllC,EAAAklC,IAAAhkC,OAAAmnC,YACArB,MAAAx3B,KAAA65B,MAAArpC,EAAAgnC,OACAC,OAAAz3B,KAAA65B,MAAArpC,EAAAinC,SAKA,OAFAkB,EAAA1jB,EAAA6hB,GACA3R,EAAAlQ,EAAA6hB,GACApgC,MA2PA0gC,iBAAAA,EAEA0B,aAAAA,EAEA7C,eAAAA,EAEA6D,eAzLA,SAAA7kB,EAAA8kB,GAcA,IACAC,EAAAC,EAAAzC,EAAAC,EAAAyC,EAAAC,EADAC,EAAAnlB,EAAAM,WAEA8kB,EAfA,SAAAplB,EAAAqlB,GACA,IAAAN,EAAAC,EAAAv+B,EAAAuZ,EAEA+kB,EAAAC,EAAA,EACA,KAAAv+B,GAAAA,GAAA4+B,GAAA5+B,EAAArK,UACA2oC,GAAAt+B,EAAA6+B,YAAA,EACAN,GAAAv+B,EAAA8+B,WAAA,EACA9+B,EAAAA,EAAAmd,aAGA,OAAAmhB,EAAAA,EAAAC,EAAAA,GAKAQ,CAAAxlB,EAAAmlB,GAEAJ,EAAAK,EAAAL,EACAC,EAAAI,EAAAJ,EACAzC,EAAAviB,EAAAiJ,YACAuZ,EAAAxiB,EAAAuE,aACA0gB,EAAAE,EAAA/D,YACA8D,EAAAC,EAAA1C,aAEA,OAAAqC,GACAC,GAAAE,EAAA1C,EACAyC,GAAAE,EAAA1C,GACA,UAAAsC,IACAC,GAAAE,EAAA,EAAA1C,EAAA,EACAyC,GAAAE,EAAA,EAAA1C,EAAA,GAMA,OAHA2C,EAAArB,WAAAiB,EACAI,EAAAjB,UAAAc,EAEAvjC,MAuJAqiC,WAAAA,EAEAI,UAAAA,EAEAhU,KAAAA,EAEAqS,MAhEA,SAAAviB,EAAA9jB,GACA,YAAAqC,GAAArC,EACAg0B,EAAAlQ,GAAAuiB,OAEArS,EAAAlQ,GACAuiB,MAAArmC,IAEAuF,SA4DA,WACA,IAAA8rB,EAAAxiB,KAAAwiB,IACAkY,EAAA16B,KAAA06B,IACAC,EAAA,oBACAC,EAAA,oBACAC,EAAA,wBACAC,EAAA,OACAC,EAAA,KAEA,SAAAC,EAAAC,EAAAzD,EAAAC,GACA,OACArmB,WAAA6pB,EAAA,KAAAF,EAAArmC,KAAAumC,EAAA,IAAAzD,EAAA,IAAA,GACApmB,WAAA6pB,EAAA,KAAAF,EAAArmC,KAAAumC,EAAA,IAAAxD,EAAA,IAAA,IAIA,SAAAyD,EAAAjjB,EAAA2L,GACA,OAAA1vB,SAAAo+B,EAAAnM,IAAAlO,EAAA2L,GAAA,KAAA,EAqPA,IAAAuX,GACAC,KACAjM,KAAA,SAAAnW,EAAAnZ,GACA,IAMAw7B,EANAC,EAAAz7B,EAAAy7B,OACAC,EAAAD,EAAA7pC,SAAA6pC,EAAAvC,WAAAuC,EAAA9gC,OAAA20B,KACAqM,EAAAF,EAAA9D,MACAiE,EAAAziB,EAAAmW,KAAAtvB,EAAA67B,kBAAAxD,WACAyD,EAAAJ,EAAAE,EACAG,EAAAH,EAAA57B,EAAAg8B,eAAAL,EAAAD,EAIA17B,EAAAg8B,eAAAL,EAGAG,EAAA,GAAAC,GAAA,GACAP,EAAAriB,EAAAmW,KAAAwM,EAAA97B,EAAAg8B,eAAAL,EACAD,EACAviB,EAAAmW,MAAAwM,EAAAN,GAIAriB,EAAAmW,KADAyM,EAAA,GAAAD,GAAA,EACAJ,EAIAI,EAAAC,EACAL,EAAAC,EAAA37B,EAAAg8B,eAEAN,EAKAI,EAAA,EACA3iB,EAAAmW,MAAAwM,EAGAC,EAAA,EACA5iB,EAAAmW,MAAAyM,EAIA5iB,EAAAmW,KAAA3M,EAAAxJ,EAAAmW,KAAAsM,EAAAziB,EAAAmW,OAGAuG,IAAA,SAAA1c,EAAAnZ,GACA,IAMAi8B,EANAR,EAAAz7B,EAAAy7B,OACAC,EAAAD,EAAA7pC,SAAA6pC,EAAAnC,UAAAmC,EAAA9gC,OAAAk7B,IACAqG,EAAAl8B,EAAAy7B,OAAA7D,OACAuE,EAAAhjB,EAAA0c,IAAA71B,EAAA67B,kBAAAvD,UACA8D,EAAAV,EAAAS,EACAE,EAAAF,EAAAn8B,EAAAs8B,gBAAAJ,EAAAR,EAIA17B,EAAAs8B,gBAAAJ,EAGAE,EAAA,GAAAC,GAAA,GACAJ,EAAA9iB,EAAA0c,IAAAuG,EAAAp8B,EAAAs8B,gBAAAJ,EACAR,EACAviB,EAAA0c,KAAAuG,EAAAH,GAIA9iB,EAAA0c,IADAwG,EAAA,GAAAD,GAAA,EACAV,EAIAU,EAAAC,EACAX,EAAAQ,EAAAl8B,EAAAs8B,gBAEAZ,EAKAU,EAAA,EACAjjB,EAAA0c,KAAAuG,EAGAC,EAAA,EACAljB,EAAA0c,KAAAwG,EAIAljB,EAAA0c,IAAAlT,EAAAxJ,EAAA0c,IAAAsG,EAAAhjB,EAAA0c,OAIA0G,MACAjN,KAAA,SAAAnW,EAAAnZ,GACA,IAkBAw7B,EACAgB,EAnBAf,EAAAz7B,EAAAy7B,OACAC,EAAAD,EAAA9gC,OAAA20B,KAAAmM,EAAAvC,WACAyC,EAAAF,EAAA9D,MACA+C,EAAAe,EAAA7pC,SAAA6pC,EAAAvC,WAAAuC,EAAA9gC,OAAA20B,KACAsM,EAAAziB,EAAAmW,KAAAtvB,EAAA67B,kBAAAxD,WACAyD,EAAAF,EAAAlB,EACAqB,EAAAH,EAAA57B,EAAAg8B,eAAAL,EAAAjB,EACA+B,EAAA,SAAAz8B,EAAA08B,GAAA,IACA18B,EAAA28B,UACA,UAAA38B,EAAA08B,GAAA,GACA18B,EAAA28B,UACA,EACAC,EAAA,SAAA58B,EAAA68B,GAAA,GACA78B,EAAA88B,YACA,UAAA98B,EAAA68B,GAAA,IACA78B,EAAA88B,YACA,EACAniC,GAAA,EAAAqF,EAAArF,OAAA,GAIAmhC,EAAA,IACAN,EAAAriB,EAAAmW,KAAAmN,EAAAG,EAAAjiC,EAAAqF,EAAAg8B,eACAL,EAAAD,GACA,GAAAF,EAAAX,EAAAiB,MACA3iB,EAAAmW,MAAAmN,EAAAG,EAAAjiC,GAEAohC,EAAA,KACAS,EAAArjB,EAAAmW,KAAAtvB,EAAA67B,kBAAAxD,WAAAoE,EACAG,EAAAjiC,EAAA+/B,GACA,GAAAG,EAAA2B,GAAAT,KACA5iB,EAAAmW,MAAAmN,EAAAG,EAAAjiC,IAIAk7B,IAAA,SAAA1c,EAAAnZ,GACA,IAmBA+8B,EACAd,EApBAR,EAAAz7B,EAAAy7B,OACAC,EAAAD,EAAA9gC,OAAAk7B,IAAA4F,EAAAnC,UACA4C,EAAAT,EAAA7D,OACA+C,EAAAc,EAAA7pC,SAAA6pC,EAAAnC,UAAAmC,EAAA9gC,OAAAk7B,IACAsG,EAAAhjB,EAAA0c,IAAA71B,EAAA67B,kBAAAvD,UACA8D,EAAAD,EAAAxB,EACA0B,EAAAF,EAAAn8B,EAAAs8B,gBAAAJ,EAAAvB,EACA9E,EAAA,QAAA71B,EAAA08B,GAAA,GACAD,EAAA5G,GACA71B,EAAAg9B,WACA,WAAAh9B,EAAA08B,GAAA,GACA18B,EAAAg9B,WACA,EACAJ,EAAA,QAAA58B,EAAA68B,GAAA,GACA78B,EAAAi9B,aACA,WAAAj9B,EAAA68B,GAAA,IACA78B,EAAAi9B,aACA,EACAtiC,GAAA,EAAAqF,EAAArF,OAAA,GAGAyhC,EAAA,IACAH,EAAA9iB,EAAA0c,IAAA4G,EAAAG,EAAAjiC,EAAAqF,EAAAs8B,gBACAJ,EAAAR,GACA,GAAAO,EAAApB,EAAAuB,MACAjjB,EAAA0c,KAAA4G,EAAAG,EAAAjiC,GAEA0hC,EAAA,KACAU,EAAA5jB,EAAA0c,IAAA71B,EAAA67B,kBAAAvD,UAAAmE,EAAAG,EACAjiC,EAAAggC,GACA,GAAAE,EAAAkC,GAAAV,KACAljB,EAAA0c,KAAA4G,EAAAG,EAAAjiC,KAKAuiC,SACA5N,KAAA,WACAgM,EAAAiB,KAAAjN,KAAA14B,MAAAC,KAAAN,WACA+kC,EAAAC,IAAAjM,KAAA14B,MAAAC,KAAAN,YAEAs/B,IAAA,WACAyF,EAAAiB,KAAA1G,IAAAj/B,MAAAC,KAAAN,WACA+kC,EAAAC,IAAA1F,IAAAj/B,MAAAC,KAAAN,cAKAojC,EAAAwD,MAhWA,SAAA/nB,EAAArZ,GAIA,IAAA6gC,EAAAE,EAAAG,EAAAG,EAAAC,EAAAC,EACAtnC,GAHA+F,EAAAgV,EAAA/Y,UAAA+D,IAGAwhC,GACA9B,GAxBArjB,EAwBArc,EAAA0/B,OAvBA+B,EAAAplB,GAAAvmB,OACAD,EAAA0kB,EAAA1kB,SAAA4rC,GACAnrC,IAAAmrC,GAAA,IAAAA,EAAAhsC,SACAisC,GAAA7rC,IAAAS,EACAqrC,EAAAjF,EAAA+E,IAEAplB,QAAAolB,EACA5rC,SAAAA,EACAS,WAAAA,EACAsI,OAAA8iC,EAAA3E,EAAA1gB,IAAAkX,KAAA,EAAAuG,IAAA,GACAqD,WAAAA,EAAAsE,GACAlE,UAAAA,EAAAkE,GACA7F,MAAA+F,EAAA/F,MACAC,OAAA8F,EAAA9F,SAWA+F,EAxCA,SAAAlC,GACA,IAAAmC,EAAAnC,EAAA7pC,UAAA6pC,EAAAppC,WAAA,GACAogC,EAAAnM,IAAAmV,EAAArjB,QAAA,cACAylB,EAAApC,EAAA7pC,UAAA6pC,EAAAppC,WAAA,GACAogC,EAAAnM,IAAAmV,EAAArjB,QAAA,cACA0lB,EAAA,WAAAF,GACA,SAAAA,GAAAnC,EAAA9D,MAAAQ,YAAAsD,EAAArjB,SAGA,OACAuf,MAHA,WAAAkG,GACA,SAAAA,GAAApC,EAAA7D,OAAAQ,aAAAqD,EAAArjB,SAEAge,IAAA,EACAwB,OAAAkG,EAAA1H,IAAA,GA6BA2H,CAAAtC,GACAuC,GAAAjiC,EAAAiiC,WAAA,QAAA7tC,MAAA,KACAirC,KA3BA,IAAAhjB,EACAolB,EACA5rC,EACAS,EACAorC,EACAC,EAtDAviB,EA8EAnlB,EAAAsnC,EA7EA,IAAAniB,EAAA3pB,UAEA8zB,KAAAA,EAAAnK,GACAxgB,QAAAk7B,IAAA,EAAAvG,KAAA,IAGAhZ,EAAA1kB,SAAAupB,IAEAmK,KAAAA,EAAAnK,GACAxgB,QACAk7B,IAAAyD,EAAAne,GACAmU,KAAA4J,EAAA/d,KAIAA,EAAAgN,gBAEA7C,MACAqS,MAAA,EACAC,OAAA,GAEAj9B,QACAk7B,IAAA1a,EAAA8iB,MACA3O,KAAAnU,EAAA+iB,SAKA5Y,KAAAA,EAAAnK,GACAxgB,OAAAm+B,EAAA3d,IAiDAnlB,EAAAmyB,iBAGApsB,EAAA8gC,GAAA,YAlFA,IAAA1hB,EAoFA2hB,EAAAQ,EAAAhY,KAAAqS,MACAsF,EAAAK,EAAAhY,KAAAsS,OACAwF,EAAAE,EAAA3iC,OAGA0iC,EAAAtsB,EAAA/Y,UAAAolC,GAIArsB,EAAAlZ,MAAA,KAAA,MAAA,WACA,IACAsmC,EACAC,EAFA5D,GAAAz+B,EAAAlF,OAAA,IAAA1G,MAAA,KAIA,IAAAqqC,EAAApqC,SACAoqC,EAAAM,EAAAjmC,KAAA2lC,EAAA,IACAA,EAAA3/B,QAAA,WACAkgC,EAAAlmC,KAAA2lC,EAAA,KACA,UAAA3/B,OAAA2/B,IACA,SAAA,WAEAA,EAAA,GAAAM,EAAAjmC,KAAA2lC,EAAA,IAAAA,EAAA,GAAA,SACAA,EAAA,GAAAO,EAAAlmC,KAAA2lC,EAAA,IAAAA,EAAA,GAAA,SAGA2D,EAAAnD,EAAA9vB,KAAAsvB,EAAA,IACA4D,EAAApD,EAAA9vB,KAAAsvB,EAAA,IACAY,EAAAvkC,OACAsnC,EAAAA,EAAA,GAAA,EACAC,EAAAA,EAAA,GAAA,GAIAriC,EAAAlF,OACAokC,EAAA/vB,KAAAsvB,EAAA,IAAA,GACAS,EAAA/vB,KAAAsvB,EAAA,IAAA,MAKA,IAAAwD,EAAA5tC,SACA4tC,EAAA,GAAAA,EAAA,IAGA,UAAAjiC,EAAA8gC,GAAA,GACAQ,EAAA/N,MAAAwN,EACA,WAAA/gC,EAAA8gC,GAAA,KACAQ,EAAA/N,MAAAwN,EAAA,GAGA,WAAA/gC,EAAA8gC,GAAA,GACAQ,EAAAxH,KAAAoH,EACA,WAAAlhC,EAAA8gC,GAAA,KACAQ,EAAAxH,KAAAoH,EAAA,GAOA,OAJAL,EAAAzB,EAAAC,EAAAyB,GAAAC,EAAAG,GACAI,EAAA/N,MAAAsN,EAAA,GACAS,EAAAxH,KAAA+G,EAAA,GAEA,SAAAxf,GACA,IAAAye,EAAAwC,EACAX,EAAAjF,EAAArb,GACAuf,EAAAe,EAAA/F,MACAqF,EAAAU,EAAA9F,OACAS,EAAAgD,EAAAje,EAAA,cACAkb,EAAA+C,EAAAje,EAAA,aACA4e,EAAAW,EAAAtE,EAAAgD,EAAAje,EAAA,eACAugB,EAAAhG,MACA2E,EAAAU,EAAA1E,EAAA+C,EAAAje,EAAA,gBACAugB,EAAA/F,OACAze,EAAApI,EAAA/Y,UAAAqlC,GACAZ,EAAAtB,EAAAC,EAAAsB,GAAAgB,EAAA/F,MAAA+F,EAAA9F,QAEA,UAAA77B,EAAA2gC,GAAA,GACAvjB,EAAAmW,MAAAqN,EACA,WAAA5gC,EAAA2gC,GAAA,KACAvjB,EAAAmW,MAAAqN,EAAA,GAGA,WAAA5gC,EAAA2gC,GAAA,GACAvjB,EAAA0c,KAAAmH,EACA,WAAAjhC,EAAA2gC,GAAA,KACAvjB,EAAA0c,KAAAmH,EAAA,GAGA7jB,EAAAmW,MAAAmN,EAAA,GACAtjB,EAAA0c,KAAA4G,EAAA,GAEAZ,GACAxD,WAAAA,EACAC,UAAAA,GAGAvnB,EAAAlZ,MAAA,OAAA,OAAA,SAAAvH,EAAAguC,GACAhD,EAAA0C,EAAA1tC,KACAgrC,EAAA0C,EAAA1tC,IAAAguC,GAAAnlB,GACA2jB,YAAAA,EACAG,aAAAA,EACAN,UAAAA,EACAK,WAAAA,EACAnB,kBAAAA,EACAG,eAAAA,EACAM,gBAAAA,EACA3hC,QAAAiiC,EAAA,GAAAH,EAAA,GAAAG,EAAA,GAAAH,EAAA,IACAC,GAAA3gC,EAAA2gC,GACAG,GAAA9gC,EAAA8gC,GACApB,OAAAA,EACAre,KAAAA,MAKArhB,EAAAsiC,QAGAA,EAAA,SAAAziC,GACA,IAAA0zB,EAAA8N,EAAA9N,KAAAnW,EAAAmW,KACAI,EAAAJ,EAAAwN,EAAAH,EACA9G,EAAAuH,EAAAvH,IAAA1c,EAAA0c,IACAa,EAAAb,EAAAoH,EAAAD,EACAuB,GACAvoC,QACAoiB,QAAApiB,EACAs5B,KAAA8N,EAAA9N,KACAuG,IAAAuH,EAAAvH,IACA8B,MAAAmF,EACAlF,OAAAqF,GAEA7kB,SACAA,QAAAgF,EACAkS,KAAAnW,EAAAmW,KACAuG,IAAA1c,EAAA0c,IACA8B,MAAAgF,EACA/E,OAAAoF,GAEAwB,WAAA9O,EAAA,EAAA,OAAAJ,EAAA,EAAA,QAAA,SACAmP,SAAA/H,EAAA,EAAA,MAAAb,EAAA,EAAA,SAAA,UAEAiH,EAAAH,GAAA9B,EAAAvL,EAAAI,GAAAoN,IACAyB,EAAAC,WAAA,UAEAvB,EAAAD,GAAAnC,EAAAhF,EAAAa,GAAAuG,IACAsB,EAAAE,SAAA,UAEA9b,EAAAkY,EAAAvL,GAAAuL,EAAAnL,IAAA/M,EAAAkY,EAAAhF,GAAAgF,EAAAnE,IACA6H,EAAAG,UAAA,aAEAH,EAAAG,UAAA,WAEA3iC,EAAAsiC,MAAAltC,KAAA0F,KAAA+E,EAAA2iC,KAIAzF,EAAA1b,EAAArM,EAAA/Y,OAAAmhB,GAAAklB,MAAAA,KA9FA,CA+FAjpB,IAnQA,GA0bA3kB,EAAAC,OAAA,YAAAipC,KAEA5pC,OAAA,0BACA,sBACA,SACA,oBACA,sBACA,SAAAghB,EAAA4oB,EAAA1Q,EAAAvQ,GAqHA,OAnHAuQ,EAAAzqB,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAm7B,GAEAjhB,EAAAzd,GAAAN,OAAA+d,EAAAiQ,MAAA1D,cAAA0U,EAAAb,aAAAa,EAAAA,EAAAb,cAEApgB,EAAAzd,GAAAq+B,UAAA5gB,EAAAiQ,MAAA1D,cAAA0U,EAAAL,UAAAK,GAEAjhB,EAAAzd,GAAAi+B,WAAAxgB,EAAAiQ,MAAA1D,cAAA0U,EAAAT,WAAAS,GAEAjhB,EAAAzd,GAAAke,SAAA,SAAApd,GACA,IAAAlF,KAAAzG,OACA,OAAAyG,KAGA,GAAAkF,EAKA,OAJAA,EAAAwhC,IAAAxhC,EAAAwhC,GAAAntC,UACA2L,EAAAgV,EAAAxZ,MAAAwE,IACAwhC,GAAAxhC,EAAAwhC,GAAA,IAEA1mC,KAAAgB,KAAA,WACA8hC,EAAAwD,MAAAtmC,KAAAkF,KAGA,IAAAqhB,EAAAvmB,KAAA,GAEA,OAAA8iC,EAAApC,iBAAAna,IAKA1E,EAAAzd,GAAA+d,aAAAN,EAAAiQ,MAAA/D,YAAA+U,EAAA3gB,aAAA2gB,GAGAjhB,EAAAzd,GAAAqqB,KAAA5M,EAAAiQ,MAAA1D,cAAA0U,EAAArU,KAAAqU,GAEAjhB,EAAAzd,GAAA08B,MAAAjf,EAAAiQ,MAAA1D,cAAA0U,EAAAhC,MAAAgC,EAAAA,EAAAhC,OAEAjf,EAAAzd,GAAA28B,OAAAlf,EAAAiQ,MAAA1D,cAAA0U,EAAA/B,OAAA+B,EAAAA,EAAA/B,QAEAlf,EAAAzd,GAAAw8B,WAAA/e,EAAAiQ,MAAA1D,cAAA0U,EAAAlC,WAAAkC,EAAAlC,aAEA,QAAA,UAAAzmC,QAAA,SAAA0mC,GACA,IAAAiH,EAAAjH,EAAA/iC,QAAA,IAAA,SAAAiqC,GACA,OAAAA,EAAA,GAAA5xB,gBAGA0L,EAAAzd,GAAA,QAAA0jC,GAAA,SAAAE,EAAAvtC,GAWA,GAVAiF,UAAAnG,OACA,kBAAAyuC,IACAvtC,EAAAutC,EACAA,GAAA,IAGAA,GAAA,EACAvtC,OAAAqC,QAGAA,IAAArC,EAAA,CACA,IAAAmlB,EAAA5f,KAAA,GACA,IAAA4f,EACA,OAEA,IAAAqoB,EAAAnF,EAAArU,KAAA7O,GACA,GAAAooB,EAAA,CACA,IAAAnyB,EAAAitB,EAAAtC,cAAA5gB,GACAqoB,EAAAnH,MAAAmH,EAAAnH,MAAAjrB,EAAA4iB,KAAA5iB,EAAAgjB,MACAoP,EAAAlH,OAAAkH,EAAAlH,OAAAlrB,EAAAmpB,IAAAnpB,EAAAgqB,OAEA,MAAA,UAAAgB,EAAAoH,EAAAnH,MAAAmH,EAAAlH,OAEA,OAAA/gC,KAAAgB,KAAA,SAAAuB,EAAAqd,GACA,IAAAsoB,KACAryB,EAAAitB,EAAAtC,cAAA5gB,GACA,UAAAihB,GACAqH,EAAApH,MAAArmC,EACAutC,IACAE,EAAApH,MAAAoH,EAAApH,MAAAjrB,EAAA4iB,KAAA5iB,EAAAgjB,SAGAqP,EAAAnH,OAAAtmC,EACAutC,IACAE,EAAAnH,OAAAmH,EAAAnH,OAAAlrB,EAAAmpB,IAAAnpB,EAAAgqB,SAGAiD,EAAArU,KAAA7O,EAAAsoB,QAOArmB,EAAAzd,GAAAw+B,WAAA/gB,EAAAiQ,MAAA1D,cAAA0U,EAAAnD,YAAAmD,EAAAA,EAAAnD,aAEA9d,EAAAzd,GAAAy+B,YAAAhhB,EAAAiQ,MAAA1D,cAAA0U,EAAA9B,aAAA8B,EAAAA,EAAA9B,cAEA8B,IAEA5pC,OAAA,qBAAA,0BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,sBACA,wBACA,sBACA,uBACA,qBACA,oBACA,sBACA,wBACA,SAAAU,EAAAsgB,EAAAxG,EAAA+L,EAAAqjB,EAAAlH,EAAA3C,GACA,IAAAkP,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EAEAC,EAAAh1B,EAAAsJ,kBAAA,gBACAkc,EAAAxlB,EAAAsJ,kBAAA,iBAEA2rB,EAAA,8EACA3xB,EAAAtD,EAAA4H,eAAA,YACAstB,KAwBA,SAAAC,EAAAtqB,EAAAuqB,EAAAC,EAAAC,EAAA/nC,EAAAgoC,GACA,IAAAlqC,EAKAmqC,EACAC,EALAC,KACAC,KACAC,EAAA,GACAC,EAAAvpC,KAGAwpC,GAAA,EACA9G,GAAA,EAkCA,GA/BAxoB,EAAAre,cAAAktC,KACAC,EAAAD,EAAAU,OACAxoC,EAAA8nC,EAAAW,SACAT,EAAAF,EAAAE,MACAF,EAAAA,EAAAA,UAGA7uB,EAAApf,SAAAiuC,KACAA,EAAAY,EAAAC,OAAAb,SAEAjsC,IAAAisC,IACAA,EAAAY,EAAAC,OAAAC,QAEAd,GAAA,IACAY,EAAA72B,MACAi2B,EAAA,GAGA7uB,EAAA1f,WAAAwuC,IACA/nC,EAAA+nC,EACAc,KAAA,SAEAd,EAAAA,GAAA,QAGAC,EACAA,GAAA,IAEAA,EAAA,EAGA/uB,EAAApf,SAAAguC,GAEAM,EAAAjB,GAAAW,EACAM,EAAAhB,GAAAW,EAAA,IACAK,EAAAf,GAAAW,EACAE,EAAAR,MACA,CAEA,IAAA3pC,KAAA+pC,EAAA,CACA,IAAAryB,EAAAqyB,EAAA/pC,GACA,GAAA4pC,EAAA3qC,KAAAe,GACAuqC,GAAAvqC,EAAA,IAAA0X,EAAA,SACA,CAIA,GAHA,cAAA1X,IACA2jC,GAAA,GAEA,QAAA3jC,GAAAmb,EAAAre,cAAA4a,IAEA,GADA2yB,EAAArqC,GAAA,QAAA0X,EAAAuoB,IAAA,MAAAvoB,EAAAoiB,MAAA,MAAApiB,EAAAopB,OAAA,MAAAppB,EAAAgiB,KAAA,MACA,QAAAmD,EAAAnM,IAAAlR,EAAA,QAAA,CACA,IAAAkQ,EAAAqU,EAAArU,KAAAlQ,GACAqd,EAAAnM,IAAAlR,EAAA,OAAA,YAAAkQ,EAAAqS,MAAA,MAAArS,EAAAsS,OAAA,YACA,QAIAqI,EAAArqC,GAAA0X,EAEA4yB,EAAArqC,KAAAkb,EAAA9D,UAAArX,KAGAmqC,EAAAhQ,EA8DA,OA3DAoQ,IACAF,EAAApyB,GAAAsyB,EACAD,EAAArqC,KAAAgY,IAGA+xB,EAAA,GAAA7uB,EAAAre,cAAAitC,KACAM,EAAAd,GAAAe,EAAAl8B,KAAA,MACAi8B,EAAAb,GAAAQ,EAAA,IACAK,EAAAX,GAAAQ,EAAA,IACAG,EAAAZ,GAAAQ,GAGAG,EAAA,SAAA93B,GAEA,GADAm4B,GAAA,EACAn4B,EAAA,CACA,GAAAA,EAAAlS,SAAAkS,EAAA4lB,cACA,OAEAgC,EAAAnmB,IAAAzB,EAAAlS,OAAA+pC,EAAAC,QAEAlQ,EAAAnmB,IAAAyL,EAAAmqB,EAAAS,GAEAvN,EAAAnM,IAAAlR,EAAAqqB,GAIA3nC,GAAAA,EAAA3G,KAAA0F,OAGA+oC,EAAA,IACA9P,EAAAznB,GAAA+M,EAAA2qB,EAAAC,GAGAjvB,EAAAjO,SAAA,WACAu9B,GAGAL,EAAA7uC,KAAAivC,IACA,KAAAR,EAAAE,GAAA,GALA/uB,IASAqE,EAAAwrB,WAEAnO,EAAAnM,IAAAlR,EAAA6qB,GAEAL,GAAA,GACA7uB,EAAAjO,SAAA,WACAu9B,GAGAL,EAAA7uC,KAAAivC,IACA,EALArvB,GAQAwoB,GACAsH,EAAAzrB,EAAAuqB,EAAA,UAAAC,EAAA9nC,GAGAjB,KASA,SAAA0vB,EAAAnR,EAAA0rB,EAAAhpC,GAUA,OATA26B,EAAAlM,KAAAnR,GACA0rB,KACAhpC,GAAAiZ,EAAA1f,WAAAyvC,KACAhpC,EAAAgpC,EACAA,EAAA,UAEArO,EAAAnM,IAAAlR,EAAA,UAAA,GACAsqB,EAAAtqB,GAAA0c,QAAA,EAAAiP,MAAA,OAAAD,EAAAhpC,IAEAjB,KAUA,SAAA2vB,EAAApR,EAAA0rB,EAAAhpC,GAeA,OAdAgpC,IACAhpC,GAAAiZ,EAAA1f,WAAAyvC,KACAhpC,EAAAgpC,EACAA,EAAA,UAEApB,EAAAtqB,GAAA0c,QAAA,EAAAiP,MAAA,OAAAD,EAAA,WACArO,EAAAjM,KAAApR,GACAtd,GACAA,EAAA3G,KAAAikB,MAIAqd,EAAAjM,KAAApR,GAEAve,KAUA,SAAAgqC,EAAAzrB,EAAAolB,EAAAsG,EAAAhpC,GACA,IAAAkpC,EAAA3sC,SAAA+gB,EAAAkkB,WACAhpC,EAAA,EAEA2wC,EAAA,IAAAH,EADA,EAEA1H,EAAA/kC,SAAAmmC,GAEA0G,EAAAC,YAAA,aACA7wC,GAEA2wC,IAAA7rB,EAAAkkB,WAAAF,EAAA4H,GAAAC,EAAA3wC,EAAA0wC,GAEA1wC,GAAA2wC,EAAA,IACAG,cAAAF,GACAppC,GAAAiZ,EAAAjO,SAAAhL,EAAA,IAAAiZ,KAXA,GAuCA,SAAAswB,EAAAjsB,EAAA0rB,EAAAhP,EAAAwO,EAAAxoC,GAEA,OADA4nC,EAAAtqB,GAAA0c,QAAAA,GAAAgP,EAAAR,EAAAxoC,GACAjB,KAWA,SAAAyqC,EAAAlsB,EAAA0rB,EAAAR,EAAAxoC,GACA,IAAA9B,EAAAy8B,EAAAnM,IAAAlR,EAAA,WAUA,OATApf,EAAA,EACAy8B,EAAAnM,IAAAlR,EAAA,UAAA,GAEApf,EAAA,EAEAy8B,EAAAlM,KAAAnR,GAEAisB,EAAAjsB,EAAA0rB,EAAA9qC,EAAAsqC,EAAAxoC,GAEAjB,KAUA,SAAA0qC,EAAAnsB,EAAA0rB,EAAAR,EAAAxoC,GACA,IACAyoC,EACAzO,EAAAW,EAAAnM,IAAAlR,EAAA,WACArZ,KAyBA,OAvBAgV,EAAAre,cAAAouC,IACA/kC,EAAAukC,OAAAQ,EAAAR,OACAvkC,EAAA6jC,SAAAkB,EAAAlB,SACAW,EAAAO,EAAAP,WAEAxkC,EAAA6jC,SAAAkB,EACAhpC,GACAyoC,EAAAzoC,EACAiE,EAAAukC,OAAAA,GAEAC,EAAAD,GAGAvkC,EAAAwkC,SAAA,WACA9N,EAAAnM,IAAAlR,EAAA,UAAA0c,GACAW,EAAAjM,KAAApR,GACAmrB,GACAA,EAAApvC,KAAAikB,IAIAisB,EAAAjsB,EAAArZ,EAAA,GAEAlF,KAyBA,SAAA2qC,EAAApsB,EAAAwqB,EAAA9nC,GAGA,IAAAqhB,EAAAsZ,EAAAnM,IAAAlR,EAAA,YAGAmR,EAAAnR,GAGAqd,EAAAnM,IAAAlR,GACA+D,SAAA,WACAsoB,WAAA,WAIA,IAAAnJ,EAAA7F,EAAAnM,IAAAlR,EAAA,cACAojB,EAAA/F,EAAAnM,IAAAlR,EAAA,iBACAujB,EAAAlG,EAAAnM,IAAAlR,EAAA,eACAyjB,EAAApG,EAAAnM,IAAAlR,EAAA,kBACAwiB,EAAAnF,EAAAnM,IAAAlR,EAAA,UA8BA,OA3BAqd,EAAAnM,IAAAlR,GACA+D,SAAAA,EACAsoB,WAAA,UACAC,SAAA,SACA9J,OAAA,EACAU,UAAA,EACAE,aAAA,EACAG,WAAA,EACAE,cAAA,IAIA6G,EAAAtqB,GACAwiB,OAAAA,EACAU,UAAAA,EACAE,aAAAA,EACAG,WAAAA,EACAE,cAAAA,IAEA+G,SAAAA,EACAW,SAAA,WACAzoC,GACAA,EAAAlB,MAAAwe,MAKAve,KASA,SAAA8qC,EAAAvsB,EAAAwqB,EAAA9nC,GAEA,GAAA6hC,EAAA/B,OAAAxiB,GAAA,EAAA,CAGAqd,EAAAnM,IAAAlR,EAAA,YAAA,IAGAwiB,EAAAnF,EAAAnM,IAAAlR,EAAA,UACAkjB,EAAA7F,EAAAnM,IAAAlR,EAAA,cACAojB,EAAA/F,EAAAnM,IAAAlR,EAAA,iBACAujB,EAAAlG,EAAAnM,IAAAlR,EAAA,eACAyjB,EAAApG,EAAAnM,IAAAlR,EAAA,kBAGAqd,EAAAnM,IAAAlR,GACAqsB,WAAA,UACAC,SAAA,SACA9J,OAAAA,EACAU,UAAAA,EACAE,aAAAA,EACAG,WAAAA,EACAE,cAAAA,IAIA6G,EAAAtqB,GACAwiB,OAAA,EACAU,UAAA,EACAE,aAAA,EACAG,WAAA,EACAE,cAAA,IAGA+G,SAAAA,EACAgC,OAAA,EACArB,SAAA,WACA/Z,EAAApR,GACAqd,EAAAnM,IAAAlR,GACAqsB,WAAA,UACAC,SAAA,SACA9J,OAAAA,EACAU,UAAAA,EACAE,aAAAA,EACAG,WAAAA,EACAE,cAAAA,IAEA/gC,GACAA,EAAAlB,MAAAwe,MAKA,OAAAve,KAsHA,SAAA2pC,IACA,OAAAA,EA6BA,OAvlBAf,EAAAT,EAAAz0B,EAAAqJ,qBAAA,mBACA6rB,EAAAR,EAAA10B,EAAAqJ,qBAAA,uBACA6rB,EAAAl1B,EAAAqJ,qBAAA,oBACA6rB,EAAAP,EAAA30B,EAAAqJ,qBAAA,8BAAA,GAEA6rB,EAAAN,EAAA50B,EAAAqJ,qBAAA,wBACA6rB,EAAAL,EAAA70B,EAAAqJ,qBAAA,wBACA6rB,EAAAH,EAAA/0B,EAAAqJ,qBAAA,qBACA6rB,EAAAJ,EAAA90B,EAAAqJ,qBAAA,+BAAA,GAqjBA7C,EAAApa,MAAA6pC,GACA72B,KAAA,EAEA82B,QACAC,OAAA,IACAmB,KAAA,IACAC,KAAA,KAGApC,QAAAA,EACAqC,qBA7GA,SAAA3sB,EAAAwqB,GACA,IAAAoC,GAAA,EACAlS,EAAAtnB,IAAA4M,EAAA,gBAAA,WACA4sB,GAAA,IASA,OAFA9+B,WALA,WACA8+B,GACAlS,EAAA9lB,QAAAoL,EAAA7K,EAAAuJ,QAAA7B,WAAA8B,MAGA6rB,GAEA/oC,MAkGAyqC,OAAAA,EACAC,QAAAA,EACAF,OAAAA,EACAY,WAtQA,SAAA7sB,EAAA0rB,EAAAoB,EAAAC,GACA1P,EAAAU,YAAA/d,GACAksB,EAAAlsB,EAAA0rB,EAAAR,OAAAxoC,UAEAypC,EAAAnsB,EAAA0rB,EAAAR,OAAAxoC,UAEA,OAAAjB,MAiQA2vB,KAAAA,EACAqa,YAAAA,EAEAW,UAAAA,EACAY,YAnIA,SAAAhtB,EAAAwqB,EAAA9nC,GAGA,GAAA6hC,EAAA/B,OAAAxiB,GACAosB,EAAApsB,EAAAwqB,EAAA9nC,GAIA6pC,EAAAvsB,EAAAwqB,EAAA9nC,GAEA,OAAAjB,MA0HA8qC,QAAAA,EACApb,KAAAA,EACA8b,MAhFA,SAAAjtB,EAAA9e,GAEA,IAKAgsC,EAJA3+B,GAFArN,EAAAA,OAEAqN,KAEA4+B,GADAjsC,EAAAkd,MACAld,EAAAisC,MACAzqC,EAAAxB,EAAAwB,SAGA0qC,EAAAlsB,EAAA7D,cAAA,OACAqP,MAAAxrB,EAAAa,WAAA,aAKAkrC,GApCA,SAAAjtB,EAAA9e,GACA,IAAAmsC,EAAAnsB,EAAA7D,cAAA,MAAAnc,GACAm8B,EAAAnM,IAAAmc,GACAtpB,SAAA,WACA0c,IAAA,EACAvG,KAAA,EACAqI,MAAA,OACAC,OAAA,OACA8K,OAAA,WACA5Q,QAAA,KAEA1c,EAAAO,YAAA8sB,GAsBAE,CAAAH,GACA1gB,MAAA,iBAEAxL,EAAA7D,cAAA,OACAqP,MAAA,WAEA8gB,EAAAtsB,EAAAmB,eAAA9T,GAAA,IACApD,EAAA,WACA+hC,IACAr/B,aAAAq/B,GACAA,EAAA,MAEAE,IACAlsB,EAAA/V,OAAAiiC,GACAA,EAAA,OAQAlsC,EAAAkd,OACAif,EAAAnM,IAAAkc,EAAAlsC,EAAAkd,OAEA6uB,EAAA1sB,YAAAitB,GACAJ,EAAA7sB,YAAA0sB,GACAjtB,EAAAO,YAAA6sB,GAKAD,IACAD,EAAAp/B,WALA,WACA3C,IACAzI,GAAAA,KAGAyqC,IAGA,OACAhiC,OAAAA,EACAsiC,OArBA,SAAAvsC,GACAA,GAAAA,EAAAqN,MAAA6+B,IACAI,EAAAE,UAAAxsC,EAAAqN,SAkDAyiB,OAzWA,SAAAhR,EAAA0rB,EAAAhpC,GACA26B,EAAAU,YAAA/d,GACAmR,EAAAnR,EAAA0rB,EAAAhpC,GAEA0uB,EAAApR,EAAA0rB,EAAAhpC,GAEA,OAAAjB,QAsWApG,EAAAC,OAAA,UAAA8vC,KAEAzwC,OAAA,wBACA,OACA,oBACA,sBACA,SAAAywC,EAAAvX,EAAAvQ,GAmCA,OAjCAuQ,EAAAzqB,UACA,UACA,uBACA,SACA,UACA,SACA,aACA,OACA,cACA,YACA,cACA,UACA,OACA,UACAgiC,GAEA9nB,EAAAzd,GAAAurB,KAAA9N,EAAAiQ,MAAA3D,kBAAAwb,EAAAha,KAAAga,GAEA9nB,EAAAzd,GAAAykC,QAAAhnB,EAAAiQ,MAAA3D,kBAAAwb,EAAAd,QAAAc,GACA9nB,EAAAzd,GAAA8mC,qBAAArpB,EAAAiQ,MAAA3D,kBAAAwb,EAAAuB,qBAAAvB,GAEA9nB,EAAAzd,GAAAsrB,KAAA7N,EAAAiQ,MAAA3D,kBAAAwb,EAAAja,KAAAia,GACA9nB,EAAAzd,GAAAurB,KAAA9N,EAAAiQ,MAAA3D,kBAAAwb,EAAAha,KAAAga,GACA9nB,EAAAzd,GAAA8nC,OAAArqB,EAAAiQ,MAAA3D,kBAAAwb,EAAAuC,OAAAvC,GACA9nB,EAAAzd,GAAAomC,OAAA3oB,EAAAiQ,MAAA3D,kBAAAwb,EAAAa,OAAAb,GACA9nB,EAAAzd,GAAAqmC,OAAA5oB,EAAAiQ,MAAA3D,kBAAAwb,EAAAc,OAAAd,GACA9nB,EAAAzd,GAAAsmC,QAAA7oB,EAAAiQ,MAAA3D,kBAAAwb,EAAAe,QAAAf,GACA9nB,EAAAzd,GAAAgnC,WAAAvpB,EAAAiQ,MAAA3D,kBAAAwb,EAAAyB,WAAAzB,GAEA9nB,EAAAzd,GAAAumC,UAAA9oB,EAAAiQ,MAAA3D,kBAAAwb,EAAAgB,UAAAhB,GACA9nB,EAAAzd,GAAAmnC,YAAA1pB,EAAAiQ,MAAA3D,kBAAAwb,EAAA4B,YAAA5B,GACA9nB,EAAAzd,GAAA0mC,QAAAjpB,EAAAiQ,MAAA3D,kBAAAwb,EAAAmB,QAAAnB,GAEAA,IAEAzwC,OAAA,mBAAA,wBAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,gCACA,wBACA,sBACA,qBACA,oBACA,uBACA,sBACA,oBACA,sBACA,kBACA,qBACA,qBACA,SAAAU,EAAAsgB,EAAAuF,EAAAqN,EAAAmM,EAAAxO,EAAAqY,EAAAlH,EAAA+N,EAAA9nB,EAAAsqB,GACA,aAEA,IAAAluC,EAAA7C,MAAAY,UAAAiC,MAEAmuC,GADAhxC,MAAAY,UAAAgI,WAEAo1B,KAKA,SAAAvH,EAAAtT,EAAA8tB,EAAAnnC,GACA,IAAAonC,EAAAD,EAAA/yC,MAAA,KACAizC,EAAAD,EAAA,GACAD,EAAAC,EAAA,GAEAC,IACAA,EAAAF,GAGA,IAAAG,EAAA1f,EAAA3jB,KAAAoV,EAAAguB,GAEA,GAAA,aAAArnC,EACA,OAAAsnC,EACA,GAAA,YAAAtnC,EAAA,CACA,IAAAsnC,EACA,MAAA,IAAAnnC,MAAA,sCAEAmnC,EAAAC,UACA3f,EAAAO,WAAA9O,EAAA8tB,GACAG,OAAA1vC,OAEA,GAAA0vC,EAOAtnC,GACAsnC,EAAAtkB,MAAAhjB,OARA,CACA,QAAApI,IAAAoI,GAAA,iBAAAA,EACA,MAAA,IAAAG,MAAA,sCAEA,IAAAqnC,EAAAN,EAAAC,GACAG,EAAA,IAAAE,EAAAnuB,EAAArZ,GACA4nB,EAAA3jB,KAAAoV,EAAAguB,EAAAC,GAMA,OAAAA,EAqGA,IAAAG,EAAAzyB,EAAA7G,QAAArM,SACAb,UAAA,SAEAtB,WAAA,SAAA0Z,EAAArZ,GACAlF,KAAAmyB,KAAA5T,EACAve,KAAA4sC,aAAA1nC,IAGA0nC,aAAA,SAAA1nC,GACA,IAAAE,EAAApF,KAAA7E,YACAiN,EAAAhD,EAAAgD,MAAAhD,EAAAgD,UACA1J,EAAA0J,EAAA1J,SACA,IAAAA,EAAA,CACA,IAAAmuC,KACA,EAAA,CAEA,GADAA,EAAAtnC,QAAAH,GACAA,IAAAunC,EACA,MAEAvnC,EAAAA,EAAAI,iBACAJ,GAEA1G,EAAA0J,EAAA1J,YACA,IAAA,IAAAjF,EAAA,EAAAA,EAAAozC,EAAAtzC,OAAAE,KACA2L,EAAAynC,EAAApzC,IACAuC,UAAAwC,eAAA,YACA0b,EAAApa,MAAApB,EAAA0G,EAAApJ,UAAAkJ,SAAA,GAEAE,EAAA5G,eAAA,YACA0b,EAAApa,MAAApB,EAAA0G,EAAAF,SAAA,GASA,OALApJ,OAAAgL,eAAA9G,KAAA,WACAvF,MAAAyf,EAAApa,SAAApB,EAAAwG,GAAA,KAIAlF,KAAAkF,SAIAunC,QAAA,WAGAzsC,KAAA8sC,WAGAhgB,EAAAO,WAAArtB,KAAAmyB,KAAAnyB,KAAAqsC,aAGAS,SAAA5yB,EAAAxN,KAEAqgC,OAAA,SAAAl/B,EAAAo7B,GAKA,IAAA+D,EAAAhtC,KACA,OAAAqM,WALA,WACA,OAAA,iBAAAwB,EAAAm/B,EAAAn/B,GAAAA,GACA9N,MAAAitC,EAAAttC,YAGAupC,GAAA,IAGAtd,OAAA,SAAA5sB,EAAAtE,GACA,IACAoqB,EACAooB,EACAxzC,EAHAyL,EAAAnG,EAKA,GAAA,IAAAW,UAAAnG,OAGA,OAAA2gB,EAAApa,SAAAE,KAAAkF,SAGA,GAAA,iBAAAnG,EAMA,GAHAmG,KACA2f,EAAA9lB,EAAAzF,MAAA,KACAyF,EAAA8lB,EAAAllB,QACAklB,EAAAtrB,OAAA,CAEA,IADA0zC,EAAA/nC,EAAAnG,GAAAmb,EAAApa,SAAAE,KAAAkF,QAAAnG,IACAtF,EAAA,EAAAA,EAAAorB,EAAAtrB,OAAA,EAAAE,IACAwzC,EAAApoB,EAAAprB,IAAAwzC,EAAApoB,EAAAprB,QACAwzC,EAAAA,EAAApoB,EAAAprB,IAGA,GADAsF,EAAA8lB,EAAAjlB,MACA,IAAAF,UAAAnG,OACA,YAAAuD,IAAAmwC,EAAAluC,GAAA,KAAAkuC,EAAAluC,GAEAkuC,EAAAluC,GAAAtE,MACA,CACA,GAAA,IAAAiF,UAAAnG,OACA,YAAAuD,IAAAkD,KAAAkF,QAAAnG,GAAA,KAAAiB,KAAAkF,QAAAnG,GAEAmG,EAAAnG,GAAAtE,EAMA,OAFAuF,KAAAktC,YAAAhoC,GAEAlF,MAGAktC,YAAA,SAAAhoC,GACA,IAAAnG,EAEA,IAAAA,KAAAmG,EACAlF,KAAAmtC,WAAApuC,EAAAmG,EAAAnG,IAGA,OAAAiB,MAGAmtC,WAAA,SAAApuC,EAAAtE,GAIA,OAFAuF,KAAAkF,QAAAnG,GAAAtE,EAEAuF,MAGAotC,OAAA,SAAA11B,GACAA,EAAAA,GAAA,SACA,GAAAA,MAAA,IAAApO,KAAAC,gBACA2K,SAAA8B,eAAA0B,IACA,OAAAA,GAGA6G,IAAA,WACA,OAAAve,KAAAmyB,QAsBA,SAAAP,IACA,OAAAA,EAUA,OA5BA/P,EAAAzd,GAAAstB,OAAA,SAAAh4B,EAAAwL,GACA,IAAA1F,EAAAvB,EAAA3D,KAAAoF,UAAA,GACAuO,EAAAjO,KACA2xB,EAAA3xB,KAKA,OAHAA,KAAAgB,KAAA,WACA2wB,EAAAE,EAAA9xB,MAAAkO,GAAAjO,KAAAtG,GAAAsK,OAAAxE,MAEAmyB,GAGAwa,EAAA9lC,QAAA,SAAA,SAAA3M,EAAAwL,GACA,IAAA1F,EAAAvB,EAAA3D,KAAAoF,UAAA,GACA,OAAAmyB,EAAA9xB,MAAAC,MAAAA,KAAAqtC,QAAA3zC,GAAAsK,OAAAxE,MAQA0a,EAAApa,MAAA8xB,GACAC,YAAAA,EACA8a,OAAAA,EACAjV,SA/MA,SAAAgV,EAAAY,EAAAf,EAAAgB,GACA,IAAAlB,EAAAK,EAAA1wC,UAAAqwC,WAIA,GAFAD,EAAAC,GAAAK,EAEAY,EAAA,CACAf,GAAAryB,EAAA1f,WAAA+xC,KACAgB,EAAAhB,EACAA,EAAA,MAEAA,IACAF,EAAAA,EAAA,IAAAE,GAGA,IAAAhT,EAAAH,EAAAkU,GA9DA,SAAAjB,EAAAkB,GAKA,OAAA,SAAAhvB,EAAArZ,GACA,IAAAwsB,EAAAG,EAAAtT,EAAA8tB,EAAA,YACA,GAAA,aAAAnnC,EACA,OAAAwsB,GAAA,KAGA,IAAAA,IACAA,EAAAG,EAAAtT,EAAA8tB,EAAA,iBAAAnnC,GAAAA,OACA,iBAAAA,GACA,OAAAlF,KAGA,GAAAkF,EAAA,CACA,IAAA1F,EAAAvB,EAAA3D,KAAAoF,UAAA,GACA,GAAA6tC,EACA,OAAAA,EAAAxtC,MAAA2xB,EAAAlyB,GAEA,GAAA,iBAAA0F,EAAA,CACA,IAAA6E,EAAA7E,EAEA,IAAAwsB,EACA,MAAA,IAAArsB,MAAA,0BAAAgnC,EACA,uDACAtiC,EAAA,KAGA,IAAAmQ,EAAA1f,WAAAk3B,EAAA3nB,KAAA,MAAAA,EAAA4M,OAAA,GACA,MAAA,IAAAtR,MAAA,mBAAA0E,EAAA,SAAAsiC,EACA,oBAGA,OAAA3a,EAAA3nB,GAAAhK,MAAA2xB,EAAAlyB,MA0BAguC,CAAAnB,EAAAkB,GAEA1rB,EAAAzd,GAAAkpC,GAAA,SAAApoC,GACA,IAAAysB,EAAA3xB,KAEA,GAAAA,KAAAzG,QAAA,aAAA2L,EAEA,CACA,IAAA1F,EAAAvB,EAAA3D,KAAAoF,WACAM,KAAAgB,KAAA,WACA,IAAAysC,EAAAxvC,EAAA3D,KAAAkF,GACAiuC,EAAAloC,QAAAvF,MACA,IAAA6G,EAAA0yB,EAAAx5B,WAAAjD,EAAA2wC,GACA,QAAA3wC,IAAA+J,EAEA,OADA8qB,EAAA9qB,GACA,SATA8qB,OAAA70B,EAcA,OAAA60B,GAGAwa,EAAA9lC,QAAAinC,EAAA,SAAApoC,GACA,IAAA2B,EAAA0yB,EAAAv5B,KAAAmyB,KAAAjtB,GAIA,YAHApI,IAAA+J,IACAA,EAAA7G,MAEA6G,MAsKAuyB,UAAAA,IAGAx/B,EAAAC,OAAA,eAAA+3B,KAEA14B,OAAA,6BACA,aACA,SAAA04B,GACA,OAAAA,IAEA14B,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,uCACA,yBACA,SAAAU,GACA,OAAAA,EAAAC,OAAA,yBAEAX,OAAA,sCACA,wBACA,iBACA,SAAAma,EAAAq6B,GAEA,IAAAC,EAAAD,EAAAC,WAAAt6B,EAAArM,SAEAb,UAAA,aAEAynC,OAAA,WACA,MAAA,IAAAvoC,MAAA,sBAGA6T,MAAA,WASA,OAFAlZ,KAAA4tC,SACA5tC,KAAAmT,QAAA,iBACAnT,MAOA6I,MAAA,WAGA,IAFA,IAAAyM,EAAA,EACAu4B,EAAA7tC,KAAA8tC,YACAD,EAAAE,WACAz4B,IAEA,OAAAA,GAGAnb,QAAA,SAAAsJ,EAAAuqC,GAgBA,IADA,IAAAH,EAAA7tC,KAAA8tC,WACAD,EAAAE,WAAA,CACA,IAAAzrC,EAAAurC,EAAAvjC,OACA7G,EAAAnJ,KAAA0zC,GAAA1rC,EAAAA,GAEA,OAAAtC,MAIA8tC,SAAA,WACA,MAAA,IAAAzoC,MAAA,sBAGAmpB,QAAA,WASA,IAFA,IAAAnsB,KACAwrC,EAAA7tC,KAAA8tC,YACAD,EAAAE,WACA1rC,EAAArD,KAAA6uC,EAAAvjC,QAEA,OAAAjI,KAIA,OAAAsrC,IAIAz0C,OAAA,+BACA,gBACA,gBACA,SAAAw0C,EAAAC,GAEA,IAAAM,EAAAP,EAAAO,IAAAN,EAAA3mC,SAEAb,UAAA,MAEA+nC,eAAA,WACA,OAAAluC,KAAAmuC,QAGAP,OAAA,WACA5tC,KAAAmuC,WAGAC,iBAAA,SAAAC,EAAAptC,GACA,IAAAoB,EAAArC,KAAAkuC,iBACA,OAAA7rC,EAAAQ,OAAA,SAAA9D,GACA,QAAAA,EAAAqO,MAAAihC,KACAptC,GAAAA,EAAAlC,IACA,MAOAkK,IAAA,SAAAqlC,EAAA51B,GAgBA,GAAA,iBAAA,EACA,KAAA,0BAOA,IAAArW,EAAArC,KAAAkuC,iBACA,OAAA7rC,EAAAisC,IAGAR,SAAA,WACA,IAAAr0C,EAAA,EACA,OACAs0C,QAAA,WACA,OAAAt0C,EAAAuG,KAAAmuC,OAAA50C,QAEA+Q,KAAA,WACA,IAAAvL,EAAAiB,KAAAmuC,OAAA10C,KACA,OAAAuG,KAAAmuC,OAAApvC,GAAAA,MAKAkZ,IAAA,SAAAq2B,EAAA7zC,GAeA,GAAA,iBAAA,EACA,KAAA,0BASA,IAAA4H,EAAArC,KAAAkuC,kBACA,GAAA7rC,EAAAV,QAAA2sC,IACAjsC,EAAArD,KAAAsvC,GAEA,IAAAC,EAAAlsC,EAAAisC,GACA,GAAAC,IAAA9zC,EAAA,CACA4H,EAAAisC,GAAA7zC,EACA,IAAA+zC,KACAA,EAAAF,IACA50C,KAAA40C,EACA7zC,MAAAA,EACA8zC,SAAAA,GAEAvuC,KAAAmT,QAAA,WACAhK,KAAAqlC,IAGA,OAAAxuC,MAIA0J,OAAA,SAAA4kC,GAWA,GAAA,iBAAA,EACA,KAAA,0BAEA,IAAAjsC,EAAArC,KAAAkuC,iBACA3rC,EAAAF,EAAAV,QAAA2sC,GACA/rC,GAAA,WACAF,EAAAisC,UACAjsC,EAAAE,KAIAksC,aAAA,SAAAJ,EAAAptC,GAeA,IAAAoB,KACA4L,EAAAjO,KAMA,OALAA,KAAAouC,iBAAAC,EAAA,SAAAtvC,GACA,IAAAuD,EAAA2L,EAAAhF,IAAAlK,GACAkC,GAAAA,EAAAqB,GACAD,EAAArD,KAAAsD,KAEAD,GAGAqsC,eAAA,SAAAL,GAWA,IAAApgC,EAAAjO,KACAA,KAAAouC,iBAAAC,EAAA,SAAAtvC,GACAkP,EAAAvE,OAAA3K,MAIA4vC,QAAA,WASA,IAFA,IAAAtsC,EAAArC,KAAAkuC,iBAEAz0C,EAAA,EAAAA,EAAA4I,EAAA9I,OAAAE,IAAA,CACA,IAAAsF,EAAAsD,EAAA5I,GACAm1C,MAAA7vC,GAAAsD,EAAAtD,GAEA,OAAA6vC,OAGA30C,SAAA,SAAA40C,GAYA,IAAAxsC,EAAArC,KAAAkuC,iBAEA,OAAA7rC,EAAA8K,KAAA0hC,GAAA,MAGA/pC,KAAA,SAAAqE,GACA,IAAA9G,EAAArC,KAAAmuC,UACA,IAAA,IAAAz0C,KAAAyP,EACA9G,EAAArD,KAAAtF,GACA2I,EAAA3I,GAAAyP,EAAAzP,MAKA,OAAAu0C,IAIA/0C,OAAA,mCACA,gBACA,SACA,SAAAw0C,EAAAoB,GAEA,IAAAC,EAAArB,EAAAqB,QAAAD,EAAA9nC,YAGA,OAAA+nC,IAEA71C,OAAA,6BACA,yBACA,SAAAU,GACA,OAAAA,EAAAC,OAAA,qBAEAX,OAAA,+BACA,wBACA,sBACA,uBACA,oBACA,uBACA,qBACA,qBACA,oBACA,oBACA,qBACA,kBACA,uBACA,kCACA,UACA,SAAAU,QAAAsgB,MAAAxG,QAAAoZ,MAAAmM,QAAAxZ,MAAAib,MAAAoI,KAAAqJ,KAAAtqB,EAAA8nB,GAAA/X,QAAAmd,QAAAC,MAIA,IAAAC,OAAArd,QAAA+a,OAAA3lC,SACAb,UAAA,SAEA+oC,MAAA/C,KAEAtnC,WAAA,SAAA0Z,EAAArZ,GACAgV,MAAAxf,WAAA6jB,GACArZ,EAAAlF,KAAAmvC,OAAA5wB,EAAArZ,IAEAA,EAAAqZ,EACAA,EAAA,MAEAve,KAAA4G,UAAA2X,EAAArZ,GAEAqZ,EAIAve,KAAAovC,MAAAjD,KAAAnsC,KAAAmyB,OAHAnyB,KAAAovC,MAAApvC,KAAAqvC,UACArvC,KAAAmyB,KAAAnyB,KAAAovC,MAAA7wB,OAKAziB,OAAAgL,eAAA9G,KAAA,SACAvF,MAAAuF,KAAAkF,QAAAyJ,OAAA,IAAAogC,UAIA/uC,KAAAsvC,QAEA,IAAAC,EAAAvvC,KAAAkF,QAAAsqC,OACA,GAAAD,EAAA,CACA,IAAAE,EAAAzvC,KAAA7E,YACAq0C,EAAAC,EAAAD,OACA,IAAA,IAAAE,KAAAH,EACA,IAAA,IAAA91C,EAAA,EAAAA,EAAA81C,EAAAG,GAAAn2C,OAAAE,IAAA,CACA,IAAAk2C,EAAAJ,EAAAG,GAAAj2C,GACA,GAAAygB,MAAApf,SAAA60C,GAAA,CACA,IAAAC,EAAAD,EACAE,EAAAL,EAAAE,GAAAE,GACAE,EAAAD,EAAAzqC,KAAAyqC,EAAAzqC,KAAAyqC,EAEA7vC,KAAA+vC,MAAAD,EAAAD,EAAA3qC,WAQAlF,KAAAmyB,KAAA6d,eAEAhwC,KAAAiwC,YAWAd,OAAA,SAAA5wB,IAAArZ,SACA,IAAAgrC,YAAApjB,MAAA3jB,KAAAoV,IAAA,WACA,GAAA2xB,YAAA,CAEA,IAAAC,SAAAC,KAAA,KAAAF,YAAA,MACAhrC,QAAAgV,MAAApa,MAAAqwC,SAAAjrC,SAEA,OAAAA,aASAmqC,QAAA,WACA,IAAAxiC,EAAA7M,KAAAkF,QAAA2H,SACA,GAAAA,EACA,OAAA7M,KAAAkvC,MAAAriC,GAEA,MAAA,IAAAxH,MAAA,4CAUAiqC,MAAA,WACA,IAAArhC,EAAAjO,KACAA,KAAAqwC,aACArwC,KAAAovC,MAAArT,SAAA/7B,KAAAqwC,aAEArwC,KAAA2O,MAAA6C,GAAA,UAAA,SAAAlE,EAAA9N,GACAyO,EAAAqiC,SAAA9wC,EAAA2J,SAUA8mC,SAAA,aAUAK,SAAA,SAAAC,KA4BAC,SACA/+B,UAMAg/B,aAIA3H,cAIA4H,WAKAX,MAAA,SAAA3qC,EAAAoqB,GACA,IAAAkgB,EAAAtqC,EAAAsqC,aACAE,EAAAxqC,EAAAwqC,UAEA5vC,KAAA2wC,QAAA3wC,KAAAwvC,WACA,IAAAoB,EAAA5wC,KAAA2wC,QAAAjB,GAAA1vC,KAAA2wC,QAAAjB,OAEA,OADAkB,EAAAhB,GAAA,IAAAxqC,EAAApF,KAAAwvB,GACAxvB,MAGAwvC,OAAA,SAAAE,EAAA3iC,GACA/M,KAAA2wC,QAAA3wC,KAAAwvC,WACA,IAAAoB,EAAA5wC,KAAA2wC,QAAAjB,GAAA1vC,KAAA2wC,QAAAjB,OAEA,QAAA5yC,GAAAiQ,EACA,OAAAmN,MAAAxZ,MAAAkwC,GAAA,MAEA12B,MAAApa,MAAA8wC,EAAA7jC,IAWAC,OAAA,WACA,OAAAhN,KAAAmyB,MAWA0e,aAAA,SAAAn/B,GACA,OAAA,MASAo/B,YAAA,WAGA,OADA7tB,SAAA,IAAA8tB,UACA9tB,UAUAyM,KAAA,WACA1vB,KAAAovC,MAAA1f,QASAC,KAAA,WACA3vB,KAAAovC,MAAAzf,QASAhJ,MAAA,WACA,IACA3mB,KAAAovC,MAAAzoB,QACA,MAAAqqB,IAIA,OAAAhxC,MASA8f,KAAA,WAGA,OAFA9f,KAAAovC,MAAAtvB,OAEA9f,MAGAixC,OAAA,WAEA,OADAjxC,KAAA2O,MAAAsJ,IAAA,YAAA,GACAjY,MAGAkxC,QAAA,WAEA,OADAlxC,KAAA2O,MAAAsJ,IAAA,YAAA,GACAjY,MAWAgtB,KAAA,SAAAtzB,EAAAe,GACA,MAAAwT,EAAAjO,KAAAue,EAAAtQ,EAAAkjC,MAAAljC,EAAAmjC,YAEA,YAAA,IAAA32C,EACAwT,EAAAojC,MAAA33C,IAGAuU,EAAAojC,MAAA33C,GAAAe,EAEAwT,EAAAU,MAAA1F,IAAA,aACAsV,EAAAU,aAAA,SAAAvlB,EAAAA,EAAA,QAAAA,EAAAe,GAGAwT,IAGAqK,KAAA,SAAA5e,EAAAe,GACA,IAAA23B,EAAApyB,KAAAovC,MACAvoC,EAAAurB,EAAA9Z,KAAA5e,EAAAe,GACA,OAAAoM,GAAAurB,EAAApyB,KAAA6G,GAGA4oB,IAAA,SAAA/1B,EAAAe,GACA,IAAA23B,EAAApyB,KAAAovC,MACAvoC,EAAAurB,EAAA3C,IAAA/1B,EAAAe,GACA,OAAAoM,GAAAurB,EAAApyB,KAAA6G,GAGAsC,KAAA,SAAAzP,EAAAe,GACA,IAAA23B,EAAApyB,KAAAovC,MACAvoC,EAAAurB,EAAAjpB,KAAAzP,EAAAe,GACA,OAAAoM,GAAAurB,EAAApyB,KAAA6G,GAGAnE,KAAA,SAAAhJ,EAAAe,GACA,IAAA23B,EAAApyB,KAAAovC,MACAvoC,EAAAurB,EAAA1vB,KAAAhJ,EAAAe,GACA,OAAAoM,GAAAurB,EAAApyB,KAAA6G,GAGA2kC,MAAA,SAAA/rC,GACA,OAAAkqC,GAAA6B,MAAAxrC,KAAAmyB,KAAA1yB,IAGAqS,KAAA,SAAA5X,EAAAuF,GACA,IAAA6N,EAAA4M,MAAA3I,QAAA6B,YAAAlZ,GACAiP,KAAA1J,IAEA,OAAAya,MAAA3I,QAAAvV,UAAA8V,KAAAxX,KAAA0F,KAAAsN,EAAA7N,IASA5F,OAAA,SAAAsF,EAAAmjB,GACA,IAAA/D,EAAApf,EACAmjB,GAAA,SAAAA,EAEA,UAAAA,EACA7C,MAAApV,OAAAkU,EAAAve,KAAAmyB,MACA,SAAA7P,GACA7C,MAAAjV,MAAA+T,EAAAve,KAAAmyB,MAJA1S,MAAAb,OAAAL,EAAAve,KAAAmyB,MAMAnyB,KAAAiwC,YASAngB,OAAA,WACA9vB,KAAAovC,MAAA1lC,YAuDA,OAnDAulC,OAAAjoC,QAAA,SAAAsqC,GACA,IAAAlsC,EAAAwsB,QAAA+a,OAAA3lC,QAAAjH,MAAAC,KAAAN,WAEA,SAAA6xC,EAAA73C,GACA0L,EAAApJ,UAAAtC,GAAA,SAAAe,GACA,YAAAqC,IAAArC,GACAuF,KAAA2O,MAAAsJ,IAAAve,EAAAe,GACAuF,MAEAA,KAAA2O,MAAA1F,IAAAvP,IAIA,GAAA43C,EAAA3iC,MACA,IAAA,IAAAjV,KAAA43C,EAAA3iC,MACA4iC,EAAA73C,GAOA,OAHA43C,EAAAjF,YACAza,QAAA8F,SAAAtyB,EAAAksC,EAAAjF,YAEAjnC,GAGA6pC,OAAAvX,SAAA,SAAAtyB,EAAAosC,GACA,IAAAF,EAAAlsC,EAAApJ,UACAqwC,EAAAmF,GAAAF,EAAAjF,WAEA,SAAAkF,EAAA73C,GACA0L,EAAApJ,UAAAtC,GAAA,SAAAe,GACA,YAAAqC,IAAArC,GACAuF,KAAA2O,MAAAsJ,IAAAve,EAAAe,GACAuF,MAEAA,KAAA2O,MAAA1F,IAAAvP,IAIA,GAAA43C,EAAA3iC,MACA,IAAA,IAAAjV,KAAA43C,EAAA3iC,MACA4iC,EAAA73C,GAOA,OAHA2yC,GACAza,QAAA8F,SAAAtyB,EAAAinC,GAEAjnC,GAGA4pC,KAAAC,OAAAA,SAGA/1C,OAAA,2BACA,yBACA,SAAAU,GACA,OAAAA,EAAAC,OAAA,oBAEAX,OAAA,sCAAA,WAKA,IA8lBAua,EAEAg+B,EACAC,EACAC,EACAC,EACAC,EAssHAvrC,EAopPAwrC,EACAhmB,EAylFAimB,EACAC,EAKAC,EA68XAvxC,EAyzDAwxC,EACAC,EAry4BAC,GAAA99B,QAAA,SAIA,GAAA,oBAAAJ,UAAA,oBAAAlZ,OACAo3C,EAAAl+B,SAAAA,SACAk+B,EAAAp3C,OAAAA,WAEA,CAEA,IAAAq3C,EAAAp+B,QAAA,SACAq+B,EAAA,IAAAD,EAAAE,MACAC,mBAAA,+FAEAC,UACAC,wBAAA,QAEAC,UAAA,WACA33C,OACAo3C,EAAAl+B,SAAAo+B,EAAAp+B,SACAk+B,EAAAQ,oBAAA3+B,QAAA,0CAAA4+B,eACAT,EAAAU,WAAA7+B,QAAA,yBAAA8+B,OACAX,EAAAp3C,OAAAs3C,EACAU,UAAAZ,EAAAp3C,OAAAg4C,UAkppBA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAG,OAAAC,EAAAH,EAAAG,aACA7iC,EAAA6iC,EAAAC,WAAA,MACA9iC,EAAA+iC,UAAA,EAAAF,EAAAvS,QACAtwB,EAAAy5B,MAAA,GAAA,GAEA,IAAAuJ,EAAAL,EAAArS,OAAAuS,EAAAvS,OACAtwB,EAAAijC,UAAAN,EAAA,EAAAK,EAAAH,EAAAxS,MAAAwS,EAAAvS,OAAA,EAAA,EACAuS,EAAAxS,MAAAwS,EAAAvS,QAWA,SAAA4S,EAAAT,EAAAC,GACA,IAAAG,EAAAH,EAAAG,aAAA7iC,EAAA6iC,EAAAC,WAAA,MACAK,EAAAT,EAAAU,iBACAC,EAAAX,EAAAY,kBACAC,EAAAJ,EAAAE,EAAA,EAGAG,EAAA,IAAAC,WAAAl0C,KAAAm0C,YAAA,EAAAH,GAEAI,EAAA,IAAAC,kBAAAr0C,KAAAm0C,YAAA,EAAAH,GAEAd,EAAAoB,WAAA,EAAA,EAAAV,EAAAE,EAAAZ,EAAAqB,KAAArB,EAAAsB,cAAAP,GACA,IAAAQ,EAAA,IAAAC,UAAAN,EAAAR,EAAAE,GACArjC,EAAAkkC,aAAAF,EAAA,EAAA,GAqxQA,OAh85BArC,EAAAwC,iBAAA,iBAAAxC,EAAAp3C,QAAA,iBAAAo3C,EAAAl+B,UACAk+B,EAAAp3C,QAAAo3C,EAAAp3C,OAAAwZ,WAAA49B,EAAAp3C,OAAAwZ,UAAAqgC,eAAA,EAMAzC,EAAA0C,aAAA,oBAAAC,QACA,oBAAA/5C,OAOAo3C,EAAA4C,mBACA,UACA,YACA,OAAA,eAAA,YACA,UACA,SAAA,mBAAA,iBAAA,oBACA,kBAAA,oBACA,iBAAA,eACA,KAAA,cAAA,gBACA,sBAAA,aAOA5C,EAAA6C,IAAA,GACA7C,EAAA8C,MAAA,kDACA9C,EAAA+C,cAAA,yDACA/C,EAAAgD,UAAA,iBACAhD,EAAAiD,aACAjD,EAAAkD,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACAlD,EAAAmD,MAAA,6BAQAnD,EAAAoD,mBAAA,QAQApD,EAAAqD,kBAAA,KAQArD,EAAAsD,kBAAA,IAKAtD,EAAAuD,mBASAvD,EAAAwD,YAAA,KASAxD,EAAAyD,uBAAA,EAUAzD,EAAA0D,mBAAA,EAMA1D,EAAA2D,iBAAA3D,EAAAp3C,OAAA+6C,kBACA3D,EAAAp3C,OAAAg7C,wBACA5D,EAAAp3C,OAAAi7C,qBACA,EAeA7D,EAAA8D,0BAAA,EAMA9D,EAAA+D,sBAUA/D,EAAAgE,sBAMAhE,EAAAiE,qBAAA,EASAjE,EAAAkE,qBAAA,EAEAlE,EAAAmE,kBAAA,WACA,OAAAnE,EAAA0D,mBAAA1D,EAAAoE,kBAAApE,EAAAoE,iBAAApE,EAAAwD,cACA7yB,QAAA0zB,IAAA,qBAAArE,EAAAsE,gBACA,IAAAtE,EAAAuE,oBAAAC,SAAAxE,EAAAwD,eAEAxD,EAAAyE,sBACA,IAAAzE,EAAAyE,2BADA,GAMA,oBAAA3iC,UAAA,oBAAAlZ,SAEAA,OAAAo3C,OAAAA,GAIA,WAOA,SAAA0E,EAAA9kC,EAAAnE,GACA,GAAA7N,KAAA+2C,iBAAA/kC,GAAA,CAGA,IAAAglC,EAAAh3C,KAAA+2C,iBAAA/kC,GACAnE,EACAmpC,EAAAA,EAAAr1C,QAAAkM,KAAA,EAGAukC,EAAAlkB,KAAAlrB,MAAAi0C,KAAAD,GAAA,IAcA,SAAAE,EAAAllC,EAAAnE,GAKA,GAJA7N,KAAA+2C,mBACA/2C,KAAA+2C,qBAGA,IAAAr3C,UAAAnG,OACA,IAAA,IAAAmJ,KAAAsP,EACAhS,KAAAwR,GAAA9O,EAAAsP,EAAAtP,SAIA1C,KAAA+2C,iBAAA/kC,KACAhS,KAAA+2C,iBAAA/kC,OAEAhS,KAAA+2C,iBAAA/kC,GAAAhT,KAAA6O,GAEA,OAAA7N,KAcA,SAAAm3C,EAAAnlC,EAAAnE,GACA,IAAA7N,KAAA+2C,iBACA,OAAA/2C,KAIA,GAAA,IAAAN,UAAAnG,OACA,IAAAyY,KAAAhS,KAAA+2C,iBACAD,EAAAx8C,KAAA0F,KAAAgS,QAIA,GAAA,IAAAtS,UAAAnG,QAAA,iBAAAmG,UAAA,GACA,IAAA,IAAAgD,KAAAsP,EACA8kC,EAAAx8C,KAAA0F,KAAA0C,EAAAsP,EAAAtP,SAIAo0C,EAAAx8C,KAAA0F,KAAAgS,EAAAnE,GAEA,OAAA7N,KAaA,SAAAo3C,EAAAplC,EAAA9M,GACA,IAAAlF,KAAA+2C,iBACA,OAAA/2C,KAGA,IAAAq3C,EAAAr3C,KAAA+2C,iBAAA/kC,GACA,IAAAqlC,EACA,OAAAr3C,KAGA,IAAA,IAAAvG,EAAA,EAAAyY,EAAAmlC,EAAA99C,OAAAE,EAAAyY,EAAAzY,IACA49C,EAAA59C,IAAA49C,EAAA59C,GAAAa,KAAA0F,KAAAkF,OAKA,OAHAlF,KAAA+2C,iBAAA/kC,GAAAqlC,EAAAx0C,OAAA,SAAApI,GACA,OAAA,IAAAA,IAEAuF,KAQAoyC,EAAAkF,YACAJ,QAAAA,EACAC,cAAAA,EACAC,KAAAA,EAEA5lC,GAAA0lC,EACApkC,IAAAqkC,EACAhkC,QAAAikC,GA5HA,GAoIAhF,EAAAzE,YAEA4J,YAcA9tC,IAAA,WAEA,GADAzJ,KAAAu3C,SAAAv4C,KAAAe,MAAAC,KAAAu3C,SAAA73C,WACAM,KAAAw3C,eACA,IAAA,IAAA/9C,EAAA,EAAAF,EAAAmG,UAAAnG,OAAAE,EAAAF,EAAAE,IACAuG,KAAAw3C,eAAA93C,UAAAjG,IAIA,OADAuG,KAAAy3C,mBAAAz3C,KAAA03C,mBACA13C,MAeA23C,SAAA,SAAAz8C,EAAA4F,EAAA82C,GACA,IAAAh1C,EAAA5C,KAAAu3C,SASA,OARAK,EACAh1C,EAAA9B,GAAA5F,EAGA0H,EAAAJ,OAAA1B,EAAA,EAAA5F,GAEA8E,KAAAw3C,gBAAAx3C,KAAAw3C,eAAAt8C,GACA8E,KAAAy3C,mBAAAz3C,KAAA03C,mBACA13C,MASA0J,OAAA,WAIA,IAHA,IACA5I,EADA8B,EAAA5C,KAAAu3C,SACAM,GAAA,EAEAp+C,EAAA,EAAAF,EAAAmG,UAAAnG,OAAAE,EAAAF,EAAAE,KAIA,KAHAqH,EAAA8B,EAAAjB,QAAAjC,UAAAjG,OAIAo+C,GAAA,EACAj1C,EAAAJ,OAAA1B,EAAA,GACAd,KAAA83C,kBAAA93C,KAAA83C,iBAAAp4C,UAAAjG,KAKA,OADAuG,KAAAy3C,mBAAAI,GAAA73C,KAAA03C,mBACA13C,MAeA+3C,cAAA,SAAA92C,EAAA8J,GAEA,IADA,IAAAnI,EAAA5C,KAAAg4C,aACAv+C,EAAA,EAAAyY,EAAAtP,EAAArJ,OAAAE,EAAAyY,EAAAzY,IACAwH,EAAA3G,KAAAyQ,EAAAnI,EAAAnJ,GAAAA,EAAAmJ,GAEA,OAAA5C,MAUAg4C,WAAA,SAAA99C,GACA,YAAA,IAAAA,EACA8F,KAAAu3C,SAAAvzC,SAEAhE,KAAAu3C,SAAA10C,OAAA,SAAAo1C,GACA,OAAAA,EAAA/9C,OAAAA,KASAoI,KAAA,SAAAxB,GACA,OAAAd,KAAAu3C,SAAAz2C,IAOApF,QAAA,WACA,OAAA,IAAAsE,KAAAu3C,SAAAh+C,QAOAk1B,KAAA,WACA,OAAAzuB,KAAAu3C,SAAAh+C,QAQA+lB,SAAA,SAAApkB,GACA,OAAA8E,KAAAu3C,SAAA51C,QAAAzG,IAAA,GAOAg9C,WAAA,WACA,OAAAl4C,KAAAu3C,SAAAhzC,OAAA,SAAA4zC,EAAAp/B,GAEA,OADAo/B,GAAAp/B,EAAAm/B,WAAAn/B,EAAAm/B,aAAA,GAEA,KAQA9F,EAAAgG,eAMAlL,YAAA,SAAAhoC,GACA,IAAA,IAAAxC,KAAAwC,EACAlF,KAAAiY,IAAAvV,EAAAwC,EAAAxC,KASA21C,cAAA,SAAAC,EAAAprB,IACAorB,IAAAA,EAAAC,YAAAD,aAAAlG,EAAAoG,UACAx4C,KAAAiY,IAAAiV,EAAA,IAAAklB,EAAAoG,SAAAF,KAUAG,aAAA,SAAAH,EAAAprB,EAAAjsB,IACAq3C,IAAAA,EAAAl5C,QAAAk5C,aAAAlG,EAAAsG,QAIAz3C,GAAAA,IAHAjB,KAAAiY,IAAAiV,EAAA,IAAAklB,EAAAsG,QAAAJ,EAAAr3C,KAWA03C,cAAA,SAAAzzC,GACA,GAAAA,EAAA0zC,QAAA,iBAAA1zC,EAAA0zC,OAAA,CAIA,IAAAC,EAAAzG,EAAAlkB,KAAA4qB,gBAAA5zC,EAAA0zC,aACA,IAAAC,IACA74C,KAAA44C,OAAA,IAAA9yC,SAAA,MAAA+yC,MAOAE,WAAA,SAAAj/C,GACA,IAAA,IAAA4I,KAAA5I,EACAkG,KAAAg5C,KAAAt2C,EAAA5I,EAAA4I,KAWAuV,IAAA,SAAAlZ,EAAAtE,GAYA,MAXA,iBAAAsE,EACAiB,KAAA+4C,WAAAh6C,GAGA,mBAAAtE,GAAA,WAAAsE,EACAiB,KAAAg5C,KAAAj6C,EAAAtE,EAAAuF,KAAAiJ,IAAAlK,KAGAiB,KAAAg5C,KAAAj6C,EAAAtE,GAGAuF,MAGAg5C,KAAA,SAAAj6C,EAAAtE,GACAuF,KAAAjB,GAAAtE,GASA80B,OAAA,SAAArC,GACA,IAAAzyB,EAAAuF,KAAAiJ,IAAAikB,GAIA,MAHA,kBAAAzyB,GACAuF,KAAAiY,IAAAiV,GAAAzyB,GAEAuF,MAQAiJ,IAAA,SAAAikB,GACA,OAAAltB,KAAAktB,KAKAzZ,EAm9BA,oBAAAwlC,QAAAA,QAAAj5C,KAj9BAyxC,EAAAnoC,KAAAmoC,KACAC,EAAApoC,KAAAooC,MACAC,EAAAroC,KAAAqoC,IACAC,EAAAtoC,KAAA4vC,GAAA,IACArH,EAAAvoC,KAAA4vC,GAAA,EAKA9G,EAAAlkB,MASAirB,IAAA,SAAAC,GACA,GAAA,IAAAA,EAAA,OAAA,EACAA,EAAA,IAEAA,GAAAA,GAEA,IAAAC,EAAAD,EAAAvH,EACA,OAAAwH,GACA,KAAA,EAAA,KAAA,EAAA,OAAA,EACA,KAAA,EAAA,OAAA,EAEA,OAAA/vC,KAAA6vC,IAAAC,IAUAE,IAAA,SAAAF,GACA,GAAA,IAAAA,EAAA,OAAA,EACA,IAAAC,EAAAD,EAAAvH,EAAAl0C,EAAA,EAKA,OAJAy7C,EAAA,IAEAz7C,GAAA,GAEA07C,GACA,KAAA,EAAA,OAAA17C,EACA,KAAA,EAAA,OAAA,EACA,KAAA,EAAA,OAAAA,EAEA,OAAA2L,KAAAgwC,IAAAF,IAYAG,gBAAA,SAAAv2C,EAAAvI,GACA,IAAA8H,EAAAS,EAAArB,QAAAlH,GAIA,OAHA,IAAA8H,GACAS,EAAAR,OAAAD,EAAA,GAEAS,GAWAw2C,aAAA,SAAA1H,EAAAhmB,GACA,OAAAxiB,KAAAmwC,MAAAnwC,KAAAC,UAAAuiB,EAAAgmB,EAAA,IAAAA,GAUAC,iBAAA,SAAA2H,GACA,OAAAA,EAAA9H,GAUA+H,iBAAA,SAAAC,GACA,OAAAA,EAAAhI,GAYAiI,YAAA,SAAAC,EAAA39C,EAAAy9C,GACAE,EAAAC,eAAA59C,GACA,IAAAsa,EAAA27B,EAAAlkB,KAAA8rB,aAAAF,EAAAF,GACA,OAAA,IAAAxH,EAAA6H,MAAAxjC,EAAA6sB,EAAA7sB,EAAA8sB,GAAA2W,UAAA/9C,IAWA69C,aAAA,SAAAG,EAAAP,GACA,IAAAN,EAAAlH,EAAAlkB,KAAAorB,IAAAM,GACAT,EAAA/G,EAAAlkB,KAAAirB,IAAAS,GACAQ,EAAAD,EAAA7W,EAAA6V,EAAAgB,EAAA5W,EAAA+V,EACAe,EAAAF,EAAA7W,EAAAgW,EAAAa,EAAA5W,EAAA4V,EACA,OACA7V,EAAA8W,EACA7W,EAAA8W,IAaAC,eAAA,SAAApsC,EAAAqsC,EAAAC,GACA,OAAAA,EACA,IAAApI,EAAA6H,MACAM,EAAA,GAAArsC,EAAAo1B,EAAAiX,EAAA,GAAArsC,EAAAq1B,EACAgX,EAAA,GAAArsC,EAAAo1B,EAAAiX,EAAA,GAAArsC,EAAAq1B,GAGA,IAAA6O,EAAA6H,MACAM,EAAA,GAAArsC,EAAAo1B,EAAAiX,EAAA,GAAArsC,EAAAq1B,EAAAgX,EAAA,GACAA,EAAA,GAAArsC,EAAAo1B,EAAAiX,EAAA,GAAArsC,EAAAq1B,EAAAgX,EAAA,KAUAE,0BAAA,SAAAC,EAAA1jC,GACA,GAAAA,EACA,IAAA,IAAAvd,EAAA,EAAAA,EAAAihD,EAAAnhD,OAAAE,IACAihD,EAAAjhD,GAAA24C,EAAAlkB,KAAAosB,eAAAI,EAAAjhD,GAAAud,GAGA,IAAA2jC,GAAAD,EAAA,GAAApX,EAAAoX,EAAA,GAAApX,EAAAoX,EAAA,GAAApX,EAAAoX,EAAA,GAAApX,GACAsX,EAAAxI,EAAAlkB,KAAAlrB,MAAA8uC,IAAA6I,GACAE,EAAAzI,EAAAlkB,KAAAlrB,MAAA8oB,IAAA6uB,GACA7Z,EAAA+Z,EAAAD,EACAE,GAAAJ,EAAA,GAAAnX,EAAAmX,EAAA,GAAAnX,EAAAmX,EAAA,GAAAnX,EAAAmX,EAAA,GAAAnX,GACAwX,EAAA3I,EAAAlkB,KAAAlrB,MAAA8uC,IAAAgJ,GACAE,EAAA5I,EAAAlkB,KAAAlrB,MAAA8oB,IAAAgvB,GACA/Z,EAAAia,EAAAD,EAEA,OACAtiB,KAAAmiB,EACA5b,IAAA+b,EACAja,MAAAA,EACAC,OAAAA,IAWAka,gBAAA,SAAAV,GACA,IAAAr6C,EAAA,GAAAq6C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA/jC,GAAAtW,EAAAq6C,EAAA,IAAAr6C,EAAAq6C,EAAA,IAAAr6C,EAAAq6C,EAAA,GAAAr6C,EAAAq6C,EAAA,IACAtC,EAAA7F,EAAAlkB,KAAAosB,gBAAAhX,EAAAiX,EAAA,GAAAhX,EAAAgX,EAAA,IAAA/jC,GAAA,GAGA,OAFAA,EAAA,IAAAyhC,EAAA3U,EACA9sB,EAAA,IAAAyhC,EAAA1U,EACA/sB,GAWA07B,QAAA,SAAAlhC,EAAAkqC,GACA,OAAAxgC,WAAAygC,OAAAnqC,GAAAkhC,QAAAgJ,KAUAE,UAAA,SAAA3gD,EAAA4gD,GACA,IAAAC,EAAA,WAAAjnC,KAAA5Z,GACAuW,EAAA0J,WAAAjgB,GAIA,OAHA4gD,IACAA,EAAAjJ,EAAAmJ,KAAAC,uBAEAF,EAAA,IACA,IAAA,KACA,OAAAtqC,EAAAohC,EAAA6C,IAAA,KAEA,IAAA,KACA,OAAAjkC,EAAAohC,EAAA6C,IAAA,KAEA,IAAA,KACA,OAAAjkC,EAAAohC,EAAA6C,IAEA,IAAA,KACA,OAAAjkC,EAAAohC,EAAA6C,IAAA,GAEA,IAAA,KACA,OAAAjkC,EAAAohC,EAAA6C,IAAA,GAAA,GAEA,IAAA,KACA,OAAAjkC,EAAAqqC,EAEA,QACA,OAAArqC,IAUAyqC,cAAA,WACA,OAAA,GAUAC,SAAA,SAAAxhD,EAAA67B,GAGA,OADA77B,EAAAk4C,EAAAlkB,KAAAzY,OAAAkmC,SAAAzhD,EAAAyc,OAAA,GAAAR,cAAAjc,EAAA+D,MAAA,IACAm0C,EAAAlkB,KAAA0tB,iBAAA7lB,GAAA77B,IASA2hD,iBAAA,SAAA3hD,GACA,IAAA4d,GACA,sBACA,QACA,KACA,SAEA,OAAA5d,GACA,IAAA,iBACA4d,EAAAA,EAAA9T,QAAA,KAAA,KAAA,KAAA,KAAA,gBAAA,sBACA,MACA,IAAA,iBACA8T,EAAAA,EAAA9T,QAAA,gBAAA,oBAAA,KAAA,KAAA,IAAA,KAAA,KAAA,OACA,MACA,IAAA,OACA8T,EAAAA,EAAA9T,QAAA,SAAA,aAAA,iBAGA,OAAA8T,GASA8jC,iBAAA,SAAA7lB,GACA,IAAAA,EACA,OAAAqc,EAGA,IACA34C,EADAorB,EAAAkR,EAAAz8B,MAAA,KACA4Y,EAAA2S,EAAAtrB,OACAO,EAAA2Z,GAAA2+B,EAAAp3C,OAEA,IAAAvB,EAAA,EAAAA,EAAAyY,IAAAzY,EACAK,EAAAA,EAAA+qB,EAAAprB,IAGA,OAAAK,GAWAgiD,UAAA,SAAAxhC,EAAArZ,EAAA8J,EAAAgxC,GACA,GAAAzhC,EAAA,CAKA,IAAAoH,EAAA0wB,EAAAlkB,KAAA8tB,cAGAC,EAAA,WACAh7C,GAAAA,EAAA3G,KAAAyQ,EAAA2W,GACAA,EAAAA,EAAAw6B,OAAAx6B,EAAAy6B,QAAA,MAGAz6B,EAAAw6B,OAAAD,EAEAv6B,EAAAy6B,QAAA,WACA/J,EAAAqE,IAAA,iBAAA/0B,EAAA/gB,KACAM,GAAAA,EAAA3G,KAAAyQ,EAAA,MAAA,GACA2W,EAAAA,EAAAw6B,OAAAx6B,EAAAy6B,QAAA,MAOA,IAAA7hC,EAAA3Y,QAAA,SAAAo6C,IACAr6B,EAAAq6B,YAAAA,GAMA,mBAAAzhC,EAAA8hC,UAAA,EAAA,MACA16B,EAAAw6B,OAAA,KACA9J,EAAAlkB,KAAAmuB,eAAA36B,EAAAu6B,IAGAv6B,EAAA/gB,IAAA2Z,OApCArZ,GAAAA,EAAA3G,KAAAyQ,EAAAuP,IA8CA+hC,eAAA,SAAA36B,EAAAu6B,GACA,IAAA5+B,EAAA+0B,EAAAl+B,SAAA0H,cAAA,OACAyB,EAAAV,MAAAmkB,MAAAzjB,EAAAV,MAAAokB,OAAA,MACA1jB,EAAAV,MAAA8b,KAAApb,EAAAV,MAAAqiB,IAAA,QACA3hB,EAAAV,MAAA2F,SAAA,WACAjF,EAAAyB,YAAA4C,GACA0wB,EAAAl+B,SAAAwU,cAAA,QAAA5J,YAAAzB,GAMAqE,EAAAw6B,OAAA,WACAD,IACA5+B,EAAAwB,WAAA6B,YAAArD,GACAA,EAAA,OAcAi/B,eAAA,SAAA15C,EAAA3B,EAAA80B,EAAAwmB,GAGA,IAAAC,KACAC,EAAA,EACAC,GAJA95C,EAAAA,OAIArJ,OAEA,SAAAojD,MACAF,IAAAC,GACAz7C,GAAAA,EAAAu7C,EAAA35C,OAAA,SAAA/I,GAEA,OAAAA,KAKA4iD,EAKA95C,EAAAzI,QAAA,SAAA89C,EAAAn3C,GAEA,GAAAm3C,GAAAA,EAAA/9C,KAAA,CAIA,IAAAgN,EAAAkrC,EAAAlkB,KAAAwtB,SAAAzD,EAAA/9C,KAAA67B,GACA7uB,EAAA01C,WAAA3E,EAAA,SAAAn+C,EAAA0V,GACAA,IAAAgtC,EAAA17C,GAAAhH,GACAyiD,GAAAA,EAAAtE,EAAAn+C,EAAA0V,GACAmtC,WAPAA,MAPA17C,GAAAA,EAAAu7C,IA2BAK,gBAAA,SAAAC,EAAA77C,GAGA,SAAA07C,MACAI,IAAAC,GACA/7C,GAAAA,EAAAg8C,GAIA,IAAAA,KACAF,EAAA,EACAC,GAVAF,EAAAA,OAUAvjD,OAEAyjD,EAKAF,EAAA3iD,QAAA,SAAA+T,EAAApN,GACAoN,GAAAA,EAAA9O,OACA,IAAAgzC,EAAAsG,QAAAxqC,EAAA,SAAA8rB,GACAijB,EAAAn8C,GAAAk5B,EACA2iB,OAIAM,EAAAn8C,GAAAoN,EACAyuC,OAbA17C,GAAAA,EAAAg8C,IA2BAC,iBAAA,SAAA54C,EAAAY,EAAA9L,GACA,IAAA8B,EACA,OAAAoJ,GAAA,IAAAA,EAAA/K,OACA+K,EAAA,IAEAY,IACAA,EAAA47B,OAAA57B,EAAA67B,OACA77B,EAAAi4C,aACA7Z,EAAAp+B,EAAA47B,MAAA,EACAyC,EAAAr+B,EAAA67B,OAAA,WAIA77B,EAAA47B,aACA57B,EAAA67B,SAGA7lC,EAAA,IAAAk3C,EAAAgL,MAAA94C,EAAAY,QACA,IAAA9L,IACA8B,EAAAmiD,WAAAjkD,GAEA8B,IAWAoiD,uBAAA,SAAAl+C,EAAAm+C,EAAAzU,GACA,GAAAA,GAAA,mBAAAhtC,OAAAE,UAAA/B,SAAAK,KAAAwuC,GACA,IAAA,IAAArvC,EAAA,EAAAyY,EAAA42B,EAAAvvC,OAAAE,EAAAyY,EAAAzY,IACAqvC,EAAArvC,KAAA2F,IACAm+C,EAAAzU,EAAArvC,IAAA2F,EAAA0pC,EAAArvC,MAmBA+jD,eAAA,SAAA/sC,EAAA6yB,EAAAC,EAAAka,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAAna,EACAua,EAAAH,EAAAna,EACArxB,EAAAu/B,EAAAmM,EAAAA,EAAAC,EAAAA,GACAC,EAAApM,EAAAmM,EAAAD,GACAG,EAAAJ,EAAApkD,OACAykD,EAAA,EACAC,GAAA,EAQA,IANAxtC,EAAAytC,OACAztC,EAAA+iC,UAAAlQ,EAAAC,GACA9yB,EAAA0tC,OAAA,EAAA,GACA1tC,EAAA2tC,OAAAN,GAEAxa,EAAA,EACApxB,EAAAoxB,IACAA,GAAAqa,EAAAK,IAAAD,IACA7rC,IACAoxB,EAAApxB,GAEAzB,EAAAwtC,EAAA,SAAA,UAAA3a,EAAA,GACA2a,GAAAA,EAGAxtC,EAAA4tC,WASAC,oBAAA,WACA,OAAAlM,EAAAl+B,SAAA0H,cAAA,WAUA2iC,kBAAA,SAAAlL,GACA,IAAAmL,EAAApM,EAAAlkB,KAAAowB,sBAIA,OAHAE,EAAA1d,MAAAuS,EAAAvS,MACA0d,EAAAzd,OAAAsS,EAAAtS,OACAyd,EAAAjL,WAAA,MAAAG,UAAAL,EAAA,EAAA,GACAmL,GAYAC,UAAA,SAAAC,EAAApnC,EAAAqnC,GACA,OAAAD,EAAAD,UAAA,SAAAnnC,EAAAqnC,IASA3C,YAAA,WACA,OAAA5J,EAAAl+B,SAAA0H,cAAA,QAUAgjC,YAAA,SAAAC,EAAApuC,GACAA,EAAAytC,OACAztC,EAAAquC,YACAD,EAAAjG,OAAAnoC,GACAA,EAAAsuC,QAYAC,0BAAA,SAAA9+C,EAAAC,EAAA8+C,GAEA,OACA/+C,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACA8+C,EAAA,EAAA/+C,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GACA++C,EAAA,EAAA/+C,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,KAWAg/C,YAAA,SAAAh/C,GACA,IAAAk5C,EAAA1H,EAAAxxC,EAAA,GAAAA,EAAA,IACAi/C,EAAAxN,EAAAzxC,EAAA,GAAA,GAAAyxC,EAAAzxC,EAAA,GAAA,GACAk/C,EAAA3N,EAAA0N,GACAE,GAAAn/C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAk/C,EACAE,EAAA5N,EAAAxxC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAi/C,GACA,OACA/F,MAAAA,EAAAxH,EACAwN,OAAAA,EACAC,OAAAA,EACAC,MAAAA,EAAA1N,EACA2N,MAAA,EACAC,WAAAt/C,EAAA,GACAu/C,WAAAv/C,EAAA,KAcAw/C,iBAAA,SAAAx6C,GACA,IAAAA,EAAAk0C,MACA,OAAAhH,EAAAkD,QAAAtxC,SAEA,IAAA27C,EAAAvN,EAAAlkB,KAAA6jB,iBAAA7sC,EAAAk0C,OACAD,EAAA/G,EAAAlkB,KAAAirB,IAAAwG,GACArG,EAAAlH,EAAAlkB,KAAAorB,IAAAqG,GACA,OAAAxG,EAAAG,GAAAA,EAAAH,EAAA,EAAA,IAoBAyG,qBAAA,SAAA16C,GACA,IAAAk6C,OAAA,IAAAl6C,EAAAk6C,OAAA,EAAAl6C,EAAAk6C,OACAC,OAAA,IAAAn6C,EAAAm6C,OAAA,EAAAn6C,EAAAm6C,OACAQ,GACA36C,EAAA46C,OAAAV,EAAAA,EACA,EACA,EACAl6C,EAAA66C,OAAAV,EAAAA,EACA,EACA,GACAW,EAAA5N,EAAAlkB,KAAA8wB,0BACAjN,EAAAK,EAAAlkB,KAAA6jB,iBAaA,OAZA7sC,EAAAo6C,QACAO,EAAAG,EACAH,GACA,EAAA,EAAAv2C,KAAA22C,IAAAlO,EAAA7sC,EAAAo6C,QAAA,IACA,IAEAp6C,EAAAq6C,QACAM,EAAAG,EACAH,GACA,EAAAv2C,KAAA22C,IAAAlO,EAAA7sC,EAAAq6C,QAAA,EAAA,IACA,IAEAM,GAqBAK,cAAA,SAAAh7C,GACA,IAAAi7C,GAAA,EAAA,EAAA,EAAA,EAAAj7C,EAAAs6C,YAAA,EAAAt6C,EAAAu6C,YAAA,GACAO,EAAA5N,EAAAlkB,KAAA8wB,0BAOA,OANA95C,EAAAk0C,QACA+G,EAAAH,EAAAG,EAAA/N,EAAAlkB,KAAAwxB,iBAAAx6C,MAEAA,EAAAk6C,QAAAl6C,EAAAm6C,QAAAn6C,EAAAo6C,OAAAp6C,EAAAq6C,OAAAr6C,EAAA46C,OAAA56C,EAAA66C,SACAI,EAAAH,EAAAG,EAAA/N,EAAAlkB,KAAA0xB,qBAAA16C,KAEAi7C,GAcAC,sBAAA,SAAAhB,EAAAC,EAAAC,GACA,OAAAlN,EAAAlkB,KAAAgyB,eAAAd,OAAAA,EAAAC,OAAAA,EAAAC,MAAAA,KASAe,qBAAA,SAAAlhD,GACAA,EAAAigD,OAAA,EACAjgD,EAAAkgD,OAAA,EACAlgD,EAAAmgD,MAAA,EACAngD,EAAAogD,MAAA,EACApgD,EAAA2gD,OAAA,EACA3gD,EAAA4gD,OAAA,EACA5gD,EAAAi/C,OAAA,IAUAkC,oBAAA,SAAAnhD,GACA,OACAigD,OAAAjgD,EAAAigD,OACAC,OAAAlgD,EAAAkgD,OACAC,MAAAngD,EAAAmgD,MACAC,MAAApgD,EAAAogD,MACAnG,MAAAj6C,EAAAi6C,MACA3gB,KAAAt5B,EAAAs5B,KACAqnB,MAAA3gD,EAAA2gD,MACAC,MAAA5gD,EAAA4gD,MACA/gB,IAAA7/B,EAAA6/B,MASA8Z,gBAAA,SAAA10C,GACA,OAAA/J,OAAA+J,GAAAgJ,MAAA,mCAAA,IAWAmzC,cAAA,SAAA9vC,EAAA6yB,EAAAC,EAAAid,GAIAA,EAAA,IACAld,EAAAkd,EACAld,GAAAkd,EAGAld,EAAA,EAEAC,EAAAid,EACAjd,GAAAid,EAGAjd,EAAA,GAIA,IAAA9pC,EAAAgnD,EAAAC,GAAA,EACAC,EAAAlwC,EAAAmwC,aAAAtd,EAAAC,EAAA,EAAAid,GAAA,EAAA,EAAAA,GAAA,GACAz/C,EAAA4/C,EAAAx3C,KAAA5P,OAGA,IAAAE,EAAA,EAAAA,EAAAsH,IACA0/C,EAAAE,EAAAx3C,KAAA1P,IAEA,IADAinD,EAAAD,GAAA,IAFAhnD,GAAA,GAUA,OAFAknD,EAAA,KAEAD,GAQAG,kCAAA,SAAAp4C,GACA,IACA46B,EADAyd,EAAA,OAAAC,EAAA,MAAAC,EAAA,MACAC,EAAAx4C,EAAAnP,MAAA,KAeA,OAbA2nD,GAAAA,EAAA1nD,SAEA,UADAunD,EAAAG,EAAArhD,QACA,UAAAkhD,GACAzd,EAAAyd,EACAA,EAAA,QAEAG,EAAA1nD,SACA8pC,EAAA4d,EAAArhD,QAIAmhD,EAAA,SAAA1d,EAAAA,EAAAplC,MAAA,EAAA,GAAA,OACA+iD,EAAA,SAAA3d,EAAAA,EAAAplC,MAAA,EAAA,GAAA,QAEA6iD,YAAAA,EACAC,OAAAA,EACAC,OAAAA,IAgBAE,qBAAA,SAAAC,IACAA,GAAAA,GAAA,IAAA/mD,eAIAg4C,EAAAuD,gBAAAwL,WACA/O,EAAAuD,gBAAAwL,GAHA/O,EAAAuD,oBAgBAyL,gBAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAj4C,KAAAmoC,KAAA6P,EAAAD,GACAG,EAAAl4C,KAAAmwC,MAAA6H,EAAAC,GACA,OAAAje,EAAAh6B,KAAAmwC,MAAA8H,GAAAhe,EAAAie,IAGAC,SAAA,SAAA3P,EAAAr3C,EAAAqxB,GACA,OAAAxiB,KAAAwiB,IAAAgmB,EAAAxoC,KAAAwoC,IAAAr3C,EAAAqxB,KAGA41B,eAAA,SAAAtiD,EAAAm+C,GACA,OAAAj0C,KAAAwoC,IAAAyL,EAAAzc,MAAA1hC,EAAA0hC,MAAAyc,EAAAxc,OAAA3hC,EAAA2hC,SAGA4gB,iBAAA,SAAAviD,EAAAm+C,GACA,OAAAj0C,KAAAwiB,IAAAyxB,EAAAzc,MAAA1hC,EAAA0hC,MAAAyc,EAAAxc,OAAA3hC,EAAA2hC,SAUA6gB,YAAA,SAAA5qC,GACA,MAAA,UAAAA,EAAA3S,IAAA,SAAA5J,GACA,OAAA23C,EAAAlkB,KAAAgkB,QAAAz3C,EAAA23C,EAAAt2C,OAAA+lD,uBACA10C,KAAA,KAAA,MAMA,WAEA,IAAA20C,EAAA1mD,MAAAY,UAAAmR,KAMA,SAAA40C,EAAAC,EAAAC,EAAA7H,EAAAC,EAAA6H,EAAAC,EAAAC,GACA,IAAAC,EAAAP,EAAAxnD,KAAAoF,WACA,GAAA0yC,EAAA+D,mBAAAkM,GACA,OAAAjQ,EAAA+D,mBAAAkM,GAGA,IAAAnJ,EAAA5vC,KAAA4vC,GAAAn7B,EAAAqkC,EAAAlJ,EAAA,IACAoJ,EAAAlQ,EAAAlkB,KAAAorB,IAAAv7B,GACAwkC,EAAAnQ,EAAAlkB,KAAAirB,IAAAp7B,GACAykC,EAAA,EAAAC,EAAA,EAEArI,EAAA9wC,KAAA06B,IAAAoW,GACAC,EAAA/wC,KAAA06B,IAAAqW,GAEA,IAAA/a,GAAAijB,EAAAP,EAAA,GAAAM,EAAAL,EAAA,GACAS,GAAAH,EAAAN,EAAA,GAAAK,EAAAN,EAAA,GACAW,EAAAvI,EAAAA,EAAAwI,EAAAvI,EAAAA,EAAAwI,EAAAH,EAAAA,EAAAI,EAAAxjB,EAAAA,EACAyjB,EAAAJ,EAAAC,EAAAD,EAAAE,EAAAD,EAAAE,EACA16B,EAAA,EAEA,GAAA26B,EAAA,EAAA,CACA,IAAAjjB,EAAAx2B,KAAAmoC,KAAA,EAAAsR,GAAAJ,EAAAC,IACAxI,GAAAta,EACAua,GAAAva,OAGA1X,GAAA85B,IAAAC,GAAA,EAAA,GACA74C,KAAAmoC,KAAAsR,GAAAJ,EAAAE,EAAAD,EAAAE,IAGA,IAAAE,EAAA56B,EAAAgyB,EAAAsI,EAAArI,EACA4I,GAAA76B,EAAAiyB,EAAA/a,EAAA8a,EACA8I,EAAAX,EAAAS,EAAAV,EAAAW,EAAA,GAAAjB,EACAmB,EAAAb,EAAAU,EAAAT,EAAAU,EAAA,GAAAhB,EACAmB,EAAAC,EAAA,EAAA,GAAA/jB,EAAA0jB,GAAA5I,GAAAsI,EAAAO,GAAA5I,GACAiJ,EAAAD,GAAA/jB,EAAA0jB,GAAA5I,GAAAsI,EAAAO,GAAA5I,IAAA/a,EAAA0jB,GAAA5I,IAAAsI,EAAAO,GAAA5I,GAEA,IAAA8H,GAAAmB,EAAA,EACAA,GAAA,EAAApK,EAEA,IAAAiJ,GAAAmB,EAAA,IACAA,GAAA,EAAApK,GASA,IALA,IAAAqK,EAAAj6C,KAAAk6C,KAAAl6C,KAAA06B,IAAAsf,EAAApK,EAAA,IACA/6C,KAAAslD,EAAAH,EAAAC,EACAG,EAAA,EAAA,EAAAp6C,KAAAgwC,IAAAmK,EAAA,GAAAn6C,KAAAgwC,IAAAmK,EAAA,GAAAn6C,KAAAgwC,IAAAmK,EAAA,GACAE,EAAAP,EAAAK,EAEAhqD,EAAA,EAAAA,EAAA8pD,EAAA9pD,IACA0E,EAAA1E,GAAAmqD,EAAAR,EAAAO,EAAApB,EAAAD,EAAAlI,EAAAC,EAAA6I,EAAAC,EAAAO,EAAAlB,EAAAC,GACAD,EAAArkD,EAAA1E,GAAA,GACAgpD,EAAAtkD,EAAA1E,GAAA,GACA2pD,EAAAO,EACAA,GAAAF,EAGA,OADArR,EAAA+D,mBAAAkM,GAAAlkD,EACAA,EAGA,SAAAylD,EAAAC,EAAAF,EAAApB,EAAAD,EAAAlI,EAAAC,EAAA6I,EAAAC,EAAAO,EAAAlB,EAAAC,GACA,IAAAqB,EAAA1R,EAAAlkB,KAAAirB,IAAA0K,GACAE,EAAA3R,EAAAlkB,KAAAorB,IAAAuK,GACAG,EAAA5R,EAAAlkB,KAAAirB,IAAAwK,GACAM,EAAA7R,EAAAlkB,KAAAorB,IAAAqK,GACA3B,EAAAO,EAAAnI,EAAA4J,EAAA1B,EAAAjI,EAAA4J,EAAAf,EACAjB,EAAAK,EAAAlI,EAAA4J,EAAAzB,EAAAlI,EAAA4J,EAAAd,EACAe,EAAA1B,EAAAkB,IAAAnB,EAAAnI,EAAA2J,EAAAzB,EAAAjI,EAAAyJ,GACAK,EAAA1B,EAAAiB,IAAApB,EAAAlI,EAAA2J,EAAAxB,EAAAlI,EAAAyJ,GACAM,EAAApC,EAAA0B,GAAAnB,EAAAnI,EAAA6J,EAAA3B,EAAAjI,EAAA2J,GACAK,EAAApC,EAAAyB,GAAApB,EAAAlI,EAAA6J,EAAA1B,EAAAlI,EAAA2J,GAEA,OACAE,EAAAC,EACAC,EAAAC,EACArC,EAAAC,GAOA,SAAAoB,EAAAiB,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAp7C,KAAAooC,MAAA6S,EAAAD,GACAK,EAAAr7C,KAAAooC,MAAA+S,EAAAD,GACA,OAAAG,GAAAD,EACAC,EAAAD,EAGA,EAAAp7C,KAAA4vC,IAAAwL,EAAAC,GAwEA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvH,EAAAC,EAAAuH,EAAAC,GACA,IAAA7C,EACA,GAAAjQ,EAAAiE,sBACAgM,EAAAP,EAAAxnD,KAAAoF,WACA0yC,EAAAgE,mBAAAiM,IACA,OAAAjQ,EAAAgE,mBAAAiM,GAIA,IAIAniD,EAAAC,EAAAmV,EAAAilC,EAAA4K,EAAAC,EAAAC,EAAAC,EAJA7T,EAAAnoC,KAAAmoC,KACAK,EAAAxoC,KAAAwoC,IAAAhmB,EAAAxiB,KAAAwiB,IACAkY,EAAA16B,KAAA06B,IAAAuhB,KACAC,UAGArlD,EAAA,EAAA0kD,EAAA,GAAAE,EAAA,EAAAtH,EACAv9C,GAAA,EAAA2kD,EAAA,EAAAE,EAAA,EAAAtH,EAAA,EAAAwH,EACA3vC,EAAA,EAAAyvC,EAAA,EAAAF,EAEA,IAAA,IAAAprD,EAAA,EAAAA,EAAA,IAAAA,EAOA,GANAA,EAAA,IACA0G,EAAA,EAAA2kD,EAAA,GAAAE,EAAA,EAAAtH,EACAx9C,GAAA,EAAA4kD,EAAA,EAAAE,EAAA,EAAAtH,EAAA,EAAAwH,EACA5vC,EAAA,EAAA0vC,EAAA,EAAAF,GAGA9gB,EAAA9jC,GAAA,MAAA,CACA,GAAA8jC,EAAA7jC,GAAA,MACA,SAGA,GADAo6C,GAAAjlC,EAAAnV,IACAo6C,EAAA,GACAgL,EAAAvmD,KAAAu7C,QAIA8K,EAAAllD,EAAAA,EAAA,EAAAmV,EAAApV,GACA,IAGAolD,EAAA7T,EAAA4T,GAEA,GADAF,IAAAhlD,EAAAmlD,IAAA,EAAAplD,KACAilD,EAAA,GACAI,EAAAvmD,KAAAmmD,GAGA,GADAC,IAAAjlD,EAAAmlD,IAAA,EAAAplD,KACAklD,EAAA,GACAG,EAAAvmD,KAAAomD,IAKA,IADA,IAAA9hB,EAAAC,EAAAkiB,EAAApiD,EAAAkiD,EAAAhsD,OAAAmsD,EAAAriD,EACAA,KACAk3C,EAAAgL,EAAAliD,GAEAigC,GADAmiB,EAAA,EAAAlL,GACAkL,EAAAA,EAAAZ,EAAA,EAAAY,EAAAA,EAAAlL,EAAAwK,EAAA,EAAAU,EAAAlL,EAAAA,EAAAkD,EAAAlD,EAAAA,EAAAA,EAAA0K,EACAO,EAAA,GAAAniD,GAAAigC,EAEAC,EAAAkiB,EAAAA,EAAAA,EAAAX,EAAA,EAAAW,EAAAA,EAAAlL,EAAAyK,EAAA,EAAAS,EAAAlL,EAAAA,EAAAmD,EAAAnD,EAAAA,EAAAA,EAAA2K,EACAM,EAAA,GAAAniD,GAAAkgC,EAGAiiB,EAAA,GAAAE,GAAAb,EACAW,EAAA,GAAAE,GAAAZ,EACAU,EAAA,GAAAE,EAAA,GAAAT,EACAO,EAAA,GAAAE,EAAA,GAAAR,EACA,IAAA/mD,IAEAmlC,EAAAwO,EAAA/xC,MAAA,KAAAylD,EAAA,IACAjiB,EAAAuO,EAAA/xC,MAAA,KAAAylD,EAAA,MAGAliB,EAAAxX,EAAA/rB,MAAA,KAAAylD,EAAA,IACAjiB,EAAAzX,EAAA/rB,MAAA,KAAAylD,EAAA,MAMA,OAHApT,EAAAiE,sBACAjE,EAAAgE,mBAAAiM,GAAAlkD,GAEAA,EA5IAi0C,EAAAlkB,KAAAy3B,QAAA,SAAAl1C,EAAAk5B,EAAAic,EAAAxlB,GAWA,IAVA,IAAAga,EAAAha,EAAA,GACAia,EAAAja,EAAA,GACA0d,EAAA1d,EAAA,GACA8hB,EAAA9hB,EAAA,GACA+hB,EAAA/hB,EAAA,GACAylB,EAAAzlB,EAAA,GACA0lB,EAAA1lB,EAAA,GACA9uB,gBACAy0C,EAAAhE,EAAA8D,EAAAlc,EAAAmc,EAAAF,EAAAxL,EAAAC,EAAA6H,EAAAC,EAAArE,GAEArkD,EAAA,EAAAyY,EAAA6zC,EAAAxsD,OAAAE,EAAAyY,EAAAzY,IACA6X,EAAA7X,GAAA,GAAAssD,EAAAtsD,GAAA,GAAAkwC,EACAr4B,EAAA7X,GAAA,GAAAssD,EAAAtsD,GAAA,GAAAmsD,EACAt0C,EAAA7X,GAAA,GAAAssD,EAAAtsD,GAAA,GAAAkwC,EACAr4B,EAAA7X,GAAA,GAAAssD,EAAAtsD,GAAA,GAAAmsD,EACAt0C,EAAA7X,GAAA,GAAAssD,EAAAtsD,GAAA,GAAAkwC,EACAr4B,EAAA7X,GAAA,GAAAssD,EAAAtsD,GAAA,GAAAmsD,EACAn1C,EAAAu1C,cAAAjmD,MAAA0Q,EAAAa,EAAA7X,KAgBA24C,EAAAlkB,KAAA+3B,eAAA,SAAAtc,EAAAic,EAAAxL,EAAAC,EAAAyD,EAAAoE,EAAAC,EAAA0D,EAAAC,GAKA,IAHA,IAAAI,EAAA1D,EAAA,EAAAC,EAAA,EAAA+C,KACAl0C,EAAAywC,EAAA8D,EAAAlc,EAAAmc,EAAAF,EAAAxL,EAAAC,EAAA6H,EAAAC,EAAArE,GAEArkD,EAAA,EAAAyY,EAAAZ,EAAA/X,OAAAE,EAAAyY,EAAAzY,IACAysD,EAAAtB,EAAApC,EAAAC,EAAAnxC,EAAA7X,GAAA,GAAA6X,EAAA7X,GAAA,GAAA6X,EAAA7X,GAAA,GAAA6X,EAAA7X,GAAA,GAAA6X,EAAA7X,GAAA,GAAA6X,EAAA7X,GAAA,IACA+rD,EAAAxmD,MAAAskC,EAAA4iB,EAAA,GAAA5iB,EAAAqG,EAAApG,EAAA2iB,EAAA,GAAA3iB,EAAAqiB,IACAJ,EAAAxmD,MAAAskC,EAAA4iB,EAAA,GAAA5iB,EAAAqG,EAAApG,EAAA2iB,EAAA,GAAA3iB,EAAAqiB,IACApD,EAAAlxC,EAAA7X,GAAA,GACAgpD,EAAAnxC,EAAA7X,GAAA,GAEA,OAAA+rD,GAiGApT,EAAAlkB,KAAA02B,iBAAAA,EA5PA,GAiQA,WAEA,IAAA3mD,EAAA7C,MAAAY,UAAAiC,MAyDA,SAAA6E,EAAAE,EAAAmjD,EAAAC,GACA,GAAApjD,GAAA,IAAAA,EAAAzJ,OAAA,CAIA,IAAAE,EAAAuJ,EAAAzJ,OAAA,EACA4E,EAAAgoD,EAAAnjD,EAAAvJ,GAAA0sD,GAAAnjD,EAAAvJ,GACA,GAAA0sD,EACA,KAAA1sD,KACA2sD,EAAApjD,EAAAvJ,GAAA0sD,GAAAhoD,KACAA,EAAA6E,EAAAvJ,GAAA0sD,SAKA,KAAA1sD,KACA2sD,EAAApjD,EAAAvJ,GAAA0E,KACAA,EAAA6E,EAAAvJ,IAIA,OAAA0E,GAMAi0C,EAAAlkB,KAAAlrB,OACAi0C,KAvCA,SAAAj0C,EAAAvI,GACA,IAAA4rD,EAAArjD,EAAAzJ,OACA,KAAA8sD,KACArjD,EAAAqjD,GAAA5rD,EAEA,OAAAuI,GAmCAsjD,OA7EA,SAAAtjD,EAAAwE,GAEA,IADA,IAAAhI,EAAAvB,EAAA3D,KAAAoF,UAAA,GAAAvB,KACA1E,EAAA,EAAAyY,EAAAlP,EAAAzJ,OAAAE,EAAAyY,EAAAzY,IACA0E,EAAA1E,GAAA+F,EAAAjG,OAAAyJ,EAAAvJ,GAAA+N,GAAAzH,MAAAiD,EAAAvJ,GAAA+F,GAAAwD,EAAAvJ,GAAA+N,GAAAlN,KAAA0I,EAAAvJ,IAEA,OAAA0E,GAyEA2zC,IAlDA,SAAA9uC,EAAAmjD,GACA,OAAArjD,EAAAE,EAAAmjD,EAAA,SAAAt5B,EAAA05B,GACA,OAAA15B,EAAA05B,KAiDAz6B,IAhEA,SAAA9oB,EAAAmjD,GACA,OAAArjD,EAAAE,EAAAmjD,EAAA,SAAAt5B,EAAA05B,GACA,OAAA15B,GAAA05B,MA5BA,GAgGA,WAaA,SAAAplD,EAAAo8C,EAAAn+C,EAAAC,GAIA,GAAAA,EACA,IAAA+yC,EAAA0C,cAAA11C,aAAAonD,QAEAjJ,EAAAn+C,OAEA,GAAAA,aAAAhE,MAAA,CACAmiD,KACA,IAAA,IAAA9jD,EAAA,EAAAyY,EAAA9S,EAAA7F,OAAAE,EAAAyY,EAAAzY,IACA8jD,EAAA9jD,GAAA0H,KAAA/B,EAAA3F,GAAA4F,QAGA,GAAAD,GAAA,iBAAAA,EACA,IAAA,IAAA8tB,KAAA9tB,EACA,WAAA8tB,EACAqwB,EAAArwB,GAAA/rB,KAAA/B,EAAA8tB,IAEA9tB,EAAAZ,eAAA0uB,KACAqwB,EAAArwB,GAAA/rB,KAAA/B,EAAA8tB,GAAA7tB,SAMAk+C,EAAAn+C,OAIA,IAAA,IAAA8tB,KAAA9tB,EACAm+C,EAAArwB,GAAA9tB,EAAA8tB,GAGA,OAAAqwB,EAeAnL,EAAAlkB,KAAAhzB,QACAiG,OAAAA,EACAT,MAPA,SAAAxF,EAAAmE,GACA,OAAA8B,KAAAjG,EAAAmE,KAQA+yC,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAlkB,KAAAkkB,EAAAkF,YAnEA,GAuEA,WA4DA,SAAAmP,EAAA31C,EAAArX,GACA,IAAAitD,EAAA51C,EAAAopB,WAAAzgC,GAEA,GAAAwX,MAAAy1C,GACA,MAAA,GAEA,GAAAA,EAAA,OAAAA,EAAA,MACA,OAAA51C,EAAA6F,OAAAld,GAKA,GAAA,OAAAitD,GAAAA,GAAA,MAAA,CACA,GAAA51C,EAAAvX,QAAAE,EAAA,EACA,KAAA,iDAEA,IAAA6Q,EAAAwG,EAAAopB,WAAAzgC,EAAA,GACA,GAAA,MAAA6Q,GAAAA,EAAA,MACA,KAAA,iDAEA,OAAAwG,EAAA6F,OAAAld,GAAAqX,EAAA6F,OAAAld,EAAA,GAGA,GAAA,IAAAA,EACA,KAAA,iDAEA,IAAAuf,EAAAlI,EAAAopB,WAAAzgC,EAAA,GAIA,GAAA,MAAAuf,GAAAA,EAAA,MACA,KAAA,iDAIA,OAAA,EAQAo5B,EAAAlkB,KAAAzY,QACAkmC,SAhGA,SAAAlmC,GACA,OAAAA,EAAA3X,QAAA,UAAA,SAAAsP,EAAAu5C,GACA,OAAAA,EAAAA,EAAAxwC,cAAA,MA+FAywC,WAlFA,SAAAnxC,EAAAoxC,GACA,OAAApxC,EAAAkB,OAAA,GAAAR,eACA0wC,EAAApxC,EAAAxX,MAAA,GAAAwX,EAAAxX,MAAA,GAAA7D,gBAiFA0sD,UAxEA,SAAArxC,GACA,OAAAA,EAAA3X,QAAA,KAAA,SACAA,QAAA,KAAA,UACAA,QAAA,KAAA,UACAA,QAAA,KAAA,QACAA,QAAA,KAAA,SAoEAipD,cA3DA,SAAAC,GACA,IAAAC,EAAAxtD,EAAA,EAAAytD,KACA,IAAAztD,EAAA,EAAAA,EAAAutD,EAAAztD,OAAAE,KACA,KAAAwtD,EAAAR,EAAAO,EAAAvtD,KAGAytD,EAAAloD,KAAAioD,GAEA,OAAAC,IAxDA,GAgHA,WAEA,IAAAjpD,EAAA7C,MAAAY,UAAAiC,MAAAkpD,EAAA,aAEAC,EAAA,WACA,IAAA,IAAAl5C,KAAAjU,SAAA,GACA,GAAA,aAAAiU,EACA,OAAA,EAGA,OAAA,EANA,GAUAm5C,EAAA,SAAAngD,EAAA9H,EAAA4F,GACA,IAAA,IAAAkoB,KAAA9tB,EAEA8tB,KAAAhmB,EAAAlL,WACA,mBAAAkL,EAAAlL,UAAAkxB,KACA9tB,EAAA8tB,GAAA,IAAAvrB,QAAA,cAAA,EAEAuF,EAAAlL,UAAAkxB,GAAA,SAAAA,GACA,OAAA,WAEA,IAAA1nB,EAAAxF,KAAA7E,YAAAqK,WACAxF,KAAA7E,YAAAqK,WAAAR,EACA,IAAA2sB,EAAAvyB,EAAA8tB,GAAAntB,MAAAC,KAAAN,WAGA,GAFAM,KAAA7E,YAAAqK,WAAAA,EAEA,eAAA0nB,EACA,OAAAyE,GATA,CAYAzE,GAGAhmB,EAAAlL,UAAAkxB,GAAA9tB,EAAA8tB,GAGAk6B,IACAhoD,EAAAnF,WAAA6B,OAAAE,UAAA/B,WACAiN,EAAAlL,UAAA/B,SAAAmF,EAAAnF,UAEAmF,EAAAvB,UAAA/B,OAAAE,UAAA6B,UACAqJ,EAAAlL,UAAA6B,QAAAuB,EAAAvB,WAMA,SAAAypD,KAEA,SAAAC,EAAAx9C,GAKA,IAJA,IAAAy9C,EAAA,KACAC,EAAAznD,KAGAynD,EAAAtsD,YAAAqK,YAAA,CACA,IAAAkiD,EAAAD,EAAAtsD,YAAAqK,WAAAxJ,UAAA+N,GACA,GAAA09C,EAAA19C,KAAA29C,EAAA,CACAF,EAAAE,EACA,MAGAD,EAAAA,EAAAtsD,YAAAqK,WAAAxJ,UAGA,OAAAwrD,EAIA9nD,UAAAnG,OAAA,EACAiuD,EAAAznD,MAAAC,KAAA/B,EAAA3D,KAAAoF,UAAA,IACA8nD,EAAAltD,KAAA0F,MALA+iB,QAAA0zB,IAAA,sBAAA1sC,EAAA,wCAAA/J,MA6CAoyC,EAAAlkB,KAAAvpB,YA9BA,WACA,IAAAK,EAAA,KACA8jC,EAAA7qC,EAAA3D,KAAAoF,UAAA,GAEA,mBAAAopC,EAAA,KACA9jC,EAAA8jC,EAAAnpC,SAEA,SAAAuH,IACAlH,KAAA2nD,WAAA5nD,MAAAC,KAAAN,WAGAwH,EAAA1B,WAAAR,EACAkC,EAAA0gD,cAEA5iD,IACAsiD,EAAAtrD,UAAAgJ,EAAAhJ,UACAkL,EAAAlL,UAAA,IAAAsrD,EACAtiD,EAAA4iD,WAAA5oD,KAAAkI,IAEA,IAAA,IAAAzN,EAAA,EAAAF,EAAAuvC,EAAAvvC,OAAAE,EAAAF,EAAAE,IACA4tD,EAAAngD,EAAA4hC,EAAArvC,GAAAuL,GAEAkC,EAAAlL,UAAA2rD,aACAzgD,EAAAlL,UAAA2rD,WAAAR,GAIA,OAFAjgD,EAAAlL,UAAAb,YAAA+L,EACAA,EAAAlL,UAAAurD,UAAAA,EACArgD,GA9GA,GAqHA,WAEA,IAAA2gD,IAAAzV,EAAAl+B,SAAA0H,cAAA,OAAAksC,YASA1V,EAAAlkB,KAAA65B,YAAA,SAAAxmC,EAAAvP,EAAAnE,EAAA3I,GACAqc,GAAAA,EAAA8V,iBAAArlB,EAAAnE,GAAAg6C,GAAA3iD,IAWAktC,EAAAlkB,KAAA85B,eAAA,SAAAzmC,EAAAvP,EAAAnE,EAAA3I,GACAqc,GAAAA,EAAAgW,oBAAAvlB,EAAAnE,GAAAg6C,GAAA3iD,IAWAktC,EAAAlkB,KAAA+5B,WAAA,SAAA52C,GACA,IAAAkQ,EAAAlQ,EAAAlS,OACAu2B,EAAA0c,EAAAlkB,KAAAg6B,iBAAA3mC,GACA4mC,EAXA,SAAA92C,GACA,IAAA+2C,EAAA/2C,EAAAg3C,eACA,GAAAD,GAAAA,EAAA,GACA,OAAAA,EAAA,GAEA,OAAA/2C,EAMAi3C,CAAAj3C,GACA,OACAiyB,EAAA6kB,EAAAI,QAAA7yB,EAAA+C,KACA8K,EAAA4kB,EAAAK,QAAA9yB,EAAAsJ,MAzCA,GA+CA,WAkCA,IAAAypB,EAAArW,EAAAl+B,SAAA0H,cAAA,OACA8sC,EAAA,iBAAAD,EAAA9rC,MAAAse,QACA0tB,EAAA,iBAAAF,EAAA9rC,MAAA9Z,OACA+lD,EAAA,wCAGAC,EAAA,SAAAtnC,GAAA,OAAAA,GAEAmnC,EAEAG,EAAA,SAAAtnC,EAAA9mB,GAEA,OADA8mB,EAAA5E,MAAAse,QAAAxgC,EACA8mB,GAGAonC,IAEAE,EAAA,SAAAtnC,EAAA9mB,GACA,IAAAquD,EAAAvnC,EAAA5E,MAWA,OAVA4E,EAAAwnC,eAAAxnC,EAAAwnC,aAAAC,YACAF,EAAA3tB,KAAA,GAEAytB,EAAA5qD,KAAA8qD,EAAAjmD,SACApI,EAAAA,GAAA,MAAA,GAAA,iBAAA,IAAAA,EAAA,IACAquD,EAAAjmD,OAAAimD,EAAAjmD,OAAA/E,QAAA8qD,EAAAnuD,IAGAquD,EAAAjmD,QAAA,kBAAA,IAAApI,EAAA,IAEA8mB,IAIA6wB,EAAAlkB,KAAA+6B,SA1DA,SAAA1nC,EAAAmvB,GACA,IAAAwY,EAAA3nC,EAAA5E,MACA,IAAAusC,EACA,OAAA3nC,EAEA,GAAA,iBAAAmvB,EAEA,OADAnvB,EAAA5E,MAAAyf,SAAA,IAAAsU,EACAA,EAAA/uC,QAAA,YAAA,EACAknD,EAAAtnC,EAAAmvB,EAAAtjC,MAAA,0BAAA,IACAmU,EAEA,IAAA,IAAA2L,KAAAwjB,EACA,GAAA,YAAAxjB,EACA27B,EAAAtnC,EAAAmvB,EAAAxjB,QAEA,CACA,IAAAi8B,EAAA,UAAAj8B,GAAA,aAAAA,OACA,IAAAg8B,EAAAE,WAAA,WAAA,aACAl8B,EACAg8B,EAAAC,GAAAzY,EAAAxjB,GAGA,OAAA3L,GA/BA,GAwEA,WAEA,IAAA8nC,EAAAjuD,MAAAY,UAAAiC,MAYA,IAAAqrD,EAyKAC,EAlKA/6B,EAAA,SAAAg7B,GACA,OAAAH,EAAA/uD,KAAAkvD,EAAA,IAGA,IACAF,EAAA96B,EAAA4jB,EAAAl+B,SAAAkM,sBAAAhlB,MAEA,MAAAiV,IAmBA,SAAAo5C,EAAAtkC,EAAArN,GACA,IAAA8H,EAAAwyB,EAAAl+B,SAAA0H,cAAAuJ,GACA,IAAA,IAAAziB,KAAAoV,EACA,UAAApV,EACAkd,EAAAtf,UAAAwX,EAAApV,GAEA,QAAAA,EACAkd,EAAA8pC,QAAA5xC,EAAApV,GAGAkd,EAAAX,aAAAvc,EAAAoV,EAAApV,IAGA,OAAAkd,EAwCA,SAAAsoC,EAAA3mC,GAaA,IAXA,IAAAkX,EAAA,EACAuG,EAAA,EACA2qB,EAAAvX,EAAAl+B,SAAAmL,gBACA1J,EAAAy8B,EAAAl+B,SAAAyB,OACA0sB,WAAA,EAAAI,UAAA,GAOAlhB,IAAAA,EAAA1C,YAAA0C,EAAAqoC,SAGAroC,EAAAA,EAAA1C,YAAA0C,EAAAqoC,QAEAxX,EAAAl+B,UACAukB,EAAA9iB,EAAA0sB,YAAAsnB,EAAAtnB,YAAA,EACArD,EAAArpB,EAAA8sB,WAAAknB,EAAAlnB,WAAA,IAGAhK,GAAAlX,EAAA8gB,YAAA,EACArD,GAAAzd,EAAAkhB,WAAA,GAGA,IAAAlhB,EAAA5mB,UAAA,UAAA4mB,EAAA5E,MAAA2F,YAKA,OAAAmW,KAAAA,EAAAuG,IAAAA,GAtGAsqB,IACA96B,EAAA,SAAAg7B,GAEA,IADA,IAAArlD,EAAA,IAAA/I,MAAAouD,EAAAjwD,QAAAE,EAAA+vD,EAAAjwD,OACAE,KACA0K,EAAA1K,GAAA+vD,EAAA/vD,GAEA,OAAA0K,IAqJAolD,EADAnX,EAAAl+B,SAAAkO,aAAAgwB,EAAAl+B,SAAAkO,YAAAC,iBACA,SAAAd,EAAAjJ,GACA,IAAAqE,EAAAy1B,EAAAl+B,SAAAkO,YAAAC,iBAAAd,EAAA,MACA,OAAA5E,EAAAA,EAAArE,QAAAxb,GAIA,SAAAykB,EAAAjJ,GACA,IAAA7d,EAAA8mB,EAAA5E,MAAArE,GAIA,OAHA7d,GAAA8mB,EAAAwnC,eACAtuD,EAAA8mB,EAAAwnC,aAAAzwC,IAEA7d,GAIA,WACA,IAAAkiB,EAAAy1B,EAAAl+B,SAAAmL,gBAAA1C,MACAktC,EAAA,eAAAltC,EACA,aACA,kBAAAA,EACA,gBACA,qBAAAA,EACA,mBACA,oBAAAA,EACA,kBACA,GAwCAy1B,EAAAlkB,KAAA47B,wBAhCA,SAAAvoC,QACA,IAAAA,EAAAwoC,gBACAxoC,EAAAwoC,cAAA3X,EAAAlkB,KAAAutB,eAEAoO,EACAtoC,EAAA5E,MAAAktC,GAAA,OAEA,iBAAAtoC,EAAAyoC,eACAzoC,EAAAyoC,aAAA,MAEA,OAAAzoC,GAuBA6wB,EAAAlkB,KAAA+7B,sBAdA,SAAA1oC,QACA,IAAAA,EAAAwoC,gBACAxoC,EAAAwoC,cAAA,MAEAF,EACAtoC,EAAA5E,MAAAktC,GAAA,GAEA,iBAAAtoC,EAAAyoC,eACAzoC,EAAAyoC,aAAA,IAEA,OAAAzoC,GA/CA,GAsDA,WAgCA6wB,EAAAlkB,KAAAg8B,UAxBA,SAAA5vC,EAAArZ,GACA,IAAAkpD,EAAA/X,EAAAl+B,SAAAk2C,qBAAA,QAAA,GACAC,EAAAjY,EAAAl+B,SAAA0H,cAAA,UACA0uC,GAAA,EAGAD,EAAAnO,OAAAmO,EAAAE,mBAAA,SAAAj9C,GACA,GAAAg9C,EAAA,CACA,GAAA,iBAAAtqD,KAAAi4B,YACA,WAAAj4B,KAAAi4B,YACA,aAAAj4B,KAAAi4B,WACA,OAEAqyB,GAAA,EACArpD,EAAAqM,GAAA8kC,EAAAp3C,OAAAqW,OACAg5C,EAAAA,EAAAnO,OAAAmO,EAAAE,mBAAA,OAGAF,EAAA1pD,IAAA2Z,EACA6vC,EAAArrC,YAAAurC,IA3BA,GAuDAjY,EAAAlkB,KAAAs8B,QA3SA,SAAAthD,GACA,MAAA,iBAAAA,EAAAkpC,EAAAl+B,SAAA8B,eAAA9M,GAAAA,GA2SAkpC,EAAAlkB,KAAAM,QAAAA,EACA4jB,EAAAlkB,KAAAu7B,YAAAA,EACArX,EAAAlkB,KAAA6N,SAnPA,SAAAxa,EAAAjhB,GACAihB,IAAA,KAAA,IAAAA,EAAAjhB,UAAA,KAAAqB,QAAA,IAAArB,EAAA,OACAihB,EAAAjhB,YAAAihB,EAAAjhB,UAAA,IAAA,IAAAA,IAkPA8xC,EAAAlkB,KAAAu8B,YAtOA,SAAAlpC,EAAA8B,EAAAvL,GACA,iBAAAuL,IACAA,EAAAomC,EAAApmC,EAAAvL,IAEAyJ,EAAA1C,YACA0C,EAAA1C,WAAAsE,aAAAE,EAAA9B,GAGA,OADA8B,EAAAvE,YAAAyC,GACA8B,GA+NA+uB,EAAAlkB,KAAAg6B,iBAAAA,EACA9V,EAAAlkB,KAAAw8B,iBA7KA,SAAAnpC,GACA,IAAAopC,EAIAC,EAHAjrC,EAAA4B,GAAAA,EAAA/B,cACAqrC,GAAApyB,KAAA,EAAAuG,IAAA,GACAl7B,GAAA20B,KAAA,EAAAuG,IAAA,GAEA8rB,GACA/qB,gBAAA,OACAC,eAAA,MACA6B,YAAA,OACAC,WAAA,OAGA,IAAAniB,EACA,OAAA7b,EAGA,IAAA,IAAAwU,KAAAwyC,EACAhnD,EAAAgnD,EAAAxyC,KAAA9a,SAAA+rD,EAAAhoC,EAAAjJ,GAAA,KAAA,EAGAqyC,EAAAhrC,EAAAN,qBACA,IAAAkC,EAAA8e,wBACAwqB,EAAAtpC,EAAA8e,yBAKA,OAFAuqB,EAAA1C,EAAA3mC,IAGAkX,KAAAoyB,EAAApyB,KAAAmyB,EAAAnyB,MAAAkyB,EAAA5gB,YAAA,GAAAjmC,EAAA20B,KACAuG,IAAA6rB,EAAA7rB,IAAA4rB,EAAA5rB,KAAA2rB,EAAAI,WAAA,GAAAjnD,EAAAk7B,MAgJAoT,EAAAlkB,KAAAq7B,gBAAAA,EACAnX,EAAAlkB,KAAA88B,cA5BA,SAAAzpC,GACA,IAAA0pC,EAAA7Y,EAAAQ,oBAAArxB,GACA,OAAA0pC,EAAAC,SAAAD,EAAAE,QA2BA/Y,EAAAlkB,KAAAk9B,iBAxBA,SAAA7pC,GACA,IAAA6wB,EAAA0C,aACA,OAEA,IAAAmW,EAAA7Y,EAAAQ,oBAAArxB,GACA0pC,IACAA,EAAAE,OAAA,KACAF,EAAAC,QAAA,KAEAD,EAAAI,YAAA,KACAJ,EAAAK,YAAA,KACAL,EAAAM,WAAA,OAjTA,GAmUA,WAMA,SAAAC,KA8CApZ,EAAAlkB,KAAAu9B,QAjCA,SAAAnxC,EAAApV,GACAA,IAAAA,MAEA,IAAAsC,EAAAtC,EAAAsC,OAAAtC,EAAAsC,OAAA2O,cAAA,MACAu1C,EAAAxmD,EAAAwmD,YAAA,aACAC,EAAA,IAAAvZ,EAAAp3C,OAAA4wD,eACAj2C,EAAAzQ,EAAAyQ,MAAAzQ,EAAA2mD,WAGAF,EAAApB,mBAAA,WACA,IAAAoB,EAAA1zB,aACAyzB,EAAAC,GACAA,EAAApB,mBAAAiB,IAIA,QAAAhkD,IACAmO,EAAA,KACA,iBAAAzQ,EAAA2mD,aACAvxC,EApCA,SAAAA,EAAAwxC,GACA,OAAAxxC,GAAA,KAAAtc,KAAAsc,GAAA,IAAA,KAAAwxC,EAmCAC,CAAAzxC,EAAApV,EAAA2mD,cAIAF,EAAAK,KAAAxkD,EAAA8S,GAAA,IAEA,SAAA9S,GAAA,QAAAA,IACAmkD,EAAAM,iBAAA,eAAA,qCAIA,OADAN,EAAAO,KAAAv2C,GACAg2C,GAjDA,GA4DAvZ,EAAAqE,IAAA1zB,QAAA0zB,IAMArE,EAAApvB,KAAAD,QAAAC,KAGA,WAEA,SAAAtW,IACA,OAAA,EAGA,SAAAy/C,EAAA5R,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,EAAAhM,KAAA6vC,IAAAoB,EAAA9rC,GAAAnF,KAAA4vC,GAAA,IAAA5jC,EAAAnV,EA2DA,IAAAisD,EAAAha,EAAAp3C,OAAAuR,uBACA6lC,EAAAp3C,OAAAqxD,6BACAja,EAAAp3C,OAAAsxD,0BACAla,EAAAp3C,OAAAuxD,wBACAna,EAAAp3C,OAAAwxD,yBACA,SAAAvrD,GACA,OAAAmxC,EAAAp3C,OAAAqR,WAAApL,EAAA,IAAA,KAGAwrD,EAAAra,EAAAp3C,OAAA0xD,sBAAAta,EAAAp3C,OAAAoR,aASA,SAAAugD,IACA,OAAAP,EAAArsD,MAAAqyC,EAAAp3C,OAAA0E,WAOA0yC,EAAAlkB,KAAA2a,QArEA,SAAA3jC,GAEAynD,EAAA,SAAAC,GACA1nD,IAAAA,MAEA,IAEAwmC,EAFA9iC,EAAAgkD,IAAA,IAAAC,KACA9jB,EAAA7jC,EAAA6jC,UAAA,IACA+jB,EAAAlkD,EAAAmgC,EACAgkB,EAAA7nD,EAAA6nD,UAAArgD,EACAynB,EAAAjvB,EAAAivB,OAAAznB,EACAg/C,EAAAxmD,EAAAwmD,YAAAh/C,EACA+8B,EAAAvkC,EAAAukC,QAAA0iB,EACAa,EAAA,eAAA9nD,EAAAA,EAAA8nD,WAAA,EACAC,EAAA,aAAA/nD,EAAAA,EAAA+nD,SAAA,IACAC,EAAAhoD,EAAAgoD,SAAAD,EAAAD,EAEA9nD,EAAAioD,SAAAjoD,EAAAioD,UAEA,SAAAC,EAAAC,GAIA,IAAAC,GADA5hB,EAAA2hB,IAAA,IAAAR,MACAC,EAAA/jB,EAAA2C,EAAA9iC,EACA2kD,EAAAD,EAAAvkB,EACAhwB,EAAA0wB,EAAA6jB,EAAAN,EAAAE,EAAAnkB,GACAykB,EAAAlkD,KAAA06B,KAAAjrB,EAAAi0C,GAAAE,GACA,IAAA/4B,IAIA,OAAAuX,EAAAohB,GACAC,EAAAE,EAAA,EAAA,QACAvB,EAAAuB,EAAA,EAAA,KAIAF,EAAAh0C,EAAAy0C,EAAAD,QACAZ,EAAAS,IAVA1B,EAAAuB,EAAA,EAAA,GATA,CAqBArkD,MA+BAwpC,EAAAlkB,KAAAy+B,iBAAAA,EACAva,EAAAlkB,KAAAu/B,gBANA,WACA,OAAAhB,EAAA1sD,MAAAqyC,EAAAp3C,OAAA0E,YAzFA,GAkGA,WA+CA0yC,EAAAlkB,KAAAw/B,aApBA,SAAAC,EAAAC,EAAA7kB,EAAA7jC,GACA,IAAA2oD,EAAA,IAAAzb,EAAA0b,MAAAH,GAAAI,YACAC,EAAA,IAAA5b,EAAA0b,MAAAF,GAAAG,YAEA7oD,EAAAA,MAEAktC,EAAAlkB,KAAA2a,QAAAuJ,EAAAlkB,KAAAhzB,OAAAiG,OAAA+D,GACA6jC,SAAAA,GAAA,IACAikB,WAAAa,EACAZ,SAAAe,EACAd,QAAAc,EACAvkB,OAAA,SAAA6jB,EAAAN,EAAAE,EAAAnkB,GACA,IAnCAklB,EAAA/wC,EAAAymB,EACAuqB,EAkCAC,EAAAjpD,EAAAkpD,YACAlpD,EAAAkpD,YAAAd,EAAAvkB,GACA,EAAAz/B,KAAA6vC,IAAAmU,EAAAvkB,GAAAz/B,KAAA4vC,GAAA,IACA,OAtCA+U,EAsCAjB,EAtCA9vC,EAsCAgwC,EAtCAvpB,EAsCAwqB,EArCAD,EAAA,QACA1wD,SAAAywD,EAAA,GAAAtqB,GAAAzmB,EAAA,GAAA+wC,EAAA,IAAA,IAAA,IACAzwD,SAAAywD,EAAA,GAAAtqB,GAAAzmB,EAAA,GAAA+wC,EAAA,IAAA,IAAA,IACAzwD,SAAAywD,EAAA,GAAAtqB,GAAAzmB,EAAA,GAAA+wC,EAAA,IAAA,IAEAC,GAAA,KAAAD,GAAA/wC,EAAAxC,WAAAuzC,EAAA,GAAAtqB,GAAAzmB,EAAA,GAAA+wC,EAAA,KAAA,GACAC,GAAA,SAXA,GAoDA,WAEA,SAAAG,EAAAnuD,EAAAoV,EAAApH,EAAA4xB,GAcA,OAbA5/B,EAAAoJ,KAAA06B,IAAA1uB,IACApV,EAAAoV,EACAwqB,EAAA5xB,EAAA,GAKA4xB,EADA,IAAAxqB,GAAA,IAAApV,EACAgO,GAAA,EAAA5E,KAAA4vC,IAAA5vC,KAAAglD,KAAA,GAGApgD,GAAA,EAAA5E,KAAA4vC,IAAA5vC,KAAAglD,KAAAh5C,EAAApV,IAGAA,EAAAA,EAAAoV,EAAAA,EAAApH,EAAAA,EAAA4xB,EAAAA,GAGA,SAAAyuB,EAAAC,EAAAjU,EAAA9rC,GACA,OAAA+/C,EAAAtuD,EACAoJ,KAAAqoC,IAAA,EAAA,IAAA4I,GAAA,IACAjxC,KAAAgwC,KAAAiB,EAAA9rC,EAAA+/C,EAAA1uB,IAAA,EAAAx2B,KAAA4vC,IAAAsV,EAAAtgD,GA8QA,SAAAugD,EAAAlU,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,EAAAo5C,EAAAjgD,EAAA8rC,EAAA,EAAAjlC,EAAA7G,GAAAtO,EAOA,SAAAuuD,EAAAnU,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA8rC,GAAA9rC,GAAA,EAAA,KACA6G,GAAA,OAAAilC,EAAAA,GAAAp6C,EAEAo6C,EAAA,EAAA,KACAjlC,GAAA,QAAAilC,GAAA,IAAA,MAAAA,EAAA,KAAAp6C,EAEAo6C,EAAA,IAAA,KACAjlC,GAAA,QAAAilC,GAAA,KAAA,MAAAA,EAAA,OAAAp6C,EAGAmV,GAAA,QAAAilC,GAAA,MAAA,MAAAA,EAAA,SAAAp6C,EAoBAiyC,EAAAlkB,KAAA8a,MAMA2lB,WAAA,SAAApU,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,GAAAilC,GAAA9rC,GAAA8rC,EAAAp6C,GAOAyuD,YAAA,SAAArU,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,GAAAilC,GAAA9rC,IAAA8rC,EAAA,GAAAp6C,GAOA0uD,cAAA,SAAAtU,EAAAp6C,EAAAmV,EAAA7G,GAEA,OADA8rC,GAAA9rC,EAAA,GACA,EACA6G,EAAA,EAAAilC,EAAAA,EAAAp6C,GAEAmV,EAAA,KAAAilC,GAAAA,EAAA,GAAA,GAAAp6C,GAOA2uD,YAAA,SAAAvU,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,GAAAilC,GAAA9rC,GAAA8rC,EAAAA,EAAAp6C,GAGA4uD,aApVA,SAAAxU,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,IAAAilC,EAAAA,EAAA9rC,EAAA,GAAA8rC,EAAAA,EAAA,GAAAp6C,GAoVA6uD,eA7UA,SAAAzU,EAAAp6C,EAAAmV,EAAA7G,GAEA,IADA8rC,GAAA9rC,EAAA,GACA,EACA,OAAA6G,EAAA,EAAAilC,EAAAA,EAAAA,EAAAp6C,EAEA,OAAAmV,EAAA,IAAAilC,GAAA,GAAAA,EAAAA,EAAA,GAAAp6C,GAyUA8uD,YAlUA,SAAA1U,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,GAAAilC,GAAA9rC,GAAA8rC,EAAAA,EAAAA,EAAAp6C,GAkUA+uD,aA3TA,SAAA3U,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,IAAAilC,EAAAA,EAAA9rC,EAAA,GAAA8rC,EAAAA,EAAAA,EAAA,GAAAp6C,GA2TAgvD,eApTA,SAAA5U,EAAAp6C,EAAAmV,EAAA7G,GAEA,IADA8rC,GAAA9rC,EAAA,GACA,EACA,OAAA6G,EAAA,EAAAilC,EAAAA,EAAAA,EAAAA,EAAAp6C,EAEA,OAAAmV,EAAA,IAAAilC,GAAA,GAAAA,EAAAA,EAAAA,EAAA,GAAAp6C,GAgTAivD,YAzSA,SAAA7U,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,GAAAilC,GAAA9rC,GAAA8rC,EAAAA,EAAAA,EAAAA,EAAAp6C,GAySAkvD,aAlSA,SAAA9U,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,IAAAilC,EAAAA,EAAA9rC,EAAA,GAAA8rC,EAAAA,EAAAA,EAAAA,EAAA,GAAAp6C,GAkSAmvD,eA3RA,SAAA/U,EAAAp6C,EAAAmV,EAAA7G,GAEA,IADA8rC,GAAA9rC,EAAA,GACA,EACA,OAAA6G,EAAA,EAAAilC,EAAAA,EAAAA,EAAAA,EAAAA,EAAAp6C,EAEA,OAAAmV,EAAA,IAAAilC,GAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAA,GAAAp6C,GAuRAovD,WAhRA,SAAAhV,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,EAAAhM,KAAA6vC,IAAAoB,EAAA9rC,GAAAnF,KAAA4vC,GAAA,IAAA5jC,EAAAnV,GAgRAqvD,YAzQA,SAAAjV,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,EAAAhM,KAAAgwC,IAAAiB,EAAA9rC,GAAAnF,KAAA4vC,GAAA,IAAA/4C,GAyQAsvD,cAlQA,SAAAlV,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,EAAA,GAAAhM,KAAA6vC,IAAA7vC,KAAA4vC,GAAAqB,EAAA9rC,GAAA,GAAAtO,GAkQAuvD,WA3PA,SAAAnV,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA,IAAA8rC,EAAAp6C,EAAAmV,EAAAhM,KAAAqoC,IAAA,EAAA,IAAA4I,EAAA9rC,EAAA,IAAAtO,GA2PAwvD,YApPA,SAAApV,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA8rC,IAAA9rC,EAAAtO,EAAAmV,EAAAA,GAAA,EAAAhM,KAAAqoC,IAAA,GAAA,GAAA4I,EAAA9rC,IAAAtO,GAoPAyvD,cA7OA,SAAArV,EAAAp6C,EAAAmV,EAAA7G,GACA,GAAA,IAAA8rC,EACA,OAAAp6C,EAEA,GAAAo6C,IAAA9rC,EACA,OAAAtO,EAAAmV,EAGA,IADAilC,GAAA9rC,EAAA,GACA,EACA,OAAA6G,EAAA,EAAAhM,KAAAqoC,IAAA,EAAA,IAAA4I,EAAA,IAAAp6C,EAEA,OAAAmV,EAAA,GAAA,EAAAhM,KAAAqoC,IAAA,GAAA,KAAA4I,IAAAp6C,GAmOA0vD,WA5NA,SAAAtV,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,GAAAhM,KAAAmoC,KAAA,GAAA8I,GAAA9rC,GAAA8rC,GAAA,GAAAp6C,GA4NA2vD,YArNA,SAAAvV,EAAAp6C,EAAAmV,EAAA7G,GACA,OAAA6G,EAAAhM,KAAAmoC,KAAA,GAAA8I,EAAAA,EAAA9rC,EAAA,GAAA8rC,GAAAp6C,GAqNA4vD,cA9MA,SAAAxV,EAAAp6C,EAAAmV,EAAA7G,GAEA,IADA8rC,GAAA9rC,EAAA,GACA,EACA,OAAA6G,EAAA,GAAAhM,KAAAmoC,KAAA,EAAA8I,EAAAA,GAAA,GAAAp6C,EAEA,OAAAmV,EAAA,GAAAhM,KAAAmoC,KAAA,GAAA8I,GAAA,GAAAA,GAAA,GAAAp6C,GA0MA6vD,cAnMA,SAAAzV,EAAAp6C,EAAAmV,EAAA7G,GACA,IAAAP,EAAA,EAAAhO,EAAAoV,EACA,GAAA,IAAAilC,EACA,OAAAp6C,EAGA,GAAA,IADAo6C,GAAA9rC,GAEA,OAAAtO,EAAAmV,EAEApH,IACAA,EAAA,GAAAO,GAGA,OAAA8/C,EADAF,EAAAnuD,EAAAoV,EAAApH,EAXA,SAYAqsC,EAAA9rC,GAAAtO,GAuLA8vD,eAhLA,SAAA1V,EAAAp6C,EAAAmV,EAAA7G,GACA,IAAAP,EAAA,EAAAhO,EAAAoV,EACA,GAAA,IAAAilC,EACA,OAAAp6C,EAGA,GAAA,IADAo6C,GAAA9rC,GAEA,OAAAtO,EAAAmV,EAEApH,IACAA,EAAA,GAAAO,GAEA,IAAA+/C,EAAAH,EAAAnuD,EAAAoV,EAAApH,EAXA,SAYA,OAAAsgD,EAAAtuD,EAAAoJ,KAAAqoC,IAAA,GAAA,GAAA4I,GAAAjxC,KAAAgwC,KAAAiB,EAAA9rC,EAAA+/C,EAAA1uB,IAAA,EAAAx2B,KAAA4vC,IAAAsV,EAAAtgD,GAAAsgD,EAAAl5C,EAAAnV,GAoKA+vD,iBA7JA,SAAA3V,EAAAp6C,EAAAmV,EAAA7G,GACA,IAAAP,EAAA,EAAAhO,EAAAoV,EACA,GAAA,IAAAilC,EACA,OAAAp6C,EAGA,GAAA,IADAo6C,GAAA9rC,EAAA,GAEA,OAAAtO,EAAAmV,EAEApH,IACAA,EAAAO,GAAA,GAAA,MAEA,IAAA+/C,EAAAH,EAAAnuD,EAAAoV,EAAApH,EAXA,SAYA,GAAAqsC,EAAA,EACA,OAAA,GAAAgU,EAAAC,EAAAjU,EAAA9rC,GAAAtO,EAEA,OAAAquD,EAAAtuD,EAAAoJ,KAAAqoC,IAAA,GAAA,IAAA4I,GAAA,IACAjxC,KAAAgwC,KAAAiB,EAAA9rC,EAAA+/C,EAAA1uB,IAAA,EAAAx2B,KAAA4vC,IAAAsV,EAAAtgD,GAAA,GAAAsgD,EAAAl5C,EAAAnV,GA6IAgwD,WAtIA,SAAA5V,EAAAp6C,EAAAmV,EAAA7G,EAAAqxB,QACAhjC,IAAAgjC,IACAA,EAAA,SAEA,OAAAxqB,GAAAilC,GAAA9rC,GAAA8rC,IAAAza,EAAA,GAAAya,EAAAza,GAAA3/B,GAmIAiwD,YA5HA,SAAA7V,EAAAp6C,EAAAmV,EAAA7G,EAAAqxB,QACAhjC,IAAAgjC,IACAA,EAAA,SAEA,OAAAxqB,IAAAilC,EAAAA,EAAA9rC,EAAA,GAAA8rC,IAAAza,EAAA,GAAAya,EAAAza,GAAA,GAAA3/B,GAyHAkwD,cAlHA,SAAA9V,EAAAp6C,EAAAmV,EAAA7G,EAAAqxB,QACAhjC,IAAAgjC,IACAA,EAAA,SAGA,IADAya,GAAA9rC,EAAA,GACA,EACA,OAAA6G,EAAA,GAAAilC,EAAAA,IAAA,GAAAza,GAAA,QAAAya,EAAAza,IAAA3/B,EAEA,OAAAmV,EAAA,IAAAilC,GAAA,GAAAA,IAAA,GAAAza,GAAA,QAAAya,EAAAza,GAAA,GAAA3/B,GA2GAsuD,aAAAA,EACAC,cAAAA,EACA4B,gBA3EA,SAAA/V,EAAAp6C,EAAAmV,EAAA7G,GACA,GAAA8rC,EAAA9rC,EAAA,EACA,MAAA,GAAAggD,EAAA,EAAAlU,EAAA,EAAAjlC,EAAA7G,GAAAtO,EAEA,MAAA,GAAAuuD,EAAA,EAAAnU,EAAA9rC,EAAA,EAAA6G,EAAA7G,GAAA,GAAA6G,EAAAnV,IAnUA,GAgZA,SAAAsT,GAEA,aAOA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAjxC,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OACAT,EAAA0xC,EAAAlkB,KAAAhzB,OAAAwF,MACAwxC,EAAAE,EAAAlkB,KAAAgkB,QACAkJ,EAAAhJ,EAAAlkB,KAAAktB,UACA4D,EAAA5M,EAAAlkB,KAAA8wB,0BAQAuR,GACAvN,GAAA,OACA1f,EAAA,OACA9sB,EAAA,SACAysC,GAAA,MACA1f,EAAA,MACA/G,QAAA,UACAoO,WAAA,UACA5zB,UAAA,kBACAw5C,eAAA,cACAC,YAAA,WACAC,cAAA,aACAC,YAAA,WACAC,aAAA,YACA71B,cAAA,aACA81B,iBAAA,cACAC,cAAA,aACAC,mBAAA,kBACAC,oBAAA,mBACAC,iBAAA,gBACAC,kBAAA,iBACAC,oBAAA,mBACAC,iBAAA,gBACAC,eAAA,cACAC,kBAAA,iBACAC,cAAA,aACAt2B,QAAA,UACAu2B,YAAA,WACAC,YAAA,WACAC,gBAAA,iBAGAC,GACAC,OAAA,gBACA3a,KAAA,eAcA,SAAA4a,EAAAv5C,GAEA,OAAAA,KAAAi4C,EACAA,EAAAj4C,GAEAA,EAGA,SAAAw5C,EAAAx5C,EAAA7d,EAAAs3D,EAAA1W,GACA,IACAxpC,EADA5W,EAAA,mBAAAa,OAAAE,UAAA/B,SAAAK,KAAAG,GAGA,GAAA,SAAA6d,GAAA,WAAAA,GAAA,SAAA7d,EAGA,GAAA,kBAAA6d,EACA7d,EAAA,uBAAAA,OAEA,GAAA,oBAAA6d,EAEA7d,EADA,SAAAA,EACA,KAGAA,EAAAqD,QAAA,KAAA,KAAAxE,MAAA,OAAA+K,IAAAqW,iBAGA,GAAA,oBAAApC,EAEA7d,EADAs3D,GAAAA,EAAAC,gBACAhT,EACA+S,EAAAC,gBAAA5f,EAAA6f,wBAAAx3D,IAGA23C,EAAA6f,wBAAAx3D,QAGA,GAAA,YAAA6d,EACA7d,EAAA,SAAAA,GAAA,WAAAA,EAEAs3D,IAAA,IAAAA,EAAA9vC,UACAxnB,GAAA,QAGA,GAAA,YAAA6d,EACA7d,EAAAigB,WAAAjgB,GACAs3D,QAAA,IAAAA,EAAA92B,UACAxgC,GAAAs3D,EAAA92B,cAGA,GAAA,eAAA3iB,EACA7d,EAAA,UAAAA,EAAA,OAAA,QAAAA,EAAA,QAAA,cAEA,GAAA,gBAAA6d,EAEAzG,EAAAupC,EAAA3gD,EAAA4gD,GAAAA,EAAA,SAEA,GAAA,eAAA/iC,EAAA,CACA,IAAA45C,EAAAz3D,EAAAkH,QAAA,QACAwwD,EAAA13D,EAAAkH,QAAA,UACAlH,EAAA,OACAy3D,GAAA,GAAAC,GAAA,GAAAA,EAAAD,EACAz3D,EAAA,UAEA,IAAAy3D,GAAAC,GAAA,IACA13D,EAAA,cAGA,CAAA,GAAA,SAAA6d,GAAA,eAAAA,EACA,OAAA7d,EAGAoX,EAAA5W,EAAAR,EAAA4J,IAAA+2C,GAAAA,EAAA3gD,EAAA4gD,QAzDA5gD,EAAA,GA4DA,OAAAQ,GAAAgW,MAAAY,GAAApX,EAAAoX,EAMA,SAAAugD,EAAAjuD,GACA,OAAA,IAAA+I,OAAA,KAAA/I,EAAAgJ,KAAA,KAAA,OAAA,KAkCA,SAAAklD,EAAA1yC,EAAA2yC,GACA,IAAAh0C,EAAAi0C,EAAA94D,EAAAyY,EAAAsgD,KACA,IAAA/4D,EAAA,EAAAyY,EAAAogD,EAAA/4D,OAAAE,EAAAyY,EAAAzY,IACA6kB,EAAAg0C,EAAA74D,GACA84D,EAAA5yC,EAAAyqC,qBAAA9rC,GACAk0C,EAAAA,EAAAxuD,OAAA5I,MAAAY,UAAAiC,MAAA3D,KAAAi4D,IAEA,OAAAC,EA6MA,SAAAC,EAAAlxC,EAAAmxC,GACA,IAAAC,EAAAC,GAAA,EAMA,OAJAD,EAAAE,EAAAtxC,EAAAmxC,EAAA9yD,SACA8yD,EAAAn5D,SACAq5D,EAKA,SAAArxC,EAAAmxC,GACA,IAAAhhD,EAAAkhD,GAAA,EACA,KAAArxC,EAAA1C,YAAA,IAAA0C,EAAA1C,WAAAlkB,UAAA+3D,EAAAn5D,QACAq5D,IACAlhD,EAAAghD,EAAA9yD,OAEA2hB,EAAAA,EAAA1C,WACA+zC,EAAAC,EAAAtxC,EAAA7P,GAEA,OAAA,IAAAghD,EAAAn5D,OAdAu5D,CAAAvxC,EAAAmxC,IAEAC,GAAAC,GAAA,IAAAF,EAAAn5D,OAkBA,SAAAs5D,EAAAtxC,EAAA7P,GACA,IAEAzE,EAAAxT,EAFA6kB,EAAAiD,EAAAjD,SACAy0C,EAAAxxC,EAAAkI,aAAA,SACAvgB,EAAAqY,EAAAkI,aAAA,MASA,GANAxc,EAAA,IAAAC,OAAA,IAAAoR,EAAA,KACA5M,EAAAA,EAAA5T,QAAAmP,EAAA,IACA/D,GAAAwI,EAAAnY,SACA0T,EAAA,IAAAC,OAAA,IAAAhE,EAAA,mBAAA,KACAwI,EAAAA,EAAA5T,QAAAmP,EAAA,KAEA8lD,GAAArhD,EAAAnY,OAEA,IADAw5D,EAAAA,EAAAz5D,MAAA,KACAG,EAAAs5D,EAAAx5D,OAAAE,KACAwT,EAAA,IAAAC,OAAA,MAAA6lD,EAAAt5D,GAAA,mBAAA,KACAiY,EAAAA,EAAA5T,QAAAmP,EAAA,IAGA,OAAA,IAAAyE,EAAAnY,OAOA,SAAAy5D,EAAArzC,EAAAzW,GACA,IAAA0W,EAEA,GADAD,EAAA3J,iBAAA4J,EAAAD,EAAA3J,eAAA9M,IACA0W,EACA,OAAAA,EAEA,IAAAjM,EAAAla,EAAAyY,EAAA+gD,EAAAtzC,EAAAyqC,qBAAA,KACA,IAAA3wD,EAAA,EAAAyY,EAAA+gD,EAAA15D,OAAAE,EAAAyY,EAAAzY,IAEA,GADAka,EAAAs/C,EAAAx5D,GACAyP,IAAAyK,EAAA8V,aAAA,MACA,OAAA9V,EA5YAy+B,EAAA8gB,sBAAAd,GA7CA,OAAA,SAAA,UAAA,WAAA,UAAA,OAAA,OACA,QAAA,SA6CAhgB,EAAA+gB,wBAAAf,GA5CA,SAAA,QAAA,SAAA,UAAA,OAAA,QA6CAhgB,EAAAghB,yBAAAhB,GA5CA,UAAA,OAAA,SAAA,WAAA,WAAA,OAAA,SA6CAhgB,EAAAihB,qBAAAjB,GA5CA,SAAA,IAAA,IAAA,MAAA,WAAA,SA8CAhgB,EAAAkhB,YACAlhB,EAAAmhB,gBACAnhB,EAAAohB,aAsIAphB,EAAA6f,wBAAA,WAyBA,SAAAwB,EAAAtT,EAAA3gD,EAAAmkC,GACAwc,EAAAxc,GAAAr6B,KAAA22C,IAAA7N,EAAAlkB,KAAA6jB,iBAAAvyC,EAAA,KAWA,IAAA81C,EAAAlD,EAAAkD,QAGAtkC,EAAAohC,EAAA8C,MAEAwe,EAAA,uBAEApU,EAAA,yBAAAtuC,EAAA,YAEAuuC,EAAA,yBAAAvuC,EAAA,YAEAotC,EAAA,0BAAAptC,EAAA,OACA0iD,EAAA,IAAA1iD,EAAA,IACA0iD,EAAA,IAAA1iD,EAAA,cAEAk5B,EAAA,yBAAAl5B,EAAA,OACA0iD,EAAA,IAAA1iD,EAAA,cAEAwiC,EAAA,6BAAAxiC,EAAA,OACA0iD,EAAA,IAAA1iD,EAAA,cAEAmvC,EAAA,0BACAnvC,EAAA,IAAA0iD,EACA,IAAA1iD,EAAA,IAAA0iD,EACA,IAAA1iD,EAAA,IAAA0iD,EACA,IAAA1iD,EAAA,IAAA0iD,EACA,IAAA1iD,EAAA,IAAA0iD,EACA,IAAA1iD,EAAA,YAGAgG,EAAA,MACAmpC,EAAA,IACA3M,EAAA,IACAtJ,EAAA,IACAkU,EAAA,IACAkB,EAAA,IACAC,EACA,IAEAjW,EAAA,MAAAtyB,EAAA,MAAA08C,EAAA,IAAA18C,EAAA,MAEA28C,EAAA,WAAArqB,EAAA,UAGAsqB,EAAA,IAAA1mD,OAAAymD,GAGAE,EAAA,IAAA3mD,OAAA8J,EAAA,KAEA,OAAA,SAAAuO,GAGA,IAAA46B,EAAA7K,EAAAtxC,SACA8vD,KAIA,IAAAvuC,GAAAA,IAAAquC,EAAA51D,KAAAunB,GACA,OAAA46B,EAGA56B,EAAAznB,QAAA+1D,EAAA,SAAAzmD,GAEA,IAAA26B,EAAA,IAAA76B,OAAA8J,GAAA3C,KAAAjH,GAAAvK,OAAA,SAAAuK,GAEA,QAAAA,IAEA2mD,EAAAhsB,EAAA,GACAvoC,EAAAuoC,EAAA9pC,MAAA,GAAAoG,IAAAqW,YAEA,OAAAq5C,GACA,IAAA,aA/EA,SAAA5T,EAAA3gD,GACA2gD,EAAA,GAAA3gD,EAAA,GACA,IAAAA,EAAAjG,SACA4mD,EAAA,GAAA3gD,EAAA,IA6EAw0D,CAAA7T,EAAA3gD,GACA,MACA,IAAA,SACAA,EAAA,GAAA4yC,EAAAlkB,KAAA6jB,iBAAAvyC,EAAA,IA/GA,SAAA2gD,EAAA3gD,GACA,IAAA25C,EAAA/G,EAAAlkB,KAAAirB,IAAA35C,EAAA,IAAA85C,EAAAlH,EAAAlkB,KAAAorB,IAAA95C,EAAA,IACA8jC,EAAA,EAAAC,EAAA,EACA,IAAA/jC,EAAAjG,SACA+pC,EAAA9jC,EAAA,GACA+jC,EAAA/jC,EAAA,IAGA2gD,EAAA,GAAAhH,EACAgH,EAAA,GAAA7G,EACA6G,EAAA,IAAA7G,EACA6G,EAAA,GAAAhH,EACAgH,EAAA,GAAA7c,GAAA6V,EAAA7V,EAAAgW,EAAA/V,GACA4c,EAAA,GAAA5c,GAAA+V,EAAAhW,EAAA6V,EAAA5V,GAmGA0wB,CAAA9T,EAAA3gD,GACA,MACA,IAAA,SAlGA,SAAA2gD,EAAA3gD,GACA,IAAA00D,EAAA10D,EAAA,GACA20D,EAAA,IAAA30D,EAAAjG,OAAAiG,EAAA,GAAAA,EAAA,GAEA2gD,EAAA,GAAA+T,EACA/T,EAAA,GAAAgU,EA8FAtU,CAAAM,EAAA3gD,GACA,MACA,IAAA,QACAi0D,EAAAtT,EAAA3gD,EAAA,GACA,MACA,IAAA,QACAi0D,EAAAtT,EAAA3gD,EAAA,GACA,MACA,IAAA,SACA2gD,EAAA3gD,EAKAs0D,EAAA90D,KAAAmhD,EAAAn8C,UAEAm8C,EAAA7K,EAAAtxC,WAIA,IADA,IAAAowD,EAAAN,EAAA,GACAA,EAAAv6D,OAAA,GACAu6D,EAAAn0D,QACAy0D,EAAAhiB,EAAAlkB,KAAA8wB,0BAAAoV,EAAAN,EAAA,IAEA,OAAAM,GA5IA,GA6TA,IAAAC,EAAA,IAAAnnD,OACA,SACAklC,EAAA8C,MAAA,gBACA9C,EAAA8C,MAAA,gBACA9C,EAAA8C,MAAA,gBACA9C,EAAA8C,MAAA,WAOA,SAAAof,EAAA/yC,GAEA,IAKAgzC,EAAAC,EAAArU,EAAAvgC,EALA60C,EAAAlzC,EAAAkI,aAAA,WACA21B,EAAA,EACAC,EAAA,EACAzE,EAAA,EACAG,EAAA,EAEA2Z,EAAAnzC,EAAAkI,aAAA,SACAkrC,EAAApzC,EAAAkI,aAAA,UACA6Z,EAAA/hB,EAAAkI,aAAA,MAAA,EACA8Z,EAAAhiB,EAAAkI,aAAA,MAAA,EACAmrC,EAAArzC,EAAAkI,aAAA,wBAAA,GACAorC,GAAAJ,IAAAriB,EAAA+gB,wBAAAn1D,KAAAujB,EAAAjD,aACAm2C,EAAAA,EAAArnD,MAAAinD,IACAS,GAAAJ,IAAAC,GAAA,SAAAD,GAAA,SAAAC,EACAI,EAAAF,GAAAC,EACAE,KAAAhB,EAAA,GAAAiB,EAAA,EAAAC,EAAA,EAMA,GAJAF,EAAAl0B,MAAA,EACAk0B,EAAAj0B,OAAA,EACAi0B,EAAAD,WAAAA,EAEAA,EACA,OAAAC,EAGA,GAAAH,EAGA,OAFAG,EAAAl0B,MAAAsa,EAAAsZ,GACAM,EAAAj0B,OAAAqa,EAAAuZ,GACAK,EAiDA,GA/CApa,GAAAlgC,WAAA+5C,EAAA,IACA1Z,GAAArgC,WAAA+5C,EAAA,IACAF,EAAA75C,WAAA+5C,EAAA,IACAD,EAAA95C,WAAA+5C,EAAA,IACAO,EAAApa,KAAAA,EACAoa,EAAAja,KAAAA,EACAia,EAAAT,aAAAA,EACAS,EAAAR,cAAAA,EACAM,GAOAE,EAAAl0B,MAAAyzB,EACAS,EAAAj0B,OAAAyzB,IAPAQ,EAAAl0B,MAAAsa,EAAAsZ,GACAM,EAAAj0B,OAAAqa,EAAAuZ,GACAvV,EAAA4V,EAAAl0B,MAAAyzB,EACAlV,EAAA2V,EAAAj0B,OAAAyzB,GASA,UADAI,EAAAxiB,EAAAlkB,KAAA2yB,kCAAA+T,IACA7T,SAEA,SAAA6T,EAAA9T,cACAzB,EAAAD,EAAAA,EAAAC,EAAAA,EAAAD,GAGA,UAAAwV,EAAA9T,cACAzB,EAAAD,EAAAA,EAAAC,EAAAD,EAAAC,GAGA4V,EAAAD,EAAAl0B,MAAAyzB,EAAAnV,EACA8V,EAAAF,EAAAj0B,OAAAyzB,EAAApV,EACA,QAAAwV,EAAA7T,SACAkU,GAAA,GAEA,QAAAL,EAAA5T,SACAkU,GAAA,GAEA,QAAAN,EAAA7T,SACAkU,EAAA,GAEA,QAAAL,EAAA5T,SACAkU,EAAA,IAIA,IAAA9V,GAAA,IAAAC,GAAA,IAAAzE,GAAA,IAAAG,GAAA,IAAAzX,GAAA,IAAAC,EACA,OAAAyxB,EAcA,IAXA1xB,GAAAC,KACAywB,EAAA,cAAA5Y,EAAA9X,GAAA,IAAA8X,EAAA7X,GAAA,MAGA4c,EAAA6T,EAAA,WAAA5U,EACA,QAEAC,EAAA,KACAzE,EAAAwE,EAAA6V,GAAA,KACAla,EAAAsE,EAAA6V,GAAA,KACAF,EAAAG,iBAAA/iB,EAAA6f,wBAAA9R,GACA,QAAA5+B,EAAAjD,SAAA,CAGA,IAFAsB,EAAA2B,EAAA/B,cAAAR,gBAAAozB,EAAAmD,MAAA,KAEAh0B,EAAAR,YACAnB,EAAAd,YAAAyC,EAAAR,YAEAQ,EAAAzC,YAAAc,QAIAugC,GADAvgC,EAAA2B,GACAkI,aAAA,aAAA02B,EAGA,OADAvgC,EAAAX,aAAA,YAAAkhC,GACA6U,EAkFA,SAAAI,EAAAz1C,EAAA01C,GACA,IAEAC,EAAAD,EAAA5rC,aADA,cACA8rC,OAAA,GACAC,EAAAxC,EAAArzC,EAAA21C,GASA,GARAE,GAAAA,EAAA/rC,aAHA,eAIA2rC,EAAAz1C,EAAA61C,IALA,oBAAA,KAAA,KAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,KAAA,MAOAr7D,QAAA,SAAAme,GACAk9C,IAAAH,EAAA3rC,aAAApR,IAAAk9C,EAAA9rC,aAAApR,IACA+8C,EAAAp2C,aAAA3G,EAAAk9C,EAAA/rC,aAAAnR,OAGA+8C,EAAApyC,SAAA1pB,OAEA,IADA,IAAAk8D,EAAAD,EAAAn3C,WAAA,GACAo3C,EAAA10C,YACAs0C,EAAAv2C,YAAA22C,EAAA10C,YAGAs0C,EAAAjoC,gBAjBA,cA3DAglB,EAAAsjB,iBAAA,SAAA/1C,EAAA1e,EAAAs7C,EAAAoZ,GACA,GAAAh2C,EAAA,EAvMA,SAAAA,GACA,IAAAszC,EAAAZ,EAAA1yC,GAAA,MAAA,YAAAlmB,EAAA,EACA,KAAAw5D,EAAA15D,QAAAE,EAAAw5D,EAAA15D,QAAA,CACA,IAMA+e,EAAAjV,EAAAvB,EAAAoQ,EANA0N,EAAAqzC,EAAAx5D,GACAm8D,GAAAh2C,EAAA6J,aAAA,eAAA7J,EAAA6J,aAAA,SAAA8rC,OAAA,GACAjyB,EAAA1jB,EAAA6J,aAAA,MAAA,EACA8Z,EAAA3jB,EAAA6J,aAAA,MAAA,EACAosC,EAAA7C,EAAArzC,EAAAi2C,GAAAv3C,WAAA,GACAy3C,GAAAD,EAAApsC,aAAA,cAAA,IAAA,cAAA6Z,EAAA,KAAAC,EAAA,IACAwyB,EAAA9C,EAAA15D,OAAAw8B,EAAAqc,EAAAmD,MAGA,GADA+e,EAAAuB,GACA,SAAA73D,KAAA63D,EAAAv3C,UAAA,CACA,IAAA03C,EAAAH,EAAAr2C,cAAAR,gBAAA+W,EAAA,KACA,IAAA1yB,EAAA,EAAAvB,EAAA+zD,EAAA/9C,WAAA5F,EAAApQ,EAAAvI,OAAA8J,EAAA6O,EAAA7O,IACAiV,EAAAxW,EAAAQ,KAAAe,GACA2yD,EAAAC,eAAAlgC,EAAAzd,EAAAgG,SAAAhG,EAAA2zB,WAGA,KAAA4pB,EAAA90C,YACAi1C,EAAAl3C,YAAA+2C,EAAA90C,YAEA80C,EAAAG,EAGA,IAAA3yD,EAAA,EAAAvB,EAAA8d,EAAA9H,WAAA5F,EAAApQ,EAAAvI,OAAA8J,EAAA6O,EAAA7O,IAEA,OADAiV,EAAAxW,EAAAQ,KAAAe,IACAib,UAAA,MAAAhG,EAAAgG,UACA,eAAAhG,EAAAgG,UAAA,SAAAhG,EAAAgG,WAIA,cAAAhG,EAAAgG,SACAw3C,EAAAx9C,EAAA2zB,UAAA,IAAA6pB,EAGAD,EAAA52C,aAAA3G,EAAAgG,SAAAhG,EAAA2zB,YAIA4pB,EAAA52C,aAAA,YAAA62C,GACAD,EAAA52C,aAAA,sBAAA,KACA42C,EAAAzoC,gBAAA,MACAxN,EAAAf,WACAsE,aAAA0yC,EAAAj2C,GAEAqzC,EAAA15D,SAAAw8D,GACAt8D,KA4JAy8D,CAAAv2C,GAEA,IAAAlmB,EAAAyY,EAAAikD,EAAA/jB,EAAAt2C,OAAAs6D,QACAlxD,EAAAovD,EAAA30C,GACA2I,EAAA8pB,EAAAlkB,KAAAM,QAAA7O,EAAAyqC,qBAAA,MAIA,GAHAllD,EAAA62C,YAAA4Z,GAAAA,EAAA5Z,YACA72C,EAAAixD,OAAAA,EAEA,IAAA7tC,EAAA/uB,QAAA64C,EAAA0C,aAAA,CAGAxsB,EAAA3I,EAAA02C,YAAA,uBACA,IAAAlyD,KACA,IAAA1K,EAAA,EAAAyY,EAAAoW,EAAA/uB,OAAAE,EAAAyY,EAAAzY,IACA0K,EAAA1K,GAAA6uB,EAAA7uB,GAEA6uB,EAAAnkB,EAGA,IAAAG,EAAAgkB,EAAAzlB,OAAA,SAAA+c,GAEA,OADA00C,EAAA10C,GACAwyB,EAAA8gB,sBAAAl1D,KAAA4hB,EAAAtB,SAAAxgB,QAAA,OAAA,OAhDA,SAAAyjB,EAAAjD,GACA,KAAAiD,IAAAA,EAAAA,EAAA1C,aACA,GAAA0C,EAAAjD,UAAAA,EAAAtgB,KAAAujB,EAAAjD,SAAAxgB,QAAA,OAAA,OACAyjB,EAAAkI,aAAA,uBACA,OAAA,EAGA,OAAA,EA0CA6sC,CAAA12C,EAAAwyB,EAAAghB,4BAGA,IAAA9uD,GAAAA,IAAAA,EAAA/K,OACA0H,GAAAA,aADA,CAIA,IAAAuyD,KACAlrC,EAAAzlB,OAAA,SAAA+c,GACA,MAAA,aAAAA,EAAAtB,SAAAxgB,QAAA,OAAA,MACA3D,QAAA,SAAAylB,GACA,IAAA1W,EAAA0W,EAAA6J,aAAA,MACA+pC,EAAAtqD,GAAAkpC,EAAAlkB,KAAAM,QAAA5O,EAAAwqC,qBAAA,MAAAvnD,OAAA,SAAA+c,GACA,OAAAwyB,EAAA8gB,sBAAAl1D,KAAA4hB,EAAAtB,SAAAxgB,QAAA,OAAA,SAGAs0C,EAAAmhB,aAAA4C,GAAA/jB,EAAAmkB,gBAAA52C,GACAyyB,EAAAkhB,SAAA6C,GAAA/jB,EAAAokB,YAAA72C,GACAyyB,EAAAohB,UAAA2C,GAAA3C,EAEAphB,EAAAqkB,cAAAnyD,EAAA,SAAAoyD,EAAApyD,GACArD,IACAA,EAAAy1D,EAAAxxD,EAAAZ,EAAAgkB,UACA8pB,EAAAmhB,aAAA4C,UACA/jB,EAAAkhB,SAAA6C,UACA/jB,EAAAohB,UAAA2C,KAEAz1D,EAAAwE,GAAAq3C,EAAAoZ,MAyBA,IAAAgB,EAAA,IAAAzpD,OACA,qHAEAklC,EAAA8C,MACA,2CAAA9C,EAAA8C,MAAA,eAEA/zC,EAAAixC,GASAwkB,qBAAA,SAAAn8D,EAAAo8D,GACA,IAAAzpD,EAAA3S,EAAA2S,MAAAupD,GAEA,GAAAvpD,EAAA,CAGA,IAAA0pD,EAAA1pD,EAAA,GAGA2pD,EAAA3pD,EAAA,GACAiuC,EAAAjuC,EAAA,GACA4pD,EAAA5pD,EAAA,GACA+zC,EAAA/zC,EAAA,GAEA0pD,IACAD,EAAAC,UAAAA,GAEAC,IACAF,EAAAE,WAAA9lD,MAAAyJ,WAAAq8C,IAAAA,EAAAr8C,WAAAq8C,IAEA1b,IACAwb,EAAAxb,SAAAD,EAAAC,IAEA8F,IACA0V,EAAA1V,WAAAA,GAEA6V,IACAH,EAAAG,WAAA,WAAAA,EAAA,EAAAA,KAYAT,gBAAA,SAAA52C,GACA,IAMAC,EADAq3C,EAAA5E,EAAA1yC,GAJA,iBACA,iBACA,qBACA,uBAEAtc,EAAA,EAAAkwD,KAEA,IADAlwD,EAAA4zD,EAAA19D,OACA8J,MACAuc,EAAAq3C,EAAA5zD,IACAomB,aAAA,eACA2rC,EAAAz1C,EAAAC,GAEA2zC,EAAA3zC,EAAA6J,aAAA,OAAA7J,EAEA,OAAA2zC,GAYA2D,gBAAA,SAAA31C,EAAAzJ,EAAAq+C,GAEA,GAAA50C,EAAA,CAIA,IAAA9mB,EAEA4gD,EAAA8b,EADApF,UAGA,IAAAoE,IACAA,EAAA50C,EAAAkI,aAAA,WAGAlI,EAAA1C,YAAAuzB,EAAAihB,qBAAAr1D,KAAAujB,EAAA1C,WAAAP,YACAyzC,EAAA3f,EAAA8kB,gBAAA31C,EAAA1C,WAAA/G,EAAAq+C,IAGA,IAAAiB,EAAAt/C,EAAAvT,OAAA,SAAA4zC,EAAA7/B,GAKA,OAJA7d,EAAA8mB,EAAAkI,aAAAnR,MAEA6/B,EAAA7/B,GAAA7d,GAEA09C,OAIAkf,EAAAl2D,EAtdA,SAAAogB,EAAA40C,GACA,IAAAzlB,KACA,IAAA,IAAA4mB,KAAAllB,EAAAkhB,SAAA6C,GACA,GAAA1D,EAAAlxC,EAAA+1C,EAAAh+D,MAAA,MACA,IAAA,IAAA4zB,KAAAklB,EAAAkhB,SAAA6C,GAAAmB,GACA5mB,EAAAxjB,GAAAklB,EAAAkhB,SAAA6C,GAAAmB,GAAApqC,GAIA,OAAAwjB,EA8cA6mB,CAAAh2C,EAAA40C,GACA/jB,EAAAolB,oBAAAj2C,IAEA61C,EAAAj2D,EACAi2D,EACAC,GAEAA,EAhyBA,cAiyBA91C,EAAAtC,aAjyBA,YAiyBAo4C,EAjyBA,cAmyBAhc,EAAA8b,EAAApF,EAAA1W,UAAAjJ,EAAAmJ,KAAAC,sBACA4b,EApyBA,eAsyBAA,EAtyBA,aAsyBA/b,EAAAD,EAAAgc,EAtyBA,aAsyBAD,IAGA,IAAAM,EAAAC,EAAAC,KACA,IAAA,IAAAr/C,KAAA8+C,EACAK,EAAA5F,EAAAv5C,GACAo/C,EAAA5F,EAAA2F,EAAAL,EAAA9+C,GAAAy5C,EAAA1W,GACAsc,EAAAF,GAAAC,EAEAC,GAAAA,EAAAC,MACAxlB,EAAAwkB,qBAAAe,EAAAC,KAAAD,GAEA,IAAAE,EAAA12D,EAAA4wD,EAAA4F,GACA,OAAAvlB,EAAAihB,qBAAAr1D,KAAAujB,EAAAjD,UAAAu5C,EAjtBA,SAAA//C,GACA,IAAA,IAAAQ,KAAAq5C,EAEA,QAAA,IAAA75C,EAAA65C,EAAAr5C,KAAA,KAAAR,EAAAQ,GAAA,CAIA,QAAA,IAAAR,EAAAQ,GAAA,CACA,IAAA85B,EAAAt2C,OAAAE,UAAAsc,GACA,SAEAR,EAAAQ,GAAA85B,EAAAt2C,OAAAE,UAAAsc,GAGA,GAAA,IAAAR,EAAAQ,GAAA3W,QAAA,QAAA,CAIA,IAAAusD,EAAA,IAAA9b,EAAA0b,MAAAh2C,EAAAQ,IACAR,EAAAQ,GAAA41C,EAAA4J,SAAA5lB,EAAAgc,EAAA6J,WAAAjgD,EAAA65C,EAAAr5C,IAAA,IAAA0/C,UAEA,OAAAlgD,EA4rBAmgD,CAAAJ,KAYApB,cAAA,SAAAnyD,EAAArD,EAAAiE,EAAAq3C,EAAAoZ,GACA,IAAAvjB,EAAA8lB,eAAA5zD,EAAArD,EAAAiE,EAAAq3C,EAAAoZ,GAAAvkD,SAUAomD,oBAAA,SAAAj2C,GACA,IAAAs1C,KACAl6C,EAAA4E,EAAAkI,aAAA,SAEA,OAAA9M,GAIA,iBAAAA,EAhjBA,SAAAA,EAAAk6C,GACA,IAAAv+C,EAAA7d,EACAkiB,EAAA7e,QAAA,QAAA,IAAAxE,MAAA,KAAAa,QAAA,SAAAg+D,GACA,IAAA7rB,EAAA6rB,EAAA7+D,MAAA,KAEAgf,EAAAg0B,EAAA,GAAAp7B,OAAA9W,cACAK,EAAA6xC,EAAA,GAAAp7B,OAEA2lD,EAAAv+C,GAAA7d,IAyiBA29D,CAAAz7C,EAAAk6C,GAliBA,SAAAl6C,EAAAk6C,GACA,IAAAv+C,EAAA7d,EACA,IAAA,IAAAiI,KAAAia,OACA,IAAAA,EAAAja,KAIA4V,EAAA5V,EAAAtI,cACAK,EAAAkiB,EAAAja,GAEAm0D,EAAAv+C,GAAA7d,GA2hBA49D,CAAA17C,EAAAk6C,GAGAA,GAVAA,GAoBAyB,qBAAA,SAAA5d,GAGA,IAAAA,EACA,OAAA,KAMAA,GAFAA,EAAAA,EAAA58C,QAAA,KAAA,KAAAoT,QAEA5X,MAAA,OACA,IAAAG,EAAAyY,EAAAqmD,KAEA,IAAA9+D,EAAA,EAAAyY,EAAAwoC,EAAAnhD,OAAAE,EAAAyY,EAAAzY,GAAA,EACA8+D,EAAAv5D,MACAskC,EAAA5oB,WAAAggC,EAAAjhD,IACA8pC,EAAA7oB,WAAAggC,EAAAjhD,EAAA,MASA,OAAA8+D,GAWA/B,YAAA,SAAA72C,GACA,IAAAlmB,EAAAyY,EAAAw+B,EAAA/wB,EAAAyqC,qBAAA,SACAoO,KAGA,IAAA/+D,EAAA,EAAAyY,EAAAw+B,EAAAn3C,OAAAE,EAAAyY,EAAAzY,IAAA,CAEA,IAAAg/D,EAAA/nB,EAAAj3C,GAAAkzB,aAAA+jB,EAAAj3C,GAAAqT,KAIA,MADA2rD,EAAAA,EAAA36D,QAAA,oBAAA,KACAoT,QAGAunD,EAAArrD,MAAA,sBACA/I,IAAA,SAAAizD,GAAA,OAAAA,EAAApmD,SAEA/W,QAAA,SAAAm9D,GAEA,IAAAlqD,EAAAkqD,EAAAlqD,MAAA,4BACAsrD,KAAAC,EAAAvrD,EAAA,GAAA8D,OACA0nD,EAAAD,EAAA76D,QAAA,KAAA,IAAAxE,MAAA,WAEA,IAAAG,EAAA,EAAAyY,EAAA0mD,EAAAr/D,OAAAE,EAAAyY,EAAAzY,IAAA,CACA,IAAA6yC,EAAAssB,EAAAn/D,GAAAH,MAAA,WACA4zB,EAAAof,EAAA,GACA7xC,EAAA6xC,EAAA,GACAosB,EAAAxrC,GAAAzyB,GAEA68D,EAAAlqD,EAAA,IACA9T,MAAA,KAAAa,QAAA,SAAA0+D,GAEA,MADAA,EAAAA,EAAA/6D,QAAA,QAAA,IAAAoT,UAIAsnD,EAAAK,GACAzmB,EAAAlkB,KAAAhzB,OAAAiG,OAAAq3D,EAAAK,GAAAH,GAGAF,EAAAK,GAAAzmB,EAAAlkB,KAAAhzB,OAAAwF,MAAAg4D,QAKA,OAAAF,GAaAM,eAAA,SAAAx+C,EAAArZ,EAAAs7C,EAAAr3C,GAEAoV,EAAAA,EAAAxc,QAAA,SAAA,IAAAoT,OACA,IAAAkhC,EAAAlkB,KAAAu9B,QAAAnxC,GACA9S,OAAA,MACAkkD,WAGA,SAAAl1C,GAEA,IAAAuiD,EAAAviD,EAAAwiD,YACAD,IAAAA,EAAA15C,iBAAA+yB,EAAAp3C,OAAAi+D,eAAAziD,EAAA0iD,gBACAH,EAAA,IAAAE,cAAA,qBACA1oD,MAAA,QAEAwoD,EAAAI,QAAA3iD,EAAA0iD,aAAAp7D,QAAA,qCAAA,MAEA,IAAAi7D,IAAAA,EAAA15C,gBAEA,OADApe,GAAAA,EAAA,OACA,EAGAmxC,EAAAsjB,iBAAAqD,EAAA15C,gBAAA,SAAAjY,EAAAgyD,EAAA90D,EAAA+0D,GACAp4D,GAAAA,EAAAmG,EAAAgyD,EAAA90D,EAAA+0D,IACA9c,EAAAr3C,OAaAo0D,kBAAA,SAAA7jD,EAAAxU,EAAAs7C,EAAAr3C,GAEA,IAAAya,EACA,GAFAlK,EAAAA,EAAAvE,YAEA,IAAAkhC,EAAAp3C,OAAAg4C,UAAA,CACA,IAAAxuB,EAAA,IAAA4tB,EAAAp3C,OAAAg4C,UACAxuB,GAAAA,EAAA+0C,kBACA55C,EAAA6E,EAAA+0C,gBAAA9jD,EAAA,kBAGA28B,EAAAp3C,OAAAi+D,iBACAt5C,EAAA,IAAAs5C,cAAA,qBACA1oD,MAAA,QAEAoP,EAAAw5C,QAAA1jD,EAAA3X,QAAA,qCAAA,MAGAs0C,EAAAsjB,iBAAA/1C,EAAAN,gBAAA,SAAAjY,EAAAgyD,EAAA90D,EAAA+0D,GACAp4D,EAAAmG,EAAAgyD,EAAA90D,EAAA+0D,IACA9c,EAAAr3C,MAljCA,CAsjCA,oBAAA+zC,QAAAA,QAAAj5C,MAGAoyC,EAAA8lB,eAAA,SAAA5zD,EAAArD,EAAAiE,EAAAq3C,EAAAoZ,EAAAh2C,GACA3f,KAAAsE,SAAAA,EACAtE,KAAAiB,SAAAA,EACAjB,KAAAkF,QAAAA,EACAlF,KAAAu8C,QAAAA,EACAv8C,KAAAm2D,OAAAjxD,GAAAA,EAAAixD,QAAA,EACAn2D,KAAA21D,eAAAA,EACA31D,KAAAw5D,SAAA,+BACAx5D,KAAA2f,IAAAA,IAGArZ,EAwIA8rC,EAAA8lB,eAAAl8D,WAvIAoV,MAAA,WACApR,KAAA02D,UAAA,IAAAt7D,MAAA4E,KAAAsE,SAAA/K,QACAyG,KAAAy5D,YAAAz5D,KAAAsE,SAAA/K,OACAyG,KAAA05D,iBAGApzD,EAAAozD,cAAA,WACA,IAAAjS,EAAAznD,KACAA,KAAAsE,SAAAnK,QAAA,SAAAonB,EAAA9nB,GACA8nB,EAAAtC,aAAA,SAAAwoC,EAAA0O,QACA1O,EAAAkS,aAAAp4C,EAAA9nB,MAIA6M,EAAAszD,QAAA,SAAAh6C,GACA,OAAAwyB,EAAAA,EAAAlkB,KAAAzY,OAAAmxC,WAAAhnC,EAAAuF,QAAArnB,QAAA,OAAA,OAGAwI,EAAAqzD,aAAA,SAAA/5C,EAAA9e,GACA,IAAAoG,EAAAlH,KAAA45D,QAAAh6C,GACA,GAAA1Y,GAAAA,EAAA2yD,YACA,IACA3yD,EAAA2yD,YAAAj6C,EAAA5f,KAAA85D,eAAAh5D,EAAA8e,GAAA5f,KAAAkF,SAEA,MAAAmL,GACA+hC,EAAAqE,IAAApmC,QAIArQ,KAAA+5D,eAIAzzD,EAAAwzD,eAAA,SAAAh5D,EAAA8e,GACA,IAAA6nC,EAAAznD,KACA,OAAA,SAAAlG,GACA,IAAAs/D,EACA3R,EAAAuS,gBAAAlgE,EAAA8lB,EAAA,QACA6nC,EAAAuS,gBAAAlgE,EAAA8lB,EAAA,UACA9lB,aAAAs4C,EAAA6nB,OAAAngE,EAAAogE,mBACAd,EAAAt/D,EAAA+mD,kCAAAjhC,IAEA9lB,EAAAqgE,uBAAAf,GACA3R,EAAA2S,gBAAAtgE,EAAA8lB,GACA6nC,EAAAlL,SAAAkL,EAAAlL,QAAA38B,EAAA9lB,GACA2tD,EAAAiP,UAAA51D,GAAAhH,EACA2tD,EAAAsS,gBAIAzzD,EAAA+zD,0BAAA,SAAAvgE,EAAAozB,EAAAotC,GACA,IAAA7/D,EAAAX,EAAAozB,GAAAqtC,EAAAv6D,KAAAw5D,SACA,GAAAe,EAAAv8D,KAAAvD,GAAA,CAGA8/D,EAAAC,UAAA,EACA,IAAAtxD,EAAAqxD,EAAAlmD,KAAA5Z,GAAA,GAEA,OADA8/D,EAAAC,UAAA,EACApoB,EAAAkoB,GAAAt6D,KAAAm2D,QAAAjtD,KAGA5C,EAAA0zD,gBAAA,SAAAlgE,EAAA8lB,EAAAsN,GACA,IAAAutC,EAAAz6D,KAAAq6D,0BAAAvgE,EAAAozB,EAAA,gBACA,GAAAutC,EAAA,CACA,IAAAC,EAAA96C,EAAA6J,aAAAyD,EAAA,YACAmoC,EAAAjjB,EAAAoG,SAAAqhB,YAAAY,EAAA3gE,EAAA4gE,EAAA16D,KAAAkF,SACApL,EAAAme,IAAAiV,EAAAmoC,KAIA/uD,EAAAq0D,uBAAA,SAAA7gE,EAAA0mB,GACA,OAAA,SAAAo6C,GACAA,EAAAT,yBACAS,EAAAC,SAAAD,EAAAE,SACAt6C,EAAAxhB,KAAA47D,KAIAt0D,EAAA8zD,gBAAA,SAAAtgE,EAAAihE,GACA,IACAx5C,EAAAy5C,EAAAx6C,EAAAy6C,EADAC,EAAAl7D,KAAAq6D,0BAAAvgE,EAAA,WAAA,aAEA,GAAAohE,EAAA,CACA16C,KACAw6C,EAAA5oB,EAAAlkB,KAAA+sB,gBAAAnhD,EAAAqhE,uBAIA,IAFA,IAAAC,EAAAF,EAAA,GAAAr8C,WACAw8C,EAAAN,EACAM,EAAAx8C,YAAAw8C,EAAA5xC,aAAA,eAAA3vB,EAAAohE,UACAG,EAAAA,EAAAx8C,WAEAw8C,EAAAx8C,WAAAC,YAAAs8C,GACA,IAAA,IAAA3hE,EAAA,EAAAA,EAAAyhE,EAAA3hE,OAAAE,IACA8nB,EAAA25C,EAAAzhE,GACAuG,KAAA45D,QAAAr4C,GACAs4C,YACAt4C,EACAvhB,KAAA26D,uBAAA7gE,EAAA0mB,GACAxgB,KAAAkF,SAIAg2D,EADA,IAAA16C,EAAAjnB,OACAinB,EAAA,GAGA,IAAA4xB,EAAAgL,MAAA58B,GAEAy6C,EAAA7oB,EAAAlkB,KAAA8wB,0BACAgc,EACAE,EAAAC,uBAEAD,EAAAA,UACAl7D,KAAAo6D,gBAAAc,EAAAG,GAEA,IAAAn2D,EAAAktC,EAAAlkB,KAAAgxB,YAAA+b,GACAC,EAAApb,OAAA,EACAob,EAAAnb,OAAA,EACAmb,EAAAjjD,IAAA,SAAA/S,EAAAk6C,QACA8b,EAAAjjD,IAAA,SAAA/S,EAAAm6C,QACA6b,EAAA9hB,MAAAl0C,EAAAk0C,MACA8hB,EAAA5b,MAAAp6C,EAAAo6C,MACA4b,EAAA3b,MAAA,EACA2b,EAAAI,qBAAAh4B,EAAAp+B,EAAAs6C,WAAAjc,EAAAr+B,EAAAu6C,YAAA,SAAA,UACA3lD,EAAAohE,SAAAA,IAIA50D,EAAAyzD,YAAA,WACA,KAAA/5D,KAAAy5D,cACAz5D,KAAA02D,UAAA12D,KAAA02D,UAAA7zD,OAAA,SAAA+c,GAEA,OAAA,MAAAA,IAEA5f,KAAAiB,SAAAjB,KAAA02D,UAAA12D,KAAAsE,YAMA,SAAAmP,GAEA,aAIA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WAkBA,SAAA6H,EAAA3W,EAAAC,GACAvjC,KAAAsjC,EAAAA,EACAtjC,KAAAujC,EAAAA,EAlBA6O,EAAA6H,MACA7H,EAAApvB,KAAA,oCAIAovB,EAAA6H,MAAAA,EAgBAA,EAAAj+C,WAEA9B,KAAA,QAEAiB,YAAA8+C,EAOAxwC,IAAA,SAAA8/B,GACA,OAAA,IAAA0Q,EAAAj6C,KAAAsjC,EAAAiG,EAAAjG,EAAAtjC,KAAAujC,EAAAgG,EAAAhG,IASA2W,UAAA,SAAA3Q,GAGA,OAFAvpC,KAAAsjC,GAAAiG,EAAAjG,EACAtjC,KAAAujC,GAAAgG,EAAAhG,EACAvjC,MAQAu7D,UAAA,SAAAC,GACA,OAAA,IAAAvhB,EAAAj6C,KAAAsjC,EAAAk4B,EAAAx7D,KAAAujC,EAAAi4B,IASAC,gBAAA,SAAAD,GAGA,OAFAx7D,KAAAsjC,GAAAk4B,EACAx7D,KAAAujC,GAAAi4B,EACAx7D,MAQA07D,SAAA,SAAAnyB,GACA,OAAA,IAAA0Q,EAAAj6C,KAAAsjC,EAAAiG,EAAAjG,EAAAtjC,KAAAujC,EAAAgG,EAAAhG,IASAwW,eAAA,SAAAxQ,GAGA,OAFAvpC,KAAAsjC,GAAAiG,EAAAjG,EACAtjC,KAAAujC,GAAAgG,EAAAhG,EACAvjC,MAQA27D,eAAA,SAAAH,GACA,OAAA,IAAAvhB,EAAAj6C,KAAAsjC,EAAAk4B,EAAAx7D,KAAAujC,EAAAi4B,IASAI,qBAAA,SAAAJ,GAGA,OAFAx7D,KAAAsjC,GAAAk4B,EACAx7D,KAAAujC,GAAAi4B,EACAx7D,MASAggD,SAAA,SAAAwb,GACA,OAAA,IAAAvhB,EAAAj6C,KAAAsjC,EAAAk4B,EAAAx7D,KAAAujC,EAAAi4B,IAUAK,eAAA,SAAAL,GAGA,OAFAx7D,KAAAsjC,GAAAk4B,EACAx7D,KAAAujC,GAAAi4B,EACAx7D,MASAkpB,OAAA,SAAAsyC,GACA,OAAA,IAAAvhB,EAAAj6C,KAAAsjC,EAAAk4B,EAAAx7D,KAAAujC,EAAAi4B,IAUAM,aAAA,SAAAN,GAGA,OAFAx7D,KAAAsjC,GAAAk4B,EACAx7D,KAAAujC,GAAAi4B,EACAx7D,MAQA1B,GAAA,SAAAirC,GACA,OAAAvpC,KAAAsjC,IAAAiG,EAAAjG,GAAAtjC,KAAAujC,IAAAgG,EAAAhG,GAQArc,GAAA,SAAAqiB,GACA,OAAAvpC,KAAAsjC,EAAAiG,EAAAjG,GAAAtjC,KAAAujC,EAAAgG,EAAAhG,GAQAw4B,IAAA,SAAAxyB,GACA,OAAAvpC,KAAAsjC,GAAAiG,EAAAjG,GAAAtjC,KAAAujC,GAAAgG,EAAAhG,GASA1c,GAAA,SAAA0iB,GACA,OAAAvpC,KAAAsjC,EAAAiG,EAAAjG,GAAAtjC,KAAAujC,EAAAgG,EAAAhG,GAQAy4B,IAAA,SAAAzyB,GACA,OAAAvpC,KAAAsjC,GAAAiG,EAAAjG,GAAAtjC,KAAAujC,GAAAgG,EAAAhG,GASA04B,KAAA,SAAA1yB,EAAAgR,GAKA,YAJA,IAAAA,IACAA,EAAA,IAEAA,EAAAjxC,KAAAwiB,IAAAxiB,KAAAwoC,IAAA,EAAAyI,GAAA,GACA,IAAAN,EAAAj6C,KAAAsjC,GAAAiG,EAAAjG,EAAAtjC,KAAAsjC,GAAAiX,EAAAv6C,KAAAujC,GAAAgG,EAAAhG,EAAAvjC,KAAAujC,GAAAgX,IAQA2hB,aAAA,SAAA3yB,GACA,IAAAqU,EAAA59C,KAAAsjC,EAAAiG,EAAAjG,EACAua,EAAA79C,KAAAujC,EAAAgG,EAAAhG,EACA,OAAAj6B,KAAAmoC,KAAAmM,EAAAA,EAAAC,EAAAA,IAQAse,aAAA,SAAA5yB,GACA,OAAAvpC,KAAAi8D,KAAA1yB,IAQAuI,IAAA,SAAAvI,GACA,OAAA,IAAA0Q,EAAA3wC,KAAAwoC,IAAA9xC,KAAAsjC,EAAAiG,EAAAjG,GAAAh6B,KAAAwoC,IAAA9xC,KAAAujC,EAAAgG,EAAAhG,KAQAzX,IAAA,SAAAyd,GACA,OAAA,IAAA0Q,EAAA3wC,KAAAwiB,IAAA9rB,KAAAsjC,EAAAiG,EAAAjG,GAAAh6B,KAAAwiB,IAAA9rB,KAAAujC,EAAAgG,EAAAhG,KAOAtpC,SAAA,WACA,OAAA+F,KAAAsjC,EAAA,IAAAtjC,KAAAujC,GASA64B,MAAA,SAAA94B,EAAAC,GAGA,OAFAvjC,KAAAsjC,EAAAA,EACAtjC,KAAAujC,EAAAA,EACAvjC,MAQAq8D,KAAA,SAAA/4B,GAEA,OADAtjC,KAAAsjC,EAAAA,EACAtjC,MAQAs8D,KAAA,SAAA/4B,GAEA,OADAvjC,KAAAujC,EAAAA,EACAvjC,MAQAu8D,aAAA,SAAAhzB,GAGA,OAFAvpC,KAAAsjC,EAAAiG,EAAAjG,EACAtjC,KAAAujC,EAAAgG,EAAAhG,EACAvjC,MAOAw8D,KAAA,SAAAjzB,GACA,IAAAjG,EAAAtjC,KAAAsjC,EACAC,EAAAvjC,KAAAujC,EACAvjC,KAAAsjC,EAAAiG,EAAAjG,EACAtjC,KAAAujC,EAAAgG,EAAAhG,EACAgG,EAAAjG,EAAAA,EACAiG,EAAAhG,EAAAA,GAOA7iC,MAAA,WACA,OAAA,IAAAu5C,EAAAj6C,KAAAsjC,EAAAtjC,KAAAujC,MA5UA,CAgVA,oBAAA0V,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAGA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WAaA,SAAAqqB,EAAAC,GACA18D,KAAA08D,OAAAA,EACA18D,KAAA06C,UAbAtI,EAAAqqB,aACArqB,EAAApvB,KAAA,2CAeAovB,EAAAqqB,aAAAA,EAEArqB,EAAAqqB,aAAAzgE,WAEAb,YAAAshE,EAQAE,YAAA,SAAA7iB,GAEA,OADA95C,KAAA06C,OAAA17C,KAAA86C,GACA95C,MASA48D,aAAA,SAAAliB,GAEA,OADA16C,KAAA06C,OAAA16C,KAAA06C,OAAA12C,OAAA02C,GACA16C,OAcAoyC,EAAAqqB,aAAAI,kBAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA9+D,EACA++D,GAAAD,EAAA35B,EAAA05B,EAAA15B,IAAAw5B,EAAAv5B,EAAAy5B,EAAAz5B,IAAA05B,EAAA15B,EAAAy5B,EAAAz5B,IAAAu5B,EAAAx5B,EAAA05B,EAAA15B,GACA65B,GAAAJ,EAAAz5B,EAAAw5B,EAAAx5B,IAAAw5B,EAAAv5B,EAAAy5B,EAAAz5B,IAAAw5B,EAAAx5B,EAAAu5B,EAAAv5B,IAAAu5B,EAAAx5B,EAAA05B,EAAA15B,GACA85B,GAAAH,EAAA15B,EAAAy5B,EAAAz5B,IAAAw5B,EAAAz5B,EAAAw5B,EAAAx5B,IAAA25B,EAAA35B,EAAA05B,EAAA15B,IAAAy5B,EAAAx5B,EAAAu5B,EAAAv5B,GACA,GAAA,IAAA65B,EAAA,CACA,IAAAhpD,EAAA8oD,EAAAE,EACAC,EAAAF,EAAAC,EACA,GAAAhpD,GAAAA,GAAA,GAAA,GAAAipD,GAAAA,GAAA,GACAl/D,EAAA,IAAAs+D,EAAA,iBACAE,YAAA,IAAAvqB,EAAA6H,MAAA6iB,EAAAx5B,EAAAlvB,GAAA2oD,EAAAz5B,EAAAw5B,EAAAx5B,GAAAw5B,EAAAv5B,EAAAnvB,GAAA2oD,EAAAx5B,EAAAu5B,EAAAv5B,KAGAplC,EAAA,IAAAs+D,OAKAt+D,EAAA,IAAAs+D,EADA,IAAAS,GAAA,IAAAC,EACA,aAGA,YAGA,OAAAh/D,GAaAi0C,EAAAqqB,aAAAa,qBAAA,SAAAR,EAAAC,EAAAriB,GACA,IAEAsiB,EAAAC,EAAAM,EAAA9jE,EAFA0E,EAAA,IAAAs+D,EACAljE,EAAAmhD,EAAAnhD,OAGA,IAAAE,EAAA,EAAAA,EAAAF,EAAAE,IACAujE,EAAAtiB,EAAAjhD,GACAwjE,EAAAviB,GAAAjhD,EAAA,GAAAF,GACAgkE,EAAAd,EAAAI,kBAAAC,EAAAC,EAAAC,EAAAC,GAEA9+D,EAAAy+D,aAAAW,EAAA7iB,QAKA,OAHAv8C,EAAAu8C,OAAAnhD,OAAA,IACA4E,EAAAu+D,OAAA,gBAEAv+D,GAUAi0C,EAAAqqB,aAAAe,wBAAA,SAAAC,EAAAC,GACA,IACAjkE,EADA0E,EAAA,IAAAs+D,EACAljE,EAAAkkE,EAAAlkE,OAEA,IAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAqjE,EAAAW,EAAAhkE,GACAsjE,EAAAU,GAAAhkE,EAAA,GAAAF,GACAgkE,EAAAd,EAAAa,qBAAAR,EAAAC,EAAAW,GAEAv/D,EAAAy+D,aAAAW,EAAA7iB,QAKA,OAHAv8C,EAAAu8C,OAAAnhD,OAAA,IACA4E,EAAAu+D,OAAA,gBAEAv+D,GAWAi0C,EAAAqqB,aAAAkB,0BAAA,SAAAjjB,EAAAkjB,EAAAC,GACA,IAAA/rB,EAAA8rB,EAAA9rB,IAAA+rB,GACA/xC,EAAA8xC,EAAA9xC,IAAA+xC,GACAC,EAAA,IAAA1rB,EAAA6H,MAAAnuB,EAAAwX,EAAAwO,EAAAvO,GACAw6B,EAAA,IAAA3rB,EAAA6H,MAAAnI,EAAAxO,EAAAxX,EAAAyX,GACAy6B,EAAAvB,EAAAa,qBAAAxrB,EAAAgsB,EAAApjB,GACAujB,EAAAxB,EAAAa,qBAAAQ,EAAAhyC,EAAA4uB,GACAwjB,EAAAzB,EAAAa,qBAAAxxC,EAAAiyC,EAAArjB,GACAyjB,EAAA1B,EAAAa,qBAAAS,EAAAjsB,EAAA4I,GACAv8C,EAAA,IAAAs+D,EAUA,OARAt+D,EAAAy+D,aAAAoB,EAAAtjB,QACAv8C,EAAAy+D,aAAAqB,EAAAvjB,QACAv8C,EAAAy+D,aAAAsB,EAAAxjB,QACAv8C,EAAAy+D,aAAAuB,EAAAzjB,QAEAv8C,EAAAu8C,OAAAnhD,OAAA,IACA4E,EAAAu+D,OAAA,gBAEAv+D,IAxKA,CA2KA,oBAAA86C,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WAiBA,SAAA0b,EAAAI,GACAA,EAIAluD,KAAAo+D,iBAAAlQ,GAHAluD,KAAAq+D,WAAA,EAAA,EAAA,EAAA,IA0bA,SAAAC,EAAApwD,EAAAqwD,EAAAhkB,GAOA,OANAA,EAAA,IACAA,GAAA,GAEAA,EAAA,IACAA,GAAA,GAEAA,EAAA,EAAA,EACArsC,EAAA,GAAAqwD,EAAArwD,GAAAqsC,EAEAA,EAAA,GACAgkB,EAEAhkB,EAAA,EAAA,EACArsC,GAAAqwD,EAAArwD,IAAA,EAAA,EAAAqsC,GAAA,EAEArsC,EA3dAkkC,EAAA0b,MACA1b,EAAApvB,KAAA,qCAuBAovB,EAAA0b,MAAAA,EAEA1b,EAAA0b,MAAA9xD,WAMAoiE,iBAAA,SAAAlQ,GACA,IAAA9uD,EAEA8uD,KAAAJ,EAAA0Q,eACAtQ,EAAAJ,EAAA0Q,aAAAtQ,IAGA,gBAAAA,IACA9uD,GAAA,IAAA,IAAA,IAAA,IAGAA,IACAA,EAAA0uD,EAAA2Q,cAAAvQ,IAEA9uD,IACAA,EAAA0uD,EAAA4Q,cAAAxQ,IAEA9uD,IACAA,EAAA0uD,EAAA6Q,cAAAzQ,IAEA9uD,IAEAA,GAAA,EAAA,EAAA,EAAA,IAEAA,GACAY,KAAAq+D,UAAAj/D,IAYAw/D,UAAA,SAAApoD,EAAAqoD,EAAA1+D,GACAqW,GAAA,IAAAqoD,GAAA,IAAA1+D,GAAA,IAEA,IAAA2+D,EAAAh/B,EAAA/+B,EACA+qB,EAAAsmB,EAAAlkB,KAAAlrB,MAAA8oB,KAAAtV,EAAAqoD,EAAA1+D,IACA2xC,EAAAM,EAAAlkB,KAAAlrB,MAAA8uC,KAAAt7B,EAAAqoD,EAAA1+D,IAIA,GAFAY,GAAA+qB,EAAAgmB,GAAA,EAEAhmB,IAAAgmB,EACAgtB,EAAAh/B,EAAA,MAEA,CACA,IAAArxB,EAAAqd,EAAAgmB,EAEA,OADAhS,EAAA/+B,EAAA,GAAA0N,GAAA,EAAAqd,EAAAgmB,GAAArjC,GAAAqd,EAAAgmB,GACAhmB,GACA,KAAAtV,EACAsoD,GAAAD,EAAA1+D,GAAAsO,GAAAowD,EAAA1+D,EAAA,EAAA,GACA,MACA,KAAA0+D,EACAC,GAAA3+D,EAAAqW,GAAA/H,EAAA,EACA,MACA,KAAAtO,EACA2+D,GAAAtoD,EAAAqoD,GAAApwD,EAAA,EAGAqwD,GAAA,EAGA,OACAx1D,KAAA65B,MAAA,IAAA27B,GACAx1D,KAAA65B,MAAA,IAAArD,GACAx2B,KAAA65B,MAAA,IAAApiC,KAQAgtD,UAAA,WACA,OAAA/tD,KAAA++D,SAOAV,UAAA,SAAAj/D,GACAY,KAAA++D,QAAA3/D,GAOA4/D,MAAA,WACA,IAAA5/D,EAAAY,KAAA+tD,YACA,MAAA,OAAA3uD,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,KAOA44D,OAAA,WACA,IAAA54D,EAAAY,KAAA+tD,YACA,MAAA,QAAA3uD,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,KAOA6/D,MAAA,WACA,IAAA7/D,EAAAY,KAAA+tD,YACAmR,EAAAl/D,KAAA4+D,UAAAx/D,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,MAAA,OAAA8/D,EAAA,GAAA,IAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,MAOAC,OAAA,WACA,IAAA//D,EAAAY,KAAA+tD,YACAmR,EAAAl/D,KAAA4+D,UAAAx/D,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,MAAA,QAAA8/D,EAAA,GAAA,IAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAA9/D,EAAA,GAAA,KAOAggE,MAAA,WACA,IAAA5oD,EAAAqoD,EAAA1+D,EAAAf,EAAAY,KAAA+tD,YAWA,OARAv3C,EAAA,KADAA,EAAApX,EAAA,GAAAnF,SAAA,KACAV,OAAA,IAAAid,EAAAA,EAGAqoD,EAAA,KADAA,EAAAz/D,EAAA,GAAAnF,SAAA,KACAV,OAAA,IAAAslE,EAAAA,EAGA1+D,EAAA,KADAA,EAAAf,EAAA,GAAAnF,SAAA,KACAV,OAAA,IAAA4G,EAAAA,EAEAqW,EAAAL,cAAA0oD,EAAA1oD,cAAAhW,EAAAgW,eAOAkpD,OAAA,WACA,IAAAn/D,EAAAd,EAAAY,KAAA+tD,YAMA,OAFA7tD,EAAA,KADAA,GADAA,EAAAoJ,KAAA65B,MAAA,IAAA/jC,EAAA,KACAnF,SAAA,KACAV,OAAA,IAAA2G,EAAAA,EAEAF,KAAAo/D,QAAAl/D,EAAAiW,eAOA4hD,SAAA,WACA,OAAA/3D,KAAA+tD,YAAA,IAQA+J,SAAA,SAAAwH,GACA,IAAAlgE,EAAAY,KAAA+tD,YAGA,OAFA3uD,EAAA,GAAAkgE,EACAt/D,KAAAq+D,UAAAj/D,GACAY,MAOAu/D,YAAA,WACA,IAAAngE,EAAAY,KAAA+tD,YACAyR,EAAAhiE,UAAA,GAAA4B,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA8yC,QAAA,GAAA,IACAutB,EAAArgE,EAAA,GAEA,OADAY,KAAAq+D,WAAAmB,EAAAA,EAAAA,EAAAC,IACAz/D,MAQA0/D,aAAA,SAAAC,GACA,IAAAvgE,EAAAY,KAAA+tD,YACAyR,GAAA,GAAApgE,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA8yC,QAAA,GACAutB,EAAArgE,EAAA,GAMA,OAJAugE,EAAAA,GAAA,IAEAH,EAAArkB,OAAAqkB,GAAArkB,OAAAwkB,GAAA,EAAA,IACA3/D,KAAAq+D,WAAAmB,EAAAA,EAAAA,EAAAC,IACAz/D,MAQA4/D,YAAA,SAAAC,GACAA,aAAA/R,IACA+R,EAAA,IAAA/R,EAAA+R,IAGA,IAIApmE,EAJA0E,KACAmhE,EAAAt/D,KAAA+3D,WAEA34D,EAAAY,KAAA+tD,YACA+R,EAAAD,EAAA9R,YAEA,IAAAt0D,EAAA,EAAAA,EAAA,EAAAA,IACA0E,EAAAa,KAAAsK,KAAA65B,MAAA,GAAA/jC,EAAA3F,GALA,GAKAqmE,EAAArmE,KAKA,OAFA0E,EAAA,GAAAmhE,EACAt/D,KAAAq+D,UAAAlgE,GACA6B,OAWAoyC,EAAA0b,MAAAiS,OAAA,oIAQA3tB,EAAA0b,MAAAkS,OAAA,gGAQA5tB,EAAA0b,MAAAmS,MAAA,yDASA7tB,EAAA0b,MAAA0Q,cACA0B,UAAA,UACAC,aAAA,UACAC,KAAA,UACAC,WAAA,UACAC,MAAA,UACAC,MAAA,UACAC,OAAA,UACAC,MAAA,UACAC,eAAA,UACAC,KAAA,UACAC,WAAA,UACAC,MAAA,UACAC,UAAA,UACAC,UAAA,UACAC,WAAA,UACAC,UAAA,UACAC,MAAA,UACAC,eAAA,UACAC,SAAA,UACAC,QAAA,UACAC,KAAA,UACAC,SAAA,UACAC,SAAA,UACAC,cAAA,UACAC,SAAA,UACAC,SAAA,UACAC,UAAA,UACAC,UAAA,UACAC,YAAA,UACAC,eAAA,UACAC,WAAA,UACAC,WAAA,UACAC,QAAA,UACAC,WAAA,UACAC,aAAA,UACAC,cAAA,UACAC,cAAA,UACAC,cAAA,UACAC,cAAA,UACAC,WAAA,UACAC,SAAA,UACAC,YAAA,UACAC,QAAA,UACAC,QAAA,UACAC,WAAA,UACAC,UAAA,UACAC,YAAA,UACAC,YAAA,UACAC,QAAA,UACAC,UAAA,UACAC,WAAA,UACAC,KAAA,UACAC,UAAA,UACAC,KAAA,UACAC,KAAA,UACAC,MAAA,UACAC,YAAA,UACAC,SAAA,UACAC,QAAA,UACAC,UAAA,UACAC,OAAA,UACAC,MAAA,UACAC,MAAA,UACAC,SAAA,UACAC,cAAA,UACAC,UAAA,UACAC,aAAA,UACAC,UAAA,UACAC,WAAA,UACAC,UAAA,UACAC,qBAAA,UACAC,UAAA,UACAC,UAAA,UACAC,WAAA,UACAC,UAAA,UACAC,YAAA,UACAC,cAAA,UACAC,aAAA,UACAC,eAAA,UACAC,eAAA,UACAC,eAAA,UACAC,YAAA,UACAC,KAAA,UACAC,UAAA,UACAC,MAAA,UACAC,QAAA,UACAC,OAAA,UACAC,iBAAA,UACAC,WAAA,UACAC,aAAA,UACAC,aAAA,UACAC,eAAA,UACAC,gBAAA,UACAC,kBAAA,UACAC,gBAAA,UACAC,gBAAA,UACAC,aAAA,UACAC,UAAA,UACAC,UAAA,UACAC,SAAA,UACAC,YAAA,UACAC,KAAA,UACAC,QAAA,UACAC,MAAA,UACAC,UAAA,UACAC,OAAA,UACAC,UAAA,UACAC,OAAA,UACAC,cAAA,UACAC,UAAA,UACAC,cAAA,UACAC,cAAA,UACAC,WAAA,UACAC,UAAA,UACAC,KAAA,UACAC,KAAA,UACAC,KAAA,UACAC,WAAA,UACAC,OAAA,UACAC,cAAA,UACAC,IAAA,UACAC,UAAA,UACAC,UAAA,UACAC,YAAA,UACAC,OAAA,UACAC,WAAA,UACAC,SAAA,UACAC,SAAA,UACAC,OAAA,UACAC,OAAA,UACAC,QAAA,UACAC,UAAA,UACAC,UAAA,UACAC,UAAA,UACAC,KAAA,UACAC,YAAA,UACAC,UAAA,UACAzoB,IAAA,UACA0oB,KAAA,UACAC,QAAA,UACAC,OAAA,UACAC,UAAA,UACAC,OAAA,UACAC,MAAA,UACAC,MAAA,UACAC,WAAA,UACAC,OAAA,UACAC,YAAA,WAmCAh3B,EAAA0b,MAAAub,QAAA,SAAAnb,GACA,OAAAJ,EAAAwb,WAAAxb,EAAA4Q,cAAAxQ,KASA9b,EAAA0b,MAAA4Q,cAAA,SAAAxQ,GACA,IAAA9gD,EAAA8gD,EAAA9gD,MAAA0gD,EAAAiS,QACA,GAAA3yD,EAAA,CACA,IAAAoJ,EAAAhZ,SAAA4P,EAAA,GAAA,KAAA,KAAApP,KAAAoP,EAAA,IAAA,IAAA,IAAA,KAAApP,KAAAoP,EAAA,IAAA,IAAA,GACAyxD,EAAArhE,SAAA4P,EAAA,GAAA,KAAA,KAAApP,KAAAoP,EAAA,IAAA,IAAA,IAAA,KAAApP,KAAAoP,EAAA,IAAA,IAAA,GACAjN,EAAA3C,SAAA4P,EAAA,GAAA,KAAA,KAAApP,KAAAoP,EAAA,IAAA,IAAA,IAAA,KAAApP,KAAAoP,EAAA,IAAA,IAAA,GAEA,OACA5P,SAAAgZ,EAAA,IACAhZ,SAAAqhE,EAAA,IACArhE,SAAA2C,EAAA,IACAiN,EAAA,GAAAsN,WAAAtN,EAAA,IAAA,KAaAglC,EAAA0b,MAAAyb,SAAAzb,EAAAub,QAQAj3B,EAAA0b,MAAA0b,QAAA,SAAAtb,GACA,OAAAJ,EAAAwb,WAAAxb,EAAA6Q,cAAAzQ,KAWA9b,EAAA0b,MAAA6Q,cAAA,SAAAzQ,GACA,IAAA9gD,EAAA8gD,EAAA9gD,MAAA0gD,EAAAkS,QACA,GAAA5yD,EAAA,CAIA,IAGAoJ,EAAAqoD,EAAA1+D,EAHA2+D,GAAApkD,WAAAtN,EAAA,IAAA,IAAA,KAAA,IAAA,IACA0yB,EAAAplB,WAAAtN,EAAA,KAAA,KAAApP,KAAAoP,EAAA,IAAA,IAAA,GACArM,EAAA2Z,WAAAtN,EAAA,KAAA,KAAApP,KAAAoP,EAAA,IAAA,IAAA,GAGA,GAAA,IAAA0yB,EACAtpB,EAAAqoD,EAAA1+D,EAAAY,MAEA,CACA,IAAAw9D,EAAAx9D,GAAA,GAAAA,GAAA++B,EAAA,GAAA/+B,EAAA++B,EAAA/+B,EAAA++B,EACA5xB,EAAA,EAAAnN,EAAAw9D,EAEA/nD,EAAA8nD,EAAApwD,EAAAqwD,EAAAO,EAAA,EAAA,GACAD,EAAAP,EAAApwD,EAAAqwD,EAAAO,GACA3+D,EAAAm+D,EAAApwD,EAAAqwD,EAAAO,EAAA,EAAA,GAGA,OACAx1D,KAAA65B,MAAA,IAAA3sB,GACAlN,KAAA65B,MAAA,IAAA07B,GACAv1D,KAAA65B,MAAA,IAAAhjC,GACAiN,EAAA,GAAAsN,WAAAtN,EAAA,IAAA,KAYAglC,EAAA0b,MAAA2b,SAAA3b,EAAA0b,QASAp3B,EAAA0b,MAAA4b,QAAA,SAAAxb,GACA,OAAAJ,EAAAwb,WAAAxb,EAAA2Q,cAAAvQ,KAUA9b,EAAA0b,MAAA2Q,cAAA,SAAAvQ,GACA,GAAAA,EAAA9gD,MAAA0gD,EAAAmS,OAAA,CACA,IAAAxlE,EAAAyzD,EAAAjwD,MAAAiwD,EAAAvsD,QAAA,KAAA,GACAgoE,EAAA,IAAAlvE,EAAAlB,QAAA,IAAAkB,EAAAlB,OACAqwE,EAAA,IAAAnvE,EAAAlB,QAAA,IAAAkB,EAAAlB,OACAid,EAAAmzD,EAAAlvE,EAAAkc,OAAA,GAAAlc,EAAAkc,OAAA,GAAAlc,EAAA2hD,UAAA,EAAA,GACAyiB,EAAA8K,EAAAlvE,EAAAkc,OAAA,GAAAlc,EAAAkc,OAAA,GAAAlc,EAAA2hD,UAAA,EAAA,GACAj8C,EAAAwpE,EAAAlvE,EAAAkc,OAAA,GAAAlc,EAAAkc,OAAA,GAAAlc,EAAA2hD,UAAA,EAAA,GACAl8C,EAAA0pE,EAAAD,EAAAlvE,EAAAkc,OAAA,GAAAlc,EAAAkc,OAAA,GAAAlc,EAAA2hD,UAAA,EAAA,GAAA,KAEA,OACA5+C,SAAAgZ,EAAA,IACAhZ,SAAAqhE,EAAA,IACArhE,SAAA2C,EAAA,IACAua,YAAAld,SAAA0C,EAAA,IAAA,KAAAgyC,QAAA,OAYAE,EAAA0b,MAAAwb,WAAA,SAAAlqE,GACA,IAAAyqE,EAAA,IAAA/b,EAEA,OADA+b,EAAAxL,UAAAj/D,GACAyqE,IAxnBA,CA2nBA,oBAAA5wB,QAAAA,QAAAj5C,MAGA,WAGA,SAAA8pE,EAAAlqD,EAAAmqD,GACA,IAEA7b,EAAA8b,EAAA/uC,EAAAxhC,EAFAkjB,EAAAiD,EAAA6J,aAAA,SACA3lB,EAAA8b,EAAA6J,aAAA,WAAA,EAMA,GADA3lB,GADAA,EAAA4W,WAAA5W,IAAA,KAAA9F,KAAA8F,GAAA,IAAA,IACA,EAAA,EAAAA,EAAA,EAAA,EAAAA,EACA6Y,EAAA,CACA,IAAAstD,EAAAttD,EAAArjB,MAAA,WAMA,IAJA,KAAA2wE,EAAAA,EAAA1wE,OAAA,IACA0wE,EAAArqE,MAGAnG,EAAAwwE,EAAA1wE,OAAAE,KAAA,CAEA,IAAAH,EAAA2wE,EAAAxwE,GAAAH,MAAA,WACAyF,EAAAzF,EAAA,GAAA4X,OACAzW,EAAAnB,EAAA,GAAA4X,OAEA,eAAAnS,EACAmvD,EAAAzzD,EAEA,iBAAAsE,IACAk8B,EAAAxgC,IAiBA,OAZAyzD,IACAA,EAAAtuC,EAAA6J,aAAA,eAAA,cAEAwR,IACAA,EAAArb,EAAA6J,aAAA,iBAGAykC,EAAA,IAAA9b,EAAA0b,MAAAI,GACA8b,EAAA9b,EAAA6J,WACA98B,EAAAhqB,MAAAyJ,WAAAugB,IAAA,EAAAvgB,WAAAugB,GACAA,GAAA+uC,EAAAD,GAGAjmE,OAAAA,EACAoqD,MAAAA,EAAA8Q,QACA/jC,QAAAA,GAyBA,IAAAv6B,EAAA0xC,EAAAlkB,KAAAhzB,OAAAwF,MA6ZA,SAAAwpE,EAAAl9B,EAAA9nC,EAAAilE,EAAAC,GACA,IAAAC,EAAAC,EACAxuE,OAAAgD,KAAAoG,GAAA/K,QAAA,SAAAuI,GAEA,cADA2nE,EAAAnlE,EAAAxC,IAEA4nE,EAAA,EAEA,cAAAD,EACAC,EAAA,GAGAA,EAAA5vD,WAAAxV,EAAAxC,GAAA,IACA,iBAAA2nE,GAAA,uBAAArsE,KAAAqsE,KACAC,GAAA,IACA,WAAAF,IAEA,OAAA1nE,GAAA,OAAAA,GAAA,OAAAA,IACA4nE,GAAAH,EAAA5V,cAAA4V,EAAArpC,OAEA,OAAAp+B,GAAA,OAAAA,IACA4nE,GAAAH,EAAA3V,eAAA2V,EAAAppC,WAKA77B,EAAAxC,GAAA4nE,IA9aAl4B,EAAAoG,SAAApG,EAAAlkB,KAAAvpB,aAOA4lE,QAAA,EAOAC,QAAA,EAUAC,kBAAA,KAWAL,cAAA,SAOAlwE,KAAA,SAmBAytD,WAAA,SAAAziD,GACAA,IAAAA,MACAA,EAAAk7B,SAAAl7B,EAAAk7B,WAEA,IAAAA,EAAAqnB,EAAAznD,KAGAlE,OAAAgD,KAAAoG,GAAA/K,QAAA,SAAAwxB,GACA87B,EAAA97B,GAAAzmB,EAAAymB,KAGA3rB,KAAAkJ,GACAlJ,KAAAkJ,IAAA,IAAAkpC,EAAAt2C,OAAAs6D,QAGAp2D,KAAAkJ,GAAAkpC,EAAAt2C,OAAAs6D,QAGAh2B,GACA2kB,GAAA7/C,EAAAk7B,OAAA2kB,IAAA,EACAC,GAAA9/C,EAAAk7B,OAAA4kB,IAAA,EACAvH,GAAAv4C,EAAAk7B,OAAAqd,IAAA,EACAC,GAAAx4C,EAAAk7B,OAAAsd,IAAA,GAGA,WAAA19C,KAAA9F,OACAkmC,EAAAw9B,GAAA14D,EAAAk7B,OAAAw9B,IAAA,EACAx9B,EAAAy9B,GAAA34D,EAAAk7B,OAAAy9B,IAAA,GAGA79D,KAAAogC,OAAAA,EACApgC,KAAAu4C,WAAArzC,EAAAqzC,WAAAt6C,SAQAysE,aAAA,SAAAnyB,GACA,IAAA,IAAAj2B,KAAAi2B,EAAA,CACA,IAAA2V,EAAA,IAAA9b,EAAA0b,MAAAvV,EAAAj2B,IACAtiB,KAAAu4C,WAAAv5C,MACA8E,OAAA4W,WAAA4H,GACA4rC,MAAAA,EAAA8Q,QACA/jC,QAAAizB,EAAA6J,aAGA,OAAA/3D,MAQA2qE,SAAA,SAAAC,GACA,IAAA1vE,GACAhB,KAAA8F,KAAA9F,KACAkmC,OAAApgC,KAAAogC,OACAmY,WAAAv4C,KAAAu4C,WACAgyB,QAAAvqE,KAAAuqE,QACAC,QAAAxqE,KAAAwqE,QACAJ,cAAApqE,KAAAoqE,cACAK,kBAAAzqE,KAAAyqE,kBAAAzqE,KAAAyqE,kBAAAzmE,SAAAhE,KAAAyqE,mBAIA,OAFAr4B,EAAAlkB,KAAAovB,uBAAAt9C,KAAA9E,EAAA0vE,GAEA1vE,GASA2vE,MAAA,SAAA3vE,EAAAgK,GACA,IAAAzL,EAAAyY,EACA44D,EAAAC,EADA3qC,EAAA1/B,EAAAV,KAAAogC,QAAA,GAAAl7B,EAAAA,MACAqzC,EAAA73C,EAAAV,KAAAu4C,YAAA,GACAyyB,EAAA5qC,EAAAw9B,GAAAx9B,EAAAy9B,GACA7mD,EAAAhX,KAAAyqE,kBAAAzqE,KAAAyqE,kBAAAzmE,SAAAouC,EAAAkD,QAAAtxC,SACAumE,GAAAvqE,KAAAuqE,QAAAC,GAAAxqE,KAAAwqE,QACAS,IAAA/lE,EAAAgmE,oBACAd,EAAA,WAAApqE,KAAAoqE,cAAA,iBAAA,oBAqDA,GAnDA7xB,EAAAhwC,KAAA,SAAArI,EAAAC,GACA,OAAAD,EAAA4D,OAAA3D,EAAA2D,SAGA,sBAAAsmE,GACAG,GAAArvE,EAAA4lC,MACA0pC,GAAAtvE,EAAA6lC,SAGAwpC,GAAArvE,EAAA4lC,MAAA,EACA0pC,GAAAtvE,EAAA6lC,OAAA,GAEA,SAAA7lC,EAAAhB,OACAqwE,GAAArvE,EAAAiwE,WAAA7nC,EACAknC,GAAAtvE,EAAAiwE,WAAA5nC,GAIAvsB,EAAA,IAAAuzD,EACAvzD,EAAA,IAAAwzD,EAEAO,EAAA,aAAA/qE,KAAAkJ,GACA,oBAAAkhE,EAAA,IACAW,GAAA,wBAAAE,EACA/lE,EAAAgmE,oBAAA,IAAA,IAAA94B,EAAAlkB,KAAA0zB,YAAA5qC,GAAA,KAEA,WAAAhX,KAAA9F,KACA4wE,GACA,mBACAC,EACA,QAAA3qC,EAAA2kB,GACA,SAAA3kB,EAAA4kB,GACA,SAAA5kB,EAAAqd,GACA,SAAArd,EAAAsd,GACA,QAGA,WAAA19C,KAAA9F,OAEA4wE,GACA,mBACAC,EACA,QAAAC,EAAA5qC,EAAA2kB,GAAA3kB,EAAAqd,GACA,SAAAutB,EAAA5qC,EAAA4kB,GAAA5kB,EAAAsd,GACA,QAAAstB,EAAA5qC,EAAAw9B,GAAAx9B,EAAAy9B,GACA,SAAAmN,EAAA5qC,EAAAqd,GAAArd,EAAA2kB,GACA,SAAAimB,EAAA5qC,EAAAsd,GAAAtd,EAAA4kB,GACA,SAIA,WAAAhlD,KAAA9F,KAAA,CACA,GAAA8wE,EAIA,KAFAzyB,EAAAA,EAAAv0C,UACAqT,UACA5d,EAAA,EAAAyY,EAAAqmC,EAAAh/C,OAAAE,EAAAyY,EAAAzY,IACA8+C,EAAA9+C,GAAAqK,OAAA,EAAAy0C,EAAA9+C,GAAAqK,OAGA,IAAAsnE,EAAA9hE,KAAAwoC,IAAA1R,EAAAw9B,GAAAx9B,EAAAy9B,IACA,GAAAuN,EAAA,EAAA,CAEA,IAAAC,EAAA/hE,KAAAwiB,IAAAsU,EAAAw9B,GAAAx9B,EAAAy9B,IACAyN,EAAAF,EAAAC,EACA,IAAA5xE,EAAA,EAAAyY,EAAAqmC,EAAAh/C,OAAAE,EAAAyY,EAAAzY,IACA8+C,EAAA9+C,GAAAqK,QAAAwnE,GAAA,EAAA/yB,EAAA9+C,GAAAqK,SAKA,IAAArK,EAAA,EAAAyY,EAAAqmC,EAAAh/C,OAAAE,EAAAyY,EAAAzY,IAAA,CACA,IAAA8xE,EAAAhzB,EAAA9+C,GACAqxE,EAAA9rE,KACA,SACA,WAAA,IAAAusE,EAAAznE,OAAA,IACA,uBAAAynE,EAAArd,WACA,IAAAqd,EAAAtwC,QAAA,kBAAAswC,EAAAtwC,QAAA,IACA,SAMA,OAFA6vC,EAAA9rE,KAAA,WAAAgB,KAAA9F,KAAA,sBAAA,uBAEA4wE,EAAA39D,KAAA,KAUAq+D,OAAA,SAAA/6D,EAAAvV,GACA,IAAAm6D,EAAA57D,EAAAyY,EAAAkuB,EAAAgS,EAAAlkB,KAAAhzB,OAAAwF,MAAAV,KAAAogC,QACA2kB,EAAA3kB,EAAA2kB,GAAAC,EAAA5kB,EAAA4kB,GAAAvH,EAAArd,EAAAqd,GAAAC,EAAAtd,EAAAsd,GACA+tB,EAAAzrE,KAAAu4C,WAEA,GAAAv4C,KAAA9F,KAAA,CAgBA,IAZAgB,aAAAk3C,EAAAmJ,MAAA,eAAAv7C,KAAAoqE,gBACArlB,GAAA7pD,EAAA4lC,MACAkkB,GAAA9pD,EAAA6lC,OACA0c,GAAAviD,EAAA4lC,MACA4c,GAAAxiD,EAAA6lC,QAEA,WAAA/gC,KAAA9F,KACAm7D,EAAA5kD,EAAAi7D,qBAAA3mB,EAAAC,EAAAvH,EAAAC,GAEA,WAAA19C,KAAA9F,OACAm7D,EAAA5kD,EAAAk7D,qBAAA5mB,EAAAC,EAAA5kB,EAAAw9B,GAAAngB,EAAAC,EAAAtd,EAAAy9B,KAEApkE,EAAA,EAAAyY,EAAAu5D,EAAAlyE,OAAAE,EAAAyY,EAAAzY,IAAA,CACA,IAAAy0D,EAAAud,EAAAhyE,GAAAy0D,MACAjzB,EAAAwwC,EAAAhyE,GAAAwhC,QACAn3B,EAAA2nE,EAAAhyE,GAAAqK,YAEA,IAAAm3B,IACAizB,EAAA,IAAA9b,EAAA0b,MAAAI,GAAA4J,SAAA78B,GAAA+8B,UAEA3C,EAAAqV,aAAA5mE,EAAAoqD,GAGA,OAAAmH,MAIAjjB,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAoG,UAoBAqhB,YAAA,SAAAj6C,EAAAotB,EAAA0tB,EAAAyP,GAkCA,IAAAJ,EAAArvD,WAAAggD,IAAA,KAAA18D,KAAA08D,GAAA,IAAA,GACAqP,EAAAA,EAAA,EAAA,EAAAA,EAAA,EAAA,EAAAA,EACA94D,MAAA84D,KACAA,EAAA,GAGA,IACA7vE,EAKAkmC,EAAA3mC,EACAu4D,EAPA4Z,EAAAhsD,EAAAwqC,qBAAA,QAEAggB,EAAA,mBAAAxqD,EAAA6J,aAAA,iBACA,SAAA,aACAghD,EAAA7qD,EAAA6J,aAAA,sBAAA,GACA8uB,KACAgyB,EAAA,EAAAC,EAAA,EAWA,IATA,mBAAA5qD,EAAAtB,UAAA,mBAAAsB,EAAAtB,UACApkB,EAAA,SACAkmC,EAxXA,SAAAxgB,GACA,OACAmlC,GAAAnlC,EAAA6J,aAAA,OAAA,EACAu7B,GAAAplC,EAAA6J,aAAA,OAAA,EACAg0B,GAAA79B,EAAA6J,aAAA,OAAA,OACAi0B,GAAA99B,EAAA6J,aAAA,OAAA,GAmXAoiD,CAAAjsD,KAGA1lB,EAAA,SACAkmC,EAnXA,SAAAxgB,GACA,OACAmlC,GAAAnlC,EAAA6J,aAAA,OAAA7J,EAAA6J,aAAA,OAAA,MACAu7B,GAAAplC,EAAA6J,aAAA,OAAA7J,EAAA6J,aAAA,OAAA,MACAm0C,GAAA,EACAngB,GAAA79B,EAAA6J,aAAA,OAAA,MACAi0B,GAAA99B,EAAA6J,aAAA,OAAA,MACAo0C,GAAAj+C,EAAA6J,aAAA,MAAA,OA4WAqiD,CAAAlsD,IAGAnmB,EAAAmyE,EAAAryE,OAAAE,KACA8+C,EAAAv5C,KAAA8qE,EAAA8B,EAAAnyE,GAAAswE,IAGA/X,EAAA5f,EAAA6f,wBAAAwY,GAEAP,EAAAl9B,EAAA5M,EAAA+pC,EAAAC,GAEA,WAAAA,IACAG,GAAAv9B,EAAAvU,KACA+xC,GAAAx9B,EAAAhO,KAGA,IAAAq2B,EAAA,IAAAjjB,EAAAoG,UACAtvC,GAAA0W,EAAA6J,aAAA,MACAvvB,KAAAA,EACAkmC,OAAAA,EACAmY,WAAAA,EACA6xB,cAAAA,EACAK,kBAAAzY,EACAuY,QAAAA,EACAC,QAAAA,IAGA,OAAAnV,GAaA0W,UAAA,SAAAjyE,EAAAoL,GAOA,OANAA,IAAAA,MACAglE,EAAApwE,EAAAoL,EAAAk7B,OAAAl7B,EAAAklE,eAEA7V,aAAA,IACAC,cAAA,MAEA,IAAApiB,EAAAoG,SAAAtzC,MA/dA,GAqgBA,WAEA,aAEA,IAAAgtC,EAAAE,EAAAlkB,KAAAgkB,QAWAE,EAAAsG,QAAAtG,EAAAlkB,KAAAvpB,aAOAqnE,OAAA,SAOAzB,QAAA,EAOAC,QAAA,EAQAzuB,YAAA,GAOAkwB,iBAAA,KAQAtkB,WAAA,SAAAziD,EAAAjE,GAKA,GAJAiE,IAAAA,MAEAlF,KAAAkJ,GAAAkpC,EAAAt2C,OAAAs6D,QACAp2D,KAAAksE,WAAAhnE,IACAA,EAAA9F,QAAA8F,EAAA9F,QAAA,iBAAA8F,EAAA9F,OACA6B,GAAAA,EAAAjB,WAIA,QAAA,IAAAoyC,EAAAlkB,KAAA4qB,gBAAA5zC,EAAA9F,QACAY,KAAAZ,OAAA,IAAA0G,SAAAssC,EAAAlkB,KAAA4qB,gBAAA5zC,EAAA9F,SACA6B,GAAAA,EAAAjB,UAEA,CAEA,IAAAynD,EAAAznD,KACAA,KAAAZ,OAAAgzC,EAAAlkB,KAAA8tB,cACA5J,EAAAlkB,KAAA4tB,UAAA52C,EAAA9F,OAAA,SAAAsiB,GACA+lC,EAAAroD,OAAAsiB,EACAzgB,GAAAA,EAAAwmD,IACA,KAAAznD,KAAA+7C,eASA4uB,SAAA,SAAAC,GACA,IACAxrE,EAAAlE,EADA2mD,EAAAzP,EAAAt2C,OAAA+lD,oBA2BA,MAvBA,mBAAA7hD,KAAAZ,OACAA,EAAA/E,OAAA2F,KAAAZ,QAGA,iBAAAY,KAAAZ,OAAAuB,IACAvB,EAAAY,KAAAZ,OAAAuB,IAGA,iBAAAX,KAAAZ,QAAAY,KAAAZ,OAAAq/C,YACAr/C,EAAAY,KAAAZ,OAAAq/C,aAGAvjD,GACAhB,KAAA,UACAkF,OAAAA,EACA4sE,OAAAhsE,KAAAgsE,OACAjwB,YAAA/7C,KAAA+7C,YACAwuB,QAAAr4B,EAAAlyC,KAAAuqE,QAAA1oB,GACA2oB,QAAAt4B,EAAAlyC,KAAAwqE,QAAA3oB,GACAoqB,iBAAAjsE,KAAAisE,iBAAAjsE,KAAAisE,iBAAAjoE,SAAA,MAEAouC,EAAAlkB,KAAAovB,uBAAAt9C,KAAA9E,EAAA0vE,GAEA1vE,GASA2vE,MAAA,SAAA3vE,GACA,IAAAixE,EAAA,mBAAAnsE,KAAAZ,OAAAY,KAAAZ,SAAAY,KAAAZ,OACAgtE,EAAAD,EAAArrC,MAAA5lC,EAAA4lC,MACAurC,EAAAF,EAAAprC,OAAA7lC,EAAA6lC,OACAurC,EAAAtsE,KAAAuqE,QAAArvE,EAAA4lC,MACAyrC,EAAAvsE,KAAAwqE,QAAAtvE,EAAA6lC,OACAyrC,EAAA,GAqBA,MApBA,aAAAxsE,KAAAgsE,QAAA,cAAAhsE,KAAAgsE,SACAK,EAAA,EACAE,IACAF,GAAA/iE,KAAA06B,IAAAuoC,KAGA,aAAAvsE,KAAAgsE,QAAA,cAAAhsE,KAAAgsE,SACAI,EAAA,EACAE,IACAF,GAAA9iE,KAAA06B,IAAAsoC,KAIAH,EAAAxrE,IACA6rE,EAAAL,EAAAxrE,IAEAwrE,EAAA1tB,YACA+tB,EAAAL,EAAA1tB,aAGA,sBAAAz+C,KAAAkJ,GACA,QAAAojE,EACA,QAAAC,EACA,YAAAH,EACA,aAAAC,EAAA,iCAEAF,EAAArrC,MACA,aAAAqrC,EAAAprC,OACA,iBAAAyrC,EACA,4BAKAN,WAAA,SAAAhnE,GACA,IAAA,IAAAxC,KAAAwC,EACAlF,KAAA0C,GAAAwC,EAAAxC,IASA8oE,OAAA,SAAA/6D,GACA,IAAArR,EAAA,mBAAAY,KAAAZ,OAAAY,KAAAZ,SAAAY,KAAAZ,OAGA,IAAAA,EACA,MAAA,GAIA,QAAA,IAAAA,EAAAuB,IAAA,CACA,IAAAvB,EAAAsqC,SACA,MAAA,GAEA,GAAA,IAAAtqC,EAAAqtE,cAAA,IAAArtE,EAAAstE,cACA,MAAA,GAGA,OAAAj8D,EAAAk8D,cAAAvtE,EAAAY,KAAAgsE,WAnMA,GAyMA,SAAAv4D,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAF,EAAAE,EAAAlkB,KAAAgkB,QAEAE,EAAAw6B,OACAx6B,EAAApvB,KAAA,sCAUAovB,EAAAw6B,OAAAx6B,EAAAlkB,KAAAvpB,aAOAupD,MAAA,aAMApuC,KAAA,EAOAyqD,QAAA,EAOAC,QAAA,EAOAqC,cAAA,EAOAC,sBAAA,EASAC,YAAA,EAOAplB,WAAA,SAAAziD,GAMA,IAAA,IAAAxC,IAJA,iBAAAwC,IACAA,EAAAlF,KAAAgtE,aAAA9nE,IAGAA,EACAlF,KAAA0C,GAAAwC,EAAAxC,GAGA1C,KAAAkJ,GAAAkpC,EAAAt2C,OAAAs6D,SAQA4W,aAAA,SAAAC,GACA,IAAAC,EAAAD,EAAA/7D,OACAi8D,EAAA/6B,EAAAw6B,OAAAQ,iBAAA/4D,KAAA64D,OACAhf,EAAAgf,EAAApvE,QAAAs0C,EAAAw6B,OAAAQ,iBAAA,KAAA,aAEA,OACAlf,MAAAA,EAAAh9C,OACAq5D,QAAA/sE,SAAA2vE,EAAA,GAAA,KAAA,EACA3C,QAAAhtE,SAAA2vE,EAAA,GAAA,KAAA,EACArtD,KAAAtiB,SAAA2vE,EAAA,GAAA,KAAA,IASAlzE,SAAA,WACA,OAAA+F,KAAAuqE,QAAAvqE,KAAAwqE,QAAAxqE,KAAA8f,KAAA9f,KAAAkuD,OAAA/gD,KAAA,QASA09D,MAAA,SAAA3vE,GACA,IAAAmyE,EAAA,GAAAC,EAAA,GAAAzrB,EAAAzP,EAAAt2C,OAAA+lD,oBACA/9C,EAAAsuC,EAAAlkB,KAAA8rB,cACA1W,EAAAtjC,KAAAuqE,QAAAhnC,EAAAvjC,KAAAwqE,SACAp4B,EAAAlkB,KAAA6jB,kBAAA72C,EAAAk+C,QACA8U,EAAA,IAAA9b,EAAA0b,MAAA9tD,KAAAkuD,OAeA,OAbAhzD,EAAA4lC,OAAA5lC,EAAA6lC,SAGAssC,EAAA,IAAAn7B,GAAA5oC,KAAA06B,IAAAlgC,EAAAw/B,GAAAtjC,KAAA8f,MAAA5kB,EAAA4lC,MAAA+gB,GALA,GAMAyrB,EAAA,IAAAp7B,GAAA5oC,KAAA06B,IAAAlgC,EAAAy/B,GAAAvjC,KAAA8f,MAAA5kB,EAAA6lC,OAAA8gB,GANA,IAQA3mD,EAAA4kD,QACAh8C,EAAAw/B,IAAA,GAEApoC,EAAA6kD,QACAj8C,EAAAy/B,IAAA,GAIA,qBAAAvjC,KAAAkJ,GAAA,SAAAokE,EAAA,eAAA,IAAA,EAAAA,GAAA,UACAD,EAAA,cAAA,IAAA,EAAAA,GAAA,0DAEAn7B,EAAAlyC,KAAA8f,KAAA9f,KAAA8f,KAAA,EAAA,EAAA+hC,GAAA,wCACA3P,EAAApuC,EAAAw/B,EAAAue,GACA,SAAA3P,EAAApuC,EAAAy/B,EAAAse,GAAA,0DACAqM,EAAA8Q,QAAA,oBAAA9Q,EAAA6J,WAAA,iLAcA4S,SAAA,WACA,GAAA3qE,KAAA8sE,qBACA,OACA5e,MAAAluD,KAAAkuD,MACApuC,KAAA9f,KAAA8f,KACAyqD,QAAAvqE,KAAAuqE,QACAC,QAAAxqE,KAAAwqE,QACAqC,aAAA7sE,KAAA6sE,aACAE,WAAA/sE,KAAA+sE,YAGA,IAAAjzE,KAAAwM,EAAA8rC,EAAAw6B,OAAA5wE,UAQA,OANA,QAAA,OAAA,UAAA,UAAA,eAAA,cAAA7B,QAAA,SAAAuI,GACA1C,KAAA0C,KAAA4D,EAAA5D,KACA5I,EAAA4I,GAAA1C,KAAA0C,KAEA1C,MAEAlG,KAWAs4C,EAAAw6B,OAAAQ,iBAAA,0FAhMA,CAkMA,oBAAAn0B,QAAAA,QAAAj5C,MAGA,WAEA,aAEA,GAAAoyC,EAAAm7B,aACAn7B,EAAApvB,KAAA,+CADA,CAMA,IAAA7hB,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OACAupD,EAAAtY,EAAAlkB,KAAAw8B,iBACAnR,EAAAnH,EAAAlkB,KAAAqrB,gBACArH,EAAAE,EAAAlkB,KAAAgkB,QACAoI,EAAAlI,EAAAlkB,KAAAosB,eACAW,EAAA7I,EAAAlkB,KAAA+sB,gBACA+P,EAAA5Y,EAAAlkB,KAAA88B,cACA1M,EAAAlM,EAAAlkB,KAAAowB,oBAEAkvB,EAAA,IAAAnoE,MAAA,yCAeA+sC,EAAAm7B,aAAAn7B,EAAAlkB,KAAAvpB,YAAAytC,EAAAgG,eAQAuP,WAAA,SAAA/nC,EAAA1a,GACAA,IAAAA,MACAlF,KAAAytE,oBAAAztE,KAAA0tE,eAAA1hE,KAAAhM,MACAA,KAAA2tE,sBAAA3tE,KAAA03C,iBAAA1rC,KAAAhM,MACAA,KAAA4tE,YAAAhuD,EAAA1a,IASA2oE,gBAAA,GAcAC,gBAAA,KASAC,aAAA,GAcAC,aAAA,KAQAlB,sBAAA,EAOAmB,UAAA,EAYAx2B,mBAAA,EAYAmB,OAAA,KAOAs1B,sBAAA,EAOAC,qBAAA,EAOAC,uBAAA,EAOAC,kBAAAj8B,EAAAkD,QAAAtxC,SAQAsqE,eAAA,EAQAC,YAAA,EAOAC,oBAAA,aASAC,qBAAA,EAWAC,aAYAC,eAAA,EASAzT,cAAAp+D,EAOA8wE,YAAA,SAAAhuD,EAAA1a,GACA,IAAA+iC,EAAAjoC,KAAA2tE,sBACA3tE,KAAAu3C,YACAv3C,KAAA4uE,mBAAAhvD,GACA5f,KAAA4sC,aAAA1nC,GACAlF,KAAA6uE,qBAEA7uE,KAAA8uE,aACA9uE,KAAA+uE,qBAGA7pE,EAAA8oE,cACAhuE,KAAAgvE,gBAAA9pE,EAAA8oE,aAAA/lC,GAEA/iC,EAAA4oE,iBACA9tE,KAAAivE,mBAAA/pE,EAAA4oE,gBAAA7lC,GAEA/iC,EAAA2oE,iBACA7tE,KAAAkvE,mBAAAhqE,EAAA2oE,gBAAA5lC,GAEA/iC,EAAA6oE,cACA/tE,KAAAmvE,gBAAAjqE,EAAA6oE,aAAA9lC,GAEAjoC,KAAAovE,cAMAC,iBAAA,WACA,OAAA,IAAAj9B,EAAA2D,kBAAA/1C,KAAAyuE,qBAOAa,iBAAA,WACA,OAAAtvE,KAAAqvE,mBAAAj9B,EAAA2D,iBAAA,GAMAg5B,mBAAA,WACA,GAAA/uE,KAAAqvE,mBAAA,CAGA,IAAAE,EAAAn9B,EAAA2D,iBACA/1C,KAAAwvE,oBAAAD,EAAAvvE,KAAAyvE,cAAAzvE,KAAA0vE,kBACA1vE,KAAA2vE,eACA3vE,KAAAwvE,oBAAAD,EAAAvvE,KAAA2vE,cAAA3vE,KAAA4vE,cAIAJ,oBAAA,SAAAD,EAAAl8B,EAAAtoC,GACAsoC,EAAAp0B,aAAA,QAAAjf,KAAA8gC,MAAAyuC,GACAl8B,EAAAp0B,aAAA,SAAAjf,KAAA+gC,OAAAwuC,GACAxkE,EAAAm/B,MAAAqlC,EAAAA,IAUAH,WAAA,WAEA,OADApvE,KAAA6vE,QAAAnlB,EAAA1qD,KAAAyvE,eACAzvE,MAkDAgvE,gBAAA,SAAAhnD,EAAA/mB,EAAAiE,GACA,OAAAlF,KAAA8vE,oBAAA,eAAA9nD,EAAA/mB,EAAAiE,IAmDA+pE,mBAAA,SAAAjnD,EAAA/mB,EAAAiE,GACA,OAAAlF,KAAA8vE,oBAAA,kBAAA9nD,EAAA/mB,EAAAiE,IAwBAiqE,gBAAA,SAAApB,EAAA9sE,GACA,OAAAjB,KAAA+vE,oBAAA,eAAAhC,EAAA9sE,IAwBAiuE,mBAAA,SAAArB,EAAA5sE,GACA,OAAAjB,KAAA+vE,oBAAA,kBAAAlC,EAAA5sE,IAOA4tE,mBAAA,WACA,IAAAp+D,EAAAzQ,KAAAuzC,aAEA9iC,EAAA29D,sBAAA39D,EAAA29D,uBAAA39D,EAAAu/D,6BACAv/D,EAAAw/D,0BAAAx/D,EAAAy/D,yBAAAz/D,EAAA0/D,uBACA1/D,EAAA29D,sBAAApuE,KAAAouE,uBAWA0B,oBAAA,SAAA5iD,EAAAlF,EAAA/mB,EAAAiE,GAkBA,MAjBA,iBAAA8iB,EACAoqB,EAAAlkB,KAAA4tB,UAAA9zB,EAAA,SAAAtG,GACA,GAAAA,EAAA,CACA,IAAAsrB,EAAA,IAAAoF,EAAA6nB,MAAAv4C,EAAAxc,GACAlF,KAAAktB,GAAA8f,EACAA,EAAAqG,OAAArzC,KAEAiB,GAAAA,EAAAygB,IACA1hB,KAAAkF,GAAAA,EAAA62C,cAGA72C,GAAA8iB,EAAAkkD,WAAAhnE,GACAlF,KAAAktB,GAAAlF,EACAA,IAAAA,EAAAqrB,OAAArzC,MACAiB,GAAAA,EAAA+mB,IAGAhoB,MAUA+vE,oBAAA,SAAA7iD,EAAAghC,EAAAjtD,GAIA,OAHAjB,KAAAktB,GAAAghC,EACAluD,KAAAq4C,cAAA6V,EAAAhhC,GACAltB,KAAAy4C,aAAAyV,EAAAhhC,EAAAjsB,GACAjB,MAMAowE,qBAAA,WACA,IAAA7uD,EAAA+8B,IACA,IAAA/8B,EACA,MAAAisD,EAKA,GAHAjsD,EAAA5E,QACA4E,EAAA5E,eAEA,IAAA4E,EAAAgyB,WACA,MAAAi6B,EAEA,OAAAjsD,GAOAqrB,aAAA,SAAA1nC,GACA,IAAAuqE,EAAAzvE,KAAAyvE,cACAzvE,KAAAktC,YAAAhoC,GAEAlF,KAAA8gC,MAAA9gC,KAAA8gC,OAAAtjC,SAAAiyE,EAAA3uC,MAAA,KAAA,EACA9gC,KAAA+gC,OAAA/gC,KAAA+gC,QAAAvjC,SAAAiyE,EAAA1uC,OAAA,KAAA,EAEA/gC,KAAAyvE,cAAA9yD,QAIA8yD,EAAA3uC,MAAA9gC,KAAA8gC,MACA2uC,EAAA1uC,OAAA/gC,KAAA+gC,OAEA0uC,EAAA9yD,MAAAmkB,MAAA9gC,KAAA8gC,MAAA,KACA2uC,EAAA9yD,MAAAokB,OAAA/gC,KAAA+gC,OAAA,KAEA/gC,KAAAquE,kBAAAruE,KAAAquE,kBAAApwE,UAQA2wE,mBAAA,SAAAlwB,GAEAA,GAAAA,EAAAnL,WACAvzC,KAAAyvE,cAAA/wB,EAGA1+C,KAAAyvE,cAAAr9B,EAAAlkB,KAAAs8B,QAAA9L,IAAA1+C,KAAAowE,uBAGAh+B,EAAAlkB,KAAA6N,SAAA/7B,KAAAyvE,cAAA,gBAEAzvE,KAAA8uE,aACA9uE,KAAAqwE,kBAAArwE,KAAAyvE,eAGAzvE,KAAA0vE,iBAAA1vE,KAAAyvE,cAAAl8B,WAAA,OAOA+8B,SAAA,WACA,OAAAtwE,KAAA8gC,OAOAyvC,UAAA,WACA,OAAAvwE,KAAA+gC,QAYAyvC,SAAA,SAAA/1E,EAAAyK,GACA,OAAAlF,KAAAywE,eAAA3vC,MAAArmC,GAAAyK,IAYAwrE,UAAA,SAAAj2E,EAAAyK,GACA,OAAAlF,KAAAywE,eAAA1vC,OAAAtmC,GAAAyK,IAcAurE,cAAA,SAAAhqC,EAAAvhC,GACA,IAAAyrE,EAIA,IAAA,IAAAjuE,KAFAwC,EAAAA,MAEAuhC,EACAkqC,EAAAlqC,EAAA/jC,GAEAwC,EAAA0rE,UACA5wE,KAAA6wE,uBAAAnuE,EAAA+jC,EAAA/jC,IACAiuE,GAAA,KACA3wE,KAAA8wE,gBAAA,GAGA5rE,EAAA6rE,eACA/wE,KAAAgxE,iBAAAtuE,EAAAiuE,GAcA,OAXA3wE,KAAAixE,qBACAjxE,KAAAkxE,kBAAAlxE,KAAAkxE,iBAAAC,kBAEAnxE,KAAA+uE,qBACA/uE,KAAA6uE,qBACA7uE,KAAAovE,aAEAlqE,EAAA0rE,SACA5wE,KAAA03C,mBAGA13C,MAWA6wE,uBAAA,SAAAnuE,EAAAjI,GAaA,OAZAuF,KAAAyvE,cAAA/sE,GAAAjI,EAEAuF,KAAA2vE,gBACA3vE,KAAA2vE,cAAAjtE,GAAAjI,GAGAuF,KAAAoxE,gBACApxE,KAAAoxE,cAAA1uE,GAAAjI,GAGAuF,KAAA0C,GAAAjI,EAEAuF,MAWAgxE,iBAAA,SAAAtuE,EAAAjI,GAWA,OAVAuF,KAAAyvE,cAAA9yD,MAAAja,GAAAjI,EAEAuF,KAAA2vE,gBACA3vE,KAAA2vE,cAAAhzD,MAAAja,GAAAjI,GAGAuF,KAAAqxE,YACArxE,KAAAqxE,UAAA10D,MAAAja,GAAAjI,GAGAuF,MAOAsxE,QAAA,WACA,OAAAtxE,KAAAquE,kBAAA,IASAkD,qBAAA,SAAAC,GACA,IAAAt2E,EAAAzB,EAAAyY,EAAAu/D,EAAAzxE,KAAA0xE,cAEA,IADA1xE,KAAAquE,kBAAAmD,EACA/3E,EAAA,EAAAyY,EAAAlS,KAAAu3C,SAAAh+C,OAAAE,EAAAyY,EAAAzY,KACAyB,EAAA8E,KAAAu3C,SAAA99C,IACAk4E,OAAAz2E,EAAA02E,WAJA,GAAA,GAWA,OALAH,GAAA,oBAAAA,EAAAv3E,MACAu3E,EAAAG,WAPA,GAAA,GASA5xE,KAAA6xE,yBACA7xE,KAAAy3C,mBAAAz3C,KAAA03C,mBACA13C,MAUA8xE,YAAA,SAAAh4B,EAAAr/C,GAEA,IAAA4P,EAAAyvC,EAAA03B,EAAAxxE,KAAAquE,kBAAApwE,MAAA,GACA67C,EAAAQ,EAAAR,EAAAmB,EAAAj7C,KAAAquE,oBACAmD,EAAA,GAAA/2E,EACA+2E,EAAA,GAAA/2E,EACA,IAAA+P,EAAA8vC,EAAAR,EAAA03B,GAGA,OAFAA,EAAA,IAAAnnE,EAAAi5B,EAAA94B,EAAA84B,EACAkuC,EAAA,IAAAnnE,EAAAk5B,EAAA/4B,EAAA+4B,EACAvjC,KAAAuxE,qBAAAC,IASAO,QAAA,SAAAt3E,GAEA,OADAuF,KAAA8xE,YAAA,IAAA1/B,EAAA6H,MAAA,EAAA,GAAAx/C,GACAuF,MASAgyE,YAAA,SAAAl4B,GACA,IAAA03B,EAAAxxE,KAAAquE,kBAAApwE,MAAA,GAGA,OAFAuzE,EAAA,IAAA13B,EAAAxW,EACAkuC,EAAA,IAAA13B,EAAAvW,EACAvjC,KAAAuxE,qBAAAC,IASAS,YAAA,SAAAn4B,GACA,OAAA95C,KAAAgyE,YAAA,IAAA5/B,EAAA6H,OACAH,EAAAxW,EAAAtjC,KAAAquE,kBAAA,IACAv0B,EAAAvW,EAAAvjC,KAAAquE,kBAAA,MAQA6D,WAAA,WACA,OAAAlyE,KAAAyvE,eAOAj4B,eAAA,SAAA19C,GACAkG,KAAAiuE,UAAAn0E,EAAAq4E,aACAr4E,EAAAk/C,KAAA,SAAAh5C,MACAlG,EAAA83E,YACA5xE,KAAAo3C,KAAA,gBAAAj4C,OAAArF,IACAA,EAAAs9C,KAAA,UAOAU,iBAAA,SAAAh+C,GACAkG,KAAAo3C,KAAA,kBAAAj4C,OAAArF,IACAA,EAAAs9C,KAAA,kBACAt9C,EAAAu5C,QASA++B,aAAA,SAAA3hE,GAEA,OADAA,EAAA4hE,UAAA,EAAA,EAAAryE,KAAA8gC,MAAA9gC,KAAA+gC,QACA/gC,MAOAuzC,WAAA,WACA,OAAAvzC,KAAA0vE,kBAQAx2D,MAAA,WAcA,OAbAlZ,KAAAu3C,SAAAh+C,OAAA,EACAyG,KAAA8tE,gBAAA,KACA9tE,KAAAguE,aAAA,KACAhuE,KAAA6tE,gBAAA,GACA7tE,KAAA+tE,aAAA,GACA/tE,KAAAsyE,oBACAtyE,KAAA8S,IAAA,WAAA9S,KAAAuyE,sBACAvyE,KAAAwyE,gBAAA,KACAxyE,KAAAsyE,mBAAA,GAEAtyE,KAAAoyE,aAAApyE,KAAA0vE,kBACA1vE,KAAAo3C,KAAA,kBACAp3C,KAAAy3C,mBAAAz3C,KAAA03C,mBACA13C,MAQAyyE,UAAA,WACA,IAAAC,EAAA1yE,KAAA0vE,iBAEA,OADA1vE,KAAA2yE,aAAAD,EAAA1yE,KAAAu3C,UACAv3C,MAaA0tE,eAAA,WACA1tE,KAAA4yE,YAAA,EACA5yE,KAAAyyE,aAUA/6B,iBAAA,WAIA,OAHA13C,KAAA4yE,cACA5yE,KAAA4yE,YAAAxgC,EAAAlkB,KAAAy+B,iBAAA3sD,KAAAytE,sBAEAztE,MAUA6xE,uBAAA,WACA,IAAAn3B,KAAA5Z,EAAA9gC,KAAA8gC,MAAAC,EAAA/gC,KAAA+gC,OACA8xC,EAAA53B,EAAAj7C,KAAAquE,mBAMA,OALA3zB,EAAAo4B,GAAAx4B,GAAAhX,EAAA,EAAAC,EAAA,GAAAsvC,GACAn4B,EAAAq4B,GAAAz4B,GAAAhX,EAAAxC,EAAAyC,EAAAxC,GAAA8xC,GACAn4B,EAAAh9B,GAAA,IAAA00B,EAAA6H,MAAAS,EAAAq4B,GAAAzvC,EAAAoX,EAAAo4B,GAAAvvC,GACAmX,EAAAs4B,GAAA,IAAA5gC,EAAA6H,MAAAS,EAAAo4B,GAAAxvC,EAAAoX,EAAAq4B,GAAAxvC,GACAvjC,KAAA0uE,UAAAh0B,EACAA,GAGAu4B,sBAAA,WACAjzE,KAAA4yE,cACAxgC,EAAAlkB,KAAAu/B,gBAAAztD,KAAA4yE,aACA5yE,KAAA4yE,YAAA,IAWAD,aAAA,SAAAliE,EAAA7N,GACA,IAAA6T,EAAAzW,KAAAquE,kBAAAj1E,EAAA4G,KAAAk7D,SACAl7D,KAAAizE,wBACAjzE,KAAA6xE,yBACA7xE,KAAAoyE,aAAA3hE,GACAzQ,KAAAo3C,KAAA,iBAAA3mC,IAAAA,IACAzQ,KAAA44C,QACAxG,EAAAlkB,KAAA0wB,YAAA5+C,KAAAyQ,GAEAzQ,KAAAkzE,kBAAAziE,GAEAA,EAAAytC,OAEAztC,EAAAuG,UAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAzW,KAAAmzE,eAAA1iE,EAAA7N,GACA6N,EAAA4tC,WACAr+C,KAAAkuE,sBAAAluE,KAAA8uE,aACA9uE,KAAAozE,aAAA3iE,GAEAzQ,KAAA44C,QACAnoC,EAAA4tC,UAEAjlD,IACAA,EAAAi6C,OAAArzC,KAEA5G,EAAAi6E,cACAj6E,EAAAk6E,gBAAA,EACAl6E,EAAAm6E,aAAAC,aAAA,IACAxzE,KAAAyzE,qBAAAhjE,IAEAzQ,KAAA0zE,eAAAjjE,GACAzQ,KAAAkuE,sBAAAluE,KAAA8uE,aACA9uE,KAAAozE,aAAA3iE,GAEAzQ,KAAAo3C,KAAA,gBAAA3mC,IAAAA,KAOAgjE,qBAAA,SAAAhjE,GACA,IAAAgG,EAAAzW,KAAAquE,kBAAAj1E,EAAA4G,KAAAk7D,SACAzqD,EAAAytC,OACAztC,EAAAuG,UAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGAhG,EAAAkjE,yBAAA,iBACAv6E,EAAA4d,UAAAvG,GACAA,EAAAy5B,MAAA,EAAA9wC,EAAAw6E,MAAA,EAAAx6E,EAAAy6E,OACApjE,EAAAijC,UAAAt6C,EAAA06E,cAAA16E,EAAA26E,mBAAA36E,EAAA46E,mBACAvjE,EAAA4tC,WAQA80B,eAAA,SAAA1iE,EAAA7N,GACA,IAAAnJ,EAAAyY,EACA,IAAAzY,EAAA,EAAAyY,EAAAtP,EAAArJ,OAAAE,EAAAyY,IAAAzY,EACAmJ,EAAAnJ,IAAAmJ,EAAAnJ,GAAAuT,OAAAyD,IASAwjE,2BAAA,SAAAxjE,EAAAyc,GACA,IAAA+pB,EAAAj3C,KAAAktB,EAAA,SAAAhyB,EAAA8E,KAAAktB,EAAA,SACAzW,EAAAzW,KAAAquE,kBAAA6F,EAAAl0E,KAAAktB,EAAA,OACA,GAAA+pB,GAAA/7C,EAAA,CAGA,GAAA+7C,EAAA,CACAxmC,EAAAytC,OACAztC,EAAAquC,YACAruC,EAAA0tC,OAAA,EAAA,GACA1tC,EAAA0jE,OAAAn0E,KAAA8gC,MAAA,GACArwB,EAAA0jE,OAAAn0E,KAAA8gC,MAAA9gC,KAAA+gC,QACAtwB,EAAA0jE,OAAA,EAAAn0E,KAAA+gC,QACAtwB,EAAA2jE,YACA3jE,EAAA4jE,UAAAp9B,EAAAu0B,OACAv0B,EAAAu0B,OAAA/6D,EAAAzQ,MACAi3C,EACAi9B,GACAzjE,EAAAuG,UAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAhG,EAAAuG,UAAA,EAAA,EAAA,EAAA,EAAAigC,EAAAszB,SAAA,EAAAtzB,EAAAuzB,SAAA,GACA,IAAAziC,EAAAkP,EAAAwzB,mBAAAxzB,EAAAg1B,iBACAlkC,GAAAt3B,EAAAuG,UAAA+wB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAt3B,EAAAwmC,OACAxmC,EAAA4tC,UAEAnjD,IACAuV,EAAAytC,OACAg2B,GACAzjE,EAAAuG,UAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAvb,EAAA8R,OAAAyD,GACAA,EAAA4tC,aAQA60B,kBAAA,SAAAziE,GACAzQ,KAAAi0E,2BAAAxjE,EAAA,eAOAijE,eAAA,SAAAjjE,GACAzQ,KAAAi0E,2BAAAxjE,EAAA,YAQA6jE,UAAA,WACA,OACAt1C,IAAAh/B,KAAA+gC,OAAA,EACAtI,KAAAz4B,KAAA8gC,MAAA,IASAyzC,cAAA,SAAAr5E,GACA,OAAA8E,KAAAw0E,cAAAt5E,EAAA,IAAAk3C,EAAA6H,MAAAj6C,KAAAs0E,YAAA77C,KAAAv9B,EAAAu5E,iBAAAlxC,KASAmxC,cAAA,SAAAx5E,GACA,OAAA8E,KAAAw0E,cAAAt5E,EAAA,IAAAk3C,EAAA6H,MAAA/+C,EAAAu5E,iBAAAnxC,EAAAtjC,KAAAs0E,YAAAt1C,OASA21C,aAAA,SAAAz5E,GACA,IAAA05E,EAAA50E,KAAAs0E,YAEA,OAAAt0E,KAAAw0E,cAAAt5E,EAAA,IAAAk3C,EAAA6H,MAAA26B,EAAAn8C,KAAAm8C,EAAA51C,OASA61C,qBAAA,SAAA35E,GACA,IAAA45E,EAAA90E,KAAA+0E,cAEA,OAAA/0E,KAAAw0E,cAAAt5E,EAAA45E,IASAE,sBAAA,SAAA95E,GACA,IAAA45E,EAAA90E,KAAA+0E,cAEA,OADA/0E,KAAAw0E,cAAAt5E,EAAA,IAAAk3C,EAAA6H,MAAA66B,EAAAxxC,EAAApoC,EAAAu5E,iBAAAlxC,IACAvjC,MASAi1E,sBAAA,SAAA/5E,GACA,IAAA45E,EAAA90E,KAAA+0E,cAEA,OAAA/0E,KAAAw0E,cAAAt5E,EAAA,IAAAk3C,EAAA6H,MAAA/+C,EAAAu5E,iBAAAnxC,EAAAwxC,EAAAvxC,KAQAwxC,YAAA,WACA,IAAAH,EAAA50E,KAAAs0E,YACAzB,EAAA53B,EAAAj7C,KAAAquE,mBACA,OAAA/zB,GAAAhX,EAAAsxC,EAAAn8C,KAAA8K,EAAAqxC,EAAA51C,KAAA6zC,IAUA2B,cAAA,SAAAt5E,EAAA05E,GAIA,OAHA15E,EAAAogE,oBAAAsZ,EAAA,SAAA,UACA15E,EAAA02E,YACA5xE,KAAAy3C,mBAAAz3C,KAAA03C,mBACA13C,MAQAk1E,eAAA,SAAAtK,GACA,OAAA5qE,KAAAm1E,iBAAAvK,IAQAD,SAAA,SAAAC,GACA,OAAA5qE,KAAAo1E,gBAAA,WAAAxK,IAQAuK,iBAAA,SAAAvK,GACA,OAAA5qE,KAAAo1E,gBAAA,mBAAAxK,IAMAwK,gBAAA,SAAArrE,EAAA6gE,GAEA,IAAA1P,EAAAl7D,KAAAk7D,SAAA/xD,GACAmL,QAAA89B,EAAA99B,QACA1R,QAAA5C,KAAAq1E,WAAAtrE,EAAA6gE,IASA,OAPA1P,IACA/xD,EAAA+xD,SAAAl7D,KAAAs1E,UAAAt1E,KAAAk7D,SAAAnxD,EAAA6gE,IAEAzpE,EAAAgI,EAAAnJ,KAAAu1E,qBAAAxrE,EAAA6gE,IAEAx4B,EAAAlkB,KAAAovB,uBAAAt9C,KAAAmJ,EAAAyhE,GAEAzhE,GAMAksE,WAAA,SAAAtrE,EAAA6gE,GACA,OAAA5qE,KAAAu3C,SAAA10C,OAAA,SAAA3H,GACA,OAAAA,EAAAs6E,oBACAnxE,IAAA,SAAA2oC,GACA,OAAAhtC,KAAAs1E,UAAAtoC,EAAAjjC,EAAA6gE,IACA5qE,OAMAs1E,UAAA,SAAAtoC,EAAAjjC,EAAA6gE,GACA,IAAA6K,EAEAz1E,KAAA8sE,uBACA2I,EAAAzoC,EAAA8/B,qBACA9/B,EAAA8/B,sBAAA,GAGA,IAAA5xE,EAAA8xC,EAAAjjC,GAAA6gE,GAIA,OAHA5qE,KAAA8sE,uBACA9/B,EAAA8/B,qBAAA2I,GAEAv6E,GAMAq6E,qBAAA,SAAAxrE,EAAA6gE,GACA,IAAAzhE,KAAAusE,EAAA11E,KAAA8tE,gBAAAhiC,EAAA9rC,KAAAguE,aAoBA,OAlBAhuE,KAAA6tE,kBACA1kE,EAAAwsE,WAAA31E,KAAA6tE,gBAAAlD,SACA3qE,KAAA6tE,gBAAAlD,SAAAC,GACA5qE,KAAA6tE,iBAGA7tE,KAAA+tE,eACA5kE,EAAA2iC,QAAA9rC,KAAA+tE,aAAApD,SACA3qE,KAAA+tE,aAAApD,SAAAC,GACA5qE,KAAA+tE,cAEA2H,IAAAA,EAAAF,oBACArsE,EAAA2kE,gBAAA9tE,KAAAs1E,UAAAI,EAAA3rE,EAAA6gE,IAEA9+B,IAAAA,EAAA0pC,oBACArsE,EAAA6kE,aAAAhuE,KAAAs1E,UAAAxpC,EAAA/hC,EAAA6gE,IAGAzhE,GAUAysE,2BAAA,EAuCA/K,MAAA,SAAA3lE,EAAAq3C,GACAr3C,IAAAA,MACAA,EAAAq3C,QAAAA,EACA,IAAAuuB,KAkBA,OAhBA9qE,KAAA61E,gBAAA/K,EAAA5lE,GACAlF,KAAA81E,cAAAhL,EAAA5lE,GACAlF,KAAAk7D,UACA4P,EAAA9rE,KAAA,sBAAAgB,KAAAk7D,SAAA6a,WAAA,UAEA/1E,KAAAg2E,sBAAAlL,EAAA,cACA9qE,KAAAi2E,sBAAAnL,EAAA,kBAAAvuB,GACAv8C,KAAAk2E,eAAApL,EAAAvuB,GACAv8C,KAAAk7D,UACA4P,EAAA9rE,KAAA,UAEAgB,KAAAg2E,sBAAAlL,EAAA,WACA9qE,KAAAi2E,sBAAAnL,EAAA,eAAAvuB,GAEAuuB,EAAA9rE,KAAA,UAEA8rE,EAAA39D,KAAA,KAMA0oE,gBAAA,SAAA/K,EAAA5lE,GACAA,EAAAixE,kBAGArL,EAAA9rE,KACA,iCAAAkG,EAAAkxE,UAAA,QAAA,yBACA,kDACA,0DAOAN,cAAA,SAAAhL,EAAA5lE,GACA,IAEAssE,EAFA1wC,EAAA57B,EAAA47B,OAAA9gC,KAAA8gC,MACAC,EAAA77B,EAAA67B,QAAA/gC,KAAA+gC,OACAs1C,EAAA,gBAAAr2E,KAAA8gC,MAAA,IAAA9gC,KAAA+gC,OAAA,KACA8gB,EAAAzP,EAAAt2C,OAAA+lD,oBAEA38C,EAAAmxE,QACAA,EAAA,YACAnxE,EAAAmxE,QAAA/yC,EAAA,IACAp+B,EAAAmxE,QAAA9yC,EAAA,IACAr+B,EAAAmxE,QAAAv1C,MAAA,IACA57B,EAAAmxE,QAAAt1C,OAAA,KAGA/gC,KAAA41E,4BACApE,EAAAxxE,KAAAquE,kBACAgI,EAAA,YACAnkC,GAAAs/B,EAAA,GAAAA,EAAA,GAAA3vB,GAAA,IACA3P,GAAAs/B,EAAA,GAAAA,EAAA,GAAA3vB,GAAA,IACA3P,EAAAlyC,KAAA8gC,MAAA0wC,EAAA,GAAA3vB,GAAA,IACA3P,EAAAlyC,KAAA+gC,OAAAywC,EAAA,GAAA3vB,GAAA,MAIAipB,EAAA9rE,KACA,QACA,sCACA,8CACA,iBACA,UAAA8hC,EAAA,KACA,WAAAC,EAAA,KACAs1C,EACA,0BACA,gCAAAjkC,EAAA99B,QAAA,YACA,WACAtU,KAAAs2E,2BACAt2E,KAAAu2E,6BACAv2E,KAAAw2E,wBAAAtxE,GACA,cAIAsxE,wBAAA,SAAAtxE,GACA,IAAAg2D,EAAAl7D,KAAAk7D,SACA,OAAAA,GACAA,EAAA6a,WAAA,YAAA3jC,EAAAt2C,OAAAs6D,QACA,iBAAA8E,EAAA6a,WAAA,QACA/1E,KAAAk7D,SAAAub,cAAAvxE,EAAAq3C,SACA,iBAEA,IAOAg6B,2BAAA,WACA,IAAA9uB,EAAAznD,KACA8qE,GAAA,aAAA,WAAAzmE,IAAA,SAAA3B,GACA,IAAAu0C,EAAAwQ,EAAA/kD,EAAA,SACA,GAAAu0C,GAAAA,EAAAu0B,OAAA,CACA,IAAAkL,EAAAjvB,EAAA/kD,EAAA,OAAA8uE,EAAA/pB,EAAA4mB,kBACAnzE,GACA4lC,MAAA2mB,EAAA3mB,OAAA41C,EAAAlF,EAAA,GAAA,GACAzwC,OAAA0mB,EAAA1mB,QAAA21C,EAAAlF,EAAA,GAAA,IAEA,OAAAv6B,EAAA4zB,MACA3vE,GACAgwE,oBAAAwL,EAAAtkC,EAAAlkB,KAAA0zB,YAAA4vB,GAAA,QAIA,OAAA1G,EAAA39D,KAAA,KAUAmpE,yBAAA,WACA,IAAAx8E,EAAAqnD,EACAxkC,EAAAg6D,EAAAC,EAAAC,EAAAC,EAAAr9E,EAAAyY,EADA44D,EAAA,GAAAiM,KAEA1hC,EAAAjD,EAAAiD,UAAAzyC,EAAA5C,KAAAu3C,SAEA,IAAA99C,EAAA,EAAAyY,EAAAtP,EAAArJ,OAAAE,EAAAyY,EAAAzY,IAGA,GAFAK,EAAA8I,EAAAnJ,GACA0nD,EAAArnD,EAAAqnD,YACA,IAAArnD,EAAAI,KAAAyH,QAAA,UAAAo1E,EAAA51B,IAAA9L,EAAA8L,KAGA41B,EAAA51B,IAAA,EACArnD,EAAA42C,QAIA,IAAAkmC,KADAj6D,EAAA7iB,EAAA42C,OAGA,IAAAomC,KADAH,EAAAh6D,EAAAi6D,GAEAC,EAAAF,EAAAG,GACA31B,EAAA01B,EAAA11B,YACA41B,EAAA51B,IAAA9L,EAAA8L,KACA41B,EAAA51B,IAAA,GAMA,IAAA,IAAA99C,KAAA0zE,EACAjM,IACA,qBACA,uBAAAznE,EAAA,OACA,mBAAAgyC,EAAAhyC,GAAA,QACA,WACA8J,KAAA,IAaA,OAVA29D,IACAA,GACA,4BACA,cACAA,EACA,MACA,cACA39D,KAAA,KAGA29D,GAMAoL,eAAA,SAAApL,EAAAvuB,GACA,IAAAvP,EAAAvzC,EAAAyY,EAAAtP,EAAA5C,KAAAu3C,SACA,IAAA99C,EAAA,EAAAyY,EAAAtP,EAAArJ,OAAAE,EAAAyY,EAAAzY,KACAuzC,EAAApqC,EAAAnJ,IACA+7E,mBAGAx1E,KAAAg3E,cAAAlM,EAAA99B,EAAAuP,IAOAy6B,cAAA,SAAAlM,EAAA99B,EAAAuP,GACAuuB,EAAA9rE,KAAAguC,EAAA69B,MAAAtuB,KAMA05B,sBAAA,SAAAnL,EAAA59C,EAAAqvB,GACAv8C,KAAAktB,KAAAltB,KAAAktB,GAAAsoD,mBAAAx1E,KAAAktB,GAAA29C,OACAC,EAAA9rE,KAAAgB,KAAAktB,GAAA29C,MAAAtuB,KAOAy5B,sBAAA,SAAAlL,EAAA59C,GACA,IAAAorB,EAAAt4C,KAAAktB,EAAA,SAAAskD,EAAAxxE,KAAAquE,kBAAA4I,EAAAj3E,KAAA8gC,MACAo2C,EAAAl3E,KAAA+gC,OACA,GAAAuX,EAGA,GAAAA,EAAAkzB,OAAA,CACA,IAAAQ,EAAA1zB,EAAA0zB,OAAA6G,EAAAzgC,EAAAlkB,KAAA+sB,gBAAAu2B,GAAA2F,EAAAn3E,KAAAktB,EAAA,OACAg+C,EAAAiM,EAAA/kC,EAAAlkB,KAAA0zB,YAAAixB,GAAA,GACA/H,EAAA9rE,KACA,oBAAAksE,EAAA,cAAA+L,EAAA,EAAA,IAAAC,EAAA,EAAA,KACA,OAAA5+B,EAAAiyB,QAAA0M,EAAA,EACA,QAAA3+B,EAAAkyB,QAAA0M,EAAA,EAAA,KACA,UACA,aAAAlL,GAAA,cAAAA,EACA1zB,EAAAl5C,OAAA0hC,MACAm2C,EACA,aACA,aAAAjL,GAAA,cAAAA,EACA1zB,EAAAl5C,OAAA2hC,OACAm2C,EACA,sBAAA5+B,EAAApvC,GAAA,KACA,mBAIA4hE,EAAA9rE,KACA,gDACA,SAAAs5C,EAAA,IACA,eAaA8+B,WAAA,SAAAl8E,GACA,IAAAA,EACA,OAAA8E,KAEA,IACAvG,EAAAK,EAAAu9E,EADAC,EAAAt3E,KAAA0xE,cAEA,GAAAx2E,IAAAo8E,GAAA,oBAAAp8E,EAAAhB,KAEA,IADAm9E,EAAAC,EAAA//B,SACA99C,EAAA49E,EAAA99E,OAAAE,KACAK,EAAAu9E,EAAA59E,GACA8/C,EAAAv5C,KAAAu3C,SAAAz9C,GACAkG,KAAAu3C,SAAAhyC,QAAAzL,QAIAy/C,EAAAv5C,KAAAu3C,SAAAr8C,GACA8E,KAAAu3C,SAAAhyC,QAAArK,GAGA,OADA8E,KAAAy3C,mBAAAz3C,KAAA03C,mBACA13C,MAUAu3E,aAAA,SAAAr8E,GACA,IAAAA,EACA,OAAA8E,KAEA,IACAvG,EAAAK,EAAAu9E,EADAC,EAAAt3E,KAAA0xE,cAEA,GAAAx2E,IAAAo8E,GAAA,oBAAAp8E,EAAAhB,KAEA,IADAm9E,EAAAC,EAAA//B,SACA99C,EAAA,EAAAA,EAAA49E,EAAA99E,OAAAE,IACAK,EAAAu9E,EAAA59E,GACA8/C,EAAAv5C,KAAAu3C,SAAAz9C,GACAkG,KAAAu3C,SAAAv4C,KAAAlF,QAIAy/C,EAAAv5C,KAAAu3C,SAAAr8C,GACA8E,KAAAu3C,SAAAv4C,KAAA9D,GAGA,OADA8E,KAAAy3C,mBAAAz3C,KAAA03C,mBACA13C,MAcAw3E,cAAA,SAAAt8E,EAAAu8E,GACA,IAAAv8E,EACA,OAAA8E,KAEA,IACAvG,EAAAK,EAAAyI,EAAAm1E,EAAAL,EADAC,EAAAt3E,KAAA0xE,cACAiG,EAAA,EAEA,GAAAz8E,IAAAo8E,GAAA,oBAAAp8E,EAAAhB,KAEA,IADAm9E,EAAAC,EAAA//B,SACA99C,EAAA,EAAAA,EAAA49E,EAAA99E,OAAAE,IACAK,EAAAu9E,EAAA59E,IACA8I,EAAAvC,KAAAu3C,SAAA51C,QAAA7H,IACA,EAAA69E,IACAD,EAAAn1E,EAAA,EACAg3C,EAAAv5C,KAAAu3C,SAAAz9C,GACAkG,KAAAu3C,SAAA/0C,OAAAk1E,EAAA,EAAA59E,IAEA69E,SAKA,KADAp1E,EAAAvC,KAAAu3C,SAAA51C,QAAAzG,MAGAw8E,EAAA13E,KAAA43E,mBAAA18E,EAAAqH,EAAAk1E,GACAl+B,EAAAv5C,KAAAu3C,SAAAr8C,GACA8E,KAAAu3C,SAAA/0C,OAAAk1E,EAAA,EAAAx8E,IAIA,OADA8E,KAAAy3C,mBAAAz3C,KAAA03C,mBACA13C,MAMA43E,mBAAA,SAAA18E,EAAAqH,EAAAk1E,GACA,IAAAC,EAAAj+E,EAEA,GAAAg+E,EAIA,IAHAC,EAAAn1E,EAGA9I,EAAA8I,EAAA,EAAA9I,GAAA,IAAAA,EAAA,CAEA,IAAAo+E,EAAA38E,EAAA48E,qBAAA93E,KAAAu3C,SAAA99C,KACAyB,EAAA68E,wBAAA/3E,KAAAu3C,SAAA99C,KACAuG,KAAAu3C,SAAA99C,GAAAs+E,wBAAA78E,GAEA,GAAA28E,EAAA,CACAH,EAAAj+E,EACA,YAKAi+E,EAAAn1E,EAAA,EAGA,OAAAm1E,GAcAM,aAAA,SAAA98E,EAAAu8E,GACA,IAAAv8E,EACA,OAAA8E,KAEA,IACAvG,EAAAK,EAAAyI,EAAAm1E,EAAAL,EADAC,EAAAt3E,KAAA0xE,cACAiG,EAAA,EAEA,GAAAz8E,IAAAo8E,GAAA,oBAAAp8E,EAAAhB,KAEA,IADAm9E,EAAAC,EAAA//B,SACA99C,EAAA49E,EAAA99E,OAAAE,KACAK,EAAAu9E,EAAA59E,IACA8I,EAAAvC,KAAAu3C,SAAA51C,QAAA7H,IACAkG,KAAAu3C,SAAAh+C,OAAA,EAAAo+E,IACAD,EAAAn1E,EAAA,EACAg3C,EAAAv5C,KAAAu3C,SAAAz9C,GACAkG,KAAAu3C,SAAA/0C,OAAAk1E,EAAA,EAAA59E,IAEA69E,SAIAp1E,EAAAvC,KAAAu3C,SAAA51C,QAAAzG,MACA8E,KAAAu3C,SAAAh+C,OAAA,IAEAm+E,EAAA13E,KAAAi4E,mBAAA/8E,EAAAqH,EAAAk1E,GACAl+B,EAAAv5C,KAAAu3C,SAAAr8C,GACA8E,KAAAu3C,SAAA/0C,OAAAk1E,EAAA,EAAAx8E,IAIA,OADA8E,KAAAy3C,mBAAAz3C,KAAA03C,mBACA13C,MAMAi4E,mBAAA,SAAA/8E,EAAAqH,EAAAk1E,GACA,IAAAC,EAAAj+E,EAAAyY,EAEA,GAAAulE,EAIA,IAHAC,EAAAn1E,EAGA9I,EAAA8I,EAAA,EAAA2P,EAAAlS,KAAAu3C,SAAAh+C,OAAAE,EAAAyY,IAAAzY,EAAA,CAEA,IAAAo+E,EAAA38E,EAAA48E,qBAAA93E,KAAAu3C,SAAA99C,KACAyB,EAAA68E,wBAAA/3E,KAAAu3C,SAAA99C,KACAuG,KAAAu3C,SAAA99C,GAAAs+E,wBAAA78E,GAEA,GAAA28E,EAAA,CACAH,EAAAj+E,EACA,YAKAi+E,EAAAn1E,EAAA,EAGA,OAAAm1E,GAUAv5B,OAAA,SAAAjjD,EAAA4F,GAGA,OAFAy4C,EAAAv5C,KAAAu3C,SAAAr8C,GACA8E,KAAAu3C,SAAA/0C,OAAA1B,EAAA,EAAA5F,GACA8E,KAAAy3C,mBAAAz3C,KAAA03C,oBAQAwgC,QAAA,WAsBA,OApBAl4E,KAAA4yE,cACAxgC,EAAAlkB,KAAAu/B,gBAAAztD,KAAA4yE,aACA5yE,KAAA4yE,YAAA,GAEA5yE,KAAA+3C,cAAA,SAAA78C,GACAA,EAAAg9E,SAAAh9E,EAAAg9E,YAEAl4E,KAAAu3C,YACAv3C,KAAA8tE,iBAAA9tE,KAAA8tE,gBAAAoK,SACAl4E,KAAA8tE,gBAAAoK,UAEAl4E,KAAA8tE,gBAAA,KACA9tE,KAAAguE,cAAAhuE,KAAAguE,aAAAkK,SACAl4E,KAAAguE,aAAAkK,UAEAl4E,KAAAguE,aAAA,KACAhuE,KAAAwyE,gBAAA,KACAxyE,KAAA0vE,iBAAA,KACAt9B,EAAAlkB,KAAAk9B,iBAAAprD,KAAAyvE,eACAzvE,KAAAyvE,mBAAA3yE,EACAkD,MAOA/F,SAAA,WACA,MAAA,oBAAA+F,KAAAk4C,aAAA,iBACAl4C,KAAAu3C,SAAAh+C,OAAA,SAIA4H,EAAAixC,EAAAm7B,aAAAvxE,UAAAo2C,EAAAkF,YACAn2C,EAAAixC,EAAAm7B,aAAAvxE,UAAAo2C,EAAAzE,YACAxsC,EAAAixC,EAAAm7B,aAAAvxE,UAAAo2C,EAAA+lC,iBAEAh3E,EAAAixC,EAAAm7B,cAOA6K,WAAA,yCAWAC,SAAA,SAAAtuE,GACA,IAAA6V,EAAA0+B,IAEA,IAAA1+B,IAAAA,EAAA2zB,WACA,OAAA,KAGA,IAAA9iC,EAAAmP,EAAA2zB,WAAA,MACA,IAAA9iC,EACA,OAAA,KAGA,OAAA1G,GAEA,IAAA,cACA,YAAA,IAAA0G,EAAA6nE,YAEA,QACA,OAAA,SAoBAlmC,EAAAm7B,aAAAvxE,UAAAqc,OAAA+5B,EAAAm7B,aAAAvxE,UAAA2uE,SAEAv4B,EAAA0C,eACA1C,EAAAm7B,aAAAvxE,UAAAu8E,gBAAA,WACA,IAAAttB,EAAAD,EAAAhrD,KAAAyvE,eACA,OAAAxkB,GAAAA,EAAAstB,mBAEAnmC,EAAAm7B,aAAAvxE,UAAAw8E,iBAAA,SAAAhqB,GACA,IAAAvD,EAAAD,EAAAhrD,KAAAyvE,eACA,OAAAxkB,GAAAA,EAAAutB,iBAAAhqB,MAr1DA,GAg2DApc,EAAAqmC,UAAArmC,EAAAlkB,KAAAvpB,aAOAupD,MAAA,eAOAptB,MAAA,EASAmsC,OAAA,KAOAyL,cAAA,QAOAC,eAAA,QAOAC,iBAAA,GAOAC,gBAAA,KAQAC,UAAA,SAAA5zE,GAEA,OADAlF,KAAAitE,OAAA,IAAA76B,EAAAw6B,OAAA1nE,GACAlF,MAOAmxE,gBAAA,WACA,IAAA1gE,EAAAzQ,KAAAqzC,OAAAu8B,WACAn/D,EAAAsoE,YAAA/4E,KAAAkuD,MACAz9C,EAAAuoE,UAAAh5E,KAAA8gC,MACArwB,EAAAwoE,QAAAj5E,KAAA04E,cACAjoE,EAAAyoE,WAAAl5E,KAAA44E,iBACAnoE,EAAA0oE,SAAAn5E,KAAA24E,eACAvmC,EAAAm7B,aAAA8K,SAAA,gBACA5nE,EAAA6nE,YAAAt4E,KAAA64E,sBASAO,kBAAA,SAAA3oE,GACA,IAAAgG,EAAAzW,KAAAqzC,OAAAg7B,kBACA59D,EAAAytC,OACAztC,EAAAuG,UAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAOA4iE,WAAA,WACA,GAAAr5E,KAAAitE,OAAA,CAIA,IAAA55B,EAAArzC,KAAAqzC,OACA45B,EAAAjtE,KAAAitE,OACAx8D,EAAA4iC,EAAAu8B,WACAz0C,EAAAkY,EAAAi+B,UACAj+B,GAAAA,EAAAg8B,qBACAl0C,GAAAiX,EAAA2D,kBAGAtlC,EAAA6oE,YAAArM,EAAA/e,MACAz9C,EAAA8oE,WAAAtM,EAAAntD,KAAAqb,EACA1qB,EAAA+oE,cAAAvM,EAAA1C,QAAApvC,EACA1qB,EAAAgpE,cAAAxM,EAAAzC,QAAArvC,IAGAu+C,gBAAA,WACA,IAAAxrB,EAAA,IAAA9b,EAAA0b,MAAA9tD,KAAAkuD,OACA,OAAAA,EAAA6J,WAAA,KAAA/3D,KAAAitE,QAOA0M,aAAA,WACA,IAAAlpE,EAAAzQ,KAAAqzC,OAAAu8B,WAEAn/D,EAAA6oE,YAAA,GACA7oE,EAAA8oE,WAAA9oE,EAAA+oE,cAAA/oE,EAAAgpE,cAAA,KAWArnC,EAAAwnC,YAAAxnC,EAAAlkB,KAAAvpB,YAAAytC,EAAAqmC,WAOAoB,SAAA,GAOAlyB,WAAA,SAAAtU,GACArzC,KAAAqzC,OAAAA,EACArzC,KAAA85E,YAOAC,aAAA,SAAAtpE,EAAAupE,EAAAC,GACA,IAAAC,EAAAF,EAAA7d,aAAA8d,GAEA,OADAxpE,EAAA0pE,iBAAAH,EAAA12C,EAAA02C,EAAAz2C,EAAA22C,EAAA52C,EAAA42C,EAAA32C,GACA22C,GAOAE,YAAA,SAAAC,EAAAn1E,GACAlF,KAAAqzC,OAAAinC,aAAAp1E,EAAAoI,KAGAtN,KAAAu6E,mBAAAF,GAGAr6E,KAAAw6E,oBAAAH,GACAr6E,KAAAy6E,YAOAC,YAAA,SAAAL,EAAAn1E,GACA,GAAAlF,KAAAqzC,OAAAinC,aAAAp1E,EAAAoI,IAGAtN,KAAAw6E,oBAAAH,IAAAr6E,KAAA85E,QAAAvgF,OAAA,EACA,GAAAyG,KAAA05E,kBAGA15E,KAAAqzC,OAAA++B,aAAApyE,KAAAqzC,OAAAu8B,YACA5vE,KAAAy6E,cAEA,CACA,IAAA//B,EAAA16C,KAAA85E,QAAAvgF,EAAAmhD,EAAAnhD,OAAAkX,EAAAzQ,KAAAqzC,OAAAu8B,WAEA5vE,KAAAo5E,kBAAA3oE,GACAzQ,KAAA26E,SACAlqE,EAAAquC,YACAruC,EAAA0tC,OAAAn+C,KAAA26E,OAAAr3C,EAAAtjC,KAAA26E,OAAAp3C,IAEAvjC,KAAA26E,OAAA36E,KAAA+5E,aAAAtpE,EAAAiqC,EAAAnhD,EAAA,GAAAmhD,EAAAnhD,EAAA,IAAA,GACAkX,EAAAmhD,SACAnhD,EAAA4tC,YAQAu8B,UAAA,SAAA11E,GACA,OAAAlF,KAAAqzC,OAAAinC,aAAAp1E,EAAAoI,KAGAtN,KAAA26E,YAAA79E,EACAkD,KAAA66E,uBACA,IAOAN,mBAAA,SAAAF,GAEA,IAAAnsE,EAAA,IAAAkkC,EAAA6H,MAAAogC,EAAA/2C,EAAA+2C,EAAA92C,GAEAvjC,KAAA86E,SACA96E,KAAA+6E,UAAA7sE,GACAlO,KAAAqzC,OAAAu8B,WAAAzxB,OAAAjwC,EAAAo1B,EAAAp1B,EAAAq1B,IAOAw3C,UAAA,SAAAjhC,GACA,QAAA95C,KAAA85E,QAAAvgF,OAAA,GAAAugD,EAAAx7C,GAAA0B,KAAA85E,QAAA95E,KAAA85E,QAAAvgF,OAAA,MAGAyG,KAAA85E,QAAA96E,KAAA86C,GACA,KAOAghC,OAAA,WACA96E,KAAA85E,WACA95E,KAAAmxE,kBACAnxE,KAAAq5E,cAOAmB,oBAAA,SAAAH,GACA,IAAAW,EAAA,IAAA5oC,EAAA6H,MAAAogC,EAAA/2C,EAAA+2C,EAAA92C,GACA,OAAAvjC,KAAA+6E,UAAAC,IAOAP,QAAA,WACA,IAAAhhF,EAAAyY,EAAAzB,EAAAzQ,KAAAqzC,OAAAu8B,WACAoK,EAAAh6E,KAAA85E,QAAA,GACAG,EAAAj6E,KAAA85E,QAAA,GAQA,GANA95E,KAAAo5E,kBAAA3oE,GACAA,EAAAquC,YAKA,IAAA9+C,KAAA85E,QAAAvgF,QAAAygF,EAAA12C,IAAA22C,EAAA32C,GAAA02C,EAAAz2C,IAAA02C,EAAA12C,EAAA,CACA,IAAAzC,EAAA9gC,KAAA8gC,MAAA,IACAk5C,EAAA,IAAA5nC,EAAA6H,MAAA+/B,EAAA12C,EAAA02C,EAAAz2C,GACA02C,EAAA,IAAA7nC,EAAA6H,MAAAggC,EAAA32C,EAAA22C,EAAA12C,GACAy2C,EAAA12C,GAAAxC,EACAm5C,EAAA32C,GAAAxC,EAIA,IAFArwB,EAAA0tC,OAAA67B,EAAA12C,EAAA02C,EAAAz2C,GAEA9pC,EAAA,EAAAyY,EAAAlS,KAAA85E,QAAAvgF,OAAAE,EAAAyY,EAAAzY,IAGAuG,KAAA+5E,aAAAtpE,EAAAupE,EAAAC,GACAD,EAAAh6E,KAAA85E,QAAArgF,GACAwgF,EAAAj6E,KAAA85E,QAAArgF,EAAA,GAKAgX,EAAA0jE,OAAA6F,EAAA12C,EAAA02C,EAAAz2C,GACA9yB,EAAAmhD,SACAnhD,EAAA4tC,WAQA48B,uBAAA,SAAAvgC,GACA,IAAAjhD,EAAAL,KAAA0nC,EAAA9gC,KAAA8gC,MAAA,IACAk5C,EAAA,IAAA5nC,EAAA6H,MAAAS,EAAA,GAAApX,EAAAoX,EAAA,GAAAnX,GACA02C,EAAA,IAAA7nC,EAAA6H,MAAAS,EAAA,GAAApX,EAAAoX,EAAA,GAAAnX,GACArxB,EAAAwoC,EAAAnhD,OAAA2hF,EAAA,EAAAC,EAAA,EAAAC,EAAAlpE,EAAA,EAOA,IALAkpE,IACAF,EAAAxgC,EAAA,GAAApX,EAAA22C,EAAA32C,GAAA,EAAAoX,EAAA,GAAApX,IAAA22C,EAAA32C,EAAA,EAAA,EACA63C,EAAAzgC,EAAA,GAAAnX,EAAA02C,EAAA12C,GAAA,EAAAmX,EAAA,GAAAnX,IAAA02C,EAAA12C,EAAA,EAAA,GAEAnqC,EAAA4F,KAAA,KAAAg7E,EAAA12C,EAAA43C,EAAAp6C,EAAA,IAAAk5C,EAAAz2C,EAAA43C,EAAAr6C,EAAA,KACArnC,EAAA,EAAAA,EAAAyY,EAAAzY,IAAA,CACA,IAAAugF,EAAA17E,GAAA27E,GAAA,CACA,IAAAC,EAAAF,EAAA7d,aAAA8d,GAIA7gF,EAAA4F,KAAA,KAAAg7E,EAAA12C,EAAA,IAAA02C,EAAAz2C,EAAA,IAAA22C,EAAA52C,EAAA,IAAA42C,EAAA32C,EAAA,KAEAy2C,EAAAt/B,EAAAjhD,GACAA,EAAA,EAAAihD,EAAAnhD,SACA0gF,EAAAv/B,EAAAjhD,EAAA,IAQA,OALA2hF,IACAF,EAAAlB,EAAA12C,EAAAoX,EAAAjhD,EAAA,GAAA6pC,EAAA,EAAA02C,EAAA12C,IAAAoX,EAAAjhD,EAAA,GAAA6pC,EAAA,GAAA,EACA63C,EAAAnB,EAAAz2C,EAAAmX,EAAAjhD,EAAA,GAAA8pC,EAAA,EAAAy2C,EAAAz2C,IAAAmX,EAAAjhD,EAAA,GAAA8pC,EAAA,GAAA,GAEAnqC,EAAA4F,KAAA,KAAAg7E,EAAA12C,EAAA43C,EAAAp6C,EAAA,IAAAk5C,EAAAz2C,EAAA43C,EAAAr6C,GACA1nC,GAQAiiF,WAAA,SAAAC,GACA,IAAAliF,EAAA,IAAAg5C,EAAAmpC,KAAAD,GACArkC,KAAA,KACA2a,OAAA5xD,KAAAkuD,MACAstB,YAAAx7E,KAAA8gC,MACA43C,cAAA14E,KAAA04E,cACAE,iBAAA54E,KAAA44E,iBACAD,eAAA34E,KAAA24E,eACAE,gBAAA74E,KAAA64E,kBAOA,OALA74E,KAAAitE,SACAjtE,KAAAitE,OAAAJ,cAAA,EACAzzE,EAAA0/E,UAAA94E,KAAAitE,SAGA7zE,GAMAqiF,eAAA,SAAA/gC,EAAAghC,GACA,GAAAhhC,EAAAnhD,QAAA,EACA,OAAAmhD,EAEA,IACAjhD,EADA0hC,EAAAn7B,KAAAqzC,OAAAi+B,UAAAqK,EAAAryE,KAAAqoC,IAAA+pC,EAAAvgD,EAAA,GACAp6B,EAAA25C,EAAAnhD,OAAA,EAAAqiF,EAAAlhC,EAAA,GAAAmhC,GAAAD,GAEA,IAAAniF,EAAA,EAAAA,EAAAsH,EAAAtH,IACA6P,KAAAqoC,IAAAiqC,EAAAt4C,EAAAoX,EAAAjhD,GAAA6pC,EAAA,GAAAh6B,KAAAqoC,IAAAiqC,EAAAr4C,EAAAmX,EAAAjhD,GAAA8pC,EAAA,IACAo4C,IACAC,EAAAlhC,EAAAjhD,GACAoiF,EAAA78E,KAAA48E,IAMA,OAHA,IAAAC,EAAAtiF,QACAsiF,EAAA78E,KAAA,IAAAozC,EAAA6H,MAAA4hC,EAAA,GAAAv4C,EAAAu4C,EAAA,GAAAt4C,IAEAs4C,GAQAhB,oBAAA,WACA,IAAApqE,EAAAzQ,KAAAqzC,OAAAu8B,WACAn/D,EAAA2jE,YACAp0E,KAAA65E,WACA75E,KAAA85E,QAAA95E,KAAAy7E,eAAAz7E,KAAA85E,QAAA95E,KAAA65E,WAEA,IAAAyB,EAAAt7E,KAAAi7E,uBAAAj7E,KAAA85E,SAAA3sE,KAAA,IACA,GAAA,0BAAAmuE,EAAA,CASA,IAAAliF,EAAA4G,KAAAq7E,WAAAC,GACAt7E,KAAAqzC,OAAA++B,aAAApyE,KAAAqzC,OAAAu8B,YACA5vE,KAAAqzC,OAAA5pC,IAAArQ,GACA4G,KAAAqzC,OAAAqE,mBACAt+C,EAAAw4E,YACA5xE,KAAA25E,eAIA35E,KAAAqzC,OAAA+D,KAAA,gBAAAh+C,KAAAA,SAbA4G,KAAAqzC,OAAAqE,sBAuBAtF,EAAA0pC,YAAA1pC,EAAAlkB,KAAAvpB,YAAAytC,EAAAqmC,WAOA33C,MAAA,GAOA6mB,WAAA,SAAAtU,GACArzC,KAAAqzC,OAAAA,EACArzC,KAAA06C,WAOAqhC,QAAA,SAAA1B,GACA,IAAAvgC,EAAA95C,KAAAg8E,SAAA3B,GACA5pE,EAAAzQ,KAAAqzC,OAAAu8B,WACA5vE,KAAAo5E,kBAAA3oE,GACAzQ,KAAAi8E,IAAAxrE,EAAAqpC,GACArpC,EAAA4tC,WAGA49B,IAAA,SAAAxrE,EAAAqpC,GACArpC,EAAA4jE,UAAAv6B,EAAA7C,KACAxmC,EAAAquC,YACAruC,EAAAyrE,IAAApiC,EAAAxW,EAAAwW,EAAAvW,EAAAuW,EAAAqiC,OAAA,EAAA,EAAA7yE,KAAA4vC,IAAA,GACAzoC,EAAA2jE,YACA3jE,EAAAwmC,QAMAmjC,YAAA,SAAAC,GACAr6E,KAAA06C,OAAAnhD,OAAA,EACAyG,KAAAqzC,OAAA++B,aAAApyE,KAAAqzC,OAAAu8B,YACA5vE,KAAAq5E,aACAr5E,KAAA+7E,QAAA1B,IAOAI,QAAA,WACA,IAAAhhF,EAAAyY,EAAAzB,EAAAzQ,KAAAqzC,OAAAu8B,WACAl1B,EAAA16C,KAAA06C,OAEA,IADA16C,KAAAo5E,kBAAA3oE,GACAhX,EAAA,EAAAyY,EAAAwoC,EAAAnhD,OAAAE,EAAAyY,EAAAzY,IACAuG,KAAAi8E,IAAAxrE,EAAAiqC,EAAAjhD,IAEAgX,EAAA4tC,WAOAq8B,YAAA,SAAAL,GACAr6E,KAAA05E,mBACA15E,KAAAqzC,OAAA++B,aAAApyE,KAAAqzC,OAAAu8B,YACA5vE,KAAAg8E,SAAA3B,GACAr6E,KAAAy6E,WAGAz6E,KAAA+7E,QAAA1B,IAOAO,UAAA,WACA,IAAAnhF,EAAAyY,EAAAkqE,EAAAp8E,KAAAqzC,OAAAoE,kBACAz3C,KAAAqzC,OAAAoE,mBAAA,EAEA,IAAA4kC,KAEA,IAAA5iF,EAAA,EAAAyY,EAAAlS,KAAA06C,OAAAnhD,OAAAE,EAAAyY,EAAAzY,IAAA,CACA,IAAAqgD,EAAA95C,KAAA06C,OAAAjhD,GACA6iF,EAAA,IAAAlqC,EAAAmqC,QACAJ,OAAAriC,EAAAqiC,OACA1jD,KAAAqhB,EAAAxW,EACAtE,IAAA8a,EAAAvW,EACAi5C,QAAA,SACAC,QAAA,SACAxlC,KAAA6C,EAAA7C,OAGAj3C,KAAAitE,QAAAqP,EAAAxD,UAAA94E,KAAAitE,QAEAoP,EAAAr9E,KAAAs9E,GAEA,IAAA3K,EAAA,IAAAv/B,EAAAgL,MAAAi/B,GACA1K,EAAAt+B,OAAArzC,KAAAqzC,OAEArzC,KAAAqzC,OAAA5pC,IAAAkoE,GACA3xE,KAAAqzC,OAAA+D,KAAA,gBAAAh+C,KAAAu4E,IAEA3xE,KAAAqzC,OAAA++B,aAAApyE,KAAAqzC,OAAAu8B,YACA5vE,KAAA25E,eACA35E,KAAAqzC,OAAAoE,kBAAA2kC,EACAp8E,KAAAqzC,OAAAqE,oBAOAskC,SAAA,SAAA3B,GACA,IAAAW,EAAA,IAAA5oC,EAAA6H,MAAAogC,EAAA/2C,EAAA+2C,EAAA92C,GAEAm5C,EAAAtqC,EAAAlkB,KAAAsrB,aACAlwC,KAAAwiB,IAAA,EAAA9rB,KAAA8gC,MAAA,IAAA9gC,KAAA8gC,MAAA,IAAA,EAEA67C,EAAA,IAAAvqC,EAAA0b,MAAA9tD,KAAAkuD,OACA4J,SAAA1lB,EAAAlkB,KAAAsrB,aAAA,EAAA,KAAA,KACAwe,SAOA,OALAgjB,EAAAmB,OAAAO,EACA1B,EAAA/jC,KAAA0lC,EAEA38E,KAAA06C,OAAA17C,KAAAg8E,GAEAA,KASA5oC,EAAAwqC,WAAAxqC,EAAAlkB,KAAAvpB,YAAAytC,EAAAqmC,WAOA33C,MAAA,GAOA+7C,QAAA,GAOAC,SAAA,EAOAC,iBAAA,EAOAC,eAAA,EAOAC,qBAAA,EAOAt1B,WAAA,SAAAtU,GACArzC,KAAAqzC,OAAAA,EACArzC,KAAAk9E,gBAOA9C,YAAA,SAAAC,GACAr6E,KAAAk9E,YAAA3jF,OAAA,EACAyG,KAAAqzC,OAAA++B,aAAApyE,KAAAqzC,OAAAu8B,YACA5vE,KAAAq5E,aAEAr5E,KAAAm9E,cAAA9C,GACAr6E,KAAAgN,OAAAhN,KAAAo9E,mBAOA1C,YAAA,SAAAL,GACAr6E,KAAAm9E,cAAA9C,GACAr6E,KAAAgN,OAAAhN,KAAAo9E,mBAMAxC,UAAA,WACA,IAAAwB,EAAAp8E,KAAAqzC,OAAAoE,kBACAz3C,KAAAqzC,OAAAoE,mBAAA,EAIA,IAFA,IAAA4lC,KAEA5jF,EAAA,EAAA6jF,EAAAt9E,KAAAk9E,YAAA3jF,OAAAE,EAAA6jF,EAAA7jF,IAGA,IAFA,IAAA8jF,EAAAv9E,KAAAk9E,YAAAzjF,GAEA4J,EAAA,EAAAqiD,EAAA63B,EAAAhkF,OAAA8J,EAAAqiD,EAAAriD,IAAA,CAEA,IAAAm6E,EAAA,IAAAprC,EAAAqrC,MACA38C,MAAAy8C,EAAAl6E,GAAAy9B,MACAC,OAAAw8C,EAAAl6E,GAAAy9B,MACArI,KAAA8kD,EAAAl6E,GAAAigC,EAAA,EACAtE,IAAAu+C,EAAAl6E,GAAAkgC,EAAA,EACAi5C,QAAA,SACAC,QAAA,SACAxlC,KAAAj3C,KAAAkuD,QAEAmvB,EAAAr+E,KAAAw+E,GAIAx9E,KAAAi9E,sBACAI,EAAAr9E,KAAA09E,mBAAAL,IAGA,IAAA1L,EAAA,IAAAv/B,EAAAgL,MAAAigC,GACAr9E,KAAAitE,QAAA0E,EAAAmH,UAAA94E,KAAAitE,QACAjtE,KAAAqzC,OAAA5pC,IAAAkoE,GACA3xE,KAAAqzC,OAAA+D,KAAA,gBAAAh+C,KAAAu4E,IAEA3xE,KAAAqzC,OAAA++B,aAAApyE,KAAAqzC,OAAAu8B,YACA5vE,KAAA25E,eACA35E,KAAAqzC,OAAAoE,kBAAA2kC,EACAp8E,KAAAqzC,OAAAqE,oBAOAgmC,mBAAA,SAAAL,GAGA,IAAAt+E,EAAAtF,EAAAyY,EAAAyrE,KAEA,IAAAlkF,EAAA,EAAAyY,EAAAmrE,EAAA9jF,OAAAE,EAAAyY,EAAAzY,IACAsF,EAAAs+E,EAAA5jF,GAAAg/B,KAAA,GAAA4kD,EAAA5jF,GAAAulC,IACA2+C,EAAA5+E,KACA4+E,EAAA5+E,GAAAs+E,EAAA5jF,IAGA,IAAAmkF,KACA,IAAA7+E,KAAA4+E,EACAC,EAAA5+E,KAAA2+E,EAAA5+E,IAGA,OAAA6+E,GAMA5wE,OAAA,SAAAuwE,GACA,IAAA9jF,EAAAyY,EAAAzB,EAAAzQ,KAAAqzC,OAAAu8B,WAKA,IAJAn/D,EAAA4jE,UAAAr0E,KAAAkuD,MAEAluD,KAAAo5E,kBAAA3oE,GAEAhX,EAAA,EAAAyY,EAAAqrE,EAAAhkF,OAAAE,EAAAyY,EAAAzY,IAAA,CACA,IAAAqgD,EAAAyjC,EAAA9jF,QACA,IAAAqgD,EAAA7e,UACAxqB,EAAAotE,YAAA/jC,EAAA7e,SAEAxqB,EAAAqtE,SAAAhkC,EAAAxW,EAAAwW,EAAAvW,EAAAuW,EAAAhZ,MAAAgZ,EAAAhZ,OAEArwB,EAAA4tC,WAMAo8B,QAAA,WACA,IAAAhhF,EAAA6jF,EAAA7sE,EAAAzQ,KAAAqzC,OAAAu8B,WAKA,IAJAn/D,EAAA4jE,UAAAr0E,KAAAkuD,MAEAluD,KAAAo5E,kBAAA3oE,GAEAhX,EAAA,EAAA6jF,EAAAt9E,KAAAk9E,YAAA3jF,OAAAE,EAAA6jF,EAAA7jF,IACAuG,KAAAgN,OAAAhN,KAAAk9E,YAAAzjF,IAEAgX,EAAA4tC,WAMA8+B,cAAA,SAAA9C,GACAr6E,KAAAo9E,oBAEA,IAAA95C,EAAAC,EAAAzC,EAAArnC,EAAA0iF,EAAAn8E,KAAA8gC,MAAA,EAEA,IAAArnC,EAAA,EAAAA,EAAAuG,KAAA68E,QAAApjF,IAAA,CAEA6pC,EAAA8O,EAAAlkB,KAAAsrB,aAAA6gC,EAAA/2C,EAAA64C,EAAA9B,EAAA/2C,EAAA64C,GACA54C,EAAA6O,EAAAlkB,KAAAsrB,aAAA6gC,EAAA92C,EAAA44C,EAAA9B,EAAA92C,EAAA44C,GAGAr7C,EADA9gC,KAAA+8E,iBACA3qC,EAAAlkB,KAAAsrB,aAEAlwC,KAAAwiB,IAAA,EAAA9rB,KAAA88E,SAAA98E,KAAA+8E,kBACA/8E,KAAA88E,SAAA98E,KAAA+8E,kBAGA/8E,KAAA88E,SAGA,IAAAhjC,EAAA,IAAA1H,EAAA6H,MAAA3W,EAAAC,GACAuW,EAAAhZ,MAAAA,EAEA9gC,KAAAg9E,gBACAljC,EAAA7e,QAAAmX,EAAAlkB,KAAAsrB,aAAA,EAAA,KAAA,KAGAx5C,KAAAo9E,iBAAAp+E,KAAA86C,GAGA95C,KAAAk9E,YAAAl+E,KAAAgB,KAAAo9E,qBAUAhrC,EAAA2rC,aAAA3rC,EAAAlkB,KAAAvpB,YAAAytC,EAAAwnC,aAEAoE,cAAA,WAEA,IAEAC,EAAA7rC,EAAAlkB,KAAAowB,sBACA4/B,EAAAD,EAAA1qC,WAAA,MAUA,OARA0qC,EAAAn9C,MAAAm9C,EAAAl9C,OAAA+7C,GAEAoB,EAAA7J,UAAAr0E,KAAAkuD,MACAgwB,EAAAp/B,YACAo/B,EAAAhC,IAAAY,GAAAA,GAAAA,GAAA,EAAA,EAAAxzE,KAAA4vC,IAAA,GACAglC,EAAA9J,YACA8J,EAAAjnC,OAEAgnC,GAGAE,sBAAA,WACA,OAAA9jF,OAAA2F,KAAAg+E,eAAAlgF,QAAA,aAAA,IAAAkC,KAAAkuD,MAAA,MAMAkwB,WAAA,WACA,OAAAp+E,KAAAqzC,OAAAu8B,WAAAjD,cAAA3sE,KAAAZ,QAAAY,KAAAg+E,gBAAA,WAMA7M,gBAAA,WACAnxE,KAAAunD,UAAA,mBACAvnD,KAAAqzC,OAAAu8B,WAAAmJ,YAAA/4E,KAAAo+E,cAMA/C,WAAA,SAAAC,GACA,IAAAliF,EAAA4G,KAAAunD,UAAA,aAAA+zB,GACA+C,EAAAjlF,EAAAklF,oBAAA/iB,UAAAniE,EAAAoiF,YAAA,GAOA,OALApiF,EAAAw4D,OAAA,IAAAxf,EAAAsG,SACAt5C,OAAAY,KAAAZ,QAAAY,KAAAm+E,wBACA5T,SAAA8T,EAAA/6C,EACAknC,SAAA6T,EAAA96C,IAEAnqC,KAKA,WAEA,IAAA6uD,EAAA7V,EAAAlkB,KAAA+5B,WACAlW,EAAAK,EAAAlkB,KAAA6jB,iBACA4H,EAAAvH,EAAAlkB,KAAAyrB,iBACAjI,EAAApoC,KAAAooC,MACA1N,EAAA16B,KAAA06B,IACAu6C,EAAAnsC,EAAAm7B,aAAA8K,SAAA,eA8sDA,IAAA,IAAA31E,KA/pDA0vC,EAAAW,OAAAX,EAAAlkB,KAAAvpB,YAAAytC,EAAAm7B,cAQA5lB,WAAA,SAAA/nC,EAAA1a,GACAA,IAAAA,MACAlF,KAAAytE,oBAAAztE,KAAA0tE,eAAA1hE,KAAAhM,MACAA,KAAA2tE,sBAAA3tE,KAAA03C,iBAAA1rC,KAAAhM,MACAA,KAAA4tE,YAAAhuD,EAAA1a,GACAlF,KAAAw+E,mBACAx+E,KAAAy+E,sBAQAC,mBAAA,EAWAC,YAAA,WASAC,iBAAA,EASAC,kBAAA,EAWAC,YAAA,SAWAC,aAAA,WAOAjQ,aAAA,EAOAkQ,WAAA,EAYAC,aAAA,WAcAC,gBAAA,KAOAC,eAAA,2BAOAC,sBAOAC,qBAAA,2BAOAC,mBAAA,EAOAC,yBAAA,EAOAC,YAAA,OAOAC,WAAA,OAOAC,cAAA,UAOAC,kBAAA,YAOAC,eAAA,YAQAC,iBAAA,cAOAC,eAAA,mBAOAC,oBAAA,EAOAC,oBAAA,EAOAC,gBAAA,EAUAC,eAAA,EAQAC,wBAAA,EAQAC,UAAA,EASAC,cAAA,KAQAC,iBAAA,EAQAC,gBAAA,EAQAC,iBAAA,EAMAC,WAOAC,eAAA,KAOAC,mBAKAnC,iBAAA,WACAx+E,KAAA4gF,kBAAA,KACA5gF,KAAA6gF,eAAA,KACA7gF,KAAA8gF,sBACA9gF,KAAA+gF,qBACA/gF,KAAAghF,sBAEAhhF,KAAA+uE,qBAEA/uE,KAAAkxE,iBAAA9+B,EAAAwnC,aAAA,IAAAxnC,EAAAwnC,YAAA55E,MAEAA,KAAAovE,cAQA6R,uBAAA,WACA,IACA/lF,EAAAgmF,EAAAC,EADAC,EAAAphF,KAAAqhF,mBAGA,GAAAD,EAAA7nF,OAAA,IAAAyG,KAAAmgF,uBAAA,CACAe,KACAC,KACA,IAAA,IAAA1nF,EAAA,EAAAF,EAAAyG,KAAAu3C,SAAAh+C,OAAAE,EAAAF,EAAAE,IACAyB,EAAA8E,KAAAu3C,SAAA99C,IACA,IAAA2nF,EAAAz/E,QAAAzG,GACAgmF,EAAAliF,KAAA9D,GAGAimF,EAAAniF,KAAA9D,GAGAkmF,EAAA7nF,OAAA,IACAyG,KAAA0xE,cAAAn6B,SAAA4pC,GAEAD,EAAAliF,KAAAe,MAAAmhF,EAAAC,QAGAD,EAAAlhF,KAAAu3C,SAEA,OAAA2pC,GAQAzO,UAAA,YACAzyE,KAAAshF,iBAAAthF,KAAA6gF,gBAAA7gF,KAAAkgF,gBACAlgF,KAAAoyE,aAAApyE,KAAA4vE,YACA5vE,KAAAshF,iBAAA,GAEAthF,KAAA8wE,gBACA9wE,KAAAuhF,eAAAvhF,KAAA4vE,YAEA,IAAA8C,EAAA1yE,KAAA0vE,iBAEA,OADA1vE,KAAA2yE,aAAAD,EAAA1yE,KAAAihF,0BACAjhF,MAGAuhF,eAAA,SAAA9wE,GACAA,EAAAytC,OACAl+C,KAAAkgF,eAAAlgF,KAAAixE,sBACAjxE,KAAAkxE,kBAAAlxE,KAAAkxE,iBAAAuJ,UACAz6E,KAAAshF,iBAAA,GAGAthF,KAAAg/E,WAAAh/E,KAAA6gF,iBACA7gF,KAAAwhF,eAAA/wE,GACAzQ,KAAAshF,iBAAA,GAEA7wE,EAAA4tC,WASAojC,UAAA,WACA,IAAAhxE,EAAAzQ,KAAA4vE,WAIA,OAHA5vE,KAAAoyE,aAAA3hE,GACAzQ,KAAAuhF,eAAA9wE,GACAzQ,KAAAo3C,KAAA,gBACAp3C,MAOA0hF,uBAAA,WACA,IAAAnnC,EAAAv6C,KAAA4gF,kBAEArmC,EAAAp7C,OAAA8Y,KACAmnC,OAAA7E,EAAA/pB,SAAA4uB,OACAC,OAAA9E,EAAA/pB,SAAA6uB,OACAC,MAAA/E,EAAA/pB,SAAA8uB,MACAC,MAAAhF,EAAA/pB,SAAA+uB,MACA9mB,KAAA8hB,EAAA/pB,SAAAiI,KACAuG,IAAAub,EAAA/pB,SAAAwO,MAGAh/B,KAAA2hF,uBAAApnC,EAAAp7C,SACA,WAAAo7C,EAAAiiC,UACA,UAAAjiC,EAAAiiC,QACAjiC,EAAAqnC,YAAA,EAGArnC,EAAAqnC,WAAA,GAGA,WAAArnC,EAAAkiC,UACA,WAAAliC,EAAAkiC,QACAliC,EAAAsnC,YAAA,EAGAtnC,EAAAsnC,WAAA,GAIAtnC,EAAAiiC,QAAA,SACAjiC,EAAAkiC,QAAA,WAGAliC,EAAAiiC,QAAAjiC,EAAA/pB,SAAAgsD,QACAjiC,EAAAkiC,QAAAliC,EAAA/pB,SAAAisD,UAWAqF,cAAA,SAAAx0E,EAAAnO,EAAA26C,GACA,IAEAioC,EADA1H,EAAAvgC,GAAA95C,KAAAioD,WAAA36C,GADA,GAYA,OAPAy0E,EADA5iF,EAAAwyE,OAAAxyE,EAAAwyE,QAAA3xE,KAAA0xE,eAAA,oBAAAvyE,EAAAwyE,MAAAz3E,KACA8F,KAAAgiF,kBAAA7iF,EAAAwyE,MAAA0I,IAGA/2C,EAAA+2C,EAAA/2C,EAAAC,EAAA82C,EAAA92C,GAIApkC,EAAA2iF,cAAAC,IAAA5iF,EAAA8iF,kBAAA5H,IAMA2H,kBAAA,SAAA9mF,EAAAm/E,GACA,IAAAtyC,EAAA7sC,EAAAigE,sBACA+mB,EAAA9vC,EAAAlkB,KAAA+sB,gBAAAlT,GACAo6C,EAAAniF,KAAAoiF,kBAAA/H,GACA,OAAAjoC,EAAAlkB,KAAAosB,eAAA6nC,EAAAD,IAUAG,oBAAA,SAAAljF,EAAAmkC,EAAAC,GAGA,GAAApkC,EAAAk0E,eAAAl0E,EAAA20E,cAAA30E,IAAAa,KAAA0xE,cAAA,CACA,IAAA4Q,EAAAtiF,KAAAgiF,kBAAA7iF,GAAAmkC,EAAAA,EAAAC,EAAAA,IACAg/C,EAAAj5E,KAAAwiB,IAAA3sB,EAAA40E,kBAAAuO,EAAAh/C,EAAAnkC,EAAAy0E,MAAA,GACA4O,EAAAl5E,KAAAwiB,IAAA3sB,EAAA60E,kBAAAsO,EAAA/+C,EAAApkC,EAAA00E,MAAA,GAEAtzB,EAAAnO,EAAAlkB,KAAAqyB,cACAphD,EAAAsjF,cAAAn5E,KAAA65B,MAAAo/C,GAAAj5E,KAAA65B,MAAAq/C,GAAAxiF,KAAAggF,qBAEA,OAAAz/B,EAGA,IAAA9vC,EAAAzQ,KAAA0iF,aACAC,EAAAxjF,EAAAyjF,yBAAAnsE,EAAAzW,KAAAquE,kBAEAlvE,EAAAyjF,yBAAA,GAEA5iF,KAAAoyE,aAAA3hE,GAEAA,EAAAytC,OACAztC,EAAAuG,UAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAtX,EAAA6N,OAAAyD,GACAA,EAAA4tC,UAEAl/C,IAAAa,KAAA0xE,eAAAvyE,EAAA0jF,gBAAApyE,GACAqyE,YAAA,EACAC,oBAAA,IAEAD,YAAA,IAGA3jF,EAAAyjF,yBAAAD,EAEA,IAAApiC,EAAAnO,EAAAlkB,KAAAqyB,cACA9vC,EAAA6yB,EAAAC,EAAAvjC,KAAAggF,qBAEA,OAAAz/B,GAQAyiC,uBAAA,SAAA11E,GAUA,MAPA,mBAAAxR,OAAAE,UAAA/B,SAAAK,KAAA0F,KAAAi/E,gBACAj/E,KAAAi/E,aAAAn8E,KAAA,SAAA/D,GAAA,OAAA,IAAAuO,EAAAvO,KAGAuO,EAAAtN,KAAAi/E,eAWAgE,sBAAA,SAAA31E,EAAAnO,GACA,IAAAiiF,EAAAphF,KAAAqhF,mBACA5P,EAAAzxE,KAAA0xE,cAEA,OACAvyE,GAEAA,GACAsyE,GACA2P,EAAA7nF,OAAA,IACA,IAAA6nF,EAAAz/E,QAAAxC,IACAsyE,IAAAtyE,IACAa,KAAAgjF,uBAAA11E,IAEAnO,IAAAA,EAAAm7B,SAEAn7B,IACAA,EAAA+jF,YACAzR,GACAA,IAAAtyE,GAUAwiF,uBAAA,SAAAxiF,GACA,GAAAA,EAAA,CAIA,IACAgkF,EADA5oC,EAAAv6C,KAAA4gF,kBAUA,MAPA,UAAArmC,EAAAjoB,QAAA,WAAAioB,EAAAjoB,QAAA,WAAAioB,EAAAjoB,OACA6wD,EAAAnjF,KAAA4+E,iBAAAz/E,EAAAy/E,gBAEA,WAAArkC,EAAAjoB,SACA6wD,EAAAnjF,KAAA6+E,kBAAA1/E,EAAA0/E,kBAGAsE,GAAA5oC,EAAA3gB,OAAA2gB,EAAA3gB,SAMAwpD,qBAAA,SAAAjkF,EAAAkkF,GACA,IAAAlnF,GACAmnC,EAAAnkC,EAAAq9E,QACAj5C,EAAApkC,EAAAs9E,SAiBA,MAdA,OAAA4G,GAAA,OAAAA,GAAA,OAAAA,EACAlnF,EAAAmnC,EAAA,QAEA,OAAA+/C,GAAA,OAAAA,GAAA,OAAAA,IACAlnF,EAAAmnC,EAAA,QAGA,OAAA+/C,GAAA,OAAAA,GAAA,OAAAA,EACAlnF,EAAAonC,EAAA,SAEA,OAAA8/C,GAAA,OAAAA,GAAA,OAAAA,IACAlnF,EAAAonC,EAAA,OAGApnC,GAUAmnF,qBAAA,SAAAC,EAAAF,EAAA/1E,GACA,IAAA+1E,IAAAE,EACA,MAAA,OAGA,OAAAF,GACA,IAAA,MACA,MAAA,SACA,IAAA,KACA,IAAA,KACA,OAAA/1E,EAAAtN,KAAA++E,cAAA,QAAA,SACA,IAAA,KACA,IAAA,KACA,OAAAzxE,EAAAtN,KAAA++E,cAAA,QAAA,SACA,QACA,MAAA,UASAyE,uBAAA,SAAAl2E,EAAAnO,EAAAokF,GACA,GAAApkF,EAAA,CAIA,IAAAk7E,EAAAr6E,KAAAioD,WAAA36C,GACA+1E,EAAAlkF,EAAA8iF,kBAAAjiF,KAAAioD,WAAA36C,GAAA,IACAglB,EAAAtyB,KAAAsjF,qBAAAC,EAAAF,EAAA/1E,EAAAnO,GACAhD,EAAA6D,KAAAojF,qBAAAjkF,EAAAkkF,GAEArjF,KAAA4gF,mBACAzhF,OAAAA,EACAmzB,OAAAA,EACA+wD,OAAAA,EACAjkC,OAAAjgD,EAAAigD,OACAC,OAAAlgD,EAAAkgD,OACAC,MAAAngD,EAAAmgD,MACAC,MAAApgD,EAAAogD,MAEAgrB,QAAA8P,EAAA/2C,EAAAnkC,EAAAs5B,KACA+xC,QAAA6P,EAAA92C,EAAApkC,EAAA6/B,IACAw9C,QAAArgF,EAAAmnC,EACAm5C,QAAAtgF,EAAAonC,EACAyN,GAAAqpC,EAAA/2C,EACAmgD,GAAApJ,EAAA92C,EACAmgD,MAAArJ,EAAA/2C,EACAqgD,MAAAtJ,EAAA92C,EAIAoc,MAAA5N,EAAA5yC,EAAAi6C,OAEAtY,MAAA3hC,EAAA2hC,MAAA3hC,EAAAigD,OACAwiC,WAAA,EACAC,WAAA,EACAhoD,SAAAvsB,EAAAusB,SACAD,OAAAtsB,EAAAtN,KAAA8+E,aACAtuD,SAAA4hB,EAAAlkB,KAAAoyB,oBAAAnhD,IAGAa,KAAA4gF,kBAAApwD,SAAAgsD,QAAArgF,EAAAmnC,EACAtjC,KAAA4gF,kBAAApwD,SAAAisD,QAAAtgF,EAAAonC,EAEAvjC,KAAA0hF,yBACA1hF,KAAA4jF,iBAAAt2E,KAUAu2E,iBAAA,SAAAvgD,EAAAC,GACA,IAAAvsB,EAAAhX,KAAA4gF,kBACAzhF,EAAA6X,EAAA7X,OACA2kF,EAAAxgD,EAAAtsB,EAAAuzD,QACAwZ,EAAAxgD,EAAAvsB,EAAAwzD,QACAwZ,GAAA7kF,EAAA8J,IAAA,kBAAA9J,EAAAs5B,OAAAqrD,EACAG,GAAA9kF,EAAA8J,IAAA,kBAAA9J,EAAA6/B,MAAA+kD,EAIA,OAFAC,GAAA7kF,EAAA8Y,IAAA,OAAA6rE,GACAG,GAAA9kF,EAAA8Y,IAAA,MAAA8rE,GACAC,GAAAC,GAQAC,2BAAA,SAAAC,EAAA5pC,EAAA6pC,GACA,IAAAl3D,EAAA,UAAAm3D,GAAAC,EAAA,UACAC,EAAAhqC,EAAAp7C,OAAAmgD,MAAAklC,EAAA,OAAAC,EAAA,QACApB,EAAA,OAAA9oC,EAAA8oC,QAAA,OAAA9oC,EAAA8oC,OAAA,GAAA,EACAqB,EAAA,EAEAP,EAAAA,EAAA,EAAA,GAAA,EACA,MAAAC,IACAG,EAAAhqC,EAAAp7C,OAAAogD,MACAilC,EAAA,MACAC,EAAA,SACAv3D,EAAA,WAEAm3D,GAAA,GAAAG,EACAH,EAAA,GAAAI,EAEAlqC,EAAAp7C,OAAA2gD,QAAA4kC,IAAA,GACAnqC,EAAAp7C,OAAA4gD,QAAA2kC,IAAA,GAEA,IAAAH,GACAhqC,EAAAoqC,UAAAtB,EAAAc,EAAAO,EACAnqC,EAAArtB,GAAAm3D,GAAAF,KAGAI,EAAAA,EAAA,EAAA,GAAA,EACAhqC,EAAAoqC,SAAAJ,EACAhqC,EAAArtB,GAAAm3D,EAAAE,EAAAlB,EAAAqB,KAYAE,YAAA,SAAAthD,EAAAC,EAAA6gD,GACA,IAAA7pC,EAAAv6C,KAAA4gF,kBACAzhF,EAAAo7C,EAAAp7C,OAAA0lF,GAAA,EACAC,EAAA3lF,EAAA8J,IAAA,gBACA87E,EAAA5lF,EAAA8J,IAAA,gBAEA,GAAA67E,GAAA,MAAAV,GAAAW,GAAA,MAAAX,EACA,OAAA,EAIA,IAGAY,EAAAC,EAHArQ,EAAAz1E,EAAAs1E,iBACAyQ,EAAA/lF,EAAAgmF,aAAA,IAAA/yC,EAAA6H,MAAA3W,EAAAC,GAAA,SAAA,UAAA6gD,GACAgB,EAAAjmF,EAAAgmF,aAAA,IAAA/yC,EAAA6H,MAAAM,EAAAmpC,MAAAnpC,EAAAopC,OAAA,SAAA,UAAAS,GACAiB,EAAAlmF,EAAAmmF,4BAWA,OATAtlF,KAAAkkF,2BAAAgB,EAAAE,EAAA7qC,EAAA6pC,GACAY,EAAA7lF,EAAAgmF,aAAA,IAAA/yC,EAAA6H,MAAA3W,EAAAC,GAAAgX,EAAAiiC,QAAAjiC,EAAAkiC,SAAA2H,GACAa,EAAA9lF,EAAAomF,uBAAA3Q,EAAAr6B,EAAAiiC,QAAAjiC,EAAAkiC,SAEAoI,EAAA7kF,KAAAwlF,eAAAR,EAAAzqC,EAAA6pC,EAAAiB,GACA9qC,EAAAmpC,MAAApgD,EACAiX,EAAAopC,MAAApgD,EAEApkC,EAAAm8D,oBAAA2pB,EAAA1qC,EAAAiiC,QAAAjiC,EAAAkiC,SACAoI,GAQAW,eAAA,SAAAC,EAAAzuE,EAAAotE,EAAAsB,GACA,IAAAr3D,EACAs3D,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAA1mC,EAAAC,EAFApgD,EAAA6X,EAAA7X,OAAA0lF,GAAA,EACAF,EAAA3tE,EAAA2tE,SAmCA,MAhCA,MAAAP,GACAyB,EAAA,IACAC,EAAA,IACAC,EAAA,IACAzmC,EAAA,EACAC,EAAApgD,EAAAogD,QAGAsmC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAzmC,EAAAngD,EAAAmgD,MACAC,EAAA,GAGAqmC,EAAAzmF,EAAAmmF,0BAAAhmC,EAAAC,IACAymC,EAAA,EAAA18E,KAAA06B,IAAAyhD,GAAAG,EAAAxB,KACA,EACA/1D,EAAA,GAGAA,EAAAs2D,EAAAr7E,KAAA28E,KAAAD,EAAA7mF,EAAA,QAAA4mF,IACAH,EAAAC,GAAA1mF,EAAA,QAAA2mF,KACAz3D,EAAA+jB,EAAAlkB,KAAAyrB,iBAAAtrB,IAEAw2D,EAAA1lF,EAAA,OAAA4mF,KAAA13D,EACAlvB,EAAA8Y,IAAA,OAAA8tE,EAAA13D,GACA,IAAAlvB,EAAA,OAAA2mF,KACAH,EAAAxmF,EAAAmmF,4BACAj3D,EAAAq3D,EAAAG,GAAAF,EAAAE,GAAA1mF,EAAA,QAAA2mF,GACA3mF,EAAA8Y,IAAA,QAAA6tE,EAAAz3D,IAEAw2D,GAYAqB,aAAA,SAAA5iD,EAAAC,EAAA6gD,GACA,IAAA7pC,EAAAv6C,KAAA4gF,kBACAzhF,EAAAo7C,EAAAp7C,OACAgnF,EAAAhnF,EAAAgnF,aACAC,EAAAjnF,EAAAinF,aACAC,EAAAlnF,EAAAknF,gBAEA,GAAAF,GAAAC,EACA,OAAA,EAIA,IAAAnB,EAAA9lF,EAAAomF,uBAAApmF,EAAAs1E,iBAAAl6B,EAAAiiC,QAAAjiC,EAAAkiC,SACAgJ,EAAAtmF,EAAAgmF,aAAA,IAAA/yC,EAAA6H,MAAA3W,EAAAC,GAAAgX,EAAAiiC,QAAAjiC,EAAAkiC,SACA4I,EAAAlmF,EAAAmmF,4BAAAgB,GAAA,EASA,OAPAtmF,KAAAumF,eAAAd,EAAAlrC,GAGA+rC,EAAAtmF,KAAAwmF,gBAAAf,EAAAlrC,EAAA4rC,EAAAC,EAAAhC,EAAAiC,EAAAhB,GAGAlmF,EAAAm8D,oBAAA2pB,EAAA1qC,EAAAiiC,QAAAjiC,EAAAkiC,SACA6J,GAOAE,gBAAA,SAAAf,EAAAzuE,EAAAmvE,EAAAC,EAAAhC,EAAAiC,EAAAX,GACA,IAAAvmF,EAAA6X,EAAA7X,OAAAsnF,GAAA,EAAAC,GAAA,EAAAJ,GAAA,EACAlnC,EAAAqmC,EAAAniD,EAAAnkC,EAAAigD,OAAAsmC,EAAApiD,EACA+b,EAAAomC,EAAAliD,EAAApkC,EAAAkgD,OAAAqmC,EAAAniD,EACAojD,EAAAxnF,EAAAigD,SAAAA,EACAwnC,EAAAznF,EAAAkgD,SAAAA,EAIA,GAFAroC,EAAA6vE,UAAAznC,EACApoC,EAAA8vE,UAAAznC,EACAjN,EAAA20C,SAAA,MAAA3C,GAAAjlF,aAAAizC,EAAA20C,QAAA,CACA,IAAA/yE,EAAA7U,EAAA2hC,OAAA2kD,EAAAniD,EAAAoiD,EAAApiD,GACA,OAAAtvB,GAAA7U,EAAA6nF,gBACAV,EAAAtyE,IAAA7U,EAAA2hC,MACA3hC,EAAA8Y,IAAA,QAAAjE,GACAsyE,GA6BA,OAxBAD,GAAAjnC,GAAA,GAAAA,EAAAjgD,EAAAigD,SACAqnC,GAAA,EACAhB,EAAAniD,EAAA,GAGA+iD,GAAAhnC,GAAA,GAAAA,EAAAlgD,EAAAkgD,SACAqnC,GAAA,EACAjB,EAAAliD,EAAA,GAGA,YAAA6gD,GAAA+B,GAAAC,EAGAhC,EAIA,MAAAA,GAAAjlF,EAAA8J,IAAA,kBAGA,MAAAm7E,GAAAjlF,EAAA8J,IAAA,mBACAy9E,GAAAN,GAAAjnF,EAAA8Y,IAAA,SAAAonC,KAAAinC,EAAAM,GAHAH,GAAAN,GAAAhnF,EAAA8Y,IAAA,SAAAmnC,KAAAknC,EAAAK,IAJAF,GAAAN,GAAAhnF,EAAA8Y,IAAA,SAAAmnC,KAAAknC,EAAAA,GAAAK,GACAD,GAAAN,GAAAjnF,EAAA8Y,IAAA,SAAAonC,KAAAinC,EAAAA,GAAAM,IAJAN,EAAAtmF,KAAAinF,oBAAAxB,EAAAtmF,EAAA6X,EAAA0uE,GAYAe,GAAAC,GAAA1mF,KAAAknF,YAAAlwE,EAAAotE,GACAkC,GAOAW,oBAAA,SAAAxB,EAAAtmF,EAAA6X,EAAA0uE,GAEA,IAGAY,EACAO,EAAAC,EAJAK,EAAA1B,EAAAliD,EAAAkiD,EAAAniD,EACA8jD,EAAA1B,EAAAniD,EAAAvsB,EAAAwZ,SAAA6uB,OAAAlgD,EAAAkgD,OACAqmC,EAAApiD,EAAAtsB,EAAAwZ,SAAA4uB,OAAAjgD,EAAAigD,OACAioC,EAAA5B,EAAAniD,EAAA,GAAA,EAAA,EACAgkD,EAAA7B,EAAAliD,EAAA,GAAA,EAAA,EASA,OALAsjD,EAAAQ,EAAA/9E,KAAA06B,IAAAhtB,EAAAwZ,SAAA4uB,OAAA+nC,EAAAC,GACAN,EAAAQ,EAAAh+E,KAAA06B,IAAAhtB,EAAAwZ,SAAA6uB,OAAA8nC,EAAAC,GACAd,EAAAO,IAAA1nF,EAAAigD,QAAA0nC,IAAA3nF,EAAAkgD,OACAlgD,EAAA8Y,IAAA,SAAA4uE,GACA1nF,EAAA8Y,IAAA,SAAA6uE,GACAR,GAMAY,YAAA,SAAAlwE,EAAAotE,GACAptE,EAAA6vE,UAAA,GAAA,MAAAzC,IACA,SAAAptE,EAAAwlE,QACAxlE,EAAAwlE,QAAA,QAEA,UAAAxlE,EAAAwlE,UACAxlE,EAAAwlE,QAAA,SAIAxlE,EAAA8vE,UAAA,GAAA,MAAA1C,IACA,QAAAptE,EAAAylE,QACAzlE,EAAAylE,QAAA,SAEA,WAAAzlE,EAAAylE,UACAzlE,EAAAylE,QAAA,SAQA8J,eAAA,SAAAd,EAAAlrC,GACA,IAAAp7C,EAAAo7C,EAAAp7C,OAAAg8B,EAAAn7B,KAAAsxE,UACAiW,EAAApoF,EAAAooF,QAAApsD,EAEA,UAAAof,EAAAiiC,QACAiJ,EAAAniD,IAAA,EAEA,WAAAiX,EAAAiiC,UACAiJ,EAAAniD,GAAA,EAAAiX,EAAAqnC,WACA6D,EAAAniD,EAAA,IACAiX,EAAAqnC,YAAArnC,EAAAqnC,aAIA,WAAArnC,EAAAkiC,QACAgJ,EAAAliD,IAAA,EAEA,WAAAgX,EAAAkiC,UACAgJ,EAAAliD,GAAA,EAAAgX,EAAAsnC,WACA4D,EAAAliD,EAAA,IACAgX,EAAAsnC,YAAAtnC,EAAAsnC,aAKA79C,EAAAyhD,EAAAniD,GAAAikD,EACA9B,EAAAniD,EAAA,EACAmiD,EAAAniD,GAAAikD,EAGA9B,EAAAniD,GAAAikD,EAIA9B,EAAAniD,EAAA,EAGAU,EAAAyhD,EAAAliD,GAAAgkD,EACA9B,EAAAliD,EAAA,EACAkiD,EAAAliD,GAAAgkD,EAGA9B,EAAAliD,GAAAgkD,EAIA9B,EAAAliD,EAAA,GAWAikD,cAAA,SAAAlkD,EAAAC,GAEA,IAAAgX,EAAAv6C,KAAA4gF,kBACAzhF,EAAAo7C,EAAAp7C,OACA8lF,EAAA9lF,EAAAomF,uBAAApmF,EAAAs1E,iBAAAl6B,EAAAiiC,QAAAjiC,EAAAkiC,SAEA,GAAAt9E,EAAAsoF,aACA,OAAA,EAGA,IAAAC,EAAAh2C,EAAA6I,EAAAkpC,GAAAwB,EAAA1hD,EAAAgX,EAAAvJ,GAAAi0C,EAAA3hD,GACAqkD,EAAAj2C,EAAAnO,EAAA0hD,EAAA1hD,EAAAD,EAAA2hD,EAAA3hD,GACA8V,EAAAO,EAAAguC,EAAAD,EAAAntC,EAAAoF,OACAioC,GAAA,EAEA,GAAAzoF,EAAAihF,UAAA,EAAA,CACA,IAAAA,EAAAjhF,EAAAihF,UACAC,EAAAlhF,EAAAkhF,eAAAD,EACAyH,EAAAv+E,KAAAk6C,KAAApK,EAAAgnC,GAAAA,EACA0H,EAAAx+E,KAAAmwC,MAAAL,EAAAgnC,GAAAA,EAEA92E,KAAA06B,IAAAoV,EAAA0uC,GAAAzH,EACAjnC,EAAA0uC,EAEAx+E,KAAA06B,IAAAoV,EAAAyuC,GAAAxH,IACAjnC,EAAAyuC,GAoBA,OAfAzuC,EAAA,IACAA,EAAA,IAAAA,GAEAA,GAAA,IAEAj6C,EAAAi6C,QAAAA,EACAwuC,GAAA,GAIAzoF,EAAAi6C,MAAAA,EAEAj6C,EAAAm8D,oBAAA2pB,EAAA1qC,EAAAiiC,QAAAjiC,EAAAkiC,UAGAmL,GAQAG,UAAA,SAAAttF,GACAuF,KAAA2vE,cAAAhzD,MAAAqrE,OAAAvtF,GAOA+mF,eAAA,SAAA/wE,GACA,IAAAw3E,EAAAjoF,KAAA6gF,eACApoD,EAAAwvD,EAAAxvD,KACAuG,EAAAipD,EAAAjpD,IACAkpD,EAAAlkD,EAAAvL,GACA0vD,EAAAnkD,EAAAhF,GAaA,GAXAh/B,KAAAm/E,iBACA1uE,EAAA4jE,UAAAr0E,KAAAm/E,eAEA1uE,EAAAqtE,SACAmK,EAAAj3C,IAAAvY,EAAA,EAAA,GAAAA,GACAwvD,EAAAxE,IAAAzkD,EAAA,EAAA,GAAAA,GACAkpD,EACAC,IAIAnoF,KAAAs/E,oBAAAt/E,KAAAq/E,qBAOA,GAJA5uE,EAAAuoE,UAAAh5E,KAAAs/E,mBACA7uE,EAAAsoE,YAAA/4E,KAAAq/E,qBAGAr/E,KAAAo/E,mBAAA7lF,OAAA,IAAAglF,EAAA,CAEA,IAAAj/C,EAAA2oD,EAAAj3C,GAhoCA,IAgoCAvY,EAAA,EAAA,EAAAyvD,GACAxlC,EAAAulC,EAAAxE,GAjoCA,IAioCAzkD,EAAA,EAAA,EAAAmpD,GAEA13E,EAAAquC,YAEA1M,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6uB,EAAAojB,EAAApjB,EAAA4oD,EAAAxlC,EAAA1iD,KAAAo/E,oBACAhtC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6uB,EAAAojB,EAAAylC,EAAA,EAAA7oD,EAAA4oD,EAAAxlC,EAAAylC,EAAA,EAAAnoF,KAAAo/E,oBACAhtC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6uB,EAAAojB,EAAApjB,EAAAojB,EAAAylC,EAAAnoF,KAAAo/E,oBACAhtC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6uB,EAAA4oD,EAAA,EAAAxlC,EAAApjB,EAAA4oD,EAAA,EAAAxlC,EAAAylC,EAAAnoF,KAAAo/E,oBAEA3uE,EAAA2jE,YACA3jE,EAAAmhD,cAGAxf,EAAAt2C,OAAAE,UAAAosF,aAAA9tF,KAAA0F,KAAAyQ,EAAAzQ,KAAAo/E,oBACA3uE,EAAA43E,WACAJ,EAAAj3C,GAhpCA,IAgpCAvY,EAAA,EAAA,EAAAyvD,GACAD,EAAAxE,GAjpCA,IAipCAzkD,EAAA,EAAA,EAAAmpD,GACAD,EACAC,IAcAG,WAAA,SAAAh7E,EAAAi7E,GACA,IAAAvoF,KAAAigF,eAAA,CAIA,IAIAuI,EAAAC,EAHApO,EAAAr6E,KAAAioD,WAAA36C,GADA,GAEAmkE,EAAAzxE,KAAA0xE,cACAgX,EAAA1oF,KAAAqhF,mBAQA,GAFArhF,KAAAygF,WAEAiI,EAAAnvF,OAAA,IAAAgvF,GAAA9W,IAAAzxE,KAAA2oF,wBAAAlX,GAAA4I,GACA,OAAA5I,EAGA,GAAA,IAAAiX,EAAAnvF,QAAAk4E,EAAAwQ,kBAAA5H,GACA,OAAA5I,EAEA,GAAA,IAAAiX,EAAAnvF,QACAk4E,IAAAzxE,KAAA2oF,wBAAAlX,GAAA4I,GAAA,CACA,IAAAr6E,KAAAmgF,uBACA,OAAA1O,EAGA+W,EAAA/W,EACAgX,EAAAzoF,KAAAygF,QACAzgF,KAAAygF,WAGA,IAAAthF,EAAAa,KAAA2oF,uBAAA3oF,KAAAu3C,SAAA8iC,GAKA,OAJA/sE,EAAAtN,KAAAk/E,kBAAA//E,GAAAqpF,GAAArpF,IAAAqpF,IACArpF,EAAAqpF,EACAxoF,KAAAygF,QAAAgI,GAEAtpF,IAWAypF,aAAA,SAAAvO,EAAAvgF,EAAA+uF,GACA,GAAA/uF,GACAA,EAAAmoB,SACAnoB,EAAAwgC,SACAt6B,KAAA8hF,cAAA,KAAAhoF,EAAAugF,GAAA,CACA,IAAAr6E,KAAA+/E,qBAAAjmF,EAAAimF,oBAAAjmF,EAAAgvF,UAOA,OAAA,EANA,IAAAvoC,EAAAvgD,KAAAqiF,oBAAAvoF,EAAA+uF,EAAAvlD,EAAAulD,EAAAtlD,GACA,IAAAgd,EACA,OAAA,IAgBAooC,uBAAA,SAAA/lF,EAAAy3E,GAKA,IAHA,IAAAl7E,EAAA4pF,EAAAtvF,EAAAmJ,EAAArJ,OAGAE,KAAA,CACA,IAAAuvF,EAAApmF,EAAAnJ,GACAwvF,EAAAD,EAAArX,OAAA,oBAAAqX,EAAArX,MAAAz3E,KACA8F,KAAAgiF,kBAAAgH,EAAArX,MAAA0I,GAAAA,EACA,GAAAr6E,KAAA4oF,aAAAK,EAAAD,EAAA3O,GAAA,EACAl7E,EAAAyD,EAAAnJ,IACAyvF,gBAAA/pF,aAAAizC,EAAAgL,QACA2rC,EAAA/oF,KAAA2oF,uBAAAxpF,EAAAo4C,SAAA8iC,KACAr6E,KAAAygF,QAAAzhF,KAAA+pF,GAEA,OAGA,OAAA5pF,GAQAijF,kBAAA,SAAA/H,GACA,OAAAjoC,EAAAlkB,KAAAosB,eACA+/B,EACAjoC,EAAAlkB,KAAA+sB,gBAAAj7C,KAAAquE,qBAsBApmB,WAAA,SAAA36C,EAAA67E,GAEA,GAAAnpF,KAAAopF,mBAAAD,EACA,OAAAnpF,KAAAopF,iBAEA,GAAAppF,KAAAqpF,UAAAF,EACA,OAAAnpF,KAAAqpF,SAGA,IAKAC,EALAjP,EAAApyB,EAAA36C,GACAqiE,EAAA3vE,KAAA2vE,cACAnqB,EAAAmqB,EAAAtvC,wBACAkpD,EAAA/jC,EAAA1kB,OAAA,EACA0oD,EAAAhkC,EAAAzkB,QAAA,EAGAwoD,GAAAC,IACA,QAAAhkC,GAAA,WAAAA,IACAgkC,EAAAlgF,KAAA06B,IAAAwhB,EAAAxmB,IAAAwmB,EAAA3lB,SAEA,UAAA2lB,GAAA,SAAAA,IACA+jC,EAAAjgF,KAAA06B,IAAAwhB,EAAA3sB,MAAA2sB,EAAA/sB,QAIAz4B,KAAAovE,aACAiL,EAAA/2C,EAAA+2C,EAAA/2C,EAAAtjC,KAAA6vE,QAAAp3C,KACA4hD,EAAA92C,EAAA82C,EAAA92C,EAAAvjC,KAAA6vE,QAAA7wC,IACAmqD,IACA9O,EAAAr6E,KAAAoiF,kBAAA/H,IAGA,IAAAoP,EAAAzpF,KAAAsvE,mBAiBA,OAhBA,IAAAma,IACApP,EAAA/2C,GAAAmmD,EACApP,EAAA92C,GAAAkmD,GAKAH,EAFA,IAAAC,GAAA,IAAAC,GAEA1oD,MAAA,EAAAC,OAAA,IAIAD,MAAA6uC,EAAA7uC,MAAAyoD,EACAxoD,OAAA4uC,EAAA5uC,OAAAyoD,IAKAlmD,EAAA+2C,EAAA/2C,EAAAgmD,EAAAxoD,MACAyC,EAAA82C,EAAA92C,EAAA+lD,EAAAvoD,SAQAggD,mBAAA,WACA,IAAA2I,EAAA1pF,KAAAyvE,cAAAnvE,UAAAxC,QAAA,qBAAA,IACA2xE,EAAAzvE,KAAAyvE,cAAAE,EAAA3vE,KAAA2vE,cAGAA,EACAA,EAAArvE,UAAA,IAGAqvE,EAAA3vE,KAAAowE,uBACApwE,KAAA2vE,cAAAA,GAEAv9B,EAAAlkB,KAAA6N,SAAA4zC,EAAA,gBAAA+Z,GAEA1pF,KAAAqxE,UAAAvyD,YAAA6wD,GAEA3vE,KAAA2pF,iBAAAla,EAAAE,GACA3vE,KAAAqwE,kBAAAV,GACA3vE,KAAA4vE,WAAAD,EAAAp8B,WAAA,OAMAkrC,mBAAA,WACAz+E,KAAAoxE,cAAApxE,KAAAowE,uBACApwE,KAAAoxE,cAAAnyD,aAAA,QAAAjf,KAAA8gC,OACA9gC,KAAAoxE,cAAAnyD,aAAA,SAAAjf,KAAA+gC,QACA/gC,KAAA0iF,aAAA1iF,KAAAoxE,cAAA79B,WAAA,OAMAutC,oBAAA,WACA9gF,KAAAqxE,UAAAj/B,EAAAlkB,KAAAu8B,YAAAzqD,KAAAyvE,cAAA,OACAxkD,MAAAjrB,KAAA8/E,iBAEA1tC,EAAAlkB,KAAA+6B,SAAAjpD,KAAAqxE,WACAvwC,MAAA9gC,KAAA8gC,MAAA,KACAC,OAAA/gC,KAAA+gC,OAAA,KACAze,SAAA,aAEA8vB,EAAAlkB,KAAA47B,wBAAA9pD,KAAAqxE,YAOAhB,kBAAA,SAAA9uD,GACA,IAAAuf,EAAA9gC,KAAA8gC,OAAAvf,EAAAuf,MACAC,EAAA/gC,KAAA+gC,QAAAxf,EAAAwf,OAEAqR,EAAAlkB,KAAA+6B,SAAA1nC,GACAe,SAAA,WACAwe,MAAAA,EAAA,KACAC,OAAAA,EAAA,KACAtI,KAAA,EACAuG,IAAA,EACA4qD,eAAA5pF,KAAAmuE,oBAAA,eAAA,OACA0b,mBAAA7pF,KAAAmuE,oBAAA,eAAA,SAEA5sD,EAAAuf,MAAAA,EACAvf,EAAAwf,OAAAA,EACAqR,EAAAlkB,KAAA47B,wBAAAvoC,IASAooE,iBAAA,SAAAG,EAAAC,GACAA,EAAAptE,MAAAyf,QAAA0tD,EAAAntE,MAAAyf,SAOA4tD,oBAAA,WACA,OAAAhqF,KAAA4vE,YAOAqa,oBAAA,WACA,OAAAjqF,KAAA2vE,eAOAua,gBAAA,WACA,OAAAlqF,KAAA0xE,eAOA2P,iBAAA,WACA,IAAA3hE,EAAA1f,KAAA0xE,cACA,OAAAhyD,EACA,oBAAAA,EAAAxlB,MAAAwlB,EAAA63B,SACA73B,EAAA63B,SAAAt5C,MAAA,IAGAyhB,OAUAo4B,iBAAA,SAAAh+C,GAEAA,IAAAkG,KAAA0xE,gBACA1xE,KAAAo3C,KAAA,4BAAAj4C,OAAArF,IACAkG,KAAAmqF,uBACAnqF,KAAAo3C,KAAA,qBAAAj4C,OAAArF,IACAA,EAAAs9C,KAAA,eAEAt9C,IAAAkG,KAAA0gF,iBACA1gF,KAAA0gF,eAAA,KACA1gF,KAAA2gF,oBAEA3gF,KAAAunD,UAAA,mBAAAztD,IAQAswF,qBAAA,SAAAC,EAAA/8E,GACA,IAAAg9E,GAAA,EAAA1nF,EAAA5C,KAAAqhF,mBACA3yE,KAAA67E,KAAAC,GAAAl9E,EAAAA,GACA+8E,EAAAlwF,QAAA,SAAAswF,IACA,IAAA7nF,EAAAjB,QAAA8oF,KACAH,GAAA,EACAG,EAAArzC,KAAA,aAAAozC,GACAD,EAAAvrF,KAAAyrF,MAGA7nF,EAAAzI,QAAA,SAAAe,IACA,IAAAmvF,EAAA1oF,QAAAzG,KACAovF,GAAA,EACApvF,EAAAk8C,KAAA,WAAAozC,GACA97E,EAAA1P,KAAA9D,MAGAmvF,EAAA9wF,OAAA,GAAAqJ,EAAArJ,OAAA,GACAixF,EAAAnjE,SAAA3Y,EACA87E,EAAAE,WAAAH,EAEAC,EAAAh8C,QAAA9/B,EAAA,IAAA67E,EAAA,GACAC,EAAArrF,OAAAa,KAAA0xE,cACA4Y,GAAAtqF,KAAAo3C,KAAA,oBAAAozC,IAEA5nF,EAAArJ,OAAA,GAEA,IAAAqJ,EAAArJ,SACAixF,EAAArrF,OAAAuP,EAAA,GACA1O,KAAAo3C,KAAA,kBAAAozC,IAEAA,EAAAnjE,SAAA3Y,EAEA87E,EAAArrF,OAAAa,KAAA0xE,cACA1xE,KAAAo3C,KAAA,oBAAAozC,IAEAH,EAAA9wF,OAAA,IACAixF,EAAAE,WAAAH,EACAvqF,KAAAo3C,KAAA,oBAAAozC,KAWAG,gBAAA,SAAAzvF,EAAAoS,GACA,IAAAs9E,EAAA5qF,KAAAqhF,mBAGA,OAFArhF,KAAA6qF,iBAAA3vF,EAAAoS,GACAtN,KAAAoqF,qBAAAQ,EAAAt9E,GACAtN,MASA6qF,iBAAA,SAAA3vF,EAAAoS,GACA,OAAAtN,KAAA0xE,gBAAAx2E,MAGA8E,KAAAmqF,qBAAA78E,EAAApS,MAGAA,EAAA4vF,UAAAx9E,EAAAA,MAGAtN,KAAA0xE,cAAAx2E,GACA,MAMAivF,qBAAA,SAAA78E,EAAApS,GACA,IAAApB,EAAAkG,KAAA0xE,cACA,GAAA53E,EAAA,CAEA,GAAAA,EAAAixF,YAAAz9E,EAAAA,EAAApS,OAAAA,IACA,OAAA,EAEA8E,KAAA0xE,cAAA,KAEA,OAAA,GAYAsZ,oBAAA,SAAA19E,GACA,IAAAs9E,EAAA5qF,KAAAqhF,mBAAA5P,EAAAzxE,KAAAkqF,kBAMA,OALAU,EAAArxF,QACAyG,KAAAo3C,KAAA,4BAAAj4C,OAAAsyE,EAAAnkE,EAAAA,IAEAtN,KAAAmqF,qBAAA78E,GACAtN,KAAAoqF,qBAAAQ,EAAAt9E,GACAtN,MAQAk4E,QAAA,WACA,IAAA70D,EAAArjB,KAAAqxE,UAeA,OAdArxE,KAAAirF,kBACA5nE,EAAA3C,YAAA1gB,KAAA2vE,eACAtsD,EAAA3C,YAAA1gB,KAAAyvE,eACAzvE,KAAA0iF,aAAA,KACA1iF,KAAA4vE,WAAA,MACA,gBAAA,iBAAAz1E,QAAA,SAAAonB,GACA6wB,EAAAlkB,KAAAk9B,iBAAAprD,KAAAuhB,IACAvhB,KAAAuhB,QAAAzkB,GACAkP,KAAAhM,OACAqjB,EAAAxE,YACAwE,EAAAxE,WAAAsE,aAAAnjB,KAAAyvE,cAAAzvE,KAAAqxE,kBAEArxE,KAAAqxE,UACAj/B,EAAAm7B,aAAAvxE,UAAAk8E,QAAA59E,KAAA0F,MACAA,MAQAkZ,MAAA,WAIA,OAFAlZ,KAAAgrF,sBACAhrF,KAAAoyE,aAAApyE,KAAA4vE,YACA5vE,KAAAunD,UAAA,UAOA6rB,aAAA,SAAA3iE,GACA,IAAAghE,EAAAzxE,KAAA0xE,cAEAD,GACAA,EAAAoR,gBAAApyE,IAOA6kE,UAAA,SAAAtoC,EAAAjjC,EAAA6gE,GAKA,IAAAsgB,EAAAlrF,KAAAmrF,+BAAAn+C,GACA9xC,EAAA8E,KAAAunD,UAAA,YAAAva,EAAAjjC,EAAA6gE,GAGA,OADA5qE,KAAAorF,8BAAAp+C,EAAAk+C,GACAhwF,GASAiwF,+BAAA,SAAAn+C,GACA,GAAAA,EAAA2kC,OAAA,oBAAA3kC,EAAA2kC,MAAAz3E,MAAA8F,KAAA0xE,gBAAA1kC,EAAA2kC,MAAA,CACA,IAEA0Z,KAKA,OAPA,QAAA,QAAA,QAAA,OAAA,SAAA,SAAA,QAAA,QAAA,OAGAlxF,QAAA,SAAAuI,GACA2oF,EAAA3oF,GAAAsqC,EAAAtqC,KAEA1C,KAAA0xE,cAAA4Z,iBAAAt+C,GACAq+C,EAGA,OAAA,MAUAD,8BAAA,SAAAp+C,EAAAq+C,GACAA,GACAr+C,EAAA/0B,IAAAozE,IAOArU,cAAA,SAAAlM,EAAA99B,EAAAuP,GAGA,IAAA2uC,EAAAlrF,KAAAmrF,+BAAAn+C,GACAhtC,KAAAunD,UAAA,gBAAAujB,EAAA99B,EAAAuP,GACAv8C,KAAAorF,8BAAAp+C,EAAAk+C,IAGA3Z,qBAAA,SAAAC,GACAxxE,KAAAy3C,mBAAAz3C,KAAA0xE,eAAA1xE,KAAA0xE,cAAAoX,WACA9oF,KAAA0xE,cAAA6Z,kBAEAn5C,EAAAm7B,aAAAvxE,UAAAu1E,qBAAAj3E,KAAA0F,KAAAwxE,MAMAp/B,EAAAm7B,aACA,cAAA7qE,IACA0vC,EAAAW,OAAArwC,GAAA0vC,EAAAm7B,aAAA7qE,IAvtDA,GA6tDA,WAEA,IAAA8oF,GACA/lC,GAAA,EACA/nC,GAAA,EACA+tE,GAAA,EACA1Y,GAAA,EACA7qC,GAAA,EACA8qC,GAAA,EACA0Y,GAAA,EACA5Y,GAAA,GAEA/qB,EAAA3V,EAAAlkB,KAAA65B,YACAC,EAAA5V,EAAAlkB,KAAA85B,eAEA2jC,GAAAC,SAAA,GAEA,SAAAC,EAAAv+E,EAAA7S,GACA,OAAA6S,EAAAgZ,QAAAhZ,EAAAgZ,SAAA7rB,EAAA,EAGA23C,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAW,OAAA/2C,WAMA8vF,WACA,WACA,YACA,WACA,YACA,WACA,YACA,WACA,aAQAC,YAAA,KAMA/K,oBAAA,WAIAhhF,KAAAirF,kBACAjrF,KAAAgsF,cACAhsF,KAAAisF,YAAAlkC,EAAA,QAOAmkC,gBAAA,WACA,OAAAlsF,KAAAmsF,oBAAA,UAAA,SAGAF,YAAA,SAAAG,EAAAC,GACA,IAAAC,EAAAtsF,KAAA2vE,cACA4c,EAAAvsF,KAAAksF,kBACAE,EAAAh6C,EAAAp3C,OAAA,SAAAgF,KAAAwsF,WACAJ,EAAAE,EAAAC,EAAA,OAAAvsF,KAAAysF,cACAL,EAAAE,EAAAC,EAAA,OAAAvsF,KAAA0sF,aAAAf,GACAS,EAAAE,EAAAC,EAAA,MAAAvsF,KAAA2sF,aACAP,EAAAE,EAAAC,EAAA,QAAAvsF,KAAA4sF,eACAR,EAAAE,EAAA,QAAAtsF,KAAA6sF,eACAT,EAAAE,EAAA,cAAAtsF,KAAA8sF,gBACAV,EAAAE,EAAA,WAAAtsF,KAAA+sF,gBACAX,EAAAE,EAAA,WAAAtsF,KAAAgtF,aACAZ,EAAAE,EAAA,YAAAtsF,KAAAitF,cACAb,EAAAE,EAAA,YAAAtsF,KAAAktF,cACAd,EAAAE,EAAA,OAAAtsF,KAAAmtF,SACAntF,KAAAmsF,qBACAC,EAAAE,EAAA,aAAAtsF,KAAAotF,cAAAzB,GAEA,oBAAA0B,SAAAhB,KAAAgB,UACAA,QAAAhB,GAAAC,EAAA,UAAAtsF,KAAAstF,YACAD,QAAAhB,GAAAC,EAAA,OAAAtsF,KAAAutF,SACAF,QAAAhB,GAAAC,EAAA,cAAAtsF,KAAAwtF,sBACAH,QAAAhB,GAAAC,EAAA,QAAAtsF,KAAAytF,UACAJ,QAAAhB,GAAAC,EAAA,YAAAtsF,KAAA0tF,gBAOAzC,gBAAA,WACAjrF,KAAAisF,YAAAjkC,EAAA,UAEA,IAAAukC,EAAAvsF,KAAAksF,kBACAlkC,EAAA5V,EAAAl+B,SAAAq4E,EAAA,KAAAvsF,KAAA2tF,YACA3lC,EAAA5V,EAAAl+B,SAAA,WAAAlU,KAAA4tF,YAAAjC,GACA3jC,EAAA5V,EAAAl+B,SAAAq4E,EAAA,OAAAvsF,KAAA0sF,aAAAf,GACA3jC,EAAA5V,EAAAl+B,SAAA,YAAAlU,KAAA0sF,aAAAf,IAMAK,YAAA,WACAhsF,KAAA6tF,cAIA7tF,KAAAysF,aAAAzsF,KAAAysF,aAAAzgF,KAAAhM,MACAA,KAAAotF,cAAAptF,KAAAotF,cAAAphF,KAAAhM,MACAA,KAAA0sF,aAAA1sF,KAAA0sF,aAAA1gF,KAAAhM,MACAA,KAAA2tF,WAAA3tF,KAAA2tF,WAAA3hF,KAAAhM,MACAA,KAAA4tF,YAAA5tF,KAAA4tF,YAAA5hF,KAAAhM,MACAA,KAAAwsF,UAAAxsF,KAAAwsF,UAAAxgF,KAAAhM,MACAA,KAAAstF,WAAAttF,KAAAstF,WAAAthF,KAAAhM,MACAA,KAAAutF,QAAAvtF,KAAAutF,QAAAvhF,KAAAhM,MACAA,KAAAytF,SAAAztF,KAAAytF,SAAAzhF,KAAAhM,MACAA,KAAA0tF,aAAA1tF,KAAA0tF,aAAA1hF,KAAAhM,MACAA,KAAAwtF,qBAAAxtF,KAAAwtF,qBAAAxhF,KAAAhM,MACAA,KAAA6sF,cAAA7sF,KAAA6sF,cAAA7gF,KAAAhM,MACAA,KAAA2sF,YAAA3sF,KAAA2sF,YAAA3gF,KAAAhM,MACAA,KAAA4sF,cAAA5sF,KAAA4sF,cAAA5gF,KAAAhM,MACAA,KAAA8sF,eAAA9sF,KAAA8sF,eAAA9gF,KAAAhM,MACAA,KAAA+sF,eAAA/sF,KAAA+sF,eAAA/gF,KAAAhM,MACAA,KAAAgtF,YAAAhtF,KAAAgtF,YAAAhhF,KAAAhM,MACAA,KAAAitF,aAAAjtF,KAAA8tF,oBAAA9hF,KAAAhM,KAAA,aACAA,KAAAktF,aAAAltF,KAAA8tF,oBAAA9hF,KAAAhM,KAAA,aACAA,KAAAmtF,QAAAntF,KAAA8tF,oBAAA9hF,KAAAhM,KAAA,QACAA,KAAA6tF,aAAA,IAQAP,WAAA,SAAAhgF,EAAAW,GACAjO,KAAA+tF,sBAAA/tF,KAAA+tF,qBAAAzgF,EAAAW,IAQAs/E,QAAA,SAAAjgF,EAAAW,GACAjO,KAAAguF,UAAAhuF,KAAAguF,SAAA1gF,EAAAW,IAOA4+E,cAAA,SAAAv/E,GACAtN,KAAAiuF,eAAA3gF,IAOAq/E,YAAA,SAAAr/E,GACA,IAAAnO,EAAAa,KAAA0gF,eACA1gF,KAAAo3C,KAAA,aAAAj4C,OAAAA,EAAAmO,EAAAA,IACAtN,KAAA0gF,eAAA,KACAvhF,GAAAA,EAAAi4C,KAAA,YAAA9pC,EAAAA,IAEA,IAAAm6C,EAAAznD,KACAA,KAAA2gF,gBAAAxmF,QAAA,SAAAq8B,GACAixB,EAAArQ,KAAA,aAAAj4C,OAAAA,EAAAmO,EAAAA,IACAkpB,GAAAr3B,EAAAi4C,KAAA,YAAA9pC,EAAAA,MAEAtN,KAAA2gF,mBAEA3gF,KAAAwyE,iBACAxyE,KAAAwyE,gBAAAr4E,QAAA,SAAAL,GACAA,EAAAgvF,WACAhvF,EAAAo0F,eAAAvnE,WAUAimE,cAAA,SAAAt/E,GAOAtN,KAAAmuF,kBAAAnuF,KAAAsoF,WAAAh7E,KACAtN,KAAAo3C,KAAA,cAAAj4C,OAAA,KAAAmO,EAAAA,IACAtN,KAAA0gF,eAAA,KACA1gF,KAAA2gF,qBASA6M,qBAAA,SAAAlgF,EAAAW,GACAjO,KAAAouF,uBAAApuF,KAAAouF,sBAAA9gF,EAAAW,IAQAw/E,SAAA,SAAAngF,EAAAW,GACAjO,KAAAquF,WAAAruF,KAAAquF,UAAA/gF,EAAAW,IAQAy/E,aAAA,SAAApgF,EAAAW,GACAjO,KAAAsuF,eAAAtuF,KAAAsuF,cAAAhhF,EAAAW,IAQA++E,YAAA,SAAA1/E,GACAA,EAAAgkB,iBACA,IAAAnyB,EAAAa,KAAA8tF,oBAAA,WAAAxgF,GACAtN,KAAAuuF,sBAAApvF,EAAAmO,IAOAw/E,eAAA,SAAAx/E,GAKA,OAJAtN,KAAAsgF,kBACAhzE,EAAAslB,kBACAtlB,EAAAgkB,mBAEA,GAOAy7D,eAAA,SAAAz/E,GACAtN,KAAAwuF,yBAAAlhF,GACAtN,KAAAyuF,aAAAnhF,EAAA,YACAtN,KAAA0uF,yBAAAphF,IASAqhF,aAAA,SAAAC,GACA,IAAAvmC,EAAAumC,EAAAvmC,eAEA,OAAAA,EACAA,EAAA,IAAAA,EAAA,GAAAz+C,WAGA5J,KAAAmsF,oBACAyC,EAAAC,WAGA,GAQAvU,aAAA,SAAAsU,GACA,OAAA,IAAAA,EAAAE,YAGA,IAAAF,EAAAE,YAGA,aAAAF,EAAA10F,MAAA,IAAA00F,EAAAG,QAAAx1F,UAGAq1F,EAAAvmC,gBACAumC,EAAAvmC,eAAA,GAAAz+C,aAAA5J,KAAA+rF,eASAqB,cAAA,SAAA9/E,GACAA,EAAAgkB,iBACA,OAAAtxB,KAAA+rF,cACA/rF,KAAA+rF,YAAA/rF,KAAA2uF,aAAArhF,IAEAtN,KAAAgvF,cAAA1hF,GACAtN,KAAA0uF,2BACA,IAAApC,EAAAtsF,KAAA2vE,cACA4c,EAAAvsF,KAAAksF,kBACAnkC,EAAA3V,EAAAl+B,SAAA,WAAAlU,KAAA4tF,YAAAjC,GACA5jC,EAAA3V,EAAAl+B,SAAA,YAAAlU,KAAA0sF,aAAAf,GAEA3jC,EAAAskC,EAAAC,EAAA,OAAAvsF,KAAAysF,eAOAA,aAAA,SAAAn/E,GACAtN,KAAAgvF,cAAA1hF,GACAtN,KAAA0uF,2BACA,IAAApC,EAAAtsF,KAAA2vE,cACA4c,EAAAvsF,KAAAksF,kBACAlkC,EAAAskC,EAAAC,EAAA,OAAAvsF,KAAA0sF,aAAAf,GACA5jC,EAAA3V,EAAAl+B,SAAAq4E,EAAA,KAAAvsF,KAAA2tF,YACA5lC,EAAA3V,EAAAl+B,SAAAq4E,EAAA,OAAAvsF,KAAA0sF,aAAAf,IAOAiC,YAAA,SAAAtgF,GACA,KAAAA,EAAAyhF,QAAAx1F,OAAA,GAAA,CAIAyG,KAAAivF,YAAA3hF,GACAtN,KAAA0uF,2BACA1uF,KAAA+rF,YAAA,KACA,IAAAQ,EAAAvsF,KAAAksF,kBACAlkC,EAAA5V,EAAAl+B,SAAA,WAAAlU,KAAA4tF,YAAAjC,GACA3jC,EAAA5V,EAAAl+B,SAAA,YAAAlU,KAAA0sF,aAAAf,GACA,IAAAlkC,EAAAznD,KACAA,KAAAkvF,mBACA9iF,aAAApM,KAAAkvF,mBAEAlvF,KAAAkvF,kBAAA7iF,WAAA,WAGA07C,EAAAN,EAAAkoB,cAAA4c,EAAA,OAAA9kC,EAAAglC,cACAhlC,EAAAynC,kBAAA,GACA,OAOAvB,WAAA,SAAArgF,GACAtN,KAAAivF,YAAA3hF,GACAtN,KAAA0uF,2BACA,IAAApC,EAAAtsF,KAAA2vE,cACA4c,EAAAvsF,KAAAksF,kBACAlsF,KAAAs6E,aAAAhtE,KACA06C,EAAA5V,EAAAl+B,SAAAq4E,EAAA,KAAAvsF,KAAA2tF,YACA3lC,EAAA5V,EAAAl+B,SAAAq4E,EAAA,OAAAvsF,KAAA0sF,aAAAf,GACA5jC,EAAAukC,EAAAC,EAAA,OAAAvsF,KAAA0sF,aAAAf,KAQAe,aAAA,SAAAp/E,IACAtN,KAAAmuE,qBAAA7gE,EAAAgkB,gBAAAhkB,EAAAgkB,iBACAtxB,KAAAmvF,cAAA7hF,IAMAk/E,UAAA,WACAxsF,KAAAovE,cAQAggB,cAAA,SAAAjwF,GACA,IAAAsyE,EAAAzxE,KAAA0xE,cAEA,WACAD,KAAAtyE,GACAsyE,GAAAtyE,GAAAsyE,IAAAtyE,KAMAsyE,GAAAA,EAAAqX,WAGA,IAYAmG,YAAA,SAAA3hF,GACA,IAAAnO,EAAA6X,EAAAhX,KAAA4gF,kBACAqH,EAAAjoF,KAAA6gF,eAAAwO,GAAA,EACAC,GAAArH,GAAA,IAAAA,EAAAxvD,MAAA,IAAAwvD,EAAAjpD,IAMA,GALAh/B,KAAAwuF,yBAAAlhF,GACAnO,EAAAa,KAAAw2B,QACAx2B,KAAAyuF,aAAAnhF,EAAA,cAGAu+E,EAAAv+E,EA1aA,GAibA,OAAAu+E,EAAAv+E,EAjbA,IAkbAtN,KAAAwgF,iBACAxgF,KAAAyuF,aAAAnhF,EAAA,KAnbA,EAmbAgiF,QAEAtvF,KAAA0uF,iCAIA1uF,KAAAkgF,eAAAlgF,KAAAixE,oBACAjxE,KAAAuvF,wBAAAjiF,GAIAtN,KAAAs6E,aAAAhtE,KAGA0J,IACAhX,KAAAwvF,0BAAAliF,GACA+hF,EAAAr4E,EAAAy4E,iBAGAH,IACAtvF,KAAA0vF,mBAAApiF,GACA+hF,IAAAA,EAAArvF,KAAAovF,cAAAjwF,KAEAA,IACAA,EAAAwwF,UAAA,GAEA3vF,KAAA4vF,oBAAAtiF,EAAAnO,GACAa,KAAAyuF,aAAAnhF,EAAA,KA9cA,EA8cAgiF,GACAtvF,KAAA6gF,eAAA,KACA7gF,KAAA4gF,kBAAA,KAEAzhF,IAAAA,EAAA0wF,SAAA,GACAR,EACArvF,KAAA03C,mBAEA43C,GACAtvF,KAAAyhF,cA5CAzhF,KAAAugF,gBACAvgF,KAAAyuF,aAAAnhF,EAAA,KA5aA,EA4aAgiF,IAsDAxB,oBAAA,SAAA78D,EAAA3jB,GACA,IAAAnO,EAAAa,KAAAsoF,WAAAh7E,GACAmzE,EAAAzgF,KAAAygF,QACAv7E,GACAoI,EAAAA,EACAnO,OAAAA,EACA2wF,WAAArP,GAIA,GAFAzgF,KAAAo3C,KAAAnmB,EAAA/rB,GACA/F,GAAAA,EAAAi4C,KAAAnmB,EAAA/rB,IACAu7E,EACA,OAAAthF,EAEA,IAAA,IAAA1F,EAAA,EAAAA,EAAAgnF,EAAAlnF,OAAAE,IACAgnF,EAAAhnF,GAAA29C,KAAAnmB,EAAA/rB,GAEA,OAAA/F,GAYAsvF,aAAA,SAAAnhF,EAAA2jB,EAAA3K,EAAAgpE,GACA,IAAAnwF,EAAAa,KAAAw2B,QACAiqD,EAAAzgF,KAAAygF,YACAv7E,GACAoI,EAAAA,EACAnO,OAAAA,EACA2wF,WAAArP,EACAn6D,OAAAA,GArgBA,EAsgBAgpE,QAAAA,IAAA,EACAjV,QAAAr6E,KAAAqpF,SACA0G,gBAAA/vF,KAAAopF,iBACApyE,UAAAhX,KAAA4gF,mBAEA5gF,KAAAo3C,KAAA,SAAAnmB,EAAA/rB,GACA/F,GAAAA,EAAAi4C,KAAA,QAAAnmB,EAAA/rB,GACA,IAAA,IAAAzL,EAAA,EAAAA,EAAAgnF,EAAAlnF,OAAAE,IACAgnF,EAAAhnF,GAAA29C,KAAA,QAAAnmB,EAAA/rB,IAQAsqF,0BAAA,SAAAliF,GAEA,IAEA0E,EAFAgF,EAAAhX,KAAA4gF,kBACAzhF,EAAA6X,EAAA7X,OAEA+F,GACAoI,EAAAA,EACAnO,OAAAA,EACA6X,UAAAA,GAGA7X,EAAA6wF,WACA7wF,EAAA6wF,UAAA,GAGA7wF,EAAAyyE,aAEA56D,EAAAy4E,iBAAAzvF,KAAAiuE,UAAA9uE,EAAA8wF,qBACAj5E,EAAAy4E,kBACAz9E,EAAAhS,KAAAkwF,iBAAAhrF,EAAA8R,GACAhX,KAAAmwF,MAAAn+E,EAAA9M,IAEAlF,KAAAmwF,MAAA,WAAAjrF,KAUAgrF,iBAAA,SAAAhrF,EAAA8R,GAGA,IAAAhF,EAAAoyE,EACA,OAAAptE,EAAAsb,QACA,IAAA,SACAtgB,EAAA,SACAoyE,EAAA,IACA,MACA,IAAA,SACApyE,EAAA,SACAoyE,EAAA,IACA,MACA,IAAA,QACApyE,EAAA,SACAoyE,EAAA,IACA,MACA,IAAA,QACApyE,EAAA,SACAoyE,EAAA,IACA,MACA,IAAA,QACApyE,EAAA,SACAoyE,EAAA,UACA,MACA,IAAA,SACApyE,EAAA,UACA,MACA,IAAA,OACAA,EAAA,QAIA,OADA9M,EAAAk/E,GAAAA,EACApyE,GAOAo+E,0BAAA,SAAA9iF,GACAtN,KAAAixE,qBAAA,EACAjxE,KAAAkqF,mBACAlqF,KAAAgrF,oBAAA19E,GAAAoqC,mBAEA13C,KAAA44C,QACAxG,EAAAlkB,KAAA0wB,YAAA5+C,KAAAA,KAAA4vE,YAEA,IAAAyK,EAAAr6E,KAAAioD,WAAA36C,GACAtN,KAAAkxE,iBAAAkJ,YAAAC,GAAA/sE,EAAAA,EAAA+sE,QAAAA,IACAr6E,KAAAyuF,aAAAnhF,EAAA,SAOA+iF,0BAAA,SAAA/iF,GACA,GAAAtN,KAAAixE,oBAAA,CACA,IAAAoJ,EAAAr6E,KAAAioD,WAAA36C,GACAtN,KAAAkxE,iBAAAwJ,YAAAL,GAAA/sE,EAAAA,EAAA+sE,QAAAA,IAEAr6E,KAAA+nF,UAAA/nF,KAAA2/E,mBACA3/E,KAAAyuF,aAAAnhF,EAAA,SAOAiiF,wBAAA,SAAAjiF,GACAtN,KAAA44C,QACA54C,KAAA4vE,WAAAvxB,UAEA,IAAAg8B,EAAAr6E,KAAAioD,WAAA36C,GACAtN,KAAAixE,oBAAAjxE,KAAAkxE,iBAAA0J,WAAAttE,EAAAA,EAAA+sE,QAAAA,IACAr6E,KAAAyuF,aAAAnhF,EAAA,OAWA0hF,cAAA,SAAA1hF,GACAtN,KAAAwuF,yBAAAlhF,GACAtN,KAAAyuF,aAAAnhF,EAAA,eACA,IAAAnO,EAAAa,KAAAw2B,QAEA,GAAAq1D,EAAAv+E,EAlpBA,GAmpBAtN,KAAAugF,gBACAvgF,KAAAyuF,aAAAnhF,EAAA,OAppBA,QAypBA,GAAAu+E,EAAAv+E,EAzpBA,GA0pBAtN,KAAAwgF,iBACAxgF,KAAAyuF,aAAAnhF,EAAA,OA3pBA,QAgqBA,GAAAtN,KAAAkgF,cACAlgF,KAAAowF,0BAAA9iF,QAIA,GAAAtN,KAAAs6E,aAAAhtE,KAKAtN,KAAA4gF,kBAAA,CAIA,IAAAvG,EAAAr6E,KAAAqpF,SAEArpF,KAAAswF,iBAAAjW,EACA,IAAAgV,EAAArvF,KAAAovF,cAAAjwF,GACAoxF,EAAAvwF,KAAAwwF,aAAAljF,EAAAnO,GAmBA,GAlBAa,KAAAijF,sBAAA31E,EAAAnO,GACAa,KAAAgrF,oBAAA19E,GAEAijF,IACAvwF,KAAAywF,gBAAAnjF,EAAAnO,GACAA,EAAAa,KAAA0xE,gBAGA1xE,KAAAg/E,WAAA7/E,IACAA,EAAA+jF,YAAA/jF,EAAA2pF,WAAA3pF,IAAAa,KAAA0xE,iBACA1xE,KAAA6gF,gBACA7vC,GAAAqpC,EAAA/2C,EACAmgD,GAAApJ,EAAA92C,EACAvE,IAAA,EACAvG,KAAA,IAIAt5B,EAAA,CACA,IAAAokF,EAAApkF,IAAAa,KAAA0xE,cACAvyE,EAAA+jF,YACAljF,KAAA2qF,gBAAAxrF,EAAAmO,GAEAnO,IAAAa,KAAA0xE,gBAAAvyE,EAAA0wF,UAAAU,GACAvwF,KAAAwjF,uBAAAl2E,EAAAnO,EAAAokF,GAGAvjF,KAAAyuF,aAAAnhF,EAAA,SAEA+hF,GAAAkB,IAAAvwF,KAAA03C,qBAOAg3C,yBAAA,WACA1uF,KAAAw2B,QAAA,KACAx2B,KAAAqpF,SAAA,KACArpF,KAAAopF,iBAAA,MAQAoF,yBAAA,SAAAlhF,GAEAtN,KAAA0uF,2BACA1uF,KAAAqpF,SAAArpF,KAAAioD,WAAA36C,GAAA,GACAtN,KAAAopF,iBAAAppF,KAAAoiF,kBAAApiF,KAAAqpF,UACArpF,KAAAw2B,QAAAx2B,KAAA4gF,kBAAA5gF,KAAA4gF,kBAAAzhF,OAAAa,KAAAsoF,WAAAh7E,IAAA,MAMAs2E,iBAAA,SAAAt2E,GACA,IAAAitC,EAAAv6C,KAAA4gF,kBACA5gF,KAAAiuE,UAAA1zB,EAAAp7C,OAAAuxF,YACA1wF,KAAAo3C,KAAA,oBACA9pC,EAAAA,EACA0J,UAAAujC,IAGAA,EAAA8oC,QACArjF,KAAAwuE,oBAAAj0B,EAAAp7C,SAaAgwF,cAAA,SAAA7hF,GAGA,IAAAnO,EAAAk7E,EAEA,GAJAr6E,KAAAyuF,aAAAnhF,EAAA,eACAtN,KAAAwuF,yBAAAlhF,GAGAtN,KAAAkgF,cACAlgF,KAAAqwF,0BAAA/iF,QAIA,GAAAtN,KAAAs6E,aAAAhtE,GAAA,CAIA,IAAA26E,EAAAjoF,KAAA6gF,eAGAoH,GACA5N,EAAAr6E,KAAAqpF,SAEApB,EAAAxvD,KAAA4hD,EAAA/2C,EAAA2kD,EAAAj3C,GACAi3C,EAAAjpD,IAAAq7C,EAAA92C,EAAA0kD,EAAAxE,GAEAzjF,KAAAyhF,aAEAzhF,KAAA4gF,kBAMA5gF,KAAA2wF,iBAAArjF,IALAnO,EAAAa,KAAAsoF,WAAAh7E,IAAA,KACAtN,KAAA4vF,oBAAAtiF,EAAAnO,GACAa,KAAA4wF,mBAAAzxF,EAAAmO,IAKAtN,KAAAyuF,aAAAnhF,EAAA,QACAtN,KAAA0uF,6BASAkC,mBAAA,SAAAzxF,EAAAmO,GACA,IAAAozE,EAAA1gF,KAAA0gF,eACAC,EAAA3gF,KAAA2gF,gBAAAF,EAAAzgF,KAAAygF,QACAlnF,EAAA+P,KAAAwiB,IAAA60D,EAAApnF,OAAAknF,EAAAlnF,QAEAyG,KAAA6wF,yBAAA1xF,EAAAmO,GACAwjF,UAAApQ,EACAqQ,OAAA,WACAC,aAAA,YACAC,MAAA,YACAC,YAAA,eAEA,IAAA,IAAAz3F,EAAA,EAAAA,EAAAF,EAAAE,IACAuG,KAAA6wF,yBAAApQ,EAAAhnF,GAAA6T,GACAwjF,UAAAnQ,EAAAlnF,GACAs3F,OAAA,WACAE,MAAA,cAGAjxF,KAAA0gF,eAAAvhF,EACAa,KAAA2gF,gBAAA3gF,KAAAygF,QAAAz8E,UASAuqF,sBAAA,SAAApvF,EAAAmO,GACA,IAAA6jF,EAAAnxF,KAAAmxF,mBACAxQ,EAAA3gF,KAAA2gF,gBAAAF,EAAAzgF,KAAAygF,QACAlnF,EAAA+P,KAAAwiB,IAAA60D,EAAApnF,OAAAknF,EAAAlnF,QAEAyG,KAAA6wF,yBAAA1xF,EAAAmO,GACAwjF,UAAAK,EACAJ,OAAA,YACAE,MAAA,cAEA,IAAA,IAAAx3F,EAAA,EAAAA,EAAAF,EAAAE,IACAuG,KAAA6wF,yBAAApQ,EAAAhnF,GAAA6T,GACAwjF,UAAAnQ,EAAAlnF,GACAs3F,OAAA,YACAE,MAAA,cAGAjxF,KAAAmxF,mBAAAhyF,GAeA0xF,yBAAA,SAAA1xF,EAAAmO,EAAA8jF,GACA,IAAAC,EAAAC,EAAAC,EAAAT,EAAAM,EAAAN,UACAU,EAAAV,IAAA3xF,EAAA+xF,EAAAE,EAAAF,YAAAF,EAAAI,EAAAJ,aACAQ,IACAH,GAAA/jF,EAAAA,EAAAnO,OAAAA,EAAAsyF,eAAAX,GACAQ,GAAAhkF,EAAAA,EAAAnO,OAAA2xF,EAAAY,WAAAvyF,IAEAoyF,EAAApyF,GAAAqyF,EACAV,GAAAU,IAEAR,GAAAhxF,KAAAo3C,KAAA45C,EAAAM,GACAR,EAAA15C,KAAAg6C,EAAAL,OAAAO,IAEAC,IACAL,GAAAlxF,KAAAo3C,KAAA85C,EAAAG,GACAlyF,EAAAi4C,KAAAg6C,EAAAH,MAAAI,KAQApD,eAAA,SAAA3gF,GACAtN,KAAAwuF,yBAAAlhF,GACAtN,KAAAyuF,aAAAnhF,EAAA,SACAtN,KAAA0uF,4BAOAiC,iBAAA,SAAArjF,GACA,IAAA+sE,EAAAr6E,KAAAioD,WAAA36C,GACA0J,EAAAhX,KAAA4gF,kBAEA5pE,EAAAkR,OAAA,EACAlR,EAAA7X,OAAAwwF,UAAA,EACA34E,EAAA6iB,SAAAvsB,EAAAusB,SACA7iB,EAAA4iB,OAAAtsB,EAAAtN,KAAA8+E,aAEA9+E,KAAA2xF,sBAAArkF,EAAA0J,GACAhX,KAAA4xF,wBAAAtkF,EAAA0J,EAAAqjE,GAEArjE,EAAAy4E,iBAAAzvF,KAAA03C,oBAMAk6C,wBAAA,SAAAtkF,EAAA0J,EAAAqjE,GACA,IAAA/2C,EAAA+2C,EAAA/2C,EACAC,EAAA82C,EAAA92C,EACAjR,EAAAtb,EAAAsb,OACAm9D,GAAA,EACAvqF,GACA/F,OAAA6X,EAAA7X,OACAmO,EAAAA,EACA0J,UAAAA,EACAqjE,QAAAA,GAGA,WAAA/nD,GACAm9D,EAAAzvF,KAAAwnF,cAAAlkD,EAAAC,KAAAvjC,KAAAmwF,MAAA,WAAAjrF,GAEA,UAAAotB,GACAm9D,EAAAzvF,KAAA6xF,SAAAvkF,EAAA0J,EAAAssB,EAAAC,KAAAvjC,KAAAmwF,MAAA,UAAAjrF,GAEA,WAAAotB,GACAm9D,EAAAzvF,KAAAkmF,aAAA5iD,EAAAC,EAAA,OAAAvjC,KAAAmwF,MAAA,UAAAjrF,GAEA,WAAAotB,GACAm9D,EAAAzvF,KAAAkmF,aAAA5iD,EAAAC,EAAA,OAAAvjC,KAAAmwF,MAAA,UAAAjrF,GAEA,UAAAotB,GACAm9D,EAAAzvF,KAAA4kF,YAAAthD,EAAAC,EAAA,OAAAvjC,KAAAmwF,MAAA,UAAAjrF,GAEA,UAAAotB,GACAm9D,EAAAzvF,KAAA4kF,YAAAthD,EAAAC,EAAA,OAAAvjC,KAAAmwF,MAAA,UAAAjrF,IAGAuqF,EAAAzvF,KAAA6jF,iBAAAvgD,EAAAC,MAEAvjC,KAAAmwF,MAAA,SAAAjrF,GACAlF,KAAA+nF,UAAA7iF,EAAA/F,OAAAsgF,YAAAz/E,KAAAy/E,aAGAzoE,EAAAy4E,gBAAAz4E,EAAAy4E,iBAAAA,GAMAU,MAAA,SAAAn+E,EAAA9M,GACAlF,KAAAo3C,KAAA,UAAAplC,EAAA9M,GACAA,EAAA/F,OAAAi4C,KAAAplC,EAAA9M,IAMAysF,sBAAA,SAAArkF,EAAA0J,GACA,GAAA,UAAAA,EAAAsb,QAAA,WAAAtb,EAAAsb,QAAA,WAAAtb,EAAAsb,OAAA,CACA,IAAA6wD,EAAAnjF,KAAA2hF,uBAAA3qE,EAAA7X,SAGAgkF,IAAA,WAAAnsE,EAAAwlE,SAAA,WAAAxlE,EAAAylE,WAEA0G,GAAA,WAAAnsE,EAAAwlE,SAAA,WAAAxlE,EAAAylE,WAEAz8E,KAAA0hF,yBACA1qE,EAAAkR,OAAA,KAaA2pE,SAAA,SAAAvkF,EAAA0J,EAAAssB,EAAAC,GACA,OAAAvjC,KAAA8xF,oBAAAxkF,EAAA0J,EAAA7X,SACA6X,EAAA+6E,cAAA,QACA/xF,KAAAkmF,aAAA5iD,EAAAC,KAIAvsB,EAAAkR,OAAA,UAAAlR,EAAA+6E,eACA/xF,KAAA0hF,yBAGA1qE,EAAA+6E,cAAA,eACA/xF,KAAAkmF,aAAA5iD,EAAAC,EAAA,aAUAuuD,oBAAA,SAAAxkF,EAAAnO,GACA,OAAAmO,EAAAtN,KAAA2+E,cAAA3+E,KAAA0+E,qBAAAv/E,EAAA8J,IAAA,mBASA2mF,oBAAA,SAAAtiF,EAAAnO,GACA,IAAAA,EAEA,OADAa,KAAA+nF,UAAA/nF,KAAA0/E,gBACA,EAEA,IAAAF,EAAArgF,EAAAqgF,aAAAx/E,KAAAw/E,YACAlI,EAAAt3E,KAAA0xE,eAAA,oBAAA1xE,KAAA0xE,cAAAx3E,KACA8F,KAAA0xE,cAAA,KAEA2R,IAAA/L,IAAAA,EAAAh4D,SAAAngB,KACAA,EAAA8iF,kBAAAjiF,KAAAioD,WAAA36C,GAAA,IAEA+1E,EAWArjF,KAAA+nF,UAAA/nF,KAAAgyF,gBAAA3O,EAAAlkF,EAAAmO,KAVAnO,EAAA+pF,gBAGAlpF,KAAAygF,QAAAz8E,SAAAqT,UAAAhT,IAAA,SAAAmyB,GACAgpD,EAAAhpD,EAAAgpD,aAAAA,IAGAx/E,KAAA+nF,UAAAvI,KAUAwS,gBAAA,SAAA3O,EAAAlkF,EAAAmO,GACA,OAAAtN,KAAAiyF,iBAAA5O,EAAAlkF,EAAAmO,GACAtN,KAAA6/E,iBAEAwD,KAAAmI,EACAxrF,KAAAkyF,wBAAA7O,EAAAlkF,EAAAmO,GAEA,QAAA+1E,GAAAlkF,EAAAgzF,iBACAnyF,KAAA4/E,eAGA5/E,KAAA0/E,eAIAuS,iBAAA,SAAA5O,EAAAlkF,EAAAmO,GACA,MAAA,OAAA+1E,GAAA,OAAAA,EACA/1E,EAAAtN,KAAA++E,cAAA5/E,EAAA2lF,aAAA3lF,EAAAinF,aAEA,OAAA/C,GAAA,OAAAA,EACA/1E,EAAAtN,KAAA++E,cAAA5/E,EAAA4lF,aAAA5lF,EAAAgnF,aAEA,QAAA9C,EACAlkF,EAAAsoF,aAGAznF,KAAA8xF,oBAAAxkF,EAAAnO,GACAA,EAAAgnF,cAAAhnF,EAAAinF,aAAAjnF,EAAAgnF,cAAAhnF,EAAAinF,cAOA8L,wBAAA,SAAA7O,EAAAlkF,EAAAmO,GACA,IAAA9J,EAAA8F,KAAA65B,MAAAhkC,EAAAi6C,MAAA,IAAA,IAaA,OAXA51C,EAAA,IACAA,GAAA,GAEAA,GAAAgoF,EAAAnI,GACA/1E,EAAAtN,KAAA++E,eAAAyM,EAAAnI,GAAA,GAAA,IAEA7/E,GAAA,GAGAA,GAAA,EAEAxD,KAAA8rF,UAAAtoF,MApmCA,GA4mCAsuC,EAAAxoC,KAAAwoC,IACAhmB,EAAAxiB,KAAAwiB,IAEAsmB,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAW,OAAA/2C,WAQAw0F,aAAA,SAAAljF,EAAAnO,GACA,IAAAsyE,EAAAzxE,KAAA0xE,cACA,OAAAD,GAAAzxE,KAAAgjF,uBAAA11E,IAAAnO,GAAAA,EAAA+jF,YAAAljF,KAAAg/E,YACAvN,IAAAtyE,GAAA,oBAAAsyE,EAAAv3E,QAAAiF,EAAA2rF,UAAAx9E,EAAAA,KAQAmjF,gBAAA,SAAAnjF,EAAAnO,GACA,IAAAsyE,EAAAzxE,KAAA0xE,cAEAD,EAAAoe,WAGA1wF,IAAAsyE,IAEAtyE,EAAAa,KAAAsoF,WAAAh7E,GAAA,KAEAnO,EAAA+jF,cAIAzR,GAAA,oBAAAA,EAAAv3E,KACA8F,KAAAoyF,uBAAAjzF,EAAAmO,GAGAtN,KAAAqyF,uBAAAlzF,EAAAmO,KAOA8kF,uBAAA,SAAAjzF,EAAAmO,GACA,IAAAgqE,EAAAt3E,KAAA0xE,cACA4gB,EAAAhb,EAAA//B,SAAAt5C,MAAA,GACAq5E,EAAAh4D,SAAAngB,IACAm4E,EAAAib,iBAAApzF,GACAa,KAAA0gF,eAAAvhF,EACAa,KAAA2gF,gBAAA3gF,KAAAygF,QAAAz8E,SACA,IAAAszE,EAAA7oD,QAEAzuB,KAAA6qF,iBAAAvT,EAAAh1E,KAAA,GAAAgL,KAIAgqE,EAAAkb,cAAArzF,GACAa,KAAA0gF,eAAApJ,EACAt3E,KAAA2gF,gBAAA3gF,KAAAygF,QAAAz8E,UAEAhE,KAAAoqF,qBAAAkI,EAAAhlF,IAMA+kF,uBAAA,SAAAlzF,EAAAmO,GACA,IAAAs9E,EAAA5qF,KAAAqhF,mBAAA1P,EAAA3xE,KAAAyyF,aAAAtzF,GACAa,KAAA0gF,eAAA/O,EAIA3xE,KAAA6qF,iBAAAlZ,EAAArkE,GACAtN,KAAAoqF,qBAAAQ,EAAAt9E,IAOAmlF,aAAA,SAAAtzF,GACA,IAAAyD,EAAA5C,KAAAu3C,SACAm7C,EAAA9vF,EAAAjB,QAAA3B,KAAA0xE,eAAA9uE,EAAAjB,QAAAxC,GACAwzF,EAAAD,GACA1yF,KAAA0xE,cAAAvyE,IACAA,EAAAa,KAAA0xE,eAEA,OADA1xE,KAAA0xE,cAAAoX,WAAA9oF,KAAA0xE,cAAAkhB,cACA,IAAAxgD,EAAAygD,gBAAAF,GACAt/C,OAAArzC,QAQA8yF,sBAAA,SAAAxlF,GAEA,IACAylF,EADAphB,EAAA3xE,KAAAgzF,gBAAA1lF,GAIA,IAAAqkE,EAAAp4E,OACAyG,KAAA2qF,gBAAAhZ,EAAA,GAAArkE,GAEAqkE,EAAAp4E,OAAA,IACAw5F,EAAA,IAAA3gD,EAAAygD,gBAAAlhB,EAAAt6D,WACAg8B,OAAArzC,OAEAA,KAAA2qF,gBAAAoI,EAAAzlF,KAOA0lF,gBAAA,SAAA1lF,GAYA,IAXA,IACA2lF,EADAthB,KAEA5sB,EAAA/kD,KAAA6gF,eAAA7vC,GACAgU,EAAAhlD,KAAA6gF,eAAA4C,GACAhmC,EAAAsH,EAAA/kD,KAAA6gF,eAAApoD,KACAilB,EAAAsH,EAAAhlD,KAAA6gF,eAAA7hD,IACAk0D,EAAA,IAAA9gD,EAAA6H,MAAAnI,EAAAiT,EAAAtH,GAAA3L,EAAAkT,EAAAtH,IACAy1C,EAAA,IAAA/gD,EAAA6H,MAAAnuB,EAAAi5B,EAAAtH,GAAA3xB,EAAAk5B,EAAAtH,IACA01C,GAAApzF,KAAAu/E,wBACA+P,EAAAvqC,IAAAtH,GAAAuH,IAAAtH,EAEAjkD,EAAAuG,KAAAu3C,SAAAh+C,OAAAE,QACAw5F,EAAAjzF,KAAAu3C,SAAA99C,KAEAw5F,EAAA/P,YAAA+P,EAAAhxE,UAIAmxE,GAAAH,EAAAI,mBAAAH,EAAAC,IACAF,EAAAK,sBAAAJ,EAAAC,IACAC,GAAAH,EAAAnR,cAAAoR,IACAE,GAAAH,EAAAnR,cAAAqR,MAEAxhB,EAAA3yE,KAAAi0F,GAEA3D,MAYA,OANA3d,EAAAp4E,OAAA,IACAo4E,EAAAA,EAAA9uE,OAAA,SAAA3H,GACA,OAAAA,EAAA4vF,UAAAx9E,EAAAA,OAIAqkE,GAMA+d,mBAAA,SAAApiF,GACAtN,KAAAg/E,WAAAh/E,KAAA6gF,gBACA7gF,KAAA8yF,sBAAAxlF,GAEAtN,KAAA+nF,UAAA/nF,KAAA0/E,eAEA1/E,KAAA6gF,eAAA,QAQAzuC,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAm7B,aAAAvxE,WAkCAyiD,UAAA,SAAAv5C,GACAA,IAAAA,MAEA,IAAAoS,EAAApS,EAAAoS,QAAA,MACAqnC,EAAAz5C,EAAAy5C,SAAA,EACAorB,GAAA7kE,EAAA6kE,YAAA,IAAA7kE,EAAAupE,oBAAAzuE,KAAAsvE,mBAAA,GACA5wB,EAAA1+C,KAAAuzF,gBAAAxpB,EAAA7kE,GACA,OAAAktC,EAAAlkB,KAAAuwB,UAAAC,EAAApnC,EAAAqnC,IAgBA40C,gBAAA,SAAAxpB,EAAAypB,GACAzpB,EAAAA,GAAA,EAEA,IAAA0pB,IADAD,EAAAA,OACA1yD,OAAA9gC,KAAA8gC,OAAAipC,EACA2pB,GAAAF,EAAAzyD,QAAA/gC,KAAA+gC,QAAAgpC,EACA5uC,EAAAn7B,KAAAsxE,UACAqiB,EAAA3zF,KAAA8gC,MACA8yD,EAAA5zF,KAAA+gC,OACA8yD,EAAA14D,EAAA4uC,EACA+pB,EAAA9zF,KAAAquE,kBACA7uB,GAAAs0C,EAAA,IAAAN,EAAA/6D,MAAA,IAAAsxC,EACAtqB,GAAAq0C,EAAA,IAAAN,EAAAx0D,KAAA,IAAA+qC,EACAgqB,EAAA/zF,KAAA8uE,YACAklB,GAAAH,EAAA,EAAA,EAAAA,EAAAr0C,EAAAC,GACAw0C,EAAAj0F,KAAAyuE,oBACA/vB,EAAAtM,EAAAlkB,KAAAowB,sBACA41C,EAAAl0F,KAAA4vE,WAkBA,OAjBAlxB,EAAA5d,MAAA2yD,EACA/0C,EAAA3d,OAAA2yD,EACA1zF,KAAA4vE,WAAA,KACA5vE,KAAAyuE,qBAAA,EACAzuE,KAAA8uE,aAAA,EACA9uE,KAAAquE,kBAAA2lB,EACAh0F,KAAA8gC,MAAA2yD,EACAzzF,KAAA+gC,OAAA2yD,EACA1zF,KAAA6xE,yBACA7xE,KAAA2yE,aAAAj0B,EAAAnL,WAAA,MAAAvzC,KAAAu3C,UACAv3C,KAAAquE,kBAAAylB,EACA9zF,KAAA8gC,MAAA6yD,EACA3zF,KAAA+gC,OAAA6yD,EACA5zF,KAAA6xE,yBACA7xE,KAAA8uE,YAAAilB,EACA/zF,KAAAyuE,oBAAAwlB,EACAj0F,KAAA4vE,WAAAskB,EACAx1C,KAOAtM,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAm7B,aAAAvxE,WAeAm4F,qBAAA,SAAAC,EAAAnzF,EAAAs7C,GACA,OAAAv8C,KAAAq0F,aAAAD,EAAAnzF,EAAAs7C,IAwBA83C,aAAA,SAAAD,EAAAnzF,EAAAs7C,GACA,GAAA63C,EAAA,CAKA,IAAAE,EAAA,iBAAAF,EACA99E,KAAAlF,MAAAgjF,GACAhiD,EAAAlkB,KAAAhzB,OAAAwF,MAAA0zF,GAEA3sC,EAAAznD,KACAk7D,EAAAo5B,EAAAp5B,SACAzjB,EAAAz3C,KAAAy3C,kBAoBA,OAlBAz3C,KAAAy3C,mBAAA,SAEA68C,EAAAp5B,SAEAl7D,KAAAu0F,gBAAAD,EAAA1xF,QAAA,SAAA45C,GACAiL,EAAAvuC,QACAuuC,EAAA+sC,cAAAF,EAAA,WACAp5B,EACAzT,EAAA8sC,iBAAAr5B,GAAA,SAAAu5B,GACAhtC,EAAAyT,SAAAu5B,EAAA,GACAhtC,EAAAitC,cAAAp6F,KAAAmtD,EAAA6sC,EAAA93C,EAAA/E,EAAAx2C,KAIAwmD,EAAAitC,cAAAp6F,KAAAmtD,EAAA6sC,EAAA93C,EAAA/E,EAAAx2C,MAGAs7C,GACAv8C,OAUA00F,cAAA,SAAAJ,EAAA93C,EAAA/E,EAAAx2C,GACA,IAAAwmD,EAAAznD,KACAw8C,EAAAriD,QAAA,SAAAL,EAAAgH,GAGA2mD,EAAA9P,SAAA79C,EAAAgH,KAEAd,KAAAy3C,kBAAAA,SAEA68C,EAAA1xF,eACA0xF,EAAAxmB,uBACAwmB,EAAAtmB,oBACAsmB,EAAA3e,kBACA2e,EAAAxoD,QAKA9rC,KAAAktC,YAAAonD,GACAt0F,KAAAyyE,YACAxxE,GAAAA,KAQAuzF,cAAA,SAAAF,EAAArzF,GACA,IAAA0zF,GACA9mB,iBAAA,EACAE,cAAA,EACAD,iBAAA,EACAE,cAAA,GAGA,GAAAsmB,EAAAxmB,iBAAAwmB,EAAAtmB,cAAAsmB,EAAA3e,YAAA2e,EAAAxoD,QAAA,CAKA,IAAA8oD,EAAA,WACAD,EAAA7mB,iBAAA6mB,EAAA3mB,cAAA2mB,EAAA9mB,iBAAA8mB,EAAA5mB,cACA9sE,GAAAA,KAIAjB,KAAA60F,eAAA,kBAAAP,EAAAxmB,gBAAA6mB,EAAAC,GACA50F,KAAA60F,eAAA,eAAAP,EAAAtmB,aAAA2mB,EAAAC,GACA50F,KAAA60F,eAAA,kBAAAP,EAAA3e,WAAAgf,EAAAC,GACA50F,KAAA60F,eAAA,eAAAP,EAAAxoD,QAAA6oD,EAAAC,QAbA3zF,GAAAA,KAuBA4zF,eAAA,SAAA3nE,EAAAzyB,EAAAk6F,EAAA1zF,GACA,IAAAwmD,EAAAznD,KAEA,IAAAvF,EAGA,OAFAk6F,EAAAznE,IAAA,OACAjsB,GAAAA,KAIA,oBAAAisB,GAAA,iBAAAA,EACAklB,EAAAlkB,KAAAouB,gBAAA7hD,GAAA,SAAAq6F,GACArtC,EAAAv6B,GAAA4nE,EAAA,GACAH,EAAAznE,IAAA,EACAjsB,GAAAA,MAIAjB,KAAA,MAAAoyC,EAAAlkB,KAAAzY,OAAAmxC,WAAA15B,GAAA,IAAAzyB,EAAA,WACAk6F,EAAAznE,IAAA,EACAjsB,GAAAA,OAWAszF,gBAAA,SAAA3xF,EAAA3B,EAAAs7C,GACA35C,GAAA,IAAAA,EAAArJ,OAKA64C,EAAAlkB,KAAAouB,eAAA15C,EAAA,SAAA45C,GACAv7C,GAAAA,EAAAu7C,IACA,KAAAD,GANAt7C,GAAAA,OAcA8zF,WAAA,SAAAz9E,EAAArW,GACAjB,KAAAU,MAAA,SAAAA,GACAO,EAAAP,EAAA+9C,UAAAnnC,OAUA09E,yBAAA,SAAA19E,EAAAyyD,EAAA9oE,GACAjB,KAAAU,MAAA,SAAAA,GACAO,EAAAP,EAAAu0F,wBAAA39E,EAAAyyD,OASArpE,MAAA,SAAAO,EAAA6nC,GACA,IAAA3/B,EAAAmN,KAAAQ,UAAA9W,KAAAqY,OAAAywB,IACA9oC,KAAAk1F,iBAAA,SAAAx0F,GACAA,EAAA2zF,aAAAlrF,EAAA,WACAlI,GAAAA,EAAAP,QAWAw0F,iBAAA,SAAAj0F,GACA,IAAA2e,EAAAwyB,EAAAlkB,KAAAowB,sBAEA1+B,EAAAkhB,MAAA9gC,KAAA8gC,MACAlhB,EAAAmhB,OAAA/gC,KAAA+gC,OAEA,IAAArgC,EAAA,IAAA0xC,EAAAW,OAAAnzB,GACAlf,EAAAk4C,OAAA54C,KAAA44C,OACA54C,KAAA8tE,iBACAptE,EAAAuuE,mBAAAjvE,KAAA8tE,gBAAAntE,IAAA,WACAD,EAAA+xE,YACAxxE,GAAAA,EAAAP,KAEAA,EAAAy0F,uBAAAn1F,KAAAm1F,uBACAz0F,EAAA00F,uBAAAp1F,KAAAo1F,wBAGAn0F,GAAAA,EAAAP,MAMA,SAAA+S,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAjxC,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OACAT,EAAA0xC,EAAAlkB,KAAAhzB,OAAAwF,MACAwxC,EAAAE,EAAAlkB,KAAAgkB,QACA0U,EAAAxU,EAAAlkB,KAAAzY,OAAAmxC,WACA7U,EAAAK,EAAAlkB,KAAA6jB,iBACAsjD,EAAAjjD,EAAAm7B,aAAA8K,SAAA,eACAid,GAAAljD,EAAA0C,aAGA1C,EAAAt2C,SAuCAs2C,EAAAt2C,OAAAs2C,EAAAlkB,KAAAvpB,YAAAytC,EAAAgG,eASAl+C,KAAA,SAQAsiF,QAAA,OAQAC,QAAA,MAOAz9C,IAAA,EAOAvG,KAAA,EAOAqI,MAAA,EAOAC,OAAA,EAOAqe,OAAA,EAOAC,OAAA,EAOAS,OAAA,EAOAC,OAAA,EAOA9kB,QAAA,EAOAme,MAAA,EAOAkG,MAAA,EAOAC,MAAA,EAOAg2C,WAAA,GAOAxS,oBAAA,EAOAvD,YAAA,KAOAC,WAAA,KAOA8H,QAAA,EAOAiO,YAAA,yBAOAC,gBAAA,KAOAC,YAAA,wBAQAC,kBAAA,KAOAC,YAAA,OAOAC,gBAAA,KAUAjX,iBAAA,EAUAC,kBAAA,EAQA5nC,KAAA,aASA4jB,SAAA,UAOA8Y,yBAAA,cAQA9F,gBAAA,GAQA+U,yBAAA,GAQAhxB,OAAA,KAOA4pB,YAAA,EAMA3C,gBAAA,KAOAid,iBAAA,EAOApd,cAAA,OAOAC,eAAA,QAOAC,iBAAA,EAOA3L,OAAA,KAOA8oB,wBAAA,GAOAC,kBAAA,EAYAhkC,gBAAA,KAOAikC,cAAA,EAQA/S,YAAA,EAOA5oD,SAAA,EAOArY,SAAA,EAOAi0E,aAAA,EAOApT,YAAA,EAOAqP,kBAAA,EAOAgE,oBAAA,GAOApW,oBAAA,EAOAjT,sBAAA,EAUAl0B,OAAA,KAOAw9C,eAAA,EAOAC,eAAA,EAOA5O,cAAA,EAOAtB,cAAA,EAOAC,cAAA,EAOAkQ,gBAAA,EAOAxR,cAAA,EAOAC,cAAA,EAOAsB,iBAAA,EAQA7Q,mBAAA,EAUA8f,cAAAA,EAYAiB,gBAAA,EAWAC,cAAA,EAYAC,eAAA,EAQAC,OAAA,EAUA7G,SAAA,EAOA8G,WAAA,OAQAC,gBAAA,6TAKAt9F,MAAA,KASAu9F,gBAAA,wKAGAv9F,MAAA,KASA4hE,cAAAp+D,EASAg6F,UAAA,EAYAC,oBAAA,EAMApvC,WAAA,SAAAziD,GACAA,GACAlF,KAAAksE,WAAAhnE,IAQAu5E,mBAAA,WACAz+E,KAAAg3F,oBACAh3F,KAAA8zE,aAAA1hC,EAAAlkB,KAAAowB,sBACAt+C,KAAAyiF,cAAAziF,KAAA8zE,aAAAvgC,WAAA,MACAvzC,KAAAi3F,qBAEAj3F,KAAA02F,OAAA,GAkBAQ,gBAAA,SAAAC,GACA,IAAA3hD,EAAApD,EAAAoD,mBACA1U,EAAAq2D,EAAAr2D,MAAAC,EAAAo2D,EAAAp2D,OACAjV,EAAAsmB,EAAAqD,kBAAA3D,EAAAM,EAAAsD,kBACA,GAAA5U,GAAAhV,GAAAiV,GAAAjV,GAAAgV,EAAAC,GAAAyU,EAOA,OANA1U,EAAAgR,IACAqlD,EAAAr2D,MAAAgR,GAEA/Q,EAAA+Q,IACAqlD,EAAAp2D,OAAA+Q,GAEAqlD,EAEA,IAAA91C,EAAAvgB,EAAAC,EAAAq2D,EAAAhlD,EAAAlkB,KAAAkzB,gBAAAC,EAAA7L,GACAiM,EAAArP,EAAAlkB,KAAAuzB,SACAne,EAAAme,EAAA3P,EAAAslD,EAAA9zD,EAAAxX,GACAyX,EAAAke,EAAA3P,EAAAslD,EAAA7zD,EAAAzX,GAWA,OAVAgV,EAAAwC,IACA6zD,EAAAvjB,OAAA9yC,EAAAwC,EACA6zD,EAAAr2D,MAAAwC,EACA6zD,EAAAE,QAAA,GAEAt2D,EAAAwC,IACA4zD,EAAAtjB,OAAA9yC,EAAAwC,EACA4zD,EAAAp2D,OAAAwC,EACA4zD,EAAAE,QAAA,GAEAF,GAcAG,0BAAA,WACA,IAAAC,EAAAv3F,KAAAw3F,wBAEAnS,EAAArlF,KAAAslF,0BAAA,EAAA,GACAmS,EAAApS,EAAA/hD,EAAAi0D,EAAAn4C,OAAAp/C,KAAAo/C,OACAs4C,EAAArS,EAAA9hD,EAAAg0D,EAAAl4C,OAAAr/C,KAAAq/C,OACA,OAIAve,MAAA22D,EAluBA,EAmuBA12D,OAAA22D,EAnuBA,EAouBA9jB,MAAA2jB,EAAAn4C,OACAy0B,MAAA0jB,EAAAl4C,OACA/b,EAAAm0D,EACAl0D,EAAAm0D,IAUAT,mBAAA,WACA,IAAA3jD,EAAAtzC,KAAAqzC,OACA,GAAArzC,KAAAw2F,cAAAljD,GAAAA,EAAAstC,kBAAA,CACA,IAAAzhF,EAAAm0C,EAAAstC,kBAAAzhF,OACAmzB,EAAAghB,EAAAstC,kBAAAtuD,OACA,GAAAtyB,OAAAb,GAAAmzB,EAAAr0B,OAAA,UAAAq0B,EAAAr0B,MAAA,EAAA,GACA,OAAA,EAGA,IAGA05F,EAAAC,EAHAvkD,EAAArzC,KAAA8zE,aACAqjB,EAAAn3F,KAAAk3F,gBAAAl3F,KAAAs3F,6BACAO,EAAAzlD,EAAAsD,kBACA5U,EAAAq2D,EAAAr2D,MAAAC,EAAAo2D,EAAAp2D,OACA6yC,EAAAujB,EAAAvjB,MAAAC,EAAAsjB,EAAAtjB,MACAikB,EAAAh3D,IAAA9gC,KAAA+3F,YAAAh3D,IAAA/gC,KAAAg4F,YACAC,EAAAj4F,KAAA4zE,QAAAA,GAAA5zE,KAAA6zE,QAAAA,EACAqkB,EAAAJ,GAAAG,EACAE,EAAA,EAAAC,EAAA,EAAAC,GAAA,EACA,GAAAP,EAAA,CACA,IAAAQ,EAAAt4F,KAAA8zE,aAAAhzC,MACAy3D,EAAAv4F,KAAA8zE,aAAA/yC,OACAy3D,EAAA13D,EAAAw3D,GAAAv3D,EAAAw3D,EACAE,GAAA33D,EAAA,GAAAw3D,GAAAv3D,EAAA,GAAAw3D,IACAD,EAAAT,GAAAU,EAAAV,EACAQ,EAAAG,GAAAC,EACAD,IAAArB,EAAAE,SAAAv2D,EAAA+2D,GAAA92D,EAAA82D,KACAM,EAAA,GAAAr3D,EACAs3D,EAAA,GAAAr3D,GAGA,QAAAm3D,IACAG,GACAhlD,EAAAvS,MAAAx3B,KAAAk6C,KAAA1iB,EAAAq3D,GACA9kD,EAAAtS,OAAAz3B,KAAAk6C,KAAAziB,EAAAq3D,KAGAp4F,KAAAyiF,cAAAiW,aAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA14F,KAAAyiF,cAAApQ,UAAA,EAAA,EAAAh/B,EAAAvS,MAAAuS,EAAAtS,SAEA42D,EAAAR,EAAA7zD,EAAA,EACAs0D,EAAAT,EAAA5zD,EAAA,EACAvjC,KAAA+zE,kBAAAzqE,KAAA65B,MAAAkQ,EAAAvS,MAAA,EAAA62D,GAAAA,EACA33F,KAAAg0E,kBAAA1qE,KAAA65B,MAAAkQ,EAAAtS,OAAA,EAAA62D,GAAAA,EACA53F,KAAA+3F,WAAAj3D,EACA9gC,KAAAg4F,YAAAj3D,EACA/gC,KAAAyiF,cAAAjvC,UAAAxzC,KAAA+zE,kBAAA/zE,KAAAg0E,mBACAh0E,KAAAyiF,cAAAv4C,MAAA0pC,EAAAC,GACA7zE,KAAA4zE,MAAAA,EACA5zE,KAAA6zE,MAAAA,GACA,IASA3H,WAAA,SAAAhnE,GACAlF,KAAAktC,YAAAhoC,GACAlF,KAAAq4C,cAAAnzC,EAAA+xC,KAAA,QACAj3C,KAAAq4C,cAAAnzC,EAAA0sD,OAAA,UACA5xD,KAAA24C,cAAAzzC,GACAlF,KAAAy4C,aAAAvzC,EAAA+xC,KAAA,QACAj3C,KAAAy4C,aAAAvzC,EAAA0sD,OAAA,WAOA56C,UAAA,SAAAvG,GACA,IAAAs3B,EAEAA,EADA/nC,KAAA2xE,QAAA3xE,KAAA2xE,MAAA2B,eACAtzE,KAAAm7D,sBAGAn7D,KAAA24F,gBAEAloF,EAAAuG,UAAA+wB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAQA4iC,SAAA,SAAAC,GACA,IAAA/oB,EAAAzP,EAAAt2C,OAAA+lD,oBAEA3mD,GACAhB,KAAA8F,KAAA9F,KACAoa,QAAA89B,EAAA99B,QACAkoE,QAAAx8E,KAAAw8E,QACAC,QAAAz8E,KAAAy8E,QACAhkD,KAAAyZ,EAAAlyC,KAAAy4B,KAAAopB,GACA7iB,IAAAkT,EAAAlyC,KAAAg/B,IAAA6iB,GACA/gB,MAAAoR,EAAAlyC,KAAA8gC,MAAA+gB,GACA9gB,OAAAmR,EAAAlyC,KAAA+gC,OAAA8gB,GACA5K,KAAAj3C,KAAAi3C,MAAAj3C,KAAAi3C,KAAA0zB,SAAA3qE,KAAAi3C,KAAA0zB,WAAA3qE,KAAAi3C,KACA2a,OAAA5xD,KAAA4xD,QAAA5xD,KAAA4xD,OAAA+Y,SAAA3qE,KAAA4xD,OAAA+Y,WAAA3qE,KAAA4xD,OACA4pB,YAAAtpC,EAAAlyC,KAAAw7E,YAAA35B,GACAg3B,gBAAA74E,KAAA64E,gBAAA74E,KAAA64E,gBAAA70E,SAAAhE,KAAA64E,gBACAH,cAAA14E,KAAA04E,cACAod,iBAAA91F,KAAA81F,iBACAnd,eAAA34E,KAAA24E,eACAC,iBAAA1mC,EAAAlyC,KAAA44E,iBAAA/2B,GACAzC,OAAAlN,EAAAlyC,KAAAo/C,OAAAyC,GACAxC,OAAAnN,EAAAlyC,KAAAq/C,OAAAwC,GACAzI,MAAAlH,EAAAlyC,KAAAo5C,MAAAyI,GACA/B,MAAA9/C,KAAA8/C,MACAC,MAAA//C,KAAA+/C,MACA9kB,QAAAiX,EAAAlyC,KAAAi7B,QAAA4mB,GACAorB,OAAAjtE,KAAAitE,QAAAjtE,KAAAitE,OAAAtC,SAAA3qE,KAAAitE,OAAAtC,WAAA3qE,KAAAitE,OACAhrD,QAAAjiB,KAAAiiB,QACA22B,OAAA54C,KAAA44C,QAAAv+C,OAAA2F,KAAA44C,QACAi1B,gBAAA7tE,KAAA6tE,gBACAhT,SAAA76D,KAAA66D,SACA87B,WAAA32F,KAAA22F,WACAhjB,yBAAA3zE,KAAA2zE,yBACA3hB,gBAAAhyD,KAAAgyD,gBAAAhyD,KAAAgyD,gBAAAhuD,SAAA,KACAs7C,MAAApN,EAAAlyC,KAAAs/C,MAAAuC,GACAtC,MAAArN,EAAAlyC,KAAAu/C,MAAAsC,IAcA,OAXA7hD,KAAAk7D,WACAhgE,EAAAggE,SAAAl7D,KAAAk7D,SAAAyP,SAAAC,GACA1vE,EAAAggE,SAAA47B,SAAA92F,KAAAk7D,SAAA47B,SACA57F,EAAAggE,SAAA67B,mBAAA/2F,KAAAk7D,SAAA67B,oBAGA3kD,EAAAlkB,KAAAovB,uBAAAt9C,KAAA9E,EAAA0vE,GACA5qE,KAAA8sE,uBACA5xE,EAAA8E,KAAA44F,qBAAA19F,IAGAA,GAQAi6E,iBAAA,SAAAvK,GAEA,OAAA5qE,KAAA2qE,SAAAC,IAOAguB,qBAAA,SAAA19F,GACA,IAAAc,EAAAo2C,EAAAlkB,KAAAwtB,SAAAxgD,EAAAhB,MAAA8B,UACA46F,EAAA56F,EAAA46F,gBAiBA,OAhBAA,EAAAz8F,QAAA,SAAAuI,GACA,GAAA,SAAAA,GAAA,QAAAA,EAAA,CAGAxH,EAAAwH,KAAA1G,EAAA0G,WACAxH,EAAAwH,GAEA,IAAAzH,EAAA,mBAAAa,OAAAE,UAAA/B,SAAAK,KAAAY,EAAAwH,KACA,mBAAA5G,OAAAE,UAAA/B,SAAAK,KAAA0B,EAAA0G,IAGAzH,GAAA,IAAAC,EAAAwH,GAAAnJ,QAAA,IAAAyC,EAAA0G,GAAAnJ,eACA2B,EAAAwH,MAIAxH,GAOAjB,SAAA,WACA,MAAA,YAAA2sD,EAAA5mD,KAAA9F,MAAA,KAOA2+F,iBAAA,WACA,IAAAz5C,EAAAp/C,KAAAo/C,OAAAC,EAAAr/C,KAAAq/C,OACA,GAAAr/C,KAAA2xE,MAAA,CACA,IAAAmnB,EAAA94F,KAAA2xE,MAAAknB,mBACAz5C,GAAA05C,EAAA15C,OACAC,GAAAy5C,EAAAz5C,OAEA,OAAAD,OAAAA,EAAAC,OAAAA,IAOAm4C,sBAAA,WACA,IAAAttD,EAAAlqC,KAAA64F,mBAAAz5C,EAAAlV,EAAAkV,OAAAC,EAAAnV,EAAAmV,OACA,GAAAr/C,KAAAqzC,OAAA,CACA,IAAAlY,EAAAn7B,KAAAqzC,OAAAi+B,UACAynB,EAAA/4F,KAAAqzC,OAAAi8B,mBACAlwB,GAAAjkB,EAAA49D,EACA15C,GAAAlkB,EAAA49D,EAEA,OAAA35C,OAAAA,EAAAC,OAAAA,IAOA25C,iBAAA,WACA,IAAA/9D,EAAAj7B,KAAAi7B,QAIA,OAHAj7B,KAAA2xE,QACA12C,GAAAj7B,KAAA2xE,MAAAqnB,oBAEA/9D,GASA+d,KAAA,SAAAj6C,EAAAtE,GACA,IAAAw+F,EAAA,WAAAl6F,GAAA,WAAAA,EACAm6F,EAAAl5F,KAAAjB,KAAAtE,EAAA0+F,GAAA,EAiCA,OA/BAF,IACAx+F,EAAAuF,KAAAo5F,gBAAA3+F,IAEA,WAAAsE,GAAAtE,EAAA,GACAuF,KAAA8/C,OAAA9/C,KAAA8/C,MACArlD,IAAA,GAEA,WAAAsE,GAAAtE,EAAA,GACAuF,KAAA+/C,OAAA//C,KAAA+/C,MACAtlD,IAAA,GAEA,WAAAsE,IAAAtE,GAAAA,aAAA23C,EAAAw6B,OAGA,UAAA7tE,GAAAiB,KAAA2xE,OACA3xE,KAAA2xE,MAAA15D,IAAA,QAAAxd,GAHAA,EAAA,IAAA23C,EAAAw6B,OAAAnyE,GAMAuF,KAAAjB,GAAAtE,EAEAy+F,IACAC,EAAAn5F,KAAA2xE,OAAA3xE,KAAA2xE,MAAA0nB,aACAr5F,KAAA62F,gBAAAl1F,QAAA5C,IAAA,GACAiB,KAAA02F,OAAA,EACAyC,GAAAn5F,KAAA2xE,MAAA15D,IAAA,SAAA,IAEAkhF,GAAAn5F,KAAA42F,gBAAAj1F,QAAA5C,IAAA,GACAiB,KAAA2xE,MAAA15D,IAAA,SAAA,IAIAjY,MASAs5F,WAAA,aAUAC,qBAAA,WACA,OAAAv5F,KAAAqzC,QAAArzC,KAAAqzC,OAAAg7B,kBACAruE,KAAAqzC,OAAAg7B,kBAEAj8B,EAAAkD,QAAAtxC,UASAw1F,aAAA,WACA,OAAA,IAAAx5F,KAAAi7B,SACA,IAAAj7B,KAAA8gC,OAAA,IAAA9gC,KAAA+gC,QAAA,IAAA/gC,KAAAw7E,cACAx7E,KAAAiiB,SAOAjV,OAAA,SAAAyD,GAEAzQ,KAAAw5F,gBAGAx5F,KAAAqzC,QAAArzC,KAAAqzC,OAAAs7B,gBAAA3uE,KAAA2xE,QAAA3xE,KAAAy5F,eAGAhpF,EAAAytC,OACAl+C,KAAA05F,yBAAAjpF,GACAzQ,KAAA25F,wBAAAlpF,GACAzQ,KAAAgX,UAAAvG,GACAzQ,KAAA45F,YAAAnpF,GACAzQ,KAAAq5E,WAAA5oE,EAAAzQ,MACAA,KAAAgyD,iBACAvhD,EAAAuG,UAAAjX,MAAA0Q,EAAAzQ,KAAAgyD,iBAEAhyD,KAAA44C,QAAAxG,EAAAlkB,KAAA0wB,YAAA5+C,KAAAyQ,GACAzQ,KAAAqzE,eACArzE,KAAAuzE,cACAvzE,KAAA65F,kBAAAppF,KAGAzQ,KAAA85F,qBACA95F,KAAA02F,OAAA,EACA12F,KAAA+5F,WAAAtpF,GACAzQ,KAAAs1F,eAAAt1F,KAAAu2F,gBACAv2F,KAAA0wF,WAAAsJ,YAAA,qBAGAh6F,KAAA44C,QAAAnoC,EAAA4tC,UACA5tC,EAAA4tC,YAGAk1B,YAAA,SAAAruE,GACAA,EAAAA,MACAlF,KAAA8zE,cACA9zE,KAAAy+E,qBAEAz+E,KAAAi6F,iBACAj6F,KAAAu2F,gBAAAv2F,KAAA0wF,WAAAsJ,YAAA,oBACAh6F,KAAA+5F,WAAA/5F,KAAAyiF,cAAAv9E,EAAAsuE,aACAxzE,KAAA02F,OAAA,IAOAoD,mBAAA,WACA95F,KAAA8zE,aAAA,KACA9zE,KAAA+3F,WAAA,EACA/3F,KAAAg4F,YAAA,GAaAkC,UAAA,WACA,OAAAl6F,KAAA4xD,QAAA,gBAAA5xD,KAAA4xD,QAAA,IAAA5xD,KAAAw7E,aAaA2e,QAAA,WACA,OAAAn6F,KAAAi3C,MAAA,gBAAAj3C,KAAAi3C,MAWAmjD,iBAAA,WACA,QAAA,WAAAp6F,KAAA22F,aACA32F,KAAAm6F,YAAAn6F,KAAAk6F,aAAA,iBAAAl6F,KAAAitE,WAGAjtE,KAAAk7D,UAeAmY,YAAA,WAKA,OAJArzE,KAAAq6F,WAAAr6F,KAAAo6F,oBACAp6F,KAAAs1F,iBACAt1F,KAAA2xE,QAAA3xE,KAAA2xE,MAAA0nB,cAEAr5F,KAAAq6F,YAQAC,eAAA,WACA,QAAAt6F,KAAAitE,SAAA,IAAAjtE,KAAAitE,OAAA1C,SAAA,IAAAvqE,KAAAitE,OAAAzC,UAOA+vB,oBAAA,SAAA9pF,GACA,IAAArX,EAAA4G,KAAAk7D,SAWA,GAVAzqD,EAAAytC,OAGA9kD,EAAA09F,SACArmF,EAAAkjE,yBAAA,kBAGAljE,EAAAkjE,yBAAA,iBAGAv6E,EAAA29F,mBAAA,CACA,IAAAhvD,EAAAqK,EAAAlkB,KAAA+sB,gBAAAj7C,KAAAm7D,uBACA1qD,EAAAuG,UAAA+wB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA3uC,EAAA4d,UAAAvG,GACAA,EAAAy5B,MAAA,EAAA9wC,EAAAw6E,MAAA,EAAAx6E,EAAAy6E,OACApjE,EAAAijC,UAAAt6C,EAAA06E,cAAA16E,EAAA26E,mBAAA36E,EAAA46E,mBACAvjE,EAAA4tC,WAOA07C,WAAA,SAAAtpF,EAAA+iE,GACA,IAAAgnB,EAAAx6F,KAAAi3C,KAAAwjD,EAAAz6F,KAAA4xD,OACA4hB,GACAxzE,KAAAi3C,KAAA,QACAj3C,KAAA4xD,OAAA,GACA5xD,KAAA06F,uBAAAjqF,KAGAzQ,KAAAkzE,kBAAAziE,GACAzQ,KAAA26F,iBAAAlqF,EAAAzQ,MACAA,KAAA46F,eAAAnqF,EAAAzQ,OAEAA,KAAAy6E,QAAAhqE,GACAzQ,KAAA66F,cAAApqF,GACAzQ,KAAAi3C,KAAAujD,EACAx6F,KAAA4xD,OAAA6oC,GAGAI,cAAA,SAAApqF,GACA,IAAArX,EAAA4G,KAAAk7D,SACA9hE,IAIAA,EAAAi6C,OAAArzC,KAAAqzC,OACAj6C,EAAAi6E,cACAj6E,EAAAk6E,gBAAA,EACAl6E,EAAAm6E,aAAAC,aAAA,IACAxzE,KAAAu6F,oBAAA9pF,KAOAopF,kBAAA,SAAAppF,GACAA,EAAAy5B,MAAA,EAAAlqC,KAAA4zE,MAAA,EAAA5zE,KAAA6zE,OACApjE,EAAAijC,UAAA1zC,KAAA8zE,cAAA9zE,KAAA+zE,mBAAA/zE,KAAAg0E,oBAQAimB,aAAA,SAAAa,GACA,GAAA96F,KAAAw5F,eACA,OAAA,EAEA,GAAAx5F,KAAA8zE,eAAAgnB,GAAA96F,KAAAi3F,qBAEA,OAAA,EAGA,GAAAj3F,KAAA02F,OACA12F,KAAAk7D,UAAAl7D,KAAAk7D,SAAA67B,oBACA/2F,KAAAu2F,gBAAAv2F,KAAAiwF,gBAAA,mBACA,CACA,GAAAjwF,KAAA8zE,eAAAgnB,EAAA,CACA,IAAAh6D,EAAA9gC,KAAA+3F,WAAA/3F,KAAA4zE,MACA7yC,EAAA/gC,KAAAg4F,YAAAh4F,KAAA6zE,MACA7zE,KAAAyiF,cAAApQ,WAAAvxC,EAAA,GAAAC,EAAA,EAAAD,EAAAC,GAEA,OAAA,EAGA,OAAA,GAQAmyC,kBAAA,SAAAziE,GACA,GAAAzQ,KAAA6tE,gBAAA,CAGA,IAAAwX,EAAArlF,KAAA+6F,+BACAtqF,EAAA4jE,UAAAr0E,KAAA6tE,gBAEAp9D,EAAAqtE,UACAuH,EAAA/hD,EAAA,GACA+hD,EAAA9hD,EAAA,EACA8hD,EAAA/hD,EACA+hD,EAAA9hD,GAIAvjC,KAAAg7F,cAAAvqF,KAOAmpF,YAAA,SAAAnpF,GACAzQ,KAAA2xE,QAAA3xE,KAAA2xE,MAAA2B,eACA7iE,EAAAotE,YAAA79E,KAAAg5F,mBAGAvoF,EAAAotE,aAAA79E,KAAAi7B,SAIA0/D,iBAAA,SAAAlqF,EAAAwqF,GACAA,EAAArpC,SACAnhD,EAAAuoE,UAAAiiB,EAAAzf,YACA/qE,EAAAwoE,QAAAgiB,EAAAviB,cACAjoE,EAAAyqF,eAAAD,EAAAnF,iBACArlF,EAAA0oE,SAAA8hB,EAAAtiB,eACAloE,EAAAyoE,WAAA+hB,EAAAriB,iBACAnoE,EAAAsoE,YAAAkiB,EAAArpC,OAAA4Z,OACAyvB,EAAArpC,OAAA4Z,OAAA/6D,EAAAzQ,MACAi7F,EAAArpC,SAIAgpC,eAAA,SAAAnqF,EAAAwqF,GACAA,EAAAhkD,OACAxmC,EAAA4jE,UAAA4mB,EAAAhkD,KAAAu0B,OACAyvB,EAAAhkD,KAAAu0B,OAAA/6D,EAAAzQ,MACAi7F,EAAAhkD,OAIAyjD,uBAAA,SAAAjqF,GACAA,EAAAotE,YAAA,EACAptE,EAAAsoE,YAAA,cACAtoE,EAAA4jE,UAAA,WAUA+T,aAAA,SAAA33E,EAAA0qF,EAAAC,GACAD,GAAA,IAAAA,EAAA5hG,SAIA,EAAA4hG,EAAA5hG,QACA4hG,EAAAn8F,KAAAe,MAAAo7F,EAAAA,GAEA9F,EACA5kF,EAAA6nE,YAAA6iB,GAGAC,GAAAA,EAAA3qF,KASAoyE,gBAAA,SAAApyE,EAAA4qF,GACA,IAEAn2F,EAAAo2F,EAAAloB,EAFA5B,EAAAxxE,KAAAu5F,uBACAp5C,EAAAngD,KAAAm7D,sBAGAmgC,OAAA,KADAD,EAAAA,OACAvY,WAAAuY,EAAAvY,WAAA9iF,KAAA8iF,WACA1P,OAAA,IAAAioB,EAAAnF,YAAAmF,EAAAnF,YAAAl2F,KAAAk2F,YACA/1C,EAAA/N,EAAAlkB,KAAA8wB,0BAAAwyB,EAAArxB,GACAj7C,EAAAktC,EAAAlkB,KAAAgxB,YAAAiB,GACA1vC,EAAAytC,OACAztC,EAAA+iC,UAAAtuC,EAAAs6C,WAAAt6C,EAAAu6C,YACAhvC,EAAAuoE,UAAA,EAAAh5E,KAAAg2F,kBACAh2F,KAAA2xE,QACAlhE,EAAAotE,YAAA79E,KAAA2vF,SAAA3vF,KAAA+1F,wBAAA,GAEAsF,EAAAE,oBACA9qF,EAAA2tC,OAAArM,EAAA7sC,EAAAk0C,QACAkiD,GAAAt7F,KAAAw7F,mBAAA/qF,EAAAvL,EAAAm2F,KAGA5qF,EAAA2tC,OAAArM,EAAA/xC,KAAAo5C,QACAkiD,GAAAt7F,KAAAs7F,YAAA7qF,EAAA4qF,IAEAjoB,GAAApzE,KAAAozE,aAAA3iE,EAAA4qF,GACA5qF,EAAA4tC,WAOAg7B,WAAA,SAAA5oE,GACA,GAAAzQ,KAAAitE,OAAA,CAIA,IAAA6rB,EAAA7rB,EAAAjtE,KAAAitE,OAAA55B,EAAArzC,KAAAqzC,OACAooD,EAAApoD,GAAAA,EAAAg7B,kBAAA,IAAA,EACAqtB,EAAAroD,GAAAA,EAAAg7B,kBAAA,IAAA,EAEAyqB,EADA7rB,EAAAF,YACA3tB,OAAA,EAAAC,OAAA,GAGAr/C,KAAA64F,mBAEAxlD,GAAAA,EAAAg8B,qBACAosB,GAAArpD,EAAA2D,iBACA2lD,GAAAtpD,EAAA2D,kBAEAtlC,EAAA6oE,YAAArM,EAAA/e,MACAz9C,EAAA8oE,WAAAtM,EAAAntD,KAAAsyB,EAAA8D,2BACAulD,EAAAC,IAAA5C,EAAA15C,OAAA05C,EAAAz5C,QAAA,EACA5uC,EAAA+oE,cAAAvM,EAAA1C,QAAAkxB,EAAA3C,EAAA15C,OACA3uC,EAAAgpE,cAAAxM,EAAAzC,QAAAkxB,EAAA5C,EAAAz5C,SAOA27C,cAAA,SAAAvqF,GACAzQ,KAAAitE,SAIAx8D,EAAA6oE,YAAA,GACA7oE,EAAA8oE,WAAA9oE,EAAA+oE,cAAA/oE,EAAAgpE,cAAA,IAUAkiB,+BAAA,SAAAlrF,EAAA6nC,GACA,IAAAA,IAAAA,EAAAkzB,OACA,OAAAjB,QAAA,EAAAC,QAAA,GAEA,IAAAjwB,EAAAjC,EAAAmyB,mBAAAnyB,EAAA2zB,iBACA1B,GAAAvqE,KAAA8gC,MAAA,EAAAwX,EAAAiyB,SAAA,EACAC,GAAAxqE,KAAA+gC,OAAA,EAAAuX,EAAAkyB,SAAA,EAWA,MATA,eAAAlyB,EAAA8xB,cACA35D,EAAAuG,UAAAhX,KAAA8gC,MAAA,EAAA,EAAA9gC,KAAA+gC,OAAAwpC,EAAAC,GAGA/5D,EAAAuG,UAAA,EAAA,EAAA,EAAA,EAAAuzD,EAAAC,GAEAjwB,GACA9pC,EAAAuG,UAAAujC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAgwB,QAAAA,EAAAC,QAAAA,IAOAoxB,oBAAA,SAAAnrF,GACA,WAAAzQ,KAAA22F,YACA32F,KAAA67F,cAAAprF,GACAzQ,KAAA87F,YAAArrF,KAGAzQ,KAAA87F,YAAArrF,GACAzQ,KAAA67F,cAAAprF,KAWAgqE,QAAA,aAQAqhB,YAAA,SAAArrF,GACAzQ,KAAAi3C,OAIAxmC,EAAAytC,OACAl+C,KAAA27F,+BAAAlrF,EAAAzQ,KAAAi3C,MACA,YAAAj3C,KAAA66D,SACApqD,EAAAwmC,KAAA,WAGAxmC,EAAAwmC,OAEAxmC,EAAA4tC,YAOAw9C,cAAA,SAAAprF,GACAzQ,KAAA4xD,QAAA,IAAA5xD,KAAAw7E,cAIAx7E,KAAAitE,SAAAjtE,KAAAitE,OAAAJ,cACA7sE,KAAAg7F,cAAAvqF,GAGAA,EAAAytC,OACAl+C,KAAAy2F,eACAhmF,EAAAy5B,MAAA,EAAAlqC,KAAAo/C,OAAA,EAAAp/C,KAAAq/C,QAEAr/C,KAAAooF,aAAA33E,EAAAzQ,KAAA64E,gBAAA74E,KAAA+7F,qBACA/7F,KAAA4xD,OAAA4Z,QAAA,eAAAxrE,KAAA4xD,OAAAwY,cAKApqE,KAAAg8F,oCAAAvrF,EAAAzQ,KAAA4xD,QAGA5xD,KAAA27F,+BAAAlrF,EAAAzQ,KAAA4xD,QAEAnhD,EAAAmhD,SACAnhD,EAAA4tC,YAcA29C,oCAAA,SAAAvrF,EAAA6nC,GACA,IACA2jD,EADA9E,EAAAn3F,KAAAk3F,gBAAAl3F,KAAAs3F,6BACA4E,EAAA9pD,EAAAlkB,KAAAowB,sBAAAmrC,EAAAzpF,KAAAqzC,OAAAi8B,mBACAxuC,EAAAq2D,EAAA7zD,EAAAtjC,KAAAo/C,OAAAqqC,EAAA1oD,EAAAo2D,EAAA5zD,EAAAvjC,KAAAq/C,OAAAoqC,EACAyS,EAAAp7D,MAAAA,EACAo7D,EAAAn7D,OAAAA,GACAk7D,EAAAC,EAAA3oD,WAAA,OACAuL,YAAAm9C,EAAA99C,OAAA,EAAA,GAAA89C,EAAA9nB,OAAArzC,EAAA,GAAAm7D,EAAA9nB,OAAArzC,EAAAC,GACAk7D,EAAA9nB,OAAA,EAAApzC,GAAAk7D,EAAA7nB,YACA6nB,EAAAzoD,UAAA1S,EAAA,EAAAC,EAAA,GACAk7D,EAAA/xD,MACAitD,EAAAvjB,MAAA5zE,KAAAo/C,OAAAqqC,EACA0N,EAAAtjB,MAAA7zE,KAAAq/C,OAAAoqC,GAEAzpF,KAAA27F,+BAAAM,EAAA3jD,GACA2jD,EAAA5nB,UAAA/7B,EAAAkzB,OAAA/6D,GACAwrF,EAAAhlD,OACAxmC,EAAA+iC,WAAAxzC,KAAA8gC,MAAA,EAAA9gC,KAAAw7E,YAAA,GAAAx7E,KAAA+gC,OAAA,EAAA/gC,KAAAw7E,YAAA,GACA/qE,EAAAy5B,MACAu/C,EAAAzpF,KAAAo/C,OAAA+3C,EAAAvjB,MACA6V,EAAAzpF,KAAAq/C,OAAA83C,EAAAtjB,OAEApjE,EAAAsoE,YAAAkjB,EAAAtvB,cAAAuvB,EAAA,cASAC,uBAAA,WACA,OAAA74D,EAAAtjC,KAAAy4B,KAAAz4B,KAAA8gC,MAAA,EAAAyC,EAAAvjC,KAAAg/B,IAAAh/B,KAAA+gC,OAAA,IAUAq7D,4BAAA,WACA,GAAAp8F,KAAAgyD,gBAAA,CACA,IAAA9sD,EAAAktC,EAAAlkB,KAAAgxB,YAAAl/C,KAAAgyD,iBACAhyD,KAAA8/C,OAAA,EACA9/C,KAAA+/C,OAAA,EACA//C,KAAAiY,IAAA,SAAA/S,EAAAk6C,QACAp/C,KAAAiY,IAAA,SAAA/S,EAAAm6C,QACAr/C,KAAAo5C,MAAAl0C,EAAAk0C,MACAp5C,KAAAs/C,MAAAp6C,EAAAo6C,MACAt/C,KAAAu/C,MAAA,IAWA4a,uBAAA,SAAAkiC,GACA,IAAAznB,EAAA50E,KAAAm8F,yBACAn8F,KAAAgyD,kBACAhyD,KAAAo8F,8BACAxnB,EAAAxiC,EAAAlkB,KAAAosB,eAAAs6B,EAAA50E,KAAAgyD,kBAEAhyD,KAAAgyD,gBAAA,KACAqqC,IACAr8F,KAAAo/C,QAAAi9C,EAAAj9C,OACAp/C,KAAAq/C,QAAAg9C,EAAAh9C,OACAr/C,KAAAs8F,MAAAD,EAAAC,MACAt8F,KAAAu8F,MAAAF,EAAAE,MACA3nB,EAAAtxC,GAAA+4D,EAAAx4D,WACA+wC,EAAArxC,GAAA84D,EAAAv4D,UACA9jC,KAAA8gC,MAAAu7D,EAAAv7D,MACA9gC,KAAA+gC,OAAAs7D,EAAAt7D,QAEA/gC,KAAAs7D,oBAAAsZ,EAAA,SAAA,WAQAl0E,MAAA,SAAAO,EAAA2pE,GACA,IAAA4xB,EAAAx8F,KAAA2qE,SAAAC,GACA5qE,KAAA7E,YAAAyhD,WACA58C,KAAA7E,YAAAyhD,WAAA4/C,EAAAv7F,GAGAmxC,EAAAt2C,OAAA2gG,YAAA,SAAAD,EAAAv7F,IAqBAy7F,aAAA,SAAAz7F,EAAAiE,GACA,IAAAw5C,EAAA1+C,KAAAuzF,gBAAAruF,GAIA,OAHAjE,GACAA,EAAA,IAAAmxC,EAAA6nB,MAAAvb,IAEA1+C,MAgBAuzF,gBAAA,SAAAruF,GACAA,IAAAA,MAEA,IAAAy3F,EAAAvqD,EAAAlkB,KAAA0uE,EAAAD,EAAAr8C,oBAAAtgD,MACA68F,EAAA78F,KAAA2xE,MACAmrB,EAAA98F,KAAAitE,OAAAjpC,EAAA16B,KAAA06B,IACA+lC,GAAA7kE,EAAA6kE,YAAA,IAAA7kE,EAAAupE,oBAAAr8B,EAAA2D,iBAAA,UACA/1C,KAAA2xE,MACAzsE,EAAA63F,kBACAJ,EAAAt8C,qBAAArgD,MAEAkF,EAAA83F,gBACAh9F,KAAAitE,OAAA,MAGA,IAGA6rB,EACAvf,EACAz4C,EAAAC,EALAnhB,EAAAwyB,EAAAlkB,KAAAowB,sBAEA3d,EAAA3gC,KAAAi9F,iBAAA,GAAA,GACAhwB,EAAAjtE,KAAAitE,OACAiwB,GAAA55D,EAAA,EAAAC,EAAA,GAGA0pC,IACAsM,EAAAtM,EAAAntD,KAEAg5E,EADA7rB,EAAAF,YACA3tB,OAAA,EAAAC,OAAA,GAGAr/C,KAAA64F,mBAGAqE,EAAA55D,EAAA,EAAAh6B,KAAA65B,MAAAa,EAAAipC,EAAA1C,SAAAgP,GAAAv1C,EAAA80D,EAAA15C,QACA89C,EAAA35D,EAAA,EAAAj6B,KAAA65B,MAAAa,EAAAipC,EAAAzC,SAAA+O,GAAAv1C,EAAA80D,EAAAz5C,SAEAve,EAAAH,EAAAG,MAAAo8D,EAAA55D,EACAvC,EAAAJ,EAAAI,OAAAm8D,EAAA35D,EAGA3jB,EAAAkhB,MAAAx3B,KAAAk6C,KAAA1iB,GACAlhB,EAAAmhB,OAAAz3B,KAAAk6C,KAAAziB,GACA,IAAAsS,EAAA,IAAAjB,EAAAm7B,aAAA3tD,GACA6uD,qBAAA,EACAh3B,mBAAA,EACAk3B,eAAA,IAEA,SAAAzpE,EAAAoS,SACA+7B,EAAAw6B,gBAAA,QAEA7tE,KAAAs7D,oBAAA,IAAAlpB,EAAA6H,MAAA5G,EAAAvS,MAAA,EAAAuS,EAAAtS,OAAA,GAAA,SAAA,UAEA,IAAAo8D,EAAAn9F,KAAAqzC,OACAA,EAAA5pC,IAAAzJ,MACA,IAAA0+C,EAAArL,EAAAkgD,gBAAAxpB,GAAA,EAAA7kE,GAcA,OAbAlF,KAAAitE,OAAA6vB,EACA98F,KAAAqzC,OAAA8pD,EACAN,IACA78F,KAAA2xE,MAAAkrB,GAEA78F,KAAAiY,IAAA2kF,GAAAhrB,YAIAv+B,EAAAkE,YACAlE,EAAA6kC,UACA7kC,EAAA,KAEAqL,GAkBAD,UAAA,SAAAv5C,GAEA,OADAA,IAAAA,MACAktC,EAAAlkB,KAAAuwB,UAAAz+C,KAAAuzF,gBAAAruF,GAAAA,EAAAoS,QAAA,MAAApS,EAAAy5C,SAAA,IAQAy+C,OAAA,SAAAljG,GACA,OAAA8F,KAAA9F,OAAAA,GAOAg+C,WAAA,WACA,OAAA,GAQA7/B,OAAA,SAAAuyD,GAEA,OAAA5qE,KAAA2qE,SAAAC,IAqDAyyB,YAAA,SAAAnwE,EAAAhoB,GACAA,IAAAA,MAEA,IAAAmwD,GAAA9c,eAkBA,OAhBA8c,EAAAn7D,KAAAgL,EAAAhL,OAAAgL,EAAA04D,IAAA14D,EAAA24D,GAAA,SAAA,UACAxI,EAAAj1B,QACA2kB,GAAA7/C,EAAA6/C,GACAC,GAAA9/C,EAAA8/C,GACAvH,GAAAv4C,EAAAu4C,GACAC,GAAAx4C,EAAAw4C,IAEA2X,EAAA+U,cAAAllE,EAAAklE,eAAA,UACAllE,EAAA04D,IAAA14D,EAAA24D,MACAxI,EAAAj1B,OAAAw9B,GAAA14D,EAAA04D,GACAvI,EAAAj1B,OAAAy9B,GAAA34D,EAAA24D,IAGAxI,EAAAoV,kBAAAvlE,EAAAulE,kBACAr4B,EAAAoG,SAAAx8C,UAAA0uE,aAAApwE,KAAA+6D,EAAAnwD,EAAAqzC,YAEAv4C,KAAAiY,IAAAiV,EAAAklB,EAAAoG,SAAAuzB,UAAA/rE,KAAAq1D,KAqBAioC,eAAA,SAAAp4F,EAAAjE,GACA,OAAAjB,KAAAiY,IAAA,OAAA,IAAAm6B,EAAAsG,QAAAxzC,EAAAjE,KA0BA63E,UAAA,SAAA5zE,GACA,OAAAlF,KAAAiY,IAAA,SAAA/S,EAAA,IAAAktC,EAAAw6B,OAAA1nE,GAAA,OAUAq4F,SAAA,SAAArvC,GAEA,OADAluD,KAAAiY,IAAA,OAAAi2C,GACAluD,MASAo+C,OAAA,SAAAhF,GACA,IAAAokD,GAAA,WAAAx9F,KAAAw8E,SAAA,WAAAx8E,KAAAy8E,UAAAz8E,KAAA6+E,iBAYA,OAVA2e,GACAx9F,KAAAy9F,qBAGAz9F,KAAAiY,IAAA,QAAAmhC,GAEAokD,GACAx9F,KAAA09F,eAGA19F,MASA29F,QAAA,WAEA,OADA39F,KAAAqzC,QAAArzC,KAAAqzC,OAAAkhC,cAAAv0E,MACAA,MASA49F,gBAAA,WAEA,OADA59F,KAAAqzC,QAAArzC,KAAAqzC,OAAA2hC,sBAAAh1E,MACAA,MASA69F,QAAA,WAEA,OADA79F,KAAAqzC,QAAArzC,KAAAqzC,OAAAqhC,cAAA10E,MACAA,MASA89F,gBAAA,WAEA,OADA99F,KAAAqzC,QAAArzC,KAAAqzC,OAAA4hC,sBAAAj1E,MACAA,MASA40E,OAAA,WAEA,OADA50E,KAAAqzC,QAAArzC,KAAAqzC,OAAAshC,aAAA30E,MACAA,MASA+9F,eAAA,WAEA,OADA/9F,KAAAqzC,QAAArzC,KAAAqzC,OAAAwhC,qBAAA70E,MACAA,MASAg+F,gBAAA,SAAA1wF,EAAA+sE,GACAA,EAAAA,GAAAr6E,KAAAqzC,OAAA4U,WAAA36C,GACA,IAAA2wF,EAAA,IAAA7rD,EAAA6H,MAAAogC,EAAA/2C,EAAA+2C,EAAA92C,GACA26D,EAAAl+F,KAAAs+E,oBAKA,OAJAt+E,KAAAo5C,QACA6kD,EAAA7rD,EAAAlkB,KAAA2rB,YACAokD,EAAAC,EAAAnsD,GAAA/xC,KAAAo5C,UAGA9V,EAAA26D,EAAA36D,EAAA46D,EAAA56D,EACAC,EAAA06D,EAAA16D,EAAA26D,EAAA36D,IASAm2D,yBAAA,SAAAjpF,GACAzQ,KAAA2zE,2BACAljE,EAAAkjE,yBAAA3zE,KAAA2zE,6BAKAvhC,EAAAlkB,KAAAiwE,iBAAA/rD,EAAAlkB,KAAAiwE,gBAAA/rD,EAAAt2C,QAEAqF,EAAAixC,EAAAt2C,OAAAE,UAAAo2C,EAAAkF,YAUAlF,EAAAt2C,OAAA+lD,oBAAA,EAEAzP,EAAAt2C,OAAA2gG,YAAA,SAAAn8F,EAAApF,EAAA+F,EAAAm9F,GACA,IAAAl3F,EAAAkrC,EAAA9xC,GACApF,EAAAwF,EAAAxF,GAAA,GACAk3C,EAAAlkB,KAAA2uB,iBAAA3hD,EAAA+7C,KAAA/7C,EAAA02D,QAAA,SAAA9U,QACA,IAAAA,EAAA,KACA5hD,EAAA+7C,KAAA6F,EAAA,SAEA,IAAAA,EAAA,KACA5hD,EAAA02D,OAAA9U,EAAA,IAEA1K,EAAAlkB,KAAAouB,gBAAAphD,EAAAggE,UAAA,SAAAmjC,GACAnjG,EAAAggE,SAAAmjC,EAAA,GACA,IAAArxD,EAAAoxD,EAAA,IAAAl3F,EAAAhM,EAAAkjG,GAAAljG,GAAA,IAAAgM,EAAAhM,GACA+F,GAAAA,EAAA+rC,QAWAoF,EAAAt2C,OAAAs6D,MAAA,GAvkEA,CAwkEA,oBAAAnd,QAAAA,QAAAj5C,MAKA+xC,EAAAK,EAAAlkB,KAAA6jB,iBACAC,GACAvZ,MAAA,GACAm8C,OAAA,EACA/7C,MAAA,IAEAoZ,GACAjT,KAAA,GACA41C,OAAA,EACA/0C,OAAA,IAGAuS,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAt2C,OAAAE,WAWAsiG,uBAAA,SAAAxkD,EAAAykD,EAAAC,EAAAC,EAAAC,GACA,IAEAn0B,EAAAC,EAAA6a,EAFA/hD,EAAAwW,EAAAxW,EACAC,EAAAuW,EAAAvW,EAyCA,MAtCA,iBAAAg7D,EACAA,EAAAvsD,EAAAusD,GAGAA,GAAA,GAGA,iBAAAE,EACAA,EAAAzsD,EAAAysD,GAGAA,GAAA,GAGAl0B,EAAAk0B,EAAAF,EAEA,iBAAAC,EACAA,EAAAvsD,EAAAusD,GAGAA,GAAA,GAGA,iBAAAE,EACAA,EAAAzsD,EAAAysD,GAGAA,GAAA,GAGAl0B,EAAAk0B,EAAAF,GAEAj0B,GAAAC,KACA6a,EAAArlF,KAAAslF,4BACAhiD,EAAAwW,EAAAxW,EAAAinC,EAAA8a,EAAA/hD,EACAC,EAAAuW,EAAAvW,EAAAinC,EAAA6a,EAAA9hD,GAGA,IAAA6O,EAAA6H,MAAA3W,EAAAC,IAUAo7D,uBAAA,SAAA7kD,EAAA0iC,EAAAC,GACA,IAAAvuE,EAAAlO,KAAAs+F,uBAAAxkD,EAAA0iC,EAAAC,EAAA,SAAA,UACA,OAAAz8E,KAAAo5C,MACAhH,EAAAlkB,KAAA2rB,YAAA3rC,EAAA4rC,EAAA/H,EAAA/xC,KAAAo5C,QAEAlrC,GAUAq3E,uBAAA,SAAA3Q,EAAA4H,EAAAC,GACA,IAAAvuE,EAAAlO,KAAAs+F,uBAAA1pB,EAAA,SAAA,SAAA4H,EAAAC,GACA,OAAAz8E,KAAAo5C,MACAhH,EAAAlkB,KAAA2rB,YAAA3rC,EAAA0mE,EAAA7iC,EAAA/xC,KAAAo5C,QAEAlrC,GAOAumE,eAAA,WACA,IAAAmqB,EAAA,IAAAxsD,EAAA6H,MAAAj6C,KAAAy4B,KAAAz4B,KAAAg/B,KACA,OAAAh/B,KAAA2+F,uBAAAC,EAAA5+F,KAAAw8E,QAAAx8E,KAAAy8E,UAkBAoiB,iBAAA,SAAAriB,EAAAC,GACA,IAAA7H,EAAA50E,KAAAy0E,iBACA,OAAAz0E,KAAAulF,uBAAA3Q,EAAA4H,EAAAC,IAUA0I,aAAA,SAAArrC,EAAA0iC,EAAAC,GACA,IACAvuE,EAAA+rE,EADArF,EAAA50E,KAAAy0E,iBAcA,OAVAvmE,OADA,IAAAsuE,QAAA,IAAAC,EACAz8E,KAAAs+F,uBAAA1pB,EAAA,SAAA,SAAA4H,EAAAC,GAGA,IAAArqC,EAAA6H,MAAAj6C,KAAAy4B,KAAAz4B,KAAAg/B,KAGAi7C,EAAA,IAAA7nC,EAAA6H,MAAAH,EAAAxW,EAAAwW,EAAAvW,GACAvjC,KAAAo5C,QACA6gC,EAAA7nC,EAAAlkB,KAAA2rB,YAAAogC,EAAArF,GAAA7iC,EAAA/xC,KAAAo5C,SAEA6gC,EAAAlgC,eAAA7rC,IAmBAotD,oBAAA,SAAA33B,EAAA64C,EAAAC,GACA,IAAA7H,EAAA50E,KAAA2+F,uBAAAh7D,EAAA64C,EAAAC,GACAn6D,EAAAtiB,KAAAulF,uBAAA3Q,EAAA50E,KAAAw8E,QAAAx8E,KAAAy8E,SACAz8E,KAAAiY,IAAA,OAAAqK,EAAAghB,GACAtjC,KAAAiY,IAAA,MAAAqK,EAAAihB,IAMAu7D,eAAA,SAAAC,GACA,IAIAC,EAAAC,EAJA7lD,EAAArH,EAAA/xC,KAAAo5C,OACA8lD,EAAAl/F,KAAAm/F,iBACAC,EAAAhtD,EAAAlkB,KAAAirB,IAAAC,GAAA8lD,EACAG,EAAAjtD,EAAAlkB,KAAAorB,IAAAF,GAAA8lD,EAKAF,EADA,iBAAAh/F,KAAAw8E,QACAxqC,EAAAhyC,KAAAw8E,SAGAx8E,KAAAw8E,QAAA,GAGAyiB,EADA,iBAAAF,EACA/sD,EAAA+sD,GAGAA,EAAA,GAEA/+F,KAAAy4B,MAAA2mE,GAAAH,EAAAD,GACAh/F,KAAAg/B,KAAAqgE,GAAAJ,EAAAD,GACAh/F,KAAA4xE,YACA5xE,KAAAw8E,QAAAuiB,GAQAtB,mBAAA,WACAz9F,KAAAs/F,iBAAAt/F,KAAAw8E,QACAx8E,KAAAu/F,iBAAAv/F,KAAAy8E,QAEA,IAAA7H,EAAA50E,KAAAy0E,iBAEAz0E,KAAAw8E,QAAA,SACAx8E,KAAAy8E,QAAA,SAEAz8E,KAAAy4B,KAAAm8C,EAAAtxC,EACAtjC,KAAAg/B,IAAA41C,EAAArxC,GAQAm6D,aAAA,WACA,IAAA8B,EAAAx/F,KAAAulF,uBACAvlF,KAAAy0E,iBACAz0E,KAAAs/F,iBACAt/F,KAAAu/F,kBAEAv/F,KAAAw8E,QAAAx8E,KAAAs/F,iBACAt/F,KAAAy8E,QAAAz8E,KAAAu/F,iBAEAv/F,KAAAy4B,KAAA+mE,EAAAl8D,EACAtjC,KAAAg/B,IAAAwgE,EAAAj8D,EAEAvjC,KAAAs/F,iBAAA,KACAt/F,KAAAu/F,iBAAA,MAMAjhB,kBAAA,WACA,OAAAt+E,KAAAulF,uBAAAvlF,KAAAy0E,iBAAA,OAAA,UAOA,WAWA,IAAA1iC,EAAAK,EAAAlkB,KAAA6jB,iBACA0tD,EAAArtD,EAAAlkB,KAAA8wB,0BACA1E,EAAAlI,EAAAlkB,KAAAosB,eAEAlI,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAt2C,OAAAE,WAcA0jG,QAAA,KAcAC,QAAA,KAKAC,eAAA,KAKAC,YAAA,KAKAC,UAAA,SAAAC,EAAAC,GACAhgG,KAAA0/F,SACA1/F,KAAA4xE,YAEA,IAAAxxC,EAAA2/D,EAAA//F,KAAA2/F,QAAA3/F,KAAA0/F,QACA,OA7DA,SAAAt/D,GACA,OACA,IAAAgS,EAAA6H,MAAA7Z,EAAA0yC,GAAAxvC,EAAAlD,EAAA0yC,GAAAvvC,GACA,IAAA6O,EAAA6H,MAAA7Z,EAAA1iB,GAAA4lB,EAAAlD,EAAA1iB,GAAA6lB,GACA,IAAA6O,EAAA6H,MAAA7Z,EAAA2yC,GAAAzvC,EAAAlD,EAAA2yC,GAAAxvC,GACA,IAAA6O,EAAA6H,MAAA7Z,EAAA4yC,GAAA1vC,EAAAlD,EAAA4yC,GAAAzvC,IAwDAu8D,CAAAE,EAAAhgG,KAAAigG,WAAAF,GAAA3/D,IAWAizD,mBAAA,SAAA6M,EAAAC,EAAAJ,EAAAC,GACA,IAAA5/D,EAAApgC,KAAA8/F,UAAAC,EAAAC,GACAI,EAAAhuD,EAAAqqB,aAAAkB,0BACAv9B,EACA8/D,EACAC,GAEA,MAAA,iBAAAC,EAAA1jC,QAUAob,qBAAA,SAAAl6E,EAAAmiG,EAAAC,GACA,IAAAI,EAAAhuD,EAAAqqB,aAAAe,wBACAx9D,KAAA8/F,UAAAC,EAAAC,GACApiG,EAAAkiG,UAAAC,EAAAC,IAGA,MAAA,iBAAAI,EAAA1jC,QACA9+D,EAAAm6E,wBAAA/3E,KAAA+/F,EAAAC,IACAhgG,KAAA+3E,wBAAAn6E,EAAAmiG,EAAAC,IAUAjoB,wBAAA,SAAAn6E,EAAAmiG,EAAAC,GAKA,IAJA,IAAAtlD,EAAA16C,KAAA8/F,UAAAC,EAAAC,GACAvmG,EAAA,EAAA4mG,EAAAziG,EAAA0iG,eACAN,EAAApiG,EAAAqiG,WAAAF,GAAAA,EAAAniG,EAAA+hG,QAAA/hG,EAAA8hG,SAEAjmG,EAAA,EAAAA,IACA,IAAAmE,EAAAkkF,cAAApnC,EAAAjhD,GAAA4mG,GACA,OAAA,EAGA,OAAA,GAWA/M,sBAAA,SAAA4M,EAAAC,EAAAJ,EAAAC,GACA,IAAAr/D,EAAA3gC,KAAAi9F,gBAAA8C,EAAAC,GAEA,OACAr/D,EAAAlI,MAAAynE,EAAA58D,GACA3C,EAAAlI,KAAAkI,EAAAG,OAAAq/D,EAAA78D,GACA3C,EAAA3B,KAAAkhE,EAAA38D,GACA5C,EAAA3B,IAAA2B,EAAAI,QAAAo/D,EAAA58D,GAYAu+C,cAAA,SAAAhoC,EAAAumD,EAAAN,EAAAC,GACA,IAAAK,EAAAA,GAAArgG,KAAAsgG,eACAN,EAAAhgG,KAAAigG,WAAAF,GAAAA,EAAA//F,KAAA2/F,QAAA3/F,KAAA0/F,SAEA/kD,EAAA36C,KAAAugG,iBAAAzmD,EAAAumD,GAGA,OAAA,IAAA1lD,GAAAA,EAAA,GAAA,GASA8+C,WAAA,SAAAuG,GACA,IAAAhgG,KAAAqzC,OACA,OAAA,EAIA,IAFA,IACAyG,EADAomD,EAAAlgG,KAAAqzC,OAAAq7B,UAAAoE,GAAAqtB,EAAAngG,KAAAqzC,OAAAq7B,UAAAqE,GACAr4B,EAAA16C,KAAA8/F,WAAA,EAAAE,GACAvmG,EAAA,EAAAA,EAAA,EAAAA,IAEA,IADAqgD,EAAAY,EAAAjhD,IACA6pC,GAAA68D,EAAA78D,GAAAwW,EAAAxW,GAAA48D,EAAA58D,GAAAwW,EAAAvW,GAAA48D,EAAA58D,GAAAuW,EAAAvW,GAAA28D,EAAA38D,EACA,OAAA,EAIA,QAAAvjC,KAAAqzF,mBAAA6M,EAAAC,GAAA,EAAAH,IAGAhgG,KAAAwgG,wBAAAN,EAAAC,EAAAH,IAYAQ,wBAAA,SAAAN,EAAAC,EAAAH,GAEA,IAAA7iD,GAAA7Z,GAAA48D,EAAA58D,EAAA68D,EAAA78D,GAAA,EAAAC,GAAA28D,EAAA38D,EAAA48D,EAAA58D,GAAA,GACA,QAAAvjC,KAAA8hF,cAAA3kC,EAAA,MAAA,EAAA6iD,IAWAS,oBAAA,SAAAT,GACA,IAAAhgG,KAAAqzC,OACA,OAAA,EAEA,IAAA6sD,EAAAlgG,KAAAqzC,OAAAq7B,UAAAoE,GAAAqtB,EAAAngG,KAAAqzC,OAAAq7B,UAAAqE,GACA,QAAA/yE,KAAAqzF,mBAAA6M,EAAAC,GAAA,EAAAH,IAGAhgG,KAAAwgG,wBAAAN,EAAAC,EAAAH,IAQAM,eAAA,SAAAZ,GACA,OACAgB,SACAzoD,EAAAynD,EAAA5sB,GACArkE,EAAAixF,EAAAhiF,IAEAijF,WACA1oD,EAAAynD,EAAAhiF,GACAjP,EAAAixF,EAAA3sB,IAEA6tB,YACA3oD,EAAAynD,EAAA3sB,GACAtkE,EAAAixF,EAAA1sB,IAEA6tB,UACA5oD,EAAAynD,EAAA1sB,GACAvkE,EAAAixF,EAAA5sB,MAaAytB,iBAAA,SAAAzmD,EAAAumD,GACA,IAAArjC,EAAAC,EAAAH,EAAAC,EAAA+jC,EAEAC,EADAC,EAAA,EAGA,IAAA,IAAAC,KAAAZ,EAGA,MAFAU,EAAAV,EAAAY,IAEAhpD,EAAA1U,EAAAuW,EAAAvW,GAAAw9D,EAAAtyF,EAAA80B,EAAAuW,EAAAvW,GAIAw9D,EAAA9oD,EAAA1U,GAAAuW,EAAAvW,GAAAw9D,EAAAtyF,EAAA80B,GAAAuW,EAAAvW,IAIAw9D,EAAA9oD,EAAA3U,IAAAy9D,EAAAtyF,EAAA60B,GAAAy9D,EAAA9oD,EAAA3U,GAAAwW,EAAAxW,EACAw9D,EAAAC,EAAA9oD,EAAA3U,GAKA05B,EAAA,EACAC,GAAA8jC,EAAAtyF,EAAA80B,EAAAw9D,EAAA9oD,EAAA1U,IAAAw9D,EAAAtyF,EAAA60B,EAAAy9D,EAAA9oD,EAAA3U,GACAw5B,EAAAhjB,EAAAvW,EAAAy5B,EAAAljB,EAAAxW,EACAy5B,EAAAgkC,EAAA9oD,EAAA1U,EAAA05B,EAAA8jC,EAAA9oD,EAAA3U,EAEAw9D,IAAAhkC,EAAAC,IAAAC,EAAAC,IAIA6jC,GAAAhnD,EAAAxW,IACA09D,GAAA,GAGA,IAAAA,IACA,MAGA,OAAAA,GAUA/D,gBAAA,SAAA8C,EAAAC,GACA,IAAA5/D,EAAApgC,KAAA8/F,UAAAC,EAAAC,GACA,OAAA5tD,EAAAlkB,KAAAusB,0BAAAra,IAQA++D,eAAA,WACA,OAAAn/F,KAAAslF,4BAAAhiD,GAQA49D,gBAAA,WACA,OAAAlhG,KAAAslF,4BAAA/hD,GASA61D,gBAAA,SAAA3+F,GACA,OAAA6O,KAAA06B,IAAAvpC,GAAAuF,KAAAi2F,cACAx7F,EAAA,GACAuF,KAAAi2F,cAGAj2F,KAAAi2F,cAGA,IAAAx7F,EACA,KAEAA,GASAyvC,MAAA,SAAAzvC,GAGA,OAFAuF,KAAAg5C,KAAA,SAAAv+C,GACAuF,KAAAg5C,KAAA,SAAAv+C,GACAuF,KAAA4xE,aAUAuvB,aAAA,SAAA1mG,EAAAslG,GAEA,IAAAqB,EAAAphG,KAAAi9F,gBAAA8C,GAAAj/D,MAAA9gC,KAAAm/F,iBACA,OAAAn/F,KAAAkqC,MAAAzvC,EAAAuF,KAAA8gC,MAAAsgE,IAUAC,cAAA,SAAA5mG,EAAAslG,GAEA,IAAAqB,EAAAphG,KAAAi9F,gBAAA8C,GAAAh/D,OAAA/gC,KAAAkhG,kBACA,OAAAlhG,KAAAkqC,MAAAzvC,EAAAuF,KAAA+gC,OAAAqgE,IAQAnB,WAAA,SAAAF,GACA,IAAA9rC,EAAAj0D,KAAAshG,oBACAttC,EAAAh0D,KAAAuhG,uBACAC,EAAA/B,EAAAzrC,EAAAC,GACAud,EAAAxxE,KAAAu5F,uBACAkI,EAAA1B,EAAAyB,EAAA/B,EAAAjuB,EAAAgwB,GACAnc,EAAArlF,KAAAslF,4BACAtxE,EAAAqxE,EAAA/hD,EAAA,EAAAw7B,EAAAumB,EAAA9hD,EAAA,EACAuvC,EAAAx4B,GAAAhX,GAAAtvB,EAAAuvB,GAAAu7B,GAAA2iC,GACA/jF,EAAA48B,GAAAhX,EAAAtvB,EAAAuvB,GAAAu7B,GAAA2iC,GACAzuB,EAAA14B,GAAAhX,GAAAtvB,EAAAuvB,EAAAu7B,GAAA2iC,GACA1uB,EAAAz4B,GAAAhX,EAAAtvB,EAAAuvB,EAAAu7B,GAAA2iC,GACA,IAAA1B,EAAA,CACA,IAAAxY,EAAAvnF,KAAAunF,QAAAnuC,EAAArH,EAAA/xC,KAAAo5C,OACAD,EAAA/G,EAAAlkB,KAAAirB,IAAAC,GAAAE,EAAAlH,EAAAlkB,KAAAorB,IAAAF,GACAsoD,EAAAvoD,EAAAouC,EAAAoa,EAAAroD,EAAAiuC,EAAAqa,EAAAF,EAAAC,EACAE,EAAAH,EAAAC,EACApa,IACAzU,EAAAxvC,GAAAu+D,EACA/uB,EAAAvvC,GAAAq+D,EACAlkF,EAAA4lB,GAAAs+D,EACAlkF,EAAA6lB,GAAAs+D,EACA7uB,EAAA1vC,GAAAs+D,EACA5uB,EAAAzvC,GAAAs+D,EACA9uB,EAAAzvC,GAAAu+D,EACA9uB,EAAAxvC,GAAAq+D,GAEA,IAAAlW,EAAA,IAAAt5C,EAAA6H,OAAA64B,EAAAxvC,EAAA0vC,EAAA1vC,GAAA,GAAAwvC,EAAAvvC,EAAAyvC,EAAAzvC,GAAA,GACAkiB,EAAA,IAAArT,EAAA6H,OAAAv8B,EAAA4lB,EAAAwvC,EAAAxvC,GAAA,GAAA5lB,EAAA6lB,EAAAuvC,EAAAvvC,GAAA,GACAkoD,EAAA,IAAAr5C,EAAA6H,OAAA84B,EAAAzvC,EAAA5lB,EAAA4lB,GAAA,GAAAyvC,EAAAxvC,EAAA7lB,EAAA6lB,GAAA,GACA2E,EAAA,IAAAkK,EAAA6H,OAAA84B,EAAAzvC,EAAA0vC,EAAA1vC,GAAA,GAAAyvC,EAAAxvC,EAAAyvC,EAAAzvC,GAAA,GACAu+D,EAAA,IAAA1vD,EAAA6H,MAAAwL,EAAAniB,EAAAgW,EAAAt5C,KAAAm2F,oBAAA1wC,EAAAliB,EAAA4V,EAAAn5C,KAAAm2F,qBAoBA,IAAA/1D,GAEA0yC,GAAAA,EAAAp1D,GAAAA,EAAAq1D,GAAAA,EAAAC,GAAAA,GAWA,OATA+sB,IAEA3/D,EAAAsrD,GAAAA,EACAtrD,EAAAqlB,GAAAA,EACArlB,EAAAqrD,GAAAA,EACArrD,EAAA8H,GAAAA,EAEA9H,EAAA0hE,IAAAA,GAEA1hE,GAWAwxC,UAAA,SAAAuX,EAAA4Y,GASA,OARA/hG,KAAA0/F,QAAA1/F,KAAAigG,WAAA9W,GACA4Y,IACA/hG,KAAA2/F,QAAA3/F,KAAAigG,YAAA,IAIA9W,GAAAnpF,KAAAgiG,kBAAAhiG,KAAAgiG,mBAEAhiG,MAOAshG,kBAAA,WACA,OAAAlvD,EAAAlkB,KAAAwxB,iBAAA1/C,OAOAuhG,qBAAA,WACA,IAAA3sB,EAAA50E,KAAAy0E,iBACA,OAAA,EAAA,EAAA,EAAA,EAAAG,EAAAtxC,EAAAsxC,EAAArxC,IAGA0+D,mBAAA,SAAA1Z,GACA,IAAA7wE,EAAA,GAIA,OAHA6wE,GAAAvoF,KAAA2xE,QACAj6D,EAAA1X,KAAA2xE,MAAAswB,mBAAA1Z,GAFA,KAIA7wE,EAAA1X,KAAAg/B,IAJA,IAIAh/B,KAAAy4B,KAJA,IAIAz4B,KAAAo/C,OAJA,IAIAp/C,KAAAq/C,OAJA,IAKAr/C,KAAAs/C,MALA,IAKAt/C,KAAAu/C,MALA,IAKAv/C,KAAAo5C,MALA,IAKAp5C,KAAAw8E,QALA,IAKAx8E,KAAAy8E,QALA,IAMAz8E,KAAA8gC,MANA,IAMA9gC,KAAA+gC,OANA,IAMA/gC,KAAAw7E,YAAAx7E,KAAA8/C,MAAA9/C,KAAA+/C,OASAob,oBAAA,SAAAotB,GACA,GAAAA,EACA,OAAAvoF,KAAA24F,gBAEA,IAAA55F,EAAAiB,KAAAiiG,qBAAA75F,EAAApI,KAAA6/F,cAAA7/F,KAAA6/F,gBACA,GAAAz3F,EAAArJ,MAAAA,EACA,OAAAqJ,EAAA3N,MAEA,IAAA0lD,EAAAngD,KAAA24F,gBAMA,OALA34F,KAAA2xE,QACAxxB,EAAAs/C,EAAAz/F,KAAA2xE,MAAAxW,sBAAAhb,IAEA/3C,EAAArJ,IAAAA,EACAqJ,EAAA3N,MAAA0lD,EACAA,GAQAw4C,cAAA,WACA,IAAA55F,EAAAiB,KAAAiiG,oBAAA,GAAA75F,EAAApI,KAAA4/F,iBAAA5/F,KAAA4/F,mBACA,GAAAx3F,EAAArJ,MAAAA,EACA,OAAAqJ,EAAA3N,MAEA,IAAAynG,EAAAliG,KAAAuhG,uBAKA,OAJAvhG,KAAAw/C,WAAA0iD,EAAA,GACAliG,KAAAy/C,WAAAyiD,EAAA,GACA95F,EAAArJ,IAAAA,EACAqJ,EAAA3N,MAAA23C,EAAAlkB,KAAAgyB,cAAAlgD,MACAoI,EAAA3N,OAWA0nG,+BAAA,SAAA7iD,EAAAC,EAAA6iD,GACA,OAAAhwD,EAAAlkB,KAAA0xB,sBACAN,MAAAA,EACAC,MAAAA,EACAH,OAAAp/C,KAAAo/C,QAAAgjD,GAAApiG,KAAA8/C,OAAA,EAAA,GACAT,OAAAr/C,KAAAq/C,QAAA+iD,GAAApiG,KAAA+/C,OAAA,EAAA,MAUAg7C,6BAAA,WACA,IAAAvf,EAAAx7E,KAAAw7E,YACAxnE,EAAAhU,KAAA8gC,MAAA06C,EACA1c,EAAA9+D,KAAA+gC,OAAAy6C,EACA,OAAAl4C,EAAAtvB,EAAAuvB,EAAAu7B,IAaAwmB,0BAAA,SAAAhmC,EAAAC,QACA,IAAAD,IACAA,EAAAt/C,KAAAs/C,YAEA,IAAAC,IACAA,EAAAv/C,KAAAu/C,OAEA,IAAA8iD,EAAAC,EAAA77D,EAAAzmC,KAAA+6F,+BACAwH,EAAA,IAAAjjD,GAAA,IAAAC,EAUA,GARAv/C,KAAAy2F,eACA4L,EAAAriG,KAAA8gC,MACAwhE,EAAAtiG,KAAA+gC,SAGAshE,EAAA57D,EAAAnD,EACAg/D,EAAA77D,EAAAlD,GAEAg/D,EACA,OAAAviG,KAAAwiG,oBAAAH,EAAAriG,KAAAo/C,OAAAkjD,EAAAtiG,KAAAq/C,QAMA,IAAA3E,IAEApX,IALA++D,GAAA,GAMA9+D,IALA++D,GAAA,KAQAh/D,EAAA++D,EACA9+D,GAAA++D,IAGAh/D,GAAA++D,EACA9+D,EAAA++D,IAGAh/D,EAAA++D,EACA9+D,EAAA++D,IAEAtwC,EAAA5f,EAAAlkB,KAAA0xB,sBACAR,OAAAp/C,KAAAo/C,OACAC,OAAAr/C,KAAAq/C,OACAC,MAAAA,EACAC,MAAAA,IAEAkjD,EAAArwD,EAAAlkB,KAAAusB,0BAAAC,EAAAsX,GACA,OAAAhyD,KAAAwiG,oBAAAC,EAAA3hE,MAAA2hE,EAAA1hE,SAWAyhE,oBAAA,SAAA1hE,EAAAC,GACA,OAAA/gC,KAAAy2F,eACAnzD,EAAAxC,EAAA9gC,KAAAw7E,YAAAj4C,EAAAxC,EAAA/gC,KAAAw7E,cAEAl4C,EAAAxC,EAAAyC,EAAAxC,IAMA2hE,4BAAA,WACA,IAAAlxB,EAAAxxE,KAAAu5F,uBACAlU,EAAArlF,KAAAslF,4BACAp3E,EAAAkkC,EAAAlkB,KAAAosB,eAAA+qC,EAAA7T,GAAA,GAEA,OAAAtjE,EAAAqtD,UAAA,EAAAv7D,KAAAunF,YAlpBA,GAwpBAn1C,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAt2C,OAAAE,WAOAo7E,WAAA,WAOA,OANAp3E,KAAA2xE,MACAv/B,EAAAm7B,aAAAvxE,UAAAo7E,WAAA98E,KAAA0F,KAAA2xE,MAAA3xE,MAGAA,KAAAqzC,OAAA+jC,WAAAp3E,MAEAA,MAQAu3E,aAAA,WAOA,OANAv3E,KAAA2xE,MACAv/B,EAAAm7B,aAAAvxE,UAAAu7E,aAAAj9E,KAAA0F,KAAA2xE,MAAA3xE,MAGAA,KAAAqzC,OAAAkkC,aAAAv3E,MAEAA,MASAw3E,cAAA,SAAAC,GAOA,OANAz3E,KAAA2xE,MACAv/B,EAAAm7B,aAAAvxE,UAAAw7E,cAAAl9E,KAAA0F,KAAA2xE,MAAA3xE,KAAAy3E,GAGAz3E,KAAAqzC,OAAAmkC,cAAAx3E,KAAAy3E,GAEAz3E,MASAg4E,aAAA,SAAAP,GAOA,OANAz3E,KAAA2xE,MACAv/B,EAAAm7B,aAAAvxE,UAAAg8E,aAAA19E,KAAA0F,KAAA2xE,MAAA3xE,KAAAy3E,GAGAz3E,KAAAqzC,OAAA2kC,aAAAh4E,KAAAy3E,GAEAz3E,MASAm+C,OAAA,SAAAr9C,GAOA,OANAd,KAAA2xE,OAAA,oBAAA3xE,KAAA2xE,MAAAz3E,KACAk4C,EAAAm7B,aAAAvxE,UAAAmiD,OAAA7jD,KAAA0F,KAAA2xE,MAAA3xE,KAAAc,GAGAd,KAAAqzC,OAAA8K,OAAAn+C,KAAAc,GAEAd,QAMA,WACA,SAAA2iG,EAAAjgG,EAAAjI,GACA,GAAAA,EAGA,CAAA,GAAAA,EAAA+wE,OACA,OAAA9oE,EAAA,gBAAAjI,EAAAyO,GAAA,MAGA,IAAAglD,EAAA,IAAA9b,EAAA0b,MAAArzD,GACAqW,EAAApO,EAAA,KAAAwrD,EAAA8Q,QAAA,KACA/jC,EAAAizB,EAAA6J,WAKA,OAJA,IAAA98B,IAEAnqB,GAAApO,EAAA,aAAAu4B,EAAAhhC,WAAA,MAEA6W,EAbA,OAAApO,EAAA,WAiBA,IAAAwvC,EAAAE,EAAAlkB,KAAAgkB,QAEAE,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAt2C,OAAAE,WAMA4mG,aAAA,SAAAC,GAEA,IAAAhoC,EAAA76D,KAAA66D,SAAA76D,KAAA66D,SAAA,UACA2gB,EAAAx7E,KAAAw7E,YAAAx7E,KAAAw7E,YAAA,IACA3C,EAAA74E,KAAA64E,gBAAA74E,KAAA64E,gBAAA1rE,KAAA,KAAA,OACA2oF,EAAA91F,KAAA81F,iBAAA91F,KAAA81F,iBAAA,IACApd,EAAA14E,KAAA04E,cAAA14E,KAAA04E,cAAA,OACAC,EAAA34E,KAAA24E,eAAA34E,KAAA24E,eAAA,QACAC,EAAA54E,KAAA44E,iBAAA54E,KAAA44E,iBAAA,IACA39C,OAAA,IAAAj7B,KAAAi7B,QAAAj7B,KAAAi7B,QAAA,IACA2P,EAAA5qC,KAAAiiB,QAAA,GAAA,uBACApf,EAAAggG,EAAA,GAAA7iG,KAAA8iG,eACA7rD,EAAA0rD,EAAA,OAAA3iG,KAAAi3C,MACA2a,EAAA+wC,EAAA,SAAA3iG,KAAA4xD,QAEA,OACAA,EACA,iBAAA4pB,EAAA,KACA,qBAAA3C,EAAA,KACA,mBAAAH,EAAA,KACA,sBAAAod,EAAA,KACA,oBAAAnd,EAAA,KACA,sBAAAC,EAAA,KACA3hC,EACA,cAAA4jB,EAAA,KACA,YAAA5/B,EAAA,IACAp4B,EACA+nC,GACAz9B,KAAA,KASA41F,iBAAA,SAAApmF,EAAAqmF,GACA,IACA7hD,EAAAxkC,EAAAwkC,WACA,kBAAA,IAAAxkC,EAAAwkC,WAAAx/C,QAAA,OAAA,IAAAgb,EAAAwkC,WAAAx/C,QAAA,KACA,IAAAgb,EAAAwkC,WAAA,IAAAxkC,EAAAwkC,YAHA,KAGA,GACAq6B,EAAA7+D,EAAA6+D,YAAA,iBAAA7+D,EAAA6+D,YAJA,KAIA,GACAr6B,EAAAA,EACA9F,EAAA1+B,EAAA0+B,SAAA,cAAA1+B,EAAA0+B,SAAA,OAAA,GACAyb,EAAAn6C,EAAAm6C,UAAA,eAAAn6C,EAAAm6C,UAPA,KAOA,GACAC,EAAAp6C,EAAAo6C,WAAA,gBAAAp6C,EAAAo6C,WARA,KAQA,GACA9f,EAAAt6B,EAAAs6B,KAAA0rD,EAAA,OAAAhmF,EAAAs6B,MAAA,GACA2a,EAAAj1C,EAAAi1C,OAAA+wC,EAAA,SAAAhmF,EAAAi1C,QAAA,GACAqxC,EAAAjjG,KAAAkjG,qBAAAvmF,GACAwmF,EAAAxmF,EAAAwmF,OAAA,oBAAAxmF,EAAAwmF,OAAA,KAAA,GAKA,OAJAF,IACAA,EAAA,oBAAAA,EAdA,OAkBArxC,EACA4pB,EACAr6B,EACA9F,EACAyb,EACAC,EACAksC,EACAhsD,EACAksD,EACAH,EAAA,qBAAA,IACA71F,KAAA,KAQA+1F,qBAAA,SAAAvmF,GACA,MAAA,aAAAA,GAAA,cAAAA,GAAA,gBAAAA,GACAA,EAAAymF,SAAA,YAAA,KACAzmF,EAAA0mF,UAAA,aAAA,KAAA1mF,EAAA2mF,YAAA,gBAAA,IAEA,IAOAR,aAAA,WACA,OAAA9iG,KAAAitE,OAAA,sBAAAjtE,KAAAitE,OAAA/jE,GAAA,KAAA,IAOAq6F,cAAA,WACA,OACAvjG,KAAAkJ,GAAA,OAAAlJ,KAAAkJ,GAAA,KAAA,GACAlJ,KAAAk7D,SAAA,mBAAAl7D,KAAAk7D,SAAA6a,WAAA,MAAA,IACA5oE,KAAA,KAQAq2F,gBAAA,SAAAC,EAAAv4B,GACA,IAAAl0D,EAAAysF,EAAAzjG,KAAAm7D,sBAAAn7D,KAAA24F,gBACA+K,EAAA,cAAAtxD,EAAAlkB,KAAA0zB,YAAA5qC,GACA,OAAA0sF,GACAx4B,GAAA,IAAAlrE,KAAA2jG,wBAAA,MAOAA,sBAAA,WACA,OAAA3jG,KAAAgyD,gBAAA,IAAA5f,EAAAlkB,KAAA0zB,YAAA5hD,KAAAgyD,iBAAA,IAGA4xC,UAAA,SAAAC,GACA,GAAA7jG,KAAA6tE,gBAAA,CACA,IAAAhsB,EAAAzP,EAAAt2C,OAAA+lD,oBACAgiD,EAAA7kG,KACA,aACAgB,KAAA8jG,mBAAA9jG,KAAA6tE,iBACA,OACA37B,GAAAlyC,KAAA8gC,MAAA,EAAA+gB,GACA,QACA3P,GAAAlyC,KAAA+gC,OAAA,EAAA8gB,GACA,YACA3P,EAAAlyC,KAAA8gC,MAAA+gB,GACA,aACA3P,EAAAlyC,KAAA+gC,OAAA8gB,GACA,iBASAgpB,MAAA,SAAAtuB,GACA,OAAAv8C,KAAA+jG,qBAAA/jG,KAAAgkG,OAAAznD,IAAAA,QAAAA,KAQAk6B,cAAA,SAAAl6B,GACA,MAAA,KAAAv8C,KAAAikG,6BAAAjkG,KAAAgkG,OAAAznD,IAAAA,QAAAA,KAMA0nD,6BAAA,SAAAC,EAAAh/F,GAEA,IAAAq3C,GADAr3C,EAAAA,OACAq3C,QACA2uB,EAAAhmE,EAAAgmE,qBAAA,GACAi5B,GACAnkG,KAAAwjG,iBAAA,EAAAt4B,GACAlrE,KAAAujG,iBACAp2F,KAAA,IAEArM,EAAAojG,EAAAviG,QAAA,gBAEA,OADAuiG,EAAApjG,GAAAqjG,EACA5nD,EAAAA,EAAA2nD,EAAA/2F,KAAA,KAAA+2F,EAAA/2F,KAAA,KAMA42F,qBAAA,SAAAG,EAAAh/F,GAEA,IAQAi/F,EAAAC,EARAC,GADAn/F,EAAAA,OACAm/F,QACA9nD,EAAAr3C,EAAAq3C,QACA+nD,EAAAD,EAAA,GAAA,UAAArkG,KAAA4iG,eAAA,KACA2B,EAAAr/F,EAAAs/F,WAAA,UAAAxkG,KAAA8iG,eAAA,KAAA,GACA5nC,EAAAl7D,KAAAk7D,SACAupC,EAAAzkG,KAAAy2F,cAAA,sCAAA,GACAiO,EAAAxpC,GAAAA,EAAA67B,mBACAnlC,EAAA5xD,KAAA4xD,OAAA3a,EAAAj3C,KAAAi3C,KAAAg2B,EAAAjtE,KAAAitE,OACAnC,KAEAhqE,EAAAojG,EAAAviG,QAAA,gBACAupE,EAAAhmE,EAAAgmE,oBAwCA,OAvCAhQ,IACAA,EAAA6a,WAAA,YAAA3jC,EAAAt2C,OAAAs6D,QACAguC,EAAA,iBAAAlpC,EAAA6a,WAAA,QACA7a,EAAAub,cAAAl6B,GACA,iBAEAmoD,GACA55B,EAAA9rE,KACA,MAAAulG,EAAAvkG,KAAAujG,gBAAA,QAGAz4B,EAAA9rE,KACA,MACAgB,KAAAwjG,iBAAA,GACAkB,EAAA,GAAAH,EAAAvkG,KAAAujG,gBACA,QAEAY,GACAG,EACAG,EACAJ,EAAA,GAAArkG,KAAA2kG,gBAAA,IACAz5B,EAAA,cAAAA,EAAA,KAAA,IACA/9D,KAAA,IACA+2F,EAAApjG,GAAAqjG,EACAltD,GAAAA,EAAAu0B,QACAV,EAAA9rE,KAAAi4C,EAAA4zB,MAAA7qE,OAEA4xD,GAAAA,EAAA4Z,QACAV,EAAA9rE,KAAA4yD,EAAAiZ,MAAA7qE,OAEAitE,GACAnC,EAAA9rE,KAAAiuE,EAAApC,MAAA7qE,OAEAk7D,GACA4P,EAAA9rE,KAAAolG,GAEAt5B,EAAA9rE,KAAAklG,EAAA/2F,KAAA,KACA29D,EAAA9rE,KAAA,UACA0lG,GAAA55B,EAAA9rE,KAAA,UACAu9C,EAAAA,EAAAuuB,EAAA39D,KAAA,KAAA29D,EAAA39D,KAAA,KAGAw3F,cAAA,WACA,MAAA,SAAA3kG,KAAA22F,WAAA,iBAAA32F,KAAA22F,WAAA,KAAA,MAtQA,GA6QA,WAEA,IAAAx1F,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OAMA,SAAAyjG,EAAAzoG,EAAAohD,EAAAx4C,GACA,IAAA8/F,KACA9/F,EAAA5K,QAAA,SAAAuI,GACAmiG,EAAAniG,GAAAvG,EAAAuG,KAEAvB,EAAAhF,EAAAohD,GAAAsnD,GAJA,GA+CAzyD,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAt2C,OAAAE,WAOAi0F,gBAAA,SAAA+J,GAEA,IAAA8K,EAAA,KADA9K,EAAAA,GA7DA,mBA+DA,OAAAl+F,OAAAgD,KAAAkB,KAAA8kG,IAAAvrG,OAAAyG,KAAAg6F,GAAAzgG,SAlDA,SAAAwrG,EAAAC,EAAAC,EAAAC,GACA,GAAAF,IAAAC,EAEA,OAAA,EAEA,GAAA7pG,MAAAH,QAAA+pG,GAAA,CACA,IAAA5pG,MAAAH,QAAAgqG,IAAAD,EAAAzrG,SAAA0rG,EAAA1rG,OACA,OAAA,EAEA,IAAA,IAAAE,EAAA,EAAAyY,EAAA8yF,EAAAzrG,OAAAE,EAAAyY,EAAAzY,IACA,IAAAsrG,EAAAC,EAAAvrG,GAAAwrG,EAAAxrG,IACA,OAAA,EAGA,OAAA,EAEA,GAAAurG,GAAA,iBAAAA,EAAA,CACA,IAAAjmG,EAAAD,EAAAhD,OAAAgD,KAAAkmG,GACA,IAAAC,GACA,iBAAAA,IACAC,GAAApmG,EAAAvF,SAAAuC,OAAAgD,KAAAmmG,GAAA1rG,OAEA,OAAA,EAEA,IAAA,IAAAE,EAAA,EAAAyY,EAAApT,EAAAvF,OAAAE,EAAAyY,EAAAzY,IAIA,GAAA,YAHAsF,EAAAD,EAAArF,MAMAsrG,EAAAC,EAAAjmG,GAAAkmG,EAAAlmG,IACA,OAAA,EAGA,OAAA,GAkBAgmG,CAAA/kG,KAAA8kG,GAAA9kG,MAAA,IAQA0wF,UAAA,SAAAxrF,GACA,IAAA80F,EAAA90F,GAAAA,EAAA80F,aA3EA,kBA4EAz8C,EAAA,IAAAy8C,EACA,OAAAh6F,KAAAu9C,IAGAqnD,EAAA5kG,KAAAu9C,EAAAv9C,KAAAg6F,IACA90F,GAAAA,EAAA0xF,iBACAgO,EAAA5kG,KAAAu9C,EAAAr4C,EAAA0xF,iBAEA52F,MANAA,KAAAmyE,WAAAjtE,IAcAitE,WAAA,SAAAjtE,GAEA,IAAA80F,GADA90F,EAAAA,OACA80F,aA9FA,kBAkGA,OAHA90F,EAAA80F,YAAAA,EACAh6F,KAAA,IAAAg6F,MACAh6F,KAAA0wF,UAAAxrF,GACAlF,QArGA,GA2GA,WAEA,IAAA+xC,EAAAK,EAAAlkB,KAAA6jB,iBAEAK,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAt2C,OAAAE,WAMAmpG,oBAAA,KAQAljB,kBAAA,SAAA5H,GAGA,IAAAr6E,KAAAk2F,aAAAl2F,KAAA2xE,QAAA3xE,KAAAqzC,QAAArzC,KAAAqzC,OAAAq+B,gBAAA1xE,KACA,OAAA,EAGA,IAEA26C,EACA0lD,EAHArvD,EAAAqpC,EAAA/2C,EACAmgD,EAAApJ,EAAA92C,EAIA,IAAA,IAAA9pC,KADAuG,KAAA6vF,SAAA,EACA7vF,KAAA0/F,QAEA,GAAA1/F,KAAAolG,iBAAA3rG,KAIA,QAAAA,GAAAuG,KAAAmyF,qBAIAnyF,KAAAiJ,IAAA,mBACA,OAAAxP,GAAA,OAAAA,GAAA,OAAAA,GAAA,OAAAA,KAIA4mG,EAAArgG,KAAAsgG,eAAAtgG,KAAA0/F,QAAAjmG,GAAA4pF,QAiBA,KADA1oC,EAAA36C,KAAAugG,kBAAAj9D,EAAA0N,EAAAzN,EAAAkgD,GAAA4c,KACA1lD,EAAA,GAAA,GAEA,OADA36C,KAAA6vF,SAAAp2F,EACAA,EAGA,OAAA,GAQAuoG,iBAAA,WACA,IAOA1+D,EAAAC,EAPAnD,EAAApgC,KAAA0/F,QACA2F,EAAAtzD,EAAA,GAAA/xC,KAAAo5C,OAGAksD,EAAA,QAAAtlG,KAAAu1F,WACAgQ,EAAAD,EAAAlzD,EAAAlkB,KAAAirB,IAAAksD,GACAG,EAAAF,EAAAlzD,EAAAlkB,KAAAorB,IAAA+rD,GAGA,IAAA,IAAAvrD,KAAA1Z,EACAkD,EAAAlD,EAAA0Z,GAAAxW,EACAC,EAAAnD,EAAA0Z,GAAAvW,EACAnD,EAAA0Z,GAAAupC,QACAvQ,IACAxvC,EAAAA,EAAAkiE,EACAjiE,EAAAA,EAAAgiE,GAEA7nF,IACA4lB,EAAAA,EAAAiiE,EACAhiE,EAAAA,EAAAiiE,GAEAxyB,IACA1vC,EAAAA,EAAAiiE,EACAhiE,EAAAA,EAAAiiE,GAEAzyB,IACAzvC,EAAAA,EAAAkiE,EACAjiE,EAAAA,EAAAgiE,KAeA5L,wBAAA,SAAAlpF,GACA,IAAAzQ,KAAA4iF,0BACA5iF,KAAAqzC,SAAArzC,KAAAqzC,OAAAy7B,aACA9uE,KAAAqzC,QAAArzC,KAAAqzC,OAAAq+B,gBAAA1xE,KAEA,OAAAA,KAEAyQ,EAAAytC,OACA,IAAA02B,EAAA50E,KAAAy0E,iBAAAgxB,EAAAzlG,KAAA0iG,8BACAlxB,EAAAxxE,KAAAqzC,OAAAg7B,kBAOA,OANA59D,EAAA+iC,UAAAohC,EAAAtxC,EAAAsxC,EAAArxC,GACA9yB,EAAAy5B,MAAA,EAAAsnC,EAAA,GAAA,EAAAA,EAAA,IACA/gE,EAAA2tC,OAAArM,EAAA/xC,KAAAo5C,QACA3oC,EAAA4jE,UAAAr0E,KAAA4iF,yBACAnyE,EAAAqtE,UAAA2nB,EAAAniE,EAAA,GAAAmiE,EAAAliE,EAAA,EAAAkiE,EAAAniE,EAAAmiE,EAAAliE,GACA9yB,EAAA4tC,UACAr+C,MAYAs7F,YAAA,SAAA7qF,EAAA4qF,GACAA,EAAAA,MACA,IAAAoK,EAAAzlG,KAAA0iG,8BACAlnB,EAAA,EAAAx7E,KAAAg2F,kBACAl1D,EAAA2kE,EAAAniE,EAAAk4C,EACAz6C,EAAA0kE,EAAAliE,EAAAi4C,EACAkqB,OAAA,IAAArK,EAAAlJ,iBACAkJ,EAAAlJ,iBAAAnyF,KAAAmyF,iBACA+D,OAAA,IAAAmF,EAAAnF,YACAmF,EAAAnF,YAAAl2F,KAAAk2F,YACAC,OAAA,IAAAkF,EAAAlF,oBACAkF,EAAAlF,oBAAAn2F,KAAAm2F,oBAaA,GAXA1lF,EAAAytC,OACAztC,EAAAsoE,YAAAsiB,EAAA7F,aAAAx1F,KAAAw1F,YACAx1F,KAAAooF,aAAA33E,EAAA4qF,EAAA5F,iBAAAz1F,KAAAy1F,gBAAA,MAEAhlF,EAAA43E,YACAvnD,EAAA,GACAC,EAAA,EACAD,EACAC,GAGA2kE,GAAA1lG,KAAAolG,iBAAA,QAAAlP,EAAA,CAEA,IAAAyP,GAAA5kE,EAAA,EAEAtwB,EAAAquC,YACAruC,EAAA0tC,OAAA,EAAAwnD,GACAl1F,EAAA0jE,OAAA,EAAAwxB,EAAAxP,GACA1lF,EAAAmhD,SAIA,OADAnhD,EAAA4tC,UACAr+C,MAaAw7F,mBAAA,SAAA/qF,EAAAvL,EAAAm2F,GACAA,EAAAA,MACA,IAAAntF,EAAAlO,KAAA+6F,+BACA56C,EAAA/N,EAAAlkB,KAAAgyB,eACAd,OAAAl6C,EAAAk6C,OACAC,OAAAn6C,EAAAm6C,OACAC,MAAAp6C,EAAAo6C,QAEAmmD,EAAArzD,EAAAlkB,KAAAosB,eAAApsC,EAAAiyC,GACAq7B,EAAA,EAAAx7E,KAAAg2F,kBACAl1D,EAAA2kE,EAAAniE,EAAAk4C,EACAz6C,EAAA0kE,EAAAliE,EAAAi4C,EAcA,OAZA/qE,EAAAytC,OACAl+C,KAAAooF,aAAA33E,EAAA4qF,EAAA5F,iBAAAz1F,KAAAy1F,gBAAA,MACAhlF,EAAAsoE,YAAAsiB,EAAA7F,aAAAx1F,KAAAw1F,YAEA/kF,EAAA43E,YACAvnD,EAAA,GACAC,EAAA,EACAD,EACAC,GAGAtwB,EAAA4tC,UACAr+C,MAYAozE,aAAA,SAAA3iE,EAAA4qF,GACAA,EAAAA,MACA,IAAAoK,EAAAzlG,KAAA0iG,8BACA5hE,EAAA2kE,EAAAniE,EACAvC,EAAA0kE,EAAAliE,EACAqiE,EAAAvK,EAAA9F,YAAAv1F,KAAAu1F,WACA98D,IAAAqI,EAAA8kE,GAAA,EACA5mE,IAAA+B,EAAA6kE,GAAA,EACA7iB,OAAA,IAAAsY,EAAAtY,mBACAsY,EAAAtY,mBAAA/iF,KAAA+iF,mBACAoP,OAAA,IAAAkJ,EAAAlJ,iBACAkJ,EAAAlJ,iBAAAnyF,KAAAmyF,iBACApoF,EAAAg5E,EAAA,SAAA,OA6DA,OA3DAtyE,EAAAytC,OACAztC,EAAAsoE,YAAAtoE,EAAA4jE,UAAAgnB,EAAA3F,aAAA11F,KAAA01F,YACA11F,KAAA+iF,qBACAtyE,EAAAsoE,YAAAsiB,EAAA1F,mBAAA31F,KAAA21F,mBAEA31F,KAAAooF,aAAA33E,EAAA4qF,EAAAxF,iBAAA71F,KAAA61F,gBAAA,MAGA71F,KAAA6lG,aAAA,KAAAp1F,EAAA1G,EACA0uB,EACAuG,EAAAq8D,GAGAr7F,KAAA6lG,aAAA,KAAAp1F,EAAA1G,EACA0uB,EAAAqI,EACA9B,EAAAq8D,GAGAr7F,KAAA6lG,aAAA,KAAAp1F,EAAA1G,EACA0uB,EACAuG,EAAA+B,EAAAs6D,GAGAr7F,KAAA6lG,aAAA,KAAAp1F,EAAA1G,EACA0uB,EAAAqI,EACA9B,EAAA+B,EAAAs6D,GAEAr7F,KAAAiJ,IAAA,oBAGAjJ,KAAA6lG,aAAA,KAAAp1F,EAAA1G,EACA0uB,EAAAqI,EAAA,EACA9B,EAAAq8D,GAGAr7F,KAAA6lG,aAAA,KAAAp1F,EAAA1G,EACA0uB,EAAAqI,EAAA,EACA9B,EAAA+B,EAAAs6D,GAGAr7F,KAAA6lG,aAAA,KAAAp1F,EAAA1G,EACA0uB,EAAAqI,EACA9B,EAAA+B,EAAA,EAAAs6D,GAGAr7F,KAAA6lG,aAAA,KAAAp1F,EAAA1G,EACA0uB,EACAuG,EAAA+B,EAAA,EAAAs6D,IAIAlJ,GACAnyF,KAAA6lG,aAAA,MAAAp1F,EAAA1G,EACA0uB,EAAAqI,EAAA,EACA9B,EAAAh/B,KAAAm2F,oBAAAkF,GAGA5qF,EAAA4tC,UAEAr+C,MAMA6lG,aAAA,SAAAC,EAAAr1F,EAAA1G,EAAA0uB,EAAAuG,EAAAq8D,GAEA,GADAA,EAAAA,MACAr7F,KAAAolG,iBAAAU,GAAA,CAGA,IAAAr3E,EAAAzuB,KAAAu1F,WAAA3jC,GAAA5xD,KAAA+iF,oBAAA/iF,KAAA21F,kBACA,OAAA0F,EAAAzF,aAAA51F,KAAA41F,aACA,IAAA,SACAnlF,EAAAquC,YACAruC,EAAAyrE,IAAAzjD,EAAAhK,EAAA,EAAAuQ,EAAAvQ,EAAA,EAAAA,EAAA,EAAA,EAAA,EAAAnlB,KAAA4vC,IAAA,GACAzoC,EAAA1G,KACA6nD,GACAnhD,EAAAmhD,SAEA,MACA,QACA5xD,KAAA+iF,oBAAAtyE,EAAA4hE,UAAA55C,EAAAuG,EAAAvQ,EAAAA,GACAhe,EAAA1G,EAAA,QAAA0uB,EAAAuG,EAAAvQ,EAAAA,GACAmjC,GACAnhD,EAAA43E,WAAA5vD,EAAAuG,EAAAvQ,EAAAA,MAUA22E,iBAAA,SAAAW,GACA,OAAA/lG,KAAAgmG,yBAAAD,IAUAE,kBAAA,SAAAF,EAAA9jF,GAEA,OADAjiB,KAAAgmG,yBAAAD,GAAA9jF,EACAjiB,MAkBAkmG,sBAAA,SAAAhhG,GAGA,IAAA,IAAAgJ,KAFAhJ,IAAAA,MAEAA,EACAlF,KAAAimG,kBAAA/3F,EAAAhJ,EAAAgJ,IAEA,OAAAlO,MAQAgmG,uBAAA,WAcA,OAbAhmG,KAAAmlG,sBACAnlG,KAAAmlG,qBACAryB,IAAA,EACAp1D,IAAA,EACAq1D,IAAA,EACAC,IAAA,EACA0Y,IAAA,EACAjmC,IAAA,EACAgmC,IAAA,EACAvjD,IAAA,EACA45D,KAAA,IAGA9hG,KAAAmlG,qBASApa,WAAA,aAWAD,SAAA,eAlaA,GAyaA14C,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAm7B,aAAAvxE,WAOAmqG,YAAA,IAWAC,gBAAA,SAAAlrG,EAAAmrG,GAGA,IAAAxlF,EAAA,aACA6qC,GAHA26C,EAAAA,OAGA36C,YAAA7qC,EACAksC,EAAAs5C,EAAAt5C,UAAAlsC,EACA4mC,EAAAznD,KAiBA,OAfAoyC,EAAAlkB,KAAA2a,SACAmkB,WAAA9xD,EAAAu9B,KACAw0B,SAAAjtD,KAAAs0E,YAAA77C,KACAsQ,SAAA/oC,KAAAmmG,YACAp5C,SAAA,SAAAtyD,GACAS,EAAA+c,IAAA,OAAAxd,GACAgtD,EAAA/P,mBACAqV,KAEArB,WAAA,WACAxwD,EAAA02E,YACAlmB,OAIA1rD,MAYAsmG,gBAAA,SAAAprG,EAAAmrG,GAGA,IAAAxlF,EAAA,aACA6qC,GAHA26C,EAAAA,OAGA36C,YAAA7qC,EACAksC,EAAAs5C,EAAAt5C,UAAAlsC,EACA4mC,EAAAznD,KAiBA,OAfAoyC,EAAAlkB,KAAA2a,SACAmkB,WAAA9xD,EAAA8jC,IACAiuB,SAAAjtD,KAAAs0E,YAAAt1C,IACA+J,SAAA/oC,KAAAmmG,YACAp5C,SAAA,SAAAtyD,GACAS,EAAA+c,IAAA,MAAAxd,GACAgtD,EAAA/P,mBACAqV,KAEArB,WAAA,WACAxwD,EAAA02E,YACAlmB,OAIA1rD,MAYAumG,SAAA,SAAArrG,EAAAmrG,GAGA,IAAAxlF,EAAA,aACA6qC,GAHA26C,EAAAA,OAGA36C,YAAA7qC,EACAksC,EAAAs5C,EAAAt5C,UAAAlsC,EACA4mC,EAAAznD,KAiBA,OAfAoyC,EAAAlkB,KAAA2a,SACAmkB,WAAA9xD,EAAA+/B,QACAgyB,SAAA,EACAlkB,SAAA/oC,KAAAmmG,YACAp5C,SAAA,SAAAtyD,GACAS,EAAA+c,IAAA,UAAAxd,GACAgtD,EAAA/P,mBACAqV,KAEArB,WAAA,WACAjE,EAAA/9C,OAAAxO,GACAwwD,OAIA1rD,QAIAoyC,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAt2C,OAAAE,WAoBA6sC,QAAA,WACA,GAAAnpC,UAAA,IAAA,iBAAAA,UAAA,GAAA,CACA,IAAAgD,EAAA8jG,EAAAC,KACA,IAAA/jG,KAAAhD,UAAA,GACA+mG,EAAAznG,KAAA0D,GAEA,IAAA,IAAAjJ,EAAA,EAAAyY,EAAAu0F,EAAAltG,OAAAE,EAAAyY,EAAAzY,IACAiJ,EAAA+jG,EAAAhtG,GACA+sG,EAAA/sG,IAAAyY,EAAA,EACAlS,KAAA0mG,SAAAhkG,EAAAhD,UAAA,GAAAgD,GAAAhD,UAAA,GAAA8mG,QAIAxmG,KAAA0mG,SAAA3mG,MAAAC,KAAAN,WAEA,OAAAM,MAUA0mG,SAAA,SAAAx5E,EAAA6xE,EAAA75F,EAAAshG,GACA,IAAAG,EAAAl/C,EAAAznD,KAEA++F,EAAAA,EAAA9kG,WAMAiL,EAJAA,EAIAktC,EAAAlkB,KAAAhzB,OAAAwF,MAAAwE,OAGAgoB,EAAAvrB,QAAA,OACAglG,EAAAz5E,EAAA5zB,MAAA,MAGA,IAAA2rG,EAAA0B,EACA3mG,KAAAiJ,IAAA09F,EAAA,IAAAA,EAAA,IACA3mG,KAAAiJ,IAAAikB,GAEA,SAAAhoB,IACAA,EAAAsS,KAAAytF,GAIAlG,GADAA,EAAAp9F,QAAA,KACAsjG,EAAAvqF,WAAAqkF,EAAAjhG,QAAA,IAAA,KAGA4c,WAAAqkF,GAGA3sD,EAAAlkB,KAAA2a,SACAmkB,WAAA9nD,EAAAsS,KACAy1C,SAAA8xC,EACA7xC,QAAAhoD,EAAAk/E,GACA36C,OAAAvkC,EAAAukC,OACAV,SAAA7jC,EAAA6jC,SACA5U,MAAAjvB,EAAAivB,OAAA,WACA,OAAAjvB,EAAAivB,MAAA75B,KAAAmtD,IAEAsF,SAAA,SAAAtyD,EAAAmsG,EAAAC,GACAF,EACAl/C,EAAAk/C,EAAA,IAAAA,EAAA,IAAAlsG,EAGAgtD,EAAAxvC,IAAAiV,EAAAzyB,GAEA+rG,GAGAthG,EAAA6nD,UAAA7nD,EAAA6nD,SAAAtyD,EAAAmsG,EAAAC,IAEAn7C,WAAA,SAAAjxD,EAAAmsG,EAAAC,GACAL,IAIA/+C,EAAAmqB,YACA1sE,EAAAwmD,YAAAxmD,EAAAwmD,WAAAjxD,EAAAmsG,EAAAC,UAOA,SAAApzF,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAjxC,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OACAT,EAAA0xC,EAAAlkB,KAAAhzB,OAAAwF,MACAomG,GAAA/hD,GAAA,EAAAtH,GAAA,EAAAuH,GAAA,EAAAtH,GAAA,GACA23C,EAAAjjD,EAAAm7B,aAAA8K,SAAA,eAqTA,SAAA0uB,EAAAC,EAAAC,GACA,IAAA9qG,EAAA6qG,EAAA7qG,OACA+qG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MACAtmE,EAAAmmE,EAAAnmE,UACAumE,EAAAH,EAAAG,QACAxyB,EAAAqyB,EAAAryB,OACAyyB,EAAAJ,EAAAI,SAEA,OAAA,WACA,OAAArnG,KAAAiJ,IAAA9M,IACA,KAAAirG,EACA,OAAA99F,KAAAwoC,IAAA9xC,KAAAiJ,IAAAi+F,GAAAlnG,KAAAiJ,IAAAk+F,IACA,KAAAvyB,EACA,OAAAtrE,KAAAwoC,IAAA9xC,KAAAiJ,IAAAi+F,GAAAlnG,KAAAiJ,IAAAk+F,IAAA,GAAAnnG,KAAAiJ,IAAA43B,GACA,KAAAwmE,EACA,OAAA/9F,KAAAwiB,IAAA9rB,KAAAiJ,IAAAi+F,GAAAlnG,KAAAiJ,IAAAk+F,MAnUA/0D,EAAAk1D,KACAl1D,EAAApvB,KAAA,mCAUAovB,EAAAk1D,KAAAl1D,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,QAOA5B,KAAA,OAOA6qD,GAAA,EAOAC,GAAA,EAOAvH,GAAA,EAOAC,GAAA,EAEAm5C,gBAAAzkD,EAAAt2C,OAAAE,UAAA66F,gBAAA7yF,OAAA,KAAA,KAAA,KAAA,MAQA2jD,WAAA,SAAAjN,EAAAx1C,GACAw1C,IACAA,GAAA,EAAA,EAAA,EAAA,IAGA16C,KAAAunD,UAAA,aAAAriD,GAEAlF,KAAAiY,IAAA,KAAAyiC,EAAA,IACA16C,KAAAiY,IAAA,KAAAyiC,EAAA,IACA16C,KAAAiY,IAAA,KAAAyiC,EAAA,IACA16C,KAAAiY,IAAA,KAAAyiC,EAAA,IAEA16C,KAAAunG,gBAAAriG,IAOAqiG,gBAAA,SAAAriG,GACAA,IAAAA,MAEAlF,KAAA8gC,MAAAx3B,KAAA06B,IAAAhkC,KAAAy9C,GAAAz9C,KAAA+kD,IACA/kD,KAAA+gC,OAAAz3B,KAAA06B,IAAAhkC,KAAA09C,GAAA19C,KAAAglD,IAEAhlD,KAAAy4B,KAAA,SAAAvzB,EACAA,EAAAuzB,KACAz4B,KAAAwnG,oBAEAxnG,KAAAg/B,IAAA,QAAA95B,EACAA,EAAA85B,IACAh/B,KAAAynG,oBAQAzuD,KAAA,SAAAj6C,EAAAtE,GAKA,OAJAuF,KAAAunD,UAAA,OAAAxoD,EAAAtE,QACA,IAAAqsG,EAAA/nG,IACAiB,KAAAunG,kBAEAvnG,MAOAwnG,kBAAAT,GAEA5qG,OAAA,UACA+qG,MAAA,KACAC,MAAA,KACAtmE,UAAA,UAGAumE,QAAA,OACAxyB,OAAA,SACAyyB,SAAA,UAQAI,iBAAAV,GAEA5qG,OAAA,UACA+qG,MAAA,KACAC,MAAA,KACAtmE,UAAA,WAGAumE,QAAA,MACAxyB,OAAA,SACAyyB,SAAA,WAQA5sB,QAAA,SAAAhqE,GAGA,GAFAA,EAAAquC,aAEA9+C,KAAA64E,iBAAA74E,KAAA64E,iBAAAwc,EAAA,CAGA,IAAAnnF,EAAAlO,KAAA0nG,iBACAj3F,EAAA0tC,OAAAjwC,EAAA62C,GAAA72C,EAAA82C,IACAv0C,EAAA0jE,OAAAjmE,EAAAuvC,GAAAvvC,EAAAwvC,IAGAjtC,EAAAuoE,UAAAh5E,KAAAw7E,YAKA,IAAAmsB,EAAAl3F,EAAAsoE,YACAtoE,EAAAsoE,YAAA/4E,KAAA4xD,QAAAnhD,EAAA4jE,UACAr0E,KAAA4xD,QAAA5xD,KAAA67F,cAAAprF,GACAA,EAAAsoE,YAAA4uB,GAOA5L,oBAAA,SAAAtrF,GACA,IAAAvC,EAAAlO,KAAA0nG,iBAEAj3F,EAAAquC,YACA1M,EAAAlkB,KAAAsvB,eAAA/sC,EAAAvC,EAAA62C,GAAA72C,EAAA82C,GAAA92C,EAAAuvC,GAAAvvC,EAAAwvC,GAAA19C,KAAA64E,iBACApoE,EAAA2jE,aASA+nB,uBAAA,WACA,OACA74D,GAAAtjC,KAAA+kD,GAAA/kD,KAAAy9C,IAAA,EACAla,GAAAvjC,KAAAglD,GAAAhlD,KAAA09C,IAAA,IAUAitB,SAAA,SAAAC,GACA,OAAAzpE,EAAAnB,KAAAunD,UAAA,WAAAqjB,GAAA5qE,KAAA0nG,mBAOA3M,6BAAA,WACA,IAAA1V,EAAArlF,KAAAunD,UAAA,gCASA,MARA,SAAAvnD,KAAA04E,gBACA,IAAA14E,KAAA8gC,QACAukD,EAAA9hD,GAAAvjC,KAAAw7E,aAEA,IAAAx7E,KAAA+gC,SACAskD,EAAA/hD,GAAAtjC,KAAAw7E,cAGA6J,GAOAqiB,eAAA,WACA,IAAAE,EAAA5nG,KAAA+kD,IAAA/kD,KAAAy9C,IAAA,EAAA,EACAoqD,EAAA7nG,KAAAglD,IAAAhlD,KAAA09C,IAAA,EAAA,EACAqH,EAAA6iD,EAAA5nG,KAAA8gC,MAAA,GACAkkB,EAAA6iD,EAAA7nG,KAAA+gC,OAAA,GACA0c,EAAAmqD,EAAA5nG,KAAA8gC,OAAA,GACA4c,EAAAmqD,EAAA7nG,KAAA+gC,QAAA,GAEA,OACAgkB,GAAAA,EACAtH,GAAAA,EACAuH,GAAAA,EACAtH,GAAAA,IAUAsmD,OAAA,WACA,IAAA91F,EAAAlO,KAAA0nG,iBACA,OACA,SAAA,eACA,OAAAx5F,EAAA62C,GACA,SAAA72C,EAAA82C,GACA,SAAA92C,EAAAuvC,GACA,SAAAvvC,EAAAwvC,GACA,aAaAtL,EAAAk1D,KAAAQ,gBAAA11D,EAAA4C,kBAAAhxC,OAAA,cAAA1K,MAAA,MAUA84C,EAAAk1D,KAAAztC,YAAA,SAAAt4C,EAAAtgB,EAAAiE,GACAA,EAAAA,MACA,IAAA6iG,EAAA31D,EAAA8kB,gBAAA31C,EAAA6wB,EAAAk1D,KAAAQ,iBACAptD,GACAqtD,EAAAhjD,IAAA,EACAgjD,EAAA/iD,IAAA,EACA+iD,EAAAtqD,IAAA,EACAsqD,EAAArqD,IAAA,GAEAz8C,EAAA,IAAAmxC,EAAAk1D,KAAA5sD,EAAAv5C,EAAA4mG,EAAA7iG,MAWAktC,EAAAk1D,KAAA1qD,WAAA,SAAA1hD,EAAA+F,GAKA,IAAAiE,EAAAxE,EAAAxF,GAAA,GACAgK,EAAAw1C,QAAAx/C,EAAA6pD,GAAA7pD,EAAA8pD,GAAA9pD,EAAAuiD,GAAAviD,EAAAwiD,IACAtL,EAAAt2C,OAAA2gG,YAAA,OAAAv3F,EANA,SAAA8nC,UACAA,EAAA0N,OACAz5C,GAAAA,EAAA+rC,IAIA,YAvTA,CAmVA,oBAAAiM,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA41D,EAAA1+F,KAAA4vC,GAEA9G,EAAAmqC,OACAnqC,EAAApvB,KAAA,sCAUAovB,EAAAmqC,OAAAnqC,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,QAOA5B,KAAA,SAOAiiF,OAAA,EASA8rB,WAAA,EASAC,SAAA,EAAAF,EAEAnR,gBAAAzkD,EAAAt2C,OAAAE,UAAA66F,gBAAA7yF,OAAA,SAAA,aAAA,YAQAg1C,KAAA,SAAAj6C,EAAAtE,GAOA,OANAuF,KAAAunD,UAAA,OAAAxoD,EAAAtE,GAEA,WAAAsE,GACAiB,KAAAmoG,UAAA1tG,GAGAuF,MAQA2qE,SAAA,SAAAC,GACA,OAAA5qE,KAAAunD,UAAA,YAAA,SAAA,aAAA,YAAAvjD,OAAA4mE,KAUAo5B,OAAA,WACA,IAAAoE,EACAhvD,GAAAp5C,KAAAkoG,SAAAloG,KAAAioG,aAAA,EAAAD,GAEA,GAAA,IAAA5uD,EACAgvD,GACA,WAAA,eACA,iBACA,MAAApoG,KAAAm8E,OACA,cAGA,CACA,IAAAksB,EAAAj2D,EAAAlkB,KAAAirB,IAAAn5C,KAAAioG,YAAAjoG,KAAAm8E,OACAmsB,EAAAl2D,EAAAlkB,KAAAorB,IAAAt5C,KAAAioG,YAAAjoG,KAAAm8E,OACAosB,EAAAn2D,EAAAlkB,KAAAirB,IAAAn5C,KAAAkoG,UAAAloG,KAAAm8E,OACAqsB,EAAAp2D,EAAAlkB,KAAAorB,IAAAt5C,KAAAkoG,UAAAloG,KAAAm8E,OACAssB,EAAArvD,EAAA4uD,EAAA,IAAA,IACAI,GACA,cAAAC,EAAA,IAAAC,EACA,MAAAtoG,KAAAm8E,OAAA,IAAAn8E,KAAAm8E,OACA,OAAAssB,EAAA,KAAA,IAAAF,EAAA,IAAAC,EACA,KAAA,eAAA,SAGA,OAAAJ,GAQA3tB,QAAA,SAAAhqE,GACAA,EAAAquC,YACAruC,EAAAyrE,IACA,EACA,EACAl8E,KAAAm8E,OACAn8E,KAAAioG,WACAjoG,KAAAkoG,UAAA,GACAloG,KAAA47F,oBAAAnrF,IAOAi4F,WAAA,WACA,OAAA1oG,KAAAiJ,IAAA,UAAAjJ,KAAAiJ,IAAA,WAOA0/F,WAAA,WACA,OAAA3oG,KAAAiJ,IAAA,UAAAjJ,KAAAiJ,IAAA,WAOAk/F,UAAA,SAAA1tG,GAEA,OADAuF,KAAAm8E,OAAA1hF,EACAuF,KAAAiY,IAAA,QAAA,EAAAxd,GAAAwd,IAAA,SAAA,EAAAxd,MAWA23C,EAAAmqC,OAAAurB,gBAAA11D,EAAA4C,kBAAAhxC,OAAA,UAAA1K,MAAA,MAWA84C,EAAAmqC,OAAA1iB,YAAA,SAAAt4C,EAAAtgB,GACA,IAcA6W,EAdAiwF,EAAA31D,EAAA8kB,gBAAA31C,EAAA6wB,EAAAmqC,OAAAurB,iBAEA,KAaA,WADAhwF,EAZAiwF,IAaAjwF,EAAAqkE,QAAA,GAZA,MAAA,IAAA92E,MAAA,8DAGA0iG,EAAAtvE,MAAAsvE,EAAAtvE,MAAA,GAAAsvE,EAAA5rB,OACA4rB,EAAA/oE,KAAA+oE,EAAA/oE,KAAA,GAAA+oE,EAAA5rB,OACAl7E,EAAA,IAAAmxC,EAAAmqC,OAAAwrB,KAmBA31D,EAAAmqC,OAAA3/B,WAAA,SAAA1hD,EAAA+F,GACA,OAAAmxC,EAAAt2C,OAAA2gG,YAAA,SAAAvhG,EAAA+F,KA3MA,CA8MA,oBAAAg4C,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WAEAA,EAAAw2D,SACAx2D,EAAApvB,KAAA,uCAWAovB,EAAAw2D,SAAAx2D,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,QAOA5B,KAAA,WAOA4mC,MAAA,IAOAC,OAAA,IAMA05C,QAAA,SAAAhqE,GACA,IAAAo4F,EAAA7oG,KAAA8gC,MAAA,EACAgoE,EAAA9oG,KAAA+gC,OAAA,EAEAtwB,EAAAquC,YACAruC,EAAA0tC,QAAA0qD,EAAAC,GACAr4F,EAAA0jE,OAAA,GAAA20B,GACAr4F,EAAA0jE,OAAA00B,EAAAC,GACAr4F,EAAA2jE,YAEAp0E,KAAA47F,oBAAAnrF,IAOAsrF,oBAAA,SAAAtrF,GACA,IAAAo4F,EAAA7oG,KAAA8gC,MAAA,EACAgoE,EAAA9oG,KAAA+gC,OAAA,EAEAtwB,EAAAquC,YACA1M,EAAAlkB,KAAAsvB,eAAA/sC,GAAAo4F,EAAAC,EAAA,GAAAA,EAAA9oG,KAAA64E,iBACAzmC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA,GAAAq4F,EAAAD,EAAAC,EAAA9oG,KAAA64E,iBACAzmC,EAAAlkB,KAAAsvB,eAAA/sC,EAAAo4F,EAAAC,GAAAD,EAAAC,EAAA9oG,KAAA64E,iBACApoE,EAAA2jE,aASA4vB,OAAA,WACA,IAAA6E,EAAA7oG,KAAA8gC,MAAA,EACAgoE,EAAA9oG,KAAA+gC,OAAA,EACA2Z,IACAmuD,EAAA,IAAAC,EACA,MAAAA,EACAD,EAAA,IAAAC,GACA37F,KAAA,KACA,OACA,YAAA,eACA,WAAAutC,EACA,WAaAtI,EAAAw2D,SAAAhsD,WAAA,SAAA1hD,EAAA+F,GACA,OAAAmxC,EAAAt2C,OAAA2gG,YAAA,WAAAvhG,EAAA+F,KAxGA,CA2GA,oBAAAg4C,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA22D,EAAA,EAAAz/F,KAAA4vC,GAEA9G,EAAA42D,QACA52D,EAAApvB,KAAA,uCAWAovB,EAAA42D,QAAA52D,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,QAOA5B,KAAA,UAOAkgD,GAAA,EAOAC,GAAA,EAEAw8C,gBAAAzkD,EAAAt2C,OAAAE,UAAA66F,gBAAA7yF,OAAA,KAAA,MAOA2jD,WAAA,SAAAziD,GACAlF,KAAAunD,UAAA,aAAAriD,GACAlF,KAAAiY,IAAA,KAAA/S,GAAAA,EAAAk1C,IAAA,GACAp6C,KAAAiY,IAAA,KAAA/S,GAAAA,EAAAm1C,IAAA,IASArB,KAAA,SAAAj6C,EAAAtE,GAEA,OADAuF,KAAAunD,UAAA,OAAAxoD,EAAAtE,GACAsE,GAEA,IAAA,KACAiB,KAAAo6C,GAAA3/C,EACAuF,KAAAiY,IAAA,QAAA,EAAAxd,GACA,MAEA,IAAA,KACAuF,KAAAq6C,GAAA5/C,EACAuF,KAAAiY,IAAA,SAAA,EAAAxd,GAIA,OAAAuF,MAOAipG,MAAA,WACA,OAAAjpG,KAAAiJ,IAAA,MAAAjJ,KAAAiJ,IAAA,WAOAigG,MAAA,WACA,OAAAlpG,KAAAiJ,IAAA,MAAAjJ,KAAAiJ,IAAA,WAQA0hE,SAAA,SAAAC,GACA,OAAA5qE,KAAAunD,UAAA,YAAA,KAAA,MAAAvjD,OAAA4mE,KASAo5B,OAAA,WACA,OACA,YAAA,eACA,iBACA,OAAAhkG,KAAAo6C,GACA,SAAAp6C,KAAAq6C,GACA,WASAogC,QAAA,SAAAhqE,GACAA,EAAAquC,YACAruC,EAAAytC,OACAztC,EAAAuG,UAAA,EAAA,EAAA,EAAAhX,KAAAq6C,GAAAr6C,KAAAo6C,GAAA,EAAA,GACA3pC,EAAAyrE,IACA,EACA,EACAl8E,KAAAo6C,GACA,EACA2uD,GACA,GACAt4F,EAAA4tC,UACAr+C,KAAA47F,oBAAAnrF,MAWA2hC,EAAA42D,QAAAlB,gBAAA11D,EAAA4C,kBAAAhxC,OAAA,cAAA1K,MAAA,MAUA84C,EAAA42D,QAAAnvC,YAAA,SAAAt4C,EAAAtgB,GAEA,IAAA8mG,EAAA31D,EAAA8kB,gBAAA31C,EAAA6wB,EAAA42D,QAAAlB,iBAEAC,EAAAtvE,MAAAsvE,EAAAtvE,MAAA,GAAAsvE,EAAA3tD,GACA2tD,EAAA/oE,KAAA+oE,EAAA/oE,KAAA,GAAA+oE,EAAA1tD,GACAp5C,EAAA,IAAAmxC,EAAA42D,QAAAjB,KAYA31D,EAAA42D,QAAApsD,WAAA,SAAA1hD,EAAA+F,GACA,OAAAmxC,EAAAt2C,OAAA2gG,YAAA,UAAAvhG,EAAA+F,KAjLA,CAoLA,oBAAAg4C,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAjxC,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OAEAixC,EAAAqrC,KACArrC,EAAApvB,KAAA,mCAWAovB,EAAAqrC,KAAArrC,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,QAOA86F,gBAAAxkD,EAAAt2C,OAAAE,UAAA46F,gBAAA5yF,OAAA,KAAA,MAOA9J,KAAA,OAOAkgD,GAAA,EAOAC,GAAA,EAEAw8C,gBAAAzkD,EAAAt2C,OAAAE,UAAA66F,gBAAA7yF,OAAA,KAAA,MAOA2jD,WAAA,SAAAziD,GACAlF,KAAAunD,UAAA,aAAAriD,GACAlF,KAAAmpG,aAOAA,UAAA,WACAnpG,KAAAo6C,KAAAp6C,KAAAq6C,GACAr6C,KAAAq6C,GAAAr6C,KAAAo6C,GAEAp6C,KAAAq6C,KAAAr6C,KAAAo6C,KACAp6C,KAAAo6C,GAAAp6C,KAAAq6C,KAQAogC,QAAA,SAAAhqE,GAKA,IAAA2pC,EAAAp6C,KAAAo6C,GAAA9wC,KAAAwoC,IAAA9xC,KAAAo6C,GAAAp6C,KAAA8gC,MAAA,GAAA,EACAuZ,EAAAr6C,KAAAq6C,GAAA/wC,KAAAwoC,IAAA9xC,KAAAq6C,GAAAr6C,KAAA+gC,OAAA,GAAA,EACA/sB,EAAAhU,KAAA8gC,MACAg+B,EAAA9+D,KAAA+gC,OACAuC,GAAAtjC,KAAA8gC,MAAA,EACAyC,GAAAvjC,KAAA+gC,OAAA,EACAqoE,EAAA,IAAAhvD,GAAA,IAAAC,EAEAgM,EAAA,YACA51C,EAAAquC,YAEAruC,EAAA0tC,OAAA7a,EAAA8W,EAAA7W,GAEA9yB,EAAA0jE,OAAA7wC,EAAAtvB,EAAAomC,EAAA7W,GACA6lE,GAAA34F,EAAAu1C,cAAA1iB,EAAAtvB,EAAAqyC,EAAAjM,EAAA7W,EAAAD,EAAAtvB,EAAAuvB,EAAA8iB,EAAAhM,EAAA/W,EAAAtvB,EAAAuvB,EAAA8W,GAEA5pC,EAAA0jE,OAAA7wC,EAAAtvB,EAAAuvB,EAAAu7B,EAAAzkB,GACA+uD,GAAA34F,EAAAu1C,cAAA1iB,EAAAtvB,EAAAuvB,EAAAu7B,EAAAzY,EAAAhM,EAAA/W,EAAAtvB,EAAAqyC,EAAAjM,EAAA7W,EAAAu7B,EAAAx7B,EAAAtvB,EAAAomC,EAAA7W,EAAAu7B,GAEAruD,EAAA0jE,OAAA7wC,EAAA8W,EAAA7W,EAAAu7B,GACAsqC,GAAA34F,EAAAu1C,cAAA1iB,EAAA+iB,EAAAjM,EAAA7W,EAAAu7B,EAAAx7B,EAAAC,EAAAu7B,EAAAzY,EAAAhM,EAAA/W,EAAAC,EAAAu7B,EAAAzkB,GAEA5pC,EAAA0jE,OAAA7wC,EAAAC,EAAA8W,GACA+uD,GAAA34F,EAAAu1C,cAAA1iB,EAAAC,EAAA8iB,EAAAhM,EAAA/W,EAAA+iB,EAAAjM,EAAA7W,EAAAD,EAAA8W,EAAA7W,GAEA9yB,EAAA2jE,YAEAp0E,KAAA47F,oBAAAnrF,IAOAsrF,oBAAA,SAAAtrF,GACA,IAAA6yB,GAAAtjC,KAAA8gC,MAAA,EACAyC,GAAAvjC,KAAA+gC,OAAA,EACA/sB,EAAAhU,KAAA8gC,MACAg+B,EAAA9+D,KAAA+gC,OAEAtwB,EAAAquC,YACA1M,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6yB,EAAAC,EAAAD,EAAAtvB,EAAAuvB,EAAAvjC,KAAA64E,iBACAzmC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6yB,EAAAtvB,EAAAuvB,EAAAD,EAAAtvB,EAAAuvB,EAAAu7B,EAAA9+D,KAAA64E,iBACAzmC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6yB,EAAAtvB,EAAAuvB,EAAAu7B,EAAAx7B,EAAAC,EAAAu7B,EAAA9+D,KAAA64E,iBACAzmC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6yB,EAAAC,EAAAu7B,EAAAx7B,EAAAC,EAAAvjC,KAAA64E,iBACApoE,EAAA2jE,aAQAzJ,SAAA,SAAAC,GACA,OAAA5qE,KAAAunD,UAAA,YAAA,KAAA,MAAAvjD,OAAA4mE,KASAo5B,OAAA,WACA,IAAA1gE,GAAAtjC,KAAA8gC,MAAA,EAAAyC,GAAAvjC,KAAA+gC,OAAA,EACA,OACA,SAAA,eACA,MAAAuC,EAAA,QAAAC,EACA,SAAAvjC,KAAAo6C,GAAA,SAAAp6C,KAAAq6C,GACA,YAAAr6C,KAAA8gC,MAAA,aAAA9gC,KAAA+gC,OACA,aAaAqR,EAAAqrC,KAAAqqB,gBAAA11D,EAAA4C,kBAAAhxC,OAAA,yBAAA1K,MAAA,MAUA84C,EAAAqrC,KAAA5jB,YAAA,SAAAt4C,EAAAtgB,EAAAiE,GACA,IAAAqc,EACA,OAAAtgB,EAAA,MAEAiE,EAAAA,MAEA,IAAA6iG,EAAA31D,EAAA8kB,gBAAA31C,EAAA6wB,EAAAqrC,KAAAqqB,iBAEAC,EAAAtvE,KAAAsvE,EAAAtvE,MAAA,EACAsvE,EAAA/oE,IAAA+oE,EAAA/oE,KAAA,EACA+oE,EAAAhnE,OAAAgnE,EAAAhnE,QAAA,EACAgnE,EAAAjnE,MAAAinE,EAAAjnE,OAAA,EACA,IAAA08C,EAAA,IAAAprC,EAAAqrC,KAAAt8E,EAAA+D,EAAAktC,EAAAlkB,KAAAhzB,OAAAwF,MAAAwE,MAAA6iG,IACAvqB,EAAAv7D,QAAAu7D,EAAAv7D,SAAAu7D,EAAA18C,MAAA,GAAA08C,EAAAz8C,OAAA,EACA9/B,EAAAu8E,IAWAprC,EAAAqrC,KAAA7gC,WAAA,SAAA1hD,EAAA+F,GACA,OAAAmxC,EAAAt2C,OAAA2gG,YAAA,OAAAvhG,EAAA+F,KA1MA,CA6MA,oBAAAg4C,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAjxC,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OACA2wC,EAAAM,EAAAlkB,KAAAlrB,MAAA8uC,IACAhmB,EAAAsmB,EAAAlkB,KAAAlrB,MAAA8oB,IACAomB,EAAAE,EAAAlkB,KAAAgkB,QAEAE,EAAAi3D,SACAj3D,EAAApvB,KAAA,uCAUAovB,EAAAi3D,SAAAj3D,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,QAOA5B,KAAA,WAOAwgD,OAAA,KAEAm8C,gBAAAzkD,EAAAt2C,OAAAE,UAAA66F,gBAAA7yF,OAAA,UAqBA2jD,WAAA,SAAAjN,EAAAx1C,GACAA,EAAAA,MACAlF,KAAA06C,OAAAA,MACA16C,KAAAunD,UAAA,aAAAriD,GACAlF,KAAAspG,uBAAApkG,IAGAokG,uBAAA,SAAApkG,GACA,IAAAqkG,EAAAC,EAAAxpG,KAAAypG,gBAAAvkG,GACAlF,KAAA8gC,MAAA0oE,EAAA1oE,MACA9gC,KAAA+gC,OAAAyoE,EAAAzoE,OACA77B,EAAAwkG,UACAH,EAAAvpG,KAAAs+F,wBACAh7D,EAAAkmE,EAAA/wE,KAAAz4B,KAAAw7E,YAAA,EAAAj4C,EAAAimE,EAAAxqE,IAAAh/B,KAAAw7E,YAAA,GACA,OACA,MACAx7E,KAAAw8E,QACAx8E,KAAAy8E,eAGA,IAAAv3E,EAAAuzB,OACAz4B,KAAAy4B,KAAAvzB,EAAAwkG,QAAAF,EAAA/wE,KAAA8wE,EAAAjmE,QAEA,IAAAp+B,EAAA85B,MACAh/B,KAAAg/B,IAAA95B,EAAAwkG,QAAAF,EAAAxqE,IAAAuqE,EAAAhmE,GAEAvjC,KAAAmrE,YACA7nC,EAAAkmE,EAAA/wE,KAAAz4B,KAAA8gC,MAAA,EACAyC,EAAAimE,EAAAxqE,IAAAh/B,KAAA+gC,OAAA,IAcA0oE,gBAAA,WAEA,IAAA/uD,EAAA16C,KAAA06C,OACAE,EAAA9I,EAAA4I,EAAA,MAAA,EACAK,EAAAjJ,EAAA4I,EAAA,MAAA,EACAG,EAAA/uB,EAAA4uB,EAAA,MAAA,EACAM,EAAAlvB,EAAA4uB,EAAA,MAAA,EACA5Z,EAAA+Z,EAAAD,EACA7Z,EAAAia,EAAAD,EAEA,OACAtiB,KAAAmiB,EACA5b,IAAA+b,EACAja,MAAAA,EACAC,OAAAA,IASA4pC,SAAA,SAAAC,GACA,OAAAzpE,EAAAnB,KAAAunD,UAAA,WAAAqjB,IACAlwB,OAAA16C,KAAA06C,OAAA12C,YAUAggG,OAAA,WAIA,IAHA,IAAAtpD,KAAAivD,EAAA3pG,KAAAmrE,WAAA7nC,EAAAsmE,EAAA5pG,KAAAmrE,WAAA5nC,EACAse,EAAAzP,EAAAt2C,OAAA+lD,oBAEApoD,EAAA,EAAAyY,EAAAlS,KAAA06C,OAAAnhD,OAAAE,EAAAyY,EAAAzY,IACAihD,EAAA17C,KACAkzC,EAAAlyC,KAAA06C,OAAAjhD,GAAA6pC,EAAAqmE,EAAA9nD,GAAA,IACA3P,EAAAlyC,KAAA06C,OAAAjhD,GAAA8pC,EAAAqmE,EAAA/nD,GAAA,KAGA,OACA,IAAA7hD,KAAA9F,KAAA,IAAA,eACA,WAAAwgD,EAAAvtC,KAAA,IACA,WAUA08F,aAAA,SAAAp5F,GACA,IAAAqpC,EAAA5nC,EAAAlS,KAAA06C,OAAAnhD,OACA+pC,EAAAtjC,KAAAmrE,WAAA7nC,EACAC,EAAAvjC,KAAAmrE,WAAA5nC,EAEA,IAAArxB,GAAAjB,MAAAjR,KAAA06C,OAAAxoC,EAAA,GAAAqxB,GAGA,OAAA,EAEA9yB,EAAAquC,YACAruC,EAAA0tC,OAAAn+C,KAAA06C,OAAA,GAAApX,EAAAA,EAAAtjC,KAAA06C,OAAA,GAAAnX,EAAAA,GACA,IAAA,IAAA9pC,EAAA,EAAAA,EAAAyY,EAAAzY,IACAqgD,EAAA95C,KAAA06C,OAAAjhD,GACAgX,EAAA0jE,OAAAr6B,EAAAxW,EAAAA,EAAAwW,EAAAvW,EAAAA,GAEA,OAAA,GAOAk3C,QAAA,SAAAhqE,GACAzQ,KAAA6pG,aAAAp5F,IAGAzQ,KAAA47F,oBAAAnrF,IAOAsrF,oBAAA,SAAAtrF,GACA,IAAAupE,EAAAC,EAEAxpE,EAAAquC,YACA,IAAA,IAAArlD,EAAA,EAAAyY,EAAAlS,KAAA06C,OAAAnhD,OAAAE,EAAAyY,EAAAzY,IACAugF,EAAAh6E,KAAA06C,OAAAjhD,GACAwgF,EAAAj6E,KAAA06C,OAAAjhD,EAAA,IAAAugF,EACA5nC,EAAAlkB,KAAAsvB,eAAA/sC,EAAAupE,EAAA12C,EAAA02C,EAAAz2C,EAAA02C,EAAA32C,EAAA22C,EAAA12C,EAAAvjC,KAAA64E,kBAQA3gC,WAAA,WACA,OAAAl4C,KAAAiJ,IAAA,UAAA1P,UAWA64C,EAAAi3D,SAAAvB,gBAAA11D,EAAA4C,kBAAAhxC,SAUAouC,EAAAi3D,SAAAS,qBAAA,SAAAC,GACA,OAAA,SAAAxoF,EAAAtgB,EAAAiE,GACA,IAAAqc,EACA,OAAAtgB,EAAA,MAEAiE,IAAAA,MAEA,IAAAw1C,EAAAtI,EAAAkmB,qBAAA/2C,EAAAkI,aAAA,WACAs+E,EAAA31D,EAAA8kB,gBAAA31C,EAAA6wB,EAAA23D,GAAAjC,iBACAC,EAAA2B,SAAA,EACAzoG,EAAA,IAAAmxC,EAAA23D,GAAArvD,EAAAv5C,EAAA4mG,EAAA7iG,OAIAktC,EAAAi3D,SAAAxvC,YAAAznB,EAAAi3D,SAAAS,qBAAA,YAWA13D,EAAAi3D,SAAAzsD,WAAA,SAAA1hD,EAAA+F,GACA,OAAAmxC,EAAAt2C,OAAA2gG,YAAA,WAAAvhG,EAAA+F,EAAA,YA/PA,CAkQA,oBAAAg4C,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WAEAA,EAAA43D,QACA53D,EAAApvB,KAAA,sCAUAovB,EAAA43D,QAAA53D,EAAAlkB,KAAAvpB,YAAAytC,EAAAi3D,UAOAnvG,KAAA,UAMAugF,QAAA,SAAAhqE,GACAzQ,KAAA6pG,aAAAp5F,KAGAA,EAAA2jE,YACAp0E,KAAA47F,oBAAAnrF,KAOAsrF,oBAAA,SAAAtrF,GACAzQ,KAAAunD,UAAA,sBAAA92C,GACAA,EAAA2jE,eAWAhiC,EAAA43D,QAAAlC,gBAAA11D,EAAA4C,kBAAAhxC,SAUAouC,EAAA43D,QAAAnwC,YAAAznB,EAAAi3D,SAAAS,qBAAA,WAUA13D,EAAA43D,QAAAptD,WAAA,SAAA1hD,EAAA+F,GACA,OAAAmxC,EAAAt2C,OAAA2gG,YAAA,UAAAvhG,EAAA+F,EAAA,YA5EA,CA+EA,oBAAAg4C,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAN,EAAAM,EAAAlkB,KAAAlrB,MAAA8uC,IACAhmB,EAAAsmB,EAAAlkB,KAAAlrB,MAAA8oB,IACA3qB,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OACA8oG,EAAAnuG,OAAAE,UAAA/B,SACA0rD,EAAAvT,EAAAlkB,KAAAy3B,QACAzT,EAAAE,EAAAlkB,KAAAgkB,QACAg4D,GACAniE,EAAA,EACAhnC,EAAA,EACA+9D,EAAA,EACAroD,EAAA,EACAnB,EAAA,EACAwqB,EAAA,EACAy+B,EAAA,EACAhkB,EAAA,EACAr6C,EAAA,GAEAiqG,GACApiE,EAAA,IACAqiE,EAAA,KAGAh4D,EAAAmpC,KACAnpC,EAAApvB,KAAA,mCAWAovB,EAAAmpC,KAAAnpC,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,QAOA5B,KAAA,OAOAd,KAAA,KAEAy9F,gBAAAzkD,EAAAt2C,OAAAE,UAAA66F,gBAAA7yF,OAAA,OAAA,YAEA4yF,gBAAAxkD,EAAAt2C,OAAAE,UAAA46F,gBAAA5yF,OAAA,QAQA2jD,WAAA,SAAAvuD,EAAA8L,GACAA,EAAAA,MACAlF,KAAAunD,UAAA,aAAAriD,GAEA9L,IACAA,MAGA,IAAAixG,EAAA,mBAAAJ,EAAA3vG,KAAAlB,GAEA4G,KAAA5G,KAAAixG,EACAjxG,EAEAA,EAAAgU,OAAAhU,EAAAgU,MAAA,gCAEApN,KAAA5G,OAIAixG,IACArqG,KAAA5G,KAAA4G,KAAAsqG,cAGAl4D,EAAAi3D,SAAArtG,UAAAstG,uBAAAhvG,KAAA0F,KAAAkF,KAOAqlG,oBAAA,SAAA95F,GACA,IAAAsI,EAQAyxF,EACAC,EARA9/F,EAAA,KACA+/F,EAAA,EACAC,EAAA,EACArnE,EAAA,EACAC,EAAA,EACAqnE,EAAA,EACAC,EAAA,EAGA9pG,GAAAf,KAAAmrE,WAAA7nC,EACAiX,GAAAv6C,KAAAmrE,WAAA5nC,EAEA9yB,EAAAquC,YAEA,IAAA,IAAArlD,EAAA,EAAAyY,EAAAlS,KAAA5G,KAAAG,OAAAE,EAAAyY,IAAAzY,EAAA,CAIA,QAFAsf,EAAA/Y,KAAA5G,KAAAK,IAEA,IAEA,IAAA,IACA6pC,GAAAvqB,EAAA,GACAwqB,GAAAxqB,EAAA,GACAtI,EAAA0jE,OAAA7wC,EAAAviC,EAAAwiC,EAAAgX,GACA,MAEA,IAAA,IACAjX,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACAtI,EAAA0jE,OAAA7wC,EAAAviC,EAAAwiC,EAAAgX,GACA,MAEA,IAAA,IACAjX,GAAAvqB,EAAA,GACAtI,EAAA0jE,OAAA7wC,EAAAviC,EAAAwiC,EAAAgX,GACA,MAEA,IAAA,IACAjX,EAAAvqB,EAAA,GACAtI,EAAA0jE,OAAA7wC,EAAAviC,EAAAwiC,EAAAgX,GACA,MAEA,IAAA,IACAhX,GAAAxqB,EAAA,GACAtI,EAAA0jE,OAAA7wC,EAAAviC,EAAAwiC,EAAAgX,GACA,MAEA,IAAA,IACAhX,EAAAxqB,EAAA,GACAtI,EAAA0jE,OAAA7wC,EAAAviC,EAAAwiC,EAAAgX,GACA,MAEA,IAAA,IACAjX,GAAAvqB,EAAA,GACAwqB,GAAAxqB,EAAA,GACA2xF,EAAApnE,EACAqnE,EAAApnE,EACA9yB,EAAA0tC,OAAA7a,EAAAviC,EAAAwiC,EAAAgX,GACA,MAEA,IAAA,IACAjX,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACA2xF,EAAApnE,EACAqnE,EAAApnE,EACA9yB,EAAA0tC,OAAA7a,EAAAviC,EAAAwiC,EAAAgX,GACA,MAEA,IAAA,IACAiwD,EAAAlnE,EAAAvqB,EAAA,GACA0xF,EAAAlnE,EAAAxqB,EAAA,GACA6xF,EAAAtnE,EAAAvqB,EAAA,GACA8xF,EAAAtnE,EAAAxqB,EAAA,GACAtI,EAAAu1C,cACA1iB,EAAAvqB,EAAA,GAAAhY,EACAwiC,EAAAxqB,EAAA,GAAAwhC,EACAqwD,EAAA7pG,EACA8pG,EAAAtwD,EACAiwD,EAAAzpG,EACA0pG,EAAAlwD,GAEAjX,EAAAknE,EACAjnE,EAAAknE,EACA,MAEA,IAAA,IACAnnE,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACA6xF,EAAA7xF,EAAA,GACA8xF,EAAA9xF,EAAA,GACAtI,EAAAu1C,cACAjtC,EAAA,GAAAhY,EACAgY,EAAA,GAAAwhC,EACAqwD,EAAA7pG,EACA8pG,EAAAtwD,EACAjX,EAAAviC,EACAwiC,EAAAgX,GAEA,MAEA,IAAA,IAGAiwD,EAAAlnE,EAAAvqB,EAAA,GACA0xF,EAAAlnE,EAAAxqB,EAAA,GAEA,OAAApO,EAAA,GAAAyC,MAAA,WAGAw9F,EAAAtnE,EACAunE,EAAAtnE,IAIAqnE,EAAA,EAAAtnE,EAAAsnE,EACAC,EAAA,EAAAtnE,EAAAsnE,GAGAp6F,EAAAu1C,cACA4kD,EAAA7pG,EACA8pG,EAAAtwD,EACAjX,EAAAvqB,EAAA,GAAAhY,EACAwiC,EAAAxqB,EAAA,GAAAwhC,EACAiwD,EAAAzpG,EACA0pG,EAAAlwD,GAMAqwD,EAAAtnE,EAAAvqB,EAAA,GACA8xF,EAAAtnE,EAAAxqB,EAAA,GAEAuqB,EAAAknE,EACAjnE,EAAAknE,EACA,MAEA,IAAA,IACAD,EAAAzxF,EAAA,GACA0xF,EAAA1xF,EAAA,GACA,OAAApO,EAAA,GAAAyC,MAAA,WAGAw9F,EAAAtnE,EACAunE,EAAAtnE,IAIAqnE,EAAA,EAAAtnE,EAAAsnE,EACAC,EAAA,EAAAtnE,EAAAsnE,GAEAp6F,EAAAu1C,cACA4kD,EAAA7pG,EACA8pG,EAAAtwD,EACAxhC,EAAA,GAAAhY,EACAgY,EAAA,GAAAwhC,EACAiwD,EAAAzpG,EACA0pG,EAAAlwD,GAEAjX,EAAAknE,EACAjnE,EAAAknE,EAMAG,EAAA7xF,EAAA,GACA8xF,EAAA9xF,EAAA,GAEA,MAEA,IAAA,IAEAyxF,EAAAlnE,EAAAvqB,EAAA,GACA0xF,EAAAlnE,EAAAxqB,EAAA,GAEA6xF,EAAAtnE,EAAAvqB,EAAA,GACA8xF,EAAAtnE,EAAAxqB,EAAA,GAEAtI,EAAA0pE,iBACAywB,EAAA7pG,EACA8pG,EAAAtwD,EACAiwD,EAAAzpG,EACA0pG,EAAAlwD,GAEAjX,EAAAknE,EACAjnE,EAAAknE,EACA,MAEA,IAAA,IACAD,EAAAzxF,EAAA,GACA0xF,EAAA1xF,EAAA,GAEAtI,EAAA0pE,iBACAphE,EAAA,GAAAhY,EACAgY,EAAA,GAAAwhC,EACAiwD,EAAAzpG,EACA0pG,EAAAlwD,GAEAjX,EAAAknE,EACAjnE,EAAAknE,EACAG,EAAA7xF,EAAA,GACA8xF,EAAA9xF,EAAA,GACA,MAEA,IAAA,IAGAyxF,EAAAlnE,EAAAvqB,EAAA,GACA0xF,EAAAlnE,EAAAxqB,EAAA,GAEA,OAAApO,EAAA,GAAAyC,MAAA,WAGAw9F,EAAAtnE,EACAunE,EAAAtnE,IAIAqnE,EAAA,EAAAtnE,EAAAsnE,EACAC,EAAA,EAAAtnE,EAAAsnE,GAGAp6F,EAAA0pE,iBACAywB,EAAA7pG,EACA8pG,EAAAtwD,EACAiwD,EAAAzpG,EACA0pG,EAAAlwD,GAEAjX,EAAAknE,EACAjnE,EAAAknE,EAEA,MAEA,IAAA,IACAD,EAAAzxF,EAAA,GACA0xF,EAAA1xF,EAAA,GAEA,OAAApO,EAAA,GAAAyC,MAAA,WAGAw9F,EAAAtnE,EACAunE,EAAAtnE,IAIAqnE,EAAA,EAAAtnE,EAAAsnE,EACAC,EAAA,EAAAtnE,EAAAsnE,GAEAp6F,EAAA0pE,iBACAywB,EAAA7pG,EACA8pG,EAAAtwD,EACAiwD,EAAAzpG,EACA0pG,EAAAlwD,GAEAjX,EAAAknE,EACAjnE,EAAAknE,EACA,MAEA,IAAA,IAEA9kD,EAAAl1C,EAAA6yB,EAAAviC,EAAAwiC,EAAAgX,GACAxhC,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAAAuqB,EAAAviC,EACAgY,EAAA,GAAAwqB,EAAAgX,IAEAjX,GAAAvqB,EAAA,GACAwqB,GAAAxqB,EAAA,GACA,MAEA,IAAA,IAEA4sC,EAAAl1C,EAAA6yB,EAAAviC,EAAAwiC,EAAAgX,GACAxhC,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAAAhY,EACAgY,EAAA,GAAAwhC,IAEAjX,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACA,MAEA,IAAA,IACA,IAAA,IACAuqB,EAAAonE,EACAnnE,EAAAonE,EACAl6F,EAAA2jE,YAGAzpE,EAAAoO,IAQA0hE,QAAA,SAAAhqE,GACAzQ,KAAAuqG,oBAAA95F,GACAzQ,KAAA47F,oBAAAnrF,IAOAxW,SAAA,WACA,MAAA,kBAAA+F,KAAAk4C,aACA,eAAAl4C,KAAAg/B,IAAA,aAAAh/B,KAAAy4B,KAAA,OAQAkyC,SAAA,SAAAC,GACA,OAAAzpE,EAAAnB,KAAAunD,UAAA,WAAAqjB,IACAxxE,KAAA4G,KAAA5G,KAAAiL,IAAA,SAAA/B,GAAA,OAAAA,EAAArE,aASAk3E,iBAAA,SAAAvK,GACA,IAAA3yB,EAAAj4C,KAAA2qE,UAAA,cAAA3mE,OAAA4mE,IAIA,OAHA3yB,EAAAoF,mBACApF,EAAA7+C,KAEA6+C,GASA+rD,OAAA,WACA,IAAA5qG,EAAA4G,KAAA5G,KAAAiL,IAAA,SAAAjL,GACA,OAAAA,EAAA+T,KAAA,OACAA,KAAA,KACA,OACA,SAAA,eACA,MAAA/T,EACA,4BACA,SAIA0xG,oBAAA,WACA,IAAAC,EAAA34D,EAAAt2C,OAAA+lD,oBACA,MAAA,cAAA3P,GAAAlyC,KAAAmrE,WAAA7nC,EAAAynE,GAAA,KACA74D,GAAAlyC,KAAAmrE,WAAA5nC,EAAAwnE,GAAA,KAQAt0B,cAAA,SAAAl6B,GACA,IAAA2uB,EAAAlrE,KAAA8qG,sBACA,MAAA,KAAA9qG,KAAAikG,6BACAjkG,KAAAgkG,UAAAznD,QAAAA,EAAA2uB,oBAAAA,KASAL,MAAA,SAAAtuB,GACA,IAAA2uB,EAAAlrE,KAAA8qG,sBACA,OAAA9qG,KAAA+jG,qBAAA/jG,KAAAgkG,UAAAznD,QAAAA,EAAA2uB,oBAAAA,KAQAhzB,WAAA,WACA,OAAAl4C,KAAA5G,KAAAG,QAMA+wG,WAAA,WASA,IARA,IAEAU,EACAn5F,EAEAzE,EACA69F,EAEAC,EARA/sG,KACAiiC,KAGApE,EAAAoW,EAAA+C,cAIA17C,EAAA,EAAAyY,EAAAlS,KAAA5G,KAAAG,OAAAE,EAAAyY,EAAAzY,IAAA,CAMA,IALAuxG,EAAAhrG,KAAA5G,KAAAK,GAEAwxG,EAAAD,EAAA/sG,MAAA,GAAAiT,OACAkvB,EAAA7mC,OAAA,EAEA6T,EAAA4uB,EAAA3nB,KAAA42F,IACA7qE,EAAAphC,KAAAoO,EAAA,IAGA89F,GAAAF,EAAAr0F,OAAA,IAEA,IAAA,IAAAtT,EAAA,EAAAqiD,EAAAtlB,EAAA7mC,OAAA8J,EAAAqiD,EAAAriD,IACAwO,EAAA6I,WAAA0lB,EAAA/8B,IACA4N,MAAAY,IACAq5F,EAAAlsG,KAAA6S,GAIA,IAAAs5F,EAAAD,EAAA,GACAE,EAAAlB,EAAAiB,EAAA/wG,eACAixG,EAAAlB,EAAAgB,IAAAA,EAEA,GAAAD,EAAA3xG,OAAA,EAAA6xG,EACA,IAAA,IAAA/kD,EAAA,EAAAilD,EAAAJ,EAAA3xG,OAAA8sD,EAAAilD,EAAAjlD,GAAA+kD,EACAjtG,EAAAa,MAAAmsG,GAAAnnG,OAAAknG,EAAAjtG,MAAAooD,EAAAA,EAAA+kD,KACAD,EAAAE,OAIAltG,EAAAa,KAAAksG,GAIA,OAAA/sG,GAMAsrG,gBAAA,WAgBA,IAdA,IAEA1wF,EAQAyxF,EACAC,EACAjlD,EAZA+lD,KACAC,KAEA7gG,EAAA,KACA+/F,EAAA,EACAC,EAAA,EACArnE,EAAA,EACAC,EAAA,EACAqnE,EAAA,EACAC,EAAA,EAKApxG,EAAA,EAAAyY,EAAAlS,KAAA5G,KAAAG,OAAAE,EAAAyY,IAAAzY,EAAA,CAIA,QAFAsf,EAAA/Y,KAAA5G,KAAAK,IAEA,IAEA,IAAA,IACA6pC,GAAAvqB,EAAA,GACAwqB,GAAAxqB,EAAA,GACAysC,KACA,MAEA,IAAA,IACAliB,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACAysC,KACA,MAEA,IAAA,IACAliB,GAAAvqB,EAAA,GACAysC,KACA,MAEA,IAAA,IACAliB,EAAAvqB,EAAA,GACAysC,KACA,MAEA,IAAA,IACAjiB,GAAAxqB,EAAA,GACAysC,KACA,MAEA,IAAA,IACAjiB,EAAAxqB,EAAA,GACAysC,KACA,MAEA,IAAA,IACAliB,GAAAvqB,EAAA,GACAwqB,GAAAxqB,EAAA,GACA2xF,EAAApnE,EACAqnE,EAAApnE,EACAiiB,KACA,MAEA,IAAA,IACAliB,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACA2xF,EAAApnE,EACAqnE,EAAApnE,EACAiiB,KACA,MAEA,IAAA,IACAglD,EAAAlnE,EAAAvqB,EAAA,GACA0xF,EAAAlnE,EAAAxqB,EAAA,GACA6xF,EAAAtnE,EAAAvqB,EAAA,GACA8xF,EAAAtnE,EAAAxqB,EAAA,GACAysC,EAAApT,EAAAlkB,KAAA02B,iBAAAthB,EAAAC,EACAD,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACA6xF,EACAC,EACAL,EACAC,GAEAnnE,EAAAknE,EACAjnE,EAAAknE,EACA,MAEA,IAAA,IACAG,EAAA7xF,EAAA,GACA8xF,EAAA9xF,EAAA,GACAysC,EAAApT,EAAAlkB,KAAA02B,iBAAAthB,EAAAC,EACAxqB,EAAA,GACAA,EAAA,GACA6xF,EACAC,EACA9xF,EAAA,GACAA,EAAA,IAEAuqB,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACA,MAEA,IAAA,IAGAyxF,EAAAlnE,EAAAvqB,EAAA,GACA0xF,EAAAlnE,EAAAxqB,EAAA,GAEA,OAAApO,EAAA,GAAAyC,MAAA,WAGAw9F,EAAAtnE,EACAunE,EAAAtnE,IAIAqnE,EAAA,EAAAtnE,EAAAsnE,EACAC,EAAA,EAAAtnE,EAAAsnE,GAGArlD,EAAApT,EAAAlkB,KAAA02B,iBAAAthB,EAAAC,EACAqnE,EACAC,EACAvnE,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACAyxF,EACAC,GAMAG,EAAAtnE,EAAAvqB,EAAA,GACA8xF,EAAAtnE,EAAAxqB,EAAA,GACAuqB,EAAAknE,EACAjnE,EAAAknE,EACA,MAEA,IAAA,IACAD,EAAAzxF,EAAA,GACA0xF,EAAA1xF,EAAA,GACA,OAAApO,EAAA,GAAAyC,MAAA,WAGAw9F,EAAAtnE,EACAunE,EAAAtnE,IAIAqnE,EAAA,EAAAtnE,EAAAsnE,EACAC,EAAA,EAAAtnE,EAAAsnE,GAEArlD,EAAApT,EAAAlkB,KAAA02B,iBAAAthB,EAAAC,EACAqnE,EACAC,EACA9xF,EAAA,GACAA,EAAA,GACAyxF,EACAC,GAEAnnE,EAAAknE,EACAjnE,EAAAknE,EAKAG,EAAA7xF,EAAA,GACA8xF,EAAA9xF,EAAA,GACA,MAEA,IAAA,IAEAyxF,EAAAlnE,EAAAvqB,EAAA,GACA0xF,EAAAlnE,EAAAxqB,EAAA,GACA6xF,EAAAtnE,EAAAvqB,EAAA,GACA8xF,EAAAtnE,EAAAxqB,EAAA,GACAysC,EAAApT,EAAAlkB,KAAA02B,iBAAAthB,EAAAC,EACAqnE,EACAC,EACAD,EACAC,EACAL,EACAC,GAEAnnE,EAAAknE,EACAjnE,EAAAknE,EACA,MAEA,IAAA,IACAG,EAAA7xF,EAAA,GACA8xF,EAAA9xF,EAAA,GACAysC,EAAApT,EAAAlkB,KAAA02B,iBAAAthB,EAAAC,EACAqnE,EACAC,EACAD,EACAC,EACA9xF,EAAA,GACAA,EAAA,IAEAuqB,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACA,MAEA,IAAA,IAEAyxF,EAAAlnE,EAAAvqB,EAAA,GACA0xF,EAAAlnE,EAAAxqB,EAAA,GACA,OAAApO,EAAA,GAAAyC,MAAA,WAGAw9F,EAAAtnE,EACAunE,EAAAtnE,IAIAqnE,EAAA,EAAAtnE,EAAAsnE,EACAC,EAAA,EAAAtnE,EAAAsnE,GAGArlD,EAAApT,EAAAlkB,KAAA02B,iBAAAthB,EAAAC,EACAqnE,EACAC,EACAD,EACAC,EACAL,EACAC,GAEAnnE,EAAAknE,EACAjnE,EAAAknE,EAEA,MAEA,IAAA,IACAD,EAAAzxF,EAAA,GACA0xF,EAAA1xF,EAAA,GAEA,OAAApO,EAAA,GAAAyC,MAAA,WAGAw9F,EAAAtnE,EACAunE,EAAAtnE,IAIAqnE,EAAA,EAAAtnE,EAAAsnE,EACAC,EAAA,EAAAtnE,EAAAsnE,GAEArlD,EAAApT,EAAAlkB,KAAA02B,iBAAAthB,EAAAC,EACAqnE,EACAC,EACAD,EACAC,EACAL,EACAC,GAEAnnE,EAAAknE,EACAjnE,EAAAknE,EACA,MAEA,IAAA,IAEAjlD,EAAApT,EAAAlkB,KAAA+3B,eAAA3iB,EAAAC,EACAxqB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAAAuqB,EACAvqB,EAAA,GAAAwqB,GAEAD,GAAAvqB,EAAA,GACAwqB,GAAAxqB,EAAA,GACA,MAEA,IAAA,IAEAysC,EAAApT,EAAAlkB,KAAA+3B,eAAA3iB,EAAAC,EACAxqB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,IAEAuqB,EAAAvqB,EAAA,GACAwqB,EAAAxqB,EAAA,GACA,MAEA,IAAA,IACA,IAAA,IACAuqB,EAAAonE,EACAnnE,EAAAonE,EAGAhgG,EAAAoO,EACAysC,EAAArrD,QAAA,SAAA2/C,GACAyxD,EAAAvsG,KAAA86C,EAAAxW,GACAkoE,EAAAxsG,KAAA86C,EAAAvW,KAEAgoE,EAAAvsG,KAAAskC,GACAkoE,EAAAxsG,KAAAukC,GAGA,IAAAqX,EAAA9I,EAAAy5D,IAAA,EACAxwD,EAAAjJ,EAAA05D,IAAA,EACA3wD,EAAA/uB,EAAAy/E,IAAA,EACAvwD,EAAAlvB,EAAA0/E,IAAA,EACAC,EAAA5wD,EAAAD,EACAuoD,EAAAnoD,EAAAD,EAEA,OACAtiB,KAAAmiB,EACA5b,IAAA+b,EACAja,MAAA2qE,EACA1qE,OAAAoiE,MAYA/wD,EAAAmpC,KAAA3+B,WAAA,SAAA1hD,EAAA+F,GACA,GAAA,iBAAA/F,EAAAmiD,WAAA,CACA,IAAAquD,EAAAxwG,EAAAmiD,WACAjL,EAAA0mB,eAAA4yC,EAAA,SAAApnG,GACA,IAAAlL,EAAAkL,EAAA,GACAlL,EAAA8yE,WAAAhxE,GACA+F,GAAAA,EAAA7H,UAIAg5C,EAAAt2C,OAAA2gG,YAAA,OAAAvhG,EAAA+F,EAAA,SAWAmxC,EAAAmpC,KAAAusB,gBAAA11D,EAAA4C,kBAAAhxC,QAAA,MAWAouC,EAAAmpC,KAAA1hB,YAAA,SAAAt4C,EAAAtgB,EAAAiE,GACA,IAAA6iG,EAAA31D,EAAA8kB,gBAAA31C,EAAA6wB,EAAAmpC,KAAAusB,iBACAC,EAAA2B,SAAA,EACAzoG,EAAA,IAAAmxC,EAAAmpC,KAAAwsB,EAAAt5F,EAAAtN,EAAA4mG,EAAA7iG,OA54BA,CAg5BA,oBAAA+zC,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAN,EAAAM,EAAAlkB,KAAAlrB,MAAA8uC,IACAhmB,EAAAsmB,EAAAlkB,KAAAlrB,MAAA8oB,IAEAsmB,EAAAgL,QAYAhL,EAAAgL,MAAAhL,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,OAAAs2C,EAAAzE,YAOAzzC,KAAA,QAOAshF,YAAA,EAOA0N,gBAAA,EAOA2N,mBASA8U,eAAA,EASAhkD,WAAA,SAAA/kD,EAAAsC,EAAA0mG,GACA1mG,EAAAA,MACAlF,KAAAu3C,YAIAq0D,GAAA5rG,KAAAunD,UAAA,aAAAriD,GACAlF,KAAAu3C,SAAA30C,MACA,IAAA,IAAAnJ,EAAAuG,KAAAu3C,SAAAh+C,OAAAE,KACAuG,KAAAu3C,SAAA99C,GAAAk4E,MAAA3xE,KAGA,GAAA4rG,EAoBA5rG,KAAA6rG,4BApBA,CACA,IAAAj3B,EAAA1vE,GAAAA,EAAAi4C,iBAKArgD,IAAAoI,EAAAs3E,UACAx8E,KAAAw8E,QAAAt3E,EAAAs3E,cAEA1/E,IAAAoI,EAAAu3E,UACAz8E,KAAAy8E,QAAAv3E,EAAAu3E,SAIA7H,GAAA50E,KAAA8rG,cACA9rG,KAAA+rG,qBAAAn3B,UACA1vE,EAAAi4C,YACAn9C,KAAAunD,UAAA,aAAAriD,GAMAlF,KAAA4xE,aAOAi6B,sBAAA,WAEA,IADA,IACApyG,EAAAuG,KAAAu3C,SAAAh+C,OAAAE,KACAuG,KAAAu3C,SAAA99C,GAAAm4E,WAFA,GAAA,IAUAm6B,qBAAA,SAAAn3B,GAEA,IADA,IAAAA,EAAAA,GAAA50E,KAAAy0E,iBACAh7E,EAAAuG,KAAAu3C,SAAAh+C,OAAAE,KACAuG,KAAAgsG,oBAAAhsG,KAAAu3C,SAAA99C,GAAAm7E,IASAo3B,oBAAA,SAAA9wG,EAAA05E,GACA,IAAAq3B,EAAA/wG,EAAAu9B,KACAyzE,EAAAhxG,EAAA8jC,IAGA9jC,EAAA+c,KACAwgB,KAAAwzE,EAAAr3B,EAAAtxC,EACAtE,IAAAktE,EAAAt3B,EAAArxC,IAEAroC,EAAAy2E,MAAA3xE,KACA9E,EAAA02E,WAPA,GAAA,IAcA33E,SAAA,WACA,MAAA,oBAAA+F,KAAAk4C,aAAA,MASAs6C,cAAA,SAAAt3F,GAYA,OAXA8E,KAAAmsG,uBACA/5D,EAAAlkB,KAAAmyB,qBAAArgD,MACA9E,IACA8E,KAAAu3C,SAAAv4C,KAAA9D,GACAA,EAAAy2E,MAAA3xE,KACA9E,EAAA89C,KAAA,SAAAh5C,KAAAqzC,SAEArzC,KAAA8rG,cACA9rG,KAAA+rG,uBACA/rG,KAAA4xE,YACA5xE,KAAA02F,OAAA,EACA12F,MASAuyF,iBAAA,SAAAr3F,GASA,OARA8E,KAAAmsG,uBACA/5D,EAAAlkB,KAAAmyB,qBAAArgD,MAEAA,KAAA0J,OAAAxO,GACA8E,KAAA8rG,cACA9rG,KAAA+rG,uBACA/rG,KAAA4xE,YACA5xE,KAAA02F,OAAA,EACA12F,MAMAw3C,eAAA,SAAAt8C,GACA8E,KAAA02F,OAAA,EACAx7F,EAAAy2E,MAAA3xE,KACA9E,EAAA89C,KAAA,SAAAh5C,KAAAqzC,SAMAyE,iBAAA,SAAA58C,GACA8E,KAAA02F,OAAA,SACAx7F,EAAAy2E,OAMA34B,KAAA,SAAAj6C,EAAAtE,GACA,IAAAhB,EAAAuG,KAAAu3C,SAAAh+C,OACA,GAAAyG,KAAA2rG,cACA,KAAAlyG,KACAuG,KAAAu3C,SAAA99C,GAAA6/F,WAAAv6F,EAAAtE,GAGA,GAAA,WAAAsE,EACA,KAAAtF,KACAuG,KAAAu3C,SAAA99C,GAAAu/C,KAAAj6C,EAAAtE,GAGA23C,EAAAt2C,OAAAE,UAAAg9C,KAAA1+C,KAAA0F,KAAAjB,EAAAtE,IAQAkwE,SAAA,SAAAC,GACA,IAAAwhC,EAAApsG,KAAA8sE,qBACAu/B,EAAArsG,KAAAu3C,SAAAlzC,IAAA,SAAAvK,GACA,IAAAwyG,EAAAxyG,EAAAgzE,qBACAhzE,EAAAgzE,qBAAAs/B,EACA,IAAAG,EAAAzyG,EAAA6wE,SAAAC,GAEA,OADA9wE,EAAAgzE,qBAAAw/B,EACAC,IAEAzyG,EAAAs4C,EAAAt2C,OAAAE,UAAA2uE,SAAArwE,KAAA0F,KAAA4qE,GAEA,OADA9wE,EAAA8I,QAAAypG,EACAvyG,GAQAq7E,iBAAA,SAAAvK,GACA,IAAAyhC,EAAAhvD,EAAAr9C,KAAAq9C,WACA,GAAAA,EACAgvD,EAAAhvD,MAEA,CACA,IAAA+uD,EAAApsG,KAAA8sE,qBACAu/B,EAAArsG,KAAAu3C,SAAAlzC,IAAA,SAAAvK,GACA,IAAAwyG,EAAAxyG,EAAAgzE,qBACAhzE,EAAAgzE,qBAAAs/B,EACA,IAAAG,EAAAzyG,EAAAq7E,iBAAAvK,GAEA,OADA9wE,EAAAgzE,qBAAAw/B,EACAC,IAGA,IAAAzyG,EAAAs4C,EAAAt2C,OAAAE,UAAAm5E,iBAAA76E,KAAA0F,KAAA4qE,GAEA,OADA9wE,EAAA8I,QAAAypG,EACAvyG,GAOAkT,OAAA,SAAAyD,GACAzQ,KAAAszE,gBAAA,EACAtzE,KAAAunD,UAAA,SAAA92C,GACAzQ,KAAAszE,gBAAA,GAUAD,YAAA,WACA,IAAAm5B,EAAAp6D,EAAAt2C,OAAAE,UAAAq3E,YAAA/4E,KAAA0F,MACA,GAAAwsG,EACA,IAAA,IAAA/yG,EAAA,EAAAyY,EAAAlS,KAAAu3C,SAAAh+C,OAAAE,EAAAyY,EAAAzY,IACA,GAAAuG,KAAAu3C,SAAA99C,GAAA6gG,iBAEA,OADAt6F,KAAAq6F,YAAA,GACA,EAIA,OAAAmS,GAOAlS,eAAA,WACA,GAAAt6F,KAAAitE,OACA,OAAA76B,EAAAt2C,OAAAE,UAAAs+F,eAAAhgG,KAAA0F,MAEA,IAAA,IAAAvG,EAAA,EAAAyY,EAAAlS,KAAAu3C,SAAAh+C,OAAAE,EAAAyY,EAAAzY,IACA,GAAAuG,KAAAu3C,SAAA99C,GAAA6gG,iBACA,OAAA,EAGA,OAAA,GAOAjB,WAAA,WACA,OAAAr5F,KAAAq6F,YAAAr6F,KAAA2xE,OAAA3xE,KAAA2xE,MAAA0nB,cAOAU,WAAA,SAAAtpF,GACA,IAAA,IAAAhX,EAAA,EAAAyY,EAAAlS,KAAAu3C,SAAAh+C,OAAAE,EAAAyY,EAAAzY,IACAuG,KAAAu3C,SAAA99C,GAAAuT,OAAAyD,GAEAzQ,KAAA66F,cAAApqF,IAMAwpF,aAAA,SAAAa,GACA,GAAA96F,KAAAunD,UAAA,eAAAuzC,GACA,OAAA,EAEA,IAAA96F,KAAAu2F,eACA,OAAA,EAEA,IAAA,IAAA98F,EAAA,EAAAyY,EAAAlS,KAAAu3C,SAAAh+C,OAAAE,EAAAyY,EAAAzY,IACA,GAAAuG,KAAAu3C,SAAA99C,GAAAwgG,cAAA,GAAA,CACA,GAAAj6F,KAAA8zE,aAAA,CAEA,IAAAxwC,EAAAtjC,KAAA+3F,WAAA/3F,KAAA4zE,MAAArwC,EAAAvjC,KAAAg4F,YAAAh4F,KAAA6zE,MACA7zE,KAAAyiF,cAAApQ,WAAA/uC,EAAA,GAAAC,EAAA,EAAAD,EAAAC,GAEA,OAAA,EAGA,OAAA,GASA4oE,qBAAA,WAEA,OADAnsG,KAAAu3C,SAAAp9C,QAAA6F,KAAAysG,oBAAAzsG,MACAA,MAWAsrF,iBAAA,SAAApwF,GACA,IAAAilD,EAAAjlD,EAAAigE,sBACAj2D,EAAAktC,EAAAlkB,KAAAgxB,YAAAiB,GACAy0B,EAAA,IAAAxiC,EAAA6H,MAAA/0C,EAAAs6C,WAAAt6C,EAAAu6C,YASA,OARAvkD,EAAA4kD,OAAA,EACA5kD,EAAA6kD,OAAA,EACA7kD,EAAA+c,IAAA,SAAA/S,EAAAk6C,QACAlkD,EAAA+c,IAAA,SAAA/S,EAAAm6C,QACAnkD,EAAAokD,MAAAp6C,EAAAo6C,MACApkD,EAAAqkD,MAAAr6C,EAAAq6C,MACArkD,EAAAk+C,MAAAl0C,EAAAk0C,MACAl+C,EAAAogE,oBAAAsZ,EAAA,SAAA,UACA15E,GASAuxG,oBAAA,SAAAvxG,GAIA,OAHA8E,KAAAsrF,iBAAApwF,GACAA,EAAA02E,mBACA12E,EAAAy2E,MACA3xE,MAQAysC,QAAA,WAMA,OAHAzsC,KAAAu3C,SAAAp9C,QAAA,SAAAe,GACAA,EAAA+c,IAAA,SAAA,KAEAjY,KAAAmsG,wBASAO,kBAAA,WACA,GAAA1sG,KAAAqzC,OAAA,CAGA,IAAAzwC,EAAA5C,KAAAu3C,SAAAlE,EAAArzC,KAAAqzC,OACArzC,KAAAu3C,YACA,IAAAryC,EAAAlF,KAAA2qE,kBACAzlE,EAAAtC,QACA,IAAA00E,EAAA,IAAAllC,EAAAygD,oBAaA,OAZAvb,EAAAr/D,IAAA/S,GACAoyE,EAAAp9E,KAAA,kBACAm5C,EAAA3pC,OAAA1J,MACA4C,EAAAzI,QAAA,SAAAe,GACAA,EAAAy2E,MAAA2F,EACAp8E,EAAAw7F,OAAA,EACArjD,EAAA5pC,IAAAvO,KAEAo8E,EAAAjkC,OAAAA,EACAikC,EAAA//B,SAAA30C,EACAywC,EAAAq+B,cAAA4F,EACAA,EAAA1F,YACA0F,IAQAq1B,gBAAA,WACA,OAAA3sG,KAAAmsG,wBAQAS,iBAAA,WAKA,OAHA5sG,KAAA+3C,cAAA,SAAA78C,GACAA,EAAA02E,WAFA,GAAA,KAIA5xE,MAMA8rG,YAAA,SAAAe,GASA,IARA,IAEA50D,EAAAv1C,EAGAW,EALAkoG,KACAC,KAEAzmG,GAAA,KAAA,KAAA,KAAA,MACAtL,EAAA,EAAAqzG,EAAA9sG,KAAAu3C,SAAAh+C,OACAwzG,EAAAhoG,EAAAxL,OAGAE,EAAAqzG,IAAArzG,EAGA,KAFAw+C,EAAAj4C,KAAAu3C,SAAA99C,IACAm4E,WAJA,GAKAvuE,EAAA,EAAAA,EAAA0pG,EAAA1pG,IACAX,EAAAqC,EAAA1B,GACAkoG,EAAAvsG,KAAAi5C,EAAAynD,QAAAh9F,GAAA4gC,GACAkoE,EAAAxsG,KAAAi5C,EAAAynD,QAAAh9F,GAAA6gC,GAIAvjC,KAAAgtG,WAAAzB,EAAAC,EAAAqB,IAMAG,WAAA,SAAAzB,EAAAC,EAAAqB,GACA,IAAAI,EAAA,IAAA76D,EAAA6H,MAAAnI,EAAAy5D,GAAAz5D,EAAA05D,IACA0B,EAAA,IAAA96D,EAAA6H,MAAAnuB,EAAAy/E,GAAAz/E,EAAA0/E,IACAxsE,EAAAiuE,EAAA1pE,GAAA,EAAA9K,EAAAw0E,EAAA3pE,GAAA,EACAxC,EAAAosE,EAAA5pE,EAAA2pE,EAAA3pE,GAAA,EACAvC,EAAAmsE,EAAA3pE,EAAA0pE,EAAA1pE,GAAA,EACAvjC,KAAA8gC,MAAAA,EACA9gC,KAAA+gC,OAAAA,EACA8rE,GAGA7sG,KAAAs7D,qBAAAh4B,EAAA7K,EAAA8K,EAAAvE,GAAA,OAAA,QAUAglE,OAAA,SAAAznD,GAGA,IAFA,IAAA6rD,GAAA,MAAA,eAAA,QAEA3uG,EAAA,EAAAyY,EAAAlS,KAAAu3C,SAAAh+C,OAAAE,EAAAyY,EAAAzY,IACA2uG,EAAAppG,KAAA,OAAAgB,KAAAu3C,SAAA99C,GAAAoxE,MAAAtuB,IAGA,OADA6rD,EAAAppG,KAAA,UACAopG,GAOAxF,aAAA,WACA,IAAA3nE,OAAA,IAAAj7B,KAAAi7B,SAAA,IAAAj7B,KAAAi7B,QACA,YAAAj7B,KAAAi7B,QAAA,IAAA,GACA2P,EAAA5qC,KAAAiiB,QAAA,GAAA,uBACA,OACAgZ,EACAj7B,KAAA8iG,eACAl4D,GACAz9B,KAAA,KAQAspE,cAAA,SAAAl6B,GAGA,IAFA,IAAA6rD,KAEA3uG,EAAA,EAAAyY,EAAAlS,KAAAu3C,SAAAh+C,OAAAE,EAAAyY,EAAAzY,IACA2uG,EAAAppG,KAAA,KAAAgB,KAAAu3C,SAAA99C,GAAAg9E,cAAAl6B,IAGA,OAAAv8C,KAAAikG,6BAAAmE,GAAA7rD,QAAAA,OAYAnK,EAAAgL,MAAAR,WAAA,SAAA1hD,EAAA+F,GACA,IAAA2B,EAAA1H,EAAA0H,QACAsC,EAAAktC,EAAAlkB,KAAAhzB,OAAAwF,MAAAxF,GAAA,UACAgK,EAAAtC,QACA,iBAAAA,EASAwvC,EAAAlkB,KAAAouB,eAAA15C,EAAA,SAAA45C,GACApK,EAAAlkB,KAAAouB,gBAAAphD,EAAAggE,UAAA,SAAAiyC,GACA,IAAAjoG,EAAAktC,EAAAlkB,KAAAhzB,OAAAwF,MAAAxF,GAAA,GACAgK,EAAAg2D,SAAAiyC,EAAA,UACAjoG,EAAAtC,QACA3B,GAAAA,EAAA,IAAAmxC,EAAAgL,MAAAZ,EAAAt3C,GAAA,QAZAktC,EAAA0mB,eAAAl2D,EAAA,SAAA0B,GACA,IAAAqtE,EAAAv/B,EAAAlkB,KAAAgvB,iBAAA54C,EAAApJ,EAAA0H,GACA+uE,EAAA15D,IAAA/S,GACAjE,GAAAA,EAAA0wE,OAlkBA,CAglBA,oBAAA14B,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WAEAA,EAAAygD,kBAWAzgD,EAAAygD,gBAAAzgD,EAAAlkB,KAAAvpB,YAAAytC,EAAAgL,OAOAljD,KAAA,kBAQAytD,WAAA,SAAA/kD,EAAAsC,GACAA,EAAAA,MACAlF,KAAAu3C,SAAA30C,MACA,IAAA,IAAAnJ,EAAAuG,KAAAu3C,SAAAh+C,OAAAE,KACAuG,KAAAu3C,SAAA99C,GAAAk4E,MAAA3xE,KAGAkF,EAAAs3E,UACAx8E,KAAAw8E,QAAAt3E,EAAAs3E,SAEAt3E,EAAAu3E,UACAz8E,KAAAy8E,QAAAv3E,EAAAu3E,SAEAz8E,KAAA8rG,cACA9rG,KAAA+rG,uBACA35D,EAAAt2C,OAAAE,UAAA2rD,WAAArtD,KAAA0F,KAAAkF,GACAlF,KAAA4xE,aAUAw7B,QAAA,WACA,IAAAxqG,EAAA5C,KAAAu3C,SAAAvzC,SACAhE,KAAAu3C,YACA,IAAAryC,EAAAktC,EAAAt2C,OAAAE,UAAA2uE,SAAArwE,KAAA0F,MACAqtG,EAAA,IAAAj7D,EAAAgL,UAQA,UAPAl4C,EAAAhL,KACAmzG,EAAAp1F,IAAA/S,GACAtC,EAAAzI,QAAA,SAAAe,GACAA,EAAAm4C,OAAA3pC,OAAAxO,GACAA,EAAAy2E,MAAA07B,IAEAA,EAAA91D,SAAA30C,GACA5C,KAAAqzC,OACA,OAAAg6D,EAEA,IAAAh6D,EAAArzC,KAAAqzC,OAIA,OAHAA,EAAA5pC,IAAA4jG,GACAh6D,EAAAq+B,cAAA27B,EACAA,EAAAz7B,YACAy7B,GAQAtiB,WAAA,WAEA,OADA/qF,KAAAysC,WACA,GAOAxyC,SAAA,WACA,MAAA,8BAAA+F,KAAAk4C,aAAA,MAWAm7B,YAAA,WACA,OAAA,GAOAgmB,WAAA,WACA,OAAA,GASAxW,gBAAA,SAAApyE,EAAA4qF,EAAAiS,GACA78F,EAAAytC,OACAztC,EAAAotE,YAAA79E,KAAA2vF,SAAA3vF,KAAA+1F,wBAAA,EACA/1F,KAAAunD,UAAA,kBAAA92C,EAAA4qF,QAEA,KADAiS,EAAAA,OACApX,cACAoX,EAAApX,aAAA,QAEA,IAAAoX,EAAAnb,mBACAmb,EAAAnb,kBAAA,GAEAmb,EAAA/R,oBAAA,EACA,IAAA,IAAA9hG,EAAA,EAAAyY,EAAAlS,KAAAu3C,SAAAh+C,OAAAE,EAAAyY,EAAAzY,IACAuG,KAAAu3C,SAAA99C,GAAAopF,gBAAApyE,EAAA68F,GAEA78F,EAAA4tC,aAWAjM,EAAAygD,gBAAAj2C,WAAA,SAAA1hD,EAAA+F,GACAmxC,EAAAlkB,KAAAouB,eAAAphD,EAAA0H,QAAA,SAAA45C,UACAthD,EAAA0H,QACA3B,GAAAA,EAAA,IAAAmxC,EAAAygD,gBAAAr2C,EAAAthD,GAAA,QAzJA,CA6JA,oBAAA+9C,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAAtS,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OAEAsS,EAAA2+B,SACA3+B,EAAA2+B,WAGA3+B,EAAA2+B,OAAA6nB,MACA7nB,EAAApvB,KAAA,qCAWAovB,EAAA6nB,MAAA7nB,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,QAOA5B,KAAA,QAQA6hD,YAAA,GAQAy/B,YAAA,EASA+xB,kBAAA,EAQAC,YAAA,EAQAC,YAAA,EAOAC,gBAAA,EAOAC,gBAAA,EAQAC,oBAAA,GAQAhX,gBAAAxkD,EAAAt2C,OAAAE,UAAA46F,gBAAA5yF,OAAA,QAAA,SAQA6pG,SAAA,GAQAvR,MAAA,EAQAC,MAAA,EASA50C,WAAA,SAAApmC,EAAArc,GACAA,IAAAA,MACAlF,KAAA8tG,WACA9tG,KAAA6tG,SAAA,UAAAz7D,EAAAt2C,OAAAs6D,QACAp2D,KAAAunD,UAAA,aAAAriD,GACAlF,KAAA+tG,aAAAxsF,EAAArc,IAOAgtE,WAAA,WACA,OAAAlyE,KAAAguG,cAYAC,WAAA,SAAA1sF,EAAArc,GAgBA,OAfAlF,KAAAkuG,cAAAluG,KAAA6tG,UACA7tG,KAAAkuG,cAAAluG,KAAA6tG,SAAA,aACA7tG,KAAAguG,SAAAzsF,EACAvhB,KAAAk6D,iBAAA34C,EACAvhB,KAAAmuG,YAAAjpG,GACA,IAAAlF,KAAA8tG,QAAAv0G,QACAyG,KAAAouG,eAMApuG,KAAAquG,cACAruG,KAAAsuG,qBAEAtuG,MAMAkuG,cAAA,SAAAnvG,GACA,IAAAwvG,EAAAn8D,EAAAo8D,cACAD,GAAAA,EAAAE,mBACAF,EAAAE,kBAAA1vG,IAOAm5E,QAAA,WACAl4E,KAAAkuG,cAAAluG,KAAA6tG,UACA7tG,KAAAkuG,cAAAluG,KAAA6tG,SAAA,aACA7tG,KAAAyiF,mBAAA3lF,GACA,mBAAA,WAAA,cAAA,gBAAA3C,QAAA,SAAAonB,GACA6wB,EAAAlkB,KAAAk9B,iBAAAprD,KAAAuhB,IACAvhB,KAAAuhB,QAAAzkB,GACAkP,KAAAhM,QAQA0uG,eAAA,SAAAj0G,GAIA,OAHAuF,KAAA+7C,YAAAthD,EACAuF,KAAAguG,SAAAjyD,YAAAthD,EAEAuF,MAOA2uG,gBAAA,WACA,IAAAptF,EAAAvhB,KAAAkyE,aACA,OACApxC,MAAAvf,EAAAkrD,cAAAlrD,EAAAuf,MACAC,OAAAxf,EAAAmrD,eAAAnrD,EAAAwf,SAQA6tE,QAAA,SAAAn+F,GACA,GAAAzQ,KAAA4xD,QAAA,IAAA5xD,KAAAw7E,YAAA,CAGA,IAAAxnE,EAAAhU,KAAA8gC,MAAA,EAAAg+B,EAAA9+D,KAAA+gC,OAAA,EACAtwB,EAAAquC,YACAruC,EAAA0tC,QAAAnqC,GAAA8qD,GACAruD,EAAA0jE,OAAAngE,GAAA8qD,GACAruD,EAAA0jE,OAAAngE,EAAA8qD,GACAruD,EAAA0jE,QAAAngE,EAAA8qD,GACAruD,EAAA0jE,QAAAngE,GAAA8qD,GACAruD,EAAA2jE,cAOA2nB,oBAAA,SAAAtrF,GACA,IAAA6yB,GAAAtjC,KAAA8gC,MAAA,EACAyC,GAAAvjC,KAAA+gC,OAAA,EACA/sB,EAAAhU,KAAA8gC,MACAg+B,EAAA9+D,KAAA+gC,OAEAtwB,EAAAytC,OACAl+C,KAAA26F,iBAAAlqF,EAAAzQ,MAEAyQ,EAAAquC,YACA1M,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6yB,EAAAC,EAAAD,EAAAtvB,EAAAuvB,EAAAvjC,KAAA64E,iBACAzmC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6yB,EAAAtvB,EAAAuvB,EAAAD,EAAAtvB,EAAAuvB,EAAAu7B,EAAA9+D,KAAA64E,iBACAzmC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6yB,EAAAtvB,EAAAuvB,EAAAu7B,EAAAx7B,EAAAC,EAAAu7B,EAAA9+D,KAAA64E,iBACAzmC,EAAAlkB,KAAAsvB,eAAA/sC,EAAA6yB,EAAAC,EAAAu7B,EAAAx7B,EAAAC,EAAAvjC,KAAA64E,iBACApoE,EAAA2jE,YACA3jE,EAAA4tC,WAQAssB,SAAA,SAAAC,GACA,IAAAkjC,KAEA9tG,KAAA8tG,QAAA3zG,QAAA,SAAA00G,GACAA,GACAf,EAAA9uG,KAAA6vG,EAAAlkC,cAGA,IAAAzvE,EAAAiG,EACAnB,KAAAunD,UACA,YACA,cAAA,QAAA,SAAAvjD,OAAA4mE,KAEAjqE,IAAAX,KAAA8uG,SACAhB,QAAAA,IAKA,OAHA9tG,KAAAquG,eACAnzG,EAAAmzG,aAAAruG,KAAAquG,aAAA1jC,YAEAzvE,GAOA6zG,QAAA,WACA,OAAA/uG,KAAAs8F,OAAAt8F,KAAAu8F,OAAAv8F,KAAA8gC,MAAA9gC,KAAAguG,SAAAltE,OAAA9gC,KAAA+gC,OAAA/gC,KAAAguG,SAAAjtE,QASAijE,OAAA,WACA,IAAAgL,EAAA5G,KAAA6G,KACA3rE,GAAAtjC,KAAA8gC,MAAA,EAAAyC,GAAAvjC,KAAA+gC,OAAA,EAAAm6B,EAAA,GACA,GAAAl7D,KAAA+uG,UAAA,CACA,IAAAh5B,EAAA3jC,EAAAt2C,OAAAs6D,QACAgyC,EAAAppG,KACA,2BAAA+2E,EAAA,OACA,cAAAzyC,EAAA,QAAAC,EAAA,YAAAvjC,KAAA8gC,MAAA,aAAA9gC,KAAA+gC,OAAA,SACA,iBAEAm6B,EAAA,8BAAA6a,EAAA,MAYA,GAVAk5B,EAAAjwG,KAAA,YAAA,eAAA,eAAAgB,KAAAkvG,WAAA,GACA,QAAA5rE,EAAAtjC,KAAAs8F,MAAA,QAAA/4D,EAAAvjC,KAAAu8F,MAIA,YAAAv8F,KAAAguG,SAAAltE,OAAA9gC,KAAAguG,SAAAvhC,aACA,aAAAzsE,KAAAguG,SAAAjtE,QAAA/gC,KAAAguG,SAAAjtE,OACA,IAAAm6B,EACA,eAEAl7D,KAAA4xD,QAAA5xD,KAAA64E,gBAAA,CACA,IAAAs2B,EAAAnvG,KAAAi3C,KACAj3C,KAAAi3C,KAAA,KACA+3D,GACA,WACA,MAAA1rE,EAAA,QAAAC,EACA,YAAAvjC,KAAA8gC,MAAA,aAAA9gC,KAAA+gC,OACA,YAAA/gC,KAAA4iG,eACA,SAEA5iG,KAAAi3C,KAAAk4D,EAQA,OALA/G,EADA,SAAApoG,KAAA22F,WACAyR,EAAApkG,OAAAgrG,EAAAC,GAGA7G,EAAApkG,OAAAirG,EAAAD,IAWAF,OAAA,SAAAM,GACA,IAAA7tF,EAAA6tF,EAAApvG,KAAAguG,SAAAhuG,KAAAk6D,iBACA,OAAA34C,EACAA,EAAAk9B,UACAl9B,EAAAk9B,YAGAz+C,KAAAutG,iBACAhsF,EAAAkI,aAAA,OAGAlI,EAAA5gB,IAIAX,KAAAW,KAAA,IAYA0uG,OAAA,SAAA1uG,EAAAM,EAAAiE,GAMA,OALAktC,EAAAlkB,KAAA4tB,UAAAn7C,EAAA,SAAA+gB,GACA1hB,KAAAiuG,WAAAvsF,EAAAxc,GACAlF,KAAAunG,kBACAtmG,GAAAA,EAAAjB,OACAA,KAAAkF,GAAAA,EAAA62C,aACA/7C,MAOA/F,SAAA,WACA,MAAA,2BAAA+F,KAAA8uG,SAAA,QAGAR,mBAAA,WACA,IAAAzrG,EAAA7C,KAAAquG,aACAiB,EAAAtvG,KAAA4tG,oBACArW,EAAAv3F,KAAAw3F,wBACAp4C,EAAAm4C,EAAAn4C,OACAC,EAAAk4C,EAAAl4C,OACAkwD,EAAAvvG,KAAAwvG,aAAAxvG,KAAAk6D,iBAIA,GAHAl6D,KAAA2xE,OACA3xE,KAAAiY,IAAA,SAAA,IAEApV,GAAAu8C,EAAAkwD,GAAAjwD,EAAAiwD,EAMA,OALAtvG,KAAAguG,SAAAuB,EACAvvG,KAAA0tG,gBAAA,EACA1tG,KAAA2tG,gBAAA,EACA3tG,KAAAwtG,YAAApuD,OACAp/C,KAAAytG,YAAApuD,GAGAjN,EAAAo8D,gBACAp8D,EAAAo8D,cAAAp8D,EAAAmE,qBAEA,IAAAmI,EAAAtM,EAAAlkB,KAAAowB,sBACAuvD,EAAA7tG,KAAAwvG,YAAAxvG,KAAA6tG,SAAA,YAAA7tG,KAAA6tG,SACA4B,EAAAF,EAAAzuE,MAAA4uE,EAAAH,EAAAxuE,OACA2d,EAAA5d,MAAA2uE,EACA/wD,EAAA3d,OAAA2uE,EACA1vG,KAAAguG,SAAAtvD,EACA1+C,KAAAwtG,YAAA3qG,EAAAu8C,OAAAA,EACAp/C,KAAAytG,YAAA5qG,EAAAw8C,OAAAA,EACAjN,EAAAo8D,cAAAJ,cACAvrG,GAAA0sG,EAAAE,EAAAC,EAAA1vG,KAAAguG,SAAAH,GACA7tG,KAAA0tG,gBAAAhvD,EAAA5d,MAAA9gC,KAAAk6D,iBAAAp5B,MACA9gC,KAAA2tG,gBAAAjvD,EAAA3d,OAAA/gC,KAAAk6D,iBAAAn5B,QAWAqtE,aAAA,SAAAN,GASA,GANAA,GADAA,EAAAA,GAAA9tG,KAAA8tG,aACAjrG,OAAA,SAAAA,GAAA,OAAAA,IAAAA,EAAA8sG,mBACA3vG,KAAAiY,IAAA,SAAA,GAGAjY,KAAAkuG,cAAAluG,KAAA6tG,SAAA,aAEA,IAAAC,EAAAv0G,OAKA,OAJAyG,KAAAguG,SAAAhuG,KAAAk6D,iBACAl6D,KAAAwvG,YAAA,KACAxvG,KAAA0tG,gBAAA,EACA1tG,KAAA2tG,gBAAA,EACA3tG,KAGA,IAAA4vG,EAAA5vG,KAAAk6D,iBACAu1C,EAAAG,EAAAnjC,cAAAmjC,EAAA9uE,MACA4uE,EAAAE,EAAAljC,eAAAkjC,EAAA7uE,OAEA,GAAA/gC,KAAAguG,WAAAhuG,KAAAk6D,iBAAA,CAEA,IAAAxb,EAAAtM,EAAAlkB,KAAAowB,sBACAI,EAAA5d,MAAA2uE,EACA/wD,EAAA3d,OAAA2uE,EACA1vG,KAAAguG,SAAAtvD,EACA1+C,KAAAwvG,YAAA9wD,OAKA1+C,KAAAguG,SAAAhuG,KAAAwvG,YACAxvG,KAAAwvG,YAAAj8D,WAAA,MAAA8+B,UAAA,EAAA,EAAAo9B,EAAAC,GAEA1vG,KAAAwtG,YAAA,EACAxtG,KAAAytG,YAAA,EAYA,OAVAr7D,EAAAo8D,gBACAp8D,EAAAo8D,cAAAp8D,EAAAmE,qBAEAnE,EAAAo8D,cAAAJ,aACAN,EAAA9tG,KAAAk6D,iBAAAu1C,EAAAC,EAAA1vG,KAAAguG,SAAAhuG,KAAA6tG,UACA7tG,KAAAk6D,iBAAAp5B,QAAA9gC,KAAAguG,SAAAltE,OACA9gC,KAAAk6D,iBAAAn5B,SAAA/gC,KAAAguG,SAAAjtE,SACA/gC,KAAA0tG,gBAAA1tG,KAAAguG,SAAAltE,MAAA9gC,KAAAk6D,iBAAAp5B,MACA9gC,KAAA2tG,gBAAA3tG,KAAAguG,SAAAjtE,OAAA/gC,KAAAk6D,iBAAAn5B,QAEA/gC,MAOAy6E,QAAA,SAAAhqE,IACA,IAAAzQ,KAAA2vF,UAAA3vF,KAAAquG,cAAAruG,KAAA6vG,gBACA7vG,KAAAsuG,qBAEAtuG,KAAA4uG,QAAAn+F,GACAzQ,KAAA47F,oBAAAnrF,IAcA4iE,YAAA,WACA,OAAArzE,KAAAo6F,oBAGA0B,YAAA,SAAArrF,GACA,IAAAq/F,EAAA9vG,KAAAguG,SACAh6F,EAAAhU,KAAA8gC,MAAAg+B,EAAA9+D,KAAA+gC,OACAgvE,EAAAzmG,KAAAwoC,IAAAg+D,EAAArjC,cAAAqjC,EAAAhvE,MAAA9sB,EAAAhU,KAAA0tG,iBACAsC,EAAA1mG,KAAAwoC,IAAAg+D,EAAApjC,eAAAojC,EAAA/uE,OAAA+9B,EAAA9+D,KAAA2tG,iBACArqE,GAAAtvB,EAAA,EAAAuvB,GAAAu7B,EAAA,EACAmxC,EAAA3mG,KAAAwiB,IAAA,EAAA9rB,KAAAs8F,MAAAt8F,KAAA0tG,iBACAwC,EAAA5mG,KAAAwiB,IAAA,EAAA9rB,KAAAu8F,MAAAv8F,KAAA2tG,iBAEAmC,GAAAr/F,EAAAijC,UAAAo8D,EAAAG,EAAAC,EAAAH,EAAAC,EAAA1sE,EAAAC,EAAAvvB,EAAA8qD,IAOA+wC,aAAA,WACA,IAAA3lE,EAAAlqC,KAAAw3F,wBACA,OAAAttD,EAAAkV,SAAAp/C,KAAAwtG,aAAAtjE,EAAAmV,SAAAr/C,KAAAytG,aAMA0C,kBAAA,WACAnwG,KAAAiY,IAAAjY,KAAA2uG,oBAUAZ,aAAA,SAAAxsF,EAAArc,GACAlF,KAAAiuG,WAAA77D,EAAAlkB,KAAAs8B,QAAAjpC,GAAArc,GACAktC,EAAAlkB,KAAA6N,SAAA/7B,KAAAkyE,aAAA9/B,EAAA6nB,MAAAm2C,aAOAjC,YAAA,SAAAjpG,GACAA,IAAAA,MACAlF,KAAAksE,WAAAhnE,GACAlF,KAAAunG,gBAAAriG,GACAlF,KAAAguG,UAAAhuG,KAAA+7C,cACA/7C,KAAAguG,SAAAjyD,YAAA/7C,KAAA+7C,cASAs0D,aAAA,SAAAvC,EAAA7sG,GACA6sG,GAAAA,EAAAv0G,OACA64C,EAAAlkB,KAAAouB,eAAAwxD,EAAA,SAAAtxD,GACAv7C,GAAAA,EAAAu7C,IACA,wBAGAv7C,GAAAA,KAUAsmG,gBAAA,SAAAriG,GACAA,IAAAA,MACA,IAAA0a,EAAA5f,KAAAkyE,aACAlyE,KAAA8gC,MAAA57B,EAAA47B,OAAAlhB,EAAA6sD,cAAA7sD,EAAAkhB,OAAA,EACA9gC,KAAA+gC,OAAA77B,EAAA67B,QAAAnhB,EAAA8sD,eAAA9sD,EAAAmhB,QAAA,GASA8f,kCAAA,WACA,IAGA/8C,EAHAwsG,EAAAl+D,EAAAlkB,KAAA2yB,kCAAA7gD,KAAA40D,qBAAA,IACA27C,EAAAvwG,KAAAguG,SAAAltE,MAAA0vE,EAAAxwG,KAAAguG,SAAAjtE,OACAqe,EAAA,EAAAC,EAAA,EAAAxb,EAAA,EAAAC,EAAA,EAAAw4D,EAAA,EAAAC,EAAA,EACAkU,EAAAzwG,KAAA8gC,MAAA4vE,EAAA1wG,KAAA+gC,OAAAgnE,GAAAjnE,MAAA2vE,EAAA1vE,OAAA2vE,GA2CA,OA1CAJ,GAAA,SAAAA,EAAAvvD,QAAA,SAAAuvD,EAAAtvD,QAuCA5B,EAAAqxD,EAAAF,EACAlxD,EAAAqxD,EAAAF,IAvCA,SAAAF,EAAAxvD,cACA1B,EAAAC,EAAAjN,EAAAlkB,KAAAwzB,eAAA1hD,KAAAguG,SAAAjG,GACAjkG,GAAA2sG,EAAAF,EAAAnxD,GAAA,EACA,QAAAkxD,EAAAvvD,SACAld,GAAA//B,GAEA,QAAAwsG,EAAAvvD,SACAld,EAAA//B,GAEAA,GAAA4sG,EAAAF,EAAAnxD,GAAA,EACA,QAAAixD,EAAAtvD,SACAld,GAAAhgC,GAEA,QAAAwsG,EAAAtvD,SACAld,EAAAhgC,IAGA,UAAAwsG,EAAAxvD,cACA1B,EAAAC,EAAAjN,EAAAlkB,KAAAyzB,iBAAA3hD,KAAAguG,SAAAjG,GACAjkG,EAAAysG,EAAAE,EAAArxD,EACA,QAAAkxD,EAAAvvD,SACAu7C,EAAAx4F,EAAA,GAEA,QAAAwsG,EAAAvvD,SACAu7C,EAAAx4F,GAEAA,EAAA0sG,EAAAE,EAAArxD,EACA,QAAAixD,EAAAtvD,SACAu7C,EAAAz4F,EAAA,GAEA,QAAAwsG,EAAAtvD,SACAu7C,EAAAz4F,GAEAysG,EAAAE,EAAArxD,EACAoxD,EAAAE,EAAArxD,KAQAve,MAAAyvE,EACAxvE,OAAAyvE,EACApxD,OAAAA,EACAC,OAAAA,EACAxb,WAAAA,EACAC,UAAAA,EACAw4D,MAAAA,EACAC,MAAAA,MAWAnqD,EAAA6nB,MAAAm2C,WAAA,aAMAh+D,EAAA6nB,MAAAj+D,UAAAkzG,UAAA98D,EAAA6nB,MAAAj+D,UAAA8yG,OAQA18D,EAAA6nB,MAAArd,WAAA,SAAA+zD,EAAA1vG,GACA,IAAA/F,EAAAk3C,EAAAlkB,KAAAhzB,OAAAwF,MAAAiwG,GACAv+D,EAAAlkB,KAAA4tB,UAAA5gD,EAAAyF,IAAA,SAAA+gB,EAAAlS,GACAA,EACAvO,GAAAA,EAAA,KAAAuO,GAGA4iC,EAAA6nB,MAAAj+D,UAAAq0G,aAAA/1G,KAAAY,EAAAA,EAAA4yG,QAAA,SAAAA,GACA5yG,EAAA4yG,QAAAA,MACA17D,EAAA6nB,MAAAj+D,UAAAq0G,aAAA/1G,KAAAY,GAAAA,EAAAmzG,cAAA,SAAAuC,GACA11G,EAAAmzG,aAAAuC,EAAA,GACAx+D,EAAAlkB,KAAAouB,gBAAAphD,EAAAggE,UAAA,SAAAmjC,GACAnjG,EAAAggE,SAAAmjC,EAAA,GACA,IAAAr2E,EAAA,IAAAoqB,EAAA6nB,MAAAv4C,EAAAxmB,GACA+F,EAAA+mB,UAIA,KAAA9sB,EAAA6gD,cAUA3J,EAAA6nB,MAAA42C,QAAA,SAAAv2F,EAAArZ,EAAA6vG,GACA1+D,EAAAlkB,KAAA4tB,UAAAxhC,EAAA,SAAAoH,GACAzgB,GAAAA,EAAA,IAAAmxC,EAAA6nB,MAAAv4C,EAAAovF,KACA,KAAAA,GAAAA,EAAA/0D,cASA3J,EAAA6nB,MAAA6tC,gBACA11D,EAAA4C,kBAAAhxC,OAAA,8DAAA1K,MAAA,MAUA84C,EAAA6nB,MAAAJ,YAAA,SAAAt4C,EAAAtgB,EAAAiE,GACA,IAAA6iG,EAAA31D,EAAA8kB,gBAAA31C,EAAA6wB,EAAA6nB,MAAA6tC,iBACA11D,EAAA6nB,MAAA42C,QAAA9I,EAAA,cAAA9mG,EACAE,EAAA+D,EAAAktC,EAAAlkB,KAAAhzB,OAAAwF,MAAAwE,MAAA6iG,MAruBA,CAyuBA,oBAAA9uD,QAAAA,QAAAj5C,MAGAoyC,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAt2C,OAAAE,WAMA+0G,4BAAA,WACA,IAAA33D,EAAAp5C,KAAAo5C,MAAA,IACA,OAAAA,EAAA,EACA,GAAA9vC,KAAA65B,OAAAiW,EAAA,GAAA,IAEA,GAAA9vC,KAAA65B,MAAAiW,EAAA,KAQA43D,WAAA,WAEA,OADAhxG,KAAAo+C,OAAAp+C,KAAA+wG,+BACA/wG,MAWAixG,aAAA,SAAA5K,GAGA,IAAAxlF,EAAA,aACA6qC,GAHA26C,EAAAA,OAGA36C,YAAA7qC,EACAksC,EAAAs5C,EAAAt5C,UAAAlsC,EACA4mC,EAAAznD,KAgBA,OAdAoyC,EAAAlkB,KAAA2a,SACAmkB,WAAAhtD,KAAAiJ,IAAA,SACAgkD,SAAAjtD,KAAA+wG,8BACAhoE,SAAA/oC,KAAAmmG,YACAp5C,SAAA,SAAAtyD,GACAgtD,EAAArJ,OAAA3jD,GACAsyD,KAEArB,WAAA,WACAjE,EAAAmqB,YACAlmB,OAIA1rD,QAIAoyC,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAm7B,aAAAvxE,WAQAk1G,iBAAA,SAAAh2G,GAGA,OAFAA,EAAA81G,aACAhxG,KAAA03C,mBACA13C,MASAmxG,mBAAA,SAAAj2G,GAIA,OAHAA,EAAA+1G,cACAlkD,SAAA/sD,KAAA2tE,wBAEA3tE,QAKA,WAEA,aAQA,SAAAoxG,EAAAl+D,EAAAm+D,GACA,IAAAC,EAAA,aAAAD,EAAA,yBACAE,EAAAr+D,EAAAs+D,aAAAt+D,EAAAu+D,iBAGA,OAFAv+D,EAAAw+D,aAAAH,EAAAD,GACAp+D,EAAAy+D,cAAAJ,KACAr+D,EAAA0+D,mBAAAL,EAAAr+D,EAAA2+D,gBAwCA,SAAAl7D,EAAAzxC,GACAA,GAAAA,EAAA0xC,WACA52C,KAAA42C,SAAA1xC,EAAA0xC,UAEA52C,KAAA8xG,eAAA9xG,KAAA42C,SAAA52C,KAAA42C,UACA52C,KAAA+xG,iBAlCA3/D,EAAAoE,iBAAA,SAAAI,GACA,GAAAxE,EAAA0C,aACA,OAAA,EAEA8B,EAAAA,GAAAxE,EAAAuE,mBAAA36C,UAAA46C,SACA,IAAAvD,EAAAn/B,SAAA0H,cAAA,UACAs3B,EAAAG,EAAAE,WAAA,UAAAF,EAAAE,WAAA,sBACAy+D,GAAA,EAEA,GAAA9+D,EAAA,CACAd,EAAAsE,eAAAxD,EAAA++D,aAAA/+D,EAAAg/D,kBACAF,EAAA5/D,EAAAsE,gBAAAE,EAEA,IADA,IAAAu7D,GAAA,QAAA,UAAA,QACA14G,EAAA,EAAAA,EAAA,EAAAA,IACA,GAAA23G,EAAAl+D,EAAAi/D,EAAA14G,IAAA,CACA24C,EAAAggE,eAAAD,EAAA14G,GACA,OAKA,OADAuG,KAAAgyG,YAAAA,EACAA,GAGA5/D,EAAAuE,mBAAAA,EAaAA,EAAA36C,WAEA46C,SAAA,KASAjE,aAOAm/D,eAAA,SAAAhxE,EAAAC,GACA/gC,KAAAk4E,UACAl4E,KAAAqyG,kBAAAvxE,EAAAC,GAEA/gC,KAAAsyG,UAAA,IAAAC,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IACAvyG,KAAAwyG,8BAAA1xE,EAAAC,IAOAyxE,8BAAA,SAAA1xE,EAAAC,GACA,IAAA0xE,EAAAC,OAAA,IAAA13G,OAAA23G,YACA,IACA,IAAAj+D,UAAA,EAAA,GACA+9D,GAAA,EAEA,MAAAnlG,GACAmlG,GAAA,EAGA,IAAAG,EAAA,oBAAAC,YAEAC,EAAA,oBAAAz+D,kBAEA,GAAAq+D,GAAAD,GAAAG,GAAAE,EAAA,CAIA,IAAAx/D,EAAAlB,EAAAlkB,KAAAowB,sBAEAnK,EAAA,IAAA0+D,YAAA/xE,EAAAC,EAAA,GACA,GAAAqR,EAAAkE,oBAGA,OAFAt2C,KAAAm0C,YAAAA,OACAn0C,KAAA+yG,WAAAp/D,GAGA,IAMAq/D,EAAAC,EAAAC,EANAC,GACAh/D,YAAAA,EACAN,iBAAA/S,EACAiT,kBAAAhT,EACAuS,aAAAA,GAGAA,EAAAxS,MAAAA,EACAwS,EAAAvS,OAAAA,EAEAiyE,EAAAh4G,OAAA23G,YAAAS,MACAngE,EAAA34C,KAAA64G,EAAAnzG,KAAAkzC,GAAAigE,GACAF,EAAAj4G,OAAA23G,YAAAS,MAAAJ,EAEAA,EAAAh4G,OAAA23G,YAAAS,MACAz/D,EAAAr5C,KAAA64G,EAAAnzG,KAAAkzC,GAAAigE,GACAD,EAAAl4G,OAAA23G,YAAAS,MAAAJ,EAEAC,EAAAC,GACAlzG,KAAAm0C,YAAAA,EACAn0C,KAAA+yG,WAAAp/D,GAGA3zC,KAAA+yG,WAAA9/D,IAQAo/D,kBAAA,SAAAvxE,EAAAC,GACA,IAAAsS,EAAAjB,EAAAlkB,KAAAowB,sBACAjL,EAAAvS,MAAAA,EACAuS,EAAAtS,OAAAA,EACA,IAAAsyE,GACA/zC,OAAA,EACAg0C,oBAAA,EACAC,OAAA,EACAC,SAAA,EACAC,WAAA,GAEAvgE,EAAAG,EAAAE,WAAA,QAAA8/D,GACAngE,IACAA,EAAAG,EAAAE,WAAA,qBAAA8/D,IAEAngE,IAGAA,EAAAwgE,WAAA,EAAA,EAAA,EAAA,GAEA1zG,KAAAqzC,OAAAA,EACArzC,KAAAkzC,GAAAA,IAeAk7D,aAAA,SAAAN,EAAA1uG,EAAA0hC,EAAAC,EAAAuS,EAAAu6D,GACA,IACA8F,EADAzgE,EAAAlzC,KAAAkzC,GAEA26D,IACA8F,EAAA3zG,KAAA4zG,iBAAA/F,EAAAzuG,IAEA,IAAA+zC,GACAwgD,cAAAv0F,EAAA0hC,OAAA1hC,EAAAu0F,cACAC,eAAAx0F,EAAA2hC,QAAA3hC,EAAAw0F,eACA6b,YAAA3uE,EACA4uE,aAAA3uE,EACA8S,iBAAA/S,EACAiT,kBAAAhT,EACAh2B,QAAAmoC,EACA2gE,cAAA7zG,KAAA8zG,cAAA5gE,EAAApS,EAAAC,GAAA4yE,GAAAv0G,GACA20G,cAAA/zG,KAAA8zG,cAAA5gE,EAAApS,EAAAC,GACAizE,gBAAAL,GACA3zG,KAAA8zG,cAAA5gE,EAAApS,EAAAC,GAAA4yE,GAAAv0G,GACA60G,OAAAnG,EAAAv0G,OACA26G,OAAA,EACA5B,UAAAtyG,KAAAsyG,UACA6B,aAAAn0G,KAAAm0G,aACAC,KAAA,EACA5F,cAAAxuG,KACAszC,aAAAA,GAEA+gE,EAAAnhE,EAAAohE,oBAUA,OATAphE,EAAAqhE,gBAAArhE,EAAAshE,YAAAH,GACAvG,EAAA3zG,QAAA,SAAA0I,GAAAA,GAAAA,EAAA4xG,QAAAthE,KA6HA,SAAAA,GACA,IAAAG,EAAAH,EAAAG,aACAxS,EAAAwS,EAAAxS,MAAAC,EAAAuS,EAAAvS,OACA6S,EAAAT,EAAAU,iBACAC,EAAAX,EAAAY,kBAEAjT,IAAA8S,GAAA7S,IAAA+S,IACAR,EAAAxS,MAAA8S,EACAN,EAAAvS,OAAA+S,GApIA4gE,CAAAvhE,GACAnzC,KAAA+yG,WAAA7/D,EAAAC,GACAD,EAAAyhE,YAAAzhE,EAAA0hE,WAAA,MACA1hE,EAAA2hE,cAAA1hE,EAAA0gE,eACA3gE,EAAA2hE,cAAA1hE,EAAA4gE,eACA7gE,EAAA4hE,kBAAAT,GACA/gE,EAAAC,WAAA,MAAAmlD,aAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACAvlD,GAMA+kC,QAAA,WACAl4E,KAAAqzC,SACArzC,KAAAqzC,OAAA,KACArzC,KAAAkzC,GAAA,MAEAlzC,KAAA+0G,oBAMAA,iBAAA,WACA/0G,KAAAm0G,gBACAn0G,KAAAg1G,iBAcAlB,cAAA,SAAA5gE,EAAApS,EAAAC,EAAAk0E,GACA,IAAAC,EAAAhiE,EAAA4gE,gBAYA,OAXA5gE,EAAAyhE,YAAAzhE,EAAA0hE,WAAAM,GACAhiE,EAAAiiE,cAAAjiE,EAAA0hE,WAAA1hE,EAAAkiE,mBAAAliE,EAAAmiE,SACAniE,EAAAiiE,cAAAjiE,EAAA0hE,WAAA1hE,EAAAoiE,mBAAApiE,EAAAmiE,SACAniE,EAAAiiE,cAAAjiE,EAAA0hE,WAAA1hE,EAAAqiE,eAAAriE,EAAAsiE,eACAtiE,EAAAiiE,cAAAjiE,EAAA0hE,WAAA1hE,EAAAuiE,eAAAviE,EAAAsiE,eACAP,EACA/hE,EAAAwiE,WAAAxiE,EAAA0hE,WAAA,EAAA1hE,EAAAqB,KAAArB,EAAAqB,KAAArB,EAAAsB,cAAAygE,GAGA/hE,EAAAwiE,WAAAxiE,EAAA0hE,WAAA,EAAA1hE,EAAAqB,KAAAzT,EAAAC,EAAA,EAAAmS,EAAAqB,KAAArB,EAAAsB,cAAA,MAEA0gE,GAYAtB,iBAAA,SAAAn8F,EAAAw9F,GACA,GAAAj1G,KAAAg1G,aAAAv9F,GACA,OAAAzX,KAAAg1G,aAAAv9F,GAGA,IAAAy9F,EAAAl1G,KAAA8zG,cACA9zG,KAAAkzC,GAAA+hE,EAAAn0E,MAAAm0E,EAAAl0E,OAAAk0E,GAEA,OADAj1G,KAAAg1G,aAAAv9F,GAAAy9F,EACAA,GAUAzG,kBAAA,SAAAZ,GACA7tG,KAAAg1G,aAAAnH,KACA7tG,KAAAkzC,GAAA2hE,cAAA70G,KAAAg1G,aAAAnH,WACA7tG,KAAAg1G,aAAAnH,KAIAkF,WAAA9/D,EASA8+D,eAAA,WACA,GAAA/xG,KAAA21G,QACA,OAAA31G,KAAA21G,QAEA,IAAAziE,EAAAlzC,KAAAkzC,GAAAyiE,GAAAC,SAAA,GAAAC,OAAA,IACA,IAAA3iE,EACA,OAAAyiE,EAEA,IAAAG,EAAA5iE,EAAA6iE,aAAA,6BACA,GAAAD,EAAA,CACA,IAAAF,EAAA1iE,EAAA++D,aAAA6D,EAAAE,yBACAH,EAAA3iE,EAAA++D,aAAA6D,EAAAG,uBACAL,IACAD,EAAAC,SAAAA,EAAAx7G,eAEAy7G,IACAF,EAAAE,OAAAA,EAAAz7G,eAIA,OADA4F,KAAA21G,QAAAA,EACAA,IA9UA,GA6YA,WAEA,aAEA,IAAAjpG,EAAA,aAOA,SAAAmqC,KALAzE,EAAAyE,sBAAAA,EAOAA,EAAA76C,WACAyyG,kBAAA/hG,EACAwrE,QAAAxrE,EACAqoG,iBAAAroG,EASAimC,aAcAy7D,aAAA,SAAAN,EAAAoI,EAAAzG,EAAAC,EAAAp8D,GACA,IAAA7iC,EAAA6iC,EAAAC,WAAA,MACA9iC,EAAAijC,UAAAwiE,EAAA,EAAA,EAAAzG,EAAAC,GACA,IAAA/uD,EAAAlwC,EAAAmwC,aAAA,EAAA,EAAA6uD,EAAAC,GACAyG,EAAA1lG,EAAAmwC,aAAA,EAAA,EAAA6uD,EAAAC,GACAv8D,GACAs8D,YAAAA,EACAC,aAAAA,EACA/uD,UAAAA,EACAy1D,WAAAF,EACAC,kBAAAA,EACAz3D,SAAApL,EACA7iC,IAAAA,EACA+9F,cAAAxuG,MAQA,OANA8tG,EAAA3zG,QAAA,SAAA0I,GAAAA,EAAA4xG,QAAAthE,KACAA,EAAAwN,UAAA7f,QAAA2uE,GAAAt8D,EAAAwN,UAAA5f,SAAA2uE,IACAp8D,EAAAxS,MAAAqS,EAAAwN,UAAA7f,MACAwS,EAAAvS,OAAAoS,EAAAwN,UAAA5f,QAEAtwB,EAAAkkC,aAAAxB,EAAAwN,UAAA,EAAA,GACAxN,IA5DA,GAyEAf,EAAA6nB,MAAA7nB,EAAA6nB,UACA7nB,EAAA6nB,MAAA6zC,QAAA17D,EAAA6nB,MAAA6zC,YAOA17D,EAAA6nB,MAAA6zC,QAAAuI,WAAAjkE,EAAAlkB,KAAAvpB,aAOAzK,KAAA,aAOAo8G,aAAA,qJAOAhF,eAAA,iJAWA3pD,WAAA,SAAAziD,GACAA,GACAlF,KAAAksE,WAAAhnE,IAQAgnE,WAAA,SAAAhnE,GACA,IAAA,IAAAxC,KAAAwC,EACAlF,KAAA0C,GAAAwC,EAAAxC,IAWA6zG,cAAA,SAAArjE,EAAAo+D,EAAAgF,GACAhF,EAAAA,GAAAtxG,KAAAsxG,eACAgF,EAAAA,GAAAt2G,KAAAs2G,aACA,UAAAlkE,EAAAggE,iBACAd,EAAAA,EAAAxzG,QACA,yBACA,aAAAs0C,EAAAggE,eAAA,WAGA,IAAAoE,EAAAtjE,EAAAs+D,aAAAt+D,EAAAujE,eAGA,GAFAvjE,EAAAw+D,aAAA8E,EAAAF,GACApjE,EAAAy+D,cAAA6E,IACAtjE,EAAA0+D,mBAAA4E,EAAAtjE,EAAA2+D,gBACA,MAAA,IAAAxsG,MAEA,mCAAArF,KAAA9F,KAAA,KACAg5C,EAAAwjE,iBAAAF,IAIA,IAAAjF,EAAAr+D,EAAAs+D,aAAAt+D,EAAAu+D,iBAGA,GAFAv+D,EAAAw+D,aAAAH,EAAAD,GACAp+D,EAAAy+D,cAAAJ,IACAr+D,EAAA0+D,mBAAAL,EAAAr+D,EAAA2+D,gBACA,MAAA,IAAAxsG,MAEA,qCAAArF,KAAA9F,KAAA,KACAg5C,EAAAwjE,iBAAAnF,IAIA,IAAAoF,EAAAzjE,EAAAqjE,gBAIA,GAHArjE,EAAA0jE,aAAAD,EAAAH,GACAtjE,EAAA0jE,aAAAD,EAAApF,GACAr+D,EAAA2jE,YAAAF,IACAzjE,EAAA4jE,oBAAAH,EAAAzjE,EAAA6jE,aACA,MAAA,IAAA1xG,MAEA,wCACA6tC,EAAA8jE,kBAAAL,IAIA,IAAAM,EAAAj3G,KAAAk3G,sBAAAhkE,EAAAyjE,GACAQ,EAAAn3G,KAAAo3G,oBAAAlkE,EAAAyjE,OAGA,OAFAQ,EAAAE,OAAAnkE,EAAAokE,mBAAAX,EAAA,UACAQ,EAAAI,OAAArkE,EAAAokE,mBAAAX,EAAA,WAEAA,QAAAA,EACAM,mBAAAA,EACAE,iBAAAA,IAWAD,sBAAA,SAAAhkE,EAAAyjE,GACA,OACArE,UAAAp/D,EAAAskE,kBAAAb,EAAA,eAaAS,oBAAA,WAEA,UASAK,kBAAA,SAAAvkE,EAAA+jE,EAAAS,GACA,IAAAC,EAAAV,EAAA3E,UACAsF,EAAA1kE,EAAA2kE,eACA3kE,EAAA4kE,WAAA5kE,EAAA6kE,aAAAH,GACA1kE,EAAA8kE,wBAAAL,GACAzkE,EAAA+kE,oBAAAN,EAAA,EAAAzkE,EAAAglE,OAAA,EAAA,EAAA,GACAhlE,EAAAilE,WAAAjlE,EAAA6kE,aAAAL,EAAAxkE,EAAAklE,cAGAC,kBAAA,SAAAnzG,GACA,IAAA47B,EAAAC,EAAAmS,EAAAhuC,EAAA6F,QACA7F,EAAA+uG,OAAA,GACAnzE,EAAA57B,EAAA2uC,iBACA9S,EAAA77B,EAAA6uC,kBACA7uC,EAAAuqG,cAAA3uE,GAAA57B,EAAAwqG,eAAA3uE,IACAmS,EAAA2hE,cAAA3vG,EAAA6uG,eACA7uG,EAAA6uG,cAAA7uG,EAAAspG,cAAAsF,cAAA5gE,EAAApS,EAAAC,IAEAmS,EAAAolE,qBAAAplE,EAAAshE,YAAAthE,EAAAqlE,kBAAArlE,EAAA0hE,WACA1vG,EAAA6uG,cAAA,KAIA7gE,EAAAqhE,gBAAArhE,EAAAshE,YAAA,MACAthE,EAAA4Z,WAIA0rD,cAAA,SAAAtzG,GACAA,EAAA+uG,SACA/uG,EAAAkvG,OACA,IAAA3zD,EAAAv7C,EAAA6uG,cACA7uG,EAAA6uG,cAAA7uG,EAAA2uG,cACA3uG,EAAA2uG,cAAApzD,GAUAkvD,eAAA,WACA,IAAA51G,EAAAiG,KAAAy4G,cACA1O,EAAA33D,EAAA6nB,MAAA6zC,QAAA9tG,KAAA9F,MAAA8B,UACA,GAAAjC,EAAA,CACA,GAAAqB,MAAAH,QAAA8uG,EAAAhwG,IAAA,CACA,IAAA,IAAAN,EAAAswG,EAAAhwG,GAAAR,OAAAE,KACA,GAAAuG,KAAAjG,GAAAN,KAAAswG,EAAAhwG,GAAAN,GACA,OAAA,EAGA,OAAA,EAGA,OAAAswG,EAAAhwG,KAAAiG,KAAAjG,GAIA,OAAA,GAiBA06G,QAAA,SAAAvvG,GACAA,EAAAgvG,OACAl0G,KAAAq4G,kBAAAnzG,GACAlF,KAAA04G,aAAAxzG,GACAlF,KAAAw4G,cAAAtzG,IAGAlF,KAAA24G,UAAAzzG,IAUA0zG,eAAA,SAAA1zG,GAIA,OAHAA,EAAAivG,aAAA31G,eAAAwB,KAAA9F,QACAgL,EAAAivG,aAAAn0G,KAAA9F,MAAA8F,KAAAu2G,cAAArxG,EAAA6F,UAEA7F,EAAAivG,aAAAn0G,KAAA9F,OAeAw+G,aAAA,SAAAxzG,GACA,IAAAguC,EAAAhuC,EAAA6F,QACA8tG,EAAA74G,KAAA44G,eAAA1zG,GACA,IAAAA,EAAAkvG,MAAAlvG,EAAA8uG,gBACA9gE,EAAAyhE,YAAAzhE,EAAA0hE,WAAA1vG,EAAA8uG,iBAGA9gE,EAAAyhE,YAAAzhE,EAAA0hE,WAAA1vG,EAAA2uG,eAEA3gE,EAAA4lE,WAAAD,EAAAlC,SACA32G,KAAAy3G,kBAAAvkE,EAAA2lE,EAAA5B,mBAAA/xG,EAAAotG,WAEAp/D,EAAA6lE,UAAAF,EAAA1B,iBAAAE,OAAA,EAAAnyG,EAAAuqG,aACAv8D,EAAA6lE,UAAAF,EAAA1B,iBAAAI,OAAA,EAAAryG,EAAAwqG,cAEA1vG,KAAAg5G,gBAAA9lE,EAAA2lE,EAAA1B,kBACAjkE,EAAA+lE,SAAA,EAAA,EAAA/zG,EAAA2uC,iBAAA3uC,EAAA6uC,mBACAb,EAAAgmE,WAAAhmE,EAAAimE,eAAA,EAAA,IAGAC,sBAAA,SAAAlmE,EAAAgiE,EAAAmE,GACAnmE,EAAAomE,cAAAD,GACAnmE,EAAAyhE,YAAAzhE,EAAA0hE,WAAAM,GAEAhiE,EAAAomE,cAAApmE,EAAAqmE,WAGAC,wBAAA,SAAAtmE,EAAAmmE,GACAnmE,EAAAomE,cAAAD,GACAnmE,EAAAyhE,YAAAzhE,EAAA0hE,WAAA,MACA1hE,EAAAomE,cAAApmE,EAAAqmE,WAGAE,iBAAA,WACA,OAAAz5G,KAAAA,KAAAy4G,gBAGAiB,iBAAA,SAAAj/G,GACAuF,KAAAA,KAAAy4G,eAAAh+G,GAWAu+G,gBAAA,aAQAW,gBAAA,SAAAz0G,GACA,IAAAA,EAAA00G,UAAA,CACA,IAAAA,EAAA1lG,SAAA0H,cAAA,UACAg+F,EAAA94E,MAAA57B,EAAAuqG,YACAmK,EAAA74E,OAAA77B,EAAAwqG,aACAxqG,EAAA00G,UAAAA,IAQAjvC,SAAA,WACA,IAAAzvE,GAAAhB,KAAA8F,KAAA9F,MAAA2/G,EAAA75G,KAAAy4G,cAIA,OAHAoB,IACA3+G,EAAA2+G,GAAA75G,KAAA65G,IAEA3+G,GAOAmd,OAAA,WAEA,OAAArY,KAAA2qE,cAIAv4B,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WAAA,SAAA1hD,EAAA+F,GACA,IAAA4B,EAAA,IAAAuvC,EAAA6nB,MAAA6zC,QAAA5yG,EAAAhB,MAAAgB,GAEA,OADA+F,GAAAA,EAAA4B,GACAA,GAIA,SAAA4Q,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAuBAmpG,EAAAgM,YAAAn1G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,cAEAo3G,eAAA,0QAoBAnxD,QACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAGAs4D,cAAA,SAMAsB,YAAA,EAMApyD,WAAA,SAAAziD,GACAlF,KAAAunD,UAAA,aAAAriD,GAEAlF,KAAAmgD,OAAAngD,KAAAmgD,OAAAliD,MAAA,IASA06G,UAAA,SAAAzzG,GACA,IAIAsR,EAAAqoD,EAAA1+D,EAAAD,EAAAzG,EAJAknD,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KACA2jG,EAAA3jG,EAAA5P,OACAwuC,EAAA/nC,KAAAmgD,OACA45D,EAAA/5G,KAAA+5G,WAEA,IAAAtgH,EAAA,EAAAA,EAAAqzG,EAAArzG,GAAA,EACA+c,EAAArN,EAAA1P,GACAolE,EAAA11D,EAAA1P,EAAA,GACA0G,EAAAgJ,EAAA1P,EAAA,GACAsgH,GACA5wG,EAAA1P,GAAA+c,EAAAuxB,EAAA,GAAA82B,EAAA92B,EAAA,GAAA5nC,EAAA4nC,EAAA,GAAA,IAAAA,EAAA,GACA5+B,EAAA1P,EAAA,GAAA+c,EAAAuxB,EAAA,GAAA82B,EAAA92B,EAAA,GAAA5nC,EAAA4nC,EAAA,GAAA,IAAAA,EAAA,GACA5+B,EAAA1P,EAAA,GAAA+c,EAAAuxB,EAAA,IAAA82B,EAAA92B,EAAA,IAAA5nC,EAAA4nC,EAAA,IAAA,IAAAA,EAAA,MAGA7nC,EAAAiJ,EAAA1P,EAAA,GACA0P,EAAA1P,GAAA+c,EAAAuxB,EAAA,GAAA82B,EAAA92B,EAAA,GAAA5nC,EAAA4nC,EAAA,GAAA7nC,EAAA6nC,EAAA,GAAA,IAAAA,EAAA,GACA5+B,EAAA1P,EAAA,GAAA+c,EAAAuxB,EAAA,GAAA82B,EAAA92B,EAAA,GAAA5nC,EAAA4nC,EAAA,GAAA7nC,EAAA6nC,EAAA,GAAA,IAAAA,EAAA,GACA5+B,EAAA1P,EAAA,GAAA+c,EAAAuxB,EAAA,IAAA82B,EAAA92B,EAAA,IAAA5nC,EAAA4nC,EAAA,IAAA7nC,EAAA6nC,EAAA,IAAA,IAAAA,EAAA,IACA5+B,EAAA1P,EAAA,GAAA+c,EAAAuxB,EAAA,IAAA82B,EAAA92B,EAAA,IAAA5nC,EAAA4nC,EAAA,IAAA7nC,EAAA6nC,EAAA,IAAA,IAAAA,EAAA,MAWAqvE,oBAAA,SAAAlkE,EAAAyjE,GACA,OACAqD,aAAA9mE,EAAAokE,mBAAAX,EAAA,gBACAsD,WAAA/mE,EAAAokE,mBAAAX,EAAA,gBAUAqC,gBAAA,SAAA9lE,EAAAikE,GACA,IAAApvE,EAAA/nC,KAAAmgD,OACAA,GACApY,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAEAmyE,GAAAnyE,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,KACAmL,EAAAinE,iBAAAhD,EAAA6C,cAAA,EAAA75D,GACAjN,EAAAknE,WAAAjD,EAAA8C,WAAAC,MAWA9nE,EAAA6nB,MAAA6zC,QAAAgM,YAAAl9D,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WA3JA,CA4JA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAgBAmpG,EAAAuM,WAAA11G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,aAKAo3G,eAAA,6NAiBAgJ,WAAA,EAOA7B,cAAA,aAQAE,UAAA,SAAAzzG,GACA,GAAA,IAAAlF,KAAAs6G,WAAA,CAGA,IACA7gH,EADAknD,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KAAA+I,EAAA/I,EAAA5P,OACA+gH,EAAAhxG,KAAA65B,MAAA,IAAAnjC,KAAAs6G,YACA,IAAA7gH,EAAA,EAAAA,EAAAyY,EAAAzY,GAAA,EACA0P,EAAA1P,GAAA0P,EAAA1P,GAAA6gH,EACAnxG,EAAA1P,EAAA,GAAA0P,EAAA1P,EAAA,GAAA6gH,EACAnxG,EAAA1P,EAAA,GAAA0P,EAAA1P,EAAA,GAAA6gH,IAUAlD,oBAAA,SAAAlkE,EAAAyjE,GACA,OACA4D,YAAArnE,EAAAokE,mBAAAX,EAAA,iBAUAqC,gBAAA,SAAA9lE,EAAAikE,GACAjkE,EAAA6lE,UAAA5B,EAAAoD,YAAAv6G,KAAAs6G,eAWAloE,EAAA6nB,MAAA6zC,QAAAuM,WAAAz9D,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WA9GA,CAgHA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAjxC,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OACA2sG,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YA+CAmpG,EAAA0M,UAAA71G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,YAKAugH,QAAA,EAKAt6D,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKAmxD,gBACAoJ,cAAA,qcAgBAC,cAAA,2hBAkBAC,cAAA,0cAgBAC,cAAA,4hBAkBAC,cAAA,0cAgBAC,cAAA,4hBAkBAC,cAAA,0cAgBAC,cAAA,6hBAmCArC,eAAA,SAAA1zG,GACA,IAAAupB,EAAAnlB,KAAAmoC,KAAAzxC,KAAAmgD,OAAA5mD,QACAs0G,EAAA7tG,KAAA9F,KAAA,IAAAu0B,EAAA,KAAAzuB,KAAAy6G,OAAA,EAAA,GACA/I,EAAA1xG,KAAAsxG,eAAAzD,GAIA,OAHA3oG,EAAAivG,aAAA31G,eAAAqvG,KACA3oG,EAAAivG,aAAAtG,GAAA7tG,KAAAu2G,cAAArxG,EAAA6F,QAAA2mG,IAEAxsG,EAAAivG,aAAAtG,IASA8K,UAAA,SAAAzzG,GACA,IAWAsR,EAAAqoD,EAAA1+D,EAAAD,EAAAg7G,EACAC,EAAAC,EAAAC,EAAAC,EACAh4E,EAAAC,EAAAyf,EAAAC,EAbAtC,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KACAoyG,EAAAv7G,KAAAmgD,OACAq7D,EAAAlyG,KAAA65B,MAAA75B,KAAAmoC,KAAA8pE,EAAAhiH,SACAkiH,EAAAnyG,KAAAmwC,MAAA+hE,EAAA,GACAE,EAAA/6D,EAAA7f,MACA66E,EAAAh7D,EAAA5f,OACA66E,EAAA12G,EAAAuL,IAAAorG,gBAAAH,EAAAC,GACAG,EAAAF,EAAAzyG,KAEA4yG,EAAA/7G,KAAAy6G,OAAA,EAAA,EAKA,IAAAl3E,EAAA,EAAAA,EAAAo4E,EAAAp4E,IACA,IAAAD,EAAA,EAAAA,EAAAo4E,EAAAp4E,IAAA,CAMA,IALA43E,EAAA,GAAA33E,EAAAm4E,EAAAp4E,GAGA9sB,EAAA,EAAAqoD,EAAA,EAAA1+D,EAAA,EAAAD,EAAA,EAEA+iD,EAAA,EAAAA,EAAAu4D,EAAAv4D,IACA,IAAAD,EAAA,EAAAA,EAAAw4D,EAAAx4D,IAEAm4D,EAAA73E,EAAA0f,EAAAy4D,GADAL,EAAA73E,EAAA0f,EAAAw4D,GAIA,GAAAL,GAAAO,GAAAR,EAAA,GAAAA,GAAAO,IAIAL,EAAA,GAAAD,EAAAM,EAAAP,GACAG,EAAAC,EAAAt4D,EAAAu4D,EAAAx4D,GAEAxsC,GAAArN,EAAAkyG,GAAAC,EACAz8C,GAAA11D,EAAAkyG,EAAA,GAAAC,EACAn7G,GAAAgJ,EAAAkyG,EAAA,GAAAC,EAEAS,IACA77G,GAAAiJ,EAAAkyG,EAAA,GAAAC,IAIAQ,EAAAZ,GAAA1kG,EACAslG,EAAAZ,EAAA,GAAAr8C,EACAi9C,EAAAZ,EAAA,GAAA/6G,EAKA27G,EAAAZ,EAAA,GAJAa,EAIA5yG,EAAA+xG,EAAA,GAHAh7G,EAOAgF,EAAAy7C,UAAAi7D,GASAxE,oBAAA,SAAAlkE,EAAAyjE,GACA,OACAqF,QAAA9oE,EAAAokE,mBAAAX,EAAA,WACAsF,QAAA/oE,EAAAokE,mBAAAX,EAAA,WACAuF,UAAAhpE,EAAAokE,mBAAAX,EAAA,aACAwF,MAAAjpE,EAAAokE,mBAAAX,EAAA,WAUAqC,gBAAA,SAAA9lE,EAAAikE,GACAjkE,EAAAkpE,WAAAjF,EAAA6E,QAAAh8G,KAAAmgD,SAOAwqB,SAAA,WACA,OAAAxpE,EAAAnB,KAAAunD,UAAA,aACAkzD,OAAAz6G,KAAAy6G,OACAt6D,OAAAngD,KAAAmgD,YAYA/N,EAAA6nB,MAAA6zC,QAAA0M,UAAA59D,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WA7VA,CA+VA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAaAmpG,EAAAuO,UAAA13G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,YAEAo3G,gBACA9xC,QAAA,+PAQA88C,UAAA,+SASAC,WAAA,uRAiBAC,KAAA,UAEA/D,cAAA,OAQAE,UAAA,SAAAzzG,GACA,IACAzL,EACAgB,EAFAkmD,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KACA+I,EAAA/I,EAAA5P,OACAijH,EAAAx8G,KAAAw8G,KACA,IAAA/iH,EAAA,EAAAA,EAAAyY,EAAAzY,GAAA,EACA,YAAA+iH,EACA/hH,GAAA0O,EAAA1P,GAAA0P,EAAA1P,EAAA,GAAA0P,EAAA1P,EAAA,IAAA,EAEA,cAAA+iH,EACA/hH,GAAA6O,KAAAwoC,IAAA3oC,EAAA1P,GAAA0P,EAAA1P,EAAA,GAAA0P,EAAA1P,EAAA,IACA6P,KAAAwiB,IAAA3iB,EAAA1P,GAAA0P,EAAA1P,EAAA,GAAA0P,EAAA1P,EAAA,KAAA,EAEA,eAAA+iH,IACA/hH,EAAA,IAAA0O,EAAA1P,GAAA,IAAA0P,EAAA1P,EAAA,GAAA,IAAA0P,EAAA1P,EAAA,IAEA0P,EAAA1P,GAAAgB,EACA0O,EAAA1P,EAAA,GAAAgB,EACA0O,EAAA1P,EAAA,GAAAgB,GAUAm+G,eAAA,SAAA1zG,GACA,IAAA2oG,EAAA7tG,KAAA9F,KAAA,IAAA8F,KAAAw8G,KACA,IAAAt3G,EAAAivG,aAAA31G,eAAAqvG,GAAA,CACA,IAAA6D,EAAA1xG,KAAAsxG,eAAAtxG,KAAAw8G,MACAt3G,EAAAivG,aAAAtG,GAAA7tG,KAAAu2G,cAAArxG,EAAA6F,QAAA2mG,GAEA,OAAAxsG,EAAAivG,aAAAtG,IASAuJ,oBAAA,SAAAlkE,EAAAyjE,GACA,OACA8F,MAAAvpE,EAAAokE,mBAAAX,EAAA,WAUAqC,gBAAA,SAAA9lE,EAAAikE,GAGAjkE,EAAAwpE,UAAAvF,EAAAsF,MADA,IASA9M,eAAA,WACA,OAAA,KAWAv9D,EAAA6nB,MAAA6zC,QAAAuO,UAAAz/D,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WAvJA,CAyJA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAaAmpG,EAAA6O,OAAAh4G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,SAEAo3G,eAAA,qSAkBAsL,QAAA,EAEAnE,cAAA,SAQAE,UAAA,SAAAzzG,GACA,IACAzL,EADAknD,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KACA+I,EAAA/I,EAAA5P,OACA,IAAAE,EAAA,EAAAA,EAAAyY,EAAAzY,GAAA,EACA0P,EAAA1P,GAAA,IAAA0P,EAAA1P,GACA0P,EAAA1P,EAAA,GAAA,IAAA0P,EAAA1P,EAAA,GACA0P,EAAA1P,EAAA,GAAA,IAAA0P,EAAA1P,EAAA,IAUAk2G,eAAA,WACA,OAAA3vG,KAAA48G,QASAxF,oBAAA,SAAAlkE,EAAAyjE,GACA,OACAkG,QAAA3pE,EAAAokE,mBAAAX,EAAA,aAUAqC,gBAAA,SAAA9lE,EAAAikE,GACAjkE,EAAAwpE,UAAAvF,EAAA0F,QAAA78G,KAAA48G,WAWAxqE,EAAA6nB,MAAA6zC,QAAA6O,OAAA//D,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WA3GA,CA8GA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAjxC,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OACA2sG,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAiBAmpG,EAAAgP,MAAAn4G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,QAKAo3G,eAAA,ucAoBAmH,cAAA,QAOAsE,MAAA,EAQApE,UAAA,SAAAzzG,GACA,GAAA,IAAAlF,KAAA+8G,MAAA,CAGA,IACAtjH,EACAujH,EAFAr8D,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KAAA+I,EAAA/I,EAAA5P,OACAwjH,EAAA/8G,KAAA+8G,MAEA,IAAAtjH,EAAA,EAAAyY,EAAA/I,EAAA5P,OAAAE,EAAAyY,EAAAzY,GAAA,EAEAujH,GAAA,GAAA1zG,KAAAC,UAAAwzG,EAEA5zG,EAAA1P,IAAAujH,EACA7zG,EAAA1P,EAAA,IAAAujH,EACA7zG,EAAA1P,EAAA,IAAAujH,IAUA5F,oBAAA,SAAAlkE,EAAAyjE,GACA,OACAsG,OAAA/pE,EAAAokE,mBAAAX,EAAA,UACAuG,MAAAhqE,EAAAokE,mBAAAX,EAAA,WAUAqC,gBAAA,SAAA9lE,EAAAikE,GACAjkE,EAAA6lE,UAAA5B,EAAA8F,OAAAj9G,KAAA+8G,MAAA,KACA7pE,EAAA6lE,UAAA5B,EAAA+F,MAAA5zG,KAAAC,WAOAohE,SAAA,WACA,OAAAxpE,EAAAnB,KAAAunD,UAAA,aACAw1D,MAAA/8G,KAAA+8G,WAYA3qE,EAAA6nB,MAAA6zC,QAAAgP,MAAAlgE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WAnIA,CAqIA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAgBAmpG,EAAAqP,SAAAx4G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,WAEAkjH,UAAA,EAEA3E,cAAA,YAKAnH,eAAA,6fAwBAqH,UAAA,SAAAzzG,GACA,IAIApE,EAAArH,EAAA4J,EAAAmT,EAAAqoD,EAAA1+D,EAAAD,EACAm9G,EAAAC,EAAAC,EAAAC,EALA78D,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KACA2jG,EAAAnsD,EAAA5f,OACAgsE,EAAApsD,EAAA7f,MAIA,IAAArnC,EAAA,EAAAA,EAAAqzG,EAAArzG,GAAAuG,KAAAo9G,UACA,IAAA/5G,EAAA,EAAAA,EAAA0pG,EAAA1pG,GAAArD,KAAAo9G,UAWA,IAPA5mG,EAAArN,EAFArI,EAAA,EAAArH,EAAAszG,EAAA,EAAA1pG,GAGAw7D,EAAA11D,EAAArI,EAAA,GACAX,EAAAgJ,EAAArI,EAAA,GACAZ,EAAAiJ,EAAArI,EAAA,GAEAy8G,EAAAj0G,KAAAwoC,IAAAr4C,EAAAuG,KAAAo9G,UAAAtQ,GACA0Q,EAAAl0G,KAAAwoC,IAAAzuC,EAAArD,KAAAo9G,UAAArQ,GACAsQ,EAAA5jH,EAAA4jH,EAAAE,EAAAF,IACA,IAAAC,EAAAj6G,EAAAi6G,EAAAE,EAAAF,IAEAn0G,EADArI,EAAA,EAAAu8G,EAAAtQ,EAAA,EAAAuQ,GACA9mG,EACArN,EAAArI,EAAA,GAAA+9D,EACA11D,EAAArI,EAAA,GAAAX,EACAgJ,EAAArI,EAAA,GAAAZ,GAUAyvG,eAAA,WACA,OAAA,IAAA3vG,KAAAo9G,WASAhG,oBAAA,SAAAlkE,EAAAyjE,GACA,OACA8G,WAAAvqE,EAAAokE,mBAAAX,EAAA,cACAU,OAAAnkE,EAAAokE,mBAAAX,EAAA,UACAY,OAAArkE,EAAAokE,mBAAAX,EAAA,YAUAqC,gBAAA,SAAA9lE,EAAAikE,GACAjkE,EAAA6lE,UAAA5B,EAAAsG,WAAAz9G,KAAAo9G,cAWAhrE,EAAA6nB,MAAA6zC,QAAAqP,SAAAvgE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WAtIA,CAwIA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACAjxC,EAAAixC,EAAAlkB,KAAAhzB,OAAAiG,OACA2sG,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAiBAmpG,EAAA4P,YAAA/4G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,cAOAg0D,MAAA,UAKAojD,eAAA,uTAgBA51B,SAAA,IAMAiiC,UAAA,EAcAhF,UAAA,SAAAzzG,GACA,IACAzL,EAEA+c,EAAAqoD,EAAA1+D,EAHAwgD,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KACAuyE,EAAA,IAAA17E,KAAA07E,SAEAt8E,EAAA,IAAAgzC,EAAA0b,MAAA9tD,KAAAkuD,OAAAH,YACA6vD,GACAx+G,EAAA,GAAAs8E,EACAt8E,EAAA,GAAAs8E,EACAt8E,EAAA,GAAAs8E,GAEAmiC,GACAz+G,EAAA,GAAAs8E,EACAt8E,EAAA,GAAAs8E,EACAt8E,EAAA,GAAAs8E,GAIA,IAAAjiF,EAAA,EAAAA,EAAA0P,EAAA5P,OAAAE,GAAA,EACA+c,EAAArN,EAAA1P,GACAolE,EAAA11D,EAAA1P,EAAA,GACA0G,EAAAgJ,EAAA1P,EAAA,GAEA+c,EAAAonG,EAAA,IACA/+C,EAAA++C,EAAA,IACAz9G,EAAAy9G,EAAA,IACApnG,EAAAqnG,EAAA,IACAh/C,EAAAg/C,EAAA,IACA19G,EAAA09G,EAAA,KACA10G,EAAA1P,EAAA,GAAA,IAWA29G,oBAAA,SAAAlkE,EAAAyjE,GACA,OACAmH,KAAA5qE,EAAAokE,mBAAAX,EAAA,QACAoH,MAAA7qE,EAAAokE,mBAAAX,EAAA,WAUAqC,gBAAA,SAAA9lE,EAAAikE,GACA,IAAA/3G,EAAA,IAAAgzC,EAAA0b,MAAA9tD,KAAAkuD,OAAAH,YACA2tB,EAAAhhE,WAAA1a,KAAA07E,UACAkiC,GACA,EAAAx+G,EAAA,GAAA,IAAAs8E,EACA,EAAAt8E,EAAA,GAAA,IAAAs8E,EACA,EAAAt8E,EAAA,GAAA,IAAAs8E,EACA,GAEAmiC,GACAz+G,EAAA,GAAA,IAAAs8E,EACAt8E,EAAA,GAAA,IAAAs8E,EACAt8E,EAAA,GAAA,IAAAs8E,EACA,GAEAxoC,EAAAknE,WAAAjD,EAAA2G,KAAAF,GACA1qE,EAAAknE,WAAAjD,EAAA4G,MAAAF,IAOAlzC,SAAA,WACA,OAAAxpE,EAAAnB,KAAAunD,UAAA,aACA2G,MAAAluD,KAAAkuD,MACAwtB,SAAA17E,KAAA07E,cAYAtpC,EAAA6nB,MAAA6zC,QAAA4P,YAAA9gE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WA1KA,CA4KA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAEAmvD,GACAkqD,SACA,MAAA,QAAA,OAAA,EAAA,MACA,MAAA,OAAA,OAAA,GAAA,MACA,QAAA,OAAA,OAAA,GAAA,OACA,EAAA,EAAA,EAAA,EAAA,GAEAC,SACA,OAAA,QAAA,OAAA,EAAA,OACA,OAAA,OAAA,OAAA,EAAA,OACA,OAAA,OAAA,OAAA,EAAA,OACA,EAAA,EAAA,EAAA,EAAA,GAEAC,YACA,SAAA,QAAA,OAAA,EAAA,QACA,OAAA,SAAA,OAAA,EAAA,QACA,QAAA,OAAA,QAAA,EAAA,OACA,EAAA,EAAA,EAAA,EAAA,GAEAC,aACA,SAAA,QAAA,OAAA,EAAA,QACA,OAAA,SAAA,OAAA,GAAA,QACA,OAAA,OAAA,QAAA,EAAA,OACA,EAAA,EAAA,EAAA,EAAA,GAEAC,UACA,OAAA,MAAA,KAAA,EAAA,GACA,KAAA,OAAA,KAAA,EAAA,GACA,MAAA,KAAA,MAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAEAC,OACA,KAAA,KAAA,KAAA,EAAA,EACA,KAAA,KAAA,KAAA,EAAA,EACA,KAAA,KAAA,KAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAEAC,YACA,IAAA,IAAA,IAAA,GAAA,EACA,IAAA,IAAA,IAAA,GAAA,EACA,IAAA,IAAA,IAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,IAIA,IAAA,IAAAv/G,KAAA+0D,EACAg6C,EAAA/uG,GAAA4F,EAAAmpG,EAAAgM,aAOA5/G,KAAA6E,EASAohD,OAAA2T,EAAA/0D,GAKA05G,eAAA,EAIAsB,YAAA,IAGA3nE,EAAA6nB,MAAA6zC,QAAA/uG,GAAA69C,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WAlFA,CAoFA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GACA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,OACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAuBAmpG,EAAAyQ,WAAA55G,EAAAmpG,EAAAuI,YACAn8G,KAAA,aAMAg0D,MAAA,UAMAsuD,KAAA,WAKAl9C,MAAA,EAKAgyC,gBACAtxD,SAAA,oCACAw+D,OAAA,4EACA/0G,IAAA,oCACA4P,KAAA,2DACAqiD,SAAA,oCACA+iD,QAAA,0DACAC,OAAA,0DACAC,UAAA,4EACA7yE,QAAA,mbAeA8yE,KAAA,4EAWAC,YAAA,SAAArC,GACA,MAAA,iNAQAx8G,KAAAsxG,eAAAkL,GACA,QAUA5D,eAAA,SAAA1zG,GACA,IAAAwsG,EAAA7D,EAAA7tG,KAAA9F,KAAA,IAAA8F,KAAAw8G,KAKA,OAJAt3G,EAAAivG,aAAA31G,eAAAqvG,KACA6D,EAAA1xG,KAAA6+G,YAAA7+G,KAAAw8G,MACAt3G,EAAAivG,aAAAtG,GAAA7tG,KAAAu2G,cAAArxG,EAAA6F,QAAA2mG,IAEAxsG,EAAAivG,aAAAtG,IASA8K,UAAA,SAAAzzG,GACA,IAEAwY,EAAAohG,EAAAn6D,EACAnuC,EAAAqoD,EAAA1+D,EACAf,EAJAuhD,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KAAA2jG,EAAA3jG,EAAA5P,OAGAwlH,EAAA,EAAA/+G,KAAAs/D,MAEAlgE,EAAA,IAAAgzC,EAAA0b,MAAA9tD,KAAAkuD,OAAAH,YACArwC,EAAAte,EAAA,GAAAY,KAAAs/D,MACAw/C,EAAA1/G,EAAA,GAAAY,KAAAs/D,MACA3a,EAAAvlD,EAAA,GAAAY,KAAAs/D,MAEA,IAAA,IAAA7lE,EAAA,EAAAA,EAAAqzG,EAAArzG,GAAA,EAMA,OAJA+c,EAAArN,EAAA1P,GACAolE,EAAA11D,EAAA1P,EAAA,GACA0G,EAAAgJ,EAAA1P,EAAA,GAEAuG,KAAAw8G,MACA,IAAA,WACArzG,EAAA1P,GAAA+c,EAAAkH,EAAA,IACAvU,EAAA1P,EAAA,GAAAolE,EAAAigD,EAAA,IACA31G,EAAA1P,EAAA,GAAA0G,EAAAwkD,EAAA,IACA,MACA,IAAA,SACAx7C,EAAA1P,GAAA,KAAA,IAAA+c,IAAA,IAAAkH,GAAA,IACAvU,EAAA1P,EAAA,GAAA,KAAA,IAAAolE,IAAA,IAAAigD,GAAA,IACA31G,EAAA1P,EAAA,GAAA,KAAA,IAAA0G,IAAA,IAAAwkD,GAAA,IACA,MACA,IAAA,MACAx7C,EAAA1P,GAAA+c,EAAAkH,EACAvU,EAAA1P,EAAA,GAAAolE,EAAAigD,EACA31G,EAAA1P,EAAA,GAAA0G,EAAAwkD,EACA,MACA,IAAA,OACA,IAAA,aACAx7C,EAAA1P,GAAA6P,KAAA06B,IAAAxtB,EAAAkH,GACAvU,EAAA1P,EAAA,GAAA6P,KAAA06B,IAAA66B,EAAAigD,GACA31G,EAAA1P,EAAA,GAAA6P,KAAA06B,IAAA7jC,EAAAwkD,GACA,MACA,IAAA,WACAx7C,EAAA1P,GAAA+c,EAAAkH,EACAvU,EAAA1P,EAAA,GAAAolE,EAAAigD,EACA31G,EAAA1P,EAAA,GAAA0G,EAAAwkD,EACA,MACA,IAAA,SACAx7C,EAAA1P,GAAA6P,KAAAwoC,IAAAt7B,EAAAkH,GACAvU,EAAA1P,EAAA,GAAA6P,KAAAwoC,IAAA+sB,EAAAigD,GACA31G,EAAA1P,EAAA,GAAA6P,KAAAwoC,IAAA3xC,EAAAwkD,GACA,MACA,IAAA,UACAx7C,EAAA1P,GAAA6P,KAAAwiB,IAAAtV,EAAAkH,GACAvU,EAAA1P,EAAA,GAAA6P,KAAAwiB,IAAA+yC,EAAAigD,GACA31G,EAAA1P,EAAA,GAAA6P,KAAAwiB,IAAA3rB,EAAAwkD,GACA,MACA,IAAA,UACAx7C,EAAA1P,GAAAikB,EAAA,IAAA,EAAAlH,EAAAkH,EAAA,IAAA,IAAA,GAAA,IAAAlH,IAAA,IAAAkH,GAAA,IACAvU,EAAA1P,EAAA,GAAAqlH,EAAA,IAAA,EAAAjgD,EAAAigD,EAAA,IAAA,IAAA,GAAA,IAAAjgD,IAAA,IAAAigD,GAAA,IACA31G,EAAA1P,EAAA,GAAAkrD,EAAA,IAAA,EAAAxkD,EAAAwkD,EAAA,IAAA,IAAA,GAAA,IAAAxkD,IAAA,IAAAwkD,GAAA,IACA,MACA,IAAA,YACAx7C,EAAA1P,GAAAikB,EAAAlH,EAAA,EAAAkH,EAAAlH,EAAA,IACArN,EAAA1P,EAAA,GAAAqlH,EAAAjgD,EAAA,EAAAigD,EAAAjgD,EAAA,IACA11D,EAAA1P,EAAA,GAAAkrD,EAAAxkD,EAAA,EAAAwkD,EAAAxkD,EAAA,IACA,MACA,IAAA,OACAgJ,EAAA1P,GAAAikB,EAAAlH,EAAAuoG,EACA51G,EAAA1P,EAAA,GAAAqlH,EAAAjgD,EAAAkgD,EACA51G,EAAA1P,EAAA,GAAAkrD,EAAAxkD,EAAA4+G,IAWA3H,oBAAA,SAAAlkE,EAAAyjE,GACA,OACAqI,OAAA9rE,EAAAokE,mBAAAX,EAAA,YAUAqC,gBAAA,SAAA9lE,EAAAikE,GACA,IAAA/3G,EAAA,IAAAgzC,EAAA0b,MAAA9tD,KAAAkuD,OAAAH,YACA3uD,EAAA,GAAAY,KAAAs/D,MAAAlgE,EAAA,GAAA,IACAA,EAAA,GAAAY,KAAAs/D,MAAAlgE,EAAA,GAAA,IACAA,EAAA,GAAAY,KAAAs/D,MAAAlgE,EAAA,GAAA,IACAA,EAAA,GAAAY,KAAAs/D,MACApsB,EAAAknE,WAAAjD,EAAA6H,OAAA5/G,IAOAurE,SAAA,WACA,OACAzwE,KAAA8F,KAAA9F,KACAg0D,MAAAluD,KAAAkuD,MACAsuD,KAAAx8G,KAAAw8G,KACAl9C,MAAAt/D,KAAAs/D,UAYAltB,EAAA6nB,MAAA6zC,QAAAyQ,WAAA3hE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WAlPA,CAoPA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GACA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,OACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAuBAmpG,EAAAmR,WAAAt6G,EAAAmpG,EAAAuI,YACAn8G,KAAA,aAMA8tB,MAAA,KAMAw0F,KAAA,WAMAl9C,MAAA,EAEAg3C,aAAA,2QAaAhF,gBACAtxD,SAAA,2TAYAk/D,KAAA,qTAoBAtG,eAAA,SAAA1zG,GACA,IAAA2oG,EAAA7tG,KAAA9F,KAAA,IAAA8F,KAAAw8G,KACA9K,EAAA1xG,KAAAsxG,eAAAtxG,KAAAw8G,MAIA,OAHAt3G,EAAAivG,aAAA31G,eAAAqvG,KACA3oG,EAAAivG,aAAAtG,GAAA7tG,KAAAu2G,cAAArxG,EAAA6F,QAAA2mG,IAEAxsG,EAAAivG,aAAAtG,IAGA6K,aAAA,SAAAxzG,GAEA,IAAAguC,EAAAhuC,EAAA6F,QACAmqG,EAAAl1G,KAAA8zG,cAAA5uG,EAAAspG,cAAAxuG,KAAAgoB,OACAhoB,KAAAo5G,sBAAAlmE,EAAAgiE,EAAAhiE,EAAAisE,UACAn/G,KAAAunD,UAAA,eAAAriD,GACAlF,KAAAw5G,wBAAAtmE,EAAAA,EAAAisE,WAGArL,cAAA,SAAAvF,EAAAvmF,GACA,OAAAumF,EAAAqF,iBAAA5rF,EAAA6lF,SAAA7lF,EAAAgmF,WASAoR,gBAAA,WACA,IAAAp3F,EAAAhoB,KAAAgoB,MACA8Y,EAAA9Y,EAAAgmF,SAAAltE,MACAC,EAAA/Y,EAAAgmF,SAAAjtE,OACA,OACA,EAAA/Y,EAAAo3B,OAAA,EAAA,EACA,EAAA,EAAAp3B,EAAAq3B,OAAA,GACAr3B,EAAAyQ,KAAAqI,GAAA9Y,EAAAgX,IAAA+B,EAAA,IAUA43E,UAAA,SAAAzzG,GACA,IAKAwY,EAAAohG,EAAAn6D,EAAAD,EACAluC,EAAAqoD,EAAA1+D,EAAAD,EACAm/G,EAAAt0G,EAAAu0G,EAPA3+D,EAAAz7C,EAAAy7C,UACAhO,EAAAztC,EAAAspG,cAAA77D,UACAxpC,EAAAw3C,EAAAx3C,KAAA2jG,EAAA3jG,EAAA5P,OACAunC,EAAA6f,EAAA7f,MACAC,EAAA4f,EAAA5f,OAGA/Y,EAAAhoB,KAAAgoB,MAEA2qB,EAAA4sE,aACA5sE,EAAA4sE,WAAAntE,EAAAlkB,KAAAowB,uBAEA+gE,EAAA1sE,EAAA4sE,WACAx0G,EAAAs0G,EAAA9rE,WAAA,MACA8rE,EAAAv+E,QAAAA,GAAAu+E,EAAAt+E,SAAAA,GACAs+E,EAAAv+E,MAAAA,EACAu+E,EAAAt+E,OAAAA,GAGAh2B,EAAAsnE,UAAA,EAAA,EAAAvxC,EAAAC,GAEAh2B,EAAA2tF,aAAA1wE,EAAAo3B,OAAA,EAAA,EAAAp3B,EAAAq3B,OAAAr3B,EAAAyQ,KAAAzQ,EAAAgX,KACAj0B,EAAA2oC,UAAA1rB,EAAAgmF,SAAA,EAAA,EAAAltE,EAAAC,GACAu+E,EAAAv0G,EAAA61C,aAAA,EAAA,EAAA9f,EAAAC,GAAA53B,KACA,IAAA,IAAA1P,EAAA,EAAAA,EAAAqzG,EAAArzG,GAAA,EAYA,OAVA+c,EAAArN,EAAA1P,GACAolE,EAAA11D,EAAA1P,EAAA,GACA0G,EAAAgJ,EAAA1P,EAAA,GACAyG,EAAAiJ,EAAA1P,EAAA,GAEAikB,EAAA4hG,EAAA7lH,GACAqlH,EAAAQ,EAAA7lH,EAAA,GACAkrD,EAAA26D,EAAA7lH,EAAA,GACAirD,EAAA46D,EAAA7lH,EAAA,GAEAuG,KAAAw8G,MACA,IAAA,WACArzG,EAAA1P,GAAA+c,EAAAkH,EAAA,IACAvU,EAAA1P,EAAA,GAAAolE,EAAAigD,EAAA,IACA31G,EAAA1P,EAAA,GAAA0G,EAAAwkD,EAAA,IACAx7C,EAAA1P,EAAA,GAAAyG,EAAAwkD,EAAA,IACA,MACA,IAAA,OACAv7C,EAAA1P,EAAA,GAAAirD,IAYA0yD,oBAAA,SAAAlkE,EAAAyjE,GACA,OACA6I,iBAAAtsE,EAAAokE,mBAAAX,EAAA,oBACA8I,OAAAvsE,EAAAokE,mBAAAX,EAAA,YAUAqC,gBAAA,SAAA9lE,EAAAikE,GACA,IAAAh3D,EAAAngD,KAAAo/G,kBACAlsE,EAAAwpE,UAAAvF,EAAAsI,OAAA,GACAvsE,EAAAwsE,iBAAAvI,EAAAqI,kBAAA,EAAAr/D,IAOAwqB,SAAA,WACA,OACAzwE,KAAA8F,KAAA9F,KACA8tB,MAAAhoB,KAAAgoB,OAAAhoB,KAAAgoB,MAAA2iD,WACA6xC,KAAAx8G,KAAAw8G,KACAl9C,MAAAt/D,KAAAs/D,UAYAltB,EAAA6nB,MAAA6zC,QAAAmR,WAAAriE,WAAA,SAAA1hD,EAAA+F,GACAmxC,EAAA6nB,MAAArd,WAAA1hD,EAAA8sB,MAAA,SAAAA,GACA,IAAA9iB,EAAAktC,EAAAlkB,KAAAhzB,OAAAwF,MAAAxF,GACAgK,EAAA8iB,MAAAA,EACA/mB,EAAA,IAAAmxC,EAAA6nB,MAAA6zC,QAAAmR,WAAA/5G,OAjPA,CAqPA,oBAAA+zC,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WAAAT,EAAAroC,KAAAqoC,IAAA8H,EAAAnwC,KAAAmwC,MACAhI,EAAAnoC,KAAAmoC,KAAAzN,EAAA16B,KAAA06B,IAAAb,EAAA75B,KAAA65B,MAAAmW,EAAAhwC,KAAAgwC,IACAkK,EAAAl6C,KAAAk6C,KACAsqD,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAaAmpG,EAAA6R,OAAAh7G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,SASA0lH,WAAA,UAOAxgE,OAAA,EAOAC,OAAA,EAOAwgE,aAAA,EASAzI,oBAAA,SAAAlkE,EAAAyjE,GACA,OACAmJ,OAAA5sE,EAAAokE,mBAAAX,EAAA,UACAoJ,MAAA7sE,EAAAokE,mBAAAX,EAAA,WAUAqC,gBAAA,SAAA9lE,EAAAikE,GACAjkE,EAAA8sE,WAAA7I,EAAA2I,OAAA9/G,KAAA2nC,YAAA,EAAA3nC,KAAA8gC,MAAA,IAAA,EAAA,EAAA9gC,KAAA+gC,SACAmS,EAAAkpE,WAAAjF,EAAA4I,MAAA//G,KAAAigH,OASArH,eAAA,SAAA1zG,GACA,IAAAg7G,EAAAlgH,KAAAmgH,kBAAAtS,EAAA7tG,KAAA9F,KAAA,IAAAgmH,EACA,IAAAh7G,EAAAivG,aAAA31G,eAAAqvG,GAAA,CACA,IAAA0D,EAAAvxG,KAAAogH,eAAAF,GACAh7G,EAAAivG,aAAAtG,GAAA7tG,KAAAu2G,cAAArxG,EAAA6F,QAAAwmG,GAEA,OAAArsG,EAAAivG,aAAAtG,IAGAsS,gBAAA,WACA,IAAAj2E,EAAAlqC,KAAAqgH,UACA,OAAA/2G,KAAAk6C,KAAAxjD,KAAA6/G,aAAA31E,IAGAo2E,QAAA,WAGA,IAFA,IAAAC,EAAAvgH,KAAAwgH,cAAAxgH,KAAA6/G,cAAA31E,EAAAlqC,KAAAqgH,UACAH,EAAAlgH,KAAAmgH,kBAAAF,EAAA,IAAA7kH,MAAA8kH,GACAzmH,EAAA,EAAAA,GAAAymH,EAAAzmH,IACAwmH,EAAAxmH,EAAA,GAAA8mH,EAAA9mH,EAAAywC,GAEA,OAAA+1E,GAOAG,eAAA,SAAAF,GAIA,IAHA,IAAA37E,EAAA,IAAAnpC,MAAA8kH,GACA3O,EAAAvxG,KAAAygH,kBAEAhnH,EAAA,EAAAA,GAAAymH,EAAAzmH,IACA8qC,EAAA9qC,EAAA,GAAAA,EAAA,cAeA,OAZA83G,GAAA,uBAAA2O,EAAA,OACA3O,GAAA,kBACAA,GAAA,mDACAA,GAAA,uBAEAhtE,EAAApqC,QAAA,SAAA2J,EAAArK,GACA83G,GAAA,8CAAAztG,EAAA,aAAArK,EAAA,OACA83G,GAAA,8CAAAztG,EAAA,aAAArK,EAAA,OACA83G,GAAA,wBAAA93G,EAAA,SAEA83G,GAAA,kCACAA,GAAA,KAIAkP,kBAAA,uGAiBAhM,QAAA,SAAAvvG,GACAA,EAAAgvG,OACAhvG,EAAA+uG,SACAj0G,KAAA8gC,MAAA57B,EAAAuqG,YACAzvG,KAAA2nC,YAAA,EACA3nC,KAAA0gH,GAAAp3G,KAAA65B,MAAAnjC,KAAA8gC,MAAA9gC,KAAAo/C,QACAp/C,KAAA2gH,GAAAz7G,EAAAwqG,aACA1vG,KAAAqgH,UAAArgH,KAAA0gH,GAAA1gH,KAAA8gC,MACA9gC,KAAAigH,KAAAjgH,KAAAsgH,UACAp7G,EAAA2uC,iBAAA7zC,KAAA0gH,GACA1gH,KAAAq4G,kBAAAnzG,GACAlF,KAAA04G,aAAAxzG,GACAlF,KAAAw4G,cAAAtzG,GACAA,EAAAuqG,YAAAvqG,EAAA2uC,iBAEA7zC,KAAA+gC,OAAA77B,EAAAwqG,aACA1vG,KAAA2nC,YAAA,EACA3nC,KAAA2gH,GAAAr3G,KAAA65B,MAAAnjC,KAAA+gC,OAAA/gC,KAAAq/C,QACAr/C,KAAAqgH,UAAArgH,KAAA2gH,GAAA3gH,KAAA+gC,OACA/gC,KAAAigH,KAAAjgH,KAAAsgH,UACAp7G,EAAA6uC,kBAAA/zC,KAAA2gH,GACA3gH,KAAAq4G,kBAAAnzG,GACAlF,KAAA04G,aAAAxzG,GACAlF,KAAAw4G,cAAAtzG,GACAA,EAAAwqG,aAAAxqG,EAAA6uC,mBAGA/zC,KAAA24G,UAAAzzG,IAIAyqG,eAAA,WACA,OAAA,IAAA3vG,KAAAo/C,QAAA,IAAAp/C,KAAAq/C,QAGAmhE,cAAA,SAAAI,GACA,OAAA,SAAAt9E,GACA,GAAAA,GAAAs9E,GAAAt9E,IAAAs9E,EACA,OAAA,EAEA,GAAAt9E,EAAA,cAAAA,GAAA,aACA,OAAA,EAGA,IAAAu9E,GADAv9E,GAAAh6B,KAAA4vC,IACA0nE,EACA,OAAAtnE,EAAAhW,GAAAA,EAAAgW,EAAAunE,GAAAA,IAWAlI,UAAA,SAAAzzG,GACA,IAAAy7C,EAAAz7C,EAAAy7C,UACAvB,EAAAp/C,KAAAo/C,OACAC,EAAAr/C,KAAAq/C,OAEAr/C,KAAA8gH,UAAA,EAAA1hE,EACAp/C,KAAA+gH,UAAA,EAAA1hE,EAEA,IAEA2hE,EAFAC,EAAAtgE,EAAA7f,MAAAogF,EAAAvgE,EAAA5f,OACA2/E,EAAAv9E,EAAA89E,EAAA7hE,GAAAuhE,EAAAx9E,EAAA+9E,EAAA7hE,GAGA,cAAAr/C,KAAA4/G,WACAoB,EAAAhhH,KAAAmhH,WAAAj8G,EAAA+7G,EAAAC,EAAAR,EAAAC,GAEA,YAAA3gH,KAAA4/G,WACAoB,EAAAhhH,KAAAohH,kBAAAl8G,EAAA+7G,EAAAC,EAAAR,EAAAC,GAEA,aAAA3gH,KAAA4/G,WACAoB,EAAAhhH,KAAAqhH,kBAAAn8G,EAAA+7G,EAAAC,EAAAR,EAAAC,GAEA,YAAA3gH,KAAA4/G,aACAoB,EAAAhhH,KAAAshH,cAAAp8G,EAAA+7G,EAAAC,EAAAR,EAAAC,IAEAz7G,EAAAy7C,UAAAqgE,GAYAG,WAAA,SAAAj8G,EAAA+7G,EAAAC,EAAAR,EAAAC,GACA,IAGAY,EAAA9wG,EAHAkwC,EAAAz7C,EAAAy7C,UACA6gE,GAAA,EAAAC,GAAA,EAAAC,EAAA,GAAAT,EACAU,EADA,GACAT,EAAAvuE,EAAAP,EAAAo8D,cAAA77D,UACAs9D,EAAA,EAAAC,EAAA,EAAA0R,EAAAX,EAAAY,EAAA,EAgBA,IAfAlvE,EAAAwuE,aACAxuE,EAAAwuE,WAAAjtG,SAAA0H,cAAA,aAEA2lG,EAAA5uE,EAAAwuE,YACArgF,MAAA,IAAAmgF,GAAAM,EAAAxgF,OAAAmgF,KACAK,EAAAzgF,MAAA,IAAAmgF,EACAM,EAAAxgF,OAAAmgF,IAEAzwG,EAAA8wG,EAAAhuE,WAAA,OACA8+B,UAAA,EAAA,EAAA,IAAA4uC,EAAAC,GACAzwG,EAAAkkC,aAAAgM,EAAA,EAAA,GAEA+/D,EAAAjnE,EAAAinE,GACAC,EAAAlnE,EAAAknE,IAEAa,IAAAC,GACAR,EAAAS,EACAR,EAAAS,EACAjB,EAAAjnE,EArBA,GAqBAioE,GACAA,EAAAjoE,EAtBA,GAsBAioE,IAGAA,EAAAhB,EACAc,GAAA,GAEAb,EAAAlnE,EA5BA,GA4BAkoE,GACAA,EAAAloE,EA7BA,GA6BAkoE,IAGAA,EAAAhB,EACAc,GAAA,GAEAhxG,EAAAijC,UAAA6tE,EAAAtR,EAAAC,EAAA+Q,EAAAC,EAAAU,EAAAC,EAAAH,EAAAC,GACA1R,EAAA2R,EACA1R,EAAA2R,EACAA,GAAAF,EAEA,OAAAlxG,EAAAmwC,aAAAqvD,EAAAC,EAAAwQ,EAAAC,IAYAW,cAAA,SAAAp8G,EAAA+7G,EAAAC,EAAAR,EAAAC,GAqDA,IAAAmB,EAAA58G,EAAAy7C,UAAAx3C,KACA44G,EAAA78G,EAAAuL,IAAAorG,gBAAA6E,EAAAC,GACAqB,EAAAD,EAAA54G,KACA84G,EAAAjiH,KAAAwgH,cAAAxgH,KAAA6/G,cACAqC,EAAAliH,KAAA8gH,UAAAqB,EAAAniH,KAAA+gH,UACAqB,EAAA,EAAApiH,KAAA8gH,UAAAuB,EAAA,EAAAriH,KAAA+gH,UACAuB,EAAA9+D,EAAA0+D,EAAAliH,KAAA6/G,aAAA,GACA0C,EAAA/+D,EAAA2+D,EAAAniH,KAAA6/G,aAAA,GACA2C,KAAA5tC,KAAA6tC,KAEA,OA7DA,SAAA7uG,EAAA8uG,GACA,IAAAjsG,EAAAhd,EAAAkpH,EAAApgH,EAAArC,EAAAwnE,EAAAjE,EACA9C,EAAArB,EAAAsjD,EAAAC,EACAjuC,EAAAtxC,GAAAo/E,EAAA,IAAAR,EACAO,EAAAn/E,EAAAmW,EAAAm7B,EAAAtxC,GACA,IAAA7sB,EAAA,EAAAA,EAAAkqG,EAAAlqG,IAAA,CAIA,IAHAm+D,EAAArxC,GAAA9sB,EAAA,IAAA0rG,EACAM,EAAAl/E,EAAAkW,EAAAm7B,EAAArxC,GACArjC,EAAA,EAAAwnE,EAAA,EAAAjE,EAAA,EAAA9C,EAAA,EAAArB,EAAA,EACA7lE,EAAAgpH,EAAAn/E,EAAAg/E,EAAA7oH,GAAAgpH,EAAAn/E,EAAAg/E,EAAA7oH,IACA,KAAAA,EAAA,GAAAA,GAAAwnH,GAAA,CAGA2B,EAAAnpE,EAAA,IAAAzV,EAAAvqC,EAAAm7E,EAAAtxC,IACAk/E,EAAAI,KACAJ,EAAAI,OAEA,IAAA,IAAAv/G,EAAAo/G,EAAAl/E,EAAAg/E,EAAAl/G,GAAAo/G,EAAAl/E,EAAAg/E,EAAAl/G,IACAA,EAAA,GAAAA,GAAA69G,IAGA2B,EAAAppE,EAAA,IAAAzV,EAAA3gC,EAAAuxE,EAAArxC,IACAi/E,EAAAI,GAAAC,KACAL,EAAAI,GAAAC,GAAAZ,EAAAxwE,EAAAE,EAAAixE,EAAAR,EAAA,GAAAzwE,EAAAkxE,EAAAR,EAAA,IAAA,OAEAM,EAAAH,EAAAI,GAAAC,IACA,IAEA3iH,GAAAyiH,EACAj7C,GAAAi7C,EAAAb,EAFAv/G,EAAA,GAAAc,EAAA49G,EAAAxnH,IAGAgqE,GAAAk/C,EAAAb,EAAAv/G,EAAA,GACAo+D,GAAAgiD,EAAAb,EAAAv/G,EAAA,GACA+8D,GAAAqjD,EAAAb,EAAAv/G,EAAA,KAKAy/G,EADAz/G,EAAA,GAAAkU,EAAAiqG,EAAAgC,IACAh7C,EAAAxnE,EACA8hH,EAAAz/G,EAAA,GAAAkhE,EAAAvjE,EACA8hH,EAAAz/G,EAAA,GAAAo+D,EAAAzgE,EACA8hH,EAAAz/G,EAAA,GAAA+8D,EAAAp/D,EAGA,QAAAwiH,EAAAhC,EACA9sG,EAAA8uG,GAGAX,EAcAnuG,CAAA,IAYAytG,kBAAA,SAAAn8G,EAAA+7G,EAAAC,EAAAR,EAAAC,GACA,IAAAzgH,EAAAC,EAAAmV,EAAA7G,EAAA60B,EAAAC,EAAA9pC,EAAA4J,EAAAy/G,EAAAC,EAAAC,EACA90D,EAAA+0D,EAAAn/G,EAAA,EAAAo+G,EAAAliH,KAAA8gH,UACAqB,EAAAniH,KAAA+gH,UACAmC,EAAA,GAAAjC,EAAA,GAAAv/F,EAAAxc,EAAAy7C,UACAwiE,EAAAzhG,EAAAvY,KAAAi6G,EAAAl+G,EAAAuL,IAAAorG,gBAAA6E,EAAAC,GACA0C,EAAAD,EAAAj6G,KACA,IAAA1P,EAAA,EAAAA,EAAAknH,EAAAlnH,IACA,IAAA4J,EAAA,EAAAA,EAAAq9G,EAAAr9G,IAOA,IANAigC,EAAAmW,EAAAyoE,EAAA7+G,GACAkgC,EAAAkW,EAAA0oE,EAAA1oH,GACAqpH,EAAAZ,EAAA7+G,EAAAigC,EACAy/E,EAAAZ,EAAA1oH,EAAA8pC,EACA0/E,EAAA,GAAA1/E,EAAA09E,EAAA39E,GAEA0/E,EAAA,EAAAA,EAAA,EAAAA,IACA9iH,EAAAijH,EAAAF,EAAAD,GACA7iH,EAAAgjH,EAAAF,EAAA,EAAAD,GACA1tG,EAAA6tG,EAAAF,EAAAC,EAAAF,GACAv0G,EAAA00G,EAAAF,EAAAC,EAAA,EAAAF,GACA90D,EAAAhuD,GAAA,EAAA4iH,IAAA,EAAAC,GAAA5iH,EAAA2iH,GAAA,EAAAC,GACAztG,EAAAytG,GAAA,EAAAD,GAAAr0G,EAAAq0G,EAAAC,EACAM,EAAAv/G,KAAAoqD,EAIA,OAAAk1D,GAYAhC,kBAAA,SAAAl8G,EAAA+7G,EAAAC,EAAAR,EAAAC,GAMA,IALA,IAAA2C,EAAAtjH,KAAA8gH,UAAAyC,EAAAvjH,KAAA+gH,UACAyC,EAAAhgE,EAAA8/D,EAAA,GACAG,EAAAjgE,EAAA+/D,EAAA,GACA7hG,EAAAxc,EAAAy7C,UAAAx3C,EAAAuY,EAAAvY,KACAu6G,EAAAx+G,EAAAuL,IAAAorG,gBAAA6E,EAAAC,GAAAgD,EAAAD,EAAAv6G,KACA9F,EAAA,EAAAA,EAAAs9G,EAAAt9G,IACA,IAAA,IAAA5J,EAAA,EAAAA,EAAAinH,EAAAjnH,IAAA,CAGA,IAFA,IAAAgkD,EAAA,GAAAhkD,EAAA4J,EAAAq9G,GAAAiC,EAAA,EAAApH,EAAA,EAAAqI,EAAA,EACAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,GAAA5gH,EAAA,IAAAkgH,EACAW,EAAAzqE,EAAAp2C,EAAAkgH,GAAAW,GAAA7gH,EAAA,GAAAkgH,EAAAW,IAGA,IAFA,IAAArmE,EAAA7Z,EAAAigF,GAAAC,EAAA,KAAAT,EACAU,GAAA1qH,EAAA,IAAA6pH,EAAAc,EAAAvmE,EAAAA,EACAgjE,EAAApnE,EAAAhgD,EAAA6pH,GAAAzC,GAAApnH,EAAA,GAAA6pH,EAAAzC,IAAA,CACA,IAAAjjE,EAAA5Z,EAAAmgF,GAAAtD,EAAA,KAAA2C,EACAxvG,EAAAy9B,EAAA2yE,EAAAxmE,EAAAA,GAEA5pC,EAAA,GAAAA,GAAA,IAIA2uG,EAAA,EAAA3uG,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAA,GACA,IAGAgwG,GAAArB,EAAAx5G,GAFAy0C,EAAA,GAAAijE,EAAAqD,EAAAjD,IAEA,GACA2C,GAAAjB,EAEAx5G,EAAAy0C,EAAA,GAAA,MACA+kE,EAAAA,EAAAx5G,EAAAy0C,EAAA,GAAA,KAEAimE,GAAAlB,EAAAx5G,EAAAy0C,GACAkmE,GAAAnB,EAAAx5G,EAAAy0C,EAAA,GACAmmE,GAAApB,EAAAx5G,EAAAy0C,EAAA,GACA29D,GAAAoH,GAKAgB,EAAAlmE,GAAAomE,EAAAtI,EACAoI,EAAAlmE,EAAA,GAAAqmE,EAAAvI,EACAoI,EAAAlmE,EAAA,GAAAsmE,EAAAxI,EACAoI,EAAAlmE,EAAA,GAAAumE,EAAAJ,EAGA,OAAAF,GAOA/4C,SAAA,WACA,OACAzwE,KAAA8F,KAAA9F,KACAklD,OAAAp/C,KAAAo/C,OACAC,OAAAr/C,KAAAq/C,OACAugE,WAAA5/G,KAAA4/G,WACAC,aAAA7/G,KAAA6/G,iBAYAztE,EAAA6nB,MAAA6zC,QAAA6R,OAAA/iE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WAveA,CAyeA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAgBAmpG,EAAAuW,SAAA1/G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,WAEAo3G,eAAA,8TAWAgT,SAAA,EAEA7L,cAAA,WAeAE,UAAA,SAAAzzG,GACA,GAAA,IAAAlF,KAAAskH,SAAA,CAGA,IAAA7qH,EAAAknD,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KAAA+I,EAAA/I,EAAA5P,OACA+qH,EAAAh7G,KAAAmwC,MAAA,IAAAz5C,KAAAskH,UACAC,EAAA,KAAAD,EAAA,MAAA,KAAA,IAAAA,IAEA,IAAA7qH,EAAA,EAAAA,EAAAyY,EAAAzY,GAAA,EACA0P,EAAA1P,GAAA8qH,GAAAp7G,EAAA1P,GAAA,KAAA,IACA0P,EAAA1P,EAAA,GAAA8qH,GAAAp7G,EAAA1P,EAAA,GAAA,KAAA,IACA0P,EAAA1P,EAAA,GAAA8qH,GAAAp7G,EAAA1P,EAAA,GAAA,KAAA,MAUA29G,oBAAA,SAAAlkE,EAAAyjE,GACA,OACA6N,UAAAtxE,EAAAokE,mBAAAX,EAAA,eAUAqC,gBAAA,SAAA9lE,EAAAikE,GACAjkE,EAAA6lE,UAAA5B,EAAAqN,UAAAxkH,KAAAskH,aAWAlyE,EAAA6nB,MAAA6zC,QAAAuW,SAAAznE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WAzGA,CA2GA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAgBAmpG,EAAA2W,WAAA9/G,EAAAmpG,EAAAuI,YAOAn8G,KAAA,aAEAo3G,eAAA,weAcAoT,WAAA,EAEAjM,cAAA,aAeAE,UAAA,SAAAzzG,GACA,GAAA,IAAAlF,KAAA0kH,WAAA,CAGA,IAEAjrH,EAAAqyB,EAFA60B,EAAAz7C,EAAAy7C,UACAx3C,EAAAw3C,EAAAx3C,KAAA+I,EAAA/I,EAAA5P,OACAorH,GAAA3kH,KAAA0kH,WAEA,IAAAjrH,EAAA,EAAAA,EAAAyY,EAAAzY,GAAA,EACAqyB,EAAAxiB,KAAAwiB,IAAA3iB,EAAA1P,GAAA0P,EAAA1P,EAAA,GAAA0P,EAAA1P,EAAA,IACA0P,EAAA1P,IAAAqyB,IAAA3iB,EAAA1P,IAAAqyB,EAAA3iB,EAAA1P,IAAAkrH,EAAA,EACAx7G,EAAA1P,EAAA,IAAAqyB,IAAA3iB,EAAA1P,EAAA,IAAAqyB,EAAA3iB,EAAA1P,EAAA,IAAAkrH,EAAA,EACAx7G,EAAA1P,EAAA,IAAAqyB,IAAA3iB,EAAA1P,EAAA,IAAAqyB,EAAA3iB,EAAA1P,EAAA,IAAAkrH,EAAA,IAUAvN,oBAAA,SAAAlkE,EAAAyjE,GACA,OACAiO,YAAA1xE,EAAAokE,mBAAAX,EAAA,iBAUAqC,gBAAA,SAAA9lE,EAAAikE,GACAjkE,EAAA6lE,UAAA5B,EAAAyN,aAAA5kH,KAAA0kH,eAWAtyE,EAAA6nB,MAAA6zC,QAAA2W,WAAA7nE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WA5GA,CA8GA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAiBAmpG,EAAA+W,KAAAlgH,EAAAmpG,EAAAuI,YAEAn8G,KAAA,OAsBAo3G,eAAA,mnBA6BAxxF,KAAA,EAEA24F,cAAA,OAEAhE,QAAA,SAAAvvG,GACAA,EAAAgvG,OAEAl0G,KAAA8kH,YAAA5/G,EAAAuqG,YAAAvqG,EAAAwqG,aACAxqG,EAAA+uG,SACAj0G,KAAAq4G,kBAAAnzG,GACAlF,KAAA2nC,YAAA,EACA3nC,KAAA04G,aAAAxzG,GACAlF,KAAAw4G,cAAAtzG,GACAlF,KAAAq4G,kBAAAnzG,GACAlF,KAAA2nC,YAAA,EACA3nC,KAAA04G,aAAAxzG,GACAlF,KAAAw4G,cAAAtzG,IAGAlF,KAAA24G,UAAAzzG,IAIAyzG,UAAA,SAAAzzG,GAGAA,EAAAy7C,UAAA3gD,KAAA+kH,WAAA7/G,IAGA6/G,WAAA,SAAA7/G,GACA,IAAAm6G,EAAA2F,EAAAryE,EAAAztC,EAAAspG,cAAA77D,UACA7R,EAAA57B,EAAAy7C,UAAA7f,MACAC,EAAA77B,EAAAy7C,UAAA5f,OAEA4R,EAAAsyE,aACAtyE,EAAAsyE,WAAA7yE,EAAAlkB,KAAAowB,sBACA3L,EAAAuyE,WAAA9yE,EAAAlkB,KAAAowB,uBAEA+gE,EAAA1sE,EAAAsyE,WACAD,EAAAryE,EAAAuyE,WACA7F,EAAAv+E,QAAAA,GAAAu+E,EAAAt+E,SAAAA,IACAikF,EAAAlkF,MAAAu+E,EAAAv+E,MAAAA,EACAkkF,EAAAjkF,OAAAs+E,EAAAt+E,OAAAA,GAEA,IAGAx3B,EAAA47G,EAAA9hH,EAAA5J,EAHA2rH,EAAA/F,EAAA9rE,WAAA,MACA8xE,EAAAL,EAAAzxE,WAAA,MAGAzzB,EAAA,IAAA9f,KAAA8f,KAAA,GAMA,IAHAslG,EAAAzwE,aAAAzvC,EAAAy7C,UAAA,EAAA,GACA0kE,EAAAhzC,UAAA,EAAA,EAAAvxC,EAAAC,GAEAtnC,GARA,GAQAA,GARA,GAQAA,IACA8P,GAAAD,KAAAC,SAAA,IAAA,EAEAlG,EAAAyc,GADAqlG,EAAA1rH,EAVA,IAWAqnC,EAAAv3B,EACA87G,EAAAxnC,YAAA,EAAAv0E,KAAA06B,IAAAmhF,GACAE,EAAA3xE,UAAA2rE,EAAAh8G,EAAAkG,GACA67G,EAAA1xE,UAAAsxE,EAAA,EAAA,GACAK,EAAAxnC,YAAA,EACAwnC,EAAAhzC,UAAA,EAAA,EAAA2yC,EAAAlkF,MAAAkkF,EAAAjkF,QAEA,IAAAtnC,GAlBA,GAkBAA,GAlBA,GAkBAA,IACA8P,GAAAD,KAAAC,SAAA,IAAA,EAEAlG,EAAAyc,GADAqlG,EAAA1rH,EApBA,IAqBAsnC,EAAAx3B,EACA87G,EAAAxnC,YAAA,EAAAv0E,KAAA06B,IAAAmhF,GACAE,EAAA3xE,UAAA2rE,EAAA91G,EAAAlG,GACA+hH,EAAA1xE,UAAAsxE,EAAA,EAAA,GACAK,EAAAxnC,YAAA,EACAwnC,EAAAhzC,UAAA,EAAA,EAAA2yC,EAAAlkF,MAAAkkF,EAAAjkF,QAEA77B,EAAAuL,IAAAijC,UAAA2rE,EAAA,EAAA,GACA,IAAAiG,EAAApgH,EAAAuL,IAAAmwC,aAAA,EAAA,EAAAy+D,EAAAv+E,MAAAu+E,EAAAt+E,QAGA,OAFAqkF,EAAAvnC,YAAA,EACAunC,EAAA/yC,UAAA,EAAA,EAAAgtC,EAAAv+E,MAAAu+E,EAAAt+E,QACAukF,GASAlO,oBAAA,SAAAlkE,EAAAyjE,GACA,OACA4O,MAAAryE,EAAAokE,mBAAAX,EAAA,YAUAqC,gBAAA,SAAA9lE,EAAAikE,GACA,IAAAoO,EAAAvlH,KAAAwlH,mBACAtyE,EAAA8sE,WAAA7I,EAAAoO,MAAAA,IAOAC,iBAAA,WACA,IAAA1lG,EAAA2lG,EAAA,EAAAF,GAAA,EAAA,GAoBA,OAnBAvlH,KAAA2nC,WACA3nC,KAAA8kH,YAAA,IAEAW,EAAA,EAAAzlH,KAAA8kH,aAIA9kH,KAAA8kH,YAAA,IAEAW,EAAAzlH,KAAA8kH,aAGAhlG,EAAA2lG,EAAAzlH,KAAA8f,KAAA,IACA9f,KAAA2nC,WACA49E,EAAA,GAAAzlG,EAGAylG,EAAA,GAAAzlG,EAEAylG,KAOAzX,EAAA+W,KAAAjoE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WApNA,CAsNA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAgBAmpG,EAAA4X,MAAA/gH,EAAAmpG,EAAAuI,YAOAn8G,KAAA,QAEAo3G,eAAA,kXAmBAqU,OAAA,EAAA,EAAA,GAOAlN,cAAA,QAMA9wD,WAAA,SAAAziD,GACAlF,KAAA2lH,OAAA,EAAA,EAAA,GACA7X,EAAAuI,WAAAr6G,UAAA2rD,WAAArtD,KAAA0F,KAAAkF,IASAyzG,UAAA,SAAAzzG,GACA,IAGAzL,EAHAknD,EAAAz7C,EAAAy7C,UAAAx3C,EAAAw3C,EAAAx3C,KACAw8G,EAAA3lH,KAAA2lH,MAAAzzG,EAAA/I,EAAA5P,OACAqsH,EAAA,EAAAD,EAAA,GAAAE,EAAA,EAAAF,EAAA,GACAG,EAAA,EAAAH,EAAA,GAaA,IAXA3lH,KAAA+lH,QAEA/lH,KAAA+lH,MAAA,IAAA7xE,WAAA,KAEAl0C,KAAAgmH,MAAA,IAAA9xE,WAAA,KAEAl0C,KAAAimH,MAAA,IAAA/xE,WAAA,MAKAz6C,EAAA,EAAAyY,EAAA,IAAAzY,EAAAyY,EAAAzY,IACAuG,KAAA+lH,MAAAtsH,GAAA,IAAA6P,KAAAqoC,IAAAl4C,EAAA,IAAAmsH,GACA5lH,KAAAgmH,MAAAvsH,GAAA,IAAA6P,KAAAqoC,IAAAl4C,EAAA,IAAAosH,GACA7lH,KAAAimH,MAAAxsH,GAAA,IAAA6P,KAAAqoC,IAAAl4C,EAAA,IAAAqsH,GAEA,IAAArsH,EAAA,EAAAyY,EAAA/I,EAAA5P,OAAAE,EAAAyY,EAAAzY,GAAA,EACA0P,EAAA1P,GAAAuG,KAAA+lH,MAAA58G,EAAA1P,IACA0P,EAAA1P,EAAA,GAAAuG,KAAAgmH,MAAA78G,EAAA1P,EAAA,IACA0P,EAAA1P,EAAA,GAAAuG,KAAAimH,MAAA98G,EAAA1P,EAAA,KAUA29G,oBAAA,SAAAlkE,EAAAyjE,GACA,OACAuP,OAAAhzE,EAAAokE,mBAAAX,EAAA,YAUAqC,gBAAA,SAAA9lE,EAAAikE,GACAjkE,EAAAizE,WAAAhP,EAAA+O,OAAAlmH,KAAA2lH,UAWAvzE,EAAA6nB,MAAA6zC,QAAA4X,MAAA9oE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WArIA,CAuIA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAKAmpG,EAAAsY,SAAAzhH,EAAAmpG,EAAAuI,YAEAn8G,KAAA,WAKAmsH,cAMA1+D,WAAA,SAAAziD,GACAlF,KAAAunD,UAAA,aAAAriD,GAEAlF,KAAAqmH,WAAArmH,KAAAqmH,WAAApoH,MAAA,IASAw2G,QAAA,SAAAvvG,GACAA,EAAA+uG,QAAAj0G,KAAAqmH,WAAA9sH,OAAA,EACAyG,KAAAqmH,WAAAlsH,QAAA,SAAA0I,GACAA,EAAA4xG,QAAAvvG,MASAylE,SAAA,WACA,OAAAv4B,EAAAlkB,KAAAhzB,OAAAiG,OAAAnB,KAAAunD,UAAA,aACA8+D,WAAArmH,KAAAqmH,WAAAhiH,IAAA,SAAAxB,GAAA,OAAAA,EAAA8nE,gBAIAglC,eAAA,WACA,OAAA3vG,KAAAqmH,WAAA54F,KAAA,SAAA5qB,GAAA,OAAAA,EAAA8sG,sBAOAv9D,EAAA6nB,MAAA6zC,QAAAsY,SAAAxpE,WAAA,SAAA1hD,EAAA+F,GACA,IAAA6sG,EAAA5yG,EAAAmrH,eACAA,EAAAvY,EAAAzpG,IAAA,SAAAxB,GACA,OAAA,IAAAuvC,EAAA6nB,MAAA6zC,QAAAjrG,EAAA3I,MAAA2I,KAEAmqC,EAAA,IAAAoF,EAAA6nB,MAAA6zC,QAAAsY,UAAAC,WAAAA,IAEA,OADAplH,GAAAA,EAAA+rC,GACAA,GArEA,CAuEA,oBAAAiM,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA07D,EAAA17D,EAAA6nB,MAAA6zC,QACAnpG,EAAAytC,EAAAlkB,KAAAvpB,YAgBAmpG,EAAAwY,YAAA3hH,EAAAmpG,EAAAgM,aAOA5/G,KAAA,cAQAqsH,SAAA,EAOA9N,cAAA,WAEA2G,gBAAA,WACA,IAAAoH,EAAAxmH,KAAAumH,SAAAj9G,KAAA4vC,GAAAC,EAAA/G,EAAAlkB,KAAAirB,IAAAqtE,GAAAltE,EAAAlH,EAAAlkB,KAAAorB,IAAAktE,GACAC,EAAAn9G,KAAAmoC,KAAA,EAAA,GAAA6H,EAAAotE,EAAA,EAAAvtE,EACAn5C,KAAAmgD,QACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAEAngD,KAAAmgD,OAAA,GAAAhH,EAAAutE,EAAA,EACA1mH,KAAAmgD,OAAA,GARA,EAAA,EAQAumE,EAAAD,EACAzmH,KAAAmgD,OAAA,GATA,EAAA,EASAumE,EAAAD,EACAzmH,KAAAmgD,OAAA,GAVA,EAAA,EAUAumE,EAAAD,EACAzmH,KAAAmgD,OAAA,GAAAhH,EAXA,EAAA,EAWAutE,EACA1mH,KAAAmgD,OAAA,GAZA,EAAA,EAYAumE,EAAAD,EACAzmH,KAAAmgD,OAAA,IAbA,EAAA,EAaAumE,EAAAD,EACAzmH,KAAAmgD,OAAA,IAdA,EAAA,EAcAumE,EAAAD,EACAzmH,KAAAmgD,OAAA,IAAAhH,EAfA,EAAA,EAeAutE,GASA/W,eAAA,SAAAzqG,GAEA,OADAlF,KAAAo/G,kBACAtR,EAAAuI,WAAAr6G,UAAA2zG,eAAAr1G,KAAA0F,KAAAkF,IAgBAuvG,QAAA,SAAAvvG,GACAlF,KAAAo/G,kBACAtR,EAAAuI,WAAAr6G,UAAAy4G,QAAAn6G,KAAA0F,KAAAkF,MAYAktC,EAAA6nB,MAAA6zC,QAAAwY,YAAA1pE,WAAAxK,EAAA6nB,MAAA6zC,QAAAuI,WAAAz5D,WAxGA,CA0GA,oBAAA3D,QAAAA,QAAAj5C,MAGA,SAAAyT,GAEA,aAEA,IAAA2+B,EAAA3+B,EAAA2+B,SAAA3+B,EAAA2+B,WACA1xC,EAAA0xC,EAAAlkB,KAAAhzB,OAAAwF,MAEA0xC,EAAAmJ,KACAnJ,EAAApvB,KAAA,mCAYAovB,EAAAmJ,KAAAnJ,EAAAlkB,KAAAvpB,YAAAytC,EAAAt2C,QAOA6qH,0BACA,WACA,aACA,aACA,YACA,aACA,OACA,cACA,YACA,UAMAC,WAAA,QAOAC,iBAAA,WAOAC,eAAA,UAOAC,SAAA,OAOA7sH,KAAA,OAOAmhD,SAAA,GAOA0b,WAAA,SAOA5V,WAAA,kBAOAkiD,WAAA,EAOAD,UAAA,EAOAE,aAAA,EAQA0jB,UAAA,OAOAlwD,UAAA,SAOAE,WAAA,KAOAiwD,aACAx4F,KAAA,GACAy4F,UAAA,KAQAC,WACA14F,KAAA,GACAy4F,SAAA,KAQAE,oBAAA,GAQAxwB,gBAAAxkD,EAAAt2C,OAAAE,UAAA46F,gBAAA5yF,OAAA,aACA,aACA,WACA,OACA,YACA,WACA,cACA,YACA,YACA,aACA,sBACA,cACA,UAMA6yF,gBAAAzkD,EAAAt2C,OAAAE,UAAA66F,gBAAA7yF,OAAA,aACA,aACA,WACA,OACA,YACA,WACA,cACA,YACA,YACA,aACA,sBACA,cACA,UAQA4tD,OAAA,KAQAqb,OAAA,KAKAo6C,kBAAA,KAKA9iF,SACA8+D,UAAA,GACAC,aAAA,KACAF,UAAA,KAQAkkB,cAAA,KAQAC,YAAA,EAQA72E,OAAA,KAUA82E,kBAAA,KAOArkB,OAAA,EAOAskB,kBACA,SACA,cACA,OACA,aACA,WACA,aACA,YACA,YACA,WACA,cACA,SACA,uBAMAC,gBASAC,gBAAA,IAOAC,eAAA,EAQAjgE,WAAA,SAAA76C,EAAA5H,GACAlF,KAAA0wC,OAAAxrC,GAAAA,EAAAwrC,WACA1wC,KAAA8M,KAAAA,EACA9M,KAAA6nH,iBAAA,EACA7nH,KAAAunD,UAAA,aAAAriD,GACAlF,KAAA6nH,iBAAA,EACA7nH,KAAA8nH,iBACA9nH,KAAA4xE,YACA5xE,KAAAmyE,YAAA6nB,YAAA,8BAUA+tB,oBAAA,WAMA,OAJA31E,EAAAo1E,oBACAp1E,EAAAo1E,kBAAAxnH,KAAAqzC,QAAArzC,KAAAqzC,OAAAqvC,cACAtwC,EAAAlkB,KAAAowB,sBAAA/K,WAAA,OAEAnB,EAAAo1E,mBAOAQ,WAAA,WACA,IAAAC,EAAAjoH,KAAAkoH,oBAAAloH,KAAA8M,MAKA,OAJA9M,KAAAmoH,UAAAF,EAAA5nB,MACArgG,KAAAooH,WAAAH,EAAAI,cACAroH,KAAAsoH,oBAAAL,EAAAM,gBACAvoH,KAAAwoH,MAAAP,EAAAQ,aACAR,GAQAH,eAAA,WACA9nH,KAAA6nH,kBAGA7nH,KAAAgoH,aACAhoH,KAAA0oH,cACA1oH,KAAA8gC,MAAA9gC,KAAA2oH,iBAAA3oH,KAAA4oH,aAAA5oH,KAAA4nH,gBACA,IAAA5nH,KAAAgnH,UAAArlH,QAAA,YAEA3B,KAAA6oH,gBAEA7oH,KAAA+gC,OAAA/gC,KAAA8oH,iBACA9oH,KAAA0wF,WAAAsJ,YAAA,+BAMA6uB,cAAA,WAEA,IADA,IAAAE,EAAAC,EAAAC,EAAAC,EAAAxzG,EAAAyzG,EAAAC,EACA3vH,EAAA,EAAAyY,EAAAlS,KAAAooH,WAAA7uH,OAAAE,EAAAyY,EAAAzY,IACA,IAAA,YAAAuG,KAAAgnH,WAAAvtH,IAAAyY,EAAA,IAAAlS,KAAAqpH,gBAAA5vH,MAGAyvH,EAAA,EACAxzG,EAAA1V,KAAAooH,WAAA3uH,IACAuvH,EAAAhpH,KAAAspH,aAAA7vH,IACAuG,KAAA8gC,QAAAsoF,EAAAppH,KAAAmoH,UAAA1uH,GAAA2T,MAAApN,KAAA6mH,oBAAA,CACAoC,EAAAG,EAAA7vH,OACAwvH,GAAA/oH,KAAA8gC,MAAAkoF,GAAAC,EACA,IAAA,IAAA5lH,EAAA,EAAAqiD,EAAAhwC,EAAAnc,OAAA8J,GAAAqiD,EAAAriD,IACA8lH,EAAAnpH,KAAA0nH,aAAAjuH,GAAA4J,GACArD,KAAA8mH,eAAA9oH,KAAA0X,EAAArS,KACA8lH,EAAAroF,OAAAioF,EACAI,EAAAI,aAAAR,EACAI,EAAA1wF,MAAAywF,EACAA,GAAAH,GAGAI,EAAA1wF,MAAAywF,IAYAG,gBAAA,SAAAG,GACA,OAAAA,IAAAxpH,KAAAooH,WAAA7uH,OAAA,GASAkwH,qBAAA,WACA,OAAA,GAOAxvH,SAAA,WACA,MAAA,kBAAA+F,KAAAk4C,aACA,iBAAAl4C,KAAA8M,KAAA,qBAAA9M,KAAAmhD,WAAA,QAcAm2C,0BAAA,WACA,IAAAH,EAAAn3F,KAAAunD,UAAA,6BACAlM,EAAAr7C,KAAAq7C,SAGA,OAFA87C,EAAAr2D,OAAAua,EAAA87C,EAAAvjB,MACAujB,EAAAp2D,QAAAsa,EAAA87C,EAAAtjB,MACAsjB,GAOA1c,QAAA,SAAAhqE,GACAzQ,KAAA0pH,eAAAj5G,GACAzQ,KAAA2pH,2BAAAl5G,GACAzQ,KAAA4pH,sBAAAn5G,EAAA,aACAzQ,KAAA6pH,YAAAp5G,GACAzQ,KAAA4pH,sBAAAn5G,EAAA,YACAzQ,KAAA4pH,sBAAAn5G,EAAA,gBAOAo5G,YAAA,SAAAp5G,GACA,WAAAzQ,KAAA22F,YACA32F,KAAA8pH,kBAAAr5G,GACAzQ,KAAA+pH,gBAAAt5G,KAGAzQ,KAAA+pH,gBAAAt5G,GACAzQ,KAAA8pH,kBAAAr5G,KAcAi5G,eAAA,SAAAj5G,EAAAu5G,EAAAC,GACAx5G,EAAAy5G,aAAA,aACAz5G,EAAAmnD,KAAA53D,KAAAmqH,oBAAAH,EAAAC,IASAtB,cAAA,WAGA,IAFA,IAAAyB,EAAApqH,KAAAspH,aAAA,GAEA7vH,EAAA,EAAAyY,EAAAlS,KAAAooH,WAAA7uH,OAAAE,EAAAyY,EAAAzY,IAAA,CACA,IAAAuvH,EAAAhpH,KAAAspH,aAAA7vH,GACAuvH,EAAAoB,IACAA,EAAApB,GAGA,OAAAoB,GAYAC,gBAAA,SAAA7iH,EAAAiJ,EAAAiF,EAAA+iB,EAAAuG,EAAAwqF,GACAxpH,KAAAsqH,aAAA9iH,EAAAiJ,EAAAiF,EAAA+iB,EAAAuG,EAAAwqF,IAQAG,2BAAA,SAAAl5G,GACA,GAAAzQ,KAAAonH,qBAAApnH,KAAAuqH,SAAA,uBAAA,CAUA,IAPA,IAAAC,EACAC,EACA/0G,EAAAg1G,EAGAC,EAAAC,EALAC,EAAA,EACArwB,EAAA/pF,EAAA4jE,UAEAy2C,EAAA9qH,KAAA+qH,iBACAC,EAAAhrH,KAAAirH,gBACAC,EAAA,EAAAC,EAAA,EAEA1xH,EAAA,EAAAyY,EAAAlS,KAAAooH,WAAA7uH,OAAAE,EAAAyY,EAAAzY,IAEA,GADA+wH,EAAAxqH,KAAAorH,gBAAA3xH,GACAuG,KAAAonH,qBAAApnH,KAAAuqH,SAAA,sBAAA9wH,GAAA,CAIAic,EAAA1V,KAAAooH,WAAA3uH,GACAgxH,EAAAzqH,KAAAqrH,mBAAA5xH,GACA0xH,EAAA,EACAD,EAAA,EACAR,EAAA1qH,KAAAsrH,qBAAA7xH,EAAA,EAAA,uBACA,IAAA,IAAA4J,EAAA,EAAAqiD,EAAAhwC,EAAAnc,OAAA8J,EAAAqiD,EAAAriD,IACAsnH,EAAA3qH,KAAA0nH,aAAAjuH,GAAA4J,IACAunH,EAAA5qH,KAAAsrH,qBAAA7xH,EAAA4J,EAAA,0BACAqnH,GACAj6G,EAAA4jE,UAAAq2C,EACAA,GAAAj6G,EAAAqtE,SACAgtC,EAAAL,EAAAS,EACAF,EAAAH,EACAM,EACAX,EAAAxqH,KAAAg3D,YAEAk0D,EAAAP,EAAAlyF,KACA0yF,EAAAR,EAAA7pF,MACA4pF,EAAAE,GAGAO,GAAAR,EAAApB,YAGAqB,IACAn6G,EAAA4jE,UAAAu2C,EACAn6G,EAAAqtE,SACAgtC,EAAAL,EAAAS,EACAF,EAAAH,EACAM,EACAX,EAAAxqH,KAAAg3D,aAGA6zD,GAAAL,OApCAK,GAAAL,EAsCA/5G,EAAA4jE,UAAAmmB,EAGAx6F,KAAAg7F,cAAAvqF,KAWA86G,aAAA,SAAAtwB,GACA,IAAA95C,EAAA85C,EAAA95C,WAAA/mD,cACAg4C,EAAAuD,gBAAAwL,KACA/O,EAAAuD,gBAAAwL,OAEA,IAAA/4C,EAAAgqC,EAAAuD,gBAAAwL,GACAqqE,EAAAvwB,EAAAnkC,UAAA18D,cAAA,KAAA6gG,EAAAlkC,WAAA,IAAA38D,cAIA,OAHAgO,EAAAojH,KACApjH,EAAAojH,OAEApjH,EAAAojH,IAWAC,iBAAA,SAAAjkH,EAAAiJ,EAAA+4G,EAAA1yC,EAAA40C,GAEA1rH,KAAA46F,eAAAnqF,EAAAi7G,GACA1rH,KAAA26F,iBAAAlqF,EAAAi7G,GAEAj7G,EAAAmnD,KAAA53D,KAAAmqH,oBAAAuB,IAaAC,aAAA,SAAA90C,EAAAmzC,EAAA4B,EAAAC,GAEA,IAEA/qF,EAAAgrF,EAAAC,EACAxC,EAHAyC,EAAAhsH,KAAAurH,aAAAvB,GAAAiC,EAAAjsH,KAAAmqH,oBAAAH,GACAkC,EAAAlsH,KAAAmqH,oBAAA0B,GAAAM,EAAAP,EAAA/0C,EACAu1C,EAAAH,IAAAC,EACAG,EAAArC,EAAA3uE,SAAAr7C,KAAA2nH,gBAYA,GAVAiE,QAAA9uH,IAAAkvH,EAAAJ,KACAG,EAAAC,EAAAJ,SAEA9uH,IAAAkvH,EAAAn1C,KACA0yC,EAAAzoF,EAAAkrF,EAAAn1C,IAEAu1C,QAAAtvH,IAAAkvH,EAAAG,KACAL,EAAAE,EAAAG,GACA5C,EAAAuC,EAAAC,QAEAjvH,IAAAgkC,QAAAhkC,IAAAivH,QAAAjvH,IAAAgvH,EAAA,CACA,IAAAr7G,EAAAzQ,KAAA+nH,sBAEA/nH,KAAA0pH,eAAAj5G,EAAAu5G,GAAA,GAgBA,YAdAltH,IAAAgkC,IACAyoF,EAAAzoF,EAAArwB,EAAA67G,YAAAz1C,GAAA/1C,MACAkrF,EAAAn1C,GAAA/1C,QAEAhkC,IAAAivH,GAAAK,GAAAR,IACAG,EAAAt7G,EAAA67G,YAAAV,GAAA9qF,MACAkrF,EAAAJ,GAAAG,GAEAK,QAAAtvH,IAAAgvH,IAEAA,EAAAr7G,EAAA67G,YAAAH,GAAArrF,MACAkrF,EAAAG,GAAAL,EACAvC,EAAAuC,EAAAC,IAEAjrF,MAAAA,EAAAurF,EAAA9C,YAAAA,EAAA8C,IASAE,gBAAA,SAAA72G,EAAAmhE,GACA,OAAA72E,KAAAsrH,qBAAA51G,EAAAmhE,EAAA,aAQA21C,YAAA,SAAAhD,GACA,IAAAiD,EAAAzsH,KAAA0sH,aAAAlD,GAOA,OANA,IAAAxpH,KAAAunH,cACAkF,EAAA3rF,OAAA9gC,KAAA2sH,0BAEAF,EAAA3rF,MAAA,IACA2rF,EAAA3rF,MAAA,GAEA2rF,GASAC,aAAA,SAAAlD,GACA,IAAA/vH,EAAAmzH,EAAAC,EACAC,EADAhsF,EAAA,EAAAprB,EAAA1V,KAAAooH,WAAAoB,GACAuD,EAAA,IAAA3xH,MAAAsa,EAAAnc,QAGA,IADAyG,KAAA0nH,aAAA8B,GAAAuD,EACAtzH,EAAA,EAAAA,EAAAic,EAAAnc,OAAAE,IACAmzH,EAAAl3G,EAAAjc,GACAqzH,EAAA9sH,KAAAgtH,gBAAAJ,EAAApD,EAAA/vH,EAAAozH,GACAE,EAAAtzH,GAAAqzH,EACAhsF,GAAAgsF,EAAAvD,YACAsD,EAAAD,EAUA,OANAG,EAAAtzH,IACAg/B,KAAAq0F,EAAAA,EAAAr0F,KAAAq0F,EAAAhsF,MAAA,EACAA,MAAA,EACAyoF,YAAA,EACAxoF,OAAA/gC,KAAAq7C,WAEAva,MAAAA,EAAAmsF,YAlBA,IA8BAD,gBAAA,SAAAJ,EAAApD,EAAA1yC,EAAA+1C,EAAAK,GACA,IAIA3F,EAJA5qG,EAAA3c,KAAAmtH,4BAAA3D,EAAA1yC,GACAs2C,EAAAP,EAAA7sH,KAAAmtH,4BAAA3D,EAAA1yC,EAAA,MACAu2C,EAAArtH,KAAA2rH,aAAAiB,EAAAjwG,EAAAkwG,EAAAO,GACA7D,EAAA8D,EAAA9D,YACAzoF,EAAAusF,EAAAvsF,MAEA,IAAA9gC,KAAAunH,cACAA,EAAAvnH,KAAA2sH,yBACA7rF,GAAAymF,EACAgC,GAAAhC,GAGA,IAAA18D,GACA/pB,MAAAA,EACArI,KAAA,EACAsI,OAAApkB,EAAA0+B,SACAkuE,YAAAA,EACApmB,OAAAxmF,EAAAwmF,QAEA,GAAArsB,EAAA,IAAAo2C,EAAA,CACA,IAAAI,EAAAttH,KAAA0nH,aAAA8B,GAAA1yC,EAAA,GACAjsB,EAAApyB,KAAA60F,EAAA70F,KAAA60F,EAAAxsF,MAAAusF,EAAA9D,YAAA8D,EAAAvsF,MAEA,OAAA+pB,GAQAugE,gBAAA,SAAA5B,GACA,GAAAxpH,KAAAutH,cAAA/D,GACA,OAAAxpH,KAAAutH,cAAA/D,GAOA,IAJA,IAAA9zG,EAAA1V,KAAAooH,WAAAoB,GAGAgE,EAAAxtH,KAAAusH,gBAAA/C,EAAA,GACA/vH,EAAA,EAAAyY,EAAAwD,EAAAnc,OAAAE,EAAAyY,EAAAzY,IACA+zH,EAAAlkH,KAAAwiB,IAAA9rB,KAAAusH,gBAAA/C,EAAA/vH,GAAA+zH,GAGA,OAAAxtH,KAAAutH,cAAA/D,GAAAgE,EAAAxtH,KAAAg3D,WAAAh3D,KAAAsnH,eAMAwB,eAAA,WAEA,IADA,IAAA9xD,EAAAj2B,EAAA,EACAtnC,EAAA,EAAAyY,EAAAlS,KAAAooH,WAAA7uH,OAAAE,EAAAyY,EAAAzY,IACAu9D,EAAAh3D,KAAAorH,gBAAA3xH,GACAsnC,GAAAtnC,IAAAyY,EAAA,EAAA8kD,EAAAh3D,KAAAg3D,WAAAA,EAEA,OAAAj2B,GAOAgqF,eAAA,WACA,OAAA/qH,KAAA8gC,MAAA,GAOAmqF,cAAA,WACA,OAAAjrH,KAAA+gC,OAAA,GAUA46D,+BAAA,SAAAlrF,EAAA6nC,GACA,IAAAA,IAAAA,EAAAkzB,OACA,OAAAjB,QAAA,EAAAC,QAAA,GAEA,IAAAD,GAAAvqE,KAAA8gC,MAAA,EAAAwX,EAAAiyB,SAAA,EACAC,GAAAxqE,KAAA+gC,OAAA,EAAAuX,EAAAkyB,SAAA,EAGA,OADA/5D,EAAAuG,UAAA,EAAA,EAAA,EAAA,EAAAuzD,EAAAC,IACAD,QAAAA,EAAAC,QAAAA,IAQAijD,kBAAA,SAAAh9G,EAAAjJ,GACAiJ,EAAAytC,OAGA,IAFA,IAAAwvE,EAAA,EAAAj1F,EAAAz4B,KAAA+qH,iBAAA/rF,EAAAh/B,KAAAirH,gBACA1mF,EAAAvkC,KAAA27F,+BAAAlrF,EAAA,aAAAjJ,EAAAxH,KAAAi3C,KAAAj3C,KAAA4xD,QACAn4D,EAAA,EAAAyY,EAAAlS,KAAAooH,WAAA7uH,OAAAE,EAAAyY,EAAAzY,IAAA,CACA,IAAA+wH,EAAAxqH,KAAAorH,gBAAA3xH,GACA+zH,EAAAhD,EAAAxqH,KAAAg3D,WACA8zD,EAAA9qH,KAAAqrH,mBAAA5xH,GACAuG,KAAAqqH,gBACA7iH,EACAiJ,EACAzQ,KAAAooH,WAAA3uH,GACAg/B,EAAAqyF,EAAAvmF,EAAAgmC,QACAvrC,EAAA0uF,EAAAF,EAAAjpF,EAAAimC,QACA/wE,GAEAi0H,GAAAlD,EAEA/5G,EAAA4tC,WAOA0rE,gBAAA,SAAAt5G,IACAzQ,KAAAi3C,MAAAj3C,KAAAuqH,SAAA,UAIAvqH,KAAAytH,kBAAAh9G,EAAA,aAOAq5G,kBAAA,SAAAr5G,IACAzQ,KAAA4xD,QAAA,IAAA5xD,KAAAw7E,cAAAx7E,KAAA2tH,mBAIA3tH,KAAAitE,SAAAjtE,KAAAitE,OAAAJ,cACA7sE,KAAAg7F,cAAAvqF,GAGAA,EAAAytC,OACAl+C,KAAAooF,aAAA33E,EAAAzQ,KAAA64E,iBACApoE,EAAAquC,YACA9+C,KAAAytH,kBAAAh9G,EAAA,cACAA,EAAA2jE,YACA3jE,EAAA4tC,YAaAisE,aAAA,SAAA9iH,EAAAiJ,EAAAiF,EAAA+iB,EAAAuG,EAAAwqF,GAEA,IAEAoE,EACAC,EAEAlD,EAEAmD,EAPA92D,EAAAh3D,KAAAorH,gBAAA5B,GACAuE,GAAA,IAAA/tH,KAAAgnH,UAAArlH,QAAA,WAGAqsH,EAAA,GAEA7C,EAAA,EAEA8C,GAAAF,GAAA,IAAA/tH,KAAAunH,aAAAvnH,KAAA2tH,cAAAnE,GAIA,GAFA/4G,EAAAytC,OACAlf,GAAAg4B,EAAAh3D,KAAAqnH,kBAAArnH,KAAAg3D,WACAi3D,EAIA,OAFAjuH,KAAAkuH,YAAA1mH,EAAAiJ,EAAA+4G,EAAA,EAAAxpH,KAAAmoH,UAAAqB,GAAA/wF,EAAAuG,EAAAg4B,QACAvmD,EAAA4tC,UAGA,IAAA,IAAA5kD,EAAA,EAAAyY,EAAAwD,EAAAnc,OAAA,EAAAE,GAAAyY,EAAAzY,IACAq0H,EAAAr0H,IAAAyY,GAAAlS,KAAAunH,YACAyG,GAAAt4G,EAAAjc,GACAkxH,EAAA3qH,KAAA0nH,aAAA8B,GAAA/vH,GACA,IAAA0xH,GACA1yF,GAAAkyF,EAAApB,YAAAoB,EAAA7pF,MACAqqF,GAAAR,EAAA7pF,OAGAqqF,GAAAR,EAAApB,YAEAwE,IAAAD,GACA9tH,KAAA8mH,eAAA9oH,KAAA0X,EAAAjc,MACAq0H,GAAA,GAGAA,IAEAF,EAAAA,GAAA5tH,KAAAmtH,4BAAA3D,EAAA/vH,GACAo0H,EAAA7tH,KAAAmtH,4BAAA3D,EAAA/vH,EAAA,GACAq0H,EAAA9tH,KAAAmuH,iBAAAP,EAAAC,IAEAC,IACA9tH,KAAAkuH,YAAA1mH,EAAAiJ,EAAA+4G,EAAA/vH,EAAAu0H,EAAAv1F,EAAAuG,EAAAg4B,GACAg3D,EAAA,GACAJ,EAAAC,EACAp1F,GAAA0yF,EACAA,EAAA,GAGA16G,EAAA4tC,WAcA6vE,YAAA,SAAA1mH,EAAAiJ,EAAA+4G,EAAA1yC,EAAAD,EAAAp+C,EAAAuG,GACA,IAAAi8D,EAAAj7F,KAAAouH,qBAAA5E,EAAA1yC,GACAu3C,EAAAruH,KAAAmtH,4BAAA3D,EAAA1yC,GACAw3C,EAAA,aAAA9mH,GAAA6mH,EAAAp3E,KACAs3E,EAAA,eAAA/mH,GAAA6mH,EAAAz8D,QAAAy8D,EAAA7yC,aAEA+yC,GAAAD,KAGArzB,GAAAxqF,EAAAytC,OAEAl+C,KAAAyrH,iBAAAjkH,EAAAiJ,EAAA+4G,EAAA1yC,EAAAu3C,GAEApzB,GAAAA,EAAAmsB,qBACApnH,KAAAg7F,cAAAvqF,GAEAwqF,GAAAA,EAAAkI,SACAnkE,GAAAi8D,EAAAkI,QAGAmrB,GAAA79G,EAAA+9G,SAAA33C,EAAAp+C,EAAAuG,GACAuvF,GAAA99G,EAAAg+G,WAAA53C,EAAAp+C,EAAAuG,GACAi8D,GAAAxqF,EAAA4tC,YAUAqwE,eAAA,SAAA9lH,EAAAsU,GACA,OAAAld,KAAA2uH,WAAA/lH,EAAAsU,EAAAld,KAAAinH,cAUA2H,aAAA,SAAAhmH,EAAAsU,GACA,OAAAld,KAAA2uH,WAAA/lH,EAAAsU,EAAAld,KAAAmnH,YAYAwH,WAAA,SAAA/lH,EAAAsU,EAAA2xG,GACA,IAAAC,EAAA9uH,KAAA+uH,oBAAAnmH,GAAA,GACAyyC,EAAAr7C,KAAAsrH,qBAAAwD,EAAAtF,UAAAsF,EAAAh4C,UAAA,YACAj5B,EAAA79C,KAAAsrH,qBAAAwD,EAAAtF,UAAAsF,EAAAh4C,UAAA,UACAn6D,GAAA0+B,SAAAA,EAAAwzE,EAAApgG,KAAA00E,OAAAtlD,EAAAxC,EAAAwzE,EAAA3H,UAEA,OADAlnH,KAAAgvH,mBAAAryG,EAAA/T,EAAAsU,GACAld,MAQAmuH,iBAAA,SAAAf,EAAA6B,GACA,OAAA7B,EAAAn2E,OAAAg4E,EAAAh4E,MACAm2E,EAAAx7D,SAAAq9D,EAAAr9D,QACAw7D,EAAA5xC,cAAAyzC,EAAAzzC,aACA4xC,EAAA/xE,WAAA4zE,EAAA5zE,UACA+xE,EAAAjsE,aAAA8tE,EAAA9tE,YACAisE,EAAAr2D,aAAAk4D,EAAAl4D,YACAq2D,EAAAt2D,YAAAm4D,EAAAn4D,WACAs2D,EAAAjqB,SAAA8rB,EAAA9rB,QAQA+rB,uBAAA,SAAA9B,EAAA6B,GACA,OAAAjvH,KAAAmuH,iBAAAf,EAAA6B,IACA7B,EAAAhqB,WAAA6rB,EAAA7rB,UACAgqB,EAAA/pB,YAAA4rB,EAAA5rB,WACA+pB,EAAA9pB,cAAA2rB,EAAA3rB,aAQA+nB,mBAAA,SAAA7B,GACA,IAAAxwC,EAAAh5E,KAAAspH,aAAAE,GACA,MAAA,WAAAxpH,KAAAgnH,WACAhnH,KAAA8gC,MAAAk4C,GAAA,EAEA,UAAAh5E,KAAAgnH,UACAhnH,KAAA8gC,MAAAk4C,EAEA,mBAAAh5E,KAAAgnH,WAAAhnH,KAAAqpH,gBAAAG,IACAxpH,KAAA8gC,MAAAk4C,GAAA,EAEA,kBAAAh5E,KAAAgnH,WAAAhnH,KAAAqpH,gBAAAG,GACAxpH,KAAA8gC,MAAAk4C,EAEA,GAMA0vC,YAAA,WACA1oH,KAAAmvH,gBACAnvH,KAAAutH,iBACAvtH,KAAA0nH,iBAMA0H,2BAAA,WACA,IAAAC,EAAArvH,KAAAsvH,iBAMA,OALAD,IAAAA,EAAArvH,KAAAiwF,gBAAA,6BACAo/B,IACArvH,KAAA02F,OAAA,EACA12F,KAAAsvH,kBAAA,GAEAD,GAUA/F,aAAA,SAAAE,GACA,GAAAxpH,KAAAmvH,aAAA3F,GACA,OAAAxpH,KAAAmvH,aAAA3F,GAGA,IAAA1oF,EAAA2rF,EAAA/2G,EAAA1V,KAAAooH,WAAAoB,GAUA,MARA,KAAA9zG,EACAorB,EAAA,GAGA2rF,EAAAzsH,KAAAwsH,YAAAhD,GACA1oF,EAAA2rF,EAAA3rF,OAEA9gC,KAAAmvH,aAAA3F,GAAA1oF,EACAA,GAGA6rF,uBAAA,WACA,OAAA,IAAA3sH,KAAAunH,YACAvnH,KAAAq7C,SAAAr7C,KAAAunH,YAAA,IAEA,GAUA+D,qBAAA,SAAA9B,EAAA1yC,EAAA5pD,GACA,IAAA88F,EAAAhqH,KAAAouH,qBAAA5E,EAAA1yC,GACA,OAAAkzC,QAAA,IAAAA,EAAA98F,GACA88F,EAAA98F,GAEAltB,KAAAktB,IAOA08F,sBAAA,SAAAn5G,EAAAvW,GACA,GAAA8F,KAAA9F,IAAA8F,KAAAuqH,SAAArwH,GAAA,CAYA,IATA,IAAAswH,EAAA/7F,EAAA8gG,EACA9E,EAAA5sE,EAAA2xE,EACA95G,EAAA+5G,EAEAzwF,EACAksF,EAAAC,EAAAR,EAAA+E,EACAlC,EAAAmC,EAAAC,EAHA9E,EAAA9qH,KAAA+qH,iBACAC,EAAAhrH,KAAAirH,gBAGA1D,EAAAvnH,KAAA2sH,yBAEAlzH,EAAA,EAAAyY,EAAAlS,KAAAooH,WAAA7uH,OAAAE,EAAAyY,EAAAzY,IAEA,GADA+wH,EAAAxqH,KAAAorH,gBAAA3xH,GACAuG,KAAA9F,IAAA8F,KAAAuqH,SAAArwH,EAAAT,GAAA,CAIAic,EAAA1V,KAAAooH,WAAA3uH,GACA+zH,EAAAhD,EAAAxqH,KAAAg3D,WACAyzD,EAAAzqH,KAAAqrH,mBAAA5xH,GACAyxH,EAAA,EACAC,EAAA,EACAsE,EAAAzvH,KAAAsrH,qBAAA7xH,EAAA,EAAAS,GACA01H,EAAA5vH,KAAAsrH,qBAAA7xH,EAAA,EAAA,QACAulC,EAAAgsF,EAAAwC,GAAA,EAAAxtH,KAAAqnH,mBACA54F,EAAAzuB,KAAAusH,gBAAA9yH,EAAA,GACAokD,EAAA79C,KAAAsrH,qBAAA7xH,EAAA,EAAA,UACA,IAAA,IAAA4J,EAAA,EAAAqiD,EAAAhwC,EAAAnc,OAAA8J,EAAAqiD,EAAAriD,IACAsnH,EAAA3qH,KAAA0nH,aAAAjuH,GAAA4J,GACAqsH,EAAA1vH,KAAAsrH,qBAAA7xH,EAAA4J,EAAAnJ,GACAy1H,EAAA3vH,KAAAsrH,qBAAA7xH,EAAA4J,EAAA,QACAksH,EAAAvvH,KAAAusH,gBAAA9yH,EAAA4J,GACAmsH,EAAAxvH,KAAAsrH,qBAAA7xH,EAAA4J,EAAA,WACAqsH,IAAAD,GAAAE,IAAAC,GAAAL,IAAA9gG,GAAA+gG,IAAA3xE,IACAstE,EAAA,GACA16G,EAAA4jE,UAAAu7C,EACAH,GAAAG,GAAAn/G,EAAAqtE,SACAgtC,EAAAL,EAAAS,EACAlsF,EAAAh/B,KAAAukC,QAAArqC,GAAAu0B,EAAAovB,EACAstE,EACAnrH,KAAAq7C,SAAA,IAEA6vE,EAAAP,EAAAlyF,KACA0yF,EAAAR,EAAA7pF,MACA2uF,EAAAC,EACAE,EAAAD,EACAlhG,EAAA8gG,EACA1xE,EAAA2xE,GAGArE,GAAAR,EAAApB,YAGA94G,EAAA4jE,UAAAs7C,EACAD,GAAAC,GAAAl/G,EAAAqtE,SACAgtC,EAAAL,EAAAS,EACAlsF,EAAAh/B,KAAAukC,QAAArqC,GAAAu0B,EAAAovB,EACAstE,EAAA5D,EACAvnH,KAAAq7C,SAAA,IAEA2vE,GAAAR,OA9CAQ,GAAAR,EAkDAxqH,KAAAg7F,cAAAvqF,KAQA05G,oBAAA,SAAA0F,EAAA5F,GACA,IAAAttG,EAAAkzG,GAAA7vH,KAAA8vH,EAAA9vH,KAAAmhD,WACA4uE,EAAA39E,EAAAmJ,KAAAy0E,aAAAruH,QAAAmuH,EAAA11H,gBAAA,EACA+mD,OAAArkD,IAAAgzH,GACAA,EAAAnuH,QAAA,MAAA,GAAAmuH,EAAAnuH,QAAA,MAAA,GACAmuH,EAAAnuH,QAAA,MAAA,GAAAouH,EACApzG,EAAAwkC,WAAA,IAAAxkC,EAAAwkC,WAAA,IACA,OAGA/O,EAAA0C,aAAAn4B,EAAAo6C,WAAAp6C,EAAAm6C,UACA1kB,EAAA0C,aAAAn4B,EAAAm6C,UAAAn6C,EAAAo6C,WACAkzD,EAAAjqH,KAAA2nH,gBAAA,KAAAhrG,EAAA0+B,SAAA,KACA8F,GACAh0C,KAAA,MAOAH,OAAA,SAAAyD,GAEAzQ,KAAAiiB,UAGAjiB,KAAAqzC,QAAArzC,KAAAqzC,OAAAs7B,gBAAA3uE,KAAA2xE,QAAA3xE,KAAAy5F,eAGAz5F,KAAAovH,8BACApvH,KAAA8nH,iBAEA9nH,KAAAunD,UAAA,SAAA92C,MAQAy3G,oBAAA,SAAAp7G,GAKA,IAJA,IAAAuzF,EAAAvzF,EAAAxT,MAAA0G,KAAA4mH,YACAqB,EAAA,IAAA7sH,MAAAilG,EAAA9mG,QACA02H,GAAA,MACAC,KACAz2H,EAAA,EAAAA,EAAA4mG,EAAA9mG,OAAAE,IACAwuH,EAAAxuH,GAAA24C,EAAAlkB,KAAAzY,OAAAsxC,cAAAs5C,EAAA5mG,IACAy2H,EAAAA,EAAAlsH,OAAAikH,EAAAxuH,GAAAw2H,GAGA,OADAC,EAAAtwH,OACA2oH,gBAAAN,EAAA5nB,MAAAA,EAAAooB,aAAAyH,EAAA7H,cAAAJ,IAQAt9C,SAAA,SAAAC,GACA,IAAAulD,GACA,OACA,WACA,aACA,aACA,YACA,aACA,YACA,WACA,cACA,YACA,sBACA,eACAnsH,OAAA4mE,GACA9wE,EAAAkG,KAAAunD,UAAA,WAAA4oE,GAEA,OADAr2H,EAAA42C,OAAAhwC,EAAAV,KAAA0wC,QAAA,GACA52C,GAUAme,IAAA,SAAAlZ,EAAAtE,GACAuF,KAAAunD,UAAA,MAAAxoD,EAAAtE,GACA,IAAA21H,GAAA,EACA,GAAA,iBAAArxH,EACA,IAAA,IAAAsxH,KAAAtxH,EACAqxH,EAAAA,IAAA,IAAApwH,KAAA2mH,yBAAAhlH,QAAA0uH,QAIAD,GAAA,IAAApwH,KAAA2mH,yBAAAhlH,QAAA5C,GAMA,OAJAqxH,IACApwH,KAAA8nH,iBACA9nH,KAAA4xE,aAEA5xE,MAOAk4C,WAAA,WACA,OAAA,KAWA9F,EAAAmJ,KAAAusD,gBAAA11D,EAAA4C,kBAAAhxC,OACA,oGAAA1K,MAAA,MAOA84C,EAAAmJ,KAAAC,sBAAA,GAUApJ,EAAAmJ,KAAAse,YAAA,SAAAt4C,EAAAtgB,EAAAiE,GACA,IAAAqc,EACA,OAAAtgB,EAAA,MAGA,IAAA8mG,EAAA31D,EAAA8kB,gBAAA31C,EAAA6wB,EAAAmJ,KAAAusD,iBACAwoB,EAAAvoB,EAAAwoB,YAAA,OAKA,IAJArrH,EAAAktC,EAAAlkB,KAAAhzB,OAAAiG,OAAA+D,EAAAxE,EAAAwE,MAAA6iG,IAEA/oE,IAAA95B,EAAA85B,KAAA,EACA95B,EAAAuzB,KAAAvzB,EAAAuzB,MAAA,EACAsvE,EAAA9E,eAAA,CACA,IAAAA,EAAA8E,EAAA9E,gBACA,IAAAA,EAAAthG,QAAA,eACAuD,EAAAm+F,WAAA,IAEA,IAAAJ,EAAAthG,QAAA,cACAuD,EAAAk+F,UAAA,IAEA,IAAAH,EAAAthG,QAAA,kBACAuD,EAAAo+F,aAAA,UAEAp+F,EAAA+9F,eAEA,OAAA8E,IACA7iG,EAAAuzB,MAAAsvE,EAAAnqD,IAEA,OAAAmqD,IACA7iG,EAAA85B,KAAA+oE,EAAAlqD,IAEA,aAAA34C,IACAA,EAAAm2C,SAAAjJ,EAAAmJ,KAAAC,uBAGA,IAAA7uB,EAAA,GAKA,gBAAApL,EAQAoL,EAAApL,EAAAoL,YAPA,eAAApL,GAAA,OAAAA,EAAAR,YACA,SAAAQ,EAAAR,YAAA,OAAAQ,EAAAR,WAAA5X,OACAwjB,EAAApL,EAAAR,WAAA5X,MAQAwjB,EAAAA,EAAA7uB,QAAA,iBAAA,IAAAA,QAAA,OAAA,KACA,IAAA0yH,EAAAtrH,EAAAs2E,YACAt2E,EAAAs2E,YAAA,EAEA,IAAA1uE,EAAA,IAAAslC,EAAAmJ,KAAA5uB,EAAAznB,GACAurH,EAAA3jH,EAAAo0F,kBAAAp0F,EAAAi0B,OACA2vF,GAAA5jH,EAAAi0B,OAAAj0B,EAAA0uE,aAAA1uE,EAAAkqD,WAAAlqD,EAAAi0B,OACA4vF,EAAAD,EAAAD,EACAG,EAAA9jH,EAAAo0F,kBAAAyvB,EACAE,EAAA,EAMA,WAAAP,IACAO,EAAA/jH,EAAAqyF,iBAAA,GAEA,UAAAmxB,IACAO,EAAA/jH,EAAAqyF,kBAEAryF,EAAAmL,KACAwgB,KAAA3rB,EAAA2rB,KAAAo4F,EACA7xF,IAAAlyB,EAAAkyB,KAAA4xF,EAAA9jH,EAAAuuC,UAAA,IAAAvuC,EAAAu6G,oBAAAv6G,EAAAkqD,WACAwkB,iBAAA,IAAAg1C,EAAAA,EAAA,IAEAvvH,EAAA6L,IAWAslC,EAAAmJ,KAAAqB,WAAA,SAAA1hD,EAAA+F,GACA,OAAAmxC,EAAAt2C,OAAA2gG,YAAA,OAAAvhG,EAAA+F,EAAA,SAGAmxC,EAAAmJ,KAAAy0E,cAAA,aAAA,QAAA,UAAA,UAAA,aAEA59E,EAAAlkB,KAAAiwE,iBAAA/rD,EAAAlkB,KAAAiwE,gBAAA/rD,EAAAmJ,OAt7CA,CAw7CA,oBAAAtC,QAAAA,QAAAj5C,MAIAoyC,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAmJ,KAAAv/C,WAMA2xH,cAAA,SAAAnE,GACA,IAAAxpH,KAAA0wC,OACA,OAAA,EAEA,QAAA,IAAA84E,IAAAxpH,KAAA0wC,OAAA84E,GACA,OAAA,EAEA,IAAA1vH,OAAA,IAAA0vH,EAAAxpH,KAAA0wC,QAAAh7B,KAAA1V,KAAA0wC,OAAA84E,IACA,IAAA,IAAAxvC,KAAAlgF,EACA,IAAA,IAAAmgF,KAAAngF,EAAAkgF,GAEA,IAAA,IAAA82C,KAAAh3H,EAAAkgF,GAAAC,GACA,OAAA,EAIA,OAAA,GAUAswC,SAAA,SAAAr9F,EAAAs8F,GACA,IAAAxpH,KAAA0wC,SAAAxjB,GAAA,KAAAA,EACA,OAAA,EAEA,QAAA,IAAAs8F,IAAAxpH,KAAA0wC,OAAA84E,GACA,OAAA,EAEA,IAAA1vH,OAAA,IAAA0vH,EAAAxpH,KAAA0wC,QAAA4zC,EAAAtkF,KAAA0wC,OAAA84E,IAEA,IAAA,IAAAxvC,KAAAlgF,EAEA,IAAA,IAAAmgF,KAAAngF,EAAAkgF,GACA,QAAA,IAAAlgF,EAAAkgF,GAAAC,GAAA/sD,GACA,OAAA,EAIA,OAAA,GAaA6jG,WAAA,SAAA7jG,GACA,IAAAltB,KAAA0wC,SAAAxjB,GAAA,KAAAA,EACA,OAAA,EAEA,IAAA8jG,EAAAC,EAAAn3H,EAAAkG,KAAA0wC,OAAAwgF,EAAA,EACAC,GAAA,EAAAC,EAAA,EAEA,IAAA,IAAAp3C,KAAAlgF,EAAA,CAGA,IAAA,IAAAmgF,KAFA+2C,EAAA,EAEAl3H,EAAAkgF,GAAA,CACA,IAAA61C,EAAA/1H,EAAAkgF,GAAAC,GACAo3C,EAAAxB,EAAArxH,eAAA0uB,GAEAgkG,IAEAG,GACAJ,EAGApB,EAAA3iG,KAAA+jG,IACAE,GAAA,GAHAF,EAAApB,EAAA3iG,GAMA2iG,EAAA3iG,KAAAltB,KAAAktB,WACA2iG,EAAA3iG,IAIAikG,GAAA,EAGA,IAAAr1H,OAAAgD,KAAA+wH,GAAAt2H,OACAy3H,WAGAl3H,EAAAkgF,GAAAC,GAIA,IAAA+2C,UACAl3H,EAAAkgF,GAKA,IAAA,IAAAvgF,EAAA,EAAAA,EAAAuG,KAAAooH,WAAA7uH,OAAAE,IACA23H,GAAApxH,KAAAooH,WAAA3uH,GAAAF,OAEA43H,GAAAD,IAAAE,IACApxH,KAAAktB,GAAA+jG,EACAjxH,KAAAsxH,YAAApkG,KAWAokG,YAAA,SAAApkG,GACA,GAAAltB,KAAA0wC,QAAAxjB,GAAA,KAAAA,EAAA,CAGA,IAAAxX,EAAA67G,EAAAC,EAAA13H,EAAAkG,KAAA0wC,OACA,IAAA6gF,KAAAz3H,EAAA,CAEA,IAAA03H,KADA97G,EAAA5b,EAAAy3H,UAEA77G,EAAA87G,GAAAtkG,GACA,IAAApxB,OAAAgD,KAAA4W,EAAA87G,IAAAj4H,eACAmc,EAAA87G,GAGA,IAAA11H,OAAAgD,KAAA4W,GAAAnc,eACAO,EAAAy3H,MAQAE,cAAA,SAAA3wH,EAAA4vC,GACA,IAAAo+E,EAAA9uH,KAAA+uH,oBAAAjuH,GAEAd,KAAA0xH,cAAA5C,EAAAtF,YACAxpH,KAAA2xH,cAAA7C,EAAAtF,WAGAxpH,KAAAouH,qBAAAU,EAAAtF,UAAAsF,EAAAh4C,YACA92E,KAAA4xH,qBAAA9C,EAAAtF,UAAAsF,EAAAh4C,cAGA1kC,EAAAlkB,KAAAhzB,OAAAiG,OAAAnB,KAAAouH,qBAAAU,EAAAtF,UAAAsF,EAAAh4C,WAAApmC,IAQAq+E,oBAAA,SAAA8C,EAAAC,QACA,IAAAD,IACAA,EAAA7xH,KAAA6xH,gBAIA,IAFA,IAAAxxB,EAAAyxB,EAAA9xH,KAAAsoH,oBAAAtoH,KAAAooH,WACAl2G,EAAAmuF,EAAA9mG,OACAE,EAAA,EAAAA,EAAAyY,EAAAzY,IAAA,CACA,GAAAo4H,GAAAxxB,EAAA5mG,GAAAF,OACA,OACAiwH,UAAA/vH,EACAq9E,UAAA+6C,GAGAA,GAAAxxB,EAAA5mG,GAAAF,OAAAyG,KAAAypH,qBAAAhwH,GAEA,OACA+vH,UAAA/vH,EAAA,EACAq9E,UAAAupB,EAAA5mG,EAAA,GAAAF,OAAAs4H,EAAAxxB,EAAA5mG,EAAA,GAAAF,OAAAs4H,IAYAE,mBAAA,SAAAC,EAAAC,EAAAvoF,QACA,IAAAsoF,IACAA,EAAAhyH,KAAA6xH,gBAAA,QAEA,IAAAI,IACAA,EAAAjyH,KAAAkyH,cAAAF,GAGA,IADA,IAAAthF,KACAj3C,EAAAu4H,EAAAv4H,EAAAw4H,EAAAx4H,IACAi3C,EAAA1xC,KAAAgB,KAAAmyH,mBAAA14H,EAAAiwC,IAEA,OAAAgH,GAUAyhF,mBAAA,SAAA7vG,EAAAonB,GACA,IAAAolF,EAAA9uH,KAAA+uH,oBAAAzsG,GACA3F,EAAA+sB,EAAA1pC,KAAAmtH,4BAAA2B,EAAAtF,UAAAsF,EAAAh4C,WACA92E,KAAAouH,qBAAAU,EAAAtF,UAAAsF,EAAAh4C,WACA,OAAAn6D,OAWAqyG,mBAAA,SAAAt+E,EAAAshF,EAAAC,QACA,IAAAD,IACAA,EAAAhyH,KAAA6xH,gBAAA,QAEA,IAAAI,IACAA,EAAAjyH,KAAAkyH,cAAAF,GAEA,IAAA,IAAAv4H,EAAAu4H,EAAAv4H,EAAAw4H,EAAAx4H,IACAuG,KAAAyxH,cAAAh4H,EAAAi3C,GAIA,OADA1wC,KAAAsvH,kBAAA,EACAtvH,MASAouH,qBAAA,SAAA5E,EAAA1yC,GACA,IAAAs7C,EAAApyH,KAAA0wC,QAAA1wC,KAAA0wC,OAAA84E,GACA,OAAA4I,EAGAA,EAAAt7C,GAFA,MAYAq2C,4BAAA,SAAA3D,EAAA1yC,GAGA,IAFA,IACAp0E,EADAia,EAAA3c,KAAAouH,qBAAA5E,EAAA1yC,OACA+4C,KACAp2H,EAAA,EAAAA,EAAAuG,KAAAynH,iBAAAluH,OAAAE,IACAiJ,EAAA1C,KAAAynH,iBAAAhuH,GACAo2H,EAAAntH,QAAA,IAAAia,EAAAja,GAAA1C,KAAA0C,GAAAia,EAAAja,GAEA,OAAAmtH,GASA+B,qBAAA,SAAApI,EAAA1yC,EAAAn6D,GACA3c,KAAA0wC,OAAA84E,GAAA1yC,GAAAn6D,GASA01G,wBAAA,SAAA7I,EAAA1yC,UACA92E,KAAA0wC,OAAA84E,GAAA1yC,IAQA46C,cAAA,SAAAlI,GACA,QAAAxpH,KAAA0wC,OAAA84E,IAQAmI,cAAA,SAAAnI,GACAxpH,KAAA0wC,OAAA84E,OAOA8I,iBAAA,SAAA9I,UACAxpH,KAAA0wC,OAAA84E,MAMA,WAEA,SAAA+I,EAAAr3H,GACAA,EAAA+nG,iBACA/nG,EAAA+nG,eAAAthG,QAAA,cAAA,IAAAzG,EAAAmoG,WAAA,GACAnoG,EAAA+nG,eAAAthG,QAAA,iBAAA,IAAAzG,EAAAooG,aAAA,GACApoG,EAAA+nG,eAAAthG,QAAA,aAAA,IAAAzG,EAAAkoG,UAAA,UACAloG,EAAA+nG,gBAkDA7wD,EAAAogF,MAAApgF,EAAAlkB,KAAAvpB,YAAAytC,EAAAmJ,KAAAnJ,EAAAkF,YAOAp9C,KAAA,SAOA23H,eAAA,EAOAK,aAAA,EAOA/yC,eAAA,uBAOA2J,WAAA,EAOA2pC,UAAA,EAOAC,mBAAA,yBAOA9J,YAAA,EAOA+J,YAAA,OAOAC,YAAA,IAOAC,eAAA,IAOAC,SAAA,EAKAC,SAAA,QAKAC,sBAAA,EAKAC,oBAAA,KAKAC,uBAAA,EAKAC,kBAMAC,mBAAA,EAQAzrE,WAAA,SAAA76C,EAAA5H,GACAlF,KAAAunD,UAAA,aAAAz6C,EAAA5H,GACAlF,KAAAqzH,gBAOAC,kBAAA,SAAAxyH,GACAA,EAAAwI,KAAAwiB,IAAAhrB,EAAA,GACAd,KAAAuzH,eAAA,iBAAAzyH,IAOA0yH,gBAAA,SAAA1yH,GACAA,EAAAwI,KAAAwoC,IAAAhxC,EAAAd,KAAA8M,KAAAvT,QACAyG,KAAAuzH,eAAA,eAAAzyH,IAQAyyH,eAAA,SAAArmG,EAAApsB,GACAd,KAAAktB,KAAApsB,IACAd,KAAAyzH,wBACAzzH,KAAAktB,GAAApsB,GAEAd,KAAA0zH,mBAOAD,sBAAA,WACAzzH,KAAAo3C,KAAA,qBACAp3C,KAAAqzC,QAAArzC,KAAAqzC,OAAA+D,KAAA,0BAAAj4C,OAAAa,QAUA8nH,eAAA,WACA9nH,KAAA8oF,WAAA9oF,KAAA2zH,oBACA3zH,KAAAurF,kBACAvrF,KAAAunD,UAAA,mBAOAv6C,OAAA,SAAAyD,GACAzQ,KAAAurF,kBACAvrF,KAAAunD,UAAA,SAAA92C,GAGAzQ,KAAA4zH,qBACA5zH,KAAA6zH,2BAOAp5C,QAAA,SAAAhqE,GACAzQ,KAAAunD,UAAA,UAAA92C,IAMA86E,gBAAA,SAAAuoC,GACA,GAAA9zH,KAAA8oF,WAAA9oF,KAAAqzC,QAAArzC,KAAAqzC,OAAAu8B,WAAA,CAGA,IAAAn/D,EAAAzQ,KAAAqzC,OAAAu8B,WAAAn5D,EAAAzW,KAAAqzC,OAAAg7B,kBACA59D,EAAAytC,OACAztC,EAAAuG,UAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAzW,KAAAgX,UAAAvG,GACAzQ,KAAAgyD,iBAAAvhD,EAAAuG,UAAAjX,MAAA0Q,EAAAzQ,KAAAgyD,iBACAhyD,KAAA+zH,eAAAtjH,GACAqjH,GAAArjH,EAAA4tC,YAOAw1E,wBAAA,WACA,GAAA7zH,KAAA8oF,WAAA9oF,KAAAqzC,QAAArzC,KAAAqzC,OAAAu8B,WAAA,CAGA,IAAAokD,EAAAh0H,KAAAi0H,uBACAxjH,EAAAzQ,KAAAqzC,OAAAu8B,WACA5vE,KAAAurF,iBAAA,GACAvrF,KAAA6xH,iBAAA7xH,KAAAkyH,aACAlyH,KAAAk0H,aAAAF,EAAAvjH,GAGAzQ,KAAAm0H,gBAAAH,EAAAvjH,GAEAA,EAAA4tC,YAGA01E,eAAA,SAAAtjH,GAEA,IAAAqwB,EAAA9gC,KAAA8gC,MAAA,EAAAC,EAAA/gC,KAAA+gC,OAAA,EACAtwB,EAAA4hE,WAAAvxC,EAAA,GAAAC,EAAA,EAAAD,EAAAC,IASAkzF,qBAAA,SAAA3xG,QAKA,IAAAA,IACAA,EAAAtiB,KAAA6xH,gBAGA,IAAAp5F,EAAAz4B,KAAA+qH,iBACA/rF,EAAAh/B,KAAAirH,gBACA1mF,EAAAvkC,KAAAo0H,4BAAA9xG,GAEA,OACAmW,KAAAA,EACAuG,IAAAA,EACA8rF,WAAAvmF,EAAA9L,KACAuyF,UAAAzmF,EAAAvF,MAOAo1F,4BAAA,SAAA9xG,GACA,GAAAtiB,KAAA4zH,mBAAA,QAAA5zH,KAAA4zH,kBACA,OAAA5zH,KAAA4zH,kBAEA,IAAAnJ,EACAjB,EACA1yC,EAGAk9C,EAFAhJ,EAAA,EACAF,EAAA,EAEAuJ,EAAAr0H,KAAA+uH,oBAAAzsG,GACAw0D,EAAAu9C,EAAAv9C,UACA0yC,EAAA6K,EAAA7K,UACA,IAAA,IAAA/vH,EAAA,EAAAA,EAAA+vH,EAAA/vH,IACAuxH,GAAAhrH,KAAAorH,gBAAA3xH,GAEAgxH,EAAAzqH,KAAAqrH,mBAAA7B,GACA,IAAAtjE,EAAAlmD,KAAA0nH,aAAA8B,GAAA1yC,GAUA,OATA5wB,IAAA4kE,EAAA5kE,EAAAztB,MACA,IAAAz4B,KAAAunH,aAAAzwC,IAAA92E,KAAAooH,WAAAoB,GAAAjwH,SACAuxH,GAAA9qH,KAAA2sH,0BAEAqH,GACAh1F,IAAAgsF,EACAvyF,KAAAgyF,GAAAK,EAAA,EAAAA,EAAA,IAEA9qH,KAAA4zH,kBAAAI,EACAh0H,KAAA4zH,mBAQAM,aAAA,SAAAF,EAAAvjH,GACA,IAAA6jH,EAAAt0H,KAAA+uH,sBACAvF,EAAA8K,EAAA9K,UACA1yC,EAAAw9C,EAAAx9C,UAAA,EAAAw9C,EAAAx9C,UAAA,EAAA,EACAy9C,EAAAv0H,KAAAsrH,qBAAA9B,EAAA1yC,EAAA,YACA/M,EAAA/pE,KAAAo/C,OAAAp/C,KAAAqzC,OAAAi+B,UACAs3C,EAAA5oH,KAAA4oH,YAAA7+C,EACAihD,EAAAgJ,EAAAhJ,UACAntE,EAAA79C,KAAAsrH,qBAAA9B,EAAA1yC,EAAA,UAEAk0C,IAAA,EAAAhrH,KAAAqnH,mBAAArnH,KAAAorH,gBAAA5B,GAAAxpH,KAAAg3D,WACAu9D,GAAA,EAAAv0H,KAAAqnH,mBAEArnH,KAAAozH,mBACApzH,KAAAm0H,gBAAAH,EAAAvjH,GAGAA,EAAA4jE,UAAAr0E,KAAAsrH,qBAAA9B,EAAA1yC,EAAA,QACArmE,EAAAotE,YAAA79E,KAAAw0H,cAAA,EAAAx0H,KAAAgzH,sBACAviH,EAAAqtE,SACAk2C,EAAAv7F,KAAAu7F,EAAAlJ,WAAAlC,EAAA,EACAoC,EAAAgJ,EAAAh1F,IAAA6e,EACA+qE,EACA2L,IAQAJ,gBAAA,SAAAH,EAAAvjH,GAYA,IAVA,IAAAohH,EAAA7xH,KAAAozH,kBAAApzH,KAAAkuF,eAAA2jC,eAAA7xH,KAAA6xH,eACAK,EAAAlyH,KAAAozH,kBAAApzH,KAAAkuF,eAAAgkC,aAAAlyH,KAAAkyH,aACAnE,GAAA,IAAA/tH,KAAAgnH,UAAArlH,QAAA,WACAiH,EAAA5I,KAAA+uH,oBAAA8C,GACA30G,EAAAld,KAAA+uH,oBAAAmD,GACAuC,EAAA7rH,EAAA4gH,UACAkL,EAAAx3G,EAAAssG,UACAmL,EAAA/rH,EAAAkuE,UAAA,EAAA,EAAAluE,EAAAkuE,UACA89C,EAAA13G,EAAA45D,UAAA,EAAA,EAAA55D,EAAA45D,UAEAr9E,EAAAg7H,EAAAh7H,GAAAi7H,EAAAj7H,IAAA,CACA,IAAAo7H,EAAA70H,KAAAqrH,mBAAA5xH,IAAA,EACAu9D,EAAAh3D,KAAAorH,gBAAA3xH,GACAq7H,EAAA,EAAA5J,EAAA,EAAA6J,EAAA,EAKA,GAHAt7H,IAAAg7H,IACAvJ,EAAAlrH,KAAA0nH,aAAA+M,GAAAE,GAAAl8F,MAEAh/B,GAAAg7H,GAAAh7H,EAAAi7H,EACAK,EAAAhH,IAAA/tH,KAAAqpH,gBAAA5vH,GAAAuG,KAAA8gC,MAAA9gC,KAAAspH,aAAA7vH,IAAA,OAEA,GAAAA,IAAAi7H,EACA,GAAA,IAAAE,EACAG,EAAA/0H,KAAA0nH,aAAAgN,GAAAE,GAAAn8F,SAEA,CACA,IAAA8uF,EAAAvnH,KAAA2sH,yBACAoI,EAAA/0H,KAAA0nH,aAAAgN,GAAAE,EAAA,GAAAn8F,KACAz4B,KAAA0nH,aAAAgN,GAAAE,EAAA,GAAA9zF,MAAAymF,EAGAuN,EAAA99D,GACAh3D,KAAAg3D,WAAA,GAAAv9D,IAAAi7H,GAAA10H,KAAAg3D,WAAA,KACAA,GAAAh3D,KAAAg3D,YAEAh3D,KAAAozH,mBACA3iH,EAAA4jE,UAAAr0E,KAAAg1H,kBAAA,QACAvkH,EAAAqtE,SACAk2C,EAAAv7F,KAAAo8F,EAAA3J,EACA8I,EAAAh1F,IAAAg1F,EAAAhJ,UAAAh0D,EACA+9D,EAAA7J,EACA,KAGAz6G,EAAA4jE,UAAAr0E,KAAAm/E,eACA1uE,EAAAqtE,SACAk2C,EAAAv7F,KAAAo8F,EAAA3J,EACA8I,EAAAh1F,IAAAg1F,EAAAhJ,UACA+J,EAAA7J,EACAl0D,IAIAg9D,EAAAhJ,WAAA8J,IAUAG,uBAAA,WACA,IAAAC,EAAAl1H,KAAAm1H,uBACA,OAAAn1H,KAAAsrH,qBAAA4J,EAAAn0H,EAAAm0H,EAAA5/G,EAAA,aASA8/G,oBAAA,WACA,IAAAF,EAAAl1H,KAAAm1H,uBACA,OAAAn1H,KAAAsrH,qBAAA4J,EAAAn0H,EAAAm0H,EAAA5/G,EAAA,SAOA6/G,qBAAA,WACA,IAAAd,EAAAr0H,KAAA+uH,oBAAA/uH,KAAA6xH,gBAAA,GACA/6C,EAAAu9C,EAAAv9C,UAAA,EAAAu9C,EAAAv9C,UAAA,EAAA,EACA,OAAA/1E,EAAAszH,EAAA7K,UAAAl0G,EAAAwhE,MAWA1kC,EAAAogF,MAAA51E,WAAA,SAAA1hD,EAAA+F,GAEA,GADAsxH,EAAAr3H,GACAA,EAAAw1C,OACA,IAAA,IAAAj3C,KAAAyB,EAAAw1C,OACA,IAAA,IAAArtC,KAAAnI,EAAAw1C,OAAAj3C,GACA84H,EAAAr3H,EAAAw1C,OAAAj3C,GAAA4J,IAIA+uC,EAAAt2C,OAAA2gG,YAAA,QAAAvhG,EAAA+F,EAAA,SAzfA,GAggBAP,EAAA0xC,EAAAlkB,KAAAhzB,OAAAwF,MAEA0xC,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAogF,MAAAx2H,WAKAq3H,aAAA,WACArzH,KAAAq1H,mBACAr1H,KAAAs1H,qBACAt1H,KAAAu1H,8BACAv1H,KAAAw1H,4BACAx1H,KAAAy1H,iBAAAz1H,KAAAy1H,iBAAAzpH,KAAAhM,OAGA+qF,WAAA,WACA/qF,KAAA8oF,WAAA9oF,KAAA4yF,cACA5yF,KAAAqnB,UAAA,GAMAguG,iBAAA,WACA,IAAA5tE,EAAAznD,KACAA,KAAAwR,GAAA,QAAA,WACA,IAAA6hC,EAAAoU,EAAApU,OACAA,IACAA,EAAAi/B,oBACAj/B,EAAAi/B,mBAAA,EACA7qB,EAAAiuE,oBAAAriF,IAEAA,EAAAm/B,gBAAAn/B,EAAAm/B,oBACAn/B,EAAAm/B,gBAAAxzE,KAAAyoD,OAKA6tE,mBAAA,WACA,IAAA7tE,EAAAznD,KACAA,KAAAwR,GAAA,UAAA,WACA,IAAA6hC,EAAAoU,EAAApU,OACAA,IACAA,EAAAm/B,gBAAAn/B,EAAAm/B,oBACApgC,EAAAlkB,KAAAqrB,gBAAAlG,EAAAm/B,gBAAA/qB,GACA,IAAApU,EAAAm/B,gBAAAj5E,SACA85C,EAAAi/B,mBAAA,EACA7qB,EAAAkuE,sBAAAtiF,QAUAqiF,oBAAA,SAAAriF,GACAA,EAAAk/B,qBAAA,WACAl/B,EAAAm/B,iBACAn/B,EAAAm/B,gBAAAr4E,QAAA,SAAAL,GACAA,EAAA06H,eAAA,KAIAnhF,EAAA7hC,GAAA,WAAA6hC,EAAAk/B,uBAOAojD,sBAAA,SAAAtiF,GACAA,EAAAvgC,IAAA,WAAAugC,EAAAk/B,uBAMAqjD,MAAA,WACA51H,KAAA61H,kBAAA71H,KAAA81H,eAAA91H,KAAA,EAAAA,KAAA6yH,eAAA,oBAMAiD,eAAA,SAAAh8H,EAAAi8H,EAAAhtF,EAAAitF,GAEA,IAAAC,EA0BA,OAxBAA,GACAC,WAAA,EACA/hG,MAAA,WACAn0B,KAAAk2H,WAAA,IAIAp8H,EAAA+uC,QAAA,wBAAAktF,GACAhtF,SAAAA,EACA2iB,WAAA,WACAuqE,EAAAC,WACAp8H,EAAAk8H,MAGAjpE,SAAA,WAEAjzD,EAAAu5C,QAAAv5C,EAAA+3H,iBAAA/3H,EAAAo4H,cACAp4H,EAAA+5H,2BAGA1/F,MAAA,WACA,OAAA8hG,EAAAC,aAGAD,GAMAE,gBAAA,WAEA,IAAA1uE,EAAAznD,KAEAA,KAAAo2H,iBACAhqH,aAAApM,KAAAo2H,iBAEAp2H,KAAAo2H,gBAAA/pH,WAAA,WACAo7C,EAAA4uE,0BAAA5uE,EAAAquE,eAAAruE,EAAA,EAAAznD,KAAA6yH,eAAA,EAAA,UACA,MAMAc,kBAAA,SAAA2C,GACA,IAAA7uE,EAAAznD,KACAipC,EAAAqtF,EAAA,EAAAt2H,KAAA4yH,YAEA5yH,KAAAu2H,uBACAv2H,KAAAgzH,sBAAA,EACAhzH,KAAAw2H,gBAAAnqH,WAAA,WACAo7C,EAAAmuE,SACA3sF,IAMAstF,qBAAA,WACA,IAAAlH,EAAArvH,KAAA61H,mBAAA71H,KAAAq2H,0BACAhjF,EAAArzC,KAAAqzC,OACArzC,KAAA61H,mBAAA71H,KAAA61H,kBAAA1hG,QACAn0B,KAAAq2H,2BAAAr2H,KAAAq2H,0BAAAliG,QAEA/nB,aAAApM,KAAAo2H,iBACAhqH,aAAApM,KAAAw2H,iBAEAx2H,KAAAgzH,sBAAA,EAGA3D,GAAAh8E,GACAA,EAAA++B,aAAA/+B,EAAAu8B,YAAAv8B,EAAAq8B,mBAUA+mD,UAAA,WAKA,OAJAz2H,KAAA6xH,eAAA,EACA7xH,KAAAkyH,aAAAlyH,KAAAwoH,MAAAjvH,OACAyG,KAAAyzH,wBACAzzH,KAAA0zH,kBACA1zH,MAOA02H,gBAAA,WACA,OAAA12H,KAAAwoH,MAAAvqH,MAAA+B,KAAA6xH,eAAA7xH,KAAAkyH,cAAA/kH,KAAA,KAQAwpH,qBAAA,SAAAC,GACA,IAAA9yH,EAAA,EAAAhD,EAAA81H,EAAA,EAGA,GAAA52H,KAAA+yH,SAAA/0H,KAAAgC,KAAAwoH,MAAA1nH,IACA,KAAAd,KAAA+yH,SAAA/0H,KAAAgC,KAAAwoH,MAAA1nH,KACAgD,IACAhD,IAGA,KAAA,KAAA9C,KAAAgC,KAAAwoH,MAAA1nH,KAAAA,GAAA,GACAgD,IACAhD,IAGA,OAAA81H,EAAA9yH,GAQA+yH,sBAAA,SAAAD,GACA,IAAA9yH,EAAA,EAAAhD,EAAA81H,EAGA,GAAA52H,KAAA+yH,SAAA/0H,KAAAgC,KAAAwoH,MAAA1nH,IACA,KAAAd,KAAA+yH,SAAA/0H,KAAAgC,KAAAwoH,MAAA1nH,KACAgD,IACAhD,IAGA,KAAA,KAAA9C,KAAAgC,KAAAwoH,MAAA1nH,KAAAA,EAAAd,KAAAwoH,MAAAjvH,QACAuK,IACAhD,IAGA,OAAA81H,EAAA9yH,GAQAgzH,qBAAA,SAAAF,GAGA,IAFA,IAAA9yH,EAAA,EAAAhD,EAAA81H,EAAA,GAEA,KAAA54H,KAAAgC,KAAAwoH,MAAA1nH,KAAAA,GAAA,GACAgD,IACAhD,IAGA,OAAA81H,EAAA9yH,GAQAizH,sBAAA,SAAAH,GAGA,IAFA,IAAA9yH,EAAA,EAAAhD,EAAA81H,GAEA,KAAA54H,KAAAgC,KAAAwoH,MAAA1nH,KAAAA,EAAAd,KAAAwoH,MAAAjvH,QACAuK,IACAhD,IAGA,OAAA81H,EAAA9yH,GASAkzH,mBAAA,SAAAnF,EAAAoF,GAOA,IANA,IAAAnqH,EAAA9M,KAAAwoH,MACA1nH,EAAAd,KAAA+yH,SAAA/0H,KAAA8O,EAAA+kH,IAAAA,EAAA,EAAAA,EACAh7C,EAAA/pE,EAAAhM,GAEAs0C,EAAAhD,EAAAgD,WAEAA,EAAAp3C,KAAA64E,IAAA/1E,EAAA,GAAAA,EAAAgM,EAAAvT,QAEAs9E,EAAA/pE,EADAhM,GAAAm2H,GAMA,OAHA7hF,EAAAp3C,KAAA64E,KACA/1E,GAAA,IAAAm2H,EAAA,EAAA,GAEAn2H,GAOAo2H,WAAA,SAAArF,GACAA,EAAAA,GAAA7xH,KAAA6xH,eACA,IAAAsF,EAAAn3H,KAAAg3H,mBAAAnF,GAAA,GACAuF,EAAAp3H,KAAAg3H,mBAAAnF,EAAA,GAEA7xH,KAAA6xH,eAAAsF,EACAn3H,KAAAkyH,aAAAkF,EACAp3H,KAAAyzH,wBACAzzH,KAAA0zH,kBACA1zH,KAAA6zH,2BASAwD,WAAA,SAAAxF,GACAA,EAAAA,GAAA7xH,KAAA6xH,eACA,IAAAsF,EAAAn3H,KAAA82H,qBAAAjF,GACAuF,EAAAp3H,KAAA+2H,sBAAAlF,GAMA,OAJA7xH,KAAA6xH,eAAAsF,EACAn3H,KAAAkyH,aAAAkF,EACAp3H,KAAAyzH,wBACAzzH,KAAA0zH,kBACA1zH,MAQAs3H,aAAA,SAAAhqH,GACA,IAAAtN,KAAA8oF,WAAA9oF,KAAAyyH,SAsBA,OAlBAzyH,KAAAqzC,SACArzC,KAAAqzC,OAAA+7B,aACApvE,KAAAu3H,oBAAAv3H,KAAAqzC,SAGArzC,KAAA8oF,WAAA,EAEA9oF,KAAAw3H,mBAAAlqH,GACAtN,KAAAkuF,eAAAvnE,QACA3mB,KAAAkuF,eAAAzzF,MAAAuF,KAAA8M,KACA9M,KAAA0zH,kBACA1zH,KAAAy3H,oBACAz3H,KAAA03H,mBACA13H,KAAA23H,gBAAA33H,KAAA8M,KAEA9M,KAAA41H,QACA51H,KAAAo3C,KAAA,mBACAp3C,KAAAyzH,wBACAzzH,KAAAqzC,QAGArzC,KAAAqzC,OAAA+D,KAAA,wBAAAj4C,OAAAa,OACAA,KAAA43H,uBACA53H,KAAAqzC,OAAAqE,mBACA13C,MALAA,MAQAu3H,oBAAA,SAAAlkF,GACAA,EAAAm/B,iBACAn/B,EAAAm/B,gBAAAr4E,QAAA,SAAAL,GACAA,EAAAutB,UAAA,EACAvtB,EAAAgvF,WACAhvF,EAAA84F,iBASAglC,qBAAA,WACA53H,KAAAqzC,OAAA7hC,GAAA,aAAAxR,KAAAy1H,mBAMAA,iBAAA,SAAAvwH,GACA,GAAAlF,KAAAw0H,eAAAx0H,KAAA8oF,UAAA,CAIA,IAAAquC,EAAAn3H,KAAA63H,6BAAA3yH,EAAAoI,GACAwqH,EAAA93H,KAAA6xH,eACAkG,EAAA/3H,KAAAkyH,cAEAiF,IAAAn3H,KAAAg4H,6BAAAF,IAAAC,GAEAD,IAAAX,GAAAY,IAAAZ,KAIAA,EAAAn3H,KAAAg4H,6BACAh4H,KAAA6xH,eAAA7xH,KAAAg4H,4BACAh4H,KAAAkyH,aAAAiF,IAGAn3H,KAAA6xH,eAAAsF,EACAn3H,KAAAkyH,aAAAlyH,KAAAg4H,6BAEAh4H,KAAA6xH,iBAAAiG,GAAA93H,KAAAkyH,eAAA6F,IACA/3H,KAAAi4H,wBACAj4H,KAAAyzH,wBACAzzH,KAAA0zH,kBACA1zH,KAAA6zH,8BAOA6D,iBAAA,WACA13H,KAAAw/E,YAAA,OAEAx/E,KAAAqzC,SACArzC,KAAAqzC,OAAAqsC,cAAA1/E,KAAAqzC,OAAAosC,WAAA,QAGAz/E,KAAAw1F,YAAAx1F,KAAA0yH,mBACA1yH,KAAAk2F,YAAAl2F,KAAAkjF,YAAA,EACAljF,KAAAo2F,cAAAp2F,KAAAq2F,eAAA,GAMA6hC,8BAAA,SAAAtvH,EAAAsU,EAAApQ,GACA,IAAAqrH,EAAArrH,EAAA7O,MAAA,EAAA2K,GACAwvH,EAAAhmF,EAAAlkB,KAAAzY,OAAAsxC,cAAAoxE,GAAA5+H,OACA,GAAAqP,IAAAsU,EACA,OAAA20G,eAAAuG,EAAAlG,aAAAkG,GAEA,IAAAC,EAAAvrH,EAAA7O,MAAA2K,EAAAsU,GACAo7G,EAAAlmF,EAAAlkB,KAAAzY,OAAAsxC,cAAAsxE,GAAA9+H,OACA,OAAAs4H,eAAAuG,EAAAlG,aAAAkG,EAAAE,IAMAC,8BAAA,SAAA3vH,EAAAsU,EAAAsrG,GACA,IAAA2P,EAAA3P,EAAAvqH,MAAA,EAAA2K,GACAwvH,EAAAD,EAAAhrH,KAAA,IAAA5T,OACA,GAAAqP,IAAAsU,EACA,OAAA20G,eAAAuG,EAAAlG,aAAAkG,GAEA,IAAAC,EAAA7P,EAAAvqH,MAAA2K,EAAAsU,GACAo7G,EAAAD,EAAAlrH,KAAA,IAAA5T,OACA,OAAAs4H,eAAAuG,EAAAlG,aAAAkG,EAAAE,IAMA5E,gBAAA,WAEA,GADA1zH,KAAA4zH,qBACA5zH,KAAAkuF,eAAA,CAGA,IAAAluF,KAAAozH,kBAAA,CACA,IAAAoF,EAAAx4H,KAAAu4H,8BAAAv4H,KAAA6xH,eAAA7xH,KAAAkyH,aAAAlyH,KAAAwoH,OACAxoH,KAAAkuF,eAAA2jC,eAAA2G,EAAA3G,eACA7xH,KAAAkuF,eAAAgkC,aAAAsG,EAAAtG,aAEAlyH,KAAAy4H,2BAMAC,mBAAA,WACA,GAAA14H,KAAAkuF,eAAA,CAGAluF,KAAA4zH,qBACA5zH,KAAA8M,KAAA9M,KAAAkuF,eAAAzzF,MACAuF,KAAAovH,+BACApvH,KAAA8nH,iBACA9nH,KAAA4xE,aAEA,IAAA4mD,EAAAx4H,KAAAk4H,8BACAl4H,KAAAkuF,eAAA2jC,eAAA7xH,KAAAkuF,eAAAgkC,aAAAlyH,KAAAkuF,eAAAzzF,OACAuF,KAAAkyH,aAAAlyH,KAAA6xH,eAAA2G,EAAAtG,aACAlyH,KAAAozH,oBACApzH,KAAA6xH,eAAA2G,EAAA3G,gBAEA7xH,KAAAy4H,2BAMAA,uBAAA,WACA,GAAAz4H,KAAA6xH,iBAAA7xH,KAAAkyH,aAAA,CACA,IAAAv1G,EAAA3c,KAAA24H,wBACA34H,KAAAkuF,eAAAvxE,MAAA8b,KAAA9b,EAAA8b,KACAz4B,KAAAkuF,eAAAvxE,MAAAqiB,IAAAriB,EAAAqiB,MAQA25F,sBAAA,WACA,IAAA34H,KAAAqzC,OACA,OAAA/P,EAAA,EAAAC,EAAA,GAEA,IAAAq1F,EAAA54H,KAAAozH,kBAAApzH,KAAA64H,iBAAA74H,KAAA6xH,eACAmC,EAAAh0H,KAAAi0H,qBAAA2E,GACAtE,EAAAt0H,KAAA+uH,oBAAA6J,GACApP,EAAA8K,EAAA9K,UACA1yC,EAAAw9C,EAAAx9C,UACAy9C,EAAAv0H,KAAAsrH,qBAAA9B,EAAA1yC,EAAA,YAAA92E,KAAAg3D,WACA8zD,EAAAkJ,EAAAlJ,WACA/iF,EAAA/nC,KAAAm7D,sBACAjtD,GACAo1B,EAAA0wF,EAAAv7F,KAAAqyF,EACAvnF,EAAAywF,EAAAh1F,IAAAg1F,EAAAhJ,UAAAuJ,GAEA9qC,EAAAzpF,KAAAqzC,OAAAi8B,mBACAwpD,EAAA94H,KAAAqzC,OAAAs8B,cACAopD,EAAAD,EAAAh4F,MAAA2oD,EACAuvC,EAAAF,EAAA/3F,OAAA0oD,EACA2gC,EAAA2O,EAAAxE,EACA/G,EAAAwL,EAAAzE,EACAn1E,EAAA05E,EAAAn5F,YAAAo5F,EACA15E,EAAAy5E,EAAA93F,aAAAg4F,EAuBA,OArBA9qH,EAAAkkC,EAAAlkB,KAAAosB,eAAApsC,EAAA65B,IACA75B,EAAAkkC,EAAAlkB,KAAAosB,eAAApsC,EAAAlO,KAAAqzC,OAAAg7B,oBACA/qC,GAAA8b,EACAlxC,EAAAq1B,GAAA8b,EACAnxC,EAAAo1B,EAAA,IACAp1B,EAAAo1B,EAAA,GAEAp1B,EAAAo1B,EAAA8mF,IACAl8G,EAAAo1B,EAAA8mF,GAEAl8G,EAAAq1B,EAAA,IACAr1B,EAAAq1B,EAAA,GAEAr1B,EAAAq1B,EAAAiqF,IACAt/G,EAAAq1B,EAAAiqF,GAIAt/G,EAAAo1B,GAAAtjC,KAAAqzC,OAAAw8B,QAAAp3C,KACAvqB,EAAAq1B,GAAAvjC,KAAAqzC,OAAAw8B,QAAA7wC,KAEAvG,KAAAvqB,EAAAo1B,EAAA,KAAAtE,IAAA9wB,EAAAq1B,EAAA,KAAA8X,SAAAk5E,EAAA,KAAAA,WAAAA,IAMAkD,kBAAA,WACAz3H,KAAAi5H,aACA/iC,YAAAl2F,KAAAk2F,YACAV,YAAAx1F,KAAAw1F,YACAY,cAAAp2F,KAAAo2F,cACAC,cAAAr2F,KAAAq2F,cACA7W,YAAAx/E,KAAAw/E,YACA0D,WAAAljF,KAAAkjF,WACAxD,cAAA1/E,KAAAqzC,QAAArzC,KAAAqzC,OAAAqsC,cACAD,WAAAz/E,KAAAqzC,QAAArzC,KAAAqzC,OAAAosC,aAOAy5C,qBAAA,WACAl5H,KAAAi5H,cAIAj5H,KAAAw/E,YAAAx/E,KAAAi5H,YAAAz5C,YACAx/E,KAAAk2F,YAAAl2F,KAAAi5H,YAAA/iC,YACAl2F,KAAAw1F,YAAAx1F,KAAAi5H,YAAAzjC,YACAx1F,KAAAkjF,WAAAljF,KAAAi5H,YAAA/1C,WACAljF,KAAAo2F,cAAAp2F,KAAAi5H,YAAA7iC,cACAp2F,KAAAq2F,cAAAr2F,KAAAi5H,YAAA5iC,cAEAr2F,KAAAqzC,SACArzC,KAAAqzC,OAAAqsC,cAAA1/E,KAAAi5H,YAAAv5C,cACA1/E,KAAAqzC,OAAAosC,WAAAz/E,KAAAi5H,YAAAx5C,cASAmT,YAAA,WACA,IAAAumC,EAAAn5H,KAAA23H,kBAAA33H,KAAA8M,KA0BA,OAzBA9M,KAAAqnB,UAAA,EACArnB,KAAA8oF,WAAA,EAEA9oF,KAAAkyH,aAAAlyH,KAAA6xH,eAEA7xH,KAAAkuF,iBACAluF,KAAAkuF,eAAApuE,MAAA9f,KAAAkuF,eAAApuE,OACA9f,KAAAqzC,QAAArzC,KAAAkuF,eAAArvE,WAAA6B,YAAA1gB,KAAAkuF,gBACAluF,KAAAkuF,eAAA,MAGAluF,KAAAu2H,uBACAv2H,KAAAk5H,uBACAl5H,KAAAgzH,sBAAA,EACAhzH,KAAAovH,+BACApvH,KAAA8nH,iBACA9nH,KAAA4xE,aAEA5xE,KAAAo3C,KAAA,kBACA+hF,GAAAn5H,KAAAo3C,KAAA,YACAp3C,KAAAqzC,SACArzC,KAAAqzC,OAAAvgC,IAAA,aAAA9S,KAAAy1H,kBACAz1H,KAAAqzC,OAAA+D,KAAA,uBAAAj4C,OAAAa,OACAm5H,GAAAn5H,KAAAqzC,OAAA+D,KAAA,mBAAAj4C,OAAAa,QAEAA,MAMAo5H,wBAAA,WACA,IAAA,IAAA12H,KAAA1C,KAAA0wC,OACA1wC,KAAAooH,WAAA1lH,WACA1C,KAAA0wC,OAAAhuC,IAUA22H,kBAAA,SAAAzwH,EAAAsU,GACA,IAMAzjB,EAAA6/H,EANAC,EAAAv5H,KAAA+uH,oBAAAnmH,GAAA,GACA4wH,EAAAx5H,KAAA+uH,oBAAA7xG,GAAA,GACAu8G,EAAAF,EAAA/P,UACAkQ,EAAAH,EAAAziD,UACA6iD,EAAAH,EAAAhQ,UACAoQ,EAAAJ,EAAA1iD,UAEA,GAAA2iD,IAAAE,EAAA,CAEA,GAAA35H,KAAA0wC,OAAA+oF,GACA,IAAAhgI,EAAAigI,EAAAjgI,EAAAuG,KAAAsoH,oBAAAmR,GAAAlgI,OAAAE,WACAuG,KAAA0wC,OAAA+oF,GAAAhgI,GAIA,GAAAuG,KAAA0wC,OAAAipF,GACA,IAAAlgI,EAAAmgI,EAAAngI,EAAAuG,KAAAsoH,oBAAAqR,GAAApgI,OAAAE,KACA6/H,EAAAt5H,KAAA0wC,OAAAipF,GAAAlgI,MAEAuG,KAAA0wC,OAAA+oF,KAAAz5H,KAAA0wC,OAAA+oF,OACAz5H,KAAA0wC,OAAA+oF,GAAAC,EAAAjgI,EAAAmgI,GAAAN,GAKA,IAAA7/H,EAAAggI,EAAA,EAAAhgI,GAAAkgI,EAAAlgI,WACAuG,KAAA0wC,OAAAj3C,GAGAuG,KAAA65H,gBAAAF,EAAAF,EAAAE,QAIA,GAAA35H,KAAA0wC,OAAA+oF,GAAA,CACAH,EAAAt5H,KAAA0wC,OAAA+oF,GACA,IAAAK,EAAAjjD,EAAAx9D,EAAAugH,EAAAF,EACA,IAAAjgI,EAAAigI,EAAAjgI,EAAAmgI,EAAAngI,WACA6/H,EAAA7/H,GAEA,IAAAo9E,KAAA72E,KAAA0wC,OAAA+oF,IACAK,EAAAt8H,SAAAq5E,EAAA,MACA+iD,IACAN,EAAAQ,EAAAzgH,GAAAigH,EAAAziD,UACAyiD,EAAAziD,MAYAgjD,gBAAA,SAAArQ,EAAA1lH,GAGA,IAAAi2H,EAAAr5H,EAAAV,KAAA0wC,QACA,IAAA,IAAAh7B,KAAA1V,KAAA0wC,OAAA,CACA,IAAAspF,EAAAx8H,SAAAkY,EAAA,IACAskH,EAAAxQ,IACAxpH,KAAA0wC,OAAAspF,EAAAl2H,GAAAi2H,EAAAC,GACAD,EAAAC,EAAAl2H,WACA9D,KAAA0wC,OAAAspF,MAMA/B,sBAAA,WACAj4H,KAAA61H,oBAAA71H,KAAA61H,kBAAAK,WACAl2H,KAAAq2H,4BAAAr2H,KAAAq2H,0BAAAH,WAEAl2H,KAAA2zH,qBAWAsG,yBAAA,SAAAzQ,EAAA1yC,EAAAojD,EAAAC,GACA,IAAAC,EACAC,KACAC,GAAA,EAUA,IAAA,IAAAx5H,KARAo5H,IAAAA,EAAA,GACAl6H,KAAA65H,gBAAArQ,EAAA0Q,GACAl6H,KAAA0wC,OAAA84E,KACA4Q,EAAAp6H,KAAA0wC,OAAA84E,GAAA,IAAA1yC,EAAAA,EAAAA,EAAA,IAKA92E,KAAA0wC,OAAA84E,GAAA,CACA,IAAA+Q,EAAA/8H,SAAAsD,EAAA,IACAy5H,GAAAzjD,IACAwjD,GAAA,EACAD,EAAAE,EAAAzjD,GAAA92E,KAAA0wC,OAAA84E,GAAA1oH,UAEAd,KAAA0wC,OAAA84E,GAAA1oH,IAWA,IARAw5H,EACAt6H,KAAA0wC,OAAA84E,EAAA0Q,GAAAG,SAGAr6H,KAAA0wC,OAAA84E,EAAA0Q,GAIAA,EAAA,GACAA,IACAC,GAAAA,EAAAD,GACAl6H,KAAA0wC,OAAA84E,EAAA0Q,IAAA51C,EAAA5jF,EAAAy5H,EAAAD,KAEAE,EACAp6H,KAAA0wC,OAAA84E,EAAA0Q,IAAA51C,EAAA5jF,EAAA05H,WAGAp6H,KAAA0wC,OAAA84E,EAAA0Q,GAGAl6H,KAAAsvH,kBAAA,GAUAkL,sBAAA,SAAAhR,EAAA1yC,EAAA2jD,EAAAN,GACAn6H,KAAA0wC,SACA1wC,KAAA0wC,WAEA,IAAAgqF,EAAA16H,KAAA0wC,OAAA84E,GACAmR,EAAAD,EAAAh6H,EAAAg6H,MAKA,IAAA,IAAA55H,KAHA25H,IAAAA,EAAA,GAGAE,EAAA,CACA,IAAAC,EAAAp9H,SAAAsD,EAAA,IACA85H,GAAA9jD,IACA4jD,EAAAE,EAAAH,GAAAE,EAAAC,GAEAD,EAAAC,EAAAH,WACAC,EAAAE,IAKA,GADA56H,KAAAsvH,kBAAA,EACA6K,EACA,KAAAM,KACA3+H,OAAAgD,KAAAq7H,EAAAM,IAAAlhI,SAGAyG,KAAA0wC,OAAA84E,KACAxpH,KAAA0wC,OAAA84E,OAEAxpH,KAAA0wC,OAAA84E,GAAA1yC,EAAA2jD,GAAA/5H,EAAAy5H,EAAAM,UAIA,GAAAC,EAIA,IADA,IAAAG,EAAAH,EAAA5jD,EAAAA,EAAA,EAAA,GACA+jD,GAAAJ,KACAz6H,KAAA0wC,OAAA84E,GAAA1yC,EAAA2jD,GAAA/5H,EAAAm6H,IAUAC,oBAAA,SAAAC,EAAAnyH,EAAAuxH,GAGA,IAFA,IAAAa,EAAAh7H,KAAA+uH,oBAAAnmH,GAAA,GACAqyH,GAAA,GAAAC,EAAA,EACAzhI,EAAA,EAAAA,EAAAshI,EAAAxhI,OAAAE,IACA,OAAAshI,EAAAthI,GAEAwhI,IADAC,GACA,EAGAD,EAAAC,KAGAD,EAAA,GAAA,IACAj7H,KAAAw6H,sBAAAQ,EAAAxR,UAAAwR,EAAAlkD,UAAAmkD,EAAA,GAAAd,GACAA,EAAAA,GAAAA,EAAAl8H,MAAAg9H,EAAA,GAAA,IAEAC,GAAAl7H,KAAAi6H,yBACAe,EAAAxR,UAAAwR,EAAAlkD,UAAAmkD,EAAA,GAAAC,GACA,IAAA,IAAAzhI,EAAA,EAAAA,EAAAyhI,EAAAzhI,IACAwhI,EAAAxhI,GAAA,EACAuG,KAAAw6H,sBAAAQ,EAAAxR,UAAA/vH,EAAA,EAAAwhI,EAAAxhI,GAAA0gI,GAEAA,IACAn6H,KAAA0wC,OAAAsqF,EAAAxR,UAAA/vH,GAAA,GAAA0gI,EAAA,IAEAA,EAAAA,GAAAA,EAAAl8H,MAAAg9H,EAAAxhI,GAAA,GAGAwhI,EAAAxhI,GAAA,GACAuG,KAAAw6H,sBAAAQ,EAAAxR,UAAA/vH,EAAA,EAAAwhI,EAAAxhI,GAAA0gI,IAQAgB,8BAAA,SAAAvyH,EAAAsU,EAAAs7G,GACAA,GAAA5vH,GACAsU,IAAAtU,EACA5I,KAAAizH,oBAAA,OAEA,UAAAjzH,KAAAizH,sBACAjzH,KAAAizH,oBAAA,OACAjzH,KAAAkyH,aAAAtpH,GAEA5I,KAAA6xH,eAAA2G,GAEAA,EAAA5vH,GAAA4vH,EAAAt7G,EACA,UAAAld,KAAAizH,oBACAjzH,KAAAkyH,aAAAsG,EAGAx4H,KAAA6xH,eAAA2G,GAKAt7G,IAAAtU,EACA5I,KAAAizH,oBAAA,QAEA,SAAAjzH,KAAAizH,sBACAjzH,KAAAizH,oBAAA,QACAjzH,KAAA6xH,eAAA30G,GAEAld,KAAAkyH,aAAAsG,IAIA4C,yBAAA,WACA,IAAA7hI,EAAAyG,KAAA8M,KAAAvT,OACAyG,KAAA6xH,eAAAt4H,EACAyG,KAAA6xH,eAAAt4H,EAEAyG,KAAA6xH,eAAA,IACA7xH,KAAA6xH,eAAA,GAEA7xH,KAAAkyH,aAAA34H,EACAyG,KAAAkyH,aAAA34H,EAEAyG,KAAAkyH,aAAA,IACAlyH,KAAAkyH,aAAA,MAOA9/E,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAogF,MAAAx2H,WAIAw5H,0BAAA,WAGAx1H,KAAAq7H,iBAAA,IAAAxuE,KAGA7sD,KAAAs7H,qBAAA,IAAAzuE,KAEA7sD,KAAAu7H,iBAEAv7H,KAAAwR,GAAA,YAAAxR,KAAAo6E,cAOAA,YAAA,SAAAl1E,GACA,GAAAlF,KAAAqzC,OAAA,CAGArzC,KAAAw7H,gBAAA,IAAA3uE,KACA,IAAA4uE,EAAAv2H,EAAAm1E,QACAr6E,KAAA07H,cAAAD,KACAz7H,KAAAo3C,KAAA,cAAAlyC,GACAlF,KAAA27H,WAAAz2H,EAAAoI,IAEAtN,KAAAs7H,oBAAAt7H,KAAAq7H,gBACAr7H,KAAAq7H,gBAAAr7H,KAAAw7H,eACAx7H,KAAAu7H,cAAAE,EACAz7H,KAAA47H,gBAAA57H,KAAA8oF,UACA9oF,KAAA67H,eAAA77H,KAAAqnB,WAGAq0G,cAAA,SAAAD,GACA,OAAAz7H,KAAAw7H,eAAAx7H,KAAAq7H,gBAAA,KACAr7H,KAAAq7H,gBAAAr7H,KAAAs7H,oBAAA,KACAt7H,KAAAu7H,cAAAj4F,IAAAm4F,EAAAn4F,GACAtjC,KAAAu7H,cAAAh4F,IAAAk4F,EAAAl4F,GAMAo4F,WAAA,SAAAruH,GACAA,EAAAgkB,gBAAAhkB,EAAAgkB,iBACAhkB,EAAAslB,iBAAAtlB,EAAAslB,mBAMA2iG,4BAAA,WACAv1H,KAAA87H,uBACA97H,KAAA+7H,qBACA/7H,KAAAg8H,cAMAC,mBAAA,SAAA/2H,GACAlF,KAAA8oF,WAGA9oF,KAAAk3H,WAAAl3H,KAAA63H,6BAAA3yH,EAAAoI,KAMA4uH,mBAAA,SAAAh3H,GACAlF,KAAA8oF,WAGA9oF,KAAAq3H,WAAAr3H,KAAA63H,6BAAA3yH,EAAAoI,KAMA0uH,WAAA,WACAh8H,KAAAwR,GAAA,gBAAAxR,KAAAi8H,oBACAj8H,KAAAwR,GAAA,cAAAxR,KAAAk8H,qBASAC,kBAAA,SAAAj3H,IACAlF,KAAAqzC,SAAArzC,KAAAyyH,UAAAvtH,EAAAoI,EAAAgZ,QAAA,IAAAphB,EAAAoI,EAAAgZ,SAIAtmB,KAAAw0H,eAAA,EAEAx0H,KAAAqnB,UACArnB,KAAAo8H,iBAAAl3H,EAAAoI,GAGAtN,KAAA8oF,YACA9oF,KAAAg4H,4BAAAh4H,KAAA6xH,eACA7xH,KAAA6xH,iBAAA7xH,KAAAkyH,cACAlyH,KAAAu2H,uBAEAv2H,KAAA6zH,6BASAwI,wBAAA,SAAAn3H,IACAlF,KAAAqzC,SAAArzC,KAAAyyH,UAAAvtH,EAAAoI,EAAAgZ,QAAA,IAAAphB,EAAAoI,EAAAgZ,SAKAtmB,KAAAqnB,SAAArnB,OAAAA,KAAAqzC,OAAAq+B,gBAMAoqD,qBAAA,WACA97H,KAAAwR,GAAA,YAAAxR,KAAAm8H,mBACAn8H,KAAAwR,GAAA,mBAAAxR,KAAAq8H,0BAMAN,mBAAA,WACA/7H,KAAAwR,GAAA,UAAAxR,KAAAs8H,iBAOAA,eAAA,SAAAp3H,GAEA,GADAlF,KAAAw0H,eAAA,KACAx0H,KAAAyyH,UAAAzyH,KAAA2xE,OACAzsE,EAAA8R,WAAA9R,EAAA8R,UAAAy4E,iBACAvqF,EAAAoI,EAAAgZ,QAAA,IAAAphB,EAAAoI,EAAAgZ,QAFA,CAMA,GAAAtmB,KAAAqzC,OAAA,CACA,IAAAkpF,EAAAv8H,KAAAqzC,OAAAq+B,cACA,GAAA6qD,GAAAA,IAAAv8H,KAIA,OAIAA,KAAA67H,iBAAA77H,KAAA6vF,UACA7vF,KAAAqnB,UAAA,EACArnB,KAAA67H,gBAAA,EACA77H,KAAAs3H,aAAApyH,EAAAoI,GACAtN,KAAA6xH,iBAAA7xH,KAAAkyH,aACAlyH,KAAA2zH,mBAAA,GAGA3zH,KAAA6zH,2BAIA7zH,KAAAqnB,UAAA,IAQA+0G,iBAAA,SAAA9uH,GACA,IAAAkrH,EAAAx4H,KAAA63H,6BAAAvqH,GACA1E,EAAA5I,KAAA6xH,eAAA30G,EAAAld,KAAAkyH,aACA5kH,EAAAusB,SACA75B,KAAAm7H,8BAAAvyH,EAAAsU,EAAAs7G,IAGAx4H,KAAA6xH,eAAA2G,EACAx4H,KAAAkyH,aAAAsG,GAEAx4H,KAAA8oF,YACA9oF,KAAAyzH,wBACAzzH,KAAA0zH,oBASAmE,6BAAA,SAAAvqH,GAUA,IATA,IAMAm9G,EANA+R,EAAAx8H,KAAAg+F,gBAAA1wF,GACAmvH,EAAA,EACA37F,EAAA,EACAC,EAAA,EACA+1C,EAAA,EACA0yC,EAAA,EAIA/vH,EAAA,EAAAyY,EAAAlS,KAAAooH,WAAA7uH,OAAAE,EAAAyY,GACA6uB,GAAAy7F,EAAAj5F,EADA9pC,IAEAsnC,GAAA/gC,KAAAorH,gBAAA3xH,GAAAuG,KAAAq/C,OACAmqE,EAAA/vH,EACAA,EAAA,IACAq9E,GAAA92E,KAAAooH,WAAA3uH,EAAA,GAAAF,OAAAyG,KAAAypH,qBAAAhwH,EAAA,IAOAgxH,EAAAzqH,KAAAqrH,mBAAA7B,GACA1oF,EAAA2pF,EAAAzqH,KAAAo/C,OAEA,IAAA,IAAA/7C,EAAA,EAAAqiD,EADA1lD,KAAAooH,WAAAoB,GACAjwH,OAAA8J,EAAAqiD,IACA+2E,EAAA37F,GAEAA,GAAA9gC,KAAA0nH,aAAA8B,GAAAnmH,GAAAkmH,YAAAvpH,KAAAo/C,SACAo9E,EAAAl5F,GAJAjgC,IAKAyzE,IAMA,OAAA92E,KAAA08H,gCAAAF,EAAAC,EAAA37F,EAAAg2C,EAAApxB,IAMAg3E,gCAAA,SAAAF,EAAAC,EAAA37F,EAAAhgC,EAAA4kD,GAEA,IAAAi3E,EAAAH,EAAAl5F,EAAAm5F,EACAG,EAAA97F,EAAA07F,EAAAl5F,EACAx/B,EAAA84H,EAAAD,GACAC,EAAA,EAAA,EAAA,EACAzF,EAAAr2H,EAAAgD,EAUA,OARA9D,KAAA8/C,QACAq3E,EAAAzxE,EAAAyxE,GAGAA,EAAAn3H,KAAAwoH,MAAAjvH,SACA49H,EAAAn3H,KAAAwoH,MAAAjvH,QAGA49H,KAKA/kF,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAogF,MAAAx2H,WAKAw7H,mBAAA,WACAx3H,KAAAkuF,eAAA97C,EAAAl+B,SAAA0H,cAAA,YACA5b,KAAAkuF,eAAAjvE,aAAA,iBAAA,OACAjf,KAAAkuF,eAAAjvE,aAAA,cAAA,OACAjf,KAAAkuF,eAAAjvE,aAAA,eAAA,OACAjf,KAAAkuF,eAAAjvE,aAAA,aAAA,SACAjf,KAAAkuF,eAAAjvE,aAAA,6BAAA,IACAjf,KAAAkuF,eAAAjvE,aAAA,OAAA,OACA,IAAAtC,EAAA3c,KAAA24H,wBAGA34H,KAAAkuF,eAAAvxE,MAAAyf,QAAA,4BAAAzf,EAAAqiB,IACA,WAAAriB,EAAA8b,KAAA,sFACA9b,EAAA0+B,SAAA,IACAjJ,EAAAl+B,SAAAyB,KAAAmJ,YAAA9e,KAAAkuF,gBAEA97C,EAAAlkB,KAAA65B,YAAA/nD,KAAAkuF,eAAA,UAAAluF,KAAA68H,UAAA7wH,KAAAhM,OACAoyC,EAAAlkB,KAAA65B,YAAA/nD,KAAAkuF,eAAA,QAAAluF,KAAA88H,QAAA9wH,KAAAhM,OACAoyC,EAAAlkB,KAAA65B,YAAA/nD,KAAAkuF,eAAA,QAAAluF,KAAA+8H,QAAA/wH,KAAAhM,OACAoyC,EAAAlkB,KAAA65B,YAAA/nD,KAAAkuF,eAAA,OAAAluF,KAAAa,KAAAmL,KAAAhM,OACAoyC,EAAAlkB,KAAA65B,YAAA/nD,KAAAkuF,eAAA,MAAAluF,KAAAa,KAAAmL,KAAAhM,OACAoyC,EAAAlkB,KAAA65B,YAAA/nD,KAAAkuF,eAAA,QAAAluF,KAAA0zB,MAAA1nB,KAAAhM,OACAoyC,EAAAlkB,KAAA65B,YAAA/nD,KAAAkuF,eAAA,mBAAAluF,KAAAg9H,mBAAAhxH,KAAAhM,OACAoyC,EAAAlkB,KAAA65B,YAAA/nD,KAAAkuF,eAAA,oBAAAluF,KAAAi9H,oBAAAjxH,KAAAhM,OACAoyC,EAAAlkB,KAAA65B,YAAA/nD,KAAAkuF,eAAA,iBAAAluF,KAAAk9H,iBAAAlxH,KAAAhM,QAEAA,KAAAm9H,0BAAAn9H,KAAAqzC,SACAjB,EAAAlkB,KAAA65B,YAAA/nD,KAAAqzC,OAAAs8B,cAAA,QAAA3vE,KAAAo9H,QAAApxH,KAAAhM,OACAA,KAAAm9H,0BAAA,IAeAE,SACAC,EAAA,cACAC,GAAA,cACAC,GAAA,eACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,iBACAC,GAAA,iBACAC,GAAA,eACAC,GAAA,kBACAC,GAAA,kBAMAC,eACAC,GAAA,OACAC,GAAA,OAMAC,iBACAC,GAAA,aAGAhB,QAAA,WAEAp9H,KAAAkuF,gBAAAluF,KAAAkuF,eAAAvnE,SAOAk2G,UAAA,SAAAvvH,GACA,GAAAtN,KAAA8oF,YAAA9oF,KAAAozH,kBAAA,CAGA,GAAA9lH,EAAAwsB,WAAA95B,KAAAq9H,QACAr9H,KAAAA,KAAAq9H,QAAA/vH,EAAAwsB,UAAAxsB,OAEA,CAAA,KAAAA,EAAAwsB,WAAA95B,KAAAm+H,kBAAA7wH,EAAAmsB,SAAAnsB,EAAAksB,UAIA,OAHAx5B,KAAAA,KAAAm+H,gBAAA7wH,EAAAwsB,UAAAxsB,GAKAA,EAAAqlB,2BACArlB,EAAAgkB,iBACAhkB,EAAAwsB,SAAA,IAAAxsB,EAAAwsB,SAAA,IAEA95B,KAAAurF,kBACAvrF,KAAA6zH,2BAGA7zH,KAAAqzC,QAAArzC,KAAAqzC,OAAAqE,qBAUAolF,QAAA,SAAAxvH,IACAtN,KAAA8oF,WAAA9oF,KAAAq+H,WAAAr+H,KAAAozH,kBACApzH,KAAAq+H,WAAA,EAGA/wH,EAAAwsB,WAAA95B,KAAAg+H,gBAAA1wH,EAAAmsB,SAAAnsB,EAAAksB,WACAx5B,KAAAA,KAAAg+H,cAAA1wH,EAAAwsB,UAAAxsB,GAKAA,EAAAqlB,2BACArlB,EAAAgkB,iBACAtxB,KAAAqzC,QAAArzC,KAAAqzC,OAAAqE,qBAOAqlF,QAAA,SAAAzvH,GACA,IAAAgxH,EAAAt+H,KAAAs+H,UAGA,GAFAt+H,KAAAs+H,WAAA,EACAhxH,GAAAA,EAAAslB,kBACA5yB,KAAA8oF,UAAA,CAIA,IAGAy1C,EAAAxD,EAHAyD,EAAAx+H,KAAAkoH,oBAAAloH,KAAAkuF,eAAAzzF,OAAAguH,aACAgW,EAAAz+H,KAAAwoH,MAAAjvH,OACAmlI,EAAAF,EAAAjlI,OAEAolI,EAAAD,EAAAD,EACA,GAAA,KAAAz+H,KAAAkuF,eAAAzzF,MAQA,OAPAuF,KAAA0wC,UACA1wC,KAAA04H,qBACA14H,KAAAo3C,KAAA,gBACAp3C,KAAAqzC,SACArzC,KAAAqzC,OAAA+D,KAAA,gBAAAj4C,OAAAa,OACAA,KAAAqzC,OAAAqE,qBAKA,IAAAknF,EAAA5+H,KAAAk4H,8BACAl4H,KAAAkuF,eAAA2jC,eACA7xH,KAAAkuF,eAAAgkC,aACAlyH,KAAAkuF,eAAAzzF,OAEAokI,EAAA7+H,KAAA6xH,eAAA+M,EAAA/M,eAEA7xH,KAAA6xH,iBAAA7xH,KAAAkyH,cACAqM,EAAAv+H,KAAAwoH,MAAAvqH,MAAA+B,KAAA6xH,eAAA7xH,KAAAkyH,cACAyM,GAAA3+H,KAAAkyH,aAAAlyH,KAAA6xH,gBAEA6M,EAAAD,IAEAF,EADAM,EACA7+H,KAAAwoH,MAAAvqH,MAAA+B,KAAAkyH,aAAAyM,EAAA3+H,KAAAkyH,cAGAlyH,KAAAwoH,MAAAvqH,MAAA+B,KAAA6xH,eAAA7xH,KAAA6xH,eAAA8M,IAGA5D,EAAAyD,EAAAvgI,MAAA2gI,EAAA1M,aAAAyM,EAAAC,EAAA1M,cACAqM,GAAAA,EAAAhlI,SACAyG,KAAA6xH,iBAAA7xH,KAAAkyH,aACAlyH,KAAAq5H,kBAAAr5H,KAAA6xH,eAAA7xH,KAAAkyH,cAEA2M,EAEA7+H,KAAAq5H,kBAAAr5H,KAAAkyH,aAAAqM,EAAAhlI,OAAAyG,KAAAkyH,cAGAlyH,KAAAq5H,kBAAAr5H,KAAAkyH,aAAAlyH,KAAAkyH,aAAAqM,EAAAhlI,SAGAwhI,EAAAxhI,SACA+kI,GAAAvD,EAAA5tH,KAAA,MAAAilC,EAAA0sF,aAAA1sF,EAAAyD,sBACA71C,KAAA86H,oBAAAC,EAAA/6H,KAAA6xH,eAAAz/E,EAAA2sF,iBAGA/+H,KAAA86H,oBAAAC,EAAA/6H,KAAA6xH,iBAGA7xH,KAAA04H,qBACA14H,KAAAo3C,KAAA,WACAp3C,KAAAqzC,SACArzC,KAAAqzC,OAAA+D,KAAA,gBAAAj4C,OAAAa,OACAA,KAAAqzC,OAAAqE,sBAMAslF,mBAAA,WACAh9H,KAAAozH,mBAAA,GAMA8J,iBAAA,WACAl9H,KAAAozH,mBAAA,GAMA6J,oBAAA,SAAA3vH,GACAtN,KAAA64H,iBAAAvrH,EAAAnO,OAAA0yH,eACA7xH,KAAAg/H,eAAA1xH,EAAAnO,OAAA+yH,aACAlyH,KAAAy4H,0BAOA53H,KAAA,WACAb,KAAA6xH,iBAAA7xH,KAAAkyH,eAKA9/E,EAAA0sF,WAAA9+H,KAAA02H,kBACAtkF,EAAAyD,sBAIAzD,EAAA2sF,gBAAA,KAHA3sF,EAAA2sF,gBAAA/+H,KAAA+xH,mBAAA/xH,KAAA6xH,eAAA7xH,KAAAkyH,cAAA,GAKAlyH,KAAAq+H,WAAA,IAOA3qG,MAAA,WACA1zB,KAAAs+H,WAAA,GAQAW,kBAAA,SAAA3xH,GACA,OAAAA,GAAAA,EAAA8wB,eAAAgU,EAAAp3C,OAAAojC,eAUA8gG,sBAAA,SAAA1V,EAAA1yC,GACA,IAAA5wB,EAAAi5E,EAAAn/H,KAAAqrH,mBAAA7B,GAMA,OAJA1yC,EAAA,IACA5wB,EAAAlmD,KAAA0nH,aAAA8B,GAAA1yC,EAAA,GACAqoD,GAAAj5E,EAAAztB,KAAAytB,EAAAplB,OAEAq+F,GASAC,oBAAA,SAAA9xH,EAAA+xH,GACA,IAAAC,EAAAt/H,KAAAu/H,uBAAAjyH,EAAA+xH,GACA/K,EAAAt0H,KAAA+uH,oBAAAuQ,GACA9V,EAAA8K,EAAA9K,UAEA,GAAAA,IAAAxpH,KAAAooH,WAAA7uH,OAAA,GAAA+T,EAAAksB,SAAA,KAAAlsB,EAAAwsB,QAEA,OAAA95B,KAAAwoH,MAAAjvH,OAAA+lI,EAEA,IAAAxoD,EAAAw9C,EAAAx9C,UACAqoD,EAAAn/H,KAAAk/H,sBAAA1V,EAAA1yC,GACA0oD,EAAAx/H,KAAAy/H,gBAAAjW,EAAA,EAAA2V,GACAO,EAAA1/H,KAAAooH,WAAAoB,GAAAvrH,MAAA64E,GACA,OAAA4oD,EAAAnmI,OAAAimI,EAAA,EAAAx/H,KAAAypH,qBAAAD,IAUA+V,uBAAA,SAAAjyH,EAAA+xH,GACA,OAAA/xH,EAAAusB,UAAA75B,KAAA6xH,iBAAA7xH,KAAAkyH,cAAAmN,EACAr/H,KAAAkyH,aAGAlyH,KAAA6xH,gBASA8N,kBAAA,SAAAryH,EAAA+xH,GACA,IAAAC,EAAAt/H,KAAAu/H,uBAAAjyH,EAAA+xH,GACA/K,EAAAt0H,KAAA+uH,oBAAAuQ,GACA9V,EAAA8K,EAAA9K,UACA,GAAA,IAAAA,GAAAl8G,EAAAksB,SAAA,KAAAlsB,EAAAwsB,QAEA,OAAAwlG,EAEA,IAAAxoD,EAAAw9C,EAAAx9C,UACAqoD,EAAAn/H,KAAAk/H,sBAAA1V,EAAA1yC,GACA0oD,EAAAx/H,KAAAy/H,gBAAAjW,EAAA,EAAA2V,GACAS,EAAA5/H,KAAAooH,WAAAoB,GAAAvrH,MAAA,EAAA64E,GACA2yC,EAAAzpH,KAAAypH,qBAAAD,EAAA,GAEA,OAAAxpH,KAAAooH,WAAAoB,EAAA,GAAAjwH,OACAimI,EAAAI,EAAArmI,QAAA,EAAAkwH,IAOAgW,gBAAA,SAAAjW,EAAA1oF,GAOA,IALA,IAGA++F,EAAAC,EAHApqH,EAAA1V,KAAAooH,WAAAoB,GACAiB,EAAAzqH,KAAAqrH,mBAAA7B,GACAuW,EAAAtV,EACAuV,EAAA,EAEA38H,EAAA,EAAAqiD,EAAAhwC,EAAAnc,OAAA8J,EAAAqiD,EAAAriD,IAGA,GAFAw8H,EAAA7/H,KAAA0nH,aAAA8B,GAAAnmH,GAAAy9B,OACAi/F,GAAAF,GACA/+F,EAAA,CACAg/F,GAAA,EACA,IAAAG,EAAAF,EAAAF,EACAK,EAAAH,EACAI,EAAA72H,KAAA06B,IAAAi8F,EAAAn/F,GACAs/F,EAAA92H,KAAA06B,IAAAk8F,EAAAp/F,GAEAk/F,EAAAI,EAAAD,EAAA98H,EAAAA,EAAA,EACA,MASA,OAJAy8H,IACAE,EAAAtqH,EAAAnc,OAAA,GAGAymI,GAQAK,eAAA,SAAA/yH,GACAtN,KAAA6xH,gBAAA7xH,KAAAwoH,MAAAjvH,QAAAyG,KAAAkyH,cAAAlyH,KAAAwoH,MAAAjvH,QAGAyG,KAAAsgI,oBAAA,OAAAhzH,IAOAizH,aAAA,SAAAjzH,GACA,IAAAtN,KAAA6xH,gBAAA,IAAA7xH,KAAAkyH,cAGAlyH,KAAAsgI,oBAAA,KAAAhzH,IAQAgzH,oBAAA,SAAArJ,EAAA3pH,GAGA,IAAAglB,EAAA,MAAA2kG,EAAA,eACAnzH,EAAA9D,KAAAsyB,GAAAhlB,EAAA,UAAAtN,KAAAizH,qBACA3lH,EAAAusB,SACA75B,KAAAwgI,oBAAA18H,GAGA9D,KAAAygI,uBAAA38H,GAEA,IAAAA,IACA9D,KAAAo7H,2BACAp7H,KAAAu2H,uBACAv2H,KAAAgzH,sBAAA,EACAhzH,KAAA2zH,oBACA3zH,KAAAyzH,wBACAzzH,KAAA0zH,oBAQA8M,oBAAA,SAAA18H,GACA,IAAA00H,EAAA,SAAAx4H,KAAAizH,oBACAjzH,KAAA6xH,eAAA/tH,EACA9D,KAAAkyH,aAAApuH,EAEA,OADA9D,KAAAm7H,8BAAAn7H,KAAA6xH,eAAA7xH,KAAAkyH,aAAAsG,GACA,IAAA10H,GAOA28H,uBAAA,SAAA38H,GASA,OARAA,EAAA,GACA9D,KAAA6xH,gBAAA/tH,EACA9D,KAAAkyH,aAAAlyH,KAAA6xH,iBAGA7xH,KAAAkyH,cAAApuH,EACA9D,KAAA6xH,eAAA7xH,KAAAkyH,cAEA,IAAApuH,GAOA48H,eAAA,SAAApzH,GACA,IAAAtN,KAAA6xH,gBAAA,IAAA7xH,KAAAkyH,cAGAlyH,KAAA2gI,uBAAA,OAAArzH,IAOAszH,MAAA,SAAAtzH,EAAA5K,EAAAu0H,GACA,IAAA5oG,EACA,GAAA/gB,EAAAssB,OACAvL,EAAAruB,KAAA,mBAAAi3H,GAAAj3H,KAAA0C,QAEA,CAAA,IAAA4K,EAAAksB,SAAA,KAAAlsB,EAAAwsB,SAAA,KAAAxsB,EAAAwsB,QAKA,OADA95B,KAAA0C,IAAA,SAAAu0H,GAAA,EAAA,GACA,EAJA5oG,EAAAruB,KAAA,mBAAAi3H,GAAAj3H,KAAA0C,IAMA,QAAA5F,WAAAuxB,GAAAruB,KAAA0C,KAAA2rB,EAEA,OADAruB,KAAA0C,GAAA2rB,GACA,GAOAwyG,UAAA,SAAAvzH,EAAA5K,GACA,OAAA1C,KAAA4gI,MAAAtzH,EAAA5K,EAAA,SAMAo+H,WAAA,SAAAxzH,EAAA5K,GACA,OAAA1C,KAAA4gI,MAAAtzH,EAAA5K,EAAA,UAOAq+H,2BAAA,SAAAzzH,GACA,IAAA8mB,GAAA,EAUA,OATAp0B,KAAAizH,oBAAA,OAIAjzH,KAAAkyH,eAAAlyH,KAAA6xH,gBAAA,IAAA7xH,KAAA6xH,iBACAz9F,EAAAp0B,KAAA6gI,UAAAvzH,EAAA,mBAGAtN,KAAAkyH,aAAAlyH,KAAA6xH,eACAz9F,GAOA4sG,wBAAA,SAAA1zH,GACA,MAAA,UAAAtN,KAAAizH,qBAAAjzH,KAAA6xH,iBAAA7xH,KAAAkyH,aACAlyH,KAAA6gI,UAAAvzH,EAAA,gBAEA,IAAAtN,KAAA6xH,gBACA7xH,KAAAizH,oBAAA,OACAjzH,KAAA6gI,UAAAvzH,EAAA,wBAFA,GAUA2zH,gBAAA,SAAA3zH,GACAtN,KAAA6xH,gBAAA7xH,KAAAwoH,MAAAjvH,QAAAyG,KAAAkyH,cAAAlyH,KAAAwoH,MAAAjvH,QAGAyG,KAAA2gI,uBAAA,QAAArzH,IAQAqzH,uBAAA,SAAA1J,EAAA3pH,GACA,IAAA4zH,EAAA,aAAAjK,EAAA,OACAj3H,KAAAgzH,sBAAA,EAEA1lH,EAAAusB,SACAqnG,GAAA,QAGAA,GAAA,WAEAlhI,KAAAkhI,GAAA5zH,KACAtN,KAAAu2H,uBACAv2H,KAAA2zH,oBACA3zH,KAAAyzH,wBACAzzH,KAAA0zH,oBAQAyN,yBAAA,SAAA7zH,GACA,MAAA,SAAAtN,KAAAizH,qBAAAjzH,KAAA6xH,iBAAA7xH,KAAAkyH,aACAlyH,KAAA8gI,WAAAxzH,EAAA,kBAEAtN,KAAAkyH,eAAAlyH,KAAAwoH,MAAAjvH,QACAyG,KAAAizH,oBAAA,QACAjzH,KAAA8gI,WAAAxzH,EAAA,sBAFA,GAUA8zH,4BAAA,SAAA9zH,GACA,IAAA4K,GAAA,EAUA,OATAlY,KAAAizH,oBAAA,QAEAjzH,KAAA6xH,iBAAA7xH,KAAAkyH,cACAh6G,EAAAlY,KAAA8gI,WAAAxzH,EAAA,kBACAtN,KAAAkyH,aAAAlyH,KAAA6xH,gBAGA7xH,KAAA6xH,eAAA7xH,KAAAkyH,aAEAh6G,GAUAmpH,YAAA,SAAAz4H,EAAAsU,QACA,IAAAA,IACAA,EAAAtU,EAAA,GAEA5I,KAAAq5H,kBAAAzwH,EAAAsU,GACAld,KAAAwoH,MAAAhmH,OAAAoG,EAAAsU,EAAAtU,GACA5I,KAAA8M,KAAA9M,KAAAwoH,MAAAr7G,KAAA,IACAnN,KAAAiY,IAAA,SAAA,GACAjY,KAAAovH,+BACApvH,KAAA8nH,iBACA9nH,KAAA4xE,aAEA5xE,KAAAo5H,2BAeAkI,YAAA,SAAAx0H,EAAA6P,EAAA/T,EAAAsU,QACA,IAAAA,IACAA,EAAAtU,GAEAsU,EAAAtU,GACA5I,KAAAq5H,kBAAAzwH,EAAAsU,GAEA,IAAAgqC,EAAA9U,EAAAlkB,KAAAzY,OAAAsxC,cAAAj6C,GACA9M,KAAA86H,oBAAA5zE,EAAAt+C,EAAA+T,GACA3c,KAAAwoH,SAAAxkH,OAAAhE,KAAAwoH,MAAAvqH,MAAA,EAAA2K,GAAAs+C,EAAAlnD,KAAAwoH,MAAAvqH,MAAAif,IACAld,KAAA8M,KAAA9M,KAAAwoH,MAAAr7G,KAAA,IACAnN,KAAAiY,IAAA,SAAA,GACAjY,KAAAovH,+BACApvH,KAAA8nH,iBACA9nH,KAAA4xE,aAEA5xE,KAAAo5H,6BAQAlnF,EAAAE,EAAAlkB,KAAAgkB,QACAC,EAAA,OAEAC,EAAAlkB,KAAAhzB,OAAAiG,OAAAixC,EAAAmJ,KAAAv/C,WAOAgoG,OAAA,WACA,IAAAz/D,EAAAvkC,KAAAuhI,wBACAC,EAAAxhI,KAAAyhI,iBAAAl9F,EAAAm9F,QAAAn9F,EAAAo9F,UACA,OAAA3hI,KAAA4hI,kBAAAJ,IAQA32D,MAAA,SAAAtuB,GACA,OAAAv8C,KAAA+jG,qBACA/jG,KAAAgkG,UACAznD,QAAAA,EAAA8nD,SAAA,EAAAG,YAAA,KAOA+8B,sBAAA,WACA,OACAI,UAAA3hI,KAAA8gC,MAAA,EACA4gG,SAAA1hI,KAAA+gC,OAAA,EACA8gG,QAAA7hI,KAAAorH,gBAAA,KAOAwW,kBAAA,SAAAJ,GACA,IACAv+B,EAAAjjG,KAAAkjG,qBAAAljG,MACA,OACAwhI,EAAA39B,YAAA12F,KAAA,IACA,kCACAnN,KAAAmhD,WAAA,gBAAAnhD,KAAAmhD,WAAArjD,QAAA,KAAA,KAAA,KAAA,GACAkC,KAAAq7C,SAAA,cAAAr7C,KAAAq7C,SAAA,KAAA,GACAr7C,KAAA82D,UAAA,eAAA92D,KAAA82D,UAAA,KAAA,GACA92D,KAAA+2D,WAAA,gBAAA/2D,KAAA+2D,WAAA,KAAA,GACAksC,EAAA,oBAAAA,EAAA,KAAA,GACA,UAAAjjG,KAAA4iG,cAVA,GAUA,IAAA5iG,KAAA2kG,gBAAA,KACA68B,EAAAM,UAAA30H,KAAA,IACA,cAUAs0H,iBAAA,SAAAM,EAAAC,GACA,IAEAnN,EAFAiN,KACAj+B,KACA9iE,EAAAghG,EAEA/hI,KAAA4jG,UAAAC,GAGA,IAAA,IAAApqG,EAAA,EAAAyY,EAAAlS,KAAAooH,WAAA7uH,OAAAE,EAAAyY,EAAAzY,IACAo7H,EAAA70H,KAAAqrH,mBAAA5xH,IACAuG,KAAAonH,qBAAApnH,KAAAuqH,SAAA,sBAAA9wH,KACAuG,KAAAiiI,kBAAAp+B,EAAApqG,EAAAuoI,EAAAnN,EAAA9zF,GAEA/gC,KAAAkiI,oBAAAJ,EAAAroI,EAAAuoI,EAAAnN,EAAA9zF,GACAA,GAAA/gC,KAAAorH,gBAAA3xH,GAGA,OACAqoI,UAAAA,EACAj+B,YAAAA,IAOAs+B,oBAAA,SAAAtrD,EAAAurD,EAAA3pG,EAAAuG,GACA,IAAAqjG,EAAAxrD,IAAAA,EAAA3lE,QAAA2lE,EAAAzpE,MAAA+kC,GACAmwF,EAAAtiI,KAAA+iG,iBAAAq/B,EAAAC,GACAE,EAAAD,EAAA,UAAAA,EAAA,IAAA,GACAzkF,EAAAukF,EAAAj/B,OAAAq/B,EAAA,GACA3gF,EAAAzP,EAAAt2C,OAAA+lD,oBAIA,OAHAhE,IACA2kF,EAAA,QAAAtwF,EAAA2L,EAAAgE,GAAA,OAGA,aAAA3P,EAAAzZ,EAAAopB,GAAA,QACA3P,EAAAlT,EAAA6iB,GAAA,KAAA2gF,EACAD,EAAA,IACAnwF,EAAAlkB,KAAAzY,OAAAqxC,UAAA+vB,GACA,YACA1pE,KAAA,KAGA+0H,oBAAA,SAAAJ,EAAAtY,EAAAwY,EAAAD,GAEA,IAEAnU,EACAC,EAEAlD,EAAAhuG,EAGAmxG,EARA92D,EAAAh3D,KAAAorH,gBAAA5B,GACAuE,GAAA,IAAA/tH,KAAAgnH,UAAArlH,QAAA,WAGAqsH,EAAA,GAEA7C,EAAA,EACAz1G,EAAA1V,KAAAooH,WAAAoB,GAGAuY,GAAA/qE,GAAA,EAAAh3D,KAAAqnH,mBAAArnH,KAAAg3D,WACA,IAAA,IAAAv9D,EAAA,EAAAyY,EAAAwD,EAAAnc,OAAA,EAAAE,GAAAyY,EAAAzY,IACAq0H,EAAAr0H,IAAAyY,GAAAlS,KAAAunH,YACAyG,GAAAt4G,EAAAjc,GACAkxH,EAAA3qH,KAAA0nH,aAAA8B,GAAA/vH,GACA,IAAA0xH,GACA6W,GAAArX,EAAApB,YAAAoB,EAAA7pF,MACAqqF,GAAAR,EAAA7pF,OAGAqqF,GAAAR,EAAApB,YAEAwE,IAAAD,GACA9tH,KAAA8mH,eAAA9oH,KAAA0X,EAAAjc,MACAq0H,GAAA,GAGAA,IAEAF,EAAAA,GAAA5tH,KAAAmtH,4BAAA3D,EAAA/vH,GACAo0H,EAAA7tH,KAAAmtH,4BAAA3D,EAAA/vH,EAAA,GACAq0H,EAAA9tH,KAAAkvH,uBAAAtB,EAAAC,IAEAC,IACAnxG,EAAA3c,KAAAouH,qBAAA5E,EAAA/vH,OACAqoI,EAAA9iI,KAAAgB,KAAAmiI,oBAAAnU,EAAArxG,EAAAqlH,EAAAD,IACA/T,EAAA,GACAJ,EAAAC,EACAmU,GAAA7W,EACAA,EAAA,IAKAsX,gBAAA,SAAA5+B,EAAA31C,EAAAz1B,EAAAuG,EAAA8B,EAAAC,GACA,IAAA8gB,EAAAzP,EAAAt2C,OAAA+lD,oBACAgiD,EAAA7kG,KACA,aACAgB,KAAA8jG,mBAAA51C,GACA,OACAhc,EAAAzZ,EAAAopB,GACA,QACA3P,EAAAlT,EAAA6iB,GACA,YACA3P,EAAApR,EAAA+gB,GACA,aACA3P,EAAAnR,EAAA8gB,GACA,gBAGAogF,kBAAA,SAAAp+B,EAAApqG,EAAAqxH,EAAAiX,GAOA,IANA,IAIApX,EAAAC,EAJAl1G,EAAA1V,KAAAooH,WAAA3uH,GACA+wH,EAAAxqH,KAAAorH,gBAAA3xH,GAAAuG,KAAAg3D,WACAm0D,EAAA,EACAD,EAAA,EAEAR,EAAA1qH,KAAAsrH,qBAAA7xH,EAAA,EAAA,uBACA4J,EAAA,EAAAqiD,EAAAhwC,EAAAnc,OAAA8J,EAAAqiD,EAAAriD,IACAsnH,EAAA3qH,KAAA0nH,aAAAjuH,GAAA4J,IACAunH,EAAA5qH,KAAAsrH,qBAAA7xH,EAAA4J,EAAA,0BACAqnH,GACAA,GAAA1qH,KAAAyiI,gBAAA5+B,EAAA6mB,EAAAI,EAAAI,EACA6W,EAAA5W,EAAAX,GACAU,EAAAP,EAAAlyF,KACA0yF,EAAAR,EAAA7pF,MACA4pF,EAAAE,GAGAO,GAAAR,EAAApB,YAGAqB,GAAA5qH,KAAAyiI,gBAAA5+B,EAAA+mB,EAAAE,EAAAI,EACA6W,EAAA5W,EAAAX,IAWA1mB,mBAAA,SAAArpG,GACA,IAAAioI,EAAAjoI,GAAA,iBAAAA,EAAA,IAAA23C,EAAA0b,MAAArzD,GAAA,GACA,OAAAioI,GAAAA,EAAA30E,aAAA,IAAA20E,EAAA3qE,WAGA,YAAA2qE,EAAA3qE,WAAA,WAAA2qE,EAAA5qE,SAAA,GAAAkH,QAAA,IAFA,SAAAvkE,EAAA,KAQAkoI,qBAAA,SAAAnZ,GAEA,IADA,IAAAqB,EAAA,EAAA+X,EAAA,EACAv/H,EAAA,EAAAA,EAAAmmH,EAAAnmH,IACAwnH,GAAA7qH,KAAAorH,gBAAA/nH,GAGA,OADAu/H,EAAA5iI,KAAAorH,gBAAA/nH,IAEAw+H,QAAAhX,EACA/mH,QAAA9D,KAAAsnH,cAAAtnH,KAAAqnH,mBAAAub,GAAA5iI,KAAAg3D,WAAAh3D,KAAAsnH,iBASA1kB,aAAA,SAAAC,GACA,IAAAggC,EAAAzwF,EAAAt2C,OAAAE,UAAA4mG,aAAAtoG,KAAA0F,KAAA6iG,GACA,OAAAggC,EAAA,wBAOA,WAEA,aAYAzwF,EAAA20C,QAAA30C,EAAAlkB,KAAAvpB,YAAAytC,EAAAogF,MAAApgF,EAAAkF,YAOAp9C,KAAA,UAOA4oI,SAAA,GASAC,gBAAA,EAMAC,cAAA,KAKA38C,iBAAA,EAMAmQ,cAAA,EAOAmwB,yBAAAv0E,EAAAmJ,KAAAv/C,UAAA2qH,yBAAA3iH,OAAA,SAMAi/H,aAAA,UAQAC,iBAAA,EAQApb,eAAA,WACA9nH,KAAA6nH,kBAGA7nH,KAAA8oF,WAAA9oF,KAAA2zH,oBACA3zH,KAAAurF,kBACAvrF,KAAA0oH,cAEA1oH,KAAA+iI,gBAAA,EAEA/iI,KAAAmjI,UAAAnjI,KAAAojI,kBAAApjI,KAAAgoH,cAEAhoH,KAAA+iI,gBAAA/iI,KAAA8gC,OACA9gC,KAAAg5C,KAAA,QAAAh5C,KAAA+iI,kBAEA,IAAA/iI,KAAAgnH,UAAArlH,QAAA,YAEA3B,KAAA6oH,gBAGA7oH,KAAA+gC,OAAA/gC,KAAA8oH,iBACA9oH,KAAA0wF,WAAAsJ,YAAA,+BAUAopC,kBAAA,SAAAC,GAMA,IALA,IAAAC,EAAA,EACAC,EAAA,EACA9E,EAAA,EACAp6H,KAEA5K,EAAA,EAAAA,EAAA4pI,EAAAhb,cAAA9uH,OAAAE,IACA,OAAA4pI,EAAA5a,aAAAgW,IAAAhlI,EAAA,GACA8pI,EAAA,EACA9E,IACA6E,MAEAtjI,KAAAkjI,iBAAAljI,KAAA8mH,eAAA9oH,KAAAqlI,EAAA5a,aAAAgW,KAAAhlI,EAAA,IAEA8pI,IACA9E,KAGAp6H,EAAA5K,IAAAic,KAAA4tH,EAAAx/H,OAAAy/H,GAEA9E,GAAA4E,EAAAhb,cAAA5uH,GAAAF,OACAgqI,GAAAF,EAAAhb,cAAA5uH,GAAAF,OAGA,OAAA8K,GAQAkmH,SAAA,SAAAr9F,EAAAs8F,GACA,GAAAxpH,KAAAmjI,YAAAnjI,KAAAwjI,WAAA,CACA,IAAAn/H,EAAArE,KAAAmjI,UAAA3Z,GACAnlH,IACAmlH,EAAAnlH,EAAAqR,MAGA,OAAA08B,EAAAmJ,KAAAv/C,UAAAuuH,SAAAjwH,KAAA0F,KAAAktB,EAAAs8F,IAQAmE,cAAA,SAAAnE,GACA,IAAAxpH,KAAA0wC,OACA,OAAA,EAEA,IAAA+yF,EAAA3pI,EAAAgK,EAAA,EAAA4/H,EAAAla,EAAA,EAAAma,GAAA,EACAt/H,EAAArE,KAAAmjI,UAAA3Z,GAAAoa,EAAA5jI,KAAAmjI,UAAA3Z,EAAA,GAWA,IAAA,IAAAxvC,KAVA31E,IACAmlH,EAAAnlH,EAAAqR,KACA5R,EAAAO,EAAAP,QAEA8/H,IACAF,EAAAE,EAAAluH,KACAiuH,EAAAD,IAAAla,EACAia,EAAAG,EAAA9/H,QAEAhK,OAAA,IAAA0vH,EAAAxpH,KAAA0wC,QAAAh7B,KAAA1V,KAAA0wC,OAAA84E,IAEA,IAAA,IAAAvvC,KAAAngF,EAAAkgF,GACA,GAAAC,GAAAn2E,KAAA6/H,GAAA1pD,EAAAwpD,GAEA,IAAA,IAAA3S,KAAAh3H,EAAAkgF,GAAAC,GACA,OAAA,EAKA,OAAA,GAQAm0C,qBAAA,SAAA5E,EAAA1yC,GACA,GAAA92E,KAAAmjI,YAAAnjI,KAAAwjI,WAAA,CACA,IAAAn/H,EAAArE,KAAAmjI,UAAA3Z,GACA,IAAAnlH,EACA,OAAA,KAEAmlH,EAAAnlH,EAAAqR,KACAohE,EAAAzyE,EAAAP,OAAAgzE,EAEA,OAAA92E,KAAAunD,UAAA,uBAAAiiE,EAAA1yC,IASA86C,qBAAA,SAAApI,EAAA1yC,EAAAn6D,GACA,IAAAtY,EAAArE,KAAAmjI,UAAA3Z,GACAA,EAAAnlH,EAAAqR,KACAohE,EAAAzyE,EAAAP,OAAAgzE,EAEA92E,KAAA0wC,OAAA84E,GAAA1yC,GAAAn6D,GAQA01G,wBAAA,SAAA7I,EAAA1yC,GACA,IAAAzyE,EAAArE,KAAAmjI,UAAA3Z,GACAA,EAAAnlH,EAAAqR,KACAohE,EAAAzyE,EAAAP,OAAAgzE,SACA92E,KAAA0wC,OAAA84E,GAAA1yC,IAWA46C,cAAA,SAAAlI,GACA,IAAAnlH,EAAArE,KAAAmjI,UAAA3Z,GACA,QAAAxpH,KAAA0wC,OAAArsC,EAAAqR,OASAi8G,cAAA,SAAAnI,GACA,IAAAnlH,EAAArE,KAAAmjI,UAAA3Z,GACAxpH,KAAA0wC,OAAArsC,EAAAqR,UAYAmuH,UAAA,SAAAxjC,EAAAyjC,GACA,IAAArqI,EAAAsqI,KAEA,IADA/jI,KAAAwjI,YAAA,EACA/pI,EAAA,EAAAA,EAAA4mG,EAAA9mG,OAAAE,IACAsqI,EAAAA,EAAA//H,OAAAhE,KAAAgkI,UAAA3jC,EAAA5mG,GAAAA,EAAAqqI,IAGA,OADA9jI,KAAAwjI,YAAA,EACAO,GAaAE,aAAA,SAAAC,EAAA1a,EAAA2a,GACA,IAAAtX,EAAA/rF,EAAA,EACAqjG,EAAAA,GAAA,EACA,IAAA,IAAA1qI,EAAA,EAAAyY,EAAAgyH,EAAA3qI,OAAAE,EAAAyY,EAAAzY,IAAA,CACA,IAAAoxD,EAAA7qD,KAAAgtH,gBAAAkX,EAAAzqI,GAAA+vH,EAAA/vH,EAAA0qI,EAAAtX,GAHA,GAIA/rF,GAAA+pB,EAAA0+D,YACAsD,EAAAqX,EAAAzqI,GAEA,OAAAqnC,GAYAkjG,UAAA,SAAAI,EAAA5a,EAAAsa,EAAAO,GACA,IAAArrD,EAAA,EACAkqD,EAAAljI,KAAAkjI,gBACA7a,KACA3yG,KAEA4uH,EAAApB,EAAA9wF,EAAAlkB,KAAAzY,OAAAsxC,cAAAq9E,GAAAA,EAAA9qI,MAAA0G,KAAAijI,cACAiB,EAAA,GACApgI,EAAA,EACAygI,EAAArB,EAAA,GAAA,IACAsB,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,GAAA,EACAC,EAAA1B,EAAA,EAAAljI,KAAA2sH,yBACA0X,EAAAA,GAAA,EAEA,IAAAC,EAAA/qI,QACA+qI,EAAAtlI,SAEA8kI,GAAAO,EACA,IAAA,IAAA5qI,EAAA,EAAAA,EAAA6qI,EAAA/qI,OAAAE,IAEAyqI,EAAAhB,EAAAoB,EAAA7qI,GAAA24C,EAAAlkB,KAAAzY,OAAAsxC,cAAAu9E,EAAA7qI,IACA+qI,EAAAxkI,KAAAikI,aAAAC,EAAA1a,EAAA1lH,GACAA,GAAAogI,EAAA3qI,QAEAy/E,GAAAyrD,EAAAD,EAAAI,IAEAd,IAAAa,GACAtc,EAAArpH,KAAA0W,GACAA,KACAsjE,EAAAwrD,EACAG,GAAA,GAGA3rD,GAAA4rD,EAGAD,GAAAzB,GACAxtH,EAAA1W,KAAAulI,GAEA7uH,EAAAA,EAAA1R,OAAAkgI,GAEAO,EAAAzkI,KAAAikI,cAAAM,GAAA/a,EAAA1lH,GACAA,IACA6gI,GAAA,EAEAH,EAAAE,IACAA,EAAAF,GAUA,OANA/qI,GAAA4uH,EAAArpH,KAAA0W,GAEAgvH,EAAAL,EAAArkI,KAAA+iI,kBACA/iI,KAAA+iI,gBAAA2B,EAAAE,EAAAP,GAGAhc,GASAgB,gBAAA,SAAAG,GACA,OAAAxpH,KAAAmjI,UAAA3Z,EAAA,IAIAxpH,KAAAmjI,UAAA3Z,EAAA,GAAA9zG,OAAA1V,KAAAmjI,UAAA3Z,GAAA9zG,MAYA+zG,qBAAA,SAAAD,GACA,OAAAxpH,KAAAkjI,gBACAljI,KAAAqpH,gBAAAG,GAAA,EAAA,EAEA,GAUAtB,oBAAA,SAAAp7G,GAIA,IAHA,IAAAojH,EAAA99E,EAAAmJ,KAAAv/C,UAAAksH,oBAAA5tH,KAAA0F,KAAA8M,GACAu7G,EAAAroH,KAAA6jI,UAAA3T,EAAA7vB,MAAArgG,KAAA8gC,OACAu/D,EAAA,IAAAjlG,MAAAitH,EAAA9uH,QACAE,EAAA,EAAAA,EAAA4uH,EAAA9uH,OAAAE,IACA4mG,EAAA5mG,GAAA4uH,EAAA5uH,GAAA0T,KAAA,IAIA,OAFA+iH,EAAA7vB,MAAAA,EACA6vB,EAAA7H,cAAAA,EACA6H,GAGAlpC,YAAA,WACA,OAAA19E,KAAAwiB,IAAA9rB,KAAA8iI,SAAA9iI,KAAA+iI,kBAGA3J,wBAAA,WACA,IAAAyL,KACA,IAAA,IAAAniI,KAAA1C,KAAAmjI,UACAnjI,KAAAooH,WAAA1lH,KACAmiI,EAAA7kI,KAAAmjI,UAAAzgI,GAAAgT,MAAA,GAGA,IAAA,IAAAhT,KAAA1C,KAAA0wC,OACAm0F,EAAAniI,WACA1C,KAAA0wC,OAAAhuC,IAWAioE,SAAA,SAAAC,GACA,OAAA5qE,KAAAunD,UAAA,YAAA,WAAA,mBAAAvjD,OAAA4mE,OAWAx4B,EAAA20C,QAAAnqC,WAAA,SAAA1hD,EAAA+F,GACA,OAAAmxC,EAAAt2C,OAAA2gG,YAAA,UAAAvhG,EAAA+F,EAAA,SAtcA,GAycAmxC,IAEAl5C,OAAA,yBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAA/xF,OAAAX,EAAAW,SAEA75C,OAAA,yBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAAvoD,OAAAnqC,EAAAmqC,SAEArjF,OAAA,wBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAAh3E,MAAA1b,EAAA0b,QAEA50D,OAAA,0BACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAA97B,QAAA52D,EAAA42D,UAEA9vG,OAAA,wBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAA1nF,MAAAhL,EAAAgL,QAEAlkD,OAAA,wBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAA7qE,MAAA7nB,EAAA6nB,QAEA/gE,OAAA,uBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAAx9B,KAAAl1D,EAAAk1D,OAEApuG,OAAA,yBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GAKA,OAJAA,EAAAt2C,OAAA4N,OAAA,WACA,OAAA1J,KAAAqzC,OAAA3pC,OAAA1J,OAGA8kI,EAAAhpI,OAAAs2C,EAAAt2C,SAEA5C,OAAA,uBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAAvpD,KAAAnpC,EAAAmpC,OAEAriF,OAAA,wBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAA7qF,MAAA7H,EAAA6H,QAEA/gD,OAAA,0BACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAA96B,QAAA53D,EAAA43D,UAEA9wG,OAAA,2BACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAAz7B,SAAAj3D,EAAAi3D,WAEAnwG,OAAA,uBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAArnD,KAAArrC,EAAAqrC,OAEAvkF,OAAA,uBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAAvpF,KAAAnJ,EAAAmJ,OAEAriD,OAAA,2BACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAAl8B,SAAAx2D,EAAAw2D,WAEA1vG,OAAA,uBACA,aACA,uBACA,SAAA4rI,EAAA1yF,GACA,OAAA0yF,EAAA52G,KAAAkkB,EAAAlkB,OAEAh1B,OAAA,uBACA,aACA,WACA,WACA,UACA,YACA,UACA,UACA,SACA,WACA,SACA,UACA,YACA,aACA,SACA,SACA,aACA,UACA,SAAA4rI,GACA,OAAAA,IAGA5rI,OAAA,kBAAA,uBAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,+BACA,wBACA,sBACA,qBACA,sBACA,8BACA,kBACA,SAAAU,EAAAsgB,EAAAuF,EAAAgL,EAAAwkB,EAAAmD,GACA,aAEA,IAAA2yF,KAEA,SAAAC,EAAAh9G,GAKA,OACA+Y,OAAAz3B,KAAA06B,IAAAhc,EAAAm3E,iBAAA71F,KAAAgwC,IAAAtxB,EAAAoxB,MAAA9vC,KAAA4vC,GAAA,MAAA5vC,KAAA06B,IAAAhc,EAAAk5E,kBAAA53F,KAAA6vC,IAAAnxB,EAAAoxB,MAAA9vC,KAAA4vC,GAAA,MACApY,MAAAx3B,KAAA06B,IAAAhc,EAAAk5E,kBAAA53F,KAAAgwC,IAAAtxB,EAAAoxB,MAAA9vC,KAAA4vC,GAAA,MAAA5vC,KAAA06B,IAAAhc,EAAAm3E,iBAAA71F,KAAA6vC,IAAAnxB,EAAAoxB,MAAA9vC,KAAA4vC,GAAA,OAKA,SAAA+rF,EAAA1jH,GACAvhB,KAAAuhB,QAAAA,EAcA,SAAA2jH,EAAA3jH,GACAvhB,KAAAuhB,QAAAA,EA8BA,SAAA4jH,EAAA5jH,GACAvhB,KAAAuhB,QAAAA,EA3CA0jH,EAAAjpI,WACAopI,kBAAA,SAAAlgI,GACA,IAAAmgI,EAAAnxH,SAAA0H,cAAA,OAIA,OAHAypH,EAAA/kI,UAAA,wBACAN,KAAAuhB,QAAAzC,YAAAumH,GAEA,IAAAH,EAAAG,KASAH,EAAAlpI,WACAspI,aAAA,SAAApgI,GASAA,EAAAgV,EAAApa,UAPAkoB,MAAA,OACA9tB,KAAA,UACAy3E,MAAA,UACAhiD,MAAA,EACA5N,UAAA,GAGA7c,GAEA,IAAAqgI,EAAArxH,SAAA0H,cAAA,UACA2pH,EAAArrI,KAAA,SACAqrI,EAAAjlI,UAAA,mCAAA4E,EAAAhL,KACAqrI,EAAAtvH,UAAA,gDAAA/Q,EAAA8iB,MAAA,aACAhoB,KAAAuhB,QAAAzC,YAAAymH,GAEA,IAAAj/G,EAAA,IAAA6+G,EAAAI,GAIA,OAHAj/G,EAAAqJ,KAAAzqB,EAAAyqB,MACArJ,EAAA4qB,QAAAhsC,EAAA6c,UAEAuE,IASA6+G,EAAAnpI,WACAq7B,iBAAA,SAAArlB,EAAAzC,GACAvP,KAAAuhB,QAAA8V,iBACAr3B,KAAAuhB,QAAA8V,iBAAArlB,EAAAzC,GACAvP,KAAAuhB,QAAAumC,aACA9nD,KAAAuhB,QAAAumC,YAAA,KAAA91C,EAAAzC,IAGAgoB,oBAAA,SAAAvlB,EAAAzC,GACAvP,KAAAuhB,QAAAgW,qBACAv3B,KAAAuhB,QAAAgW,oBAAAvlB,EAAAzC,IAGAmQ,OAAA,SAAAjlB,GACAA,EACAuF,KAAAuhB,QAAAwE,UAAAtc,IAAA,0BAEAzJ,KAAAuhB,QAAAwE,UAAArc,OAAA,2BAEAimB,KAAA,SAAAl1B,GACAA,EACAuF,KAAAuhB,QAAAwE,UAAAtc,IAAA,0BAEAzJ,KAAAuhB,QAAAwE,UAAArc,OAAA,2BAEAwnC,QAAA,SAAAz2C,GACAuF,KAAAuhB,QAAAQ,WAAA,IAIA,IAAAyjH,EAAAv2F,EAAAjoC,SACAb,UAAA,WAKAtB,WAAA,SAAA+a,EAAA1a,EAAA0sB,GACA,iBAAAhS,IACAA,EAAA6K,EAAA3nB,KAAA8c,IAGA5f,KAAAylI,eAAA7lH,GACA5f,KAAA4G,UAAA5G,KAAA0lI,iBAAAxgI,GAIAlF,KAAA4xB,WAKA5xB,KAAA2lI,mBAGA3lI,KAAA4lI,qBAGA5lI,KAAA6lI,QAAA,WAEA7lI,KAAAkF,QAAAyiD,WAAA37C,KAAAhM,MAAA1F,QACA0R,KAAAhM,QASA0lI,iBAAA,KAGAryF,OAAA,KAGArrB,MAAA,KAGA89G,aAAA,KAGAC,YAAA,KAGAC,qBAAA,KAGAC,mBAGA/gI,SAEA49H,SAAA,KACAoD,UAAA,KACA9b,SAAA,KACAoD,UAAA,KACA2Y,MAAA,KACAt4D,gBAAA,OAGAj8C,WAGA+1B,WAAA,cAKAy+E,YAAA,WACA,IAAA5lH,EAAAxgB,KAAA0lI,iBACA19G,EAAA,IAAAiyC,MACAjyC,EAAAk0B,OAAA,WACA17B,EAAA3B,WAAAsE,aAAA6E,EAAAxH,IAGAwH,EAAArnB,IAAAX,KAAA+lI,YAAAtnF,aAKApnB,iBAAA,SAAArlB,EAAA/Q,GACA,IAAA2e,EAAA5f,KAAAqzC,OAAA6+B,aACAtyD,EAAAyX,iBACAzX,EAAAyX,iBAAArlB,EAAA/Q,GACA2e,EAAAkoC,aACAloC,EAAAkoC,YAAA,KAAA91C,EAAA/Q,IAIAu5B,cAAA,SAAAxoB,GAGA,IAAAX,EAAA6C,SAAAd,YAAA,SACA/B,EAAAg1H,UAAAr0H,GAAA,GAAA,GAEAhS,KAAAqzC,OAAA6+B,aAAA13C,cAAAnpB,IAMAw0H,QAAA,SAAAv7H,GACA,IAAA5J,EAAA,IAAAu5D,MACAv5D,EAAAw7C,OAAA,WACAl8C,KAAAsmI,qBAAA,IAAAl0F,EAAA6nB,MAAAv5D,IAEA4J,GAAAA,KACA0B,KAAAhM,MACAU,EAAAC,IAAAX,KAAA+lI,YAAAtnF,aAGA6nF,qBAAA,SAAAC,GACAvmI,KAAAgoB,OACAhoB,KAAAgoB,MAAAqrB,OAAA3pC,OAAA1J,KAAAgoB,OAGAhoB,KAAAgoB,MAAAu+G,EACAvmI,KAAAgoB,MAAAk7D,YAAA,EAGA,IAAA+1B,EAAA+rB,EAAAhlI,KAAAgoB,OACAswE,EAAA2gB,EAAAn4E,MACAy3D,EAAA0gB,EAAAl4E,OAEA,GAAA,OAAA/gC,KAAAkF,QAAAihI,MAAA,CACA,IAAAK,GAAAxmI,KAAAkF,QAAAihI,MACAM,EAAAnuC,EAAAC,EAEAkuC,EAAAD,EACAjuC,EAAAD,EAAAkuC,EACAC,EAAAD,IACAluC,EAAAC,EAAAiuC,GAKA,IAAAE,EAAA,EAEAtnF,EAAA,EACAC,EAAA,EAEA,OAAAr/C,KAAAkF,QAAAklH,UAAApqH,KAAAkF,QAAAklH,SAAA9xB,IACAl5C,EAAAp/C,KAAAkF,QAAAklH,SAAA9xB,GAEA,OAAAt4F,KAAAkF,QAAAsoH,WAAAxtH,KAAAkF,QAAAsoH,UAAAj1B,IACAl5C,EAAAr/C,KAAAkF,QAAAsoH,UAAAj1B,GAEAmuC,EAAAp9H,KAAAwoC,IAAAsN,EAAAC,GAEAD,EAAA,EACAC,EAAA,EACA,OAAAr/C,KAAAkF,QAAA49H,UAAA9iI,KAAAkF,QAAA49H,SAAAxqC,IACAl5C,EAAAp/C,KAAAkF,QAAA49H,SAAAxqC,GAEA,OAAAt4F,KAAAkF,QAAAghI,WAAAlmI,KAAAkF,QAAAghI,UAAA3tC,IACAl5C,EAAAr/C,KAAAkF,QAAAghI,UAAA3tC,GAIA,IAAAruD,EAFA5gC,KAAAwiB,IAAAszB,EAAAC,GAEAqnF,EAEApuC,GAAApuD,EACAquD,GAAAruD,EAGAlqC,KAAAgoB,MAAAo3B,OAAA,EAAAlV,EACAlqC,KAAAgoB,MAAAq3B,OAAA,EAAAnV,EACAlqC,KAAAqzC,OAAA5pC,IAAAzJ,KAAAgoB,OACAhoB,KAAAqzC,OAAAm9B,SAAA8nB,GACAt4F,KAAAqzC,OAAAq9B,UAAA6nB,GACAv4F,KAAAqzC,OAAAshC,aAAA30E,KAAAgoB,OACAhoB,KAAAgoB,MAAA4pD,aAMA+0D,oBAAA,SAAAC,GACA5mI,KAAAimI,gBAAAjnI,KAAA4nI,GAEAA,EAAAD,oBACA3mI,KAAA8lI,aACA9lI,KAAA+lI,YACA/lI,KAAA6mI,oBAAA76H,KAAAhM,QAIA6mI,oBAAA,SAAAN,GACAA,IACAvmI,KAAA+lI,YAAAQ,GAEAvmI,KAAA6lI,QAAA,WACA7lI,KAAAw6B,cAAA,wBACAxuB,KAAAhM,QAKA8mI,kBAAA,WACA9mI,KAAAqzC,OAAA3pC,OAAA1J,KAAA+lI,aACA/lI,KAAA2lI,mBACA3lI,KAAA+mI,mBAAA/mI,KAAAimI,gBAAAhoI,UAGA8oI,mBAAA,SAAAd,GACA,GAAA,IAAAA,EAAA1sI,OAGA,OAFAyG,KAAAw6B,cAAA,2BACAx6B,KAAA6lI,UAIA,IAAAe,EAAAX,EAAAtmI,QAOAinI,EAAAD,oBACA3mI,KAAA8lI,aACA9lI,KAAA+lI,YAPA,SAAAQ,GACAA,IAAAvmI,KAAA+lI,YAAAQ,GACAvmI,KAAA+mI,mBAAAd,IAMAj6H,KAAAhM,QAOAylI,eAAA,SAAAuB,GAEA,IAAAC,EAAA/yH,SAAA0H,cAAA,OACAqrH,EAAA3mI,UAAA,qBAGA,IAAA4mI,EAAAhzH,SAAA0H,cAAA,OACAsrH,EAAA5mI,UAAA,mBACA2mI,EAAAnoH,YAAAooH,GAGA,IAAAC,EAAAjzH,SAAA0H,cAAA,OACAurH,EAAA7mI,UAAA,2BACA,IAAAgsF,EAAAtsF,KAAAssF,cAAAp4E,SAAA0H,cAAA,UACAurH,EAAAroH,YAAAwtE,GACA26C,EAAAnoH,YAAAqoH,GAGA,IAAAC,EAAAlzH,SAAA0H,cAAA,OACAwrH,EAAA9mI,UAAA,4BACA8mI,EAAAzqH,MAAA6f,QAAA,OACA,IAAA6qG,EAAArnI,KAAAqnI,oBAAAnzH,SAAA0H,cAAA,UACAwrH,EAAAtoH,YAAAuoH,GACAJ,EAAAnoH,YAAAsoH,GAGAJ,EAAAnoH,WAAAsE,aAAA8jH,EAAAD,GACAA,EAAArqH,MAAA6f,QAAA,OACAyqG,EAAAnoH,YAAAkoH,GAGAhnI,KAAA0lI,iBAAAuB,EACAjnI,KAAAgmI,qBAAAgB,EAEAhnI,KAAAsnI,QAAA,IAAArC,EAAAiC,IAOAvB,iBAAA,WACA3lI,KAAAqzC,OAAA,IAAAjB,EAAAW,OAAA/yC,KAAAssF,eACAtN,WAAA,EACAnR,gBAAA7tE,KAAAkF,QAAA2oE,kBAGA7tE,KAAA8lI,aAAA,IAAA1zF,EAAAW,OAAA/yC,KAAAqnI,qBACAroD,WAAA,EACAnR,gBAAA7tE,KAAAkF,QAAA2oE,kBAGA7tE,KAAA+lI,YAAA,IAAA3zF,EAAA6nB,MAAAj6D,KAAAgmI,sBAEA9iD,YAAA,EACA5oD,SAAA,EACA87D,eAAA,EACAC,eAAA,EACA5O,cAAA,EACAtB,cAAA,EACAC,cAAA,EACAkQ,gBAAA,EACAJ,aAAA,EACApT,YAAA,IAGA9iF,KAAA8lI,aAAAr8H,IAAAzJ,KAAA+lI,aAGA,IAAA9sB,EAAA+rB,EAAAhlI,KAAA+lI,aACAztC,EAAA2gB,EAAAn4E,MACAy3D,EAAA0gB,EAAAl4E,OAEA/gC,KAAA8lI,aAAAt1D,SAAA8nB,GACAt4F,KAAA8lI,aAAAp1D,UAAA6nB,GACAv4F,KAAA8lI,aAAAnxD,aAAA30E,KAAA+lI,aACA/lI,KAAA+lI,YAAAn0D,aAMAg0D,mBAAA,WACA,IAAA,IAAAlsI,KAAAqrI,EAAA,CACA,IAAAwC,EAAAxC,EAAArrI,GACAwL,EAAAlF,KAAAkF,QAAA0sB,QAAAl4B,IAGA,IAAAwL,IAIA6/H,EAAAvmI,eAAA9E,KAGAsG,KAAA4xB,QAAAl4B,GAAA,IAAA6tI,EAAAniI,KAAApF,KAAAkF,SAmCA,OA5BAsgI,EAAA74F,OAAAzyB,EAAA7G,QAAArM,SACAb,UAAA,SAEAzH,YAEAoG,KAAA,SAAA0gI,EAAAtgI,GACAlF,KAAAwlI,SAAAA,EACAxlI,KAAAkF,QAAAgV,EAAApa,SAAAE,KAAAtB,SAAAwG,MAMAsgI,EAAAgC,eAAAttH,EAAA7G,QAAArM,SACAb,UAAA,iBAEArB,KAAA,SAAAI,GACAlF,KAAAkF,QAAAA,KAKAsgI,EAAAiC,cAAA,SAAAj4G,GAGAu1G,EAAAv1G,EAAA91B,MAAA81B,GAGA51B,EAAAC,OAAA,gBAAA2rI,KAKAtsI,OAAA,sCACA,sBACA,qBACA,qBACA,iBACA,eACA,SAAAghB,EAAAuF,EAAAoC,EAAAuwB,EAAAozF,GACA,aAEA,IAAAkC,EAAAlC,EAAA74F,OAAA3lC,SACA2gI,oBAAA,KAEA7iI,KAAA,SAAA0gI,EAAAtgI,GACAlF,KAAA4G,UAAA4+H,EAAAtgI,GACAlF,KAAA2nI,uBACA3nI,KAAA4nI,eAEA5nI,KAAAwlI,SAAAnuG,iBAAA,sBAAAr3B,KAAA6nI,wBAAA77H,KAAAhM,QAGA8nI,KAAA,WACA,GAAA,IAAA9nI,KAAAwlI,SAAAS,gBAAA1sI,OAAA,CAIA,IAAAwuI,EAAA/nI,KAAAwlI,SAAAS,gBAAArmI,MACAI,KAAA2nI,oBAAApiI,QAAAwiI,GAEA/nI,KAAAwlI,SAAAsB,oBACA9mI,KAAAgoI,mBAGAC,KAAA,WACA,GAAA,IAAAjoI,KAAA2nI,oBAAApuI,OAAA,CAIA,IAAA2uI,EAAAloI,KAAA2nI,oBAAAhoI,QACAK,KAAAwlI,SAAAS,gBAAAjnI,KAAAkpI,GAEAloI,KAAAwlI,SAAAsB,oBACA9mI,KAAAgoI,mBAGAJ,aAAA,WACA,IAAAvC,EAAArlI,KAAAwlI,SAAA8B,QAAAlC,oBAeA,OAbAplI,KAAAmoI,WAAA9C,EAAAC,cACAt9G,MAAA,OACAjG,UAAA,IAGA/hB,KAAAooI,cAAA/C,EAAAC,cACAt9G,MAAA,OACAjG,UAAA,IAGA/hB,KAAAmoI,WAAA9wG,iBAAA,QAAAr3B,KAAA8nI,KAAA97H,KAAAhM,OACAA,KAAAooI,cAAA/wG,iBAAA,QAAAr3B,KAAAioI,KAAAj8H,KAAAhM,OAEAA,MAGAgoI,eAAA,WACAhoI,KAAAmoI,WAAAj3F,QAAA,IAAAlxC,KAAAwlI,SAAAS,gBAAA1sI,QACAyG,KAAAooI,cAAAl3F,QAAA,IAAAlxC,KAAA2nI,oBAAApuI,SAGAsuI,wBAAA,WACA7nI,KAAA2nI,uBACA3nI,KAAAgoI,oBAIAT,GACA7tI,KAAA,UACA0L,KAAAsiI,GAKA,OAFAlC,EAAAiC,cAAAF,GAEAA,IAKAruI,OAAA,sCACA,wBACA,sBACA,uBACA,oBACA,uBACA,SAAAU,EAAAsgB,EAAAxG,EAAAoZ,EAAA8O,GACA,IAAAysG,EAAA30H,EAAAqJ,qBAAA,aAYA,SAAAu0D,EAAApnC,EAAA/O,GACA,OAAA+O,EAAA,GAAAA,GAAA/O,EAAAA,EACA+O,EAAA,GAAAA,EAAA/O,GAAAA,EAAA,EAGA,SAAA/G,EAAAxU,EAAAnR,GACA,IAhBA65H,EAAAhlG,EAAAC,EACAglG,EAAAC,EAeAroF,GAhBAmoF,EAgBA75H,EAAA65H,OAhBAhlG,EAgBA70B,EAAA80B,EAhBAA,EAgBA90B,EAAA60B,EAfAilG,EAAAj/H,KAAA6vC,IAAAmvF,GAAAE,EAAAl/H,KAAAgwC,IAAAgvF,IAEAG,IAAAF,EAAAjlG,EACAolG,KAAAF,EAAAjlG,EACAolG,IAAAH,EAAAllG,EACAslG,IAAAL,EAAAhlG,IAWA3H,EAAAnM,IAAA7P,EAAAyoH,EAAA,UACAloF,EAAAsoF,IAAAv2F,QAAA,IAAA,IAAAiO,EAAAwoF,IAAAz2F,QAAA,IAAA,IACAiO,EAAAuoF,IAAAx2F,QAAA,IAAA,IAAAiO,EAAAyoF,IAAA12F,QAAA,IAAA,WAIA,SAAA22F,EAAAjpH,EAAAnR,GACA,IAAAA,EAQA,OALAA,EAAAqe,EAAA3jB,KAAAyW,EAAA,kBACA0oH,OAAA75H,EAAA65H,QAAA,EACA75H,EAAA60B,EAAA70B,EAAA60B,GAAA,EACA70B,EAAA80B,EAAA90B,EAAA80B,GAAA,EACA90B,EAAA0sB,KAAA1sB,EAAA0sB,MAAA,EACA1sB,EAPAqe,EAAA3jB,KAAAyW,EAAA,YAAAnR,GAWA,IAAAq6H,GAEAlhG,SAAA,SAAAn5B,GACAA,EAAA65H,OAAAh/H,KAAA4vC,GAAAzqC,EAAA65H,OACA75H,EAAA80B,IAAA,GAIAoE,WAAA,SAAAl5B,GACAA,EAAA65H,OAAAh/H,KAAA4vC,GAAAzqC,EAAA65H,OACA75H,EAAA60B,IAAA,GAIA8a,OAAA,SAAA3vC,EAAAs6H,GACAt6H,EAAA65H,OAAAS,EAAAz/H,KAAA4vC,GAAA,KAIAzgB,KAAA,SAAAhqB,GACAA,EAAA65H,QAAAh/H,KAAA4vC,GAAA,GAIArgB,MAAA,SAAApqB,GACAA,EAAA65H,QAAAh/H,KAAA4vC,GAAA,GAIAhP,MAAA,SAAAz7B,EAAA0sB,GACA,IAAA6tG,EAAA13D,EAAA7iE,EAAA80B,EAAApI,GAAA8tG,EAAA33D,EAAA7iE,EAAA60B,EAAAnI,GACA6tG,GAAAC,IACAx6H,EAAA80B,GAAAylG,EACAv6H,EAAA60B,GAAA2lG,IAKAC,OAAA,SAAAz6H,GACAq6H,EAAA5+F,MAAAz7B,EAAA,KAIA06H,QAAA,SAAA16H,GACAq6H,EAAA5+F,MAAAz7B,GAAA,MAkBA,SAAA66B,IACA,OAAAA,EAoBA,OAjBA,WAAA,aAAA,SAAA,OAAA,QAAA,QAAA,OAAA,SAAA,WAAAnvC,QAAA,SAAAT,GAhBA,IAAA0vI,EAiBA9/F,EAAA5vC,IAjBA0vI,EAiBAN,EAAApvI,GAhBA,WACA,IAAA8F,EAAA0a,EAAArW,UAAAnE,WACAkgB,EAAApgB,EAAAG,QACA8O,EAAAo6H,EAAAjpH,GACApgB,EAAA+F,QAAAkJ,GACA26H,EAAArpI,MAAAC,KAAAR,GACA40B,EAAAxU,EAAAnR,GACAo6H,EAAAjpH,EAAAnR,OAYAyL,EAAApa,MAAAwpC,GACAphB,MAAA,SAAAtI,GACA,IAAAnR,GACA60B,EAAA,EACAC,EAAA,EACA+kG,OAAA,GAEAl0G,EAAAxU,EAAAnR,GACAo6H,EAAAjpH,EAAAnR,MAKA7U,EAAAC,OAAA,kBAAAyvC,KAGApwC,OAAA,gCACA,gBACA,SAAAowC,GACA,OAAAA,IAEApwC,OAAA,2BAAA,gCAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,8BACA,wBACA,sBACA,uBACA,qBACA,sBACA,oBACA,sBACA,oBACA,0BACA,sBACA,SAAAU,EAAAsgB,EAAA+e,EAAAxZ,EAAAgL,EAAAqY,EAAAlH,EAAA9O,EAAAwc,EAAAznB,GAEA,SAAAwnH,EAAAC,GACApvH,EAAAjf,QAAAquI,KACAA,GAAAA,IAEA,IAAAC,EAAAD,EAAA/vI,OACAiwI,EAAA,EACAC,EAAA,EACAC,EAAA,EACAj7H,EAAA,IAAAyL,EAAAzS,SAGA,SAAAiiC,IAEAj7B,EAAAL,SACAxG,MAAA2hI,EACAI,UAAAF,EACAG,SAAAF,EACAJ,KAAAA,IAIA,SAAAr6H,EAAAyS,EAAAmoH,GAEAL,IACAK,EACAJ,IAEAC,IAIAj7H,EAAAQ,UACAyS,IAAAA,EACAmoH,SAAAA,EACAC,WAAAN,EACA5hI,MAAA2hI,EACAD,KAAAA,IAIAE,GAAAD,GACA7/F,IA8BA,OAHAxvB,EAAA5N,MAvBA,WACA,IAAAg9H,EAAA/vI,OAEA,YADAmwC,IAIA4/F,EAAAnvI,QAAA,SAAAunB,GACAqoH,EAAAroH,GACAzS,EAAAyS,EAAAmoH,EAAAnoH,IAEAuX,EAAAznB,GAAAkQ,GACA8T,KAAA,WACAvmB,EAAAyS,GAAA,IAGAlS,MAAA,WACAP,EAAAyS,GAAA,UASAjT,EAAAN,QAAAo7H,WAAAA,EACA96H,EAAAN,QAIA,SAAA47H,EAAAroH,GACA,OAAAA,EAAAgoB,eAAA5sC,IAAA4kB,EAAA+qD,aAGA,SAAAo9D,EAAAnoH,GACA,OAAAA,EAAAgoB,UAAA,IAAAhoB,EAAA+qD,aAGA,SAAAkoB,EAAAp2E,EAAArZ,GACA,IAAAokI,KAIA,SAAAU,EAAAC,GAEA,IACAlhI,EADA,0BACAsL,KAAAunB,EAAAnM,IAAAw6G,EAAA,qBACA3vH,EAAAvR,GAAAA,EAAA,GACA,GAAAuR,EAAA,CACA,IAAAoH,EAAA,IAAAu4C,MACAv4C,EAAA/gB,IAAA2Z,EACAgvH,EAAAtqI,KAAA0iB,IAKA,GAfAxc,EAAAA,MAeA,OAAAqZ,EAAAD,SACAgrH,EAAAtqI,KAAAuf,OACA,CAIA,IAFA,IAAA2rH,EAAAz/G,EAAAG,QAAArM,EAAA,OAEA9kB,EAAA,EAAAA,EAAAywI,EAAA3wI,OAAAE,IACA6vI,EAAAtqI,KAAAkrI,EAAAzwI,IAIA,IAAA,IAAAyL,EAAAywE,WACAq0D,EAAAzrH,QACA,GAAA,iBAAArZ,EAAAywE,WAAA,CACA,IAAA1yD,EAAAwH,EAAAG,QAAArM,EAAArZ,EAAAywE,YACA,IAAAl8E,EAAA,EAAAA,EAAAwpB,EAAA1pB,OAAAE,IACAuwI,EAAA/mH,EAAAxpB,KAKA,OAAA4vI,EAAAC,GAwBA,SAAAa,EAAAvqH,EAAA1a,GACA,IAAAwc,EACA/E,KACAikB,EAAAkC,EAAAlC,WAAAhhB,GACAwqH,EAAAllI,EAAAyvF,OACAzvF,EAAA0kI,SAEA,SAAA1tF,IACAtgB,EAAAnM,IAAA/N,GACAsd,KAAA4B,EAAAG,OAAArf,EAAAoB,cAAA,EAAA,KACA2V,MAAAmI,EAAAE,MAAApf,EAAA8F,aAAA,EAAA,OAGA8hB,EAAAphB,MAAAxG,GAEAka,EAAAnM,IAAA/N,GACAkpB,WAAA,YAGAw/F,GACAA,IAIA,SAAAjuF,KA4BA,SAAAkuF,EAAA/vH,GACAoH,EAAA/E,MAAAiuB,WAAA,SACAlpB,EAAA/gB,IAAA2Z,GA3BA,WAEA,aADAqC,EAAAif,EAAAnM,IAAA7P,GAAA,WAAA,cACA0C,UAAA,YAAA3F,EAAA2F,UACAsZ,EAAAnM,IAAA7P,EAAA,WAAA,YAEAgc,EAAAnM,IAAA7P,EAAA,WAAA,UAEA8B,EAAA,IAAAu4C,MAEAr+B,EAAAnM,IAAA/N,GACAY,SAAA,WACAgoH,OAAA,EAAA/iD,QAAA,EAAAv/C,OAAA,EAAAlH,MAAA,OAAAC,OAAA,OACA6J,WAAA,WAGAlpB,EAAAw6B,OAAAA,EACAx6B,EAAAy6B,QAAAA,EAEA18B,EAAAb,OAAAgB,EAAA8B,GAEAxc,EAAAoV,KACA+vH,EAAAnlI,EAAAoV,KAeAg1B,GAEA,IAAAzoC,GACA2uB,KAAA60G,EACAnyD,QAVA,WACAz4D,EAAA/V,OAAAgY,GACAka,EAAAnM,IAAA7P,EAAAjD,GACA+E,EAAAA,EAAAw6B,OAAAx6B,EAAAy6B,QAAA,OAoBA,OAVA,WAAA,aAAA,SAAA,OAAA,QAAA,QAAA,OAAA,SAAA,UAAA,SAAAhiD,QACA,SAAAT,GACAmN,EAAAnN,GAAA,WACA,IAAA8F,EAAA0a,EAAArW,UAAAnE,WACAF,EAAA+F,QAAAmc,GACA4nB,EAAA5vC,GAAAqG,MAAA,KAAAP,MAKAqH,EAOA,SAAA0jI,IACA,OAAAA,EAyBA,OAtHA1oH,EAAAzd,GAAAomI,aAAA,SAAAtlI,GACA,OAAAyvF,EAAA30F,KAAAkF,IAuFA2c,EAAAzd,GAAAqmI,aAAA,SAAAvlI,GACA,OAAAilI,EAAAnqI,KAAAkF,IAOAqlI,EAAAvzH,UAAA,SAAA4I,EAAA1a,MAGA,WAAA,aAAA,SAAA,OAAA,QAAA,QAAA,OAAA,SAAA,UAAA,SAAA/K,QACA,SAAAT,GACA6wI,EAAAvzH,UAAAtd,GAAA4vC,EAAA5vC,KAKAwgB,EAAApa,MAAAyqI,GACAR,YAAAA,EAEAF,SAAAA,EAEAl1C,OAAAA,EAEA+1C,QAjIA,SAAAC,EAAAzlI,GACAgV,EAAApf,SAAA6vI,KACAA,GAAAA,IAEA,IAAAJ,KAQA,OANAI,EAAAxwI,QAAA,SAAAmgB,GACA,IAAAoH,EAAA,IAAAu4C,MACAv4C,EAAA/gB,IAAA2Z,EACAiwH,EAAAvrI,KAAA0iB,KAGA2nH,EAAAkB,IAuHAJ,OAAAA,IAGAvwI,EAAAC,OAAA,cAAA0wI,KAGArxI,OAAA,4BACA,YACA,SAAAqxI,GACA,OAAAA,IAEArxI,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,mCACA,sBACA,qBACA,sBACA,qBACA,iBACA,eACA,SAAAghB,EAAAuF,EAAA8qH,EAAA1oH,EAAAuwB,EAAAozF,GACA,aAcA,IAAAoF,EAAApF,EAAAgC,eAAAxgI,SACA2/H,oBAAA,SAAAtzF,EAAArrB,EAAA1d,GAEA,IAAAugI,EAAA,IAAA5wE,MAEAg/C,EAjBA,SAAAjxF,GAKA,OACA+Y,OAAAz3B,KAAA06B,IAAAhc,EAAAm3E,iBAAA71F,KAAAgwC,IAAAtxB,EAAA/e,IAAA,SAAAK,KAAA4vC,GAAA,MAAA5vC,KAAA06B,IAAAhc,EAAAk5E,kBAAA53F,KAAA6vC,IAAAnxB,EAAA/e,IAAA,SAAAK,KAAA4vC,GAAA,MACApY,MAAAx3B,KAAA06B,IAAAhc,EAAAk5E,kBAAA53F,KAAAgwC,IAAAtxB,EAAA/e,IAAA,SAAAK,KAAA4vC,GAAA,MAAA5vC,KAAA06B,IAAAhc,EAAAm3E,iBAAA71F,KAAA6vC,IAAAnxB,EAAA/e,IAAA,SAAAK,KAAA4vC,GAAA,OAUA8rF,CAAAh9G,GACA8iH,EAAA7xB,EAAAn4E,MACAiqG,EAAA9xB,EAAAl4E,OAEAtI,EAAAz4B,KAAAkF,QAAAuzB,KAAAqyG,EACA9rG,EAAAh/B,KAAAkF,QAAA85B,IAAA+rG,EACAjqG,EAAAx3B,KAAAwoC,IAAA9xC,KAAAkF,QAAA47B,MAAAgqG,EAAAA,EAAAryG,GACAsI,EAAAz3B,KAAAwoC,IAAA9xC,KAAAkF,QAAA67B,OAAAgqG,EAAAA,EAAA/rG,GAEA6rG,EAAAlqI,IAAA0yC,EAAAoL,WACAhmB,KAAAA,EACAuG,IAAAA,EACA8B,MAAAA,EACAC,OAAAA,IAGAwpG,EAAA51C,OAAAk2C,GAAAvjI,KAAA,WAEA,KAAAy5B,EAAA,GAAAD,EAAA,GAAA,CAGA,IAAAkqG,EAAA,IAAA54F,EAAA6nB,MAAA4wE,GAEA3nD,YAAA,EACA5oD,SAAA,EACA87D,eAAA,EACAC,eAAA,EACA5O,cAAA,EACAtB,cAAA,EACAC,cAAA,EACAkQ,gBAAA,EACAJ,aAAA,EACApT,YAAA,IAGAhiD,EAAA+pG,EAAA/pG,MACAC,EAAA8pG,EAAA9pG,OAGAsS,EAAAm9B,SAAA1vC,GACAuS,EAAAq9B,UAAA3vC,GAGAsS,EAAA3pC,OAAAse,GACAqrB,EAAA5pC,IAAAuhI,GAEA1gI,EAAA0gI,SAKAC,EAAA74F,EAAAlkB,KAAAvpB,YAAAytC,EAAAqrC,MACAhD,QAAA,SAAAhqE,GACAzQ,KAAAunD,UAAA,UAAA92C,GAEAA,EAAA4iC,OAAA,IAIAyM,EAAA9/C,KAAA8/C,OAAA,EAAA,EACAC,EAAA//C,KAAA+/C,OAAA,EAAA,EACAX,EAAAU,EAAA9/C,KAAAo/C,OACAC,EAAAU,EAAA//C,KAAAq/C,OAEA5uC,EAAAy5B,MAAAkV,EAAAC,GAIAr/C,KAAA0zE,eAAAjjE,QAGA3T,IAAA2T,EAAA6nE,YACA7nE,EAAA6nE,aAhBA,EAAA,SAiBAx7E,IAAA2T,EAAAy6H,UACAz6H,EAAAy6H,SAlBA,EAAA,IAqBAz6H,EAAAsoE,YAAA,qBACA/4E,KAAAmrI,eAAA16H,GACAzQ,KAAAorI,YAAA36H,GAGAA,EAAAyqF,eA1BA,EA2BAzqF,EAAAsoE,YAAA,2BACA/4E,KAAAmrI,eAAA16H,GACAzQ,KAAAorI,YAAA36H,GAGAA,EAAAy5B,MAAA,EAAAkV,EAAA,EAAAC,IAGAq0B,eAAA,SAAAjjE,GACA,IAAA4iC,EAAA5iC,EAAA4iC,OAiBAwR,EAAAv7C,KAAAk6C,MAAAxjD,KAAAm/F,iBAAA,EAAAn/F,KAAAy4B,MACAssB,EAAAz7C,KAAAk6C,MAAAxjD,KAAAm/F,iBAAA,GACA1hD,EAAAn0C,KAAAk6C,KAAAxjD,KAAAm/F,iBAAA,GACAl6C,EAAA37C,KAAAk6C,KAAAxjD,KAAAm/F,iBAAA,GAAA9rD,EAAAvS,MAAA9gC,KAAAm/F,iBAAAn/F,KAAAy4B,OAEAqsB,EAAAx7C,KAAAk6C,MAAAxjD,KAAAkhG,kBAAA,EAAAlhG,KAAAg/B,KACAgmB,EAAA17C,KAAAk6C,MAAAxjD,KAAAkhG,kBAAA,GACAxjD,EAAAp0C,KAAAk6C,KAAAxjD,KAAAkhG,kBAAA,GACAh8C,EAAA57C,KAAAk6C,KAAAxjD,KAAAkhG,kBAAA,GAAA7tD,EAAAtS,OAAA/gC,KAAAkhG,kBAAAlhG,KAAAg/B,MAEAvuB,EAAAquC,YAIAruC,EAAA0tC,OAAA0G,EAAA,EAAAC,EAAA,GACAr0C,EAAA0jE,OAAAlvB,EAAA,EAAAH,EAAA,GACAr0C,EAAA0jE,OAAAlvB,EAAA,EAAAC,EAAA,GACAz0C,EAAA0jE,OAAAtvB,EAAA,EAAAK,EAAA,GACAz0C,EAAA0jE,OAAAtvB,EAAA,EAAAC,EAAA,GACAr0C,EAAA2jE,YAGA3jE,EAAA0tC,OAAA4G,EAAAC,GACAv0C,EAAA0jE,OAAApvB,EAAArH,GACAjtC,EAAA0jE,OAAA12B,EAAAC,GACAjtC,EAAA0jE,OAAA12B,EAAAuH,GACAv0C,EAAA0jE,OAAApvB,EAAAC,GAEAv0C,EAAA2jE,YACA3jE,EAAAwmC,QAGAk0F,eAAA,SAAA16H,GACAA,EAAAquC,YACAruC,EAAA0tC,QAAAn+C,KAAAm/F,iBAAA,GAAAn/F,KAAAkhG,kBAAA,GACAzwF,EAAA0jE,OAAAn0E,KAAAm/F,iBAAA,GAAAn/F,KAAAkhG,kBAAA,GACAzwF,EAAA0jE,OAAAn0E,KAAAm/F,iBAAA,EAAAn/F,KAAAkhG,kBAAA,GACAzwF,EAAA0jE,QAAAn0E,KAAAm/F,iBAAA,EAAAn/F,KAAAkhG,kBAAA,GACAzwF,EAAA0jE,QAAAn0E,KAAAm/F,iBAAA,GAAAn/F,KAAAkhG,kBAAA,GACAzwF,EAAAmhD,UAGAw5E,YAAA,SAAA36H,GAGAA,EAAAquC,YACAruC,EAAA0tC,QAAAn+C,KAAAm/F,iBAAA,EAAA,EAAA,EAAAn/F,KAAAm/F,kBAAAn/F,KAAAkhG,kBAAA,GACAzwF,EAAA0jE,QAAAn0E,KAAAm/F,iBAAA,EAAA,EAAA,EAAAn/F,KAAAm/F,iBAAAn/F,KAAAkhG,kBAAA,GACAzwF,EAAAmhD,SACAnhD,EAAAquC,YACAruC,EAAA0tC,QAAAn+C,KAAAm/F,iBAAA,EAAA,EAAA,EAAAn/F,KAAAm/F,kBAAAn/F,KAAAkhG,kBAAA,GACAzwF,EAAA0jE,QAAAn0E,KAAAm/F,iBAAA,EAAA,EAAA,EAAAn/F,KAAAm/F,iBAAAn/F,KAAAkhG,kBAAA,GACAzwF,EAAAmhD,SAEAnhD,EAAAquC,YACAruC,EAAA0tC,QAAAn+C,KAAAm/F,iBAAA,GAAAn/F,KAAAkhG,kBAAA,EAAA,EAAA,EAAAlhG,KAAAkhG,mBACAzwF,EAAA0jE,OAAAn0E,KAAAm/F,iBAAA,GAAAn/F,KAAAkhG,kBAAA,EAAA,EAAA,EAAAlhG,KAAAkhG,mBACAzwF,EAAAmhD,SACAnhD,EAAAquC,YACAruC,EAAA0tC,QAAAn+C,KAAAm/F,iBAAA,GAAAn/F,KAAAkhG,kBAAA,EAAA,EAAA,EAAAlhG,KAAAkhG,mBACAzwF,EAAA0jE,OAAAn0E,KAAAm/F,iBAAA,GAAAn/F,KAAAkhG,kBAAA,EAAA,EAAA,EAAAlhG,KAAAkhG,mBACAzwF,EAAAmhD,YAIAy5E,EAAA7F,EAAA74F,OAAA3lC,SAEAqhG,OAAA,KACAC,OAAA,KAGAgjC,cAAA,EACAC,WAAA,EACAC,SAAA,EAEA9sI,UAEAwnI,UAAA,EACApD,SAAA,EAEAqD,MAAA,KAEAsF,cAAA,GAGA3mI,KAAA,SAAA0gI,EAAAtgI,GACAlF,KAAA4G,UAAA4+H,EAAAtgI,GACA,IAAAmgI,EAAArlI,KAAAwlI,SAAA8B,QAAAlC,oBAEAplI,KAAA0rI,WAAArG,EAAAC,cACAt9G,MAAA,SAEAhoB,KAAA2rI,SAAAtG,EAAAC,cACAt9G,MAAA,OACA9tB,KAAA,UACAy1B,MAAA,IAEA3vB,KAAA4rI,aAAAvG,EAAAC,cACAt9G,MAAA,QACA9tB,KAAA,SACAy1B,MAAA,IAIA3vB,KAAA0rI,WAAAr0G,iBAAA,QAAAr3B,KAAA6rI,WAAA7/H,KAAAhM,OACAA,KAAA2rI,SAAAt0G,iBAAA,QAAAr3B,KAAA8rI,gBAAA9/H,KAAAhM,OACAA,KAAA4rI,aAAAv0G,iBAAA,QAAAr3B,KAAA+rI,aAAA//H,KAAAhM,OAGAA,KAAAwlI,SAAAnyF,OAAA7hC,GAAA,aAAAxR,KAAAo6E,YAAApuE,KAAAhM,OACAA,KAAAwlI,SAAAnyF,OAAA7hC,GAAA,aAAAxR,KAAA06E,YAAA1uE,KAAAhM,OACAA,KAAAwlI,SAAAnyF,OAAA7hC,GAAA,WAAAxR,KAAA46E,UAAA5uE,KAAAhM,OACAA,KAAAwlI,SAAAnyF,OAAA7hC,GAAA,gBAAAxR,KAAAgsI,eAAAhgI,KAAAhM,OACAA,KAAAwlI,SAAAnyF,OAAA7hC,GAAA,iBAAAxR,KAAAisI,gBAAAjgI,KAAAhM,OAEAoyC,EAAAlkB,KAAA65B,YAAA7zC,SAAA,UAAAlU,KAAA68H,UAAA7wH,KAAAhM,OACAoyC,EAAAlkB,KAAA65B,YAAA7zC,SAAA,QAAAlU,KAAA88H,QAAA9wH,KAAAhM,OAEAA,KAAAwlI,SAAAnuG,iBAAA,sBAAAr3B,KAAA+rI,aAAA//H,KAAAhM,QAIAgsI,eAAA,SAAA36H,GACA,GAAArR,KAAAksI,WAAA,CAIA,IAAAj5C,EAAA5hF,EAAAlS,OACA,GAAA8zF,IAAAjzF,KAAAmsI,SAAA,CAGA,IAAA94F,EAAArzC,KAAAwlI,SAAAnyF,OACA/P,EAAA2vD,EAAAx6D,KAAA8K,EAAA0vD,EAAAj0D,IACAhrB,EAAAi/E,EAAAkM,iBAAArgC,EAAAm0B,EAAAiO,kBACArmD,EAAAxH,EAAAi9B,WAAAt8D,EACAgnC,EAAA3H,EAAAk9B,YAAAzR,EAEAx7B,EAAA,GACA2vD,EAAAh7E,IAAA,OAAA,GACAsrB,EAAA,GACA0vD,EAAAh7E,IAAA,MAAA,GACAqrB,EAAAuX,GACAo4C,EAAAh7E,IAAA,OAAA4iC,GACAtX,EAAAyX,GACAi4C,EAAAh7E,IAAA,MAAA+iC,GAEAh7C,KAAAwlI,SAAAhrG,cAAA,kBAIAyxG,gBAAA,SAAA56H,GACA,GAAArR,KAAAksI,WAAA,CAIA,IAAAE,GAAA,EACAn5C,EAAA5hF,EAAAlS,OACA,GAAA8zF,IAAAjzF,KAAAmsI,SAAA,CAGA,IAAA94F,EAAArzC,KAAAwlI,SAAAnyF,OACAgnC,EAAAhnC,EAAA4U,WAAA52C,EAAA/D,GAIAstC,GAHAy/B,EAAA/2C,EACA+2C,EAAA92C,EAEA0vD,EAAAx6D,MACAsiB,EAAAk4C,EAAAj0D,IACA6b,EAAAo4C,EAAAx6D,KAAAw6D,EAAAkM,iBACAnkD,EAAAi4C,EAAAj0D,IAAAi0D,EAAAiO,kBAQA,GANA,OAAAlhG,KAAAkF,QAAAihI,QACAvrF,EAAA,GAAAC,EAAAxH,EAAAi9B,YAAAv1B,EAAA,GAAAC,EAAA3H,EAAAk9B,eACA67D,GAAA,GAIAxxF,EAAA,GAAAC,EAAAxH,EAAAi9B,YAAA87D,EAAA,CACA,IAAAC,EAAArsI,KAAAqsI,YAAA,EACAp5C,EAAAq5C,UAAAD,GAMA,GAJAzxF,EAAA,GACAq4C,EAAAs5C,QAAA,GAGAxxF,EAAA,GAAAC,EAAA3H,EAAAk9B,aAAA67D,EAAA,CACA,IAAAI,EAAAxsI,KAAAwsI,YAAA,EACAv5C,EAAAw5C,UAAAD,GAEAzxF,EAAA,GACAk4C,EAAAy5C,OAAA,GAGAz5C,EAAAhqF,IAAA,SAAAjJ,KAAAkF,QAAA49H,UACA7vC,EAAAkO,aAAAnhG,KAAAkF,QAAA49H,UAEA7vC,EAAAhqF,IAAA,UAAAjJ,KAAAkF,QAAAghI,WACAjzC,EAAAoO,cAAArhG,KAAAkF,QAAAghI,WAGAlmI,KAAAqsI,WAAAp5C,EAAAhqF,IAAA,UACAjJ,KAAAwsI,WAAAv5C,EAAAhqF,IAAA,UAEAjJ,KAAAwlI,SAAAhrG,cAAA,kBAIA4/C,YAAA,SAAA/oE,GACA,GAAArR,KAAAksI,WAAA,CAIA,IAAA74F,EAAArzC,KAAAwlI,SAAAnyF,OAGAA,EAAA+7B,aACA,IAAAiL,EAAAhnC,EAAA4U,WAAA52C,EAAA/D,GACAg2B,EAAA+2C,EAAA/2C,EACAC,EAAA82C,EAAA92C,EACAuW,EAAA,IAAA1H,EAAA6H,MAAA3W,EAAAC,GAGAkuC,EAAAp+B,EAAA62C,kBACAzY,IAAAzxE,KAAAmsI,UAAAnsI,KAAAmsI,SAAArqD,cAAAhoC,KAIAzG,EAAA23C,sBACAhrF,KAAAmsI,SAAAl0H,IAAA,QAAA,GACAjY,KAAAmsI,SAAAl0H,IAAA,SAAA,GACAjY,KAAAmsI,SAAAl0H,IAAA,SAAA,GACAjY,KAAAmsI,SAAAl0H,IAAA,SAAA,GAEAjY,KAAAqoG,OAAA/kE,EACAtjC,KAAAsoG,OAAA/kE,KAIAm3C,YAAA,SAAArpE,GAEA,GAAArR,KAAAsrI,aACA,OAAAtrI,KAAA2sI,mBAAAt7H,GAEA,GAAA,OAAArR,KAAAqoG,QAAA,OAAAroG,KAAAsoG,OAAA,CAIA,IAAAj1D,EAAArzC,KAAAwlI,SAAAnyF,OACAgnC,EAAAhnC,EAAA4U,WAAA52C,EAAA/D,GACAg2B,EAAA+2C,EAAA/2C,EACAC,EAAA82C,EAAA92C,EAEAvjC,KAAA4sI,gBAAA5sI,KAAAqoG,OAAAroG,KAAAsoG,OAAAhlE,EAAAC,KAGAopG,mBAAA,SAAAt7H,GACA,IAAAgiC,EAAArzC,KAAAwlI,SAAAnyF,OACAw5F,EAAA7sI,KAAAmsI,SAEA9xD,EAAAhnC,EAAA4U,WAAA52C,EAAA/D,GACAg2B,EAAA+2C,EAAA/2C,EACAC,EAAA82C,EAAA92C,EAEAspG,EAAAp0G,MAAAo0G,EAAA7tG,MACA6tG,EAAA50H,IAAA,MAAAsrB,GACAspG,EAAA50H,IAAA,OAAAqrB,IAGAtjC,KAAAurI,UAAAjoG,EAAAupG,EAAAp0G,KAAAo0G,EAAA/rG,MAAA,EACA9gC,KAAAwrI,QAAAjoG,EAAAspG,EAAA7tG,IAAA6tG,EAAA9rG,OAAA,EAEA/gC,KAAA4sI,gBACAtjI,KAAAwoC,IAAA+6F,EAAAp0G,KAAA6K,GACAh6B,KAAAwoC,IAAA+6F,EAAA7tG,IAAAuE,GACAj6B,KAAAwiB,IAAA+gH,EAAAp0G,KAAAo0G,EAAA/rG,MAAAwC,GACAh6B,KAAAwiB,IAAA+gH,EAAA7tG,IAAA6tG,EAAA9rG,OAAAwC,KAKAq3C,UAAA,SAAAvpE,GACA,GAAA,OAAArR,KAAAqoG,QAAA,OAAAroG,KAAAsoG,OAAA,CAIA,IAAAj1D,EAAArzC,KAAAwlI,SAAAnyF,OACArzC,KAAAmsI,SAAAv6D,YACAv+B,EAAAs3C,gBAAA3qF,KAAAmsI,UACA94F,EAAA+7B,aAEApvE,KAAAqoG,OAAA,KACAroG,KAAAsoG,OAAA,OAGAu0B,UAAA,SAAAxrH,IACA,IAAArR,KAAAkF,QAAAumI,cAAAp6H,EAAAyoB,UAAA95B,KAAAkF,QAAAumI,cAAAzrI,KAAAsrI,eAIAtrI,KAAAsrI,cAAA,EACAtrI,KAAAwlI,SAAAnyF,OAAA23C,sBACAhrF,KAAAmsI,SAAAl0H,IAAA,QAAA,GACAjY,KAAAmsI,SAAAl0H,IAAA,SAAA,GACAjY,KAAAmsI,SAAAl0H,IAAA,SAAA,GACAjY,KAAAmsI,SAAAl0H,IAAA,SAAA,GACAjY,KAAAmsI,SAAAl0H,IAAA,MAAA,GACAjY,KAAAmsI,SAAAl0H,IAAA,OAAA,KAGA6kH,QAAA,SAAAzrH,IACA,IAAArR,KAAAkF,QAAAumI,cAAAp6H,EAAAyoB,UAAA95B,KAAAkF,QAAAumI,cAAAzrI,KAAAsrI,eAIAtrI,KAAAsrI,cAAA,EACAtrI,KAAAqoG,OAAA,EACAroG,KAAAsoG,OAAA,EACAtoG,KAAA46E,cAGAkyD,WAAA,SAAAxpG,EAAAC,EAAAzC,EAAAC,EAAAgsG,GACA/sI,KAAAksI,YACAlsI,KAAAgtI,eAEAD,EAGA/sI,KAAAmsI,SAAAl0H,KACAwgB,KAAA6K,EACAtE,IAAAuE,EACAzC,MAAAA,EACAC,OAAAA,IANA/gC,KAAA4sI,gBAAAtpG,EAAAC,EAAAD,EAAAxC,EAAAyC,EAAAxC,GAUA,IAAAsS,EAAArzC,KAAAwlI,SAAAnyF,OACAA,EAAAkkC,aAAAv3E,KAAAmsI,UACAnsI,KAAAmsI,SAAAv6D,YACAv+B,EAAAs3C,gBAAA3qF,KAAAmsI,UACA94F,EAAA+7B,aAEApvE,KAAAwlI,SAAAhrG,cAAA,gBAGAqxG,WAAA,WACA7rI,KAAAksI,WAGAlsI,KAAA+rI,eAFA/rI,KAAAgtI,gBAKAlB,gBAAA,WACA,GAAA9rI,KAAAksI,cAIAlsI,KAAAmsI,SAAArrG,MAAA,GAAA9gC,KAAAmsI,SAAAprG,OAAA,GAAA,CAGA,IAAA/Y,EAAAhoB,KAAAwlI,SAAAx9G,MAGAgX,EAAAh/B,KAAAmsI,SAAAljI,IAAA,OAAA+e,EAAA/e,IAAA,OACAwvB,EAAAz4B,KAAAmsI,SAAAljI,IAAA,QAAA+e,EAAA/e,IAAA,QACA63B,EAAA9gC,KAAAmsI,SAAAljI,IAAA,SACA83B,EAAA/gC,KAAAmsI,SAAAljI,IAAA,UAGA+1B,EAAA,IACA+B,GAAA/B,EACAA,EAAA,GAGAvG,EAAA,IACAqI,GAAArI,EACAA,EAAA,GAMAz4B,KAAAwlI,SAAAmB,oBAAA,IAAAiE,GACA5rG,IAAAA,EAAAhX,EAAAk5E,kBACAzoE,KAAAA,EAAAzQ,EAAAm3E,iBACAr+D,MAAAA,EAAA9Y,EAAAm3E,iBACAp+D,OAAAA,EAAA/Y,EAAAk5E,uBAKAgrC,SAAA,WACA,YAAApvI,IAAAkD,KAAAmsI,UAIAa,aAAA,WACAhtI,KAAAmsI,SAAA,IAAAlB,GACAh0F,KAAA,cACA6rC,YAAA,EACAtG,QAAA,OACAC,QAAA,MAIAiZ,YAAA,OACAH,WAAA,EACAxS,oBAAA,EACA0E,cAAA,EACA0K,kBAAA,IAGA,OAAAnyF,KAAAkF,QAAAihI,OACAnmI,KAAAmsI,SAAAl0H,IAAA,kBAAA,GAGAjY,KAAAwlI,SAAAnyF,OAAA5pC,IAAAzJ,KAAAmsI,UACAnsI,KAAAwlI,SAAAnyF,OAAAqsC,cAAA,YAEA1/E,KAAA0rI,WAAAhsH,QAAA,GACA1f,KAAA2rI,SAAAh8G,MAAA,GACA3vB,KAAA4rI,aAAAj8G,MAAA,IAIAo8G,aAAA,gBACAjvI,IAAAkD,KAAAmsI,WAGAnsI,KAAAmsI,SAAA94F,OAAA3pC,OAAA1J,KAAAmsI,UACAnsI,KAAAmsI,cAAArvI,EAEAkD,KAAA0rI,WAAAhsH,QAAA,GACA1f,KAAA2rI,SAAAh8G,MAAA,GACA3vB,KAAA4rI,aAAAj8G,MAAA,GAEA3vB,KAAAwlI,SAAAnyF,OAAAqsC,cAAA,UAEA1/E,KAAAwlI,SAAAhrG,cAAA,iBAGAoyG,gBAAA,SAAApqF,EAAAC,EAAAT,EAAAC,GACA,IAAA5O,EAAArzC,KAAAwlI,SAAAnyF,OAEAgsF,EAAAr9E,EAAAQ,EACAyqF,GAAA5N,EACA6N,EAAAjrF,EAAAQ,EACA0qF,GAAAD,EAEApK,EAAAx5H,KAAAwoC,KAAA9xC,KAAAkF,QAAA49H,SAAAzvF,EAAAi9B,YACA41D,EAAA58H,KAAAwoC,KAAA9xC,KAAAkF,QAAAghI,UAAA7yF,EAAAk9B,aAGA68D,EAAA9jI,KAAAwoC,IAAA0Q,EAAAR,GACAqrF,EAAA/jI,KAAAwiB,IAAA02B,EAAAR,GACAsrF,EAAAhkI,KAAAwoC,IAAA2Q,EAAAR,GACAsrF,EAAAjkI,KAAAwiB,IAAA22B,EAAAR,GAGAmrF,EAAA9jI,KAAAwiB,IAAA,EAAAshH,GACAC,EAAA/jI,KAAAwoC,IAAAuB,EAAAi9B,WAAA+8D,GACAC,EAAAhkI,KAAAwiB,IAAA,EAAAwhH,GACAC,EAAAjkI,KAAAwoC,IAAAuB,EAAAk9B,YAAAg9D,GAGAF,EAAAD,EAAAtK,IACAzD,EACAgO,EAAAD,EAAAtK,EAEAsK,EAAAC,EAAAvK,GAEAyK,EAAAD,EAAApH,IACAgH,EACAK,EAAAD,EAAApH,EAEAoH,EAAAC,EAAArH,GAIAkH,EAAA,IAEAC,GAAA/jI,KAAA06B,IAAAopG,GACAA,EAAA,GAEAC,EAAAh6F,EAAAi9B,aAEA88D,GAAAC,EAAAh6F,EAAAi9B,WACA+8D,EAAAh6F,EAAAi9B,YAEAg9D,EAAA,IAEAC,GAAAjkI,KAAA06B,IAAAspG,GACAA,EAAA,GAEAC,EAAAl6F,EAAAk9B,cAEA+8D,GAAAC,EAAAl6F,EAAAk9B,YACAg9D,EAAAl6F,EAAAk9B,aAGA,IAAAzvC,EAAAusG,EAAAD,EACArsG,EAAAwsG,EAAAD,EACA7G,EAAA3lG,EAAAC,EAEA,GAAA/gC,KAAAkF,QAAAihI,QAAAnmI,KAAAkF,QAAAihI,QAAAM,EAAA,CACA,IAAAN,GAAAnmI,KAAAkF,QAAAihI,MAOA,GALAnmI,KAAAsrI,eACA2B,EAAAjtI,KAAAurI,UACA4B,EAAAntI,KAAAwrI,SAGA/E,EAAAN,EAAA,CACA,IAAAqH,EAAAzsG,EAAAolG,EACA8G,IACAG,GAAAI,EAAA1sG,GAEAA,EAAA0sG,OACA,GAAA/G,EAAAN,EAAA,CACA,IAAAsH,EAAA1sG,GAAAolG,EAAAplG,EAAAD,GACAqsG,IACAG,GAAAG,EAAA1sG,GAEAA,EAAA0sG,EAWA,GARAL,EAAA,IACAA,EAAA,GAGAE,EAAA,IACAA,EAAA,GAGAF,EAAAtsG,EAAAuS,EAAAi9B,WAAA,CACA,IAAAk9D,EAAAn6F,EAAAi9B,WAAA88D,EACArsG,EAAAysG,EAAAzsG,EAAAD,EACAA,EAAA0sG,EACAL,IACAG,EAAA7qF,EAAA1hB,GAGA,GAAAusG,EAAAvsG,EAAAsS,EAAAk9B,YAAA,CACA,IAAAk9D,EAAAp6F,EAAAk9B,YAAA+8D,EACAxsG,EAAAA,EAAA2sG,EAAA1sG,EACAA,EAAA0sG,EACAR,IACAG,EAAA5qF,EAAA1hB,IAMA9gC,KAAAmsI,SAAA1zG,KAAA20G,EACAptI,KAAAmsI,SAAAntG,IAAAsuG,EACAttI,KAAAmsI,SAAArrG,MAAAA,EACA9gC,KAAAmsI,SAAAprG,OAAAA,EAEA/gC,KAAAwlI,SAAAnyF,OAAAkkC,aAAAv3E,KAAAmsI,UAEAnsI,KAAAwlI,SAAAhrG,cAAA,kBAIA+sG,GACA7tI,KAAA,OACA0L,KAAAimI,GAKA,OAFA7F,EAAAiC,cAAAF,GAEAA,IAIAruI,OAAA,qCACA,sBACA,qBACA,qBACA,iBACA,eACA,SAAAghB,EAAAuF,EAAAoC,EAAAuwB,EAAAozF,GACA,aAEA,IAAAkI,EAAAlI,EAAAgC,eAAAxgI,SAEA2/H,oBAAA,SAAAtzF,EAAArrB,EAAA1d,GACA,IAGAw2B,EAAAC,EAHAqY,GAAApxB,EAAAoxB,MAAAp5C,KAAAkF,QAAAk0C,OAAA,IACApxB,EAAAo2B,OAAAhF,GAGArY,EAAAz3B,KAAA06B,IAAAhc,EAAAm3E,iBAAA71F,KAAAgwC,IAAAF,EAAA9vC,KAAA4vC,GAAA,MAAA5vC,KAAA06B,IAAAhc,EAAAk5E,kBAAA53F,KAAA6vC,IAAAC,EAAA9vC,KAAA4vC,GAAA,MACApY,EAAAx3B,KAAA06B,IAAAhc,EAAAk5E,kBAAA53F,KAAAgwC,IAAAF,EAAA9vC,KAAA4vC,GAAA,MAAA5vC,KAAA06B,IAAAhc,EAAAm3E,iBAAA71F,KAAA6vC,IAAAC,EAAA9vC,KAAA4vC,GAAA,MAEA7F,EAAAm9B,SAAA1vC,GACAuS,EAAAq9B,UAAA3vC,GAEAsS,EAAAshC,aAAA3sD,GACAA,EAAA4pD,YACAv+B,EAAAo/B,YAEAnoE,OAKAqjI,EAAAnI,EAAA74F,OAAA3lC,SACAlC,KAAA,SAAA0gI,EAAAtgI,GACAlF,KAAA4G,UAAA4+H,EAAAtgI,GACA,IAAAmgI,EAAArlI,KAAAwlI,SAAA8B,QAAAlC,oBAEAwI,EAAAvI,EAAAC,cACAt9G,MAAA,gBAGA6lH,EAAAxI,EAAAC,cACAt9G,MAAA,iBAGA4lH,EAAAv2G,iBAAA,QAAAr3B,KAAA8tI,WAAA9hI,KAAAhM,OACA6tI,EAAAx2G,iBAAA,QAAAr3B,KAAA+tI,YAAA/hI,KAAAhM,QAGA8tI,WAAA,WACA9tI,KAAAo+C,QAAA,KAGA2vF,YAAA,WACA/tI,KAAAo+C,OAAA,KAGAA,OAAA,SAAAhF,GACAp5C,KAAAwlI,SAAAmB,oBACA,IAAA+G,GAAAt0F,MAAAA,QAKAmuF,GACA7tI,KAAA,SACA0L,KAAAuoI,GAKA,OAFAnI,EAAAiC,cAAAF,GAEAA,IAIAruI,OAAA,mCACA,sBACA,qBACA,qBACA,iBACA,eACA,SAAAghB,EAAAuF,EAAAoC,EAAAuwB,EAAAozF,GACA,aAEA,IAAAwI,EAAAxI,EAAA74F,OAAA3lC,SAEAtI,UACAuC,SAAA,WACAjB,KAAAwlI,SAAAY,gBAIAthI,KAAA,SAAA0gI,EAAAtgI,GACAlF,KAAA4G,UAAA4+H,EAAAtgI,GAEA,IAAAmgI,EAAArlI,KAAAwlI,SAAA8B,QAAAlC,oBAEAplI,KAAAiuI,cAAA5I,EAAAC,cACAt9G,MAAA,SAGAhoB,KAAAiuI,cAAA52G,iBAAA,QAAAr3B,KAAAkF,QAAAjE,SAAA+K,KAAAhM,UAIAunI,GACA7tI,KAAA,OACA0L,KAAA4oI,GAKA,OAFAxI,EAAAiC,cAAAF,GAEAA,IAIAruI,OAAA,2BACA,aACA,oBACA,iBACA,mBACA,kBACA,SAAAssI,GACA,OAAAA,IAGAtsI,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA","file":"../skylark-darkroomjs-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return safeMixin(e, props);\r\n    };\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute(name);\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data, data.data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData, data);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-storages-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-storages-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-storages-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\"\r\n],function(files,velm,$){\r\n\tvelm.delegate([\r\n\t\t\"dropzone\",\r\n\t\t\"pastezone\",\r\n\t\t\"picker\"\r\n\t],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (this._elm.parentElement) {\r\n          // The widget is already in document\r\n          this._startup();\r\n        }\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = langx.Emitter.createEvent(type,{\r\n        data : params\r\n      });\r\n      return langx.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-fabric/canvas2d',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\treturn skylark.attach(\"intg.fabric\", {});\r\n});\ndefine('skylark-fabric/primitives/fabric',[],function(){\r\n\r\n  /* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\r\n  /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\r\n\r\n  var fabric =  { version: '3.6.2' };\r\n\r\n\r\n  /* _AMD_END_ */\r\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\r\n    fabric.document = document;\r\n    fabric.window = window;\r\n  }\r\n  else {\r\n    // assume we're running under node.js when document/window are not present\r\n    var jsdom = require('jsdom');\r\n    var virtualWindow = new jsdom.JSDOM(\r\n      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\r\n      {\r\n        features: {\r\n          FetchExternalResources: ['img']\r\n        },\r\n        resources: 'usable'\r\n      }).window;\r\n    fabric.document = virtualWindow.document;\r\n    fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\r\n    fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\r\n    fabric.window = virtualWindow;\r\n    DOMParser = fabric.window.DOMParser;\r\n  }\r\n\r\n  /**\r\n   * True when in environment that supports touch events\r\n   * @type boolean\r\n   */\r\n  fabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\r\n    (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\r\n\r\n  /**\r\n   * True when in environment that's probably Node.js\r\n   * @type boolean\r\n   */\r\n  fabric.isLikelyNode = typeof Buffer !== 'undefined' &&\r\n                        typeof window === 'undefined';\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * Attributes parsed from all SVG elements\r\n   * @type array\r\n   */\r\n  fabric.SHARED_ATTRIBUTES = [\r\n    'display',\r\n    'transform',\r\n    'fill', 'fill-opacity', 'fill-rule',\r\n    'opacity',\r\n    'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\r\n    'stroke-linejoin', 'stroke-miterlimit',\r\n    'stroke-opacity', 'stroke-width',\r\n    'id', 'paint-order', 'vector-effect',\r\n    'instantiated_by_use', 'clip-path'\r\n  ];\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\r\n   */\r\n  fabric.DPI = 96;\r\n  fabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\r\n  fabric.rePathCommand = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:[eE][-+]?\\d+)?)/ig;\r\n  fabric.reNonWord = /[ \\n\\.,;!\\?\\-]/;\r\n  fabric.fontPaths = { };\r\n  fabric.iMatrix = [1, 0, 0, 1, 0, 0];\r\n  fabric.svgNS = 'http://www.w3.org/2000/svg';\r\n\r\n  /**\r\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.perfLimitSizeTotal = 2097152;\r\n\r\n  /**\r\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.maxCacheSideLimit = 4096;\r\n\r\n  /**\r\n   * Lowest pixel limit for cache canvases, set at 256PX\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.minCacheSideLimit = 256;\r\n\r\n  /**\r\n   * Cache Object for widths of chars in text rendering.\r\n   */\r\n  fabric.charWidthsCache = { };\r\n\r\n  /**\r\n   * if webgl is enabled and available, textureSize will determine the size\r\n   * of the canvas backend\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.textureSize = 2048;\r\n\r\n  /**\r\n   * When 'true', style information is not retained when copy/pasting text, making\r\n   * pasted text use destination style.\r\n   * Defaults to 'false'.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  fabric.disableStyleCopyPaste = false;\r\n\r\n  /**\r\n   * Enable webgl for filtering picture is available\r\n   * A filtering backend will be initialized, this will both take memory and\r\n   * time since a default 2048x2048 canvas will be created for the gl context\r\n   * @since 2.0.0\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  fabric.enableGLFiltering = true;\r\n\r\n  /**\r\n   * Device Pixel Ratio\r\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\r\n   */\r\n  fabric.devicePixelRatio = fabric.window.devicePixelRatio ||\r\n                            fabric.window.webkitDevicePixelRatio ||\r\n                            fabric.window.mozDevicePixelRatio ||\r\n                            1;\r\n  /**\r\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\r\n   * which is unitless and not rendered equally across browsers.\r\n   *\r\n   * Values that work quite well (as of October 2017) are:\r\n   * - Chrome: 1.5\r\n   * - Edge: 1.75\r\n   * - Firefox: 0.9\r\n   * - Safari: 0.95\r\n   *\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default 1\r\n   */\r\n  fabric.browserShadowBlurConstant = 1;\r\n\r\n  /**\r\n   * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\r\n   * It was an internal variable, is accessible since version 2.3.4\r\n   */\r\n  fabric.arcToSegmentsCache = { };\r\n\r\n  /**\r\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\r\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\r\n   * you do not get any speed benefit and you get a big object in memory.\r\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\r\n   * can eventually clear it.\r\n   * It was an internal variable, is accessible since version 2.3.4\r\n   */\r\n  fabric.boundsOfCurveCache = { };\r\n\r\n  /**\r\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\r\n   * @default true\r\n   */\r\n  fabric.cachesBoundsOfCurve = true;\r\n\r\n  /**\r\n   * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\r\n   * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\r\n   * this has to be set before instantiating the filtering backend ( before filtering the first image )\r\n   * @type Boolean\r\n   * @default false\r\n   */\r\n  fabric.forceGLPutImageData = false;\r\n\r\n  fabric.initFilterBackend = function() {\r\n    if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\r\n      console.log('max texture size: ' + fabric.maxTextureSize);\r\n      return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\r\n    }\r\n    else if (fabric.Canvas2dFilterBackend) {\r\n      return (new fabric.Canvas2dFilterBackend());\r\n    }\r\n  };\r\n\r\n\r\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\r\n    // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\r\n    window.fabric = fabric;\r\n  }\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} eventName\r\n     * @param {Function} handler\r\n     */\r\n    function _removeEventListener(eventName, handler) {\r\n      if (!this.__eventListeners[eventName]) {\r\n        return;\r\n      }\r\n      var eventListener = this.__eventListeners[eventName];\r\n      if (handler) {\r\n        eventListener[eventListener.indexOf(handler)] = false;\r\n      }\r\n      else {\r\n        fabric.util.array.fill(eventListener, false);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Observes specified event\r\n     * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\r\n     * @memberOf fabric.Observable\r\n     * @alias on\r\n     * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n     * @param {Function} handler Function that receives a notification when an event of the specified type occurs\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    function observe(eventName, handler) {\r\n      if (!this.__eventListeners) {\r\n        this.__eventListeners = { };\r\n      }\r\n      // one object with key/value pairs was passed\r\n      if (arguments.length === 1) {\r\n        for (var prop in eventName) {\r\n          this.on(prop, eventName[prop]);\r\n        }\r\n      }\r\n      else {\r\n        if (!this.__eventListeners[eventName]) {\r\n          this.__eventListeners[eventName] = [];\r\n        }\r\n        this.__eventListeners[eventName].push(handler);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Stops event observing for a particular event handler. Calling this method\r\n     * without arguments removes all handlers for all events\r\n     * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\r\n     * @memberOf fabric.Observable\r\n     * @alias off\r\n     * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n     * @param {Function} handler Function to be deleted from EventListeners\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    function stopObserving(eventName, handler) {\r\n      if (!this.__eventListeners) {\r\n        return this;\r\n      }\r\n\r\n      // remove all key/value pairs (event name -> event handler)\r\n      if (arguments.length === 0) {\r\n        for (eventName in this.__eventListeners) {\r\n          _removeEventListener.call(this, eventName);\r\n        }\r\n      }\r\n      // one object with key/value pairs was passed\r\n      else if (arguments.length === 1 && typeof arguments[0] === 'object') {\r\n        for (var prop in eventName) {\r\n          _removeEventListener.call(this, prop, eventName[prop]);\r\n        }\r\n      }\r\n      else {\r\n        _removeEventListener.call(this, eventName, handler);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Fires event with an optional options object\r\n     * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\r\n     * @memberOf fabric.Observable\r\n     * @alias trigger\r\n     * @param {String} eventName Event name to fire\r\n     * @param {Object} [options] Options object\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    function fire(eventName, options) {\r\n      if (!this.__eventListeners) {\r\n        return this;\r\n      }\r\n\r\n      var listenersForEvent = this.__eventListeners[eventName];\r\n      if (!listenersForEvent) {\r\n        return this;\r\n      }\r\n\r\n      for (var i = 0, len = listenersForEvent.length; i < len; i++) {\r\n        listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\r\n      }\r\n      this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\r\n        return value !== false;\r\n      });\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @namespace fabric.Observable\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\r\n     * @see {@link http://fabricjs.com/events|Events demo}\r\n     */\r\n    fabric.Observable = {\r\n      observe: observe,\r\n      stopObserving: stopObserving,\r\n      fire: fire,\r\n\r\n      on: observe,\r\n      off: stopObserving,\r\n      trigger: fire\r\n    };\r\n  })();\r\n\r\n\r\n  /**\r\n   * @namespace fabric.Collection\r\n   */\r\n  fabric.Collection = {\r\n\r\n    _objects: [],\r\n\r\n    /**\r\n     * Adds objects to collection, Canvas or Group, then renders canvas\r\n     * (if `renderOnAddRemove` is not `false`).\r\n     * in case of Group no changes to bounding box are made.\r\n     * Objects should be instances of (or inherit from) fabric.Object\r\n     * Use of this function is highly discouraged for groups.\r\n     * you can add a bunch of objects with the add method but then you NEED\r\n     * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\r\n     * @param {...fabric.Object} object Zero or more fabric instances\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    add: function () {\r\n      this._objects.push.apply(this._objects, arguments);\r\n      if (this._onObjectAdded) {\r\n        for (var i = 0, length = arguments.length; i < length; i++) {\r\n          this._onObjectAdded(arguments[i]);\r\n        }\r\n      }\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\r\n     * An object should be an instance of (or inherit from) fabric.Object\r\n     * Use of this function is highly discouraged for groups.\r\n     * you can add a bunch of objects with the insertAt method but then you NEED\r\n     * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\r\n     * @param {Object} object Object to insert\r\n     * @param {Number} index Index to insert object at\r\n     * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    insertAt: function (object, index, nonSplicing) {\r\n      var objects = this._objects;\r\n      if (nonSplicing) {\r\n        objects[index] = object;\r\n      }\r\n      else {\r\n        objects.splice(index, 0, object);\r\n      }\r\n      this._onObjectAdded && this._onObjectAdded(object);\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\r\n     * @param {...fabric.Object} object Zero or more fabric instances\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    remove: function() {\r\n      var objects = this._objects,\r\n          index, somethingRemoved = false;\r\n\r\n      for (var i = 0, length = arguments.length; i < length; i++) {\r\n        index = objects.indexOf(arguments[i]);\r\n\r\n        // only call onObjectRemoved if an object was actually removed\r\n        if (index !== -1) {\r\n          somethingRemoved = true;\r\n          objects.splice(index, 1);\r\n          this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\r\n        }\r\n      }\r\n\r\n      this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Executes given function for each object in this group\r\n     * @param {Function} callback\r\n     *                   Callback invoked with current object as first argument,\r\n     *                   index - as second and an array of all objects - as third.\r\n     *                   Callback is invoked in a context of Global Object (e.g. `window`)\r\n     *                   when no `context` argument is given\r\n     *\r\n     * @param {Object} context Context (aka thisObject)\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    forEachObject: function(callback, context) {\r\n      var objects = this.getObjects();\r\n      for (var i = 0, len = objects.length; i < len; i++) {\r\n        callback.call(context, objects[i], i, objects);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns an array of children objects of this instance\r\n     * Type parameter introduced in 1.3.10\r\n     * since 2.3.5 this method return always a COPY of the array;\r\n     * @param {String} [type] When specified, only objects of this type are returned\r\n     * @return {Array}\r\n     */\r\n    getObjects: function(type) {\r\n      if (typeof type === 'undefined') {\r\n        return this._objects.concat();\r\n      }\r\n      return this._objects.filter(function(o) {\r\n        return o.type === type;\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Returns object at specified index\r\n     * @param {Number} index\r\n     * @return {Self} thisArg\r\n     */\r\n    item: function (index) {\r\n      return this._objects[index];\r\n    },\r\n\r\n    /**\r\n     * Returns true if collection contains no objects\r\n     * @return {Boolean} true if collection is empty\r\n     */\r\n    isEmpty: function () {\r\n      return this._objects.length === 0;\r\n    },\r\n\r\n    /**\r\n     * Returns a size of a collection (i.e: length of an array containing its objects)\r\n     * @return {Number} Collection size\r\n     */\r\n    size: function() {\r\n      return this._objects.length;\r\n    },\r\n\r\n    /**\r\n     * Returns true if collection contains an object\r\n     * @param {Object} object Object to check against\r\n     * @return {Boolean} `true` if collection contains an object\r\n     */\r\n    contains: function(object) {\r\n      return this._objects.indexOf(object) > -1;\r\n    },\r\n\r\n    /**\r\n     * Returns number representation of a collection complexity\r\n     * @return {Number} complexity\r\n     */\r\n    complexity: function () {\r\n      return this._objects.reduce(function (memo, current) {\r\n        memo += current.complexity ? current.complexity() : 0;\r\n        return memo;\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @namespace fabric.CommonMethods\r\n   */\r\n  fabric.CommonMethods = {\r\n\r\n    /**\r\n     * Sets object's properties from options\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _setOptions: function(options) {\r\n      for (var prop in options) {\r\n        this.set(prop, options[prop]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [filler] Options object\r\n     * @param {String} [property] property to set the Gradient to\r\n     */\r\n    _initGradient: function(filler, property) {\r\n      if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\r\n        this.set(property, new fabric.Gradient(filler));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [filler] Options object\r\n     * @param {String} [property] property to set the Pattern to\r\n     * @param {Function} [callback] callback to invoke after pattern load\r\n     */\r\n    _initPattern: function(filler, property, callback) {\r\n      if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\r\n        this.set(property, new fabric.Pattern(filler, callback));\r\n      }\r\n      else {\r\n        callback && callback();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _initClipping: function(options) {\r\n      if (!options.clipTo || typeof options.clipTo !== 'string') {\r\n        return;\r\n      }\r\n\r\n      var functionBody = fabric.util.getFunctionBody(options.clipTo);\r\n      if (typeof functionBody !== 'undefined') {\r\n        this.clipTo = new Function('ctx', functionBody);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setObject: function(obj) {\r\n      for (var prop in obj) {\r\n        this._set(prop, obj[prop]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\r\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\r\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    set: function(key, value) {\r\n      if (typeof key === 'object') {\r\n        this._setObject(key);\r\n      }\r\n      else {\r\n        if (typeof value === 'function' && key !== 'clipTo') {\r\n          this._set(key, value(this.get(key)));\r\n        }\r\n        else {\r\n          this._set(key, value);\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n\r\n    _set: function(key, value) {\r\n      this[key] = value;\r\n    },\r\n\r\n    /**\r\n     * Toggles specified property from `true` to `false` or from `false` to `true`\r\n     * @param {String} property Property to toggle\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    toggle: function(property) {\r\n      var value = this.get(property);\r\n      if (typeof value === 'boolean') {\r\n        this.set(property, !value);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Basic getter\r\n     * @param {String} property Property name\r\n     * @return {*} value of a property\r\n     */\r\n    get: function(property) {\r\n      return this[property];\r\n    }\r\n  };\r\n\r\n\r\n  (function(global) {\r\n\r\n    var sqrt = Math.sqrt,\r\n        atan2 = Math.atan2,\r\n        pow = Math.pow,\r\n        PiBy180 = Math.PI / 180,\r\n        PiBy2 = Math.PI / 2;\r\n\r\n    /**\r\n     * @namespace fabric.util\r\n     */\r\n    fabric.util = {\r\n\r\n      /**\r\n       * Calculate the cos of an angle, avoiding returning floats for known results\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} angle the angle in radians or in degree\r\n       * @return {Number}\r\n       */\r\n      cos: function(angle) {\r\n        if (angle === 0) { return 1; }\r\n        if (angle < 0) {\r\n          // cos(a) = cos(-a)\r\n          angle = -angle;\r\n        }\r\n        var angleSlice = angle / PiBy2;\r\n        switch (angleSlice) {\r\n          case 1: case 3: return 0;\r\n          case 2: return -1;\r\n        }\r\n        return Math.cos(angle);\r\n      },\r\n\r\n      /**\r\n       * Calculate the sin of an angle, avoiding returning floats for known results\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} angle the angle in radians or in degree\r\n       * @return {Number}\r\n       */\r\n      sin: function(angle) {\r\n        if (angle === 0) { return 0; }\r\n        var angleSlice = angle / PiBy2, sign = 1;\r\n        if (angle < 0) {\r\n          // sin(-a) = -sin(a)\r\n          sign = -1;\r\n        }\r\n        switch (angleSlice) {\r\n          case 1: return sign;\r\n          case 2: return 0;\r\n          case 3: return -sign;\r\n        }\r\n        return Math.sin(angle);\r\n      },\r\n\r\n      /**\r\n       * Removes value from an array.\r\n       * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} array\r\n       * @param {*} value\r\n       * @return {Array} original array\r\n       */\r\n      removeFromArray: function(array, value) {\r\n        var idx = array.indexOf(value);\r\n        if (idx !== -1) {\r\n          array.splice(idx, 1);\r\n        }\r\n        return array;\r\n      },\r\n\r\n      /**\r\n       * Returns random number between 2 specified ones.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} min lower limit\r\n       * @param {Number} max upper limit\r\n       * @return {Number} random value (between min and max)\r\n       */\r\n      getRandomInt: function(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n      },\r\n\r\n      /**\r\n       * Transforms degrees to radians.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} degrees value in degrees\r\n       * @return {Number} value in radians\r\n       */\r\n      degreesToRadians: function(degrees) {\r\n        return degrees * PiBy180;\r\n      },\r\n\r\n      /**\r\n       * Transforms radians to degrees.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} radians value in radians\r\n       * @return {Number} value in degrees\r\n       */\r\n      radiansToDegrees: function(radians) {\r\n        return radians / PiBy180;\r\n      },\r\n\r\n      /**\r\n       * Rotates `point` around `origin` with `radians`\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {fabric.Point} point The point to rotate\r\n       * @param {fabric.Point} origin The origin of the rotation\r\n       * @param {Number} radians The radians of the angle for the rotation\r\n       * @return {fabric.Point} The new rotated point\r\n       */\r\n      rotatePoint: function(point, origin, radians) {\r\n        point.subtractEquals(origin);\r\n        var v = fabric.util.rotateVector(point, radians);\r\n        return new fabric.Point(v.x, v.y).addEquals(origin);\r\n      },\r\n\r\n      /**\r\n       * Rotates `vector` with `radians`\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Object} vector The vector to rotate (x and y)\r\n       * @param {Number} radians The radians of the angle for the rotation\r\n       * @return {Object} The new rotated point\r\n       */\r\n      rotateVector: function(vector, radians) {\r\n        var sin = fabric.util.sin(radians),\r\n            cos = fabric.util.cos(radians),\r\n            rx = vector.x * cos - vector.y * sin,\r\n            ry = vector.x * sin + vector.y * cos;\r\n        return {\r\n          x: rx,\r\n          y: ry\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Apply transform t to point p\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {fabric.Point} p The point to transform\r\n       * @param  {Array} t The transform\r\n       * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\r\n       * @return {fabric.Point} The transformed point\r\n       */\r\n      transformPoint: function(p, t, ignoreOffset) {\r\n        if (ignoreOffset) {\r\n          return new fabric.Point(\r\n            t[0] * p.x + t[2] * p.y,\r\n            t[1] * p.x + t[3] * p.y\r\n          );\r\n        }\r\n        return new fabric.Point(\r\n          t[0] * p.x + t[2] * p.y + t[4],\r\n          t[1] * p.x + t[3] * p.y + t[5]\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of points's bounding rectangle (left, top, width, height)\r\n       * @param {Array} points 4 points array\r\n       * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix\r\n       * @return {Object} Object with left, top, width, height properties\r\n       */\r\n      makeBoundingBoxFromPoints: function(points, transform) {\r\n        if (transform) {\r\n          for (var i = 0; i < points.length; i++) {\r\n            points[i] = fabric.util.transformPoint(points[i], transform);\r\n          }\r\n        }\r\n        var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\r\n            minX = fabric.util.array.min(xPoints),\r\n            maxX = fabric.util.array.max(xPoints),\r\n            width = maxX - minX,\r\n            yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\r\n            minY = fabric.util.array.min(yPoints),\r\n            maxY = fabric.util.array.max(yPoints),\r\n            height = maxY - minY;\r\n\r\n        return {\r\n          left: minX,\r\n          top: minY,\r\n          width: width,\r\n          height: height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Invert transformation t\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} t The transform\r\n       * @return {Array} The inverted transform\r\n       */\r\n      invertTransform: function(t) {\r\n        var a = 1 / (t[0] * t[3] - t[1] * t[2]),\r\n            r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\r\n            o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\r\n        r[4] = -o.x;\r\n        r[5] = -o.y;\r\n        return r;\r\n      },\r\n\r\n      /**\r\n       * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number|String} number number to operate on\r\n       * @param {Number} fractionDigits number of fraction digits to \"leave\"\r\n       * @return {Number}\r\n       */\r\n      toFixed: function(number, fractionDigits) {\r\n        return parseFloat(Number(number).toFixed(fractionDigits));\r\n      },\r\n\r\n      /**\r\n       * Converts from attribute value to pixel value if applicable.\r\n       * Returns converted pixels or original value not converted.\r\n       * @param {Number|String} value number to operate on\r\n       * @param {Number} fontSize\r\n       * @return {Number|String}\r\n       */\r\n      parseUnit: function(value, fontSize) {\r\n        var unit = /\\D{0,2}$/.exec(value),\r\n            number = parseFloat(value);\r\n        if (!fontSize) {\r\n          fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n        }\r\n        switch (unit[0]) {\r\n          case 'mm':\r\n            return number * fabric.DPI / 25.4;\r\n\r\n          case 'cm':\r\n            return number * fabric.DPI / 2.54;\r\n\r\n          case 'in':\r\n            return number * fabric.DPI;\r\n\r\n          case 'pt':\r\n            return number * fabric.DPI / 72; // or * 4 / 3\r\n\r\n          case 'pc':\r\n            return number * fabric.DPI / 72 * 12; // or * 16\r\n\r\n          case 'em':\r\n            return number * fontSize;\r\n\r\n          default:\r\n            return number;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Function which always returns `false`.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {Boolean}\r\n       */\r\n      falseFunction: function() {\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Returns klass \"Class\" object of given namespace\r\n       * @memberOf fabric.util\r\n       * @param {String} type Type of object (eg. 'circle')\r\n       * @param {String} namespace Namespace to get klass \"Class\" object from\r\n       * @return {Object} klass \"Class\"\r\n       */\r\n      getKlass: function(type, namespace) {\r\n        // capitalize first letter only\r\n        type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\r\n        return fabric.util.resolveNamespace(namespace)[type];\r\n      },\r\n\r\n      /**\r\n       * Returns array of attributes for given svg that fabric parses\r\n       * @memberOf fabric.util\r\n       * @param {String} type Type of svg element (eg. 'circle')\r\n       * @return {Array} string names of supported attributes\r\n       */\r\n      getSvgAttributes: function(type) {\r\n        var attributes = [\r\n          'instantiated_by_use',\r\n          'style',\r\n          'id',\r\n          'class'\r\n        ];\r\n        switch (type) {\r\n          case 'linearGradient':\r\n            attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\r\n            break;\r\n          case 'radialGradient':\r\n            attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\r\n            break;\r\n          case 'stop':\r\n            attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\r\n            break;\r\n        }\r\n        return attributes;\r\n      },\r\n\r\n      /**\r\n       * Returns object of given namespace\r\n       * @memberOf fabric.util\r\n       * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\r\n       * @return {Object} Object for given namespace (default fabric)\r\n       */\r\n      resolveNamespace: function(namespace) {\r\n        if (!namespace) {\r\n          return fabric;\r\n        }\r\n\r\n        var parts = namespace.split('.'),\r\n            len = parts.length, i,\r\n            obj = global || fabric.window;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n          obj = obj[parts[i]];\r\n        }\r\n\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Loads image element from given url and passes it to a callback\r\n       * @memberOf fabric.util\r\n       * @param {String} url URL representing an image\r\n       * @param {Function} callback Callback; invoked with loaded image\r\n       * @param {*} [context] Context to invoke callback in\r\n       * @param {Object} [crossOrigin] crossOrigin value to set image element to\r\n       */\r\n      loadImage: function(url, callback, context, crossOrigin) {\r\n        if (!url) {\r\n          callback && callback.call(context, url);\r\n          return;\r\n        }\r\n\r\n        var img = fabric.util.createImage();\r\n\r\n        /** @ignore */\r\n        var onLoadCallback = function () {\r\n          callback && callback.call(context, img);\r\n          img = img.onload = img.onerror = null;\r\n        };\r\n\r\n        img.onload = onLoadCallback;\r\n        /** @ignore */\r\n        img.onerror = function() {\r\n          fabric.log('Error loading ' + img.src);\r\n          callback && callback.call(context, null, true);\r\n          img = img.onload = img.onerror = null;\r\n        };\r\n\r\n        // data-urls appear to be buggy with crossOrigin\r\n        // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\r\n        // see https://code.google.com/p/chromium/issues/detail?id=315152\r\n        //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\r\n        if (url.indexOf('data') !== 0 && crossOrigin) {\r\n          img.crossOrigin = crossOrigin;\r\n        }\r\n\r\n        // IE10 / IE11-Fix: SVG contents from data: URI\r\n        // will only be available if the IMG is present\r\n        // in the DOM (and visible)\r\n        if (url.substring(0,14) === 'data:image/svg') {\r\n          img.onload = null;\r\n          fabric.util.loadImageInDom(img, onLoadCallback);\r\n        }\r\n\r\n        img.src = url;\r\n      },\r\n\r\n      /**\r\n       * Attaches SVG image with data: URL to the dom\r\n       * @memberOf fabric.util\r\n       * @param {Object} img Image object with data:image/svg src\r\n       * @param {Function} callback Callback; invoked with loaded image\r\n       * @return {Object} DOM element (div containing the SVG image)\r\n       */\r\n      loadImageInDom: function(img, onLoadCallback) {\r\n        var div = fabric.document.createElement('div');\r\n        div.style.width = div.style.height = '1px';\r\n        div.style.left = div.style.top = '-100%';\r\n        div.style.position = 'absolute';\r\n        div.appendChild(img);\r\n        fabric.document.querySelector('body').appendChild(div);\r\n        /**\r\n         * Wrap in function to:\r\n         *   1. Call existing callback\r\n         *   2. Cleanup DOM\r\n         */\r\n        img.onload = function () {\r\n          onLoadCallback();\r\n          div.parentNode.removeChild(div);\r\n          div = null;\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Creates corresponding fabric instances from their object representations\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} objects Objects to enliven\r\n       * @param {Function} callback Callback to invoke when all objects are created\r\n       * @param {String} namespace Namespace to get klass \"Class\" object from\r\n       * @param {Function} reviver Method for further parsing of object elements,\r\n       * called after each fabric object created.\r\n       */\r\n      enlivenObjects: function(objects, callback, namespace, reviver) {\r\n        objects = objects || [];\r\n\r\n        var enlivenedObjects = [],\r\n            numLoadedObjects = 0,\r\n            numTotalObjects = objects.length;\r\n\r\n        function onLoaded() {\r\n          if (++numLoadedObjects === numTotalObjects) {\r\n            callback && callback(enlivenedObjects.filter(function(obj) {\r\n              // filter out undefined objects (objects that gave error)\r\n              return obj;\r\n            }));\r\n          }\r\n        }\r\n\r\n        if (!numTotalObjects) {\r\n          callback && callback(enlivenedObjects);\r\n          return;\r\n        }\r\n\r\n        objects.forEach(function (o, index) {\r\n          // if sparse array\r\n          if (!o || !o.type) {\r\n            onLoaded();\r\n            return;\r\n          }\r\n          var klass = fabric.util.getKlass(o.type, namespace);\r\n          klass.fromObject(o, function (obj, error) {\r\n            error || (enlivenedObjects[index] = obj);\r\n            reviver && reviver(o, obj, error);\r\n            onLoaded();\r\n          });\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Create and wait for loading of patterns\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} patterns Objects to enliven\r\n       * @param {Function} callback Callback to invoke when all objects are created\r\n       * called after each fabric object created.\r\n       */\r\n      enlivenPatterns: function(patterns, callback) {\r\n        patterns = patterns || [];\r\n\r\n        function onLoaded() {\r\n          if (++numLoadedPatterns === numPatterns) {\r\n            callback && callback(enlivenedPatterns);\r\n          }\r\n        }\r\n\r\n        var enlivenedPatterns = [],\r\n            numLoadedPatterns = 0,\r\n            numPatterns = patterns.length;\r\n\r\n        if (!numPatterns) {\r\n          callback && callback(enlivenedPatterns);\r\n          return;\r\n        }\r\n\r\n        patterns.forEach(function (p, index) {\r\n          if (p && p.source) {\r\n            new fabric.Pattern(p, function(pattern) {\r\n              enlivenedPatterns[index] = pattern;\r\n              onLoaded();\r\n            });\r\n          }\r\n          else {\r\n            enlivenedPatterns[index] = p;\r\n            onLoaded();\r\n          }\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Groups SVG elements (usually those retrieved from SVG document)\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} elements SVG elements to group\r\n       * @param {Object} [options] Options object\r\n       * @param {String} path Value to set sourcePath to\r\n       * @return {fabric.Object|fabric.Group}\r\n       */\r\n      groupSVGElements: function(elements, options, path) {\r\n        var object;\r\n        if (elements && elements.length === 1) {\r\n          return elements[0];\r\n        }\r\n        if (options) {\r\n          if (options.width && options.height) {\r\n            options.centerPoint = {\r\n              x: options.width / 2,\r\n              y: options.height / 2\r\n            };\r\n          }\r\n          else {\r\n            delete options.width;\r\n            delete options.height;\r\n          }\r\n        }\r\n        object = new fabric.Group(elements, options);\r\n        if (typeof path !== 'undefined') {\r\n          object.sourcePath = path;\r\n        }\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Populates an object with properties of another object\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Object} source Source object\r\n       * @param {Object} destination Destination object\r\n       * @return {Array} properties Properties names to include\r\n       */\r\n      populateWithProperties: function(source, destination, properties) {\r\n        if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\r\n          for (var i = 0, len = properties.length; i < len; i++) {\r\n            if (properties[i] in source) {\r\n              destination[properties[i]] = source[properties[i]];\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Draws a dashed line between two points\r\n       *\r\n       * This method is used to draw dashed line around selection area.\r\n       * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\r\n       *\r\n       * @param {CanvasRenderingContext2D} ctx context\r\n       * @param {Number} x  start x coordinate\r\n       * @param {Number} y start y coordinate\r\n       * @param {Number} x2 end x coordinate\r\n       * @param {Number} y2 end y coordinate\r\n       * @param {Array} da dash array pattern\r\n       */\r\n      drawDashedLine: function(ctx, x, y, x2, y2, da) {\r\n        var dx = x2 - x,\r\n            dy = y2 - y,\r\n            len = sqrt(dx * dx + dy * dy),\r\n            rot = atan2(dy, dx),\r\n            dc = da.length,\r\n            di = 0,\r\n            draw = true;\r\n\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        ctx.moveTo(0, 0);\r\n        ctx.rotate(rot);\r\n\r\n        x = 0;\r\n        while (len > x) {\r\n          x += da[di++ % dc];\r\n          if (x > len) {\r\n            x = len;\r\n          }\r\n          ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\r\n          draw = !draw;\r\n        }\r\n\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Creates canvas element\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {CanvasElement} initialized canvas element\r\n       */\r\n      createCanvasElement: function() {\r\n        return fabric.document.createElement('canvas');\r\n      },\r\n\r\n      /**\r\n       * Creates a canvas element that is a copy of another and is also painted\r\n       * @param {CanvasElement} canvas to copy size and content of\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {CanvasElement} initialized canvas element\r\n       */\r\n      copyCanvasElement: function(canvas) {\r\n        var newCanvas = fabric.util.createCanvasElement();\r\n        newCanvas.width = canvas.width;\r\n        newCanvas.height = canvas.height;\r\n        newCanvas.getContext('2d').drawImage(canvas, 0, 0);\r\n        return newCanvas;\r\n      },\r\n\r\n      /**\r\n       * since 2.6.0 moved from canvas instance to utility.\r\n       * @param {CanvasElement} canvasEl to copy size and content of\r\n       * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\r\n       * @param {Number} quality <= 1 and > 0\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {String} data url\r\n       */\r\n      toDataURL: function(canvasEl, format, quality) {\r\n        return canvasEl.toDataURL('image/' + format, quality);\r\n      },\r\n\r\n      /**\r\n       * Creates image element (works on client and node)\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {HTMLImageElement} HTML image element\r\n       */\r\n      createImage: function() {\r\n        return fabric.document.createElement('img');\r\n      },\r\n\r\n      /**\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @deprecated since 2.0.0\r\n       * @param {fabric.Object} receiver Object implementing `clipTo` method\r\n       * @param {CanvasRenderingContext2D} ctx Context to clip\r\n       */\r\n      clipContext: function(receiver, ctx) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        receiver.clipTo(ctx);\r\n        ctx.clip();\r\n      },\r\n\r\n      /**\r\n       * Multiply matrix A by matrix B to nest transformations\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {Array} a First transformMatrix\r\n       * @param  {Array} b Second transformMatrix\r\n       * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\r\n       * @return {Array} The product of the two transform matrices\r\n       */\r\n      multiplyTransformMatrices: function(a, b, is2x2) {\r\n        // Matrix multiply a * b\r\n        return [\r\n          a[0] * b[0] + a[2] * b[1],\r\n          a[1] * b[0] + a[3] * b[1],\r\n          a[0] * b[2] + a[2] * b[3],\r\n          a[1] * b[2] + a[3] * b[3],\r\n          is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\r\n          is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * Decomposes standard 2x3 matrix into transform components\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {Array} a transformMatrix\r\n       * @return {Object} Components of transform\r\n       */\r\n      qrDecompose: function(a) {\r\n        var angle = atan2(a[1], a[0]),\r\n            denom = pow(a[0], 2) + pow(a[1], 2),\r\n            scaleX = sqrt(denom),\r\n            scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\r\n            skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\r\n        return {\r\n          angle: angle  / PiBy180,\r\n          scaleX: scaleX,\r\n          scaleY: scaleY,\r\n          skewX: skewX / PiBy180,\r\n          skewY: 0,\r\n          translateX: a[4],\r\n          translateY: a[5]\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns a transform matrix starting from an object of the same kind of\r\n       * the one returned from qrDecompose, useful also if you want to calculate some\r\n       * transformations from an object that is not enlived yet\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {Object} options\r\n       * @param  {Number} [options.angle] angle in degrees\r\n       * @return {Number[]} transform matrix\r\n       */\r\n      calcRotateMatrix: function(options) {\r\n        if (!options.angle) {\r\n          return fabric.iMatrix.concat();\r\n        }\r\n        var theta = fabric.util.degreesToRadians(options.angle),\r\n            cos = fabric.util.cos(theta),\r\n            sin = fabric.util.sin(theta);\r\n        return [cos, sin, -sin, cos, 0, 0];\r\n      },\r\n\r\n      /**\r\n       * Returns a transform matrix starting from an object of the same kind of\r\n       * the one returned from qrDecompose, useful also if you want to calculate some\r\n       * transformations from an object that is not enlived yet.\r\n       * is called DimensionsTransformMatrix because those properties are the one that influence\r\n       * the size of the resulting box of the object.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {Object} options\r\n       * @param  {Number} [options.scaleX]\r\n       * @param  {Number} [options.scaleY]\r\n       * @param  {Boolean} [options.flipX]\r\n       * @param  {Boolean} [options.flipY]\r\n       * @param  {Number} [options.skewX]\r\n       * @param  {Number} [options.skewX]\r\n       * @return {Number[]} transform matrix\r\n       */\r\n      calcDimensionsMatrix: function(options) {\r\n        var scaleX = typeof options.scaleX === 'undefined' ? 1 : options.scaleX,\r\n            scaleY = typeof options.scaleY === 'undefined' ? 1 : options.scaleY,\r\n            scaleMatrix = [\r\n              options.flipX ? -scaleX : scaleX,\r\n              0,\r\n              0,\r\n              options.flipY ? -scaleY : scaleY,\r\n              0,\r\n              0],\r\n            multiply = fabric.util.multiplyTransformMatrices,\r\n            degreesToRadians = fabric.util.degreesToRadians;\r\n        if (options.skewX) {\r\n          scaleMatrix = multiply(\r\n            scaleMatrix,\r\n            [1, 0, Math.tan(degreesToRadians(options.skewX)), 1],\r\n            true);\r\n        }\r\n        if (options.skewY) {\r\n          scaleMatrix = multiply(\r\n            scaleMatrix,\r\n            [1, Math.tan(degreesToRadians(options.skewY)), 0, 1],\r\n            true);\r\n        }\r\n        return scaleMatrix;\r\n      },\r\n\r\n      /**\r\n       * Returns a transform matrix starting from an object of the same kind of\r\n       * the one returned from qrDecompose, useful also if you want to calculate some\r\n       * transformations from an object that is not enlived yet\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {Object} options\r\n       * @param  {Number} [options.angle]\r\n       * @param  {Number} [options.scaleX]\r\n       * @param  {Number} [options.scaleY]\r\n       * @param  {Boolean} [options.flipX]\r\n       * @param  {Boolean} [options.flipY]\r\n       * @param  {Number} [options.skewX]\r\n       * @param  {Number} [options.skewX]\r\n       * @param  {Number} [options.translateX]\r\n       * @param  {Number} [options.translateY]\r\n       * @return {Number[]} transform matrix\r\n       */\r\n      composeMatrix: function(options) {\r\n        var matrix = [1, 0, 0, 1, options.translateX || 0, options.translateY || 0],\r\n            multiply = fabric.util.multiplyTransformMatrices;\r\n        if (options.angle) {\r\n          matrix = multiply(matrix, fabric.util.calcRotateMatrix(options));\r\n        }\r\n        if (options.scaleX || options.scaleY || options.skewX || options.skewY || options.flipX || options.flipY) {\r\n          matrix = multiply(matrix, fabric.util.calcDimensionsMatrix(options));\r\n        }\r\n        return matrix;\r\n      },\r\n\r\n      /**\r\n       * Returns a transform matrix that has the same effect of scaleX, scaleY and skewX.\r\n       * Is deprecated for composeMatrix. Please do not use it.\r\n       * @static\r\n       * @deprecated since 3.4.0\r\n       * @memberOf fabric.util\r\n       * @param  {Number} scaleX\r\n       * @param  {Number} scaleY\r\n       * @param  {Number} skewX\r\n       * @return {Number[]} transform matrix\r\n       */\r\n      customTransformMatrix: function(scaleX, scaleY, skewX) {\r\n        return fabric.util.composeMatrix({ scaleX: scaleX, scaleY: scaleY, skewX: skewX });\r\n      },\r\n\r\n      /**\r\n       * reset an object transform state to neutral. Top and left are not accounted for\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {fabric.Object} target object to transform\r\n       */\r\n      resetObjectTransform: function (target) {\r\n        target.scaleX = 1;\r\n        target.scaleY = 1;\r\n        target.skewX = 0;\r\n        target.skewY = 0;\r\n        target.flipX = false;\r\n        target.flipY = false;\r\n        target.rotate(0);\r\n      },\r\n\r\n      /**\r\n       * Extract Object transform values\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {fabric.Object} target object to read from\r\n       * @return {Object} Components of transform\r\n       */\r\n      saveObjectTransform: function (target) {\r\n        return {\r\n          scaleX: target.scaleX,\r\n          scaleY: target.scaleY,\r\n          skewX: target.skewX,\r\n          skewY: target.skewY,\r\n          angle: target.angle,\r\n          left: target.left,\r\n          flipX: target.flipX,\r\n          flipY: target.flipY,\r\n          top: target.top\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of function body\r\n       * @param {Function} fn Function to get body of\r\n       * @return {String} Function body\r\n       */\r\n      getFunctionBody: function(fn) {\r\n        return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\r\n      },\r\n\r\n      /**\r\n       * Returns true if context has transparent pixel\r\n       * at specified location (taking tolerance into account)\r\n       * @param {CanvasRenderingContext2D} ctx context\r\n       * @param {Number} x x coordinate\r\n       * @param {Number} y y coordinate\r\n       * @param {Number} tolerance Tolerance\r\n       */\r\n      isTransparent: function(ctx, x, y, tolerance) {\r\n\r\n        // If tolerance is > 0 adjust start coords to take into account.\r\n        // If moves off Canvas fix to 0\r\n        if (tolerance > 0) {\r\n          if (x > tolerance) {\r\n            x -= tolerance;\r\n          }\r\n          else {\r\n            x = 0;\r\n          }\r\n          if (y > tolerance) {\r\n            y -= tolerance;\r\n          }\r\n          else {\r\n            y = 0;\r\n          }\r\n        }\r\n\r\n        var _isTransparent = true, i, temp,\r\n            imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\r\n            l = imageData.data.length;\r\n\r\n        // Split image data - for tolerance > 1, pixelDataSize = 4;\r\n        for (i = 3; i < l; i += 4) {\r\n          temp = imageData.data[i];\r\n          _isTransparent = temp <= 0;\r\n          if (_isTransparent === false) {\r\n            break; // Stop if colour found\r\n          }\r\n        }\r\n\r\n        imageData = null;\r\n\r\n        return _isTransparent;\r\n      },\r\n\r\n      /**\r\n       * Parse preserveAspectRatio attribute from element\r\n       * @param {string} attribute to be parsed\r\n       * @return {Object} an object containing align and meetOrSlice attribute\r\n       */\r\n      parsePreserveAspectRatioAttribute: function(attribute) {\r\n        var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\r\n            aspectRatioAttrs = attribute.split(' '), align;\r\n\r\n        if (aspectRatioAttrs && aspectRatioAttrs.length) {\r\n          meetOrSlice = aspectRatioAttrs.pop();\r\n          if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\r\n            align = meetOrSlice;\r\n            meetOrSlice = 'meet';\r\n          }\r\n          else if (aspectRatioAttrs.length) {\r\n            align = aspectRatioAttrs.pop();\r\n          }\r\n        }\r\n        //divide align in alignX and alignY\r\n        alignX = align !== 'none' ? align.slice(1, 4) : 'none';\r\n        alignY = align !== 'none' ? align.slice(5, 8) : 'none';\r\n        return {\r\n          meetOrSlice: meetOrSlice,\r\n          alignX: alignX,\r\n          alignY: alignY\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Clear char widths cache for the given font family or all the cache if no\r\n       * fontFamily is specified.\r\n       * Use it if you know you are loading fonts in a lazy way and you are not waiting\r\n       * for custom fonts to load properly when adding text objects to the canvas.\r\n       * If a text object is added when its own font is not loaded yet, you will get wrong\r\n       * measurement and so wrong bounding boxes.\r\n       * After the font cache is cleared, either change the textObject text content or call\r\n       * initDimensions() to trigger a recalculation\r\n       * @memberOf fabric.util\r\n       * @param {String} [fontFamily] font family to clear\r\n       */\r\n      clearFabricFontCache: function(fontFamily) {\r\n        fontFamily = (fontFamily || '').toLowerCase();\r\n        if (!fontFamily) {\r\n          fabric.charWidthsCache = { };\r\n        }\r\n        else if (fabric.charWidthsCache[fontFamily]) {\r\n          delete fabric.charWidthsCache[fontFamily];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Given current aspect ratio, determines the max width and height that can\r\n       * respect the total allowed area for the cache.\r\n       * @memberOf fabric.util\r\n       * @param {Number} ar aspect ratio\r\n       * @param {Number} maximumArea Maximum area you want to achieve\r\n       * @return {Object.x} Limited dimensions by X\r\n       * @return {Object.y} Limited dimensions by Y\r\n       */\r\n      limitDimsByArea: function(ar, maximumArea) {\r\n        var roughWidth = Math.sqrt(maximumArea * ar),\r\n            perfLimitSizeY = Math.floor(maximumArea / roughWidth);\r\n        return { x: Math.floor(roughWidth), y: perfLimitSizeY };\r\n      },\r\n\r\n      capValue: function(min, value, max) {\r\n        return Math.max(min, Math.min(value, max));\r\n      },\r\n\r\n      findScaleToFit: function(source, destination) {\r\n        return Math.min(destination.width / source.width, destination.height / source.height);\r\n      },\r\n\r\n      findScaleToCover: function(source, destination) {\r\n        return Math.max(destination.width / source.width, destination.height / source.height);\r\n      },\r\n\r\n      /**\r\n       * given an array of 6 number returns something like `\"matrix(...numbers)\"`\r\n       * @memberOf fabric.util\r\n       * @param {Array} trasnform an array with 6 numbers\r\n       * @return {String} transform matrix for svg\r\n       * @return {Object.y} Limited dimensions by Y\r\n       */\r\n      matrixToSVG: function(transform) {\r\n        return 'matrix(' + transform.map(function(value) {\r\n          return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\r\n        }).join(' ') + ')';\r\n      }\r\n    };\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    var _join = Array.prototype.join;\r\n\r\n    /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\r\n     * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\r\n     * http://mozilla.org/MPL/2.0/\r\n     */\r\n    function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\r\n      var argsString = _join.call(arguments);\r\n      if (fabric.arcToSegmentsCache[argsString]) {\r\n        return fabric.arcToSegmentsCache[argsString];\r\n      }\r\n\r\n      var PI = Math.PI, th = rotateX * PI / 180,\r\n          sinTh = fabric.util.sin(th),\r\n          cosTh = fabric.util.cos(th),\r\n          fromX = 0, fromY = 0;\r\n\r\n      rx = Math.abs(rx);\r\n      ry = Math.abs(ry);\r\n\r\n      var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\r\n          py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\r\n          rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\r\n          pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\r\n          root = 0;\r\n\r\n      if (pl < 0) {\r\n        var s = Math.sqrt(1 - pl / (rx2 * ry2));\r\n        rx *= s;\r\n        ry *= s;\r\n      }\r\n      else {\r\n        root = (large === sweep ? -1.0 : 1.0) *\r\n                Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\r\n      }\r\n\r\n      var cx = root * rx * py / ry,\r\n          cy = -root * ry * px / rx,\r\n          cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\r\n          cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\r\n          mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\r\n          dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\r\n\r\n      if (sweep === 0 && dtheta > 0) {\r\n        dtheta -= 2 * PI;\r\n      }\r\n      else if (sweep === 1 && dtheta < 0) {\r\n        dtheta += 2 * PI;\r\n      }\r\n\r\n      // Convert into cubic bezier segments <= 90deg\r\n      var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\r\n          result = [], mDelta = dtheta / segments,\r\n          mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\r\n          th3 = mTheta + mDelta;\r\n\r\n      for (var i = 0; i < segments; i++) {\r\n        result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\r\n        fromX = result[i][4];\r\n        fromY = result[i][5];\r\n        mTheta = th3;\r\n        th3 += mDelta;\r\n      }\r\n      fabric.arcToSegmentsCache[argsString] = result;\r\n      return result;\r\n    }\r\n\r\n    function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\r\n      var costh2 = fabric.util.cos(th2),\r\n          sinth2 = fabric.util.sin(th2),\r\n          costh3 = fabric.util.cos(th3),\r\n          sinth3 = fabric.util.sin(th3),\r\n          toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\r\n          toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\r\n          cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\r\n          cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\r\n          cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\r\n          cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\r\n\r\n      return [\r\n        cp1X, cp1Y,\r\n        cp2X, cp2Y,\r\n        toX, toY\r\n      ];\r\n    }\r\n\r\n    /*\r\n     * Private\r\n     */\r\n    function calcVectorAngle(ux, uy, vx, vy) {\r\n      var ta = Math.atan2(uy, ux),\r\n          tb = Math.atan2(vy, vx);\r\n      if (tb >= ta) {\r\n        return tb - ta;\r\n      }\r\n      else {\r\n        return 2 * Math.PI - (ta - tb);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Draws arc\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @param {Number} fx\r\n     * @param {Number} fy\r\n     * @param {Array} coords\r\n     */\r\n    fabric.util.drawArc = function(ctx, fx, fy, coords) {\r\n      var rx = coords[0],\r\n          ry = coords[1],\r\n          rot = coords[2],\r\n          large = coords[3],\r\n          sweep = coords[4],\r\n          tx = coords[5],\r\n          ty = coords[6],\r\n          segs = [[], [], [], []],\r\n          segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\r\n\r\n      for (var i = 0, len = segsNorm.length; i < len; i++) {\r\n        segs[i][0] = segsNorm[i][0] + fx;\r\n        segs[i][1] = segsNorm[i][1] + fy;\r\n        segs[i][2] = segsNorm[i][2] + fx;\r\n        segs[i][3] = segsNorm[i][3] + fy;\r\n        segs[i][4] = segsNorm[i][4] + fx;\r\n        segs[i][5] = segsNorm[i][5] + fy;\r\n        ctx.bezierCurveTo.apply(ctx, segs[i]);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Calculate bounding box of a elliptic-arc\r\n     * @param {Number} fx start point of arc\r\n     * @param {Number} fy\r\n     * @param {Number} rx horizontal radius\r\n     * @param {Number} ry vertical radius\r\n     * @param {Number} rot angle of horizontal axe\r\n     * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\r\n     * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\r\n     * @param {Number} tx end point of arc\r\n     * @param {Number} ty\r\n     */\r\n    fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\r\n\r\n      var fromX = 0, fromY = 0, bound, bounds = [],\r\n          segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\r\n\r\n      for (var i = 0, len = segs.length; i < len; i++) {\r\n        bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\r\n        bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\r\n        bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\r\n        fromX = segs[i][4];\r\n        fromY = segs[i][5];\r\n      }\r\n      return bounds;\r\n    };\r\n\r\n    /**\r\n     * Calculate bounding box of a beziercurve\r\n     * @param {Number} x0 starting point\r\n     * @param {Number} y0\r\n     * @param {Number} x1 first control point\r\n     * @param {Number} y1\r\n     * @param {Number} x2 secondo control point\r\n     * @param {Number} y2\r\n     * @param {Number} x3 end of beizer\r\n     * @param {Number} y3\r\n     */\r\n    // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\r\n    function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n      var argsString;\r\n      if (fabric.cachesBoundsOfCurve) {\r\n        argsString = _join.call(arguments);\r\n        if (fabric.boundsOfCurveCache[argsString]) {\r\n          return fabric.boundsOfCurveCache[argsString];\r\n        }\r\n      }\r\n\r\n      var sqrt = Math.sqrt,\r\n          min = Math.min, max = Math.max,\r\n          abs = Math.abs, tvalues = [],\r\n          bounds = [[], []],\r\n          a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n      b = 6 * x0 - 12 * x1 + 6 * x2;\r\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n      c = 3 * x1 - 3 * x0;\r\n\r\n      for (var i = 0; i < 2; ++i) {\r\n        if (i > 0) {\r\n          b = 6 * y0 - 12 * y1 + 6 * y2;\r\n          a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n          c = 3 * y1 - 3 * y0;\r\n        }\r\n\r\n        if (abs(a) < 1e-12) {\r\n          if (abs(b) < 1e-12) {\r\n            continue;\r\n          }\r\n          t = -c / b;\r\n          if (0 < t && t < 1) {\r\n            tvalues.push(t);\r\n          }\r\n          continue;\r\n        }\r\n        b2ac = b * b - 4 * c * a;\r\n        if (b2ac < 0) {\r\n          continue;\r\n        }\r\n        sqrtb2ac = sqrt(b2ac);\r\n        t1 = (-b + sqrtb2ac) / (2 * a);\r\n        if (0 < t1 && t1 < 1) {\r\n          tvalues.push(t1);\r\n        }\r\n        t2 = (-b - sqrtb2ac) / (2 * a);\r\n        if (0 < t2 && t2 < 1) {\r\n          tvalues.push(t2);\r\n        }\r\n      }\r\n\r\n      var x, y, j = tvalues.length, jlen = j, mt;\r\n      while (j--) {\r\n        t = tvalues[j];\r\n        mt = 1 - t;\r\n        x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n        bounds[0][j] = x;\r\n\r\n        y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n        bounds[1][j] = y;\r\n      }\r\n\r\n      bounds[0][jlen] = x0;\r\n      bounds[1][jlen] = y0;\r\n      bounds[0][jlen + 1] = x3;\r\n      bounds[1][jlen + 1] = y3;\r\n      var result = [\r\n        {\r\n          x: min.apply(null, bounds[0]),\r\n          y: min.apply(null, bounds[1])\r\n        },\r\n        {\r\n          x: max.apply(null, bounds[0]),\r\n          y: max.apply(null, bounds[1])\r\n        }\r\n      ];\r\n      if (fabric.cachesBoundsOfCurve) {\r\n        fabric.boundsOfCurveCache[argsString] = result;\r\n      }\r\n      return result;\r\n    }\r\n\r\n    fabric.util.getBoundsOfCurve = getBoundsOfCurve;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var slice = Array.prototype.slice;\r\n\r\n    /**\r\n     * Invokes method on all items in a given array\r\n     * @memberOf fabric.util.array\r\n     * @param {Array} array Array to iterate over\r\n     * @param {String} method Name of a method to invoke\r\n     * @return {Array}\r\n     */\r\n    function invoke(array, method) {\r\n      var args = slice.call(arguments, 2), result = [];\r\n      for (var i = 0, len = array.length; i < len; i++) {\r\n        result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * Finds maximum value in array (not necessarily \"first\" one)\r\n     * @memberOf fabric.util.array\r\n     * @param {Array} array Array to iterate over\r\n     * @param {String} byProperty\r\n     * @return {*}\r\n     */\r\n    function max(array, byProperty) {\r\n      return find(array, byProperty, function(value1, value2) {\r\n        return value1 >= value2;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Finds minimum value in array (not necessarily \"first\" one)\r\n     * @memberOf fabric.util.array\r\n     * @param {Array} array Array to iterate over\r\n     * @param {String} byProperty\r\n     * @return {*}\r\n     */\r\n    function min(array, byProperty) {\r\n      return find(array, byProperty, function(value1, value2) {\r\n        return value1 < value2;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function fill(array, value) {\r\n      var k = array.length;\r\n      while (k--) {\r\n        array[k] = value;\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function find(array, byProperty, condition) {\r\n      if (!array || array.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var i = array.length - 1,\r\n          result = byProperty ? array[i][byProperty] : array[i];\r\n      if (byProperty) {\r\n        while (i--) {\r\n          if (condition(array[i][byProperty], result)) {\r\n            result = array[i][byProperty];\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        while (i--) {\r\n          if (condition(array[i], result)) {\r\n            result = array[i];\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * @namespace fabric.util.array\r\n     */\r\n    fabric.util.array = {\r\n      fill: fill,\r\n      invoke: invoke,\r\n      min: min,\r\n      max: max\r\n    };\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n    /**\r\n     * Copies all enumerable properties of one js object to another\r\n     * this does not and cannot compete with generic utils.\r\n     * Does not clone or extend fabric.Object subclasses.\r\n     * This is mostly for internal use and has extra handling for fabricJS objects\r\n     * it skips the canvas property in deep cloning.\r\n     * @memberOf fabric.util.object\r\n     * @param {Object} destination Where to copy to\r\n     * @param {Object} source Where to copy from\r\n     * @return {Object}\r\n     */\r\n\r\n    function extend(destination, source, deep) {\r\n      // JScript DontEnum bug is not taken care of\r\n      // the deep clone is for internal use, is not meant to avoid\r\n      // javascript traps or cloning html element or self referenced objects.\r\n      if (deep) {\r\n        if (!fabric.isLikelyNode && source instanceof Element) {\r\n          // avoid cloning deep images, canvases,\r\n          destination = source;\r\n        }\r\n        else if (source instanceof Array) {\r\n          destination = [];\r\n          for (var i = 0, len = source.length; i < len; i++) {\r\n            destination[i] = extend({ }, source[i], deep);\r\n          }\r\n        }\r\n        else if (source && typeof source === 'object') {\r\n          for (var property in source) {\r\n            if (property === 'canvas') {\r\n              destination[property] = extend({ }, source[property]);\r\n            }\r\n            else if (source.hasOwnProperty(property)) {\r\n              destination[property] = extend({ }, source[property], deep);\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          // this sounds odd for an extend but is ok for recursive use\r\n          destination = source;\r\n        }\r\n      }\r\n      else {\r\n        for (var property in source) {\r\n          destination[property] = source[property];\r\n        }\r\n      }\r\n      return destination;\r\n    }\r\n\r\n    /**\r\n     * Creates an empty object and copies all enumerable properties of another object to it\r\n     * @memberOf fabric.util.object\r\n     * TODO: this function return an empty object if you try to clone null\r\n     * @param {Object} object Object to clone\r\n     * @return {Object}\r\n     */\r\n    function clone(object, deep) {\r\n      return extend({ }, object, deep);\r\n    }\r\n\r\n    /** @namespace fabric.util.object */\r\n    fabric.util.object = {\r\n      extend: extend,\r\n      clone: clone\r\n    };\r\n    fabric.util.object.extend(fabric.util, fabric.Observable);\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * Camelizes a string\r\n     * @memberOf fabric.util.string\r\n     * @param {String} string String to camelize\r\n     * @return {String} Camelized version of a string\r\n     */\r\n    function camelize(string) {\r\n      return string.replace(/-+(.)?/g, function(match, character) {\r\n        return character ? character.toUpperCase() : '';\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Capitalizes a string\r\n     * @memberOf fabric.util.string\r\n     * @param {String} string String to capitalize\r\n     * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\r\n     * and other letters stay untouched, if false first letter is capitalized\r\n     * and other letters are converted to lowercase.\r\n     * @return {String} Capitalized version of a string\r\n     */\r\n    function capitalize(string, firstLetterOnly) {\r\n      return string.charAt(0).toUpperCase() +\r\n        (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Escapes XML in a string\r\n     * @memberOf fabric.util.string\r\n     * @param {String} string String to escape\r\n     * @return {String} Escaped version of a string\r\n     */\r\n    function escapeXml(string) {\r\n      return string.replace(/&/g, '&amp;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&apos;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n    }\r\n\r\n    /**\r\n     * Divide a string in the user perceived single units\r\n     * @memberOf fabric.util.string\r\n     * @param {String} textstring String to escape\r\n     * @return {Array} array containing the graphemes\r\n     */\r\n    function graphemeSplit(textstring) {\r\n      var i = 0, chr, graphemes = [];\r\n      for (i = 0, chr; i < textstring.length; i++) {\r\n        if ((chr = getWholeChar(textstring, i)) === false) {\r\n          continue;\r\n        }\r\n        graphemes.push(chr);\r\n      }\r\n      return graphemes;\r\n    }\r\n\r\n    // taken from mdn in the charAt doc page.\r\n    function getWholeChar(str, i) {\r\n      var code = str.charCodeAt(i);\r\n\r\n      if (isNaN(code)) {\r\n        return ''; // Position not found\r\n      }\r\n      if (code < 0xD800 || code > 0xDFFF) {\r\n        return str.charAt(i);\r\n      }\r\n\r\n      // High surrogate (could change last hex to 0xDB7F to treat high private\r\n      // surrogates as single characters)\r\n      if (0xD800 <= code && code <= 0xDBFF) {\r\n        if (str.length <= (i + 1)) {\r\n          throw 'High surrogate without following low surrogate';\r\n        }\r\n        var next = str.charCodeAt(i + 1);\r\n        if (0xDC00 > next || next > 0xDFFF) {\r\n          throw 'High surrogate without following low surrogate';\r\n        }\r\n        return str.charAt(i) + str.charAt(i + 1);\r\n      }\r\n      // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\r\n      if (i === 0) {\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      var prev = str.charCodeAt(i - 1);\r\n\r\n      // (could change last hex to 0xDB7F to treat high private\r\n      // surrogates as single characters)\r\n      if (0xD800 > prev || prev > 0xDBFF) {\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      // We can pass over low surrogates now as the second component\r\n      // in a pair which we have already processed\r\n      return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * String utilities\r\n     * @namespace fabric.util.string\r\n     */\r\n    fabric.util.string = {\r\n      camelize: camelize,\r\n      capitalize: capitalize,\r\n      escapeXml: escapeXml,\r\n      graphemeSplit: graphemeSplit\r\n    };\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var slice = Array.prototype.slice, emptyFunction = function() { },\r\n\r\n        IS_DONTENUM_BUGGY = (function() {\r\n          for (var p in { toString: 1 }) {\r\n            if (p === 'toString') {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })(),\r\n\r\n        /** @ignore */\r\n        addMethods = function(klass, source, parent) {\r\n          for (var property in source) {\r\n\r\n            if (property in klass.prototype &&\r\n                typeof klass.prototype[property] === 'function' &&\r\n                (source[property] + '').indexOf('callSuper') > -1) {\r\n\r\n              klass.prototype[property] = (function(property) {\r\n                return function() {\r\n\r\n                  var superclass = this.constructor.superclass;\r\n                  this.constructor.superclass = parent;\r\n                  var returnValue = source[property].apply(this, arguments);\r\n                  this.constructor.superclass = superclass;\r\n\r\n                  if (property !== 'initialize') {\r\n                    return returnValue;\r\n                  }\r\n                };\r\n              })(property);\r\n            }\r\n            else {\r\n              klass.prototype[property] = source[property];\r\n            }\r\n\r\n            if (IS_DONTENUM_BUGGY) {\r\n              if (source.toString !== Object.prototype.toString) {\r\n                klass.prototype.toString = source.toString;\r\n              }\r\n              if (source.valueOf !== Object.prototype.valueOf) {\r\n                klass.prototype.valueOf = source.valueOf;\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n    function Subclass() { }\r\n\r\n    function callSuper(methodName) {\r\n      var parentMethod = null,\r\n          _this = this;\r\n\r\n      // climb prototype chain to find method not equal to callee's method\r\n      while (_this.constructor.superclass) {\r\n        var superClassMethod = _this.constructor.superclass.prototype[methodName];\r\n        if (_this[methodName] !== superClassMethod) {\r\n          parentMethod = superClassMethod;\r\n          break;\r\n        }\r\n        // eslint-disable-next-line\r\n        _this = _this.constructor.superclass.prototype;\r\n      }\r\n\r\n      if (!parentMethod) {\r\n        return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\r\n      }\r\n\r\n      return (arguments.length > 1)\r\n        ? parentMethod.apply(this, slice.call(arguments, 1))\r\n        : parentMethod.call(this);\r\n    }\r\n\r\n    /**\r\n     * Helper for creation of \"classes\".\r\n     * @memberOf fabric.util\r\n     * @param {Function} [parent] optional \"Class\" to inherit from\r\n     * @param {Object} [properties] Properties shared by all instances of this class\r\n     *                  (be careful modifying objects defined here as this would affect all instances)\r\n     */\r\n    function createClass() {\r\n      var parent = null,\r\n          properties = slice.call(arguments, 0);\r\n\r\n      if (typeof properties[0] === 'function') {\r\n        parent = properties.shift();\r\n      }\r\n      function klass() {\r\n        this.initialize.apply(this, arguments);\r\n      }\r\n\r\n      klass.superclass = parent;\r\n      klass.subclasses = [];\r\n\r\n      if (parent) {\r\n        Subclass.prototype = parent.prototype;\r\n        klass.prototype = new Subclass();\r\n        parent.subclasses.push(klass);\r\n      }\r\n      for (var i = 0, length = properties.length; i < length; i++) {\r\n        addMethods(klass, properties[i], parent);\r\n      }\r\n      if (!klass.prototype.initialize) {\r\n        klass.prototype.initialize = emptyFunction;\r\n      }\r\n      klass.prototype.constructor = klass;\r\n      klass.prototype.callSuper = callSuper;\r\n      return klass;\r\n    }\r\n\r\n    fabric.util.createClass = createClass;\r\n  })();\r\n\r\n\r\n  (function () {\r\n    // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\r\n    var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent;\r\n    /**\r\n     * Adds an event listener to an element\r\n     * @function\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element\r\n     * @param {String} eventName\r\n     * @param {Function} handler\r\n     */\r\n    fabric.util.addListener = function(element, eventName, handler, options) {\r\n      element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\r\n    };\r\n\r\n    /**\r\n     * Removes an event listener from an element\r\n     * @function\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element\r\n     * @param {String} eventName\r\n     * @param {Function} handler\r\n     */\r\n    fabric.util.removeListener = function(element, eventName, handler, options) {\r\n      element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\r\n    };\r\n\r\n    function getTouchInfo(event) {\r\n      var touchProp = event.changedTouches;\r\n      if (touchProp && touchProp[0]) {\r\n        return touchProp[0];\r\n      }\r\n      return event;\r\n    }\r\n\r\n    fabric.util.getPointer = function(event) {\r\n      var element = event.target,\r\n          scroll = fabric.util.getScrollLeftTop(element),\r\n          _evt = getTouchInfo(event);\r\n      return {\r\n        x: _evt.clientX + scroll.left,\r\n        y: _evt.clientY + scroll.top\r\n      };\r\n    };\r\n  })();\r\n\r\n\r\n  (function () {\r\n\r\n    /**\r\n     * Cross-browser wrapper for setting element's style\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element\r\n     * @param {Object} styles\r\n     * @return {HTMLElement} Element that was passed as a first argument\r\n     */\r\n    function setStyle(element, styles) {\r\n      var elementStyle = element.style;\r\n      if (!elementStyle) {\r\n        return element;\r\n      }\r\n      if (typeof styles === 'string') {\r\n        element.style.cssText += ';' + styles;\r\n        return styles.indexOf('opacity') > -1\r\n          ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\r\n          : element;\r\n      }\r\n      for (var property in styles) {\r\n        if (property === 'opacity') {\r\n          setOpacity(element, styles[property]);\r\n        }\r\n        else {\r\n          var normalizedProperty = (property === 'float' || property === 'cssFloat')\r\n            ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\r\n            : property;\r\n          elementStyle[normalizedProperty] = styles[property];\r\n        }\r\n      }\r\n      return element;\r\n    }\r\n\r\n    var parseEl = fabric.document.createElement('div'),\r\n        supportsOpacity = typeof parseEl.style.opacity === 'string',\r\n        supportsFilters = typeof parseEl.style.filter === 'string',\r\n        reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\r\n\r\n        /** @ignore */\r\n        setOpacity = function (element) { return element; };\r\n\r\n    if (supportsOpacity) {\r\n      /** @ignore */\r\n      setOpacity = function(element, value) {\r\n        element.style.opacity = value;\r\n        return element;\r\n      };\r\n    }\r\n    else if (supportsFilters) {\r\n      /** @ignore */\r\n      setOpacity = function(element, value) {\r\n        var es = element.style;\r\n        if (element.currentStyle && !element.currentStyle.hasLayout) {\r\n          es.zoom = 1;\r\n        }\r\n        if (reOpacity.test(es.filter)) {\r\n          value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\r\n          es.filter = es.filter.replace(reOpacity, value);\r\n        }\r\n        else {\r\n          es.filter += ' alpha(opacity=' + (value * 100) + ')';\r\n        }\r\n        return element;\r\n      };\r\n    }\r\n\r\n    fabric.util.setStyle = setStyle;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var _slice = Array.prototype.slice;\r\n\r\n    /**\r\n     * Takes id and returns an element with that id (if one exists in a document)\r\n     * @memberOf fabric.util\r\n     * @param {String|HTMLElement} id\r\n     * @return {HTMLElement|null}\r\n     */\r\n    function getById(id) {\r\n      return typeof id === 'string' ? fabric.document.getElementById(id) : id;\r\n    }\r\n\r\n    var sliceCanConvertNodelists,\r\n        /**\r\n         * Converts an array-like object (e.g. arguments or NodeList) to an array\r\n         * @memberOf fabric.util\r\n         * @param {Object} arrayLike\r\n         * @return {Array}\r\n         */\r\n        toArray = function(arrayLike) {\r\n          return _slice.call(arrayLike, 0);\r\n        };\r\n\r\n    try {\r\n      sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\r\n    }\r\n    catch (err) { }\r\n\r\n    if (!sliceCanConvertNodelists) {\r\n      toArray = function(arrayLike) {\r\n        var arr = new Array(arrayLike.length), i = arrayLike.length;\r\n        while (i--) {\r\n          arr[i] = arrayLike[i];\r\n        }\r\n        return arr;\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Creates specified element with specified attributes\r\n     * @memberOf fabric.util\r\n     * @param {String} tagName Type of an element to create\r\n     * @param {Object} [attributes] Attributes to set on an element\r\n     * @return {HTMLElement} Newly created element\r\n     */\r\n    function makeElement(tagName, attributes) {\r\n      var el = fabric.document.createElement(tagName);\r\n      for (var prop in attributes) {\r\n        if (prop === 'class') {\r\n          el.className = attributes[prop];\r\n        }\r\n        else if (prop === 'for') {\r\n          el.htmlFor = attributes[prop];\r\n        }\r\n        else {\r\n          el.setAttribute(prop, attributes[prop]);\r\n        }\r\n      }\r\n      return el;\r\n    }\r\n\r\n    /**\r\n     * Adds class to an element\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to add class to\r\n     * @param {String} className Class to add to an element\r\n     */\r\n    function addClass(element, className) {\r\n      if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\r\n        element.className += (element.className ? ' ' : '') + className;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Wraps element with another element\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to wrap\r\n     * @param {HTMLElement|String} wrapper Element to wrap with\r\n     * @param {Object} [attributes] Attributes to set on a wrapper\r\n     * @return {HTMLElement} wrapper\r\n     */\r\n    function wrapElement(element, wrapper, attributes) {\r\n      if (typeof wrapper === 'string') {\r\n        wrapper = makeElement(wrapper, attributes);\r\n      }\r\n      if (element.parentNode) {\r\n        element.parentNode.replaceChild(wrapper, element);\r\n      }\r\n      wrapper.appendChild(element);\r\n      return wrapper;\r\n    }\r\n\r\n    /**\r\n     * Returns element scroll offsets\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to operate on\r\n     * @return {Object} Object with left/top values\r\n     */\r\n    function getScrollLeftTop(element) {\r\n\r\n      var left = 0,\r\n          top = 0,\r\n          docElement = fabric.document.documentElement,\r\n          body = fabric.document.body || {\r\n            scrollLeft: 0, scrollTop: 0\r\n          };\r\n\r\n      // While loop checks (and then sets element to) .parentNode OR .host\r\n      //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\r\n      //  but the .parentNode of a root ShadowDOM node will always be null, instead\r\n      //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\r\n      while (element && (element.parentNode || element.host)) {\r\n\r\n        // Set element to element parent, or 'host' in case of ShadowDOM\r\n        element = element.parentNode || element.host;\r\n\r\n        if (element === fabric.document) {\r\n          left = body.scrollLeft || docElement.scrollLeft || 0;\r\n          top = body.scrollTop ||  docElement.scrollTop || 0;\r\n        }\r\n        else {\r\n          left += element.scrollLeft || 0;\r\n          top += element.scrollTop || 0;\r\n        }\r\n\r\n        if (element.nodeType === 1 && element.style.position === 'fixed') {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return { left: left, top: top };\r\n    }\r\n\r\n    /**\r\n     * Returns offset for a given element\r\n     * @function\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to get offset for\r\n     * @return {Object} Object with \"left\" and \"top\" properties\r\n     */\r\n    function getElementOffset(element) {\r\n      var docElem,\r\n          doc = element && element.ownerDocument,\r\n          box = { left: 0, top: 0 },\r\n          offset = { left: 0, top: 0 },\r\n          scrollLeftTop,\r\n          offsetAttributes = {\r\n            borderLeftWidth: 'left',\r\n            borderTopWidth:  'top',\r\n            paddingLeft:     'left',\r\n            paddingTop:      'top'\r\n          };\r\n\r\n      if (!doc) {\r\n        return offset;\r\n      }\r\n\r\n      for (var attr in offsetAttributes) {\r\n        offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\r\n      }\r\n\r\n      docElem = doc.documentElement;\r\n      if ( typeof element.getBoundingClientRect !== 'undefined' ) {\r\n        box = element.getBoundingClientRect();\r\n      }\r\n\r\n      scrollLeftTop = getScrollLeftTop(element);\r\n\r\n      return {\r\n        left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\r\n        top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Returns style attribute value of a given element\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to get style attribute for\r\n     * @param {String} attr Style attribute to get for element\r\n     * @return {String} Style attribute value of the given element.\r\n     */\r\n    var getElementStyle;\r\n    if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\r\n      getElementStyle = function(element, attr) {\r\n        var style = fabric.document.defaultView.getComputedStyle(element, null);\r\n        return style ? style[attr] : undefined;\r\n      };\r\n    }\r\n    else {\r\n      getElementStyle = function(element, attr) {\r\n        var value = element.style[attr];\r\n        if (!value && element.currentStyle) {\r\n          value = element.currentStyle[attr];\r\n        }\r\n        return value;\r\n      };\r\n    }\r\n\r\n    (function () {\r\n      var style = fabric.document.documentElement.style,\r\n          selectProp = 'userSelect' in style\r\n            ? 'userSelect'\r\n            : 'MozUserSelect' in style\r\n              ? 'MozUserSelect'\r\n              : 'WebkitUserSelect' in style\r\n                ? 'WebkitUserSelect'\r\n                : 'KhtmlUserSelect' in style\r\n                  ? 'KhtmlUserSelect'\r\n                  : '';\r\n\r\n      /**\r\n       * Makes element unselectable\r\n       * @memberOf fabric.util\r\n       * @param {HTMLElement} element Element to make unselectable\r\n       * @return {HTMLElement} Element that was passed in\r\n       */\r\n      function makeElementUnselectable(element) {\r\n        if (typeof element.onselectstart !== 'undefined') {\r\n          element.onselectstart = fabric.util.falseFunction;\r\n        }\r\n        if (selectProp) {\r\n          element.style[selectProp] = 'none';\r\n        }\r\n        else if (typeof element.unselectable === 'string') {\r\n          element.unselectable = 'on';\r\n        }\r\n        return element;\r\n      }\r\n\r\n      /**\r\n       * Makes element selectable\r\n       * @memberOf fabric.util\r\n       * @param {HTMLElement} element Element to make selectable\r\n       * @return {HTMLElement} Element that was passed in\r\n       */\r\n      function makeElementSelectable(element) {\r\n        if (typeof element.onselectstart !== 'undefined') {\r\n          element.onselectstart = null;\r\n        }\r\n        if (selectProp) {\r\n          element.style[selectProp] = '';\r\n        }\r\n        else if (typeof element.unselectable === 'string') {\r\n          element.unselectable = '';\r\n        }\r\n        return element;\r\n      }\r\n\r\n      fabric.util.makeElementUnselectable = makeElementUnselectable;\r\n      fabric.util.makeElementSelectable = makeElementSelectable;\r\n    })();\r\n\r\n    (function() {\r\n\r\n      /**\r\n       * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\r\n       * @memberOf fabric.util\r\n       * @param {String} url URL of a script to load\r\n       * @param {Function} callback Callback to execute when script is finished loading\r\n       */\r\n      function getScript(url, callback) {\r\n        var headEl = fabric.document.getElementsByTagName('head')[0],\r\n            scriptEl = fabric.document.createElement('script'),\r\n            loading = true;\r\n\r\n        /** @ignore */\r\n        scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\r\n          if (loading) {\r\n            if (typeof this.readyState === 'string' &&\r\n                this.readyState !== 'loaded' &&\r\n                this.readyState !== 'complete') {\r\n              return;\r\n            }\r\n            loading = false;\r\n            callback(e || fabric.window.event);\r\n            scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\r\n          }\r\n        };\r\n        scriptEl.src = url;\r\n        headEl.appendChild(scriptEl);\r\n        // causes issue in Opera\r\n        // headEl.removeChild(scriptEl);\r\n      }\r\n\r\n      fabric.util.getScript = getScript;\r\n    })();\r\n\r\n    function getNodeCanvas(element) {\r\n      var impl = fabric.jsdomImplForWrapper(element);\r\n      return impl._canvas || impl._image;\r\n    };\r\n\r\n    function cleanUpJsdomNode(element) {\r\n      if (!fabric.isLikelyNode) {\r\n        return;\r\n      }\r\n      var impl = fabric.jsdomImplForWrapper(element);\r\n      if (impl) {\r\n        impl._image = null;\r\n        impl._canvas = null;\r\n        // unsure if necessary\r\n        impl._currentSrc = null;\r\n        impl._attributes = null;\r\n        impl._classList = null;\r\n      }\r\n    }\r\n\r\n    fabric.util.getById = getById;\r\n    fabric.util.toArray = toArray;\r\n    fabric.util.makeElement = makeElement;\r\n    fabric.util.addClass = addClass;\r\n    fabric.util.wrapElement = wrapElement;\r\n    fabric.util.getScrollLeftTop = getScrollLeftTop;\r\n    fabric.util.getElementOffset = getElementOffset;\r\n    fabric.util.getElementStyle = getElementStyle;\r\n    fabric.util.getNodeCanvas = getNodeCanvas;\r\n    fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function addParamToUrl(url, param) {\r\n      return url + (/\\?/.test(url) ? '&' : '?') + param;\r\n    }\r\n\r\n    function emptyFn() { }\r\n\r\n    /**\r\n     * Cross-browser abstraction for sending XMLHttpRequest\r\n     * @memberOf fabric.util\r\n     * @param {String} url URL to send XMLHttpRequest to\r\n     * @param {Object} [options] Options object\r\n     * @param {String} [options.method=\"GET\"]\r\n     * @param {String} [options.parameters] parameters to append to url in GET or in body\r\n     * @param {String} [options.body] body to send with POST or PUT request\r\n     * @param {Function} options.onComplete Callback to invoke when request is completed\r\n     * @return {XMLHttpRequest} request\r\n     */\r\n    function request(url, options) {\r\n      options || (options = { });\r\n\r\n      var method = options.method ? options.method.toUpperCase() : 'GET',\r\n          onComplete = options.onComplete || function() { },\r\n          xhr = new fabric.window.XMLHttpRequest(),\r\n          body = options.body || options.parameters;\r\n\r\n      /** @ignore */\r\n      xhr.onreadystatechange = function() {\r\n        if (xhr.readyState === 4) {\r\n          onComplete(xhr);\r\n          xhr.onreadystatechange = emptyFn;\r\n        }\r\n      };\r\n\r\n      if (method === 'GET') {\r\n        body = null;\r\n        if (typeof options.parameters === 'string') {\r\n          url = addParamToUrl(url, options.parameters);\r\n        }\r\n      }\r\n\r\n      xhr.open(method, url, true);\r\n\r\n      if (method === 'POST' || method === 'PUT') {\r\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n      }\r\n\r\n      xhr.send(body);\r\n      return xhr;\r\n    }\r\n\r\n    fabric.util.request = request;\r\n  })();\r\n\r\n\r\n  /**\r\n   * Wrapper around `console.log` (when available)\r\n   * @param {*} [values] Values to log\r\n   */\r\n  fabric.log = console.log;\r\n\r\n  /**\r\n   * Wrapper around `console.warn` (when available)\r\n   * @param {*} [values] Values to log as a warning\r\n   */\r\n  fabric.warn = console.warn;\r\n\r\n\r\n  (function() {\r\n\r\n    function noop() {\r\n      return false;\r\n    }\r\n\r\n    function defaultEasing(t, b, c, d) {\r\n      return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n    }\r\n\r\n    /**\r\n     * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\r\n     * @memberOf fabric.util\r\n     * @param {Object} [options] Animation options\r\n     * @param {Function} [options.onChange] Callback; invoked on every value change\r\n     * @param {Function} [options.onComplete] Callback; invoked when value change is completed\r\n     * @param {Number} [options.startValue=0] Starting value\r\n     * @param {Number} [options.endValue=100] Ending value\r\n     * @param {Number} [options.byValue=100] Value to modify the property by\r\n     * @param {Function} [options.easing] Easing function\r\n     * @param {Number} [options.duration=500] Duration of change (in ms)\r\n     * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\r\n     */\r\n    function animate(options) {\r\n\r\n      requestAnimFrame(function(timestamp) {\r\n        options || (options = { });\r\n\r\n        var start = timestamp || +new Date(),\r\n            duration = options.duration || 500,\r\n            finish = start + duration, time,\r\n            onChange = options.onChange || noop,\r\n            abort = options.abort || noop,\r\n            onComplete = options.onComplete || noop,\r\n            easing = options.easing || defaultEasing,\r\n            startValue = 'startValue' in options ? options.startValue : 0,\r\n            endValue = 'endValue' in options ? options.endValue : 100,\r\n            byValue = options.byValue || endValue - startValue;\r\n\r\n        options.onStart && options.onStart();\r\n\r\n        (function tick(ticktime) {\r\n          // TODO: move abort call after calculation\r\n          // and pass (current,valuePerc, timePerc) as arguments\r\n          time = ticktime || +new Date();\r\n          var currentTime = time > finish ? duration : (time - start),\r\n              timePerc = currentTime / duration,\r\n              current = easing(currentTime, startValue, byValue, duration),\r\n              valuePerc = Math.abs((current - startValue) / byValue);\r\n          if (abort()) {\r\n            onComplete(endValue, 1, 1);\r\n            return;\r\n          }\r\n          if (time > finish) {\r\n            onChange(endValue, 1, 1);\r\n            onComplete(endValue, 1, 1);\r\n            return;\r\n          }\r\n          else {\r\n            onChange(current, valuePerc, timePerc);\r\n            requestAnimFrame(tick);\r\n          }\r\n        })(start);\r\n      });\r\n    }\r\n\r\n    var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\r\n                            fabric.window.webkitRequestAnimationFrame ||\r\n                            fabric.window.mozRequestAnimationFrame    ||\r\n                            fabric.window.oRequestAnimationFrame      ||\r\n                            fabric.window.msRequestAnimationFrame     ||\r\n                            function(callback) {\r\n                              return fabric.window.setTimeout(callback, 1000 / 60);\r\n                            };\r\n\r\n    var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\r\n\r\n    /**\r\n     * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n     * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\r\n     * @memberOf fabric.util\r\n     * @param {Function} callback Callback to invoke\r\n     * @param {DOMElement} element optional Element to associate with animation\r\n     */\r\n    function requestAnimFrame() {\r\n      return _requestAnimFrame.apply(fabric.window, arguments);\r\n    }\r\n\r\n    function cancelAnimFrame() {\r\n      return _cancelAnimFrame.apply(fabric.window, arguments);\r\n    }\r\n\r\n    fabric.util.animate = animate;\r\n    fabric.util.requestAnimFrame = requestAnimFrame;\r\n    fabric.util.cancelAnimFrame = cancelAnimFrame;\r\n  })();\r\n\r\n\r\n  (function() {\r\n    // Calculate an in-between color. Returns a \"rgba()\" string.\r\n    // Credit: Edwin Martin <edwin@bitstorm.org>\r\n    //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\r\n    function calculateColor(begin, end, pos) {\r\n      var color = 'rgba('\r\n          + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\r\n          + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\r\n          + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\r\n\r\n      color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\r\n      color += ')';\r\n      return color;\r\n    }\r\n\r\n    /**\r\n     * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\r\n     * @memberOf fabric.util\r\n     * @param {String} fromColor The starting color in hex or rgb(a) format.\r\n     * @param {String} toColor The starting color in hex or rgb(a) format.\r\n     * @param {Number} [duration] Duration of change (in ms).\r\n     * @param {Object} [options] Animation options\r\n     * @param {Function} [options.onChange] Callback; invoked on every value change\r\n     * @param {Function} [options.onComplete] Callback; invoked when value change is completed\r\n     * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\r\n     * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\r\n     */\r\n    function animateColor(fromColor, toColor, duration, options) {\r\n      var startColor = new fabric.Color(fromColor).getSource(),\r\n          endColor = new fabric.Color(toColor).getSource();\r\n\r\n      options = options || {};\r\n\r\n      fabric.util.animate(fabric.util.object.extend(options, {\r\n        duration: duration || 500,\r\n        startValue: startColor,\r\n        endValue: endColor,\r\n        byValue: endColor,\r\n        easing: function (currentTime, startValue, byValue, duration) {\r\n          var posValue = options.colorEasing\r\n            ? options.colorEasing(currentTime, duration)\r\n            : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\r\n          return calculateColor(startValue, byValue, posValue);\r\n        }\r\n      }));\r\n    }\r\n\r\n    fabric.util.animateColor = animateColor;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function normalize(a, c, p, s) {\r\n      if (a < Math.abs(c)) {\r\n        a = c;\r\n        s = p / 4;\r\n      }\r\n      else {\r\n        //handle the 0/0 case:\r\n        if (c === 0 && a === 0) {\r\n          s = p / (2 * Math.PI) * Math.asin(1);\r\n        }\r\n        else {\r\n          s = p / (2 * Math.PI) * Math.asin(c / a);\r\n        }\r\n      }\r\n      return { a: a, c: c, p: p, s: s };\r\n    }\r\n\r\n    function elastic(opts, t, d) {\r\n      return opts.a *\r\n        Math.pow(2, 10 * (t -= 1)) *\r\n        Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\r\n    }\r\n\r\n    /**\r\n     * Cubic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutCubic(t, b, c, d) {\r\n      return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Cubic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutCubic(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * t * t * t + b;\r\n      }\r\n      return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Quartic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInQuart(t, b, c, d) {\r\n      return c * (t /= d) * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * Quartic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutQuart(t, b, c, d) {\r\n      return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Quartic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutQuart(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * t * t * t * t + b;\r\n      }\r\n      return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Quintic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInQuint(t, b, c, d) {\r\n      return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * Quintic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutQuint(t, b, c, d) {\r\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Quintic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutQuint(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * t * t * t * t * t + b;\r\n      }\r\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Sinusoidal easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInSine(t, b, c, d) {\r\n      return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n    }\r\n\r\n    /**\r\n     * Sinusoidal easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutSine(t, b, c, d) {\r\n      return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n    }\r\n\r\n    /**\r\n     * Sinusoidal easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutSine(t, b, c, d) {\r\n      return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Exponential easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInExpo(t, b, c, d) {\r\n      return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n    }\r\n\r\n    /**\r\n     * Exponential easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutExpo(t, b, c, d) {\r\n      return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Exponential easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutExpo(t, b, c, d) {\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      if (t === d) {\r\n        return b + c;\r\n      }\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n      }\r\n      return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Circular easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInCirc(t, b, c, d) {\r\n      return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Circular easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutCirc(t, b, c, d) {\r\n      return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n\r\n    /**\r\n     * Circular easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutCirc(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n      }\r\n      return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Elastic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInElastic(t, b, c, d) {\r\n      var s = 1.70158, p = 0, a = c;\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      t /= d;\r\n      if (t === 1) {\r\n        return b + c;\r\n      }\r\n      if (!p) {\r\n        p = d * 0.3;\r\n      }\r\n      var opts = normalize(a, c, p, s);\r\n      return -elastic(opts, t, d) + b;\r\n    }\r\n\r\n    /**\r\n     * Elastic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutElastic(t, b, c, d) {\r\n      var s = 1.70158, p = 0, a = c;\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      t /= d;\r\n      if (t === 1) {\r\n        return b + c;\r\n      }\r\n      if (!p) {\r\n        p = d * 0.3;\r\n      }\r\n      var opts = normalize(a, c, p, s);\r\n      return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\r\n    }\r\n\r\n    /**\r\n     * Elastic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutElastic(t, b, c, d) {\r\n      var s = 1.70158, p = 0, a = c;\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      t /= d / 2;\r\n      if (t === 2) {\r\n        return b + c;\r\n      }\r\n      if (!p) {\r\n        p = d * (0.3 * 1.5);\r\n      }\r\n      var opts = normalize(a, c, p, s);\r\n      if (t < 1) {\r\n        return -0.5 * elastic(opts, t, d) + b;\r\n      }\r\n      return opts.a * Math.pow(2, -10 * (t -= 1)) *\r\n        Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\r\n    }\r\n\r\n    /**\r\n     * Backwards easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInBack(t, b, c, d, s) {\r\n      if (s === undefined) {\r\n        s = 1.70158;\r\n      }\r\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n\r\n    /**\r\n     * Backwards easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutBack(t, b, c, d, s) {\r\n      if (s === undefined) {\r\n        s = 1.70158;\r\n      }\r\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Backwards easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutBack(t, b, c, d, s) {\r\n      if (s === undefined) {\r\n        s = 1.70158;\r\n      }\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n      }\r\n      return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Bouncing easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInBounce(t, b, c, d) {\r\n      return c - easeOutBounce (d - t, 0, c, d) + b;\r\n    }\r\n\r\n    /**\r\n     * Bouncing easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutBounce(t, b, c, d) {\r\n      if ((t /= d) < (1 / 2.75)) {\r\n        return c * (7.5625 * t * t) + b;\r\n      }\r\n      else if (t < (2 / 2.75)) {\r\n        return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\r\n      }\r\n      else if (t < (2.5 / 2.75)) {\r\n        return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\r\n      }\r\n      else {\r\n        return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Bouncing easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutBounce(t, b, c, d) {\r\n      if (t < d / 2) {\r\n        return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\r\n      }\r\n      return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\r\n    }\r\n\r\n    /**\r\n     * Easing functions\r\n     * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\r\n     * @namespace fabric.util.ease\r\n     */\r\n    fabric.util.ease = {\r\n\r\n      /**\r\n       * Quadratic easing in\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeInQuad: function(t, b, c, d) {\r\n        return c * (t /= d) * t + b;\r\n      },\r\n\r\n      /**\r\n       * Quadratic easing out\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeOutQuad: function(t, b, c, d) {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n      },\r\n\r\n      /**\r\n       * Quadratic easing in and out\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeInOutQuad: function(t, b, c, d) {\r\n        t /= (d / 2);\r\n        if (t < 1) {\r\n          return c / 2 * t * t + b;\r\n        }\r\n        return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n      },\r\n\r\n      /**\r\n       * Cubic easing in\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeInCubic: function(t, b, c, d) {\r\n        return c * (t /= d) * t * t + b;\r\n      },\r\n\r\n      easeOutCubic: easeOutCubic,\r\n      easeInOutCubic: easeInOutCubic,\r\n      easeInQuart: easeInQuart,\r\n      easeOutQuart: easeOutQuart,\r\n      easeInOutQuart: easeInOutQuart,\r\n      easeInQuint: easeInQuint,\r\n      easeOutQuint: easeOutQuint,\r\n      easeInOutQuint: easeInOutQuint,\r\n      easeInSine: easeInSine,\r\n      easeOutSine: easeOutSine,\r\n      easeInOutSine: easeInOutSine,\r\n      easeInExpo: easeInExpo,\r\n      easeOutExpo: easeOutExpo,\r\n      easeInOutExpo: easeInOutExpo,\r\n      easeInCirc: easeInCirc,\r\n      easeOutCirc: easeOutCirc,\r\n      easeInOutCirc: easeInOutCirc,\r\n      easeInElastic: easeInElastic,\r\n      easeOutElastic: easeOutElastic,\r\n      easeInOutElastic: easeInOutElastic,\r\n      easeInBack: easeInBack,\r\n      easeOutBack: easeOutBack,\r\n      easeInOutBack: easeInOutBack,\r\n      easeInBounce: easeInBounce,\r\n      easeOutBounce: easeOutBounce,\r\n      easeInOutBounce: easeInOutBounce\r\n    };\r\n\r\n  })();\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * @name fabric\r\n     * @namespace\r\n     */\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        clone = fabric.util.object.clone,\r\n        toFixed = fabric.util.toFixed,\r\n        parseUnit = fabric.util.parseUnit,\r\n        multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\r\n\r\n        svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\r\n          'image', 'text'],\r\n        svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\r\n        svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\r\n        svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\r\n\r\n        attributesMap = {\r\n          cx:                   'left',\r\n          x:                    'left',\r\n          r:                    'radius',\r\n          cy:                   'top',\r\n          y:                    'top',\r\n          display:              'visible',\r\n          visibility:           'visible',\r\n          transform:            'transformMatrix',\r\n          'fill-opacity':       'fillOpacity',\r\n          'fill-rule':          'fillRule',\r\n          'font-family':        'fontFamily',\r\n          'font-size':          'fontSize',\r\n          'font-style':         'fontStyle',\r\n          'font-weight':        'fontWeight',\r\n          'letter-spacing':     'charSpacing',\r\n          'paint-order':        'paintFirst',\r\n          'stroke-dasharray':   'strokeDashArray',\r\n          'stroke-dashoffset':  'strokeDashOffset',\r\n          'stroke-linecap':     'strokeLineCap',\r\n          'stroke-linejoin':    'strokeLineJoin',\r\n          'stroke-miterlimit':  'strokeMiterLimit',\r\n          'stroke-opacity':     'strokeOpacity',\r\n          'stroke-width':       'strokeWidth',\r\n          'text-decoration':    'textDecoration',\r\n          'text-anchor':        'textAnchor',\r\n          opacity:              'opacity',\r\n          'clip-path':          'clipPath',\r\n          'clip-rule':          'clipRule',\r\n          'vector-effect':      'strokeUniform'\r\n        },\r\n\r\n        colorAttributes = {\r\n          stroke: 'strokeOpacity',\r\n          fill:   'fillOpacity'\r\n        },\r\n\r\n        fSize = 'font-size', cPath = 'clip-path';\r\n\r\n    fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\r\n    fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\r\n    fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\r\n    fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\r\n\r\n    fabric.cssRules = { };\r\n    fabric.gradientDefs = { };\r\n    fabric.clipPaths = { };\r\n\r\n    function normalizeAttr(attr) {\r\n      // transform attribute names\r\n      if (attr in attributesMap) {\r\n        return attributesMap[attr];\r\n      }\r\n      return attr;\r\n    }\r\n\r\n    function normalizeValue(attr, value, parentAttributes, fontSize) {\r\n      var isArray = Object.prototype.toString.call(value) === '[object Array]',\r\n          parsed;\r\n\r\n      if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\r\n        value = '';\r\n      }\r\n      else if (attr === 'vector-effect') {\r\n        value = value === 'non-scaling-stroke';\r\n      }\r\n      else if (attr === 'strokeDashArray') {\r\n        if (value === 'none') {\r\n          value = null;\r\n        }\r\n        else {\r\n          value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\r\n        }\r\n      }\r\n      else if (attr === 'transformMatrix') {\r\n        if (parentAttributes && parentAttributes.transformMatrix) {\r\n          value = multiplyTransformMatrices(\r\n            parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\r\n        }\r\n        else {\r\n          value = fabric.parseTransformAttribute(value);\r\n        }\r\n      }\r\n      else if (attr === 'visible') {\r\n        value = value !== 'none' && value !== 'hidden';\r\n        // display=none on parent element always takes precedence over child element\r\n        if (parentAttributes && parentAttributes.visible === false) {\r\n          value = false;\r\n        }\r\n      }\r\n      else if (attr === 'opacity') {\r\n        value = parseFloat(value);\r\n        if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\r\n          value *= parentAttributes.opacity;\r\n        }\r\n      }\r\n      else if (attr === 'textAnchor' /* text-anchor */) {\r\n        value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\r\n      }\r\n      else if (attr === 'charSpacing') {\r\n        // parseUnit returns px and we convert it to em\r\n        parsed = parseUnit(value, fontSize) / fontSize * 1000;\r\n      }\r\n      else if (attr === 'paintFirst') {\r\n        var fillIndex = value.indexOf('fill');\r\n        var strokeIndex = value.indexOf('stroke');\r\n        var value = 'fill';\r\n        if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\r\n          value = 'stroke';\r\n        }\r\n        else if (fillIndex === -1 && strokeIndex > -1) {\r\n          value = 'stroke';\r\n        }\r\n      }\r\n      else if (attr === 'href' || attr === 'xlink:href') {\r\n        return value;\r\n      }\r\n      else {\r\n        parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\r\n      }\r\n\r\n      return (!isArray && isNaN(parsed) ? value : parsed);\r\n    }\r\n\r\n    /**\r\n      * @private\r\n      */\r\n    function getSvgRegex(arr) {\r\n      return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} attributes Array of attributes to parse\r\n     */\r\n    function _setStrokeFillOpacity(attributes) {\r\n      for (var attr in colorAttributes) {\r\n\r\n        if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\r\n          continue;\r\n        }\r\n\r\n        if (typeof attributes[attr] === 'undefined') {\r\n          if (!fabric.Object.prototype[attr]) {\r\n            continue;\r\n          }\r\n          attributes[attr] = fabric.Object.prototype[attr];\r\n        }\r\n\r\n        if (attributes[attr].indexOf('url(') === 0) {\r\n          continue;\r\n        }\r\n\r\n        var color = new fabric.Color(attributes[attr]);\r\n        attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\r\n      }\r\n      return attributes;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function _getMultipleNodes(doc, nodeNames) {\r\n      var nodeName, nodeArray = [], nodeList, i, len;\r\n      for (i = 0, len = nodeNames.length; i < len; i++) {\r\n        nodeName = nodeNames[i];\r\n        nodeList = doc.getElementsByTagName(nodeName);\r\n        nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\r\n      }\r\n      return nodeArray;\r\n    }\r\n\r\n    /**\r\n     * Parses \"transform\" attribute, returning an array of values\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric\r\n     * @param {String} attributeValue String containing attribute value\r\n     * @return {Array} Array of 6 elements representing transformation matrix\r\n     */\r\n    fabric.parseTransformAttribute = (function() {\r\n      function rotateMatrix(matrix, args) {\r\n        var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\r\n            x = 0, y = 0;\r\n        if (args.length === 3) {\r\n          x = args[1];\r\n          y = args[2];\r\n        }\r\n\r\n        matrix[0] = cos;\r\n        matrix[1] = sin;\r\n        matrix[2] = -sin;\r\n        matrix[3] = cos;\r\n        matrix[4] = x - (cos * x - sin * y);\r\n        matrix[5] = y - (sin * x + cos * y);\r\n      }\r\n\r\n      function scaleMatrix(matrix, args) {\r\n        var multiplierX = args[0],\r\n            multiplierY = (args.length === 2) ? args[1] : args[0];\r\n\r\n        matrix[0] = multiplierX;\r\n        matrix[3] = multiplierY;\r\n      }\r\n\r\n      function skewMatrix(matrix, args, pos) {\r\n        matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\r\n      }\r\n\r\n      function translateMatrix(matrix, args) {\r\n        matrix[4] = args[0];\r\n        if (args.length === 2) {\r\n          matrix[5] = args[1];\r\n        }\r\n      }\r\n\r\n      // identity matrix\r\n      var iMatrix = fabric.iMatrix,\r\n\r\n          // == begin transform regexp\r\n          number = fabric.reNum,\r\n\r\n          commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\r\n\r\n          skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\r\n\r\n          skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\r\n\r\n          rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                      commaWsp + '(' + number + ')' +\r\n                      commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n          scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                      commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n          translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                      commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n          matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' +\r\n                    '\\\\s*\\\\))',\r\n\r\n          transform = '(?:' +\r\n                      matrix + '|' +\r\n                      translate + '|' +\r\n                      scale + '|' +\r\n                      rotate + '|' +\r\n                      skewX + '|' +\r\n                      skewY +\r\n                      ')',\r\n\r\n          transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\r\n\r\n          transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\r\n\r\n          // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\r\n          reTransformList = new RegExp(transformList),\r\n          // == end transform regexp\r\n\r\n          reTransform = new RegExp(transform, 'g');\r\n\r\n      return function(attributeValue) {\r\n\r\n        // start with identity matrix\r\n        var matrix = iMatrix.concat(),\r\n            matrices = [];\r\n\r\n        // return if no argument was given or\r\n        // an argument does not match transform attribute regexp\r\n        if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\r\n          return matrix;\r\n        }\r\n\r\n        attributeValue.replace(reTransform, function(match) {\r\n\r\n          var m = new RegExp(transform).exec(match).filter(function (match) {\r\n                // match !== '' && match != null\r\n                return (!!match);\r\n              }),\r\n              operation = m[1],\r\n              args = m.slice(2).map(parseFloat);\r\n\r\n          switch (operation) {\r\n            case 'translate':\r\n              translateMatrix(matrix, args);\r\n              break;\r\n            case 'rotate':\r\n              args[0] = fabric.util.degreesToRadians(args[0]);\r\n              rotateMatrix(matrix, args);\r\n              break;\r\n            case 'scale':\r\n              scaleMatrix(matrix, args);\r\n              break;\r\n            case 'skewX':\r\n              skewMatrix(matrix, args, 2);\r\n              break;\r\n            case 'skewY':\r\n              skewMatrix(matrix, args, 1);\r\n              break;\r\n            case 'matrix':\r\n              matrix = args;\r\n              break;\r\n          }\r\n\r\n          // snapshot current matrix into matrices array\r\n          matrices.push(matrix.concat());\r\n          // reset\r\n          matrix = iMatrix.concat();\r\n        });\r\n\r\n        var combinedMatrix = matrices[0];\r\n        while (matrices.length > 1) {\r\n          matrices.shift();\r\n          combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\r\n        }\r\n        return combinedMatrix;\r\n      };\r\n    })();\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function parseStyleString(style, oStyle) {\r\n      var attr, value;\r\n      style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\r\n        var pair = chunk.split(':');\r\n\r\n        attr = pair[0].trim().toLowerCase();\r\n        value =  pair[1].trim();\r\n\r\n        oStyle[attr] = value;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function parseStyleObject(style, oStyle) {\r\n      var attr, value;\r\n      for (var prop in style) {\r\n        if (typeof style[prop] === 'undefined') {\r\n          continue;\r\n        }\r\n\r\n        attr = prop.toLowerCase();\r\n        value = style[prop];\r\n\r\n        oStyle[attr] = value;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function getGlobalStylesForElement(element, svgUid) {\r\n      var styles = { };\r\n      for (var rule in fabric.cssRules[svgUid]) {\r\n        if (elementMatchesRule(element, rule.split(' '))) {\r\n          for (var property in fabric.cssRules[svgUid][rule]) {\r\n            styles[property] = fabric.cssRules[svgUid][rule][property];\r\n          }\r\n        }\r\n      }\r\n      return styles;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function elementMatchesRule(element, selectors) {\r\n      var firstMatching, parentMatching = true;\r\n      //start from rightmost selector.\r\n      firstMatching = selectorMatches(element, selectors.pop());\r\n      if (firstMatching && selectors.length) {\r\n        parentMatching = doesSomeParentMatch(element, selectors);\r\n      }\r\n      return firstMatching && parentMatching && (selectors.length === 0);\r\n    }\r\n\r\n    function doesSomeParentMatch(element, selectors) {\r\n      var selector, parentMatching = true;\r\n      while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\r\n        if (parentMatching) {\r\n          selector = selectors.pop();\r\n        }\r\n        element = element.parentNode;\r\n        parentMatching = selectorMatches(element, selector);\r\n      }\r\n      return selectors.length === 0;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function selectorMatches(element, selector) {\r\n      var nodeName = element.nodeName,\r\n          classNames = element.getAttribute('class'),\r\n          id = element.getAttribute('id'), matcher, i;\r\n      // i check if a selector matches slicing away part from it.\r\n      // if i get empty string i should match\r\n      matcher = new RegExp('^' + nodeName, 'i');\r\n      selector = selector.replace(matcher, '');\r\n      if (id && selector.length) {\r\n        matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\r\n        selector = selector.replace(matcher, '');\r\n      }\r\n      if (classNames && selector.length) {\r\n        classNames = classNames.split(' ');\r\n        for (i = classNames.length; i--;) {\r\n          matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\r\n          selector = selector.replace(matcher, '');\r\n        }\r\n      }\r\n      return selector.length === 0;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\r\n     */\r\n    function elementById(doc, id) {\r\n      var el;\r\n      doc.getElementById && (el = doc.getElementById(id));\r\n      if (el) {\r\n        return el;\r\n      }\r\n      var node, i, len, nodelist = doc.getElementsByTagName('*');\r\n      for (i = 0, len = nodelist.length; i < len; i++) {\r\n        node = nodelist[i];\r\n        if (id === node.getAttribute('id')) {\r\n          return node;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function parseUseDirectives(doc) {\r\n      var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\r\n      while (nodelist.length && i < nodelist.length) {\r\n        var el = nodelist[i],\r\n            xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\r\n            x = el.getAttribute('x') || 0,\r\n            y = el.getAttribute('y') || 0,\r\n            el2 = elementById(doc, xlink).cloneNode(true),\r\n            currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\r\n            parentNode, oldLength = nodelist.length, attr, j, attrs, len, namespace = fabric.svgNS;\r\n\r\n        applyViewboxTransform(el2);\r\n        if (/^svg$/i.test(el2.nodeName)) {\r\n          var el3 = el2.ownerDocument.createElementNS(namespace, 'g');\r\n          for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\r\n            attr = attrs.item(j);\r\n            el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue);\r\n          }\r\n          // el2.firstChild != null\r\n          while (el2.firstChild) {\r\n            el3.appendChild(el2.firstChild);\r\n          }\r\n          el2 = el3;\r\n        }\r\n\r\n        for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\r\n          attr = attrs.item(j);\r\n          if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\r\n            attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\r\n            continue;\r\n          }\r\n\r\n          if (attr.nodeName === 'transform') {\r\n            currentTrans = attr.nodeValue + ' ' + currentTrans;\r\n          }\r\n          else {\r\n            el2.setAttribute(attr.nodeName, attr.nodeValue);\r\n          }\r\n        }\r\n\r\n        el2.setAttribute('transform', currentTrans);\r\n        el2.setAttribute('instantiated_by_use', '1');\r\n        el2.removeAttribute('id');\r\n        parentNode = el.parentNode;\r\n        parentNode.replaceChild(el2, el);\r\n        // some browsers do not shorten nodelist after replaceChild (IE8)\r\n        if (nodelist.length === oldLength) {\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\r\n    // matches, e.g.: +14.56e-12, etc.\r\n    var reViewBoxAttrValue = new RegExp(\r\n      '^' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\r\n      '$'\r\n    );\r\n\r\n    /**\r\n     * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\r\n     */\r\n    function applyViewboxTransform(element) {\r\n\r\n      var viewBoxAttr = element.getAttribute('viewBox'),\r\n          scaleX = 1,\r\n          scaleY = 1,\r\n          minX = 0,\r\n          minY = 0,\r\n          viewBoxWidth, viewBoxHeight, matrix, el,\r\n          widthAttr = element.getAttribute('width'),\r\n          heightAttr = element.getAttribute('height'),\r\n          x = element.getAttribute('x') || 0,\r\n          y = element.getAttribute('y') || 0,\r\n          preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\r\n          missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\r\n                             || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\r\n          missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\r\n          toBeParsed = missingViewBox && missingDimAttr,\r\n          parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\r\n\r\n      parsedDim.width = 0;\r\n      parsedDim.height = 0;\r\n      parsedDim.toBeParsed = toBeParsed;\r\n\r\n      if (toBeParsed) {\r\n        return parsedDim;\r\n      }\r\n\r\n      if (missingViewBox) {\r\n        parsedDim.width = parseUnit(widthAttr);\r\n        parsedDim.height = parseUnit(heightAttr);\r\n        return parsedDim;\r\n      }\r\n      minX = -parseFloat(viewBoxAttr[1]);\r\n      minY = -parseFloat(viewBoxAttr[2]);\r\n      viewBoxWidth = parseFloat(viewBoxAttr[3]);\r\n      viewBoxHeight = parseFloat(viewBoxAttr[4]);\r\n      parsedDim.minX = minX;\r\n      parsedDim.minY = minY;\r\n      parsedDim.viewBoxWidth = viewBoxWidth;\r\n      parsedDim.viewBoxHeight = viewBoxHeight;\r\n      if (!missingDimAttr) {\r\n        parsedDim.width = parseUnit(widthAttr);\r\n        parsedDim.height = parseUnit(heightAttr);\r\n        scaleX = parsedDim.width / viewBoxWidth;\r\n        scaleY = parsedDim.height / viewBoxHeight;\r\n      }\r\n      else {\r\n        parsedDim.width = viewBoxWidth;\r\n        parsedDim.height = viewBoxHeight;\r\n      }\r\n\r\n      // default is to preserve aspect ratio\r\n      preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\r\n      if (preserveAspectRatio.alignX !== 'none') {\r\n        //translate all container for the effect of Mid, Min, Max\r\n        if (preserveAspectRatio.meetOrSlice === 'meet') {\r\n          scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\r\n          // calculate additional translation to move the viewbox\r\n        }\r\n        if (preserveAspectRatio.meetOrSlice === 'slice') {\r\n          scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\r\n          // calculate additional translation to move the viewbox\r\n        }\r\n        widthDiff = parsedDim.width - viewBoxWidth * scaleX;\r\n        heightDiff = parsedDim.height - viewBoxHeight * scaleX;\r\n        if (preserveAspectRatio.alignX === 'Mid') {\r\n          widthDiff /= 2;\r\n        }\r\n        if (preserveAspectRatio.alignY === 'Mid') {\r\n          heightDiff /= 2;\r\n        }\r\n        if (preserveAspectRatio.alignX === 'Min') {\r\n          widthDiff = 0;\r\n        }\r\n        if (preserveAspectRatio.alignY === 'Min') {\r\n          heightDiff = 0;\r\n        }\r\n      }\r\n\r\n      if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\r\n        return parsedDim;\r\n      }\r\n\r\n      if (x || y) {\r\n        translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\r\n      }\r\n\r\n      matrix = translateMatrix + ' matrix(' + scaleX +\r\n                    ' 0' +\r\n                    ' 0 ' +\r\n                    scaleY + ' ' +\r\n                    (minX * scaleX + widthDiff) + ' ' +\r\n                    (minY * scaleY + heightDiff) + ') ';\r\n      parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\r\n      if (element.nodeName === 'svg') {\r\n        el = element.ownerDocument.createElementNS(fabric.svgNS, 'g');\r\n        // element.firstChild != null\r\n        while (element.firstChild) {\r\n          el.appendChild(element.firstChild);\r\n        }\r\n        element.appendChild(el);\r\n      }\r\n      else {\r\n        el = element;\r\n        matrix = el.getAttribute('transform') + matrix;\r\n      }\r\n      el.setAttribute('transform', matrix);\r\n      return parsedDim;\r\n    }\r\n\r\n    function hasAncestorWithNodeName(element, nodeName) {\r\n      while (element && (element = element.parentNode)) {\r\n        if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\r\n          && !element.getAttribute('instantiated_by_use')) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric\r\n     * @param {SVGDocument} doc SVG document to parse\r\n     * @param {Function} callback Callback to call when parsing is finished;\r\n     * It's being passed an array of elements (parsed from a document).\r\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n     * @param {Object} [parsingOptions] options for parsing document\r\n     * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\r\n     */\r\n    fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\r\n      if (!doc) {\r\n        return;\r\n      }\r\n\r\n      parseUseDirectives(doc);\r\n\r\n      var svgUid =  fabric.Object.__uid++, i, len,\r\n          options = applyViewboxTransform(doc),\r\n          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\r\n      options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\r\n      options.svgUid = svgUid;\r\n\r\n      if (descendants.length === 0 && fabric.isLikelyNode) {\r\n        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\r\n        // https://github.com/ajaxorg/node-o3-xml/issues/21\r\n        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\r\n        var arr = [];\r\n        for (i = 0, len = descendants.length; i < len; i++) {\r\n          arr[i] = descendants[i];\r\n        }\r\n        descendants = arr;\r\n      }\r\n\r\n      var elements = descendants.filter(function(el) {\r\n        applyViewboxTransform(el);\r\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\r\n              !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\r\n      });\r\n\r\n      if (!elements || (elements && !elements.length)) {\r\n        callback && callback([], {});\r\n        return;\r\n      }\r\n      var clipPaths = { };\r\n      descendants.filter(function(el) {\r\n        return el.nodeName.replace('svg:', '') === 'clipPath';\r\n      }).forEach(function(el) {\r\n        var id = el.getAttribute('id');\r\n        clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\r\n          return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\r\n        });\r\n      });\r\n      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\r\n      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\r\n      fabric.clipPaths[svgUid] = clipPaths;\r\n      // Precedence of rules:   style > class > attribute\r\n      fabric.parseElements(elements, function(instances, elements) {\r\n        if (callback) {\r\n          callback(instances, options, elements, descendants);\r\n          delete fabric.gradientDefs[svgUid];\r\n          delete fabric.cssRules[svgUid];\r\n          delete fabric.clipPaths[svgUid];\r\n        }\r\n      }, clone(options), reviver, parsingOptions);\r\n    };\r\n\r\n    function recursivelyParseGradientsXlink(doc, gradient) {\r\n      var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\r\n          xlinkAttr = 'xlink:href',\r\n          xLink = gradient.getAttribute(xlinkAttr).substr(1),\r\n          referencedGradient = elementById(doc, xLink);\r\n      if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\r\n        recursivelyParseGradientsXlink(doc, referencedGradient);\r\n      }\r\n      gradientsAttrs.forEach(function(attr) {\r\n        if (referencedGradient && !gradient.hasAttribute(attr) && referencedGradient.hasAttribute(attr)) {\r\n          gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\r\n        }\r\n      });\r\n      if (!gradient.children.length) {\r\n        var referenceClone = referencedGradient.cloneNode(true);\r\n        while (referenceClone.firstChild) {\r\n          gradient.appendChild(referenceClone.firstChild);\r\n        }\r\n      }\r\n      gradient.removeAttribute(xlinkAttr);\r\n    }\r\n\r\n    var reFontDeclaration = new RegExp(\r\n      '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\r\n      '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\r\n        fabric.reNum +\r\n      '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\r\n\r\n    extend(fabric, {\r\n      /**\r\n       * Parses a short font declaration, building adding its properties to a style object\r\n       * @static\r\n       * @function\r\n       * @memberOf fabric\r\n       * @param {String} value font declaration\r\n       * @param {Object} oStyle definition\r\n       */\r\n      parseFontDeclaration: function(value, oStyle) {\r\n        var match = value.match(reFontDeclaration);\r\n\r\n        if (!match) {\r\n          return;\r\n        }\r\n        var fontStyle = match[1],\r\n            // font variant is not used\r\n            // fontVariant = match[2],\r\n            fontWeight = match[3],\r\n            fontSize = match[4],\r\n            lineHeight = match[5],\r\n            fontFamily = match[6];\r\n\r\n        if (fontStyle) {\r\n          oStyle.fontStyle = fontStyle;\r\n        }\r\n        if (fontWeight) {\r\n          oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\r\n        }\r\n        if (fontSize) {\r\n          oStyle.fontSize = parseUnit(fontSize);\r\n        }\r\n        if (fontFamily) {\r\n          oStyle.fontFamily = fontFamily;\r\n        }\r\n        if (lineHeight) {\r\n          oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Parses an SVG document, returning all of the gradient declarations found in it\r\n       * @static\r\n       * @function\r\n       * @memberOf fabric\r\n       * @param {SVGDocument} doc SVG document to parse\r\n       * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\r\n       */\r\n      getGradientDefs: function(doc) {\r\n        var tagArray = [\r\n              'linearGradient',\r\n              'radialGradient',\r\n              'svg:linearGradient',\r\n              'svg:radialGradient'],\r\n            elList = _getMultipleNodes(doc, tagArray),\r\n            el, j = 0, gradientDefs = { };\r\n        j = elList.length;\r\n        while (j--) {\r\n          el = elList[j];\r\n          if (el.getAttribute('xlink:href')) {\r\n            recursivelyParseGradientsXlink(doc, el);\r\n          }\r\n          gradientDefs[el.getAttribute('id')] = el;\r\n        }\r\n        return gradientDefs;\r\n      },\r\n\r\n      /**\r\n       * Returns an object of attributes' name/value, given element and an array of attribute names;\r\n       * Parses parent \"g\" nodes recursively upwards.\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {DOMElement} element Element to parse\r\n       * @param {Array} attributes Array of attributes to parse\r\n       * @return {Object} object containing parsed attributes' names/values\r\n       */\r\n      parseAttributes: function(element, attributes, svgUid) {\r\n\r\n        if (!element) {\r\n          return;\r\n        }\r\n\r\n        var value,\r\n            parentAttributes = { },\r\n            fontSize, parentFontSize;\r\n\r\n        if (typeof svgUid === 'undefined') {\r\n          svgUid = element.getAttribute('svgUid');\r\n        }\r\n        // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\r\n        if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\r\n          parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\r\n        }\r\n\r\n        var ownAttributes = attributes.reduce(function(memo, attr) {\r\n          value = element.getAttribute(attr);\r\n          if (value) { // eslint-disable-line\r\n            memo[attr] = value;\r\n          }\r\n          return memo;\r\n        }, { });\r\n        // add values parsed from style, which take precedence over attributes\r\n        // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\r\n        var cssAttrs = extend(\r\n          getGlobalStylesForElement(element, svgUid),\r\n          fabric.parseStyleAttribute(element)\r\n        );\r\n        ownAttributes = extend(\r\n          ownAttributes,\r\n          cssAttrs\r\n        );\r\n        if (cssAttrs[cPath]) {\r\n          element.setAttribute(cPath, cssAttrs[cPath]);\r\n        }\r\n        fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n        if (ownAttributes[fSize]) {\r\n          // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\r\n          ownAttributes[fSize] = fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\r\n        }\r\n\r\n        var normalizedAttr, normalizedValue, normalizedStyle = {};\r\n        for (var attr in ownAttributes) {\r\n          normalizedAttr = normalizeAttr(attr);\r\n          normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\r\n          normalizedStyle[normalizedAttr] = normalizedValue;\r\n        }\r\n        if (normalizedStyle && normalizedStyle.font) {\r\n          fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\r\n        }\r\n        var mergedAttrs = extend(parentAttributes, normalizedStyle);\r\n        return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\r\n      },\r\n\r\n      /**\r\n       * Transforms an array of svg elements to corresponding fabric.* instances\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {Array} elements Array of elements to parse\r\n       * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\r\n       * @param {Object} [options] Options object\r\n       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n       */\r\n      parseElements: function(elements, callback, options, reviver, parsingOptions) {\r\n        new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\r\n      },\r\n\r\n      /**\r\n       * Parses \"style\" attribute, retuning an object with values\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {SVGElement} element Element to parse\r\n       * @return {Object} Objects with values parsed from style attribute of an element\r\n       */\r\n      parseStyleAttribute: function(element) {\r\n        var oStyle = { },\r\n            style = element.getAttribute('style');\r\n\r\n        if (!style) {\r\n          return oStyle;\r\n        }\r\n\r\n        if (typeof style === 'string') {\r\n          parseStyleString(style, oStyle);\r\n        }\r\n        else {\r\n          parseStyleObject(style, oStyle);\r\n        }\r\n\r\n        return oStyle;\r\n      },\r\n\r\n      /**\r\n       * Parses \"points\" attribute, returning an array of values\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {String} points points attribute string\r\n       * @return {Array} array of points\r\n       */\r\n      parsePointsAttribute: function(points) {\r\n\r\n        // points attribute is required and must not be empty\r\n        if (!points) {\r\n          return null;\r\n        }\r\n\r\n        // replace commas with whitespace and remove bookending whitespace\r\n        points = points.replace(/,/g, ' ').trim();\r\n\r\n        points = points.split(/\\s+/);\r\n        var parsedPoints = [], i, len;\r\n\r\n        for (i = 0, len = points.length; i < len; i += 2) {\r\n          parsedPoints.push({\r\n            x: parseFloat(points[i]),\r\n            y: parseFloat(points[i + 1])\r\n          });\r\n        }\r\n\r\n        // odd number of points is an error\r\n        // if (parsedPoints.length % 2 !== 0) {\r\n        //   return null;\r\n        // }\r\n\r\n        return parsedPoints;\r\n      },\r\n\r\n      /**\r\n       * Returns CSS rules for a given SVG document\r\n       * @static\r\n       * @function\r\n       * @memberOf fabric\r\n       * @param {SVGDocument} doc SVG document to parse\r\n       * @return {Object} CSS rules of this document\r\n       */\r\n      getCSSRules: function(doc) {\r\n        var styles = doc.getElementsByTagName('style'), i, len,\r\n            allRules = { }, rules;\r\n\r\n        // very crude parsing of style contents\r\n        for (i = 0, len = styles.length; i < len; i++) {\r\n          // IE9 doesn't support textContent, but provides text instead.\r\n          var styleContents = styles[i].textContent || styles[i].text;\r\n\r\n          // remove comments\r\n          styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\r\n          if (styleContents.trim() === '') {\r\n            continue;\r\n          }\r\n          rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\r\n          rules = rules.map(function(rule) { return rule.trim(); });\r\n          // eslint-disable-next-line no-loop-func\r\n          rules.forEach(function(rule) {\r\n\r\n            var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\r\n                ruleObj = { }, declaration = match[2].trim(),\r\n                propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\r\n\r\n            for (i = 0, len = propertyValuePairs.length; i < len; i++) {\r\n              var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\r\n                  property = pair[0],\r\n                  value = pair[1];\r\n              ruleObj[property] = value;\r\n            }\r\n            rule = match[1];\r\n            rule.split(',').forEach(function(_rule) {\r\n              _rule = _rule.replace(/^svg/i, '').trim();\r\n              if (_rule === '') {\r\n                return;\r\n              }\r\n              if (allRules[_rule]) {\r\n                fabric.util.object.extend(allRules[_rule], ruleObj);\r\n              }\r\n              else {\r\n                allRules[_rule] = fabric.util.object.clone(ruleObj);\r\n              }\r\n            });\r\n          });\r\n        }\r\n        return allRules;\r\n      },\r\n\r\n      /**\r\n       * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\r\n       * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\r\n       * @memberOf fabric\r\n       * @param {String} url\r\n       * @param {Function} callback\r\n       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n       * @param {Object} [options] Object containing options for parsing\r\n       * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\r\n       */\r\n      loadSVGFromURL: function(url, callback, reviver, options) {\r\n\r\n        url = url.replace(/^\\n\\s*/, '').trim();\r\n        new fabric.util.request(url, {\r\n          method: 'get',\r\n          onComplete: onComplete\r\n        });\r\n\r\n        function onComplete(r) {\r\n\r\n          var xml = r.responseXML;\r\n          if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\r\n            xml = new ActiveXObject('Microsoft.XMLDOM');\r\n            xml.async = 'false';\r\n            //IE chokes on DOCTYPE\r\n            xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\r\n          }\r\n          if (!xml || !xml.documentElement) {\r\n            callback && callback(null);\r\n            return false;\r\n          }\r\n\r\n          fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\r\n            callback && callback(results, _options, elements, allElements);\r\n          }, reviver, options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\r\n       * @memberOf fabric\r\n       * @param {String} string\r\n       * @param {Function} callback\r\n       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n       * @param {Object} [options] Object containing options for parsing\r\n       * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\r\n       */\r\n      loadSVGFromString: function(string, callback, reviver, options) {\r\n        string = string.trim();\r\n        var doc;\r\n        if (typeof fabric.window.DOMParser !== 'undefined') {\r\n          var parser = new fabric.window.DOMParser();\r\n          if (parser && parser.parseFromString) {\r\n            doc = parser.parseFromString(string, 'text/xml');\r\n          }\r\n        }\r\n        else if (fabric.window.ActiveXObject) {\r\n          doc = new ActiveXObject('Microsoft.XMLDOM');\r\n          doc.async = 'false';\r\n          // IE chokes on DOCTYPE\r\n          doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\r\n        }\r\n\r\n        fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\r\n          callback(results, _options, elements, allElements);\r\n        }, reviver, options);\r\n      }\r\n    });\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  fabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions, doc) {\r\n    this.elements = elements;\r\n    this.callback = callback;\r\n    this.options = options;\r\n    this.reviver = reviver;\r\n    this.svgUid = (options && options.svgUid) || 0;\r\n    this.parsingOptions = parsingOptions;\r\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\r\n    this.doc = doc;\r\n  };\r\n\r\n  (function(proto) {\r\n    proto.parse = function() {\r\n      this.instances = new Array(this.elements.length);\r\n      this.numElements = this.elements.length;\r\n      this.createObjects();\r\n    };\r\n\r\n    proto.createObjects = function() {\r\n      var _this = this;\r\n      this.elements.forEach(function(element, i) {\r\n        element.setAttribute('svgUid', _this.svgUid);\r\n        _this.createObject(element, i);\r\n      });\r\n    };\r\n\r\n    proto.findTag = function(el) {\r\n      return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\r\n    };\r\n\r\n    proto.createObject = function(el, index) {\r\n      var klass = this.findTag(el);\r\n      if (klass && klass.fromElement) {\r\n        try {\r\n          klass.fromElement(el, this.createCallback(index, el), this.options);\r\n        }\r\n        catch (err) {\r\n          fabric.log(err);\r\n        }\r\n      }\r\n      else {\r\n        this.checkIfDone();\r\n      }\r\n    };\r\n\r\n    proto.createCallback = function(index, el) {\r\n      var _this = this;\r\n      return function(obj) {\r\n        var _options;\r\n        _this.resolveGradient(obj, el, 'fill');\r\n        _this.resolveGradient(obj, el, 'stroke');\r\n        if (obj instanceof fabric.Image && obj._originalElement) {\r\n          _options = obj.parsePreserveAspectRatioAttribute(el);\r\n        }\r\n        obj._removeTransformMatrix(_options);\r\n        _this.resolveClipPath(obj, el);\r\n        _this.reviver && _this.reviver(el, obj);\r\n        _this.instances[index] = obj;\r\n        _this.checkIfDone();\r\n      };\r\n    };\r\n\r\n    proto.extractPropertyDefinition = function(obj, property, storage) {\r\n      var value = obj[property], regex = this.regexUrl;\r\n      if (!regex.test(value)) {\r\n        return;\r\n      }\r\n      regex.lastIndex = 0;\r\n      var id = regex.exec(value)[1];\r\n      regex.lastIndex = 0;\r\n      return fabric[storage][this.svgUid][id];\r\n    };\r\n\r\n    proto.resolveGradient = function(obj, el, property) {\r\n      var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\r\n      if (gradientDef) {\r\n        var opacityAttr = el.getAttribute(property + '-opacity');\r\n        var gradient = fabric.Gradient.fromElement(gradientDef, obj, opacityAttr, this.options);\r\n        obj.set(property, gradient);\r\n      }\r\n    };\r\n\r\n    proto.createClipPathCallback = function(obj, container) {\r\n      return function(_newObj) {\r\n        _newObj._removeTransformMatrix();\r\n        _newObj.fillRule = _newObj.clipRule;\r\n        container.push(_newObj);\r\n      };\r\n    };\r\n\r\n    proto.resolveClipPath = function(obj, usingElement) {\r\n      var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\r\n          element, klass, objTransformInv, container, gTransform, options;\r\n      if (clipPath) {\r\n        container = [];\r\n        objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\r\n        // move the clipPath tag as sibling to the real element that is using it\r\n        var clipPathTag = clipPath[0].parentNode;\r\n        var clipPathOwner = usingElement;\r\n        while (clipPathOwner.parentNode && clipPathOwner.getAttribute('clip-path') !== obj.clipPath) {\r\n          clipPathOwner = clipPathOwner.parentNode;\r\n        }\r\n        clipPathOwner.parentNode.appendChild(clipPathTag);\r\n        for (var i = 0; i < clipPath.length; i++) {\r\n          element = clipPath[i];\r\n          klass = this.findTag(element);\r\n          klass.fromElement(\r\n            element,\r\n            this.createClipPathCallback(obj, container),\r\n            this.options\r\n          );\r\n        }\r\n        if (container.length === 1) {\r\n          clipPath = container[0];\r\n        }\r\n        else {\r\n          clipPath = new fabric.Group(container);\r\n        }\r\n        gTransform = fabric.util.multiplyTransformMatrices(\r\n          objTransformInv,\r\n          clipPath.calcTransformMatrix()\r\n        );\r\n        if (clipPath.clipPath) {\r\n          this.resolveClipPath(clipPath, clipPathOwner);\r\n        }\r\n        var options = fabric.util.qrDecompose(gTransform);\r\n        clipPath.flipX = false;\r\n        clipPath.flipY = false;\r\n        clipPath.set('scaleX', options.scaleX);\r\n        clipPath.set('scaleY', options.scaleY);\r\n        clipPath.angle = options.angle;\r\n        clipPath.skewX = options.skewX;\r\n        clipPath.skewY = 0;\r\n        clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\r\n        obj.clipPath = clipPath;\r\n      }\r\n    };\r\n\r\n    proto.checkIfDone = function() {\r\n      if (--this.numElements === 0) {\r\n        this.instances = this.instances.filter(function(el) {\r\n          // eslint-disable-next-line no-eq-null, eqeqeq\r\n          return el != null;\r\n        });\r\n        this.callback(this.instances, this.elements);\r\n      }\r\n    };\r\n  })(fabric.ElementsParser.prototype);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\r\n\r\n    var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Point) {\r\n      fabric.warn('fabric.Point is already defined');\r\n      return;\r\n    }\r\n\r\n    fabric.Point = Point;\r\n\r\n    /**\r\n     * Point class\r\n     * @class fabric.Point\r\n     * @memberOf fabric\r\n     * @constructor\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @return {fabric.Point} thisArg\r\n     */\r\n    function Point(x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n    }\r\n\r\n    Point.prototype = /** @lends fabric.Point.prototype */ {\r\n\r\n      type: 'point',\r\n\r\n      constructor: Point,\r\n\r\n      /**\r\n       * Adds another point to this one and returns another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} new Point instance with added values\r\n       */\r\n      add: function (that) {\r\n        return new Point(this.x + that.x, this.y + that.y);\r\n      },\r\n\r\n      /**\r\n       * Adds another point to this one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      addEquals: function (that) {\r\n        this.x += that.x;\r\n        this.y += that.y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Adds value to this point and returns a new one\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} new Point with added value\r\n       */\r\n      scalarAdd: function (scalar) {\r\n        return new Point(this.x + scalar, this.y + scalar);\r\n      },\r\n\r\n      /**\r\n       * Adds value to this point\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      scalarAddEquals: function (scalar) {\r\n        this.x += scalar;\r\n        this.y += scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Subtracts another point from this point and returns a new one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} new Point object with subtracted values\r\n       */\r\n      subtract: function (that) {\r\n        return new Point(this.x - that.x, this.y - that.y);\r\n      },\r\n\r\n      /**\r\n       * Subtracts another point from this point\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      subtractEquals: function (that) {\r\n        this.x -= that.x;\r\n        this.y -= that.y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Subtracts value from this point and returns a new one\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point}\r\n       */\r\n      scalarSubtract: function (scalar) {\r\n        return new Point(this.x - scalar, this.y - scalar);\r\n      },\r\n\r\n      /**\r\n       * Subtracts value from this point\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      scalarSubtractEquals: function (scalar) {\r\n        this.x -= scalar;\r\n        this.y -= scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Multiplies this point by a value and returns a new one\r\n       * TODO: rename in scalarMultiply in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point}\r\n       */\r\n      multiply: function (scalar) {\r\n        return new Point(this.x * scalar, this.y * scalar);\r\n      },\r\n\r\n      /**\r\n       * Multiplies this point by a value\r\n       * TODO: rename in scalarMultiplyEquals in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      multiplyEquals: function (scalar) {\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Divides this point by a value and returns a new one\r\n       * TODO: rename in scalarDivide in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point}\r\n       */\r\n      divide: function (scalar) {\r\n        return new Point(this.x / scalar, this.y / scalar);\r\n      },\r\n\r\n      /**\r\n       * Divides this point by a value\r\n       * TODO: rename in scalarDivideEquals in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      divideEquals: function (scalar) {\r\n        this.x /= scalar;\r\n        this.y /= scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is equal to another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      eq: function (that) {\r\n        return (this.x === that.x && this.y === that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is less than another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      lt: function (that) {\r\n        return (this.x < that.x && this.y < that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is less than or equal to another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      lte: function (that) {\r\n        return (this.x <= that.x && this.y <= that.y);\r\n      },\r\n\r\n      /**\r\n\r\n       * Returns true if this point is greater another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      gt: function (that) {\r\n        return (this.x > that.x && this.y > that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is greater than or equal to another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      gte: function (that) {\r\n        return (this.x >= that.x && this.y >= that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns new point which is the result of linear interpolation with this one and another one\r\n       * @param {fabric.Point} that\r\n       * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\r\n       * @return {fabric.Point}\r\n       */\r\n      lerp: function (that, t) {\r\n        if (typeof t === 'undefined') {\r\n          t = 0.5;\r\n        }\r\n        t = Math.max(Math.min(1, t), 0);\r\n        return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\r\n      },\r\n\r\n      /**\r\n       * Returns distance from this point and another one\r\n       * @param {fabric.Point} that\r\n       * @return {Number}\r\n       */\r\n      distanceFrom: function (that) {\r\n        var dx = this.x - that.x,\r\n            dy = this.y - that.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n      },\r\n\r\n      /**\r\n       * Returns the point between this point and another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point}\r\n       */\r\n      midPointFrom: function (that) {\r\n        return this.lerp(that);\r\n      },\r\n\r\n      /**\r\n       * Returns a new point which is the min of this and another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point}\r\n       */\r\n      min: function (that) {\r\n        return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\r\n      },\r\n\r\n      /**\r\n       * Returns a new point which is the max of this and another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point}\r\n       */\r\n      max: function (that) {\r\n        return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of this point\r\n       * @return {String}\r\n       */\r\n      toString: function () {\r\n        return this.x + ',' + this.y;\r\n      },\r\n\r\n      /**\r\n       * Sets x/y of this point\r\n       * @param {Number} x\r\n       * @param {Number} y\r\n       * @chainable\r\n       */\r\n      setXY: function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets x of this point\r\n       * @param {Number} x\r\n       * @chainable\r\n       */\r\n      setX: function (x) {\r\n        this.x = x;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets y of this point\r\n       * @param {Number} y\r\n       * @chainable\r\n       */\r\n      setY: function (y) {\r\n        this.y = y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets x/y of this point from another point\r\n       * @param {fabric.Point} that\r\n       * @chainable\r\n       */\r\n      setFromPoint: function (that) {\r\n        this.x = that.x;\r\n        this.y = that.y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Swaps x/y of this point and another point\r\n       * @param {fabric.Point} that\r\n       */\r\n      swap: function (that) {\r\n        var x = this.x,\r\n            y = this.y;\r\n        this.x = that.x;\r\n        this.y = that.y;\r\n        that.x = x;\r\n        that.y = y;\r\n      },\r\n\r\n      /**\r\n       * return a cloned instance of the point\r\n       * @return {fabric.Point}\r\n       */\r\n      clone: function () {\r\n        return new Point(this.x, this.y);\r\n      }\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\r\n    var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Intersection) {\r\n      fabric.warn('fabric.Intersection is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Intersection class\r\n     * @class fabric.Intersection\r\n     * @memberOf fabric\r\n     * @constructor\r\n     */\r\n    function Intersection(status) {\r\n      this.status = status;\r\n      this.points = [];\r\n    }\r\n\r\n    fabric.Intersection = Intersection;\r\n\r\n    fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\r\n\r\n      constructor: Intersection,\r\n\r\n      /**\r\n       * Appends a point to intersection\r\n       * @param {fabric.Point} point\r\n       * @return {fabric.Intersection} thisArg\r\n       * @chainable\r\n       */\r\n      appendPoint: function (point) {\r\n        this.points.push(point);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Appends points to intersection\r\n       * @param {Array} points\r\n       * @return {fabric.Intersection} thisArg\r\n       * @chainable\r\n       */\r\n      appendPoints: function (points) {\r\n        this.points = this.points.concat(points);\r\n        return this;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Checks if one line intersects another\r\n     * TODO: rename in intersectSegmentSegment\r\n     * @static\r\n     * @param {fabric.Point} a1\r\n     * @param {fabric.Point} a2\r\n     * @param {fabric.Point} b1\r\n     * @param {fabric.Point} b2\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\r\n      var result,\r\n          uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\r\n          ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\r\n          uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\r\n      if (uB !== 0) {\r\n        var ua = uaT / uB,\r\n            ub = ubT / uB;\r\n        if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\r\n          result = new Intersection('Intersection');\r\n          result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\r\n        }\r\n        else {\r\n          result = new Intersection();\r\n        }\r\n      }\r\n      else {\r\n        if (uaT === 0 || ubT === 0) {\r\n          result = new Intersection('Coincident');\r\n        }\r\n        else {\r\n          result = new Intersection('Parallel');\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    /**\r\n     * Checks if line intersects polygon\r\n     * TODO: rename in intersectSegmentPolygon\r\n     * fix detection of coincident\r\n     * @static\r\n     * @param {fabric.Point} a1\r\n     * @param {fabric.Point} a2\r\n     * @param {Array} points\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\r\n      var result = new Intersection(),\r\n          length = points.length,\r\n          b1, b2, inter, i;\r\n\r\n      for (i = 0; i < length; i++) {\r\n        b1 = points[i];\r\n        b2 = points[(i + 1) % length];\r\n        inter = Intersection.intersectLineLine(a1, a2, b1, b2);\r\n\r\n        result.appendPoints(inter.points);\r\n      }\r\n      if (result.points.length > 0) {\r\n        result.status = 'Intersection';\r\n      }\r\n      return result;\r\n    };\r\n\r\n    /**\r\n     * Checks if polygon intersects another polygon\r\n     * @static\r\n     * @param {Array} points1\r\n     * @param {Array} points2\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\r\n      var result = new Intersection(),\r\n          length = points1.length, i;\r\n\r\n      for (i = 0; i < length; i++) {\r\n        var a1 = points1[i],\r\n            a2 = points1[(i + 1) % length],\r\n            inter = Intersection.intersectLinePolygon(a1, a2, points2);\r\n\r\n        result.appendPoints(inter.points);\r\n      }\r\n      if (result.points.length > 0) {\r\n        result.status = 'Intersection';\r\n      }\r\n      return result;\r\n    };\r\n\r\n    /**\r\n     * Checks if polygon intersects rectangle\r\n     * @static\r\n     * @param {Array} points\r\n     * @param {fabric.Point} r1\r\n     * @param {fabric.Point} r2\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\r\n      var min = r1.min(r2),\r\n          max = r1.max(r2),\r\n          topRight = new fabric.Point(max.x, min.y),\r\n          bottomLeft = new fabric.Point(min.x, max.y),\r\n          inter1 = Intersection.intersectLinePolygon(min, topRight, points),\r\n          inter2 = Intersection.intersectLinePolygon(topRight, max, points),\r\n          inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\r\n          inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\r\n          result = new Intersection();\r\n\r\n      result.appendPoints(inter1.points);\r\n      result.appendPoints(inter2.points);\r\n      result.appendPoints(inter3.points);\r\n      result.appendPoints(inter4.points);\r\n\r\n      if (result.points.length > 0) {\r\n        result.status = 'Intersection';\r\n      }\r\n      return result;\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Color) {\r\n      fabric.warn('fabric.Color is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Color class\r\n     * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\r\n     * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\r\n     *\r\n     * @class fabric.Color\r\n     * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\r\n     * @return {fabric.Color} thisArg\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\r\n     */\r\n    function Color(color) {\r\n      if (!color) {\r\n        this.setSource([0, 0, 0, 1]);\r\n      }\r\n      else {\r\n        this._tryParsingColor(color);\r\n      }\r\n    }\r\n\r\n    fabric.Color = Color;\r\n\r\n    fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\r\n\r\n      /**\r\n       * @private\r\n       * @param {String|Array} color Color value to parse\r\n       */\r\n      _tryParsingColor: function(color) {\r\n        var source;\r\n\r\n        if (color in Color.colorNameMap) {\r\n          color = Color.colorNameMap[color];\r\n        }\r\n\r\n        if (color === 'transparent') {\r\n          source = [255, 255, 255, 0];\r\n        }\r\n\r\n        if (!source) {\r\n          source = Color.sourceFromHex(color);\r\n        }\r\n        if (!source) {\r\n          source = Color.sourceFromRgb(color);\r\n        }\r\n        if (!source) {\r\n          source = Color.sourceFromHsl(color);\r\n        }\r\n        if (!source) {\r\n          //if color is not recognize let's make black as canvas does\r\n          source = [0, 0, 0, 1];\r\n        }\r\n        if (source) {\r\n          this.setSource(source);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\r\n       * @private\r\n       * @param {Number} r Red color value\r\n       * @param {Number} g Green color value\r\n       * @param {Number} b Blue color value\r\n       * @return {Array} Hsl color\r\n       */\r\n      _rgbToHsl: function(r, g, b) {\r\n        r /= 255; g /= 255; b /= 255;\r\n\r\n        var h, s, l,\r\n            max = fabric.util.array.max([r, g, b]),\r\n            min = fabric.util.array.min([r, g, b]);\r\n\r\n        l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n          h = s = 0; // achromatic\r\n        }\r\n        else {\r\n          var d = max - min;\r\n          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n          switch (max) {\r\n            case r:\r\n              h = (g - b) / d + (g < b ? 6 : 0);\r\n              break;\r\n            case g:\r\n              h = (b - r) / d + 2;\r\n              break;\r\n            case b:\r\n              h = (r - g) / d + 4;\r\n              break;\r\n          }\r\n          h /= 6;\r\n        }\r\n\r\n        return [\r\n          Math.round(h * 360),\r\n          Math.round(s * 100),\r\n          Math.round(l * 100)\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n       * @return {Array}\r\n       */\r\n      getSource: function() {\r\n        return this._source;\r\n      },\r\n\r\n      /**\r\n       * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n       * @param {Array} source\r\n       */\r\n      setSource: function(source) {\r\n        this._source = source;\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in RGB format\r\n       * @return {String} ex: rgb(0-255,0-255,0-255)\r\n       */\r\n      toRgb: function() {\r\n        var source = this.getSource();\r\n        return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in RGBA format\r\n       * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\r\n       */\r\n      toRgba: function() {\r\n        var source = this.getSource();\r\n        return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HSL format\r\n       * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\r\n       */\r\n      toHsl: function() {\r\n        var source = this.getSource(),\r\n            hsl = this._rgbToHsl(source[0], source[1], source[2]);\r\n\r\n        return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HSLA format\r\n       * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\r\n       */\r\n      toHsla: function() {\r\n        var source = this.getSource(),\r\n            hsl = this._rgbToHsl(source[0], source[1], source[2]);\r\n\r\n        return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HEX format\r\n       * @return {String} ex: FF5555\r\n       */\r\n      toHex: function() {\r\n        var source = this.getSource(), r, g, b;\r\n\r\n        r = source[0].toString(16);\r\n        r = (r.length === 1) ? ('0' + r) : r;\r\n\r\n        g = source[1].toString(16);\r\n        g = (g.length === 1) ? ('0' + g) : g;\r\n\r\n        b = source[2].toString(16);\r\n        b = (b.length === 1) ? ('0' + b) : b;\r\n\r\n        return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HEXA format\r\n       * @return {String} ex: FF5555CC\r\n       */\r\n      toHexa: function() {\r\n        var source = this.getSource(), a;\r\n\r\n        a = Math.round(source[3] * 255);\r\n        a = a.toString(16);\r\n        a = (a.length === 1) ? ('0' + a) : a;\r\n\r\n        return this.toHex() + a.toUpperCase();\r\n      },\r\n\r\n      /**\r\n       * Gets value of alpha channel for this color\r\n       * @return {Number} 0-1\r\n       */\r\n      getAlpha: function() {\r\n        return this.getSource()[3];\r\n      },\r\n\r\n      /**\r\n       * Sets value of alpha channel for this color\r\n       * @param {Number} alpha Alpha value 0-1\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      setAlpha: function(alpha) {\r\n        var source = this.getSource();\r\n        source[3] = alpha;\r\n        this.setSource(source);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Transforms color to its grayscale representation\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      toGrayscale: function() {\r\n        var source = this.getSource(),\r\n            average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\r\n            currentAlpha = source[3];\r\n        this.setSource([average, average, average, currentAlpha]);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Transforms color to its black and white representation\r\n       * @param {Number} threshold\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      toBlackWhite: function(threshold) {\r\n        var source = this.getSource(),\r\n            average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\r\n            currentAlpha = source[3];\r\n\r\n        threshold = threshold || 127;\r\n\r\n        average = (Number(average) < Number(threshold)) ? 0 : 255;\r\n        this.setSource([average, average, average, currentAlpha]);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Overlays color with another color\r\n       * @param {String|fabric.Color} otherColor\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      overlayWith: function(otherColor) {\r\n        if (!(otherColor instanceof Color)) {\r\n          otherColor = new Color(otherColor);\r\n        }\r\n\r\n        var result = [],\r\n            alpha = this.getAlpha(),\r\n            otherAlpha = 0.5,\r\n            source = this.getSource(),\r\n            otherSource = otherColor.getSource(), i;\r\n\r\n        for (i = 0; i < 3; i++) {\r\n          result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\r\n        }\r\n\r\n        result[3] = alpha;\r\n        this.setSource(result);\r\n        return this;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     */\r\n    // eslint-disable-next-line max-len\r\n    fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\r\n\r\n    /**\r\n     * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     */\r\n    fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\r\n\r\n    /**\r\n     * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     */\r\n    fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\r\n\r\n    /**\r\n     * Map of the 148 color names with HEX code\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     * @see: https://www.w3.org/TR/css3-color/#svg-color\r\n     */\r\n    fabric.Color.colorNameMap = {\r\n      aliceblue:            '#F0F8FF',\r\n      antiquewhite:         '#FAEBD7',\r\n      aqua:                 '#00FFFF',\r\n      aquamarine:           '#7FFFD4',\r\n      azure:                '#F0FFFF',\r\n      beige:                '#F5F5DC',\r\n      bisque:               '#FFE4C4',\r\n      black:                '#000000',\r\n      blanchedalmond:       '#FFEBCD',\r\n      blue:                 '#0000FF',\r\n      blueviolet:           '#8A2BE2',\r\n      brown:                '#A52A2A',\r\n      burlywood:            '#DEB887',\r\n      cadetblue:            '#5F9EA0',\r\n      chartreuse:           '#7FFF00',\r\n      chocolate:            '#D2691E',\r\n      coral:                '#FF7F50',\r\n      cornflowerblue:       '#6495ED',\r\n      cornsilk:             '#FFF8DC',\r\n      crimson:              '#DC143C',\r\n      cyan:                 '#00FFFF',\r\n      darkblue:             '#00008B',\r\n      darkcyan:             '#008B8B',\r\n      darkgoldenrod:        '#B8860B',\r\n      darkgray:             '#A9A9A9',\r\n      darkgrey:             '#A9A9A9',\r\n      darkgreen:            '#006400',\r\n      darkkhaki:            '#BDB76B',\r\n      darkmagenta:          '#8B008B',\r\n      darkolivegreen:       '#556B2F',\r\n      darkorange:           '#FF8C00',\r\n      darkorchid:           '#9932CC',\r\n      darkred:              '#8B0000',\r\n      darksalmon:           '#E9967A',\r\n      darkseagreen:         '#8FBC8F',\r\n      darkslateblue:        '#483D8B',\r\n      darkslategray:        '#2F4F4F',\r\n      darkslategrey:        '#2F4F4F',\r\n      darkturquoise:        '#00CED1',\r\n      darkviolet:           '#9400D3',\r\n      deeppink:             '#FF1493',\r\n      deepskyblue:          '#00BFFF',\r\n      dimgray:              '#696969',\r\n      dimgrey:              '#696969',\r\n      dodgerblue:           '#1E90FF',\r\n      firebrick:            '#B22222',\r\n      floralwhite:          '#FFFAF0',\r\n      forestgreen:          '#228B22',\r\n      fuchsia:              '#FF00FF',\r\n      gainsboro:            '#DCDCDC',\r\n      ghostwhite:           '#F8F8FF',\r\n      gold:                 '#FFD700',\r\n      goldenrod:            '#DAA520',\r\n      gray:                 '#808080',\r\n      grey:                 '#808080',\r\n      green:                '#008000',\r\n      greenyellow:          '#ADFF2F',\r\n      honeydew:             '#F0FFF0',\r\n      hotpink:              '#FF69B4',\r\n      indianred:            '#CD5C5C',\r\n      indigo:               '#4B0082',\r\n      ivory:                '#FFFFF0',\r\n      khaki:                '#F0E68C',\r\n      lavender:             '#E6E6FA',\r\n      lavenderblush:        '#FFF0F5',\r\n      lawngreen:            '#7CFC00',\r\n      lemonchiffon:         '#FFFACD',\r\n      lightblue:            '#ADD8E6',\r\n      lightcoral:           '#F08080',\r\n      lightcyan:            '#E0FFFF',\r\n      lightgoldenrodyellow: '#FAFAD2',\r\n      lightgray:            '#D3D3D3',\r\n      lightgrey:            '#D3D3D3',\r\n      lightgreen:           '#90EE90',\r\n      lightpink:            '#FFB6C1',\r\n      lightsalmon:          '#FFA07A',\r\n      lightseagreen:        '#20B2AA',\r\n      lightskyblue:         '#87CEFA',\r\n      lightslategray:       '#778899',\r\n      lightslategrey:       '#778899',\r\n      lightsteelblue:       '#B0C4DE',\r\n      lightyellow:          '#FFFFE0',\r\n      lime:                 '#00FF00',\r\n      limegreen:            '#32CD32',\r\n      linen:                '#FAF0E6',\r\n      magenta:              '#FF00FF',\r\n      maroon:               '#800000',\r\n      mediumaquamarine:     '#66CDAA',\r\n      mediumblue:           '#0000CD',\r\n      mediumorchid:         '#BA55D3',\r\n      mediumpurple:         '#9370DB',\r\n      mediumseagreen:       '#3CB371',\r\n      mediumslateblue:      '#7B68EE',\r\n      mediumspringgreen:    '#00FA9A',\r\n      mediumturquoise:      '#48D1CC',\r\n      mediumvioletred:      '#C71585',\r\n      midnightblue:         '#191970',\r\n      mintcream:            '#F5FFFA',\r\n      mistyrose:            '#FFE4E1',\r\n      moccasin:             '#FFE4B5',\r\n      navajowhite:          '#FFDEAD',\r\n      navy:                 '#000080',\r\n      oldlace:              '#FDF5E6',\r\n      olive:                '#808000',\r\n      olivedrab:            '#6B8E23',\r\n      orange:               '#FFA500',\r\n      orangered:            '#FF4500',\r\n      orchid:               '#DA70D6',\r\n      palegoldenrod:        '#EEE8AA',\r\n      palegreen:            '#98FB98',\r\n      paleturquoise:        '#AFEEEE',\r\n      palevioletred:        '#DB7093',\r\n      papayawhip:           '#FFEFD5',\r\n      peachpuff:            '#FFDAB9',\r\n      peru:                 '#CD853F',\r\n      pink:                 '#FFC0CB',\r\n      plum:                 '#DDA0DD',\r\n      powderblue:           '#B0E0E6',\r\n      purple:               '#800080',\r\n      rebeccapurple:        '#663399',\r\n      red:                  '#FF0000',\r\n      rosybrown:            '#BC8F8F',\r\n      royalblue:            '#4169E1',\r\n      saddlebrown:          '#8B4513',\r\n      salmon:               '#FA8072',\r\n      sandybrown:           '#F4A460',\r\n      seagreen:             '#2E8B57',\r\n      seashell:             '#FFF5EE',\r\n      sienna:               '#A0522D',\r\n      silver:               '#C0C0C0',\r\n      skyblue:              '#87CEEB',\r\n      slateblue:            '#6A5ACD',\r\n      slategray:            '#708090',\r\n      slategrey:            '#708090',\r\n      snow:                 '#FFFAFA',\r\n      springgreen:          '#00FF7F',\r\n      steelblue:            '#4682B4',\r\n      tan:                  '#D2B48C',\r\n      teal:                 '#008080',\r\n      thistle:              '#D8BFD8',\r\n      tomato:               '#FF6347',\r\n      turquoise:            '#40E0D0',\r\n      violet:               '#EE82EE',\r\n      wheat:                '#F5DEB3',\r\n      white:                '#FFFFFF',\r\n      whitesmoke:           '#F5F5F5',\r\n      yellow:               '#FFFF00',\r\n      yellowgreen:          '#9ACD32'\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @param {Number} p\r\n     * @param {Number} q\r\n     * @param {Number} t\r\n     * @return {Number}\r\n     */\r\n    function hue2rgb(p, q, t) {\r\n      if (t < 0) {\r\n        t += 1;\r\n      }\r\n      if (t > 1) {\r\n        t -= 1;\r\n      }\r\n      if (t < 1 / 6) {\r\n        return p + (q - p) * 6 * t;\r\n      }\r\n      if (t < 1 / 2) {\r\n        return q;\r\n      }\r\n      if (t < 2 / 3) {\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n      }\r\n      return p;\r\n    }\r\n\r\n    /**\r\n     * Returns new color object, when given a color in RGB format\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromRgb = function(color) {\r\n      return Color.fromSource(Color.sourceFromRgb(color));\r\n    };\r\n\r\n    /**\r\n     * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\r\n     * @return {Array} source\r\n     */\r\n    fabric.Color.sourceFromRgb = function(color) {\r\n      var match = color.match(Color.reRGBa);\r\n      if (match) {\r\n        var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\r\n            g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\r\n            b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\r\n\r\n        return [\r\n          parseInt(r, 10),\r\n          parseInt(g, 10),\r\n          parseInt(b, 10),\r\n          match[4] ? parseFloat(match[4]) : 1\r\n        ];\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Returns new color object, when given a color in RGBA format\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric.Color\r\n     * @param {String} color\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromRgba = Color.fromRgb;\r\n\r\n    /**\r\n     * Returns new color object, when given a color in HSL format\r\n     * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\r\n     * @memberOf fabric.Color\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromHsl = function(color) {\r\n      return Color.fromSource(Color.sourceFromHsl(color));\r\n    };\r\n\r\n    /**\r\n     * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\r\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\r\n     * @return {Array} source\r\n     * @see http://http://www.w3.org/TR/css3-color/#hsl-color\r\n     */\r\n    fabric.Color.sourceFromHsl = function(color) {\r\n      var match = color.match(Color.reHSLa);\r\n      if (!match) {\r\n        return;\r\n      }\r\n\r\n      var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\r\n          s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\r\n          l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\r\n          r, g, b;\r\n\r\n      if (s === 0) {\r\n        r = g = b = l;\r\n      }\r\n      else {\r\n        var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\r\n            p = l * 2 - q;\r\n\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n      }\r\n\r\n      return [\r\n        Math.round(r * 255),\r\n        Math.round(g * 255),\r\n        Math.round(b * 255),\r\n        match[4] ? parseFloat(match[4]) : 1\r\n      ];\r\n    };\r\n\r\n    /**\r\n     * Returns new color object, when given a color in HSLA format\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric.Color\r\n     * @param {String} color\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromHsla = Color.fromHsl;\r\n\r\n    /**\r\n     * Returns new color object, when given a color in HEX format\r\n     * @static\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: FF5555\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromHex = function(color) {\r\n      return Color.fromSource(Color.sourceFromHex(color));\r\n    };\r\n\r\n    /**\r\n     * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\r\n     * @static\r\n     * @memberOf fabric.Color\r\n     * @param {String} color ex: FF5555 or FF5544CC (RGBa)\r\n     * @return {Array} source\r\n     */\r\n    fabric.Color.sourceFromHex = function(color) {\r\n      if (color.match(Color.reHex)) {\r\n        var value = color.slice(color.indexOf('#') + 1),\r\n            isShortNotation = (value.length === 3 || value.length === 4),\r\n            isRGBa = (value.length === 8 || value.length === 4),\r\n            r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\r\n            g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\r\n            b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\r\n            a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\r\n\r\n        return [\r\n          parseInt(r, 16),\r\n          parseInt(g, 16),\r\n          parseInt(b, 16),\r\n          parseFloat((parseInt(a, 16) / 255).toFixed(2))\r\n        ];\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\r\n     * @static\r\n     * @memberOf fabric.Color\r\n     * @param {Array} source\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromSource = function(source) {\r\n      var oColor = new Color();\r\n      oColor.setSource(source);\r\n      return oColor;\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    /* _FROM_SVG_START_ */\r\n    function getColorStop(el, multiplier) {\r\n      var style = el.getAttribute('style'),\r\n          offset = el.getAttribute('offset') || 0,\r\n          color, colorAlpha, opacity, i;\r\n\r\n      // convert percents to absolute values\r\n      offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\r\n      offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\r\n      if (style) {\r\n        var keyValuePairs = style.split(/\\s*;\\s*/);\r\n\r\n        if (keyValuePairs[keyValuePairs.length - 1] === '') {\r\n          keyValuePairs.pop();\r\n        }\r\n\r\n        for (i = keyValuePairs.length; i--; ) {\r\n\r\n          var split = keyValuePairs[i].split(/\\s*:\\s*/),\r\n              key = split[0].trim(),\r\n              value = split[1].trim();\r\n\r\n          if (key === 'stop-color') {\r\n            color = value;\r\n          }\r\n          else if (key === 'stop-opacity') {\r\n            opacity = value;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!color) {\r\n        color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\r\n      }\r\n      if (!opacity) {\r\n        opacity = el.getAttribute('stop-opacity');\r\n      }\r\n\r\n      color = new fabric.Color(color);\r\n      colorAlpha = color.getAlpha();\r\n      opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\r\n      opacity *= colorAlpha * multiplier;\r\n\r\n      return {\r\n        offset: offset,\r\n        color: color.toRgb(),\r\n        opacity: opacity\r\n      };\r\n    }\r\n\r\n    function getLinearCoords(el) {\r\n      return {\r\n        x1: el.getAttribute('x1') || 0,\r\n        y1: el.getAttribute('y1') || 0,\r\n        x2: el.getAttribute('x2') || '100%',\r\n        y2: el.getAttribute('y2') || 0\r\n      };\r\n    }\r\n\r\n    function getRadialCoords(el) {\r\n      return {\r\n        x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\r\n        y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\r\n        r1: 0,\r\n        x2: el.getAttribute('cx') || '50%',\r\n        y2: el.getAttribute('cy') || '50%',\r\n        r2: el.getAttribute('r') || '50%'\r\n      };\r\n    }\r\n    /* _FROM_SVG_END_ */\r\n\r\n    var clone = fabric.util.object.clone;\r\n\r\n    /**\r\n     * Gradient class\r\n     * @class fabric.Gradient\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\r\n     * @see {@link fabric.Gradient#initialize} for constructor definition\r\n     */\r\n    fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\r\n\r\n      /**\r\n       * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\r\n       * @type Number\r\n       * @default 0\r\n       */\r\n      offsetX: 0,\r\n\r\n      /**\r\n       * Vertical offset for aligning gradients coming from SVG when outside pathgroups\r\n       * @type Number\r\n       * @default 0\r\n       */\r\n      offsetY: 0,\r\n\r\n      /**\r\n       * A transform matrix to apply to the gradient before painting.\r\n       * Imported from svg gradients, is not applied with the current transform in the center.\r\n       * Before this transform is applied, the origin point is at the top left corner of the object\r\n       * plus the addition of offsetY and offsetX.\r\n       * @type Number[]\r\n       * @default null\r\n       */\r\n      gradientTransform: null,\r\n\r\n      /**\r\n       * coordinates units for coords.\r\n       * If `pixels`, the number of coords are in the same unit of width / height.\r\n       * If set as `percentage` the coords are still a number, but 1 means 100% of width\r\n       * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\r\n       * allowed values pixels or percentage.\r\n       * @type String\r\n       * @default 'pixels'\r\n       */\r\n      gradientUnits: 'pixels',\r\n\r\n      /**\r\n       * Gradient type linear or radial\r\n       * @type String\r\n       * @default 'pixels'\r\n       */\r\n      type: 'linear',\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} options Options object with type, coords, gradientUnits and colorStops\r\n       * @param {Object} [options.type] gradient type linear or radial\r\n       * @param {Object} [options.gradientUnits] gradient units\r\n       * @param {Object} [options.offsetX] SVG import compatibility\r\n       * @param {Object} [options.offsetY] SVG import compatibility\r\n       * @param {Object[]} options.colorStops contains the colorstops.\r\n       * @param {Object} options.coords contains the coords of the gradient\r\n       * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial\r\n       * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial\r\n       * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial\r\n       * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial\r\n       * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle\r\n       * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle\r\n       * @return {fabric.Gradient} thisArg\r\n       */\r\n      initialize: function(options) {\r\n        options || (options = { });\r\n        options.coords || (options.coords = { });\r\n\r\n        var coords, _this = this;\r\n\r\n        // sets everything, then coords and colorstops get sets again\r\n        Object.keys(options).forEach(function(option) {\r\n          _this[option] = options[option];\r\n        });\r\n\r\n        if (this.id) {\r\n          this.id += '_' + fabric.Object.__uid++;\r\n        }\r\n        else {\r\n          this.id = fabric.Object.__uid++;\r\n        }\r\n\r\n        coords = {\r\n          x1: options.coords.x1 || 0,\r\n          y1: options.coords.y1 || 0,\r\n          x2: options.coords.x2 || 0,\r\n          y2: options.coords.y2 || 0\r\n        };\r\n\r\n        if (this.type === 'radial') {\r\n          coords.r1 = options.coords.r1 || 0;\r\n          coords.r2 = options.coords.r2 || 0;\r\n        }\r\n\r\n        this.coords = coords;\r\n        this.colorStops = options.colorStops.slice();\r\n      },\r\n\r\n      /**\r\n       * Adds another colorStop\r\n       * @param {Object} colorStop Object with offset and color\r\n       * @return {fabric.Gradient} thisArg\r\n       */\r\n      addColorStop: function(colorStops) {\r\n        for (var position in colorStops) {\r\n          var color = new fabric.Color(colorStops[position]);\r\n          this.colorStops.push({\r\n            offset: parseFloat(position),\r\n            color: color.toRgb(),\r\n            opacity: color.getAlpha()\r\n          });\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of a gradient\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object}\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var object = {\r\n          type: this.type,\r\n          coords: this.coords,\r\n          colorStops: this.colorStops,\r\n          offsetX: this.offsetX,\r\n          offsetY: this.offsetY,\r\n          gradientUnits: this.gradientUnits,\r\n          gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\r\n        };\r\n        fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n\r\n        return object;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of an gradient\r\n       * @param {Object} object Object to create a gradient for\r\n       * @return {String} SVG representation of an gradient (linear/radial)\r\n       */\r\n      toSVG: function(object, options) {\r\n        var coords = clone(this.coords, true), i, len, options = options || {},\r\n            markup, commonAttributes, colorStops = clone(this.colorStops, true),\r\n            needsSwap = coords.r1 > coords.r2,\r\n            transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\r\n            offsetX = -this.offsetX, offsetY = -this.offsetY,\r\n            withViewport = !!options.additionalTransform,\r\n            gradientUnits = this.gradientUnits === 'pixels' ? 'userSpaceOnUse' : 'objectBoundingBox';\r\n        // colorStops must be sorted ascending\r\n        colorStops.sort(function(a, b) {\r\n          return a.offset - b.offset;\r\n        });\r\n\r\n        if (gradientUnits === 'objectBoundingBox') {\r\n          offsetX /= object.width;\r\n          offsetY /= object.height;\r\n        }\r\n        else {\r\n          offsetX += object.width / 2;\r\n          offsetY += object.height / 2;\r\n        }\r\n        if (object.type === 'path') {\r\n          offsetX -= object.pathOffset.x;\r\n          offsetY -= object.pathOffset.y;\r\n        }\r\n\r\n\r\n        transform[4] -= offsetX;\r\n        transform[5] -= offsetY;\r\n\r\n        commonAttributes = 'id=\"SVGID_' + this.id +\r\n                       '\" gradientUnits=\"' + gradientUnits + '\"';\r\n        commonAttributes += ' gradientTransform=\"' + (withViewport ?\r\n          options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\r\n\r\n        if (this.type === 'linear') {\r\n          markup = [\r\n            '<linearGradient ',\r\n            commonAttributes,\r\n            ' x1=\"', coords.x1,\r\n            '\" y1=\"', coords.y1,\r\n            '\" x2=\"', coords.x2,\r\n            '\" y2=\"', coords.y2,\r\n            '\">\\n'\r\n          ];\r\n        }\r\n        else if (this.type === 'radial') {\r\n          // svg radial gradient has just 1 radius. the biggest.\r\n          markup = [\r\n            '<radialGradient ',\r\n            commonAttributes,\r\n            ' cx=\"', needsSwap ? coords.x1 : coords.x2,\r\n            '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\r\n            '\" r=\"', needsSwap ? coords.r1 : coords.r2,\r\n            '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\r\n            '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\r\n            '\">\\n'\r\n          ];\r\n        }\r\n\r\n        if (this.type === 'radial') {\r\n          if (needsSwap) {\r\n            // svg goes from internal to external radius. if radius are inverted, swap color stops.\r\n            colorStops = colorStops.concat();\r\n            colorStops.reverse();\r\n            for (i = 0, len = colorStops.length; i < len; i++) {\r\n              colorStops[i].offset = 1 - colorStops[i].offset;\r\n            }\r\n          }\r\n          var minRadius = Math.min(coords.r1, coords.r2);\r\n          if (minRadius > 0) {\r\n            // i have to shift all colorStops and add new one in 0.\r\n            var maxRadius = Math.max(coords.r1, coords.r2),\r\n                percentageShift = minRadius / maxRadius;\r\n            for (i = 0, len = colorStops.length; i < len; i++) {\r\n              colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\r\n            }\r\n          }\r\n        }\r\n\r\n        for (i = 0, len = colorStops.length; i < len; i++) {\r\n          var colorStop = colorStops[i];\r\n          markup.push(\r\n            '<stop ',\r\n            'offset=\"', (colorStop.offset * 100) + '%',\r\n            '\" style=\"stop-color:', colorStop.color,\r\n            (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\r\n            '\"/>\\n'\r\n          );\r\n        }\r\n\r\n        markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\r\n\r\n        return markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns an instance of CanvasGradient\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {fabric.Object} object the fabric.Object for which the gradient is\r\n       * @return {CanvasGradient}\r\n       */\r\n      toLive: function(ctx, object) {\r\n        var gradient, coords = fabric.util.object.clone(this.coords), i, len,\r\n            x1 = coords.x1, y1 = coords.y1, x2 = coords.x2, y2 = coords.y2,\r\n            stops = this.colorStops;\r\n\r\n        if (!this.type) {\r\n          return;\r\n        }\r\n\r\n        if (object instanceof fabric.Text && this.gradientUnits === 'percentage') {\r\n          x1 *= object.width;\r\n          y1 *= object.height;\r\n          x2 *= object.width;\r\n          y2 *= object.height;\r\n        }\r\n        if (this.type === 'linear') {\r\n          gradient = ctx.createLinearGradient(x1, y1, x2, y2);\r\n        }\r\n        else if (this.type === 'radial') {\r\n          gradient = ctx.createRadialGradient(x1, y1, coords.r1, x2, y2, coords.r2);\r\n        }\r\n        for (i = 0, len = stops.length; i < len; i++) {\r\n          var color = stops[i].color,\r\n              opacity = stops[i].opacity,\r\n              offset = stops[i].offset;\r\n\r\n          if (typeof opacity !== 'undefined') {\r\n            color = new fabric.Color(color).setAlpha(opacity).toRgba();\r\n          }\r\n          gradient.addColorStop(offset, color);\r\n        }\r\n\r\n        return gradient;\r\n      }\r\n    });\r\n\r\n    fabric.util.object.extend(fabric.Gradient, {\r\n\r\n      /* _FROM_SVG_START_ */\r\n      /**\r\n       * Returns {@link fabric.Gradient} instance from an SVG element\r\n       * @static\r\n       * @memberOf fabric.Gradient\r\n       * @param {SVGGradientElement} el SVG gradient element\r\n       * @param {fabric.Object} instance\r\n       * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\r\n       * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly graidents\r\n       * that uses gradientUnits as 'userSpaceOnUse' and percentages.\r\n       * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg\r\n       * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg\r\n       * @param {Object.number} width width part of the svg tag if viewBox is not specified\r\n       * @param {Object.number} height height part of the svg tag if viewBox is not specified\r\n       * @return {fabric.Gradient} Gradient instance\r\n       * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\r\n       * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\r\n       */\r\n      fromElement: function(el, instance, opacityAttr, svgOptions) {\r\n        /**\r\n         *  @example:\r\n         *\r\n         *  <linearGradient id=\"linearGrad1\">\r\n         *    <stop offset=\"0%\" stop-color=\"white\"/>\r\n         *    <stop offset=\"100%\" stop-color=\"black\"/>\r\n         *  </linearGradient>\r\n         *\r\n         *  OR\r\n         *\r\n         *  <linearGradient id=\"linearGrad2\">\r\n         *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\r\n         *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\r\n         *  </linearGradient>\r\n         *\r\n         *  OR\r\n         *\r\n         *  <radialGradient id=\"radialGrad1\">\r\n         *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n         *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\r\n         *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n         *  </radialGradient>\r\n         *\r\n         *  OR\r\n         *\r\n         *  <radialGradient id=\"radialGrad2\">\r\n         *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\r\n         *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\r\n         *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\r\n         *  </radialGradient>\r\n         *\r\n         */\r\n\r\n        var multiplier = parseFloat(opacityAttr) / (/%$/.test(opacityAttr) ? 100 : 1);\r\n        multiplier = multiplier < 0 ? 0 : multiplier > 1 ? 1 : multiplier;\r\n        if (isNaN(multiplier)) {\r\n          multiplier = 1;\r\n        }\r\n\r\n        var colorStopEls = el.getElementsByTagName('stop'),\r\n            type,\r\n            gradientUnits = el.getAttribute('gradientUnits') === 'userSpaceOnUse' ?\r\n              'pixels' : 'percentage',\r\n            gradientTransform = el.getAttribute('gradientTransform') || '',\r\n            colorStops = [],\r\n            coords, i, offsetX = 0, offsetY = 0,\r\n            transformMatrix;\r\n        if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\r\n          type = 'linear';\r\n          coords = getLinearCoords(el);\r\n        }\r\n        else {\r\n          type = 'radial';\r\n          coords = getRadialCoords(el);\r\n        }\r\n\r\n        for (i = colorStopEls.length; i--; ) {\r\n          colorStops.push(getColorStop(colorStopEls[i], multiplier));\r\n        }\r\n\r\n        transformMatrix = fabric.parseTransformAttribute(gradientTransform);\r\n\r\n        __convertPercentUnitsToValues(instance, coords, svgOptions, gradientUnits);\r\n\r\n        if (gradientUnits === 'pixels') {\r\n          offsetX = -instance.left;\r\n          offsetY = -instance.top;\r\n        }\r\n\r\n        var gradient = new fabric.Gradient({\r\n          id: el.getAttribute('id'),\r\n          type: type,\r\n          coords: coords,\r\n          colorStops: colorStops,\r\n          gradientUnits: gradientUnits,\r\n          gradientTransform: transformMatrix,\r\n          offsetX: offsetX,\r\n          offsetY: offsetY,\r\n        });\r\n\r\n        return gradient;\r\n      },\r\n      /* _FROM_SVG_END_ */\r\n\r\n      /**\r\n       * Returns {@link fabric.Gradient} instance from its object representation\r\n       * this function is uniquely used by Object.setGradient and is deprecated with it.\r\n       * @static\r\n       * @deprecated since 3.4.0\r\n       * @memberOf fabric.Gradient\r\n       * @param {Object} obj\r\n       * @param {Object} [options] Options object\r\n       */\r\n      forObject: function(obj, options) {\r\n        options || (options = { });\r\n        __convertPercentUnitsToValues(obj, options.coords, options.gradientUnits, {\r\n          // those values are to avoid errors. this function is uniquely used by\r\n          viewBoxWidth: 100,\r\n          viewBoxHeight: 100,\r\n        });\r\n        return new fabric.Gradient(options);\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function __convertPercentUnitsToValues(instance, options, svgOptions, gradientUnits) {\r\n      var propValue, finalValue;\r\n      Object.keys(options).forEach(function(prop) {\r\n        propValue = options[prop];\r\n        if (propValue === 'Infinity') {\r\n          finalValue = 1;\r\n        }\r\n        else if (propValue === '-Infinity') {\r\n          finalValue = 0;\r\n        }\r\n        else {\r\n          finalValue = parseFloat(options[prop], 10);\r\n          if (typeof propValue === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(propValue)) {\r\n            finalValue *= 0.01;\r\n            if (gradientUnits === 'pixels') {\r\n              // then we need to fix those percentages here in svg parsing\r\n              if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\r\n                finalValue *= svgOptions.viewBoxWidth || svgOptions.width;\r\n              }\r\n              if (prop === 'y1' || prop === 'y2') {\r\n                finalValue *= svgOptions.viewBoxHeight || svgOptions.height;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        options[prop] = finalValue;\r\n      });\r\n    }\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n\r\n    var toFixed = fabric.util.toFixed;\r\n\r\n    /**\r\n     * Pattern class\r\n     * @class fabric.Pattern\r\n     * @see {@link http://fabricjs.com/patterns|Pattern demo}\r\n     * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\r\n     * @see {@link fabric.Pattern#initialize} for constructor definition\r\n     */\r\n\r\n\r\n    fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\r\n\r\n      /**\r\n       * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\r\n       * @type String\r\n       * @default\r\n       */\r\n      repeat: 'repeat',\r\n\r\n      /**\r\n       * Pattern horizontal offset from object's left/top corner\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetX: 0,\r\n\r\n      /**\r\n       * Pattern vertical offset from object's left/top corner\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetY: 0,\r\n\r\n      /**\r\n       * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\r\n       * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\r\n       * @type String\r\n       * @default\r\n       */\r\n      crossOrigin: '',\r\n\r\n      /**\r\n       * transform matrix to change the pattern, imported from svgs.\r\n       * @type Array\r\n       * @default\r\n       */\r\n      patternTransform: null,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       * @param {Function} [callback] function to invoke after callback init.\r\n       * @return {fabric.Pattern} thisArg\r\n       */\r\n      initialize: function(options, callback) {\r\n        options || (options = { });\r\n\r\n        this.id = fabric.Object.__uid++;\r\n        this.setOptions(options);\r\n        if (!options.source || (options.source && typeof options.source !== 'string')) {\r\n          callback && callback(this);\r\n          return;\r\n        }\r\n        // function string\r\n        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\r\n          this.source = new Function(fabric.util.getFunctionBody(options.source));\r\n          callback && callback(this);\r\n        }\r\n        else {\r\n          // img src string\r\n          var _this = this;\r\n          this.source = fabric.util.createImage();\r\n          fabric.util.loadImage(options.source, function(img) {\r\n            _this.source = img;\r\n            callback && callback(_this);\r\n          }, null, this.crossOrigin);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of a pattern\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of a pattern instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n            source, object;\r\n\r\n        // callback\r\n        if (typeof this.source === 'function') {\r\n          source = String(this.source);\r\n        }\r\n        // <img> element\r\n        else if (typeof this.source.src === 'string') {\r\n          source = this.source.src;\r\n        }\r\n        // <canvas> element\r\n        else if (typeof this.source === 'object' && this.source.toDataURL) {\r\n          source = this.source.toDataURL();\r\n        }\r\n\r\n        object = {\r\n          type: 'pattern',\r\n          source: source,\r\n          repeat: this.repeat,\r\n          crossOrigin: this.crossOrigin,\r\n          offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\r\n          offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\r\n          patternTransform: this.patternTransform ? this.patternTransform.concat() : null\r\n        };\r\n        fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n\r\n        return object;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of a pattern\r\n       * @param {fabric.Object} object\r\n       * @return {String} SVG representation of a pattern\r\n       */\r\n      toSVG: function(object) {\r\n        var patternSource = typeof this.source === 'function' ? this.source() : this.source,\r\n            patternWidth = patternSource.width / object.width,\r\n            patternHeight = patternSource.height / object.height,\r\n            patternOffsetX = this.offsetX / object.width,\r\n            patternOffsetY = this.offsetY / object.height,\r\n            patternImgSrc = '';\r\n        if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\r\n          patternHeight = 1;\r\n          if (patternOffsetY) {\r\n            patternHeight += Math.abs(patternOffsetY);\r\n          }\r\n        }\r\n        if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\r\n          patternWidth = 1;\r\n          if (patternOffsetX) {\r\n            patternWidth += Math.abs(patternOffsetX);\r\n          }\r\n\r\n        }\r\n        if (patternSource.src) {\r\n          patternImgSrc = patternSource.src;\r\n        }\r\n        else if (patternSource.toDataURL) {\r\n          patternImgSrc = patternSource.toDataURL();\r\n        }\r\n\r\n        return '<pattern id=\"SVGID_' + this.id +\r\n                      '\" x=\"' + patternOffsetX +\r\n                      '\" y=\"' + patternOffsetY +\r\n                      '\" width=\"' + patternWidth +\r\n                      '\" height=\"' + patternHeight + '\">\\n' +\r\n                 '<image x=\"0\" y=\"0\"' +\r\n                        ' width=\"' + patternSource.width +\r\n                        '\" height=\"' + patternSource.height +\r\n                        '\" xlink:href=\"' + patternImgSrc +\r\n                 '\"></image>\\n' +\r\n               '</pattern>\\n';\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      setOptions: function(options) {\r\n        for (var prop in options) {\r\n          this[prop] = options[prop];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns an instance of CanvasPattern\r\n       * @param {CanvasRenderingContext2D} ctx Context to create pattern\r\n       * @return {CanvasPattern}\r\n       */\r\n      toLive: function(ctx) {\r\n        var source = typeof this.source === 'function' ? this.source() : this.source;\r\n\r\n        // if the image failed to load, return, and allow rest to continue loading\r\n        if (!source) {\r\n          return '';\r\n        }\r\n\r\n        // if an image\r\n        if (typeof source.src !== 'undefined') {\r\n          if (!source.complete) {\r\n            return '';\r\n          }\r\n          if (source.naturalWidth === 0 || source.naturalHeight === 0) {\r\n            return '';\r\n          }\r\n        }\r\n        return ctx.createPattern(source, this.repeat);\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        toFixed = fabric.util.toFixed;\r\n\r\n    if (fabric.Shadow) {\r\n      fabric.warn('fabric.Shadow is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Shadow class\r\n     * @class fabric.Shadow\r\n     * @see {@link http://fabricjs.com/shadows|Shadow demo}\r\n     * @see {@link fabric.Shadow#initialize} for constructor definition\r\n     */\r\n    fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\r\n\r\n      /**\r\n       * Shadow color\r\n       * @type String\r\n       * @default\r\n       */\r\n      color: 'rgb(0,0,0)',\r\n\r\n      /**\r\n       * Shadow blur\r\n       * @type Number\r\n       */\r\n      blur: 0,\r\n\r\n      /**\r\n       * Shadow horizontal offset\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetX: 0,\r\n\r\n      /**\r\n       * Shadow vertical offset\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetY: 0,\r\n\r\n      /**\r\n       * Whether the shadow should affect stroke operations\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      affectStroke: false,\r\n\r\n      /**\r\n       * Indicates whether toObject should include default values\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      includeDefaultValues: true,\r\n\r\n      /**\r\n       * When `false`, the shadow will scale with the object.\r\n       * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\r\n       * default to false\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      nonScaling: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\r\n       * @return {fabric.Shadow} thisArg\r\n       */\r\n      initialize: function(options) {\r\n\r\n        if (typeof options === 'string') {\r\n          options = this._parseShadow(options);\r\n        }\r\n\r\n        for (var prop in options) {\r\n          this[prop] = options[prop];\r\n        }\r\n\r\n        this.id = fabric.Object.__uid++;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} shadow Shadow value to parse\r\n       * @return {Object} Shadow object with color, offsetX, offsetY and blur\r\n       */\r\n      _parseShadow: function(shadow) {\r\n        var shadowStr = shadow.trim(),\r\n            offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\r\n            color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\r\n\r\n        return {\r\n          color: color.trim(),\r\n          offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\r\n          offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\r\n          blur: parseInt(offsetsAndBlur[3], 10) || 0\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns a string representation of an instance\r\n       * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\r\n       * @return {String} Returns CSS3 text-shadow declaration\r\n       */\r\n      toString: function() {\r\n        return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of a shadow\r\n       * @param {fabric.Object} object\r\n       * @return {String} SVG representation of a shadow\r\n       */\r\n      toSVG: function(object) {\r\n        var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n            offset = fabric.util.rotateVector(\r\n              { x: this.offsetX, y: this.offsetY },\r\n              fabric.util.degreesToRadians(-object.angle)),\r\n            BLUR_BOX = 20, color = new fabric.Color(this.color);\r\n\r\n        if (object.width && object.height) {\r\n          //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\r\n          // we add some extra space to filter box to contain the blur ( 20 )\r\n          fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\r\n          fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\r\n        }\r\n        if (object.flipX) {\r\n          offset.x *= -1;\r\n        }\r\n        if (object.flipY) {\r\n          offset.y *= -1;\r\n        }\r\n\r\n        return (\r\n          '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\r\n            'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\r\n            '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\r\n              toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\r\n            '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\r\n            '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\r\n            '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\r\n            '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\r\n            '\\t<feMerge>\\n' +\r\n              '\\t\\t<feMergeNode></feMergeNode>\\n' +\r\n              '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\r\n            '\\t</feMerge>\\n' +\r\n          '</filter>\\n');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns object representation of a shadow\r\n       * @return {Object} Object representation of a shadow instance\r\n       */\r\n      toObject: function() {\r\n        if (this.includeDefaultValues) {\r\n          return {\r\n            color: this.color,\r\n            blur: this.blur,\r\n            offsetX: this.offsetX,\r\n            offsetY: this.offsetY,\r\n            affectStroke: this.affectStroke,\r\n            nonScaling: this.nonScaling\r\n          };\r\n        }\r\n        var obj = { }, proto = fabric.Shadow.prototype;\r\n\r\n        ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function(prop) {\r\n          if (this[prop] !== proto[prop]) {\r\n            obj[prop] = this[prop];\r\n          }\r\n        }, this);\r\n\r\n        return obj;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Shadow\r\n     */\r\n    // eslint-disable-next-line max-len\r\n    fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function () {\r\n\r\n    'use strict';\r\n\r\n    if (fabric.StaticCanvas) {\r\n      fabric.warn('fabric.StaticCanvas is already defined.');\r\n      return;\r\n    }\r\n\r\n    // aliases for faster resolution\r\n    var extend = fabric.util.object.extend,\r\n        getElementOffset = fabric.util.getElementOffset,\r\n        removeFromArray = fabric.util.removeFromArray,\r\n        toFixed = fabric.util.toFixed,\r\n        transformPoint = fabric.util.transformPoint,\r\n        invertTransform = fabric.util.invertTransform,\r\n        getNodeCanvas = fabric.util.getNodeCanvas,\r\n        createCanvasElement = fabric.util.createCanvasElement,\r\n\r\n        CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\r\n\r\n    /**\r\n     * Static canvas class\r\n     * @class fabric.StaticCanvas\r\n     * @mixes fabric.Collection\r\n     * @mixes fabric.Observable\r\n     * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\r\n     * @see {@link fabric.StaticCanvas#initialize} for constructor definition\r\n     * @fires before:render\r\n     * @fires after:render\r\n     * @fires canvas:cleared\r\n     * @fires object:added\r\n     * @fires object:removed\r\n     */\r\n    fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(el, options) {\r\n        options || (options = { });\r\n        this.renderAndResetBound = this.renderAndReset.bind(this);\r\n        this.requestRenderAllBound = this.requestRenderAll.bind(this);\r\n        this._initStatic(el, options);\r\n      },\r\n\r\n      /**\r\n       * Background color of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\r\n       * @type {(String|fabric.Pattern)}\r\n       * @default\r\n       */\r\n      backgroundColor: '',\r\n\r\n      /**\r\n       * Background image of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\r\n       * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\r\n       * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\r\n       * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\r\n       * since 2.4.0 image caching is active, please when putting an image as background, add to the\r\n       * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\r\n       * vale. As an alternative you can disable image objectCaching\r\n       * @type fabric.Image\r\n       * @default\r\n       */\r\n      backgroundImage: null,\r\n\r\n      /**\r\n       * Overlay color of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\r\n       * @since 1.3.9\r\n       * @type {(String|fabric.Pattern)}\r\n       * @default\r\n       */\r\n      overlayColor: '',\r\n\r\n      /**\r\n       * Overlay image of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\r\n       * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\r\n       * and \"overlayImageTop\" properties are deprecated since 1.3.9.\r\n       * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\r\n       * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\r\n       * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\r\n       * vale. As an alternative you can disable image objectCaching\r\n       * @type fabric.Image\r\n       * @default\r\n       */\r\n      overlayImage: null,\r\n\r\n      /**\r\n       * Indicates whether toObject/toDatalessObject should include default values\r\n       * if set to false, takes precedence over the object value.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      includeDefaultValues: true,\r\n\r\n      /**\r\n       * Indicates whether objects' state should be saved\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      stateful: false,\r\n\r\n      /**\r\n       * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\r\n       * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\r\n       * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\r\n       * since the renders are quequed and executed one per frame.\r\n       * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\r\n       * Left default to true to do not break documentation and old app, fiddles.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      renderOnAddRemove: true,\r\n\r\n      /**\r\n       * Function that determines clipping of entire canvas area\r\n       * Being passed context as first argument.\r\n       * If you are using code minification, ctx argument can be minified/manglied you should use\r\n       * as a workaround `var ctx = arguments[0];` in the function;\r\n       * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\r\n       * @deprecated since 2.0.0\r\n       * @type Function\r\n       * @default\r\n       */\r\n      clipTo: null,\r\n\r\n      /**\r\n       * Indicates whether object controls (borders/controls) are rendered above overlay image\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      controlsAboveOverlay: false,\r\n\r\n      /**\r\n       * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      allowTouchScrolling: false,\r\n\r\n      /**\r\n       * Indicates whether this canvas will use image smoothing, this is on by default in browsers\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      imageSmoothingEnabled: true,\r\n\r\n      /**\r\n       * The transformation (in the format of Canvas transform) which focuses the viewport\r\n       * @type Array\r\n       * @default\r\n       */\r\n      viewportTransform: fabric.iMatrix.concat(),\r\n\r\n      /**\r\n       * if set to false background image is not affected by viewport transform\r\n       * @since 1.6.3\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      backgroundVpt: true,\r\n\r\n      /**\r\n       * if set to false overlya image is not affected by viewport transform\r\n       * @since 1.6.3\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      overlayVpt: true,\r\n\r\n      /**\r\n       * Callback; invoked right before object is about to be scaled/rotated\r\n       * @deprecated since 2.3.0\r\n       * Use before:transform event\r\n       */\r\n      onBeforeScaleRotate: function () {\r\n        /* NOOP */\r\n      },\r\n\r\n      /**\r\n       * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      enableRetinaScaling: true,\r\n\r\n      /**\r\n       * Describe canvas element extension over design\r\n       * properties are tl,tr,bl,br.\r\n       * if canvas is not zoomed/panned those points are the four corner of canvas\r\n       * if canvas is viewportTransformed you those points indicate the extension\r\n       * of canvas element in plain untrasformed coordinates\r\n       * The coordinates get updated with @method calcViewportBoundaries.\r\n       * @memberOf fabric.StaticCanvas.prototype\r\n       */\r\n      vptCoords: { },\r\n\r\n      /**\r\n       * Based on vptCoords and object.aCoords, skip rendering of objects that\r\n       * are not included in current viewport.\r\n       * May greatly help in applications with crowded canvas and use of zoom/pan\r\n       * If One of the corner of the bounding box of the object is on the canvas\r\n       * the objects get rendered.\r\n       * @memberOf fabric.StaticCanvas.prototype\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      skipOffscreen: true,\r\n\r\n      /**\r\n       * a fabricObject that, without stroke define a clipping area with their shape. filled in black\r\n       * the clipPath object gets used when the canvas has rendered, and the context is placed in the\r\n       * top left corner of the canvas.\r\n       * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\r\n       * @type fabric.Object\r\n       */\r\n      clipPath: undefined,\r\n\r\n      /**\r\n       * @private\r\n       * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initStatic: function(el, options) {\r\n        var cb = this.requestRenderAllBound;\r\n        this._objects = [];\r\n        this._createLowerCanvas(el);\r\n        this._initOptions(options);\r\n        this._setImageSmoothing();\r\n        // only initialize retina scaling once\r\n        if (!this.interactive) {\r\n          this._initRetinaScaling();\r\n        }\r\n\r\n        if (options.overlayImage) {\r\n          this.setOverlayImage(options.overlayImage, cb);\r\n        }\r\n        if (options.backgroundImage) {\r\n          this.setBackgroundImage(options.backgroundImage, cb);\r\n        }\r\n        if (options.backgroundColor) {\r\n          this.setBackgroundColor(options.backgroundColor, cb);\r\n        }\r\n        if (options.overlayColor) {\r\n          this.setOverlayColor(options.overlayColor, cb);\r\n        }\r\n        this.calcOffset();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _isRetinaScaling: function() {\r\n        return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} retinaScaling if applied, otherwise 1;\r\n       */\r\n      getRetinaScaling: function() {\r\n        return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _initRetinaScaling: function() {\r\n        if (!this._isRetinaScaling()) {\r\n          return;\r\n        }\r\n        var scaleRatio = fabric.devicePixelRatio;\r\n        this.__initRetinaScaling(scaleRatio, this.lowerCanvasEl, this.contextContainer);\r\n        if (this.upperCanvasEl) {\r\n          this.__initRetinaScaling(scaleRatio, this.upperCanvasEl, this.contextTop);\r\n        }\r\n      },\r\n\r\n      __initRetinaScaling: function(scaleRatio, canvas, context) {\r\n        canvas.setAttribute('width', this.width * scaleRatio);\r\n        canvas.setAttribute('height', this.height * scaleRatio);\r\n        context.scale(scaleRatio, scaleRatio);\r\n      },\r\n\r\n\r\n      /**\r\n       * Calculates canvas element offset relative to the document\r\n       * This method is also attached as \"resize\" event handler of window\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      calcOffset: function () {\r\n        this._offset = getElementOffset(this.lowerCanvasEl);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\r\n       * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\r\n       * @param {Function} callback callback to invoke when image is loaded and set as an overlay\r\n       * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\r\n       * @example <caption>Normal overlayImage with left/top = 0</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   // Needed to position overlayImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>overlayImage with different properties</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\r\n       * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\r\n       *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\r\n       *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\r\n       * });\r\n       * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   width: canvas.width,\r\n       *   height: canvas.height,\r\n       *   // Needed to position overlayImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>overlayImage loaded from cross-origin</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top',\r\n       *   crossOrigin: 'anonymous'\r\n       * });\r\n       */\r\n      setOverlayImage: function (image, callback, options) {\r\n        return this.__setBgOverlayImage('overlayImage', image, callback, options);\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\r\n       * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\r\n       * @param {Function} callback Callback to invoke when image is loaded and set as background\r\n       * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\r\n       * @example <caption>Normal backgroundImage with left/top = 0</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   // Needed to position backgroundImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>backgroundImage with different properties</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\r\n       * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\r\n       *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\r\n       *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\r\n       * });\r\n       * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   width: canvas.width,\r\n       *   height: canvas.height,\r\n       *   // Needed to position backgroundImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>backgroundImage loaded from cross-origin</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top',\r\n       *   crossOrigin: 'anonymous'\r\n       * });\r\n       */\r\n      // TODO: fix stretched examples\r\n      setBackgroundImage: function (image, callback, options) {\r\n        return this.__setBgOverlayImage('backgroundImage', image, callback, options);\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\r\n       * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\r\n       * @param {Function} callback Callback to invoke when foreground color is set\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\r\n       * @example <caption>Normal overlayColor - color value</caption>\r\n       * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as overlayColor</caption>\r\n       * canvas.setOverlayColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\r\n       * }, canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\r\n       * canvas.setOverlayColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n       *   repeat: 'repeat',\r\n       *   offsetX: 200,\r\n       *   offsetY: 100\r\n       * }, canvas.renderAll.bind(canvas));\r\n       */\r\n      setOverlayColor: function(overlayColor, callback) {\r\n        return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\r\n       * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\r\n       * @param {Function} callback Callback to invoke when background color is set\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\r\n       * @example <caption>Normal backgroundColor - color value</caption>\r\n       * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as backgroundColor</caption>\r\n       * canvas.setBackgroundColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\r\n       * }, canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\r\n       * canvas.setBackgroundColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n       *   repeat: 'repeat',\r\n       *   offsetX: 200,\r\n       *   offsetY: 100\r\n       * }, canvas.renderAll.bind(canvas));\r\n       */\r\n      setBackgroundColor: function(backgroundColor, callback) {\r\n        return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\r\n       */\r\n      _setImageSmoothing: function() {\r\n        var ctx = this.getContext();\r\n\r\n        ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\r\n          || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\r\n        ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\r\n       * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\r\n       * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\r\n       * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\r\n       * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\r\n       */\r\n      __setBgOverlayImage: function(property, image, callback, options) {\r\n        if (typeof image === 'string') {\r\n          fabric.util.loadImage(image, function(img) {\r\n            if (img) {\r\n              var instance = new fabric.Image(img, options);\r\n              this[property] = instance;\r\n              instance.canvas = this;\r\n            }\r\n            callback && callback(img);\r\n          }, this, options && options.crossOrigin);\r\n        }\r\n        else {\r\n          options && image.setOptions(options);\r\n          this[property] = image;\r\n          image && (image.canvas = this);\r\n          callback && callback(image);\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\r\n       * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\r\n       * @param {(Object|String|null)} color Object with pattern information, color value or null\r\n       * @param {Function} [callback] Callback is invoked when color is set\r\n       */\r\n      __setBgOverlayColor: function(property, color, callback) {\r\n        this[property] = color;\r\n        this._initGradient(color, property);\r\n        this._initPattern(color, property, callback);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createCanvasElement: function() {\r\n        var element = createCanvasElement();\r\n        if (!element) {\r\n          throw CANVAS_INIT_ERROR;\r\n        }\r\n        if (!element.style) {\r\n          element.style = { };\r\n        }\r\n        if (typeof element.getContext === 'undefined') {\r\n          throw CANVAS_INIT_ERROR;\r\n        }\r\n        return element;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initOptions: function (options) {\r\n        var lowerCanvasEl = this.lowerCanvasEl;\r\n        this._setOptions(options);\r\n\r\n        this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\r\n        this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\r\n\r\n        if (!this.lowerCanvasEl.style) {\r\n          return;\r\n        }\r\n\r\n        lowerCanvasEl.width = this.width;\r\n        lowerCanvasEl.height = this.height;\r\n\r\n        lowerCanvasEl.style.width = this.width + 'px';\r\n        lowerCanvasEl.style.height = this.height + 'px';\r\n\r\n        this.viewportTransform = this.viewportTransform.slice();\r\n      },\r\n\r\n      /**\r\n       * Creates a bottom canvas\r\n       * @private\r\n       * @param {HTMLElement} [canvasEl]\r\n       */\r\n      _createLowerCanvas: function (canvasEl) {\r\n        // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\r\n        if (canvasEl && canvasEl.getContext) {\r\n          this.lowerCanvasEl = canvasEl;\r\n        }\r\n        else {\r\n          this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\r\n        }\r\n\r\n        fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\r\n\r\n        if (this.interactive) {\r\n          this._applyCanvasStyle(this.lowerCanvasEl);\r\n        }\r\n\r\n        this.contextContainer = this.lowerCanvasEl.getContext('2d');\r\n      },\r\n\r\n      /**\r\n       * Returns canvas width (in px)\r\n       * @return {Number}\r\n       */\r\n      getWidth: function () {\r\n        return this.width;\r\n      },\r\n\r\n      /**\r\n       * Returns canvas height (in px)\r\n       * @return {Number}\r\n       */\r\n      getHeight: function () {\r\n        return this.height;\r\n      },\r\n\r\n      /**\r\n       * Sets width of this canvas instance\r\n       * @param {Number|String} value                         Value to set width to\r\n       * @param {Object}        [options]                     Options object\r\n       * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n       * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setWidth: function (value, options) {\r\n        return this.setDimensions({ width: value }, options);\r\n      },\r\n\r\n      /**\r\n       * Sets height of this canvas instance\r\n       * @param {Number|String} value                         Value to set height to\r\n       * @param {Object}        [options]                     Options object\r\n       * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n       * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setHeight: function (value, options) {\r\n        return this.setDimensions({ height: value }, options);\r\n      },\r\n\r\n      /**\r\n       * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\r\n       * @param {Object}        dimensions                    Object with width/height properties\r\n       * @param {Number|String} [dimensions.width]            Width of canvas element\r\n       * @param {Number|String} [dimensions.height]           Height of canvas element\r\n       * @param {Object}        [options]                     Options object\r\n       * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n       * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      setDimensions: function (dimensions, options) {\r\n        var cssValue;\r\n\r\n        options = options || {};\r\n\r\n        for (var prop in dimensions) {\r\n          cssValue = dimensions[prop];\r\n\r\n          if (!options.cssOnly) {\r\n            this._setBackstoreDimension(prop, dimensions[prop]);\r\n            cssValue += 'px';\r\n            this.hasLostContext = true;\r\n          }\r\n\r\n          if (!options.backstoreOnly) {\r\n            this._setCssDimension(prop, cssValue);\r\n          }\r\n        }\r\n        if (this._isCurrentlyDrawing) {\r\n          this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\r\n        }\r\n        this._initRetinaScaling();\r\n        this._setImageSmoothing();\r\n        this.calcOffset();\r\n\r\n        if (!options.cssOnly) {\r\n          this.requestRenderAll();\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Helper for setting width/height\r\n       * @private\r\n       * @param {String} prop property (width|height)\r\n       * @param {Number} value value to set property to\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      _setBackstoreDimension: function (prop, value) {\r\n        this.lowerCanvasEl[prop] = value;\r\n\r\n        if (this.upperCanvasEl) {\r\n          this.upperCanvasEl[prop] = value;\r\n        }\r\n\r\n        if (this.cacheCanvasEl) {\r\n          this.cacheCanvasEl[prop] = value;\r\n        }\r\n\r\n        this[prop] = value;\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Helper for setting css width/height\r\n       * @private\r\n       * @param {String} prop property (width|height)\r\n       * @param {String} value value to set property to\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      _setCssDimension: function (prop, value) {\r\n        this.lowerCanvasEl.style[prop] = value;\r\n\r\n        if (this.upperCanvasEl) {\r\n          this.upperCanvasEl.style[prop] = value;\r\n        }\r\n\r\n        if (this.wrapperEl) {\r\n          this.wrapperEl.style[prop] = value;\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns canvas zoom level\r\n       * @return {Number}\r\n       */\r\n      getZoom: function () {\r\n        return this.viewportTransform[0];\r\n      },\r\n\r\n      /**\r\n       * Sets viewport transform of this canvas instance\r\n       * @param {Array} vpt the transform in the form of context.transform\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setViewportTransform: function (vpt) {\r\n        var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\r\n        this.viewportTransform = vpt;\r\n        for (i = 0, len = this._objects.length; i < len; i++) {\r\n          object = this._objects[i];\r\n          object.group || object.setCoords(ignoreVpt, skipAbsolute);\r\n        }\r\n        if (activeObject && activeObject.type === 'activeSelection') {\r\n          activeObject.setCoords(ignoreVpt, skipAbsolute);\r\n        }\r\n        this.calcViewportBoundaries();\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets zoom level of this canvas instance, zoom centered around point\r\n       * @param {fabric.Point} point to zoom with respect to\r\n       * @param {Number} value to set zoom to, less than 1 zooms out\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      zoomToPoint: function (point, value) {\r\n        // TODO: just change the scale, preserve other transformations\r\n        var before = point, vpt = this.viewportTransform.slice(0);\r\n        point = transformPoint(point, invertTransform(this.viewportTransform));\r\n        vpt[0] = value;\r\n        vpt[3] = value;\r\n        var after = transformPoint(point, vpt);\r\n        vpt[4] += before.x - after.x;\r\n        vpt[5] += before.y - after.y;\r\n        return this.setViewportTransform(vpt);\r\n      },\r\n\r\n      /**\r\n       * Sets zoom level of this canvas instance\r\n       * @param {Number} value to set zoom to, less than 1 zooms out\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setZoom: function (value) {\r\n        this.zoomToPoint(new fabric.Point(0, 0), value);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Pan viewport so as to place point at top left corner of canvas\r\n       * @param {fabric.Point} point to move to\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      absolutePan: function (point) {\r\n        var vpt = this.viewportTransform.slice(0);\r\n        vpt[4] = -point.x;\r\n        vpt[5] = -point.y;\r\n        return this.setViewportTransform(vpt);\r\n      },\r\n\r\n      /**\r\n       * Pans viewpoint relatively\r\n       * @param {fabric.Point} point (position vector) to move by\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      relativePan: function (point) {\r\n        return this.absolutePan(new fabric.Point(\r\n          -point.x - this.viewportTransform[4],\r\n          -point.y - this.viewportTransform[5]\r\n        ));\r\n      },\r\n\r\n      /**\r\n       * Returns &lt;canvas> element corresponding to this instance\r\n       * @return {HTMLCanvasElement}\r\n       */\r\n      getElement: function () {\r\n        return this.lowerCanvasEl;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} obj Object that was added\r\n       */\r\n      _onObjectAdded: function(obj) {\r\n        this.stateful && obj.setupState();\r\n        obj._set('canvas', this);\r\n        obj.setCoords();\r\n        this.fire('object:added', { target: obj });\r\n        obj.fire('added');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} obj Object that was removed\r\n       */\r\n      _onObjectRemoved: function(obj) {\r\n        this.fire('object:removed', { target: obj });\r\n        obj.fire('removed');\r\n        delete obj.canvas;\r\n      },\r\n\r\n      /**\r\n       * Clears specified context of canvas element\r\n       * @param {CanvasRenderingContext2D} ctx Context to clear\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      clearContext: function(ctx) {\r\n        ctx.clearRect(0, 0, this.width, this.height);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns context of canvas where objects are drawn\r\n       * @return {CanvasRenderingContext2D}\r\n       */\r\n      getContext: function () {\r\n        return this.contextContainer;\r\n      },\r\n\r\n      /**\r\n       * Clears all contexts (background, main, top) of an instance\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      clear: function () {\r\n        this._objects.length = 0;\r\n        this.backgroundImage = null;\r\n        this.overlayImage = null;\r\n        this.backgroundColor = '';\r\n        this.overlayColor = '';\r\n        if (this._hasITextHandlers) {\r\n          this.off('mouse:up', this._mouseUpITextHandler);\r\n          this._iTextInstances = null;\r\n          this._hasITextHandlers = false;\r\n        }\r\n        this.clearContext(this.contextContainer);\r\n        this.fire('canvas:cleared');\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Renders the canvas\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderAll: function () {\r\n        var canvasToDrawOn = this.contextContainer;\r\n        this.renderCanvas(canvasToDrawOn, this._objects);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Function created to be instance bound at initialization\r\n       * used in requestAnimationFrame rendering\r\n       * Let the fabricJS call it. If you call it manually you could have more\r\n       * animationFrame stacking on to of each other\r\n       * for an imperative rendering, use canvas.renderAll\r\n       * @private\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderAndReset: function() {\r\n        this.isRendering = 0;\r\n        this.renderAll();\r\n      },\r\n\r\n      /**\r\n       * Append a renderAll request to next animation frame.\r\n       * unless one is already in progress, in that case nothing is done\r\n       * a boolean flag will avoid appending more.\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      requestRenderAll: function () {\r\n        if (!this.isRendering) {\r\n          this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Calculate the position of the 4 corner of canvas with current viewportTransform.\r\n       * helps to determinate when an object is in the current rendering viewport using\r\n       * object absolute coordinates ( aCoords )\r\n       * @return {Object} points.tl\r\n       * @chainable\r\n       */\r\n      calcViewportBoundaries: function() {\r\n        var points = { }, width = this.width, height = this.height,\r\n            iVpt = invertTransform(this.viewportTransform);\r\n        points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\r\n        points.br = transformPoint({ x: width, y: height }, iVpt);\r\n        points.tr = new fabric.Point(points.br.x, points.tl.y);\r\n        points.bl = new fabric.Point(points.tl.x, points.br.y);\r\n        this.vptCoords = points;\r\n        return points;\r\n      },\r\n\r\n      cancelRequestedRender: function() {\r\n        if (this.isRendering) {\r\n          fabric.util.cancelAnimFrame(this.isRendering);\r\n          this.isRendering = 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Renders background, objects, overlay and controls.\r\n       * @param {CanvasRenderingContext2D} ctx\r\n       * @param {Array} objects to render\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderCanvas: function(ctx, objects) {\r\n        var v = this.viewportTransform, path = this.clipPath;\r\n        this.cancelRequestedRender();\r\n        this.calcViewportBoundaries();\r\n        this.clearContext(ctx);\r\n        this.fire('before:render', { ctx: ctx, });\r\n        if (this.clipTo) {\r\n          fabric.util.clipContext(this, ctx);\r\n        }\r\n        this._renderBackground(ctx);\r\n\r\n        ctx.save();\r\n        //apply viewport transform once for all rendering process\r\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        this._renderObjects(ctx, objects);\r\n        ctx.restore();\r\n        if (!this.controlsAboveOverlay && this.interactive) {\r\n          this.drawControls(ctx);\r\n        }\r\n        if (this.clipTo) {\r\n          ctx.restore();\r\n        }\r\n        if (path) {\r\n          path.canvas = this;\r\n          // needed to setup a couple of variables\r\n          path.shouldCache();\r\n          path._transformDone = true;\r\n          path.renderCache({ forClipping: true });\r\n          this.drawClipPathOnCanvas(ctx);\r\n        }\r\n        this._renderOverlay(ctx);\r\n        if (this.controlsAboveOverlay && this.interactive) {\r\n          this.drawControls(ctx);\r\n        }\r\n        this.fire('after:render', { ctx: ctx, });\r\n      },\r\n\r\n      /**\r\n       * Paint the cached clipPath on the lowerCanvasEl\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawClipPathOnCanvas: function(ctx) {\r\n        var v = this.viewportTransform, path = this.clipPath;\r\n        ctx.save();\r\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        // DEBUG: uncomment this line, comment the following\r\n        // ctx.globalAlpha = 0.4;\r\n        ctx.globalCompositeOperation = 'destination-in';\r\n        path.transform(ctx);\r\n        ctx.scale(1 / path.zoomX, 1 / path.zoomY);\r\n        ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Array} objects to render\r\n       */\r\n      _renderObjects: function(ctx, objects) {\r\n        var i, len;\r\n        for (i = 0, len = objects.length; i < len; ++i) {\r\n          objects[i] && objects[i].render(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {string} property 'background' or 'overlay'\r\n       */\r\n      _renderBackgroundOrOverlay: function(ctx, property) {\r\n        var fill = this[property + 'Color'], object = this[property + 'Image'],\r\n            v = this.viewportTransform, needsVpt = this[property + 'Vpt'];\r\n        if (!fill && !object) {\r\n          return;\r\n        }\r\n        if (fill) {\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.moveTo(0, 0);\r\n          ctx.lineTo(this.width, 0);\r\n          ctx.lineTo(this.width, this.height);\r\n          ctx.lineTo(0, this.height);\r\n          ctx.closePath();\r\n          ctx.fillStyle = fill.toLive\r\n            ? fill.toLive(ctx, this)\r\n            : fill;\r\n          if (needsVpt) {\r\n            ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n          }\r\n          ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\r\n          var m = fill.gradientTransform || fill.patternTransform;\r\n          m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n          ctx.fill();\r\n          ctx.restore();\r\n        }\r\n        if (object) {\r\n          ctx.save();\r\n          if (needsVpt) {\r\n            ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n          }\r\n          object.render(ctx);\r\n          ctx.restore();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderBackground: function(ctx) {\r\n        this._renderBackgroundOrOverlay(ctx, 'background');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderOverlay: function(ctx) {\r\n        this._renderBackgroundOrOverlay(ctx, 'overlay');\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of a center of canvas.\r\n       * Returned value is an object with top and left properties\r\n       * @return {Object} object with \"top\" and \"left\" number values\r\n       */\r\n      getCenter: function () {\r\n        return {\r\n          top: this.height / 2,\r\n          left: this.width / 2\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally in the canvas\r\n       * @param {fabric.Object} object Object to center horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       */\r\n      centerObjectH: function (object) {\r\n        return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically in the canvas\r\n       * @param {fabric.Object} object Object to center vertically\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      centerObjectV: function (object) {\r\n        return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically and horizontally in the canvas\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      centerObject: function(object) {\r\n        var center = this.getCenter();\r\n\r\n        return this._centerObject(object, new fabric.Point(center.left, center.top));\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically and horizontally in the viewport\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterObject: function(object) {\r\n        var vpCenter = this.getVpCenter();\r\n\r\n        return this._centerObject(object, vpCenter);\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally in the viewport, object.top is unchanged\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterObjectH: function(object) {\r\n        var vpCenter = this.getVpCenter();\r\n        this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object Vertically in the viewport, object.top is unchanged\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterObjectV: function(object) {\r\n        var vpCenter = this.getVpCenter();\r\n\r\n        return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\r\n      },\r\n\r\n      /**\r\n       * Calculate the point in canvas that correspond to the center of actual viewport.\r\n       * @return {fabric.Point} vpCenter, viewport center\r\n       * @chainable\r\n       */\r\n      getVpCenter: function() {\r\n        var center = this.getCenter(),\r\n            iVpt = invertTransform(this.viewportTransform);\r\n        return transformPoint({ x: center.left, y: center.top }, iVpt);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} object Object to center\r\n       * @param {fabric.Point} center Center point\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      _centerObject: function(object, center) {\r\n        object.setPositionByOrigin(center, 'center', 'center');\r\n        object.setCoords();\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returs dataless JSON representation of canvas\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {String} json string\r\n       */\r\n      toDatalessJSON: function (propertiesToInclude) {\r\n        return this.toDatalessObject(propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of canvas\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function (propertiesToInclude) {\r\n        return this._toObjectMethod('toObject', propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * Returns dataless object representation of canvas\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toDatalessObject: function (propertiesToInclude) {\r\n        return this._toObjectMethod('toDatalessObject', propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObjectMethod: function (methodName, propertiesToInclude) {\r\n\r\n        var clipPath = this.clipPath, data = {\r\n          version: fabric.version,\r\n          objects: this._toObjects(methodName, propertiesToInclude),\r\n        };\r\n        if (clipPath) {\r\n          data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\r\n        }\r\n        extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\r\n\r\n        fabric.util.populateWithProperties(this, data, propertiesToInclude);\r\n\r\n        return data;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObjects: function(methodName, propertiesToInclude) {\r\n        return this._objects.filter(function(object) {\r\n          return !object.excludeFromExport;\r\n        }).map(function(instance) {\r\n          return this._toObject(instance, methodName, propertiesToInclude);\r\n        }, this);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObject: function(instance, methodName, propertiesToInclude) {\r\n        var originalValue;\r\n\r\n        if (!this.includeDefaultValues) {\r\n          originalValue = instance.includeDefaultValues;\r\n          instance.includeDefaultValues = false;\r\n        }\r\n\r\n        var object = instance[methodName](propertiesToInclude);\r\n        if (!this.includeDefaultValues) {\r\n          instance.includeDefaultValues = originalValue;\r\n        }\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __serializeBgOverlay: function(methodName, propertiesToInclude) {\r\n        var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\r\n\r\n        if (this.backgroundColor) {\r\n          data.background = this.backgroundColor.toObject\r\n            ? this.backgroundColor.toObject(propertiesToInclude)\r\n            : this.backgroundColor;\r\n        }\r\n\r\n        if (this.overlayColor) {\r\n          data.overlay = this.overlayColor.toObject\r\n            ? this.overlayColor.toObject(propertiesToInclude)\r\n            : this.overlayColor;\r\n        }\r\n        if (bgImage && !bgImage.excludeFromExport) {\r\n          data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\r\n        }\r\n        if (overlay && !overlay.excludeFromExport) {\r\n          data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\r\n        }\r\n\r\n        return data;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\r\n       * a zoomed canvas will then produce zoomed SVG output.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      svgViewportTransformation: true,\r\n\r\n      /**\r\n       * Returns SVG representation of canvas\r\n       * @function\r\n       * @param {Object} [options] Options object for SVG output\r\n       * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\r\n       * @param {Object} [options.viewBox] SVG viewbox object\r\n       * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\r\n       * @param {Number} [options.viewBox.y] y-coordinate of viewbox\r\n       * @param {Number} [options.viewBox.width] Width of viewbox\r\n       * @param {Number} [options.viewBox.height] Height of viewbox\r\n       * @param {String} [options.encoding=UTF-8] Encoding of SVG output\r\n       * @param {String} [options.width] desired width of svg with or without units\r\n       * @param {String} [options.height] desired height of svg with or without units\r\n       * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\r\n       * @return {String} SVG string\r\n       * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n       * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\r\n       * @example <caption>Normal SVG output</caption>\r\n       * var svg = canvas.toSVG();\r\n       * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\r\n       * var svg = canvas.toSVG({suppressPreamble: true});\r\n       * @example <caption>SVG output with viewBox attribute</caption>\r\n       * var svg = canvas.toSVG({\r\n       *   viewBox: {\r\n       *     x: 100,\r\n       *     y: 100,\r\n       *     width: 200,\r\n       *     height: 300\r\n       *   }\r\n       * });\r\n       * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\r\n       * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\r\n       * @example <caption>Modify SVG output with reviver function</caption>\r\n       * var svg = canvas.toSVG(null, function(svg) {\r\n       *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\r\n       * });\r\n       */\r\n      toSVG: function(options, reviver) {\r\n        options || (options = { });\r\n        options.reviver = reviver;\r\n        var markup = [];\r\n\r\n        this._setSVGPreamble(markup, options);\r\n        this._setSVGHeader(markup, options);\r\n        if (this.clipPath) {\r\n          markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\r\n        }\r\n        this._setSVGBgOverlayColor(markup, 'background');\r\n        this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\r\n        this._setSVGObjects(markup, reviver);\r\n        if (this.clipPath) {\r\n          markup.push('</g>\\n');\r\n        }\r\n        this._setSVGBgOverlayColor(markup, 'overlay');\r\n        this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\r\n\r\n        markup.push('</svg>');\r\n\r\n        return markup.join('');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGPreamble: function(markup, options) {\r\n        if (options.suppressPreamble) {\r\n          return;\r\n        }\r\n        markup.push(\r\n          '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\r\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\r\n          '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\r\n        );\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGHeader: function(markup, options) {\r\n        var width = options.width || this.width,\r\n            height = options.height || this.height,\r\n            vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n\r\n        if (options.viewBox) {\r\n          viewBox = 'viewBox=\"' +\r\n                  options.viewBox.x + ' ' +\r\n                  options.viewBox.y + ' ' +\r\n                  options.viewBox.width + ' ' +\r\n                  options.viewBox.height + '\" ';\r\n        }\r\n        else {\r\n          if (this.svgViewportTransformation) {\r\n            vpt = this.viewportTransform;\r\n            viewBox = 'viewBox=\"' +\r\n                    toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\r\n                    toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\r\n                    toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\r\n                    toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\r\n          }\r\n        }\r\n\r\n        markup.push(\r\n          '<svg ',\r\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\r\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\r\n          'version=\"1.1\" ',\r\n          'width=\"', width, '\" ',\r\n          'height=\"', height, '\" ',\r\n          viewBox,\r\n          'xml:space=\"preserve\">\\n',\r\n          '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\r\n          '<defs>\\n',\r\n          this.createSVGFontFacesMarkup(),\r\n          this.createSVGRefElementsMarkup(),\r\n          this.createSVGClipPathMarkup(options),\r\n          '</defs>\\n'\r\n        );\r\n      },\r\n\r\n      createSVGClipPathMarkup: function(options) {\r\n        var clipPath = this.clipPath;\r\n        if (clipPath) {\r\n          clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\r\n          return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\r\n            this.clipPath.toClipPathSVG(options.reviver) +\r\n            '</clipPath>\\n';\r\n        }\r\n        return '';\r\n      },\r\n\r\n      /**\r\n       * Creates markup containing SVG referenced elements like patterns, gradients etc.\r\n       * @return {String}\r\n       */\r\n      createSVGRefElementsMarkup: function() {\r\n        var _this = this,\r\n            markup = ['background', 'overlay'].map(function(prop) {\r\n              var fill = _this[prop + 'Color'];\r\n              if (fill && fill.toLive) {\r\n                var shouldTransform = _this[prop + 'Vpt'], vpt = _this.viewportTransform,\r\n                    object = {\r\n                      width: _this.width / (shouldTransform ? vpt[0] : 1),\r\n                      height: _this.height / (shouldTransform ? vpt[3] : 1)\r\n                    };\r\n                return fill.toSVG(\r\n                  object,\r\n                  { additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : '' }\r\n                );\r\n              }\r\n            });\r\n        return markup.join('');\r\n      },\r\n\r\n      /**\r\n       * Creates markup containing SVG font faces,\r\n       * font URLs for font faces must be collected by developers\r\n       * and are not extracted from the DOM by fabricjs\r\n       * @param {Array} objects Array of fabric objects\r\n       * @return {String}\r\n       */\r\n      createSVGFontFacesMarkup: function() {\r\n        var markup = '', fontList = { }, obj, fontFamily,\r\n            style, row, rowIndex, _char, charIndex, i, len,\r\n            fontPaths = fabric.fontPaths, objects = this._objects;\r\n\r\n        for (i = 0, len = objects.length; i < len; i++) {\r\n          obj = objects[i];\r\n          fontFamily = obj.fontFamily;\r\n          if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\r\n            continue;\r\n          }\r\n          fontList[fontFamily] = true;\r\n          if (!obj.styles) {\r\n            continue;\r\n          }\r\n          style = obj.styles;\r\n          for (rowIndex in style) {\r\n            row = style[rowIndex];\r\n            for (charIndex in row) {\r\n              _char = row[charIndex];\r\n              fontFamily = _char.fontFamily;\r\n              if (!fontList[fontFamily] && fontPaths[fontFamily]) {\r\n                fontList[fontFamily] = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        for (var j in fontList) {\r\n          markup += [\r\n            '\\t\\t@font-face {\\n',\r\n            '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\r\n            '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\r\n            '\\t\\t}\\n'\r\n          ].join('');\r\n        }\r\n\r\n        if (markup) {\r\n          markup = [\r\n            '\\t<style type=\"text/css\">',\r\n            '<![CDATA[\\n',\r\n            markup,\r\n            ']]>',\r\n            '</style>\\n'\r\n          ].join('');\r\n        }\r\n\r\n        return markup;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGObjects: function(markup, reviver) {\r\n        var instance, i, len, objects = this._objects;\r\n        for (i = 0, len = objects.length; i < len; i++) {\r\n          instance = objects[i];\r\n          if (instance.excludeFromExport) {\r\n            continue;\r\n          }\r\n          this._setSVGObject(markup, instance, reviver);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGObject: function(markup, instance, reviver) {\r\n        markup.push(instance.toSVG(reviver));\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGBgOverlayImage: function(markup, property, reviver) {\r\n        if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\r\n          markup.push(this[property].toSVG(reviver));\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGBgOverlayColor: function(markup, property) {\r\n        var filler = this[property + 'Color'], vpt = this.viewportTransform, finalWidth = this.width,\r\n            finalHeight = this.height;\r\n        if (!filler) {\r\n          return;\r\n        }\r\n        if (filler.toLive) {\r\n          var repeat = filler.repeat, iVpt = fabric.util.invertTransform(vpt), shouldInvert = this[property + 'Vpt'],\r\n              additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\r\n          markup.push(\r\n            '<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\r\n            ' x=\"', filler.offsetX - finalWidth / 2,\r\n            '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\r\n            'width=\"',\r\n            (repeat === 'repeat-y' || repeat === 'no-repeat'\r\n              ? filler.source.width\r\n              : finalWidth ),\r\n            '\" height=\"',\r\n            (repeat === 'repeat-x' || repeat === 'no-repeat'\r\n              ? filler.source.height\r\n              : finalHeight),\r\n            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\r\n            '></rect>\\n'\r\n          );\r\n        }\r\n        else {\r\n          markup.push(\r\n            '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\r\n            'fill=\"', filler, '\"',\r\n            '></rect>\\n'\r\n          );\r\n        }\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Moves an object or the objects of a multiple selection\r\n       * to the bottom of the stack of drawn objects\r\n       * @param {fabric.Object} object Object to send to back\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      sendToBack: function (object) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, objs;\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = objs.length; i--;) {\r\n            obj = objs[i];\r\n            removeFromArray(this._objects, obj);\r\n            this._objects.unshift(obj);\r\n          }\r\n        }\r\n        else {\r\n          removeFromArray(this._objects, object);\r\n          this._objects.unshift(object);\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Moves an object or the objects of a multiple selection\r\n       * to the top of the stack of drawn objects\r\n       * @param {fabric.Object} object Object to send\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      bringToFront: function (object) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, objs;\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = 0; i < objs.length; i++) {\r\n            obj = objs[i];\r\n            removeFromArray(this._objects, obj);\r\n            this._objects.push(obj);\r\n          }\r\n        }\r\n        else {\r\n          removeFromArray(this._objects, object);\r\n          this._objects.push(object);\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Moves an object or a selection down in stack of drawn objects\r\n       * An optional paramter, intersecting allowes to move the object in behind\r\n       * the first intersecting object. Where intersection is calculated with\r\n       * bounding box. If no intersection is found, there will not be change in the\r\n       * stack.\r\n       * @param {fabric.Object} object Object to send\r\n       * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      sendBackwards: function (object, intersecting) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, idx, newIdx, objs, objsMoved = 0;\r\n\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = 0; i < objs.length; i++) {\r\n            obj = objs[i];\r\n            idx = this._objects.indexOf(obj);\r\n            if (idx > 0 + objsMoved) {\r\n              newIdx = idx - 1;\r\n              removeFromArray(this._objects, obj);\r\n              this._objects.splice(newIdx, 0, obj);\r\n            }\r\n            objsMoved++;\r\n          }\r\n        }\r\n        else {\r\n          idx = this._objects.indexOf(object);\r\n          if (idx !== 0) {\r\n            // if object is not on the bottom of stack\r\n            newIdx = this._findNewLowerIndex(object, idx, intersecting);\r\n            removeFromArray(this._objects, object);\r\n            this._objects.splice(newIdx, 0, object);\r\n          }\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _findNewLowerIndex: function(object, idx, intersecting) {\r\n        var newIdx, i;\r\n\r\n        if (intersecting) {\r\n          newIdx = idx;\r\n\r\n          // traverse down the stack looking for the nearest intersecting object\r\n          for (i = idx - 1; i >= 0; --i) {\r\n\r\n            var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\r\n                                 object.isContainedWithinObject(this._objects[i]) ||\r\n                                 this._objects[i].isContainedWithinObject(object);\r\n\r\n            if (isIntersecting) {\r\n              newIdx = i;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          newIdx = idx - 1;\r\n        }\r\n\r\n        return newIdx;\r\n      },\r\n\r\n      /**\r\n       * Moves an object or a selection up in stack of drawn objects\r\n       * An optional paramter, intersecting allowes to move the object in front\r\n       * of the first intersecting object. Where intersection is calculated with\r\n       * bounding box. If no intersection is found, there will not be change in the\r\n       * stack.\r\n       * @param {fabric.Object} object Object to send\r\n       * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      bringForward: function (object, intersecting) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, idx, newIdx, objs, objsMoved = 0;\r\n\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = objs.length; i--;) {\r\n            obj = objs[i];\r\n            idx = this._objects.indexOf(obj);\r\n            if (idx < this._objects.length - 1 - objsMoved) {\r\n              newIdx = idx + 1;\r\n              removeFromArray(this._objects, obj);\r\n              this._objects.splice(newIdx, 0, obj);\r\n            }\r\n            objsMoved++;\r\n          }\r\n        }\r\n        else {\r\n          idx = this._objects.indexOf(object);\r\n          if (idx !== this._objects.length - 1) {\r\n            // if object is not on top of stack (last item in an array)\r\n            newIdx = this._findNewUpperIndex(object, idx, intersecting);\r\n            removeFromArray(this._objects, object);\r\n            this._objects.splice(newIdx, 0, object);\r\n          }\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _findNewUpperIndex: function(object, idx, intersecting) {\r\n        var newIdx, i, len;\r\n\r\n        if (intersecting) {\r\n          newIdx = idx;\r\n\r\n          // traverse up the stack looking for the nearest intersecting object\r\n          for (i = idx + 1, len = this._objects.length; i < len; ++i) {\r\n\r\n            var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\r\n                                 object.isContainedWithinObject(this._objects[i]) ||\r\n                                 this._objects[i].isContainedWithinObject(object);\r\n\r\n            if (isIntersecting) {\r\n              newIdx = i;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          newIdx = idx + 1;\r\n        }\r\n\r\n        return newIdx;\r\n      },\r\n\r\n      /**\r\n       * Moves an object to specified level in stack of drawn objects\r\n       * @param {fabric.Object} object Object to send\r\n       * @param {Number} index Position to move to\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      moveTo: function (object, index) {\r\n        removeFromArray(this._objects, object);\r\n        this._objects.splice(index, 0, object);\r\n        return this.renderOnAddRemove && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * Clears a canvas element and dispose objects\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      dispose: function () {\r\n        // cancel eventually ongoing renders\r\n        if (this.isRendering) {\r\n          fabric.util.cancelAnimFrame(this.isRendering);\r\n          this.isRendering = 0;\r\n        }\r\n        this.forEachObject(function(object) {\r\n          object.dispose && object.dispose();\r\n        });\r\n        this._objects = [];\r\n        if (this.backgroundImage && this.backgroundImage.dispose) {\r\n          this.backgroundImage.dispose();\r\n        }\r\n        this.backgroundImage = null;\r\n        if (this.overlayImage && this.overlayImage.dispose) {\r\n          this.overlayImage.dispose();\r\n        }\r\n        this.overlayImage = null;\r\n        this._iTextInstances = null;\r\n        this.contextContainer = null;\r\n        fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\r\n        this.lowerCanvasEl = undefined;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns a string representation of an instance\r\n       * @return {String} string representation of an instance\r\n       */\r\n      toString: function () {\r\n        return '#<fabric.Canvas (' + this.complexity() + '): ' +\r\n                 '{ objects: ' + this._objects.length + ' }>';\r\n      }\r\n    });\r\n\r\n    extend(fabric.StaticCanvas.prototype, fabric.Observable);\r\n    extend(fabric.StaticCanvas.prototype, fabric.Collection);\r\n    extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\r\n\r\n    extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\r\n\r\n      /**\r\n       * @static\r\n       * @type String\r\n       * @default\r\n       */\r\n      EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\r\n\r\n      /**\r\n       * Provides a way to check support of some of the canvas methods\r\n       * (either those of HTMLCanvasElement itself, or rendering context)\r\n       *\r\n       * @param {String} methodName Method to check support for;\r\n       *                            Could be one of \"setLineDash\"\r\n       * @return {Boolean | null} `true` if method is supported (or at least exists),\r\n       *                          `null` if canvas element or context can not be initialized\r\n       */\r\n      supports: function (methodName) {\r\n        var el = createCanvasElement();\r\n\r\n        if (!el || !el.getContext) {\r\n          return null;\r\n        }\r\n\r\n        var ctx = el.getContext('2d');\r\n        if (!ctx) {\r\n          return null;\r\n        }\r\n\r\n        switch (methodName) {\r\n\r\n          case 'setLineDash':\r\n            return typeof ctx.setLineDash !== 'undefined';\r\n\r\n          default:\r\n            return null;\r\n        }\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns JSON representation of canvas\r\n     * @function\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {String} JSON string\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n     * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\r\n     * @example <caption>JSON without additional properties</caption>\r\n     * var json = canvas.toJSON();\r\n     * @example <caption>JSON with additional properties included</caption>\r\n     * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\r\n     * @example <caption>JSON without default values</caption>\r\n     * canvas.includeDefaultValues = false;\r\n     * var json = canvas.toJSON();\r\n     */\r\n    fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\r\n\r\n    if (fabric.isLikelyNode) {\r\n      fabric.StaticCanvas.prototype.createPNGStream = function() {\r\n        var impl = getNodeCanvas(this.lowerCanvasEl);\r\n        return impl && impl.createPNGStream();\r\n      };\r\n      fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\r\n        var impl = getNodeCanvas(this.lowerCanvasEl);\r\n        return impl && impl.createJPEGStream(opts);\r\n      };\r\n    }\r\n  })();\r\n\r\n\r\n  /**\r\n   * BaseBrush class\r\n   * @class fabric.BaseBrush\r\n   * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\r\n   */\r\n  fabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\r\n\r\n    /**\r\n     * Color of a brush\r\n     * @type String\r\n     * @default\r\n     */\r\n    color: 'rgb(0, 0, 0)',\r\n\r\n    /**\r\n     * Width of a brush, has to be a Number, no string literals\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width: 1,\r\n\r\n    /**\r\n     * Shadow object representing shadow of this shape.\r\n     * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\r\n     * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\r\n     * @type fabric.Shadow\r\n     * @default\r\n     */\r\n    shadow: null,\r\n\r\n    /**\r\n     * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\r\n     * @type String\r\n     * @default\r\n     */\r\n    strokeLineCap: 'round',\r\n\r\n    /**\r\n     * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\r\n     * @type String\r\n     * @default\r\n     */\r\n    strokeLineJoin: 'round',\r\n\r\n    /**\r\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\r\n     * @type Number\r\n     * @default\r\n     */\r\n    strokeMiterLimit:         10,\r\n\r\n    /**\r\n     * Stroke Dash Array.\r\n     * @type Array\r\n     * @default\r\n     */\r\n    strokeDashArray: null,\r\n\r\n    /**\r\n     * Sets shadow of an object\r\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    setShadow: function(options) {\r\n      this.shadow = new fabric.Shadow(options);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets brush styles\r\n     * @private\r\n     */\r\n    _setBrushStyles: function() {\r\n      var ctx = this.canvas.contextTop;\r\n      ctx.strokeStyle = this.color;\r\n      ctx.lineWidth = this.width;\r\n      ctx.lineCap = this.strokeLineCap;\r\n      ctx.miterLimit = this.strokeMiterLimit;\r\n      ctx.lineJoin = this.strokeLineJoin;\r\n      if (fabric.StaticCanvas.supports('setLineDash')) {\r\n        ctx.setLineDash(this.strokeDashArray || []);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets the transformation on given context\r\n     * @param {RenderingContext2d} ctx context to render on\r\n     * @private\r\n     */\r\n    _saveAndTransform: function(ctx) {\r\n      var v = this.canvas.viewportTransform;\r\n      ctx.save();\r\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n    },\r\n\r\n    /**\r\n     * Sets brush shadow styles\r\n     * @private\r\n     */\r\n    _setShadow: function() {\r\n      if (!this.shadow) {\r\n        return;\r\n      }\r\n\r\n      var canvas = this.canvas,\r\n          shadow = this.shadow,\r\n          ctx = canvas.contextTop,\r\n          zoom = canvas.getZoom();\r\n      if (canvas && canvas._isRetinaScaling()) {\r\n        zoom *= fabric.devicePixelRatio;\r\n      }\r\n\r\n      ctx.shadowColor = shadow.color;\r\n      ctx.shadowBlur = shadow.blur * zoom;\r\n      ctx.shadowOffsetX = shadow.offsetX * zoom;\r\n      ctx.shadowOffsetY = shadow.offsetY * zoom;\r\n    },\r\n\r\n    needsFullRender: function() {\r\n      var color = new fabric.Color(this.color);\r\n      return color.getAlpha() < 1 || !!this.shadow;\r\n    },\r\n\r\n    /**\r\n     * Removes brush shadow styles\r\n     * @private\r\n     */\r\n    _resetShadow: function() {\r\n      var ctx = this.canvas.contextTop;\r\n\r\n      ctx.shadowColor = '';\r\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n    }\r\n  });\r\n\r\n\r\n  (function() {\r\n    /**\r\n     * PencilBrush class\r\n     * @class fabric.PencilBrush\r\n     * @extends fabric.BaseBrush\r\n     */\r\n    fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\r\n\r\n      /**\r\n       * Discard points that are less than `decimate` pixel distant from each other\r\n       * @type Number\r\n       * @default 0.4\r\n       */\r\n      decimate: 0.4,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {fabric.Canvas} canvas\r\n       * @return {fabric.PencilBrush} Instance of a pencil brush\r\n       */\r\n      initialize: function(canvas) {\r\n        this.canvas = canvas;\r\n        this._points = [];\r\n      },\r\n\r\n      /**\r\n       * Invoked inside on mouse down and mouse move\r\n       * @param {Object} pointer\r\n       */\r\n      _drawSegment: function (ctx, p1, p2) {\r\n        var midPoint = p1.midPointFrom(p2);\r\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n        return midPoint;\r\n      },\r\n\r\n      /**\r\n       * Inovoked on mouse down\r\n       * @param {Object} pointer\r\n       */\r\n      onMouseDown: function(pointer, options) {\r\n        if (!this.canvas._isMainEvent(options.e)) {\r\n          return;\r\n        }\r\n        this._prepareForDrawing(pointer);\r\n        // capture coordinates immediately\r\n        // this allows to draw dots (when movement never occurs)\r\n        this._captureDrawingPath(pointer);\r\n        this._render();\r\n      },\r\n\r\n      /**\r\n       * Inovoked on mouse move\r\n       * @param {Object} pointer\r\n       */\r\n      onMouseMove: function(pointer, options) {\r\n        if (!this.canvas._isMainEvent(options.e)) {\r\n          return;\r\n        }\r\n        if (this._captureDrawingPath(pointer) && this._points.length > 1) {\r\n          if (this.needsFullRender()) {\r\n            // redraw curve\r\n            // clear top canvas\r\n            this.canvas.clearContext(this.canvas.contextTop);\r\n            this._render();\r\n          }\r\n          else {\r\n            var points = this._points, length = points.length, ctx = this.canvas.contextTop;\r\n            // draw the curve update\r\n            this._saveAndTransform(ctx);\r\n            if (this.oldEnd) {\r\n              ctx.beginPath();\r\n              ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\r\n            }\r\n            this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Invoked on mouse up\r\n       */\r\n      onMouseUp: function(options) {\r\n        if (!this.canvas._isMainEvent(options.e)) {\r\n          return true;\r\n        }\r\n        this.oldEnd = undefined;\r\n        this._finalizeAndAddPath();\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} pointer Actual mouse position related to the canvas.\r\n       */\r\n      _prepareForDrawing: function(pointer) {\r\n\r\n        var p = new fabric.Point(pointer.x, pointer.y);\r\n\r\n        this._reset();\r\n        this._addPoint(p);\r\n        this.canvas.contextTop.moveTo(p.x, p.y);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Point} point Point to be added to points array\r\n       */\r\n      _addPoint: function(point) {\r\n        if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\r\n          return false;\r\n        }\r\n        this._points.push(point);\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Clear points array and set contextTop canvas style.\r\n       * @private\r\n       */\r\n      _reset: function() {\r\n        this._points = [];\r\n        this._setBrushStyles();\r\n        this._setShadow();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} pointer Actual mouse position related to the canvas.\r\n       */\r\n      _captureDrawingPath: function(pointer) {\r\n        var pointerPoint = new fabric.Point(pointer.x, pointer.y);\r\n        return this._addPoint(pointerPoint);\r\n      },\r\n\r\n      /**\r\n       * Draw a smooth path on the topCanvas using quadraticCurveTo\r\n       * @private\r\n       */\r\n      _render: function() {\r\n        var ctx  = this.canvas.contextTop, i, len,\r\n            p1 = this._points[0],\r\n            p2 = this._points[1];\r\n\r\n        this._saveAndTransform(ctx);\r\n        ctx.beginPath();\r\n        //if we only have 2 points in the path and they are the same\r\n        //it means that the user only clicked the canvas without moving the mouse\r\n        //then we should be drawing a dot. A path isn't drawn between two identical dots\r\n        //that's why we set them apart a bit\r\n        if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\r\n          var width = this.width / 1000;\r\n          p1 = new fabric.Point(p1.x, p1.y);\r\n          p2 = new fabric.Point(p2.x, p2.y);\r\n          p1.x -= width;\r\n          p2.x += width;\r\n        }\r\n        ctx.moveTo(p1.x, p1.y);\r\n\r\n        for (i = 1, len = this._points.length; i < len; i++) {\r\n          // we pick the point between pi + 1 & pi + 2 as the\r\n          // end point and p1 as our control point.\r\n          this._drawSegment(ctx, p1, p2);\r\n          p1 = this._points[i];\r\n          p2 = this._points[i + 1];\r\n        }\r\n        // Draw last line as a straight line while\r\n        // we wait for the next point to be able to calculate\r\n        // the bezier control point\r\n        ctx.lineTo(p1.x, p1.y);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Converts points to SVG path\r\n       * @param {Array} points Array of points\r\n       * @return {String} SVG path\r\n       */\r\n      convertPointsToSVGPath: function(points) {\r\n        var path = [], i, width = this.width / 1000,\r\n            p1 = new fabric.Point(points[0].x, points[0].y),\r\n            p2 = new fabric.Point(points[1].x, points[1].y),\r\n            len = points.length, multSignX = 1, multSignY = 0, manyPoints = len > 2;\r\n\r\n        if (manyPoints) {\r\n          multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\r\n          multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\r\n        }\r\n        path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\r\n        for (i = 1; i < len; i++) {\r\n          if (!p1.eq(p2)) {\r\n            var midPoint = p1.midPointFrom(p2);\r\n            // p1 is our bezier control point\r\n            // midpoint is our endpoint\r\n            // start point is p(i-1) value.\r\n            path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\r\n          }\r\n          p1 = points[i];\r\n          if ((i + 1) < points.length) {\r\n            p2 = points[i + 1];\r\n          }\r\n        }\r\n        if (manyPoints) {\r\n          multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\r\n          multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\r\n        }\r\n        path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\r\n        return path;\r\n      },\r\n\r\n      /**\r\n       * Creates fabric.Path object to add on canvas\r\n       * @param {String} pathData Path data\r\n       * @return {fabric.Path} Path to add on canvas\r\n       */\r\n      createPath: function(pathData) {\r\n        var path = new fabric.Path(pathData, {\r\n          fill: null,\r\n          stroke: this.color,\r\n          strokeWidth: this.width,\r\n          strokeLineCap: this.strokeLineCap,\r\n          strokeMiterLimit: this.strokeMiterLimit,\r\n          strokeLineJoin: this.strokeLineJoin,\r\n          strokeDashArray: this.strokeDashArray,\r\n        });\r\n        if (this.shadow) {\r\n          this.shadow.affectStroke = true;\r\n          path.setShadow(this.shadow);\r\n        }\r\n\r\n        return path;\r\n      },\r\n\r\n      /**\r\n       * Decimate poins array with the decimate value\r\n       */\r\n      decimatePoints: function(points, distance) {\r\n        if (points.length <= 2) {\r\n          return points;\r\n        }\r\n        var zoom = this.canvas.getZoom(), adjustedDistance = Math.pow(distance / zoom, 2),\r\n            i, l = points.length - 1, lastPoint = points[0], newPoints = [lastPoint],\r\n            cDistance;\r\n        for (i = 1; i < l; i++) {\r\n          cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\r\n          if (cDistance >= adjustedDistance) {\r\n            lastPoint = points[i];\r\n            newPoints.push(lastPoint);\r\n          }\r\n        }\r\n        if (newPoints.length === 1) {\r\n          newPoints.push(new fabric.Point(newPoints[0].x, newPoints[0].y));\r\n        }\r\n        return newPoints;\r\n      },\r\n\r\n      /**\r\n       * On mouseup after drawing the path on contextTop canvas\r\n       * we use the points captured to create an new fabric path object\r\n       * and add it to the fabric canvas.\r\n       */\r\n      _finalizeAndAddPath: function() {\r\n        var ctx = this.canvas.contextTop;\r\n        ctx.closePath();\r\n        if (this.decimate) {\r\n          this._points = this.decimatePoints(this._points, this.decimate);\r\n        }\r\n        var pathData = this.convertPointsToSVGPath(this._points).join('');\r\n        if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\r\n          // do not create 0 width/height paths, as they are\r\n          // rendered inconsistently across browsers\r\n          // Firefox 4, for example, renders a dot,\r\n          // whereas Chrome 10 renders nothing\r\n          this.canvas.requestRenderAll();\r\n          return;\r\n        }\r\n\r\n        var path = this.createPath(pathData);\r\n        this.canvas.clearContext(this.canvas.contextTop);\r\n        this.canvas.add(path);\r\n        this.canvas.requestRenderAll();\r\n        path.setCoords();\r\n        this._resetShadow();\r\n\r\n\r\n        // fire event 'path' created\r\n        this.canvas.fire('path:created', { path: path });\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  /**\r\n   * CircleBrush class\r\n   * @class fabric.CircleBrush\r\n   */\r\n  fabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\r\n\r\n    /**\r\n     * Width of a brush\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width: 10,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {fabric.Canvas} canvas\r\n     * @return {fabric.CircleBrush} Instance of a circle brush\r\n     */\r\n    initialize: function(canvas) {\r\n      this.canvas = canvas;\r\n      this.points = [];\r\n    },\r\n\r\n    /**\r\n     * Invoked inside on mouse down and mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    drawDot: function(pointer) {\r\n      var point = this.addPoint(pointer),\r\n          ctx = this.canvas.contextTop;\r\n      this._saveAndTransform(ctx);\r\n      this.dot(ctx, point);\r\n      ctx.restore();\r\n    },\r\n\r\n    dot: function(ctx, point) {\r\n      ctx.fillStyle = point.fill;\r\n      ctx.beginPath();\r\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse down\r\n     */\r\n    onMouseDown: function(pointer) {\r\n      this.points.length = 0;\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._setShadow();\r\n      this.drawDot(pointer);\r\n    },\r\n\r\n    /**\r\n     * Render the full state of the brush\r\n     * @private\r\n     */\r\n    _render: function() {\r\n      var ctx  = this.canvas.contextTop, i, len,\r\n          points = this.points;\r\n      this._saveAndTransform(ctx);\r\n      for (i = 0, len = points.length; i < len; i++) {\r\n        this.dot(ctx, points[i]);\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseMove: function(pointer) {\r\n      if (this.needsFullRender()) {\r\n        this.canvas.clearContext(this.canvas.contextTop);\r\n        this.addPoint(pointer);\r\n        this._render();\r\n      }\r\n      else {\r\n        this.drawDot(pointer);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse up\r\n     */\r\n    onMouseUp: function() {\r\n      var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\r\n      this.canvas.renderOnAddRemove = false;\r\n\r\n      var circles = [];\r\n\r\n      for (i = 0, len = this.points.length; i < len; i++) {\r\n        var point = this.points[i],\r\n            circle = new fabric.Circle({\r\n              radius: point.radius,\r\n              left: point.x,\r\n              top: point.y,\r\n              originX: 'center',\r\n              originY: 'center',\r\n              fill: point.fill\r\n            });\r\n\r\n        this.shadow && circle.setShadow(this.shadow);\r\n\r\n        circles.push(circle);\r\n      }\r\n      var group = new fabric.Group(circles);\r\n      group.canvas = this.canvas;\r\n\r\n      this.canvas.add(group);\r\n      this.canvas.fire('path:created', { path: group });\r\n\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._resetShadow();\r\n      this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n      this.canvas.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * @param {Object} pointer\r\n     * @return {fabric.Point} Just added pointer point\r\n     */\r\n    addPoint: function(pointer) {\r\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y),\r\n\r\n          circleRadius = fabric.util.getRandomInt(\r\n            Math.max(0, this.width - 20), this.width + 20) / 2,\r\n\r\n          circleColor = new fabric.Color(this.color)\r\n            .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\r\n            .toRgba();\r\n\r\n      pointerPoint.radius = circleRadius;\r\n      pointerPoint.fill = circleColor;\r\n\r\n      this.points.push(pointerPoint);\r\n\r\n      return pointerPoint;\r\n    }\r\n  });\r\n\r\n\r\n  /**\r\n   * SprayBrush class\r\n   * @class fabric.SprayBrush\r\n   */\r\n  fabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\r\n\r\n    /**\r\n     * Width of a spray\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width:              10,\r\n\r\n    /**\r\n     * Density of a spray (number of dots per chunk)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    density:            20,\r\n\r\n    /**\r\n     * Width of spray dots\r\n     * @type Number\r\n     * @default\r\n     */\r\n    dotWidth:           1,\r\n\r\n    /**\r\n     * Width variance of spray dots\r\n     * @type Number\r\n     * @default\r\n     */\r\n    dotWidthVariance:   1,\r\n\r\n    /**\r\n     * Whether opacity of a dot should be random\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    randomOpacity:        false,\r\n\r\n    /**\r\n     * Whether overlapping dots (rectangles) should be removed (for performance reasons)\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    optimizeOverlapping:  true,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {fabric.Canvas} canvas\r\n     * @return {fabric.SprayBrush} Instance of a spray brush\r\n     */\r\n    initialize: function(canvas) {\r\n      this.canvas = canvas;\r\n      this.sprayChunks = [];\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse down\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseDown: function(pointer) {\r\n      this.sprayChunks.length = 0;\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._setShadow();\r\n\r\n      this.addSprayChunk(pointer);\r\n      this.render(this.sprayChunkPoints);\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseMove: function(pointer) {\r\n      this.addSprayChunk(pointer);\r\n      this.render(this.sprayChunkPoints);\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse up\r\n     */\r\n    onMouseUp: function() {\r\n      var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\r\n      this.canvas.renderOnAddRemove = false;\r\n\r\n      var rects = [];\r\n\r\n      for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\r\n        var sprayChunk = this.sprayChunks[i];\r\n\r\n        for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\r\n\r\n          var rect = new fabric.Rect({\r\n            width: sprayChunk[j].width,\r\n            height: sprayChunk[j].width,\r\n            left: sprayChunk[j].x + 1,\r\n            top: sprayChunk[j].y + 1,\r\n            originX: 'center',\r\n            originY: 'center',\r\n            fill: this.color\r\n          });\r\n          rects.push(rect);\r\n        }\r\n      }\r\n\r\n      if (this.optimizeOverlapping) {\r\n        rects = this._getOptimizedRects(rects);\r\n      }\r\n\r\n      var group = new fabric.Group(rects);\r\n      this.shadow && group.setShadow(this.shadow);\r\n      this.canvas.add(group);\r\n      this.canvas.fire('path:created', { path: group });\r\n\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._resetShadow();\r\n      this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n      this.canvas.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Array} rects\r\n     */\r\n    _getOptimizedRects: function(rects) {\r\n\r\n      // avoid creating duplicate rects at the same coordinates\r\n      var uniqueRects = { }, key, i, len;\r\n\r\n      for (i = 0, len = rects.length; i < len; i++) {\r\n        key = rects[i].left + '' + rects[i].top;\r\n        if (!uniqueRects[key]) {\r\n          uniqueRects[key] = rects[i];\r\n        }\r\n      }\r\n      var uniqueRectsArray = [];\r\n      for (key in uniqueRects) {\r\n        uniqueRectsArray.push(uniqueRects[key]);\r\n      }\r\n\r\n      return uniqueRectsArray;\r\n    },\r\n\r\n    /**\r\n     * Render new chunk of spray brush\r\n     */\r\n    render: function(sprayChunk) {\r\n      var ctx = this.canvas.contextTop, i, len;\r\n      ctx.fillStyle = this.color;\r\n\r\n      this._saveAndTransform(ctx);\r\n\r\n      for (i = 0, len = sprayChunk.length; i < len; i++) {\r\n        var point = sprayChunk[i];\r\n        if (typeof point.opacity !== 'undefined') {\r\n          ctx.globalAlpha = point.opacity;\r\n        }\r\n        ctx.fillRect(point.x, point.y, point.width, point.width);\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Render all spray chunks\r\n     */\r\n    _render: function() {\r\n      var ctx = this.canvas.contextTop, i, ilen;\r\n      ctx.fillStyle = this.color;\r\n\r\n      this._saveAndTransform(ctx);\r\n\r\n      for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\r\n        this.render(this.sprayChunks[i]);\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * @param {Object} pointer\r\n     */\r\n    addSprayChunk: function(pointer) {\r\n      this.sprayChunkPoints = [];\r\n\r\n      var x, y, width, radius = this.width / 2, i;\r\n\r\n      for (i = 0; i < this.density; i++) {\r\n\r\n        x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\r\n        y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\r\n\r\n        if (this.dotWidthVariance) {\r\n          width = fabric.util.getRandomInt(\r\n            // bottom clamp width to 1\r\n            Math.max(1, this.dotWidth - this.dotWidthVariance),\r\n            this.dotWidth + this.dotWidthVariance);\r\n        }\r\n        else {\r\n          width = this.dotWidth;\r\n        }\r\n\r\n        var point = new fabric.Point(x, y);\r\n        point.width = width;\r\n\r\n        if (this.randomOpacity) {\r\n          point.opacity = fabric.util.getRandomInt(0, 100) / 100;\r\n        }\r\n\r\n        this.sprayChunkPoints.push(point);\r\n      }\r\n\r\n      this.sprayChunks.push(this.sprayChunkPoints);\r\n    }\r\n  });\r\n\r\n\r\n  /**\r\n   * PatternBrush class\r\n   * @class fabric.PatternBrush\r\n   * @extends fabric.BaseBrush\r\n   */\r\n  fabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\r\n\r\n    getPatternSrc: function() {\r\n\r\n      var dotWidth = 20,\r\n          dotDistance = 5,\r\n          patternCanvas = fabric.util.createCanvasElement(),\r\n          patternCtx = patternCanvas.getContext('2d');\r\n\r\n      patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\r\n\r\n      patternCtx.fillStyle = this.color;\r\n      patternCtx.beginPath();\r\n      patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\r\n      patternCtx.closePath();\r\n      patternCtx.fill();\r\n\r\n      return patternCanvas;\r\n    },\r\n\r\n    getPatternSrcFunction: function() {\r\n      return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\r\n    },\r\n\r\n    /**\r\n     * Creates \"pattern\" instance property\r\n     */\r\n    getPattern: function() {\r\n      return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\r\n    },\r\n\r\n    /**\r\n     * Sets brush styles\r\n     */\r\n    _setBrushStyles: function() {\r\n      this.callSuper('_setBrushStyles');\r\n      this.canvas.contextTop.strokeStyle = this.getPattern();\r\n    },\r\n\r\n    /**\r\n     * Creates path\r\n     */\r\n    createPath: function(pathData) {\r\n      var path = this.callSuper('createPath', pathData),\r\n          topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\r\n\r\n      path.stroke = new fabric.Pattern({\r\n        source: this.source || this.getPatternSrcFunction(),\r\n        offsetX: -topLeft.x,\r\n        offsetY: -topLeft.y\r\n      });\r\n      return path;\r\n    }\r\n  });\r\n\r\n\r\n  (function() {\r\n\r\n    var getPointer = fabric.util.getPointer,\r\n        degreesToRadians = fabric.util.degreesToRadians,\r\n        radiansToDegrees = fabric.util.radiansToDegrees,\r\n        atan2 = Math.atan2,\r\n        abs = Math.abs,\r\n        supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\r\n\r\n        STROKE_OFFSET = 0.5;\r\n\r\n    /**\r\n     * Canvas class\r\n     * @class fabric.Canvas\r\n     * @extends fabric.StaticCanvas\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\r\n     * @see {@link fabric.Canvas#initialize} for constructor definition\r\n     *\r\n     * @fires object:modified at the end of a transform or any change when statefull is true\r\n     * @fires object:rotated at the end of a rotation transform\r\n     * @fires object:scaled at the end of a scale transform\r\n     * @fires object:moved at the end of translation transform\r\n     * @fires object:skewed at the end of a skew transform\r\n     * @fires object:rotating while an object is being rotated from the control\r\n     * @fires object:scaling while an object is being scaled by controls\r\n     * @fires object:moving while an object is being dragged\r\n     * @fires object:skewing while an object is being skewed from the controls\r\n     * @fires object:selected this event is deprecated. use selection:created\r\n     *\r\n     * @fires before:transform before a transform is is started\r\n     * @fires before:selection:cleared\r\n     * @fires selection:cleared\r\n     * @fires selection:updated\r\n     * @fires selection:created\r\n     *\r\n     * @fires path:created after a drawing operation ends and the path is added\r\n     * @fires mouse:down\r\n     * @fires mouse:move\r\n     * @fires mouse:up\r\n     * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\r\n     * @fires mouse:move:before on mouse move, before the inner fabric logic runs\r\n     * @fires mouse:up:before on mouse up, before the inner fabric logic runs\r\n     * @fires mouse:over\r\n     * @fires mouse:out\r\n     * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\r\n     *\r\n     * @fires dragover\r\n     * @fires dragenter\r\n     * @fires dragleave\r\n     * @fires drop\r\n     * @fires after:render at the end of the render process, receives the context in the callback\r\n     * @fires before:render at start the render process, receives the context in the callback\r\n     *\r\n     */\r\n    fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(el, options) {\r\n        options || (options = { });\r\n        this.renderAndResetBound = this.renderAndReset.bind(this);\r\n        this.requestRenderAllBound = this.requestRenderAll.bind(this);\r\n        this._initStatic(el, options);\r\n        this._initInteractive();\r\n        this._createCacheCanvas();\r\n      },\r\n\r\n      /**\r\n       * When true, objects can be transformed by one side (unproportionally)\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      uniScaleTransform:      false,\r\n\r\n      /**\r\n       * Indicates which key enable unproportional scaling\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled feature disabled.\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      uniScaleKey:           'shiftKey',\r\n\r\n      /**\r\n       * When true, objects use center point as the origin of scale transformation.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredScaling:        false,\r\n\r\n      /**\r\n       * When true, objects use center point as the origin of rotate transformation.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredRotation:       false,\r\n\r\n      /**\r\n       * Indicates which key enable centered Transform\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled feature disabled.\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      centeredKey:           'altKey',\r\n\r\n      /**\r\n       * Indicates which key enable alternate action on corner\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled feature disabled.\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      altActionKey:           'shiftKey',\r\n\r\n      /**\r\n       * Indicates that canvas is interactive. This property should not be changed.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      interactive:            true,\r\n\r\n      /**\r\n       * Indicates whether group selection should be enabled\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      selection:              true,\r\n\r\n      /**\r\n       * Indicates which key or keys enable multiple click selection\r\n       * Pass value as a string or array of strings\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or empty or containing any other string that is not a modifier key\r\n       * feature is disabled.\r\n       * @since 1.6.2\r\n       * @type String|Array\r\n       * @default\r\n       */\r\n      selectionKey:           'shiftKey',\r\n\r\n      /**\r\n       * Indicates which key enable alternative selection\r\n       * in case of target overlapping with active object\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * For a series of reason that come from the general expectations on how\r\n       * things should work, this feature works only for preserveObjectStacking true.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled.\r\n       * @since 1.6.5\r\n       * @type null|String\r\n       * @default\r\n       */\r\n      altSelectionKey:           null,\r\n\r\n      /**\r\n       * Color of selection\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\r\n\r\n      /**\r\n       * Default dash array pattern\r\n       * If not empty the selection border is dashed\r\n       * @type Array\r\n       */\r\n      selectionDashArray:     [],\r\n\r\n      /**\r\n       * Color of the border of selection (usually slightly darker than color of selection itself)\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\r\n\r\n      /**\r\n       * Width of a line used in object/group selection\r\n       * @type Number\r\n       * @default\r\n       */\r\n      selectionLineWidth:     1,\r\n\r\n      /**\r\n       * Select only shapes that are fully contained in the dragged selection rectangle.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      selectionFullyContained: false,\r\n\r\n      /**\r\n       * Default cursor value used when hovering over an object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      hoverCursor:            'move',\r\n\r\n      /**\r\n       * Default cursor value used when moving an object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      moveCursor:             'move',\r\n\r\n      /**\r\n       * Default cursor value used for the entire canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      defaultCursor:          'default',\r\n\r\n      /**\r\n       * Cursor value used during free drawing\r\n       * @type String\r\n       * @default\r\n       */\r\n      freeDrawingCursor:      'crosshair',\r\n\r\n      /**\r\n       * Cursor value used for rotation point\r\n       * @type String\r\n       * @default\r\n       */\r\n      rotationCursor:         'crosshair',\r\n\r\n      /**\r\n       * Cursor value used for disabled elements ( corners with disabled action )\r\n       * @type String\r\n       * @since 2.0.0\r\n       * @default\r\n       */\r\n      notAllowedCursor:         'not-allowed',\r\n\r\n      /**\r\n       * Default element class that's given to wrapper (div) element of canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      containerClass:         'canvas-container',\r\n\r\n      /**\r\n       * When true, object detection happens on per-pixel basis rather than on per-bounding-box\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      perPixelTargetFind:     false,\r\n\r\n      /**\r\n       * Number of pixels around target pixel to tolerate (consider active) during object detection\r\n       * @type Number\r\n       * @default\r\n       */\r\n      targetFindTolerance:    0,\r\n\r\n      /**\r\n       * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      skipTargetFind:         false,\r\n\r\n      /**\r\n       * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\r\n       * After mousedown, mousemove creates a shape,\r\n       * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\r\n       * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      isDrawingMode:          false,\r\n\r\n      /**\r\n       * Indicates whether objects should remain in current stack position when selected.\r\n       * When false objects are brought to top and rendered as part of the selection group\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      preserveObjectStacking: false,\r\n\r\n      /**\r\n       * Indicates the angle that an object will lock to while rotating.\r\n       * @type Number\r\n       * @since 1.6.7\r\n       * @default\r\n       */\r\n      snapAngle: 0,\r\n\r\n      /**\r\n       * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\r\n       * When `null`, the snapThreshold will default to the snapAngle.\r\n       * @type null|Number\r\n       * @since 1.6.7\r\n       * @default\r\n       */\r\n      snapThreshold: null,\r\n\r\n      /**\r\n       * Indicates if the right click on canvas can output the context menu or not\r\n       * @type Boolean\r\n       * @since 1.6.5\r\n       * @default\r\n       */\r\n      stopContextMenu: false,\r\n\r\n      /**\r\n       * Indicates if the canvas can fire right click events\r\n       * @type Boolean\r\n       * @since 1.6.5\r\n       * @default\r\n       */\r\n      fireRightClick: false,\r\n\r\n      /**\r\n       * Indicates if the canvas can fire middle click events\r\n       * @type Boolean\r\n       * @since 1.7.8\r\n       * @default\r\n       */\r\n      fireMiddleClick: false,\r\n\r\n      /**\r\n       * Keep track of the subTargets for Mouse Events\r\n       * @type fabric.Object[]\r\n       */\r\n      targets: [],\r\n\r\n      /**\r\n       * Keep track of the hovered target\r\n       * @type fabric.Object\r\n       * @private\r\n       */\r\n      _hoveredTarget: null,\r\n\r\n      /**\r\n       * hold the list of nested targets hovered\r\n       * @type fabric.Object[]\r\n       * @private\r\n       */\r\n      _hoveredTargets: [],\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _initInteractive: function() {\r\n        this._currentTransform = null;\r\n        this._groupSelector = null;\r\n        this._initWrapperElement();\r\n        this._createUpperCanvas();\r\n        this._initEventListeners();\r\n\r\n        this._initRetinaScaling();\r\n\r\n        this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\r\n\r\n        this.calcOffset();\r\n      },\r\n\r\n      /**\r\n       * Divides objects in two groups, one to render immediately\r\n       * and one to render as activeGroup.\r\n       * @return {Array} objects to render immediately and pushes the other in the activeGroup.\r\n       */\r\n      _chooseObjectsToRender: function() {\r\n        var activeObjects = this.getActiveObjects(),\r\n            object, objsToRender, activeGroupObjects;\r\n\r\n        if (activeObjects.length > 0 && !this.preserveObjectStacking) {\r\n          objsToRender = [];\r\n          activeGroupObjects = [];\r\n          for (var i = 0, length = this._objects.length; i < length; i++) {\r\n            object = this._objects[i];\r\n            if (activeObjects.indexOf(object) === -1 ) {\r\n              objsToRender.push(object);\r\n            }\r\n            else {\r\n              activeGroupObjects.push(object);\r\n            }\r\n          }\r\n          if (activeObjects.length > 1) {\r\n            this._activeObject._objects = activeGroupObjects;\r\n          }\r\n          objsToRender.push.apply(objsToRender, activeGroupObjects);\r\n        }\r\n        else {\r\n          objsToRender = this._objects;\r\n        }\r\n        return objsToRender;\r\n      },\r\n\r\n      /**\r\n       * Renders both the top canvas and the secondary container canvas.\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderAll: function () {\r\n        if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\r\n          this.clearContext(this.contextTop);\r\n          this.contextTopDirty = false;\r\n        }\r\n        if (this.hasLostContext) {\r\n          this.renderTopLayer(this.contextTop);\r\n        }\r\n        var canvasToDrawOn = this.contextContainer;\r\n        this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\r\n        return this;\r\n      },\r\n\r\n      renderTopLayer: function(ctx) {\r\n        ctx.save();\r\n        if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n          this.freeDrawingBrush && this.freeDrawingBrush._render();\r\n          this.contextTopDirty = true;\r\n        }\r\n        // we render the top context - last object\r\n        if (this.selection && this._groupSelector) {\r\n          this._drawSelection(ctx);\r\n          this.contextTopDirty = true;\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Method to render only the top canvas.\r\n       * Also used to render the group selection box.\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      renderTop: function () {\r\n        var ctx = this.contextTop;\r\n        this.clearContext(ctx);\r\n        this.renderTopLayer(ctx);\r\n        this.fire('after:render');\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Resets the current transform to its original values and chooses the type of resizing based on the event\r\n       * @private\r\n       */\r\n      _resetCurrentTransform: function() {\r\n        var t = this._currentTransform;\r\n\r\n        t.target.set({\r\n          scaleX: t.original.scaleX,\r\n          scaleY: t.original.scaleY,\r\n          skewX: t.original.skewX,\r\n          skewY: t.original.skewY,\r\n          left: t.original.left,\r\n          top: t.original.top\r\n        });\r\n\r\n        if (this._shouldCenterTransform(t.target)) {\r\n          if (t.originX !== 'center') {\r\n            if (t.originX === 'right') {\r\n              t.mouseXSign = -1;\r\n            }\r\n            else {\r\n              t.mouseXSign = 1;\r\n            }\r\n          }\r\n          if (t.originY !== 'center') {\r\n            if (t.originY === 'bottom') {\r\n              t.mouseYSign = -1;\r\n            }\r\n            else {\r\n              t.mouseYSign = 1;\r\n            }\r\n          }\r\n\r\n          t.originX = 'center';\r\n          t.originY = 'center';\r\n        }\r\n        else {\r\n          t.originX = t.original.originX;\r\n          t.originY = t.original.originY;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Checks if point is contained within an area of given object\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target Object to test against\r\n       * @param {Object} [point] x,y object of point coordinates we want to check.\r\n       * @return {Boolean} true if point is contained within an area of given object\r\n       */\r\n      containsPoint: function (e, target, point) {\r\n        var ignoreZoom = true,\r\n            pointer = point || this.getPointer(e, ignoreZoom),\r\n            xy;\r\n\r\n        if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\r\n          xy = this._normalizePointer(target.group, pointer);\r\n        }\r\n        else {\r\n          xy = { x: pointer.x, y: pointer.y };\r\n        }\r\n        // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\r\n        // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\r\n        return (target.containsPoint(xy) || target._findTargetCorner(pointer));\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _normalizePointer: function (object, pointer) {\r\n        var m = object.calcTransformMatrix(),\r\n            invertedM = fabric.util.invertTransform(m),\r\n            vptPointer = this.restorePointerVpt(pointer);\r\n        return fabric.util.transformPoint(vptPointer, invertedM);\r\n      },\r\n\r\n      /**\r\n       * Returns true if object is transparent at a certain location\r\n       * @param {fabric.Object} target Object to check\r\n       * @param {Number} x Left coordinate\r\n       * @param {Number} y Top coordinate\r\n       * @return {Boolean}\r\n       */\r\n      isTargetTransparent: function (target, x, y) {\r\n        // in case the target is the activeObject, we cannot execute this optimization\r\n        // because we need to draw controls too.\r\n        if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\r\n          var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\r\n              targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\r\n              targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\r\n\r\n          var isTransparent = fabric.util.isTransparent(\r\n            target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\r\n\r\n          return isTransparent;\r\n        }\r\n\r\n        var ctx = this.contextCache,\r\n            originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\r\n\r\n        target.selectionBackgroundColor = '';\r\n\r\n        this.clearContext(ctx);\r\n\r\n        ctx.save();\r\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        target.render(ctx);\r\n        ctx.restore();\r\n\r\n        target === this._activeObject && target._renderControls(ctx, {\r\n          hasBorders: false,\r\n          transparentCorners: false\r\n        }, {\r\n          hasBorders: false,\r\n        });\r\n\r\n        target.selectionBackgroundColor = originalColor;\r\n\r\n        var isTransparent = fabric.util.isTransparent(\r\n          ctx, x, y, this.targetFindTolerance);\r\n\r\n        return isTransparent;\r\n      },\r\n\r\n      /**\r\n       * takes an event and determins if selection key has been pressed\r\n       * @private\r\n       * @param {Event} e Event object\r\n       */\r\n      _isSelectionKeyPressed: function(e) {\r\n        var selectionKeyPressed = false;\r\n\r\n        if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\r\n          selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\r\n        }\r\n        else {\r\n          selectionKeyPressed = e[this.selectionKey];\r\n        }\r\n\r\n        return selectionKeyPressed;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       */\r\n      _shouldClearSelection: function (e, target) {\r\n        var activeObjects = this.getActiveObjects(),\r\n            activeObject = this._activeObject;\r\n\r\n        return (\r\n          !target\r\n          ||\r\n          (target &&\r\n            activeObject &&\r\n            activeObjects.length > 1 &&\r\n            activeObjects.indexOf(target) === -1 &&\r\n            activeObject !== target &&\r\n            !this._isSelectionKeyPressed(e))\r\n          ||\r\n          (target && !target.evented)\r\n          ||\r\n          (target &&\r\n            !target.selectable &&\r\n            activeObject &&\r\n            activeObject !== target)\r\n        );\r\n      },\r\n\r\n      /**\r\n       * centeredScaling from object can't override centeredScaling from canvas.\r\n       * this should be fixed, since object setting should take precedence over canvas.\r\n       * @private\r\n       * @param {fabric.Object} target\r\n       */\r\n      _shouldCenterTransform: function (target) {\r\n        if (!target) {\r\n          return;\r\n        }\r\n\r\n        var t = this._currentTransform,\r\n            centerTransform;\r\n\r\n        if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\r\n          centerTransform = this.centeredScaling || target.centeredScaling;\r\n        }\r\n        else if (t.action === 'rotate') {\r\n          centerTransform = this.centeredRotation || target.centeredRotation;\r\n        }\r\n\r\n        return centerTransform ? !t.altKey : t.altKey;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getOriginFromCorner: function(target, corner) {\r\n        var origin = {\r\n          x: target.originX,\r\n          y: target.originY\r\n        };\r\n\r\n        if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\r\n          origin.x = 'right';\r\n        }\r\n        else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\r\n          origin.x = 'left';\r\n        }\r\n\r\n        if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\r\n          origin.y = 'bottom';\r\n        }\r\n        else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\r\n          origin.y = 'top';\r\n        }\r\n\r\n        return origin;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Boolean} alreadySelected true if target is already selected\r\n       * @param {String} corner a string representing the corner ml, mr, tl ...\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} [target] inserted back to help overriding. Unused\r\n       */\r\n      _getActionFromCorner: function(alreadySelected, corner, e /* target */) {\r\n        if (!corner || !alreadySelected) {\r\n          return 'drag';\r\n        }\r\n\r\n        switch (corner) {\r\n          case 'mtr':\r\n            return 'rotate';\r\n          case 'ml':\r\n          case 'mr':\r\n            return e[this.altActionKey] ? 'skewY' : 'scaleX';\r\n          case 'mt':\r\n          case 'mb':\r\n            return e[this.altActionKey] ? 'skewX' : 'scaleY';\r\n          default:\r\n            return 'scale';\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       */\r\n      _setupCurrentTransform: function (e, target, alreadySelected) {\r\n        if (!target) {\r\n          return;\r\n        }\r\n\r\n        var pointer = this.getPointer(e),\r\n            corner = target._findTargetCorner(this.getPointer(e, true)),\r\n            action = this._getActionFromCorner(alreadySelected, corner, e, target),\r\n            origin = this._getOriginFromCorner(target, corner);\r\n\r\n        this._currentTransform = {\r\n          target: target,\r\n          action: action,\r\n          corner: corner,\r\n          scaleX: target.scaleX,\r\n          scaleY: target.scaleY,\r\n          skewX: target.skewX,\r\n          skewY: target.skewY,\r\n          // used by transation\r\n          offsetX: pointer.x - target.left,\r\n          offsetY: pointer.y - target.top,\r\n          originX: origin.x,\r\n          originY: origin.y,\r\n          ex: pointer.x,\r\n          ey: pointer.y,\r\n          lastX: pointer.x,\r\n          lastY: pointer.y,\r\n          // unsure they are usefull anymore.\r\n          // left: target.left,\r\n          // top: target.top,\r\n          theta: degreesToRadians(target.angle),\r\n          // end of unsure\r\n          width: target.width * target.scaleX,\r\n          mouseXSign: 1,\r\n          mouseYSign: 1,\r\n          shiftKey: e.shiftKey,\r\n          altKey: e[this.centeredKey],\r\n          original: fabric.util.saveObjectTransform(target),\r\n        };\r\n\r\n        this._currentTransform.original.originX = origin.x;\r\n        this._currentTransform.original.originY = origin.y;\r\n\r\n        this._resetCurrentTransform();\r\n        this._beforeTransform(e);\r\n      },\r\n\r\n      /**\r\n       * Translates object by \"setting\" its left/top\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @return {Boolean} true if the translation occurred\r\n       */\r\n      _translateObject: function (x, y) {\r\n        var transform = this._currentTransform,\r\n            target = transform.target,\r\n            newLeft = x - transform.offsetX,\r\n            newTop = y - transform.offsetY,\r\n            moveX = !target.get('lockMovementX') && target.left !== newLeft,\r\n            moveY = !target.get('lockMovementY') && target.top !== newTop;\r\n\r\n        moveX && target.set('left', newLeft);\r\n        moveY && target.set('top', newTop);\r\n        return moveX || moveY;\r\n      },\r\n\r\n      /**\r\n       * Check if we are increasing a positive skew or lower it,\r\n       * checking mouse direction and pressed corner.\r\n       * @private\r\n       */\r\n      _changeSkewTransformOrigin: function(mouseMove, t, by) {\r\n        var property = 'originX', origins = { 0: 'center' },\r\n            skew = t.target.skewX, originA = 'left', originB = 'right',\r\n            corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\r\n            flipSign = 1;\r\n\r\n        mouseMove = mouseMove > 0 ? 1 : -1;\r\n        if (by === 'y') {\r\n          skew = t.target.skewY;\r\n          originA = 'top';\r\n          originB = 'bottom';\r\n          property = 'originY';\r\n        }\r\n        origins[-1] = originA;\r\n        origins[1] = originB;\r\n\r\n        t.target.flipX && (flipSign *= -1);\r\n        t.target.flipY && (flipSign *= -1);\r\n\r\n        if (skew === 0) {\r\n          t.skewSign = -corner * mouseMove * flipSign;\r\n          t[property] = origins[-mouseMove];\r\n        }\r\n        else {\r\n          skew = skew > 0 ? 1 : -1;\r\n          t.skewSign = skew;\r\n          t[property] = origins[skew * corner * flipSign];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Skew object by mouse events\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @param {String} by Either 'x' or 'y'\r\n       * @return {Boolean} true if the skewing occurred\r\n       */\r\n      _skewObject: function (x, y, by) {\r\n        var t = this._currentTransform,\r\n            target = t.target, skewed = false,\r\n            lockSkewingX = target.get('lockSkewingX'),\r\n            lockSkewingY = target.get('lockSkewingY');\r\n\r\n        if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\r\n          return false;\r\n        }\r\n\r\n        // Get the constraint point\r\n        var center = target.getCenterPoint(),\r\n            actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\r\n            lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\r\n            actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\r\n\r\n        this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\r\n        actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\r\n        constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\r\n        // Actually skew the object\r\n        skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\r\n        t.lastX = x;\r\n        t.lastY = y;\r\n        // Make sure the constraints apply\r\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\r\n        return skewed;\r\n      },\r\n\r\n      /**\r\n       * Set object skew\r\n       * @private\r\n       * @return {Boolean} true if the skewing occurred\r\n       */\r\n      _setObjectSkew: function(localMouse, transform, by, _dim) {\r\n        var target = transform.target, newValue, skewed = false,\r\n            skewSign = transform.skewSign, newDim, dimNoSkew,\r\n            otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\r\n\r\n        if (by === 'x') {\r\n          otherBy = 'y';\r\n          _otherBy = 'Y';\r\n          _by = 'X';\r\n          skewX = 0;\r\n          skewY = target.skewY;\r\n        }\r\n        else {\r\n          otherBy = 'x';\r\n          _otherBy = 'X';\r\n          _by = 'Y';\r\n          skewX = target.skewX;\r\n          skewY = 0;\r\n        }\r\n\r\n        dimNoSkew = target._getTransformedDimensions(skewX, skewY);\r\n        newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\r\n        if (newDimMouse <= 2) {\r\n          newValue = 0;\r\n        }\r\n        else {\r\n          newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\r\n                                          (dimNoSkew[otherBy] / target['scale' + _otherBy]));\r\n          newValue = fabric.util.radiansToDegrees(newValue);\r\n        }\r\n        skewed = target['skew' + _by] !== newValue;\r\n        target.set('skew' + _by, newValue);\r\n        if (target['skew' + _otherBy] !== 0) {\r\n          newDim = target._getTransformedDimensions();\r\n          newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\r\n          target.set('scale' + _otherBy, newValue);\r\n        }\r\n        return skewed;\r\n      },\r\n\r\n      /**\r\n       * Scales object by invoking its scaleX/scaleY methods\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\r\n       *                    When not provided, an object is scaled by both dimensions equally\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _scaleObject: function (x, y, by) {\r\n        var t = this._currentTransform,\r\n            target = t.target,\r\n            lockScalingX = target.lockScalingX,\r\n            lockScalingY = target.lockScalingY,\r\n            lockScalingFlip = target.lockScalingFlip;\r\n\r\n        if (lockScalingX && lockScalingY) {\r\n          return false;\r\n        }\r\n\r\n        // Get the constraint point\r\n        var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\r\n            localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\r\n            dim = target._getTransformedDimensions(), scaled = false;\r\n\r\n        this._setLocalMouse(localMouse, t);\r\n\r\n        // Actually scale the object\r\n        scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\r\n\r\n        // Make sure the constraints apply\r\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\r\n        return scaled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\r\n        var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\r\n            scaleX = localMouse.x * target.scaleX / _dim.x,\r\n            scaleY = localMouse.y * target.scaleY / _dim.y,\r\n            changeX = target.scaleX !== scaleX,\r\n            changeY = target.scaleY !== scaleY;\r\n\r\n        transform.newScaleX = scaleX;\r\n        transform.newScaleY = scaleY;\r\n        if (fabric.Textbox && by === 'x' && target instanceof fabric.Textbox) {\r\n          var w = target.width * (localMouse.x / _dim.x);\r\n          if (w >= target.getMinWidth()) {\r\n            scaled = w !== target.width;\r\n            target.set('width', w);\r\n            return scaled;\r\n          }\r\n          return false;\r\n        }\r\n\r\n        if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\r\n          forbidScalingX = true;\r\n          localMouse.x = 0;\r\n        }\r\n\r\n        if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\r\n          forbidScalingY = true;\r\n          localMouse.y = 0;\r\n        }\r\n\r\n        if (by === 'equally' && !lockScalingX && !lockScalingY) {\r\n          scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\r\n        }\r\n        else if (!by) {\r\n          forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\r\n          forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\r\n        }\r\n        else if (by === 'x' && !target.get('lockUniScaling')) {\r\n          forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));\r\n        }\r\n        else if (by === 'y' && !target.get('lockUniScaling')) {\r\n          forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));\r\n        }\r\n        forbidScalingX || forbidScalingY || this._flipObject(transform, by);\r\n        return scaled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _scaleObjectEqually: function(localMouse, target, transform, _dim) {\r\n\r\n        var dist = localMouse.y + localMouse.x,\r\n            lastDist = _dim.y * transform.original.scaleY / target.scaleY +\r\n                       _dim.x * transform.original.scaleX / target.scaleX,\r\n            scaled, signX = localMouse.x < 0 ? -1 : 1,\r\n            signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;\r\n\r\n        // We use transform.scaleX/Y instead of target.scaleX/Y\r\n        // because the object may have a min scale and we'll loose the proportions\r\n        newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\r\n        newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\r\n        scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\r\n        target.set('scaleX', newScaleX);\r\n        target.set('scaleY', newScaleY);\r\n        return scaled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _flipObject: function(transform, by) {\r\n        if (transform.newScaleX < 0 && by !== 'y') {\r\n          if (transform.originX === 'left') {\r\n            transform.originX = 'right';\r\n          }\r\n          else if (transform.originX === 'right') {\r\n            transform.originX = 'left';\r\n          }\r\n        }\r\n\r\n        if (transform.newScaleY < 0 && by !== 'x') {\r\n          if (transform.originY === 'top') {\r\n            transform.originY = 'bottom';\r\n          }\r\n          else if (transform.originY === 'bottom') {\r\n            transform.originY = 'top';\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setLocalMouse: function(localMouse, t) {\r\n        var target = t.target, zoom = this.getZoom(),\r\n            padding = target.padding / zoom;\r\n\r\n        if (t.originX === 'right') {\r\n          localMouse.x *= -1;\r\n        }\r\n        else if (t.originX === 'center') {\r\n          localMouse.x *= t.mouseXSign * 2;\r\n          if (localMouse.x < 0) {\r\n            t.mouseXSign = -t.mouseXSign;\r\n          }\r\n        }\r\n\r\n        if (t.originY === 'bottom') {\r\n          localMouse.y *= -1;\r\n        }\r\n        else if (t.originY === 'center') {\r\n          localMouse.y *= t.mouseYSign * 2;\r\n          if (localMouse.y < 0) {\r\n            t.mouseYSign = -t.mouseYSign;\r\n          }\r\n        }\r\n\r\n        // adjust the mouse coordinates when dealing with padding\r\n        if (abs(localMouse.x) > padding) {\r\n          if (localMouse.x < 0) {\r\n            localMouse.x += padding;\r\n          }\r\n          else {\r\n            localMouse.x -= padding;\r\n          }\r\n        }\r\n        else { // mouse is within the padding, set to 0\r\n          localMouse.x = 0;\r\n        }\r\n\r\n        if (abs(localMouse.y) > padding) {\r\n          if (localMouse.y < 0) {\r\n            localMouse.y += padding;\r\n          }\r\n          else {\r\n            localMouse.y -= padding;\r\n          }\r\n        }\r\n        else {\r\n          localMouse.y = 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Rotates object by invoking its rotate method\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @return {Boolean} true if the rotation occurred\r\n       */\r\n      _rotateObject: function (x, y) {\r\n\r\n        var t = this._currentTransform,\r\n            target = t.target, constraintPosition,\r\n            constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\r\n\r\n        if (target.lockRotation) {\r\n          return false;\r\n        }\r\n\r\n        var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\r\n            curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\r\n            angle = radiansToDegrees(curAngle - lastAngle + t.theta),\r\n            hasRotated = true;\r\n\r\n        if (target.snapAngle > 0) {\r\n          var snapAngle  = target.snapAngle,\r\n              snapThreshold  = target.snapThreshold || snapAngle,\r\n              rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\r\n              leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\r\n\r\n          if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\r\n            angle = leftAngleLocked;\r\n          }\r\n          else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\r\n            angle = rightAngleLocked;\r\n          }\r\n        }\r\n\r\n        // normalize angle to positive value\r\n        if (angle < 0) {\r\n          angle = 360 + angle;\r\n        }\r\n        angle %= 360;\r\n\r\n        if (target.angle === angle) {\r\n          hasRotated = false;\r\n        }\r\n        else {\r\n          // rotation only happen here\r\n          target.angle = angle;\r\n          // Make sure the constraints apply\r\n          target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\r\n        }\r\n\r\n        return hasRotated;\r\n      },\r\n\r\n      /**\r\n       * Set the cursor type of the canvas element\r\n       * @param {String} value Cursor type of the canvas element.\r\n       * @see http://www.w3.org/TR/css3-ui/#cursor\r\n       */\r\n      setCursor: function (value) {\r\n        this.upperCanvasEl.style.cursor = value;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx to draw the selection on\r\n       */\r\n      _drawSelection: function (ctx) {\r\n        var groupSelector = this._groupSelector,\r\n            left = groupSelector.left,\r\n            top = groupSelector.top,\r\n            aleft = abs(left),\r\n            atop = abs(top);\r\n\r\n        if (this.selectionColor) {\r\n          ctx.fillStyle = this.selectionColor;\r\n\r\n          ctx.fillRect(\r\n            groupSelector.ex - ((left > 0) ? 0 : -left),\r\n            groupSelector.ey - ((top > 0) ? 0 : -top),\r\n            aleft,\r\n            atop\r\n          );\r\n        }\r\n\r\n        if (!this.selectionLineWidth || !this.selectionBorderColor) {\r\n          return;\r\n        }\r\n        ctx.lineWidth = this.selectionLineWidth;\r\n        ctx.strokeStyle = this.selectionBorderColor;\r\n\r\n        // selection border\r\n        if (this.selectionDashArray.length > 1 && !supportLineDash) {\r\n\r\n          var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\r\n              py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\r\n\r\n          ctx.beginPath();\r\n\r\n          fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\r\n          fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\r\n          fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\r\n          fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\r\n\r\n          ctx.closePath();\r\n          ctx.stroke();\r\n        }\r\n        else {\r\n          fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\r\n          ctx.strokeRect(\r\n            groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\r\n            groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\r\n            aleft,\r\n            atop\r\n          );\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method that determines what object we are clicking on\r\n       * the skipGroup parameter is for internal use, is needed for shift+click action\r\n       * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\r\n       * or the outside part of the corner.\r\n       * @param {Event} e mouse event\r\n       * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\r\n       * @return {fabric.Object} the target found\r\n       */\r\n      findTarget: function (e, skipGroup) {\r\n        if (this.skipTargetFind) {\r\n          return;\r\n        }\r\n\r\n        var ignoreZoom = true,\r\n            pointer = this.getPointer(e, ignoreZoom),\r\n            activeObject = this._activeObject,\r\n            aObjects = this.getActiveObjects(),\r\n            activeTarget, activeTargetSubs;\r\n\r\n        // first check current group (if one exists)\r\n        // active group does not check sub targets like normal groups.\r\n        // if active group just exits.\r\n        this.targets = [];\r\n\r\n        if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\r\n          return activeObject;\r\n        }\r\n        // if we hit the corner of an activeObject, let's return that.\r\n        if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\r\n          return activeObject;\r\n        }\r\n        if (aObjects.length === 1 &&\r\n          activeObject === this._searchPossibleTargets([activeObject], pointer)) {\r\n          if (!this.preserveObjectStacking) {\r\n            return activeObject;\r\n          }\r\n          else {\r\n            activeTarget = activeObject;\r\n            activeTargetSubs = this.targets;\r\n            this.targets = [];\r\n          }\r\n        }\r\n        var target = this._searchPossibleTargets(this._objects, pointer);\r\n        if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\r\n          target = activeTarget;\r\n          this.targets = activeTargetSubs;\r\n        }\r\n        return target;\r\n      },\r\n\r\n      /**\r\n       * Checks point is inside the object.\r\n       * @param {Object} [pointer] x,y object of point coordinates we want to check.\r\n       * @param {fabric.Object} obj Object to test against\r\n       * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\r\n       * @return {Boolean} true if point is contained within an area of given object\r\n       * @private\r\n       */\r\n      _checkTarget: function(pointer, obj, globalPointer) {\r\n        if (obj &&\r\n            obj.visible &&\r\n            obj.evented &&\r\n            this.containsPoint(null, obj, pointer)){\r\n          if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\r\n            var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\r\n            if (!isTransparent) {\r\n              return true;\r\n            }\r\n          }\r\n          else {\r\n            return true;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\r\n       * @param {Array} [objects] objects array to look into\r\n       * @param {Object} [pointer] x,y object of point coordinates we want to check.\r\n       * @return {fabric.Object} object that contains pointer\r\n       * @private\r\n       */\r\n      _searchPossibleTargets: function(objects, pointer) {\r\n        // Cache all targets where their bounding box contains point.\r\n        var target, i = objects.length, subTarget;\r\n        // Do not check for currently grouped objects, since we check the parent group itself.\r\n        // until we call this function specifically to search inside the activeGroup\r\n        while (i--) {\r\n          var objToCheck = objects[i];\r\n          var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\r\n            this._normalizePointer(objToCheck.group, pointer) : pointer;\r\n          if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\r\n            target = objects[i];\r\n            if (target.subTargetCheck && target instanceof fabric.Group) {\r\n              subTarget = this._searchPossibleTargets(target._objects, pointer);\r\n              subTarget && this.targets.push(subTarget);\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        return target;\r\n      },\r\n\r\n      /**\r\n       * Returns pointer coordinates without the effect of the viewport\r\n       * @param {Object} pointer with \"x\" and \"y\" number values\r\n       * @return {Object} object with \"x\" and \"y\" number values\r\n       */\r\n      restorePointerVpt: function(pointer) {\r\n        return fabric.util.transformPoint(\r\n          pointer,\r\n          fabric.util.invertTransform(this.viewportTransform)\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Returns pointer coordinates relative to canvas.\r\n       * Can return coordinates with or without viewportTransform.\r\n       * ignoreZoom false gives back coordinates that represent\r\n       * the point clicked on canvas element.\r\n       * ignoreZoom true gives back coordinates after being processed\r\n       * by the viewportTransform ( sort of coordinates of what is displayed\r\n       * on the canvas where you are clicking.\r\n       * ignoreZoom true = HTMLElement coordinates relative to top,left\r\n       * ignoreZoom false, default = fabric space coordinates, the same used for shape position\r\n       * To interact with your shapes top and left you want to use ignoreZoom true\r\n       * most of the time, while ignoreZoom false will give you coordinates\r\n       * compatible with the object.oCoords system.\r\n       * of the time.\r\n       * @param {Event} e\r\n       * @param {Boolean} ignoreZoom\r\n       * @return {Object} object with \"x\" and \"y\" number values\r\n       */\r\n      getPointer: function (e, ignoreZoom) {\r\n        // return cached values if we are in the event processing chain\r\n        if (this._absolutePointer && !ignoreZoom) {\r\n          return this._absolutePointer;\r\n        }\r\n        if (this._pointer && ignoreZoom) {\r\n          return this._pointer;\r\n        }\r\n\r\n        var pointer = getPointer(e),\r\n            upperCanvasEl = this.upperCanvasEl,\r\n            bounds = upperCanvasEl.getBoundingClientRect(),\r\n            boundsWidth = bounds.width || 0,\r\n            boundsHeight = bounds.height || 0,\r\n            cssScale;\r\n\r\n        if (!boundsWidth || !boundsHeight ) {\r\n          if ('top' in bounds && 'bottom' in bounds) {\r\n            boundsHeight = Math.abs( bounds.top - bounds.bottom );\r\n          }\r\n          if ('right' in bounds && 'left' in bounds) {\r\n            boundsWidth = Math.abs( bounds.right - bounds.left );\r\n          }\r\n        }\r\n\r\n        this.calcOffset();\r\n        pointer.x = pointer.x - this._offset.left;\r\n        pointer.y = pointer.y - this._offset.top;\r\n        if (!ignoreZoom) {\r\n          pointer = this.restorePointerVpt(pointer);\r\n        }\r\n\r\n        var retinaScaling = this.getRetinaScaling();\r\n        if (retinaScaling !== 1) {\r\n          pointer.x /= retinaScaling;\r\n          pointer.y /= retinaScaling;\r\n        }\r\n\r\n        if (boundsWidth === 0 || boundsHeight === 0) {\r\n          // If bounds are not available (i.e. not visible), do not apply scale.\r\n          cssScale = { width: 1, height: 1 };\r\n        }\r\n        else {\r\n          cssScale = {\r\n            width: upperCanvasEl.width / boundsWidth,\r\n            height: upperCanvasEl.height / boundsHeight\r\n          };\r\n        }\r\n\r\n        return {\r\n          x: pointer.x * cssScale.width,\r\n          y: pointer.y * cssScale.height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\r\n       */\r\n      _createUpperCanvas: function () {\r\n        var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''),\r\n            lowerCanvasEl = this.lowerCanvasEl, upperCanvasEl = this.upperCanvasEl;\r\n\r\n        // there is no need to create a new upperCanvas element if we have already one.\r\n        if (upperCanvasEl) {\r\n          upperCanvasEl.className = '';\r\n        }\r\n        else {\r\n          upperCanvasEl = this._createCanvasElement();\r\n          this.upperCanvasEl = upperCanvasEl;\r\n        }\r\n        fabric.util.addClass(upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\r\n\r\n        this.wrapperEl.appendChild(upperCanvasEl);\r\n\r\n        this._copyCanvasStyle(lowerCanvasEl, upperCanvasEl);\r\n        this._applyCanvasStyle(upperCanvasEl);\r\n        this.contextTop = upperCanvasEl.getContext('2d');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createCacheCanvas: function () {\r\n        this.cacheCanvasEl = this._createCanvasElement();\r\n        this.cacheCanvasEl.setAttribute('width', this.width);\r\n        this.cacheCanvasEl.setAttribute('height', this.height);\r\n        this.contextCache = this.cacheCanvasEl.getContext('2d');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _initWrapperElement: function () {\r\n        this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\r\n          'class': this.containerClass\r\n        });\r\n        fabric.util.setStyle(this.wrapperEl, {\r\n          width: this.width + 'px',\r\n          height: this.height + 'px',\r\n          position: 'relative'\r\n        });\r\n        fabric.util.makeElementUnselectable(this.wrapperEl);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {HTMLElement} element canvas element to apply styles on\r\n       */\r\n      _applyCanvasStyle: function (element) {\r\n        var width = this.width || element.width,\r\n            height = this.height || element.height;\r\n\r\n        fabric.util.setStyle(element, {\r\n          position: 'absolute',\r\n          width: width + 'px',\r\n          height: height + 'px',\r\n          left: 0,\r\n          top: 0,\r\n          'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\r\n          '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\r\n        });\r\n        element.width = width;\r\n        element.height = height;\r\n        fabric.util.makeElementUnselectable(element);\r\n      },\r\n\r\n      /**\r\n       * Copy the entire inline style from one element (fromEl) to another (toEl)\r\n       * @private\r\n       * @param {Element} fromEl Element style is copied from\r\n       * @param {Element} toEl Element copied style is applied to\r\n       */\r\n      _copyCanvasStyle: function (fromEl, toEl) {\r\n        toEl.style.cssText = fromEl.style.cssText;\r\n      },\r\n\r\n      /**\r\n       * Returns context of canvas where object selection is drawn\r\n       * @return {CanvasRenderingContext2D}\r\n       */\r\n      getSelectionContext: function() {\r\n        return this.contextTop;\r\n      },\r\n\r\n      /**\r\n       * Returns &lt;canvas> element on which object selection is drawn\r\n       * @return {HTMLCanvasElement}\r\n       */\r\n      getSelectionElement: function () {\r\n        return this.upperCanvasEl;\r\n      },\r\n\r\n      /**\r\n       * Returns currently active object\r\n       * @return {fabric.Object} active object\r\n       */\r\n      getActiveObject: function () {\r\n        return this._activeObject;\r\n      },\r\n\r\n      /**\r\n       * Returns an array with the current selected objects\r\n       * @return {fabric.Object} active object\r\n       */\r\n      getActiveObjects: function () {\r\n        var active = this._activeObject;\r\n        if (active) {\r\n          if (active.type === 'activeSelection' && active._objects) {\r\n            return active._objects.slice(0);\r\n          }\r\n          else {\r\n            return [active];\r\n          }\r\n        }\r\n        return [];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} obj Object that was removed\r\n       */\r\n      _onObjectRemoved: function(obj) {\r\n        // removing active object should fire \"selection:cleared\" events\r\n        if (obj === this._activeObject) {\r\n          this.fire('before:selection:cleared', { target: obj });\r\n          this._discardActiveObject();\r\n          this.fire('selection:cleared', { target: obj });\r\n          obj.fire('deselected');\r\n        }\r\n        if (obj === this._hoveredTarget){\r\n          this._hoveredTarget = null;\r\n          this._hoveredTargets = [];\r\n        }\r\n        this.callSuper('_onObjectRemoved', obj);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Compares the old activeObject with the current one and fires correct events\r\n       * @param {fabric.Object} obj old activeObject\r\n       */\r\n      _fireSelectionEvents: function(oldObjects, e) {\r\n        var somethingChanged = false, objects = this.getActiveObjects(),\r\n            added = [], removed = [], opt = { e: e };\r\n        oldObjects.forEach(function(oldObject) {\r\n          if (objects.indexOf(oldObject) === -1) {\r\n            somethingChanged = true;\r\n            oldObject.fire('deselected', opt);\r\n            removed.push(oldObject);\r\n          }\r\n        });\r\n        objects.forEach(function(object) {\r\n          if (oldObjects.indexOf(object) === -1) {\r\n            somethingChanged = true;\r\n            object.fire('selected', opt);\r\n            added.push(object);\r\n          }\r\n        });\r\n        if (oldObjects.length > 0 && objects.length > 0) {\r\n          opt.selected = added;\r\n          opt.deselected = removed;\r\n          // added for backward compatibility\r\n          opt.updated = added[0] || removed[0];\r\n          opt.target = this._activeObject;\r\n          somethingChanged && this.fire('selection:updated', opt);\r\n        }\r\n        else if (objects.length > 0) {\r\n          // deprecated event\r\n          if (objects.length === 1) {\r\n            opt.target = added[0];\r\n            this.fire('object:selected', opt);\r\n          }\r\n          opt.selected = added;\r\n          // added for backward compatibility\r\n          opt.target = this._activeObject;\r\n          this.fire('selection:created', opt);\r\n        }\r\n        else if (oldObjects.length > 0) {\r\n          opt.deselected = removed;\r\n          this.fire('selection:cleared', opt);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Sets given object as the only active object on canvas\r\n       * @param {fabric.Object} object Object to set as an active one\r\n       * @param {Event} [e] Event (passed along when firing \"object:selected\")\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      setActiveObject: function (object, e) {\r\n        var currentActives = this.getActiveObjects();\r\n        this._setActiveObject(object, e);\r\n        this._fireSelectionEvents(currentActives, e);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} object to set as active\r\n       * @param {Event} [e] Event (passed along when firing \"object:selected\")\r\n       * @return {Boolean} true if the selection happened\r\n       */\r\n      _setActiveObject: function(object, e) {\r\n        if (this._activeObject === object) {\r\n          return false;\r\n        }\r\n        if (!this._discardActiveObject(e, object)) {\r\n          return false;\r\n        }\r\n        if (object.onSelect({ e: e })) {\r\n          return false;\r\n        }\r\n        this._activeObject = object;\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _discardActiveObject: function(e, object) {\r\n        var obj = this._activeObject;\r\n        if (obj) {\r\n          // onDeselect return TRUE to cancel selection;\r\n          if (obj.onDeselect({ e: e, object: object })) {\r\n            return false;\r\n          }\r\n          this._activeObject = null;\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Discards currently active object and fire events. If the function is called by fabric\r\n       * as a consequence of a mouse event, the event is passed as a parameter and\r\n       * sent to the fire function for the custom events. When used as a method the\r\n       * e param does not have any application.\r\n       * @param {event} e\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      discardActiveObject: function (e) {\r\n        var currentActives = this.getActiveObjects(), activeObject = this.getActiveObject();\r\n        if (currentActives.length) {\r\n          this.fire('before:selection:cleared', { target: activeObject, e: e });\r\n        }\r\n        this._discardActiveObject(e);\r\n        this._fireSelectionEvents(currentActives, e);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Clears a canvas element and removes all event listeners\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      dispose: function () {\r\n        var wrapper = this.wrapperEl;\r\n        this.removeListeners();\r\n        wrapper.removeChild(this.upperCanvasEl);\r\n        wrapper.removeChild(this.lowerCanvasEl);\r\n        this.contextCache = null;\r\n        this.contextTop = null;\r\n        ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\r\n          fabric.util.cleanUpJsdomNode(this[element]);\r\n          this[element] = undefined;\r\n        }).bind(this));\r\n        if (wrapper.parentNode) {\r\n          wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\r\n        }\r\n        delete this.wrapperEl;\r\n        fabric.StaticCanvas.prototype.dispose.call(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Clears all contexts (background, main, top) of an instance\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      clear: function () {\r\n        // this.discardActiveGroup();\r\n        this.discardActiveObject();\r\n        this.clearContext(this.contextTop);\r\n        return this.callSuper('clear');\r\n      },\r\n\r\n      /**\r\n       * Draws objects' controls (borders/controls)\r\n       * @param {CanvasRenderingContext2D} ctx Context to render controls on\r\n       */\r\n      drawControls: function(ctx) {\r\n        var activeObject = this._activeObject;\r\n\r\n        if (activeObject) {\r\n          activeObject._renderControls(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObject: function(instance, methodName, propertiesToInclude) {\r\n        //If the object is part of the current selection group, it should\r\n        //be transformed appropriately\r\n        //i.e. it should be serialised as it would appear if the selection group\r\n        //were to be destroyed.\r\n        var originalProperties = this._realizeGroupTransformOnObject(instance),\r\n            object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\r\n        //Undo the damage we did by changing all of its properties\r\n        this._unwindGroupTransformOnObject(instance, originalProperties);\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Realises an object's group transformation on it\r\n       * @private\r\n       * @param {fabric.Object} [instance] the object to transform (gets mutated)\r\n       * @returns the original values of instance which were changed\r\n       */\r\n      _realizeGroupTransformOnObject: function(instance) {\r\n        if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\r\n          var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\r\n          //Copy all the positionally relevant properties across now\r\n          var originalValues = {};\r\n          layoutProps.forEach(function(prop) {\r\n            originalValues[prop] = instance[prop];\r\n          });\r\n          this._activeObject.realizeTransform(instance);\r\n          return originalValues;\r\n        }\r\n        else {\r\n          return null;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Restores the changed properties of instance\r\n       * @private\r\n       * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\r\n       * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\r\n       */\r\n      _unwindGroupTransformOnObject: function(instance, originalValues) {\r\n        if (originalValues) {\r\n          instance.set(originalValues);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGObject: function(markup, instance, reviver) {\r\n        //If the object is in a selection group, simulate what would happen to that\r\n        //object when the group is deselected\r\n        var originalProperties = this._realizeGroupTransformOnObject(instance);\r\n        this.callSuper('_setSVGObject', markup, instance, reviver);\r\n        this._unwindGroupTransformOnObject(instance, originalProperties);\r\n      },\r\n\r\n      setViewportTransform: function (vpt) {\r\n        if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\r\n          this._activeObject.clearContextTop();\r\n        }\r\n        fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\r\n      }\r\n    });\r\n\r\n    // copying static properties manually to work around Opera's bug,\r\n    // where \"prototype\" property is enumerable and overrides existing prototype\r\n    for (var prop in fabric.StaticCanvas) {\r\n      if (prop !== 'prototype') {\r\n        fabric.Canvas[prop] = fabric.StaticCanvas[prop];\r\n      }\r\n    }\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var cursorOffset = {\r\n          mt: 0, // n\r\n          tr: 1, // ne\r\n          mr: 2, // e\r\n          br: 3, // se\r\n          mb: 4, // s\r\n          bl: 5, // sw\r\n          ml: 6, // w\r\n          tl: 7 // nw\r\n        },\r\n        addListener = fabric.util.addListener,\r\n        removeListener = fabric.util.removeListener,\r\n        RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\r\n        addEventOptions = { passive: false };\r\n\r\n    function checkClick(e, value) {\r\n      return e.button && (e.button === value - 1);\r\n    }\r\n\r\n    fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\r\n\r\n      /**\r\n       * Map of cursor style values for each of the object controls\r\n       * @private\r\n       */\r\n      cursorMap: [\r\n        'n-resize',\r\n        'ne-resize',\r\n        'e-resize',\r\n        'se-resize',\r\n        's-resize',\r\n        'sw-resize',\r\n        'w-resize',\r\n        'nw-resize'\r\n      ],\r\n\r\n      /**\r\n       * Contains the id of the touch event that owns the fabric transform\r\n       * @type Number\r\n       * @private\r\n       */\r\n      mainTouchId: null,\r\n\r\n      /**\r\n       * Adds mouse listeners to canvas\r\n       * @private\r\n       */\r\n      _initEventListeners: function () {\r\n        // in case we initialized the class twice. This should not happen normally\r\n        // but in some kind of applications where the canvas element may be changed\r\n        // this is a workaround to having double listeners.\r\n        this.removeListeners();\r\n        this._bindEvents();\r\n        this.addOrRemove(addListener, 'add');\r\n      },\r\n\r\n      /**\r\n       * return an event prefix pointer or mouse.\r\n       * @private\r\n       */\r\n      _getEventPrefix: function () {\r\n        return this.enablePointerEvents ? 'pointer' : 'mouse';\r\n      },\r\n\r\n      addOrRemove: function(functor, eventjsFunctor) {\r\n        var canvasElement = this.upperCanvasEl,\r\n            eventTypePrefix = this._getEventPrefix();\r\n        functor(fabric.window, 'resize', this._onResize);\r\n        functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\r\n        functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n        functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\r\n        functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\r\n        functor(canvasElement, 'wheel', this._onMouseWheel);\r\n        functor(canvasElement, 'contextmenu', this._onContextMenu);\r\n        functor(canvasElement, 'dblclick', this._onDoubleClick);\r\n        functor(canvasElement, 'dragover', this._onDragOver);\r\n        functor(canvasElement, 'dragenter', this._onDragEnter);\r\n        functor(canvasElement, 'dragleave', this._onDragLeave);\r\n        functor(canvasElement, 'drop', this._onDrop);\r\n        if (!this.enablePointerEvents) {\r\n          functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\r\n        }\r\n        if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\r\n          eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\r\n          eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\r\n          eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\r\n          eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\r\n          eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Removes all event listeners\r\n       */\r\n      removeListeners: function() {\r\n        this.addOrRemove(removeListener, 'remove');\r\n        // if you dispose on a mouseDown, before mouse up, you need to clean document to...\r\n        var eventTypePrefix = this._getEventPrefix();\r\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\r\n        removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\r\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n        removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _bindEvents: function() {\r\n        if (this.eventsBound) {\r\n          // for any reason we pass here twice we do not want to bind events twice.\r\n          return;\r\n        }\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n        this._onResize = this._onResize.bind(this);\r\n        this._onGesture = this._onGesture.bind(this);\r\n        this._onDrag = this._onDrag.bind(this);\r\n        this._onShake = this._onShake.bind(this);\r\n        this._onLongPress = this._onLongPress.bind(this);\r\n        this._onOrientationChange = this._onOrientationChange.bind(this);\r\n        this._onMouseWheel = this._onMouseWheel.bind(this);\r\n        this._onMouseOut = this._onMouseOut.bind(this);\r\n        this._onMouseEnter = this._onMouseEnter.bind(this);\r\n        this._onContextMenu = this._onContextMenu.bind(this);\r\n        this._onDoubleClick = this._onDoubleClick.bind(this);\r\n        this._onDragOver = this._onDragOver.bind(this);\r\n        this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\r\n        this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\r\n        this._onDrop = this._simpleEventHandler.bind(this, 'drop');\r\n        this.eventsBound = true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js gesture\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onGesture: function(e, self) {\r\n        this.__onTransformGesture && this.__onTransformGesture(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js drag\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onDrag: function(e, self) {\r\n        this.__onDrag && this.__onDrag(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on wheel event\r\n       */\r\n      _onMouseWheel: function(e) {\r\n        this.__onMouseWheel(e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onMouseOut: function(e) {\r\n        var target = this._hoveredTarget;\r\n        this.fire('mouse:out', { target: target, e: e });\r\n        this._hoveredTarget = null;\r\n        target && target.fire('mouseout', { e: e });\r\n\r\n        var _this = this;\r\n        this._hoveredTargets.forEach(function(_target){\r\n          _this.fire('mouse:out', { target: target, e: e });\r\n          _target && target.fire('mouseout', { e: e });\r\n        });\r\n        this._hoveredTargets = [];\r\n\r\n        if (this._iTextInstances) {\r\n          this._iTextInstances.forEach(function(obj) {\r\n            if (obj.isEditing) {\r\n              obj.hiddenTextarea.focus();\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseenter\r\n       */\r\n      _onMouseEnter: function(e) {\r\n        // This find target and consequent 'mouse:over' is used to\r\n        // clear old instances on hovered target.\r\n        // calling findTarget has the side effect of killing target.__corner.\r\n        // as a short term fix we are not firing this if we are currently transforming.\r\n        // as a long term fix we need to separate the action of finding a target with the\r\n        // side effects we added to it.\r\n        if (!this.currentTransform && !this.findTarget(e)) {\r\n          this.fire('mouse:over', { target: null, e: e });\r\n          this._hoveredTarget = null;\r\n          this._hoveredTargets = [];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js orientation change\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onOrientationChange: function(e, self) {\r\n        this.__onOrientationChange && this.__onOrientationChange(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js shake\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onShake: function(e, self) {\r\n        this.__onShake && this.__onShake(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js shake\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onLongPress: function(e, self) {\r\n        this.__onLongPress && this.__onLongPress(e, self);\r\n      },\r\n\r\n      /**\r\n       * prevent default to allow drop event to be fired\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js shake\r\n       */\r\n      _onDragOver: function(e) {\r\n        e.preventDefault();\r\n        var target = this._simpleEventHandler('dragover', e);\r\n        this._fireEnterLeaveEvents(target, e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onContextMenu: function (e) {\r\n        if (this.stopContextMenu) {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onDoubleClick: function (e) {\r\n        this._cacheTransformEventData(e);\r\n        this._handleEvent(e, 'dblclick');\r\n        this._resetTransformEventData(e);\r\n      },\r\n\r\n      /**\r\n       * Return a the id of an event.\r\n       * returns either the pointerId or the identifier or 0 for the mouse event\r\n       * @private\r\n       * @param {Event} evt Event object\r\n       */\r\n      getPointerId: function(evt) {\r\n        var changedTouches = evt.changedTouches;\r\n\r\n        if (changedTouches) {\r\n          return changedTouches[0] && changedTouches[0].identifier;\r\n        }\r\n\r\n        if (this.enablePointerEvents) {\r\n          return evt.pointerId;\r\n        }\r\n\r\n        return -1;\r\n      },\r\n\r\n      /**\r\n       * Determines if an event has the id of the event that is considered main\r\n       * @private\r\n       * @param {evt} event Event object\r\n       */\r\n      _isMainEvent: function(evt) {\r\n        if (evt.isPrimary === true) {\r\n          return true;\r\n        }\r\n        if (evt.isPrimary === false) {\r\n          return false;\r\n        }\r\n        if (evt.type === 'touchend' && evt.touches.length === 0) {\r\n          return true;\r\n        }\r\n        if (evt.changedTouches) {\r\n          return evt.changedTouches[0].identifier === this.mainTouchId;\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onTouchStart: function(e) {\r\n        e.preventDefault();\r\n        if (this.mainTouchId === null) {\r\n          this.mainTouchId = this.getPointerId(e);\r\n        }\r\n        this.__onMouseDown(e);\r\n        this._resetTransformEventData();\r\n        var canvasElement = this.upperCanvasEl,\r\n            eventTypePrefix = this._getEventPrefix();\r\n        addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\r\n        addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n        // Unbind mousedown to prevent double triggers from touch devices\r\n        removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onMouseDown: function (e) {\r\n        this.__onMouseDown(e);\r\n        this._resetTransformEventData();\r\n        var canvasElement = this.upperCanvasEl,\r\n            eventTypePrefix = this._getEventPrefix();\r\n        removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n        addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\r\n        addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onTouchEnd: function(e) {\r\n        if (e.touches.length > 0) {\r\n          // if there are still touches stop here\r\n          return;\r\n        }\r\n        this.__onMouseUp(e);\r\n        this._resetTransformEventData();\r\n        this.mainTouchId = null;\r\n        var eventTypePrefix = this._getEventPrefix();\r\n        removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\r\n        removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n        var _this = this;\r\n        if (this._willAddMouseDown) {\r\n          clearTimeout(this._willAddMouseDown);\r\n        }\r\n        this._willAddMouseDown = setTimeout(function() {\r\n          // Wait 400ms before rebinding mousedown to prevent double triggers\r\n          // from touch devices\r\n          addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\r\n          _this._willAddMouseDown = 0;\r\n        }, 400);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      _onMouseUp: function (e) {\r\n        this.__onMouseUp(e);\r\n        this._resetTransformEventData();\r\n        var canvasElement = this.upperCanvasEl,\r\n            eventTypePrefix = this._getEventPrefix();\r\n        if (this._isMainEvent(e)) {\r\n          removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\r\n          removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n          addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousemove\r\n       */\r\n      _onMouseMove: function (e) {\r\n        !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\r\n        this.__onMouseMove(e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onResize: function () {\r\n        this.calcOffset();\r\n      },\r\n\r\n      /**\r\n       * Decides whether the canvas should be redrawn in mouseup and mousedown events.\r\n       * @private\r\n       * @param {Object} target\r\n       */\r\n      _shouldRender: function(target) {\r\n        var activeObject = this._activeObject;\r\n\r\n        if (\r\n          !!activeObject !== !!target ||\r\n          (activeObject && target && (activeObject !== target))\r\n        ) {\r\n          // this covers: switch of target, from target to no target, selection of target\r\n          // multiSelection with key and mouse\r\n          return true;\r\n        }\r\n        else if (activeObject && activeObject.isEditing) {\r\n          // if we mouse up/down over a editing textbox a cursor change,\r\n          // there is no need to re render\r\n          return false;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Method that defines the actions when mouse is released on canvas.\r\n       * The method resets the currentTransform parameters, store the image corner\r\n       * position in the image object and render the canvas on top.\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      __onMouseUp: function (e) {\r\n        var target, transform = this._currentTransform,\r\n            groupSelector = this._groupSelector, shouldRender = false,\r\n            isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\r\n        this._cacheTransformEventData(e);\r\n        target = this._target;\r\n        this._handleEvent(e, 'up:before');\r\n        // if right/middle click just fire events and return\r\n        // target undefined will make the _handleEvent search the target\r\n        if (checkClick(e, RIGHT_CLICK)) {\r\n          if (this.fireRightClick) {\r\n            this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (checkClick(e, MIDDLE_CLICK)) {\r\n          if (this.fireMiddleClick) {\r\n            this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\r\n          }\r\n          this._resetTransformEventData();\r\n          return;\r\n        }\r\n\r\n        if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n          this._onMouseUpInDrawingMode(e);\r\n          return;\r\n        }\r\n\r\n        if (!this._isMainEvent(e)) {\r\n          return;\r\n        }\r\n        if (transform) {\r\n          this._finalizeCurrentTransform(e);\r\n          shouldRender = transform.actionPerformed;\r\n        }\r\n\r\n        if (!isClick) {\r\n          this._maybeGroupObjects(e);\r\n          shouldRender || (shouldRender = this._shouldRender(target));\r\n        }\r\n        if (target) {\r\n          target.isMoving = false;\r\n        }\r\n        this._setCursorFromEvent(e, target);\r\n        this._handleEvent(e, 'up', LEFT_CLICK, isClick);\r\n        this._groupSelector = null;\r\n        this._currentTransform = null;\r\n        // reset the target information about which corner is selected\r\n        target && (target.__corner = 0);\r\n        if (shouldRender) {\r\n          this.requestRenderAll();\r\n        }\r\n        else if (!isClick) {\r\n          this.renderTop();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Handle event firing for target and subtargets\r\n       * @param {Event} e event from mouse\r\n       * @param {String} eventType event to fire (up, down or move)\r\n       * @return {Fabric.Object} target return the the target found, for internal reasons.\r\n       */\r\n      _simpleEventHandler: function(eventType, e) {\r\n        var target = this.findTarget(e),\r\n            targets = this.targets,\r\n            options = {\r\n              e: e,\r\n              target: target,\r\n              subTargets: targets,\r\n            };\r\n        this.fire(eventType, options);\r\n        target && target.fire(eventType, options);\r\n        if (!targets) {\r\n          return target;\r\n        }\r\n        for (var i = 0; i < targets.length; i++) {\r\n          targets[i].fire(eventType, options);\r\n        }\r\n        return target;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Handle event firing for target and subtargets\r\n       * @param {Event} e event from mouse\r\n       * @param {String} eventType event to fire (up, down or move)\r\n       * @param {fabric.Object} targetObj receiving event\r\n       * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\r\n       * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\r\n       */\r\n      _handleEvent: function(e, eventType, button, isClick) {\r\n        var target = this._target,\r\n            targets = this.targets || [],\r\n            options = {\r\n              e: e,\r\n              target: target,\r\n              subTargets: targets,\r\n              button: button || LEFT_CLICK,\r\n              isClick: isClick || false,\r\n              pointer: this._pointer,\r\n              absolutePointer: this._absolutePointer,\r\n              transform: this._currentTransform\r\n            };\r\n        this.fire('mouse:' + eventType, options);\r\n        target && target.fire('mouse' + eventType, options);\r\n        for (var i = 0; i < targets.length; i++) {\r\n          targets[i].fire('mouse' + eventType, options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\r\n       */\r\n      _finalizeCurrentTransform: function(e) {\r\n\r\n        var transform = this._currentTransform,\r\n            target = transform.target,\r\n            eventName,\r\n            options = {\r\n              e: e,\r\n              target: target,\r\n              transform: transform,\r\n            };\r\n\r\n        if (target._scaling) {\r\n          target._scaling = false;\r\n        }\r\n\r\n        target.setCoords();\r\n\r\n        if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\r\n          if (transform.actionPerformed) {\r\n            eventName = this._addEventOptions(options, transform);\r\n            this._fire(eventName, options);\r\n          }\r\n          this._fire('modified', options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Mutate option object in order to add by property and give back the event name.\r\n       * @private\r\n       * @param {Object} options to mutate\r\n       * @param {Object} transform to inspect action from\r\n       */\r\n      _addEventOptions: function(options, transform) {\r\n        // we can probably add more details at low cost\r\n        // scale change, rotation changes, translation changes\r\n        var eventName, by;\r\n        switch (transform.action) {\r\n          case 'scaleX':\r\n            eventName = 'scaled';\r\n            by = 'x';\r\n            break;\r\n          case 'scaleY':\r\n            eventName = 'scaled';\r\n            by = 'y';\r\n            break;\r\n          case 'skewX':\r\n            eventName = 'skewed';\r\n            by = 'x';\r\n            break;\r\n          case 'skewY':\r\n            eventName = 'skewed';\r\n            by = 'y';\r\n            break;\r\n          case 'scale':\r\n            eventName = 'scaled';\r\n            by = 'equally';\r\n            break;\r\n          case 'rotate':\r\n            eventName = 'rotated';\r\n            break;\r\n          case 'drag':\r\n            eventName = 'moved';\r\n            break;\r\n        }\r\n        options.by = by;\r\n        return eventName;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onMouseDownInDrawingMode: function(e) {\r\n        this._isCurrentlyDrawing = true;\r\n        if (this.getActiveObject()) {\r\n          this.discardActiveObject(e).requestRenderAll();\r\n        }\r\n        if (this.clipTo) {\r\n          fabric.util.clipContext(this, this.contextTop);\r\n        }\r\n        var pointer = this.getPointer(e);\r\n        this.freeDrawingBrush.onMouseDown(pointer, { e: e, pointer: pointer });\r\n        this._handleEvent(e, 'down');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousemove\r\n       */\r\n      _onMouseMoveInDrawingMode: function(e) {\r\n        if (this._isCurrentlyDrawing) {\r\n          var pointer = this.getPointer(e);\r\n          this.freeDrawingBrush.onMouseMove(pointer, { e: e, pointer: pointer });\r\n        }\r\n        this.setCursor(this.freeDrawingCursor);\r\n        this._handleEvent(e, 'move');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      _onMouseUpInDrawingMode: function(e) {\r\n        if (this.clipTo) {\r\n          this.contextTop.restore();\r\n        }\r\n        var pointer = this.getPointer(e);\r\n        this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: e, pointer: pointer });\r\n        this._handleEvent(e, 'up');\r\n      },\r\n\r\n      /**\r\n       * Method that defines the actions when mouse is clicked on canvas.\r\n       * The method inits the currentTransform parameters and renders all the\r\n       * canvas so the current image can be placed on the top canvas and the rest\r\n       * in on the container one.\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      __onMouseDown: function (e) {\r\n        this._cacheTransformEventData(e);\r\n        this._handleEvent(e, 'down:before');\r\n        var target = this._target;\r\n        // if right click just fire events\r\n        if (checkClick(e, RIGHT_CLICK)) {\r\n          if (this.fireRightClick) {\r\n            this._handleEvent(e, 'down', RIGHT_CLICK);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (checkClick(e, MIDDLE_CLICK)) {\r\n          if (this.fireMiddleClick) {\r\n            this._handleEvent(e, 'down', MIDDLE_CLICK);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (this.isDrawingMode) {\r\n          this._onMouseDownInDrawingMode(e);\r\n          return;\r\n        }\r\n\r\n        if (!this._isMainEvent(e)) {\r\n          return;\r\n        }\r\n\r\n        // ignore if some object is being transformed at this moment\r\n        if (this._currentTransform) {\r\n          return;\r\n        }\r\n\r\n        var pointer = this._pointer;\r\n        // save pointer for check in __onMouseUp event\r\n        this._previousPointer = pointer;\r\n        var shouldRender = this._shouldRender(target),\r\n            shouldGroup = this._shouldGroup(e, target);\r\n        if (this._shouldClearSelection(e, target)) {\r\n          this.discardActiveObject(e);\r\n        }\r\n        else if (shouldGroup) {\r\n          this._handleGrouping(e, target);\r\n          target = this._activeObject;\r\n        }\r\n\r\n        if (this.selection && (!target ||\r\n          (!target.selectable && !target.isEditing && target !== this._activeObject))) {\r\n          this._groupSelector = {\r\n            ex: pointer.x,\r\n            ey: pointer.y,\r\n            top: 0,\r\n            left: 0\r\n          };\r\n        }\r\n\r\n        if (target) {\r\n          var alreadySelected = target === this._activeObject;\r\n          if (target.selectable) {\r\n            this.setActiveObject(target, e);\r\n          }\r\n          if (target === this._activeObject && (target.__corner || !shouldGroup)) {\r\n            this._setupCurrentTransform(e, target, alreadySelected);\r\n          }\r\n        }\r\n        this._handleEvent(e, 'down');\r\n        // we must renderAll so that we update the visuals\r\n        (shouldRender || shouldGroup) && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * reset cache form common information needed during event processing\r\n       * @private\r\n       */\r\n      _resetTransformEventData: function() {\r\n        this._target = null;\r\n        this._pointer = null;\r\n        this._absolutePointer = null;\r\n      },\r\n\r\n      /**\r\n       * Cache common information needed during event processing\r\n       * @private\r\n       * @param {Event} e Event object fired on event\r\n       */\r\n      _cacheTransformEventData: function(e) {\r\n        // reset in order to avoid stale caching\r\n        this._resetTransformEventData();\r\n        this._pointer = this.getPointer(e, true);\r\n        this._absolutePointer = this.restorePointerVpt(this._pointer);\r\n        this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _beforeTransform: function(e) {\r\n        var t = this._currentTransform;\r\n        this.stateful && t.target.saveState();\r\n        this.fire('before:transform', {\r\n          e: e,\r\n          transform: t,\r\n        });\r\n        // determine if it's a drag or rotate case\r\n        if (t.corner) {\r\n          this.onBeforeScaleRotate(t.target);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method that defines the actions when mouse is hovering the canvas.\r\n       * The currentTransform parameter will define whether the user is rotating/scaling/translating\r\n       * an image or neither of them (only hovering). A group selection is also possible and would cancel\r\n       * all any other type of action.\r\n       * In case of an image transformation only the top canvas will be rendered.\r\n       * @private\r\n       * @param {Event} e Event object fired on mousemove\r\n       */\r\n      __onMouseMove: function (e) {\r\n        this._handleEvent(e, 'move:before');\r\n        this._cacheTransformEventData(e);\r\n        var target, pointer;\r\n\r\n        if (this.isDrawingMode) {\r\n          this._onMouseMoveInDrawingMode(e);\r\n          return;\r\n        }\r\n\r\n        if (!this._isMainEvent(e)) {\r\n          return;\r\n        }\r\n\r\n        var groupSelector = this._groupSelector;\r\n\r\n        // We initially clicked in an empty area, so we draw a box for multiple selection\r\n        if (groupSelector) {\r\n          pointer = this._pointer;\r\n\r\n          groupSelector.left = pointer.x - groupSelector.ex;\r\n          groupSelector.top = pointer.y - groupSelector.ey;\r\n\r\n          this.renderTop();\r\n        }\r\n        else if (!this._currentTransform) {\r\n          target = this.findTarget(e) || null;\r\n          this._setCursorFromEvent(e, target);\r\n          this._fireOverOutEvents(target, e);\r\n        }\r\n        else {\r\n          this._transformObject(e);\r\n        }\r\n        this._handleEvent(e, 'move');\r\n        this._resetTransformEventData();\r\n      },\r\n\r\n      /**\r\n       * Manage the mouseout, mouseover events for the fabric object on the canvas\r\n       * @param {Fabric.Object} target the target where the target from the mousemove event\r\n       * @param {Event} e Event object fired on mousemove\r\n       * @private\r\n       */\r\n      _fireOverOutEvents: function(target, e) {\r\n        var _hoveredTarget = this._hoveredTarget,\r\n            _hoveredTargets = this._hoveredTargets, targets = this.targets,\r\n            length = Math.max(_hoveredTargets.length, targets.length);\r\n\r\n        this.fireSyntheticInOutEvents(target, e, {\r\n          oldTarget: _hoveredTarget,\r\n          evtOut: 'mouseout',\r\n          canvasEvtOut: 'mouse:out',\r\n          evtIn: 'mouseover',\r\n          canvasEvtIn: 'mouse:over',\r\n        });\r\n        for (var i = 0; i < length; i++){\r\n          this.fireSyntheticInOutEvents(targets[i], e, {\r\n            oldTarget: _hoveredTargets[i],\r\n            evtOut: 'mouseout',\r\n            evtIn: 'mouseover',\r\n          });\r\n        }\r\n        this._hoveredTarget = target;\r\n        this._hoveredTargets = this.targets.concat();\r\n      },\r\n\r\n      /**\r\n       * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\r\n       * @param {Fabric.Object} target the target where the target from the onDrag event\r\n       * @param {Event} e Event object fired on ondrag\r\n       * @private\r\n       */\r\n      _fireEnterLeaveEvents: function(target, e) {\r\n        var _draggedoverTarget = this._draggedoverTarget,\r\n            _hoveredTargets = this._hoveredTargets, targets = this.targets,\r\n            length = Math.max(_hoveredTargets.length, targets.length);\r\n\r\n        this.fireSyntheticInOutEvents(target, e, {\r\n          oldTarget: _draggedoverTarget,\r\n          evtOut: 'dragleave',\r\n          evtIn: 'dragenter',\r\n        });\r\n        for (var i = 0; i < length; i++) {\r\n          this.fireSyntheticInOutEvents(targets[i], e, {\r\n            oldTarget: _hoveredTargets[i],\r\n            evtOut: 'dragleave',\r\n            evtIn: 'dragenter',\r\n          });\r\n        }\r\n        this._draggedoverTarget = target;\r\n      },\r\n\r\n      /**\r\n       * Manage the synthetic in/out events for the fabric objects on the canvas\r\n       * @param {Fabric.Object} target the target where the target from the supported events\r\n       * @param {Event} e Event object fired\r\n       * @param {Object} config configuration for the function to work\r\n       * @param {String} config.targetName property on the canvas where the old target is stored\r\n       * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\r\n       * @param {String} config.evtOut name of the event to fire for out\r\n       * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\r\n       * @param {String} config.evtIn name of the event to fire for in\r\n       * @private\r\n       */\r\n      fireSyntheticInOutEvents: function(target, e, config) {\r\n        var inOpt, outOpt, oldTarget = config.oldTarget, outFires, inFires,\r\n            targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\r\n        if (targetChanged) {\r\n          inOpt = { e: e, target: target, previousTarget: oldTarget };\r\n          outOpt = { e: e, target: oldTarget, nextTarget: target };\r\n        }\r\n        inFires = target && targetChanged;\r\n        outFires = oldTarget && targetChanged;\r\n        if (outFires) {\r\n          canvasEvtOut && this.fire(canvasEvtOut, outOpt);\r\n          oldTarget.fire(config.evtOut, outOpt);\r\n        }\r\n        if (inFires) {\r\n          canvasEvtIn && this.fire(canvasEvtIn, inOpt);\r\n          target.fire(config.evtIn, inOpt);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method that defines actions when an Event Mouse Wheel\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      __onMouseWheel: function(e) {\r\n        this._cacheTransformEventData(e);\r\n        this._handleEvent(e, 'wheel');\r\n        this._resetTransformEventData();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event fired on mousemove\r\n       */\r\n      _transformObject: function(e) {\r\n        var pointer = this.getPointer(e),\r\n            transform = this._currentTransform;\r\n\r\n        transform.reset = false;\r\n        transform.target.isMoving = true;\r\n        transform.shiftKey = e.shiftKey;\r\n        transform.altKey = e[this.centeredKey];\r\n\r\n        this._beforeScaleTransform(e, transform);\r\n        this._performTransformAction(e, transform, pointer);\r\n\r\n        transform.actionPerformed && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _performTransformAction: function(e, transform, pointer) {\r\n        var x = pointer.x,\r\n            y = pointer.y,\r\n            action = transform.action,\r\n            actionPerformed = false,\r\n            options = {\r\n              target: transform.target,\r\n              e: e,\r\n              transform: transform,\r\n              pointer: pointer\r\n            };\r\n\r\n        if (action === 'rotate') {\r\n          (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\r\n        }\r\n        else if (action === 'scale') {\r\n          (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\r\n        }\r\n        else if (action === 'scaleX') {\r\n          (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\r\n        }\r\n        else if (action === 'scaleY') {\r\n          (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\r\n        }\r\n        else if (action === 'skewX') {\r\n          (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\r\n        }\r\n        else if (action === 'skewY') {\r\n          (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\r\n        }\r\n        else {\r\n          actionPerformed = this._translateObject(x, y);\r\n          if (actionPerformed) {\r\n            this._fire('moving', options);\r\n            this.setCursor(options.target.moveCursor || this.moveCursor);\r\n          }\r\n        }\r\n        transform.actionPerformed = transform.actionPerformed || actionPerformed;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _fire: function(eventName, options) {\r\n        this.fire('object:' + eventName, options);\r\n        options.target.fire(eventName, options);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _beforeScaleTransform: function(e, transform) {\r\n        if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\r\n          var centerTransform = this._shouldCenterTransform(transform.target);\r\n\r\n          // Switch from a normal resize to center-based\r\n          if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\r\n             // Switch from center-based resize to normal one\r\n             (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\r\n          ) {\r\n            this._resetCurrentTransform();\r\n            transform.reset = true;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {Object} transform current transform\r\n       * @param {Number} x mouse position x from origin\r\n       * @param {Number} y mouse position y from origin\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _onScale: function(e, transform, x, y) {\r\n        if (this._isUniscalePossible(e, transform.target)) {\r\n          transform.currentAction = 'scale';\r\n          return this._scaleObject(x, y);\r\n        }\r\n        else {\r\n          // Switch from a normal resize to proportional\r\n          if (!transform.reset && transform.currentAction === 'scale') {\r\n            this._resetCurrentTransform();\r\n          }\r\n\r\n          transform.currentAction = 'scaleEqually';\r\n          return this._scaleObject(x, y, 'equally');\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target current target\r\n       * @return {Boolean} true if unproportional scaling is possible\r\n       */\r\n      _isUniscalePossible: function(e, target) {\r\n        return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\r\n      },\r\n\r\n      /**\r\n       * Sets the cursor depending on where the canvas is being hovered.\r\n       * Note: very buggy in Opera\r\n       * @param {Event} e Event object\r\n       * @param {Object} target Object that the mouse is hovering, if so.\r\n       */\r\n      _setCursorFromEvent: function (e, target) {\r\n        if (!target) {\r\n          this.setCursor(this.defaultCursor);\r\n          return false;\r\n        }\r\n        var hoverCursor = target.hoverCursor || this.hoverCursor,\r\n            activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\r\n              this._activeObject : null,\r\n            // only show proper corner when group selection is not active\r\n            corner = (!activeSelection || !activeSelection.contains(target))\r\n                      && target._findTargetCorner(this.getPointer(e, true));\r\n\r\n        if (!corner) {\r\n          if (target.subTargetCheck){\r\n            // hoverCursor should come from top-most subTarget,\r\n            // so we walk the array backwards\r\n            this.targets.concat().reverse().map(function(_target){\r\n              hoverCursor = _target.hoverCursor || hoverCursor;\r\n            });\r\n          }\r\n          this.setCursor(hoverCursor);\r\n        }\r\n        else {\r\n          this.setCursor(this.getCornerCursor(corner, target, e));\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      getCornerCursor: function(corner, target, e) {\r\n        if (this.actionIsDisabled(corner, target, e)) {\r\n          return this.notAllowedCursor;\r\n        }\r\n        else if (corner in cursorOffset) {\r\n          return this._getRotatedCornerCursor(corner, target, e);\r\n        }\r\n        else if (corner === 'mtr' && target.hasRotatingPoint) {\r\n          return this.rotationCursor;\r\n        }\r\n        else {\r\n          return this.defaultCursor;\r\n        }\r\n      },\r\n\r\n      actionIsDisabled: function(corner, target, e) {\r\n        if (corner === 'mt' || corner === 'mb') {\r\n          return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\r\n        }\r\n        else if (corner === 'ml' || corner === 'mr') {\r\n          return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\r\n        }\r\n        else if (corner === 'mtr') {\r\n          return target.lockRotation;\r\n        }\r\n        else {\r\n          return this._isUniscalePossible(e, target) ?\r\n            target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getRotatedCornerCursor: function(corner, target, e) {\r\n        var n = Math.round((target.angle % 360) / 45);\r\n\r\n        if (n < 0) {\r\n          n += 8; // full circle ahead\r\n        }\r\n        n += cursorOffset[corner];\r\n        if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\r\n          //if we are holding shift and we are on a mx corner...\r\n          n += 2;\r\n        }\r\n        // normalize n to be from 0 to 7\r\n        n %= 8;\r\n\r\n        return this.cursorMap[n];\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var min = Math.min,\r\n        max = Math.max;\r\n\r\n    fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       * @return {Boolean}\r\n       */\r\n      _shouldGroup: function(e, target) {\r\n        var activeObject = this._activeObject;\r\n        return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\r\n              (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       */\r\n      _handleGrouping: function (e, target) {\r\n        var activeObject = this._activeObject;\r\n        // avoid multi select when shift click on a corner\r\n        if (activeObject.__corner) {\r\n          return;\r\n        }\r\n        if (target === activeObject) {\r\n          // if it's a group, find target again, using activeGroup objects\r\n          target = this.findTarget(e, true);\r\n          // if even object is not found or we are on activeObjectCorner, bail out\r\n          if (!target || !target.selectable) {\r\n            return;\r\n          }\r\n        }\r\n        if (activeObject && activeObject.type === 'activeSelection') {\r\n          this._updateActiveSelection(target, e);\r\n        }\r\n        else {\r\n          this._createActiveSelection(target, e);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _updateActiveSelection: function(target, e) {\r\n        var activeSelection = this._activeObject,\r\n            currentActiveObjects = activeSelection._objects.slice(0);\r\n        if (activeSelection.contains(target)) {\r\n          activeSelection.removeWithUpdate(target);\r\n          this._hoveredTarget = target;\r\n          this._hoveredTargets = this.targets.concat();\r\n          if (activeSelection.size() === 1) {\r\n            // activate last remaining object\r\n            this._setActiveObject(activeSelection.item(0), e);\r\n          }\r\n        }\r\n        else {\r\n          activeSelection.addWithUpdate(target);\r\n          this._hoveredTarget = activeSelection;\r\n          this._hoveredTargets = this.targets.concat();\r\n        }\r\n        this._fireSelectionEvents(currentActiveObjects, e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createActiveSelection: function(target, e) {\r\n        var currentActives = this.getActiveObjects(), group = this._createGroup(target);\r\n        this._hoveredTarget = group;\r\n        // ISSUE 4115: should we consider subTargets here?\r\n        // this._hoveredTargets = [];\r\n        // this._hoveredTargets = this.targets.concat();\r\n        this._setActiveObject(group, e);\r\n        this._fireSelectionEvents(currentActives, e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} target\r\n       */\r\n      _createGroup: function(target) {\r\n        var objects = this._objects,\r\n            isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\r\n            groupObjects = isActiveLower\r\n              ? [this._activeObject, target]\r\n              : [target, this._activeObject];\r\n        this._activeObject.isEditing && this._activeObject.exitEditing();\r\n        return new fabric.ActiveSelection(groupObjects, {\r\n          canvas: this\r\n        });\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e mouse event\r\n       */\r\n      _groupSelectedObjects: function (e) {\r\n\r\n        var group = this._collectObjects(e),\r\n            aGroup;\r\n\r\n        // do not create group for 1 element only\r\n        if (group.length === 1) {\r\n          this.setActiveObject(group[0], e);\r\n        }\r\n        else if (group.length > 1) {\r\n          aGroup = new fabric.ActiveSelection(group.reverse(), {\r\n            canvas: this\r\n          });\r\n          this.setActiveObject(aGroup, e);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _collectObjects: function(e) {\r\n        var group = [],\r\n            currentObject,\r\n            x1 = this._groupSelector.ex,\r\n            y1 = this._groupSelector.ey,\r\n            x2 = x1 + this._groupSelector.left,\r\n            y2 = y1 + this._groupSelector.top,\r\n            selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\r\n            selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\r\n            allowIntersect = !this.selectionFullyContained,\r\n            isClick = x1 === x2 && y1 === y2;\r\n        // we iterate reverse order to collect top first in case of click.\r\n        for (var i = this._objects.length; i--; ) {\r\n          currentObject = this._objects[i];\r\n\r\n          if (!currentObject || !currentObject.selectable || !currentObject.visible) {\r\n            continue;\r\n          }\r\n\r\n          if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\r\n              currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\r\n              (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\r\n              (allowIntersect && currentObject.containsPoint(selectionX2Y2))\r\n          ) {\r\n            group.push(currentObject);\r\n            // only add one object if it's a click\r\n            if (isClick) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (group.length > 1) {\r\n          group = group.filter(function(object) {\r\n            return !object.onSelect({ e: e });\r\n          });\r\n        }\r\n\r\n        return group;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _maybeGroupObjects: function(e) {\r\n        if (this.selection && this._groupSelector) {\r\n          this._groupSelectedObjects(e);\r\n        }\r\n        this.setCursor(this.defaultCursor);\r\n        // clear selection and current transformation\r\n        this._groupSelector = null;\r\n      }\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  (function () {\r\n    fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n      /**\r\n       * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\r\n       * @param {Object} [options] Options object\r\n       * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n       * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n       * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\r\n       * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n       * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n       * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n       * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n       * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\r\n       * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n       * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\r\n       * @example <caption>Generate jpeg dataURL with lower quality</caption>\r\n       * var dataURL = canvas.toDataURL({\r\n       *   format: 'jpeg',\r\n       *   quality: 0.8\r\n       * });\r\n       * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\r\n       * var dataURL = canvas.toDataURL({\r\n       *   format: 'png',\r\n       *   left: 100,\r\n       *   top: 100,\r\n       *   width: 200,\r\n       *   height: 200\r\n       * });\r\n       * @example <caption>Generate double scaled png dataURL</caption>\r\n       * var dataURL = canvas.toDataURL({\r\n       *   format: 'png',\r\n       *   multiplier: 2\r\n       * });\r\n       */\r\n      toDataURL: function (options) {\r\n        options || (options = { });\r\n\r\n        var format = options.format || 'png',\r\n            quality = options.quality || 1,\r\n            multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\r\n            canvasEl = this.toCanvasElement(multiplier, options);\r\n        return fabric.util.toDataURL(canvasEl, format, quality);\r\n      },\r\n\r\n      /**\r\n       * Create a new HTMLCanvas element painted with the current canvas content.\r\n       * No need to resize the actual one or repaint it.\r\n       * Will transfer object ownership to a new canvas, paint it, and set everything back.\r\n       * This is an intermediary step used to get to a dataUrl but also it is useful to\r\n       * create quick image copies of a canvas without passing for the dataUrl string\r\n       * @param {Number} [multiplier] a zoom factor.\r\n       * @param {Object} [cropping] Cropping informations\r\n       * @param {Number} [cropping.left] Cropping left offset.\r\n       * @param {Number} [cropping.top] Cropping top offset.\r\n       * @param {Number} [cropping.width] Cropping width.\r\n       * @param {Number} [cropping.height] Cropping height.\r\n       */\r\n      toCanvasElement: function(multiplier, cropping) {\r\n        multiplier = multiplier || 1;\r\n        cropping = cropping || { };\r\n        var scaledWidth = (cropping.width || this.width) * multiplier,\r\n            scaledHeight = (cropping.height || this.height) * multiplier,\r\n            zoom = this.getZoom(),\r\n            originalWidth = this.width,\r\n            originalHeight = this.height,\r\n            newZoom = zoom * multiplier,\r\n            vp = this.viewportTransform,\r\n            translateX = (vp[4] - (cropping.left || 0)) * multiplier,\r\n            translateY = (vp[5] - (cropping.top || 0)) * multiplier,\r\n            originalInteractive = this.interactive,\r\n            newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\r\n            originalRetina = this.enableRetinaScaling,\r\n            canvasEl = fabric.util.createCanvasElement(),\r\n            originalContextTop = this.contextTop;\r\n        canvasEl.width = scaledWidth;\r\n        canvasEl.height = scaledHeight;\r\n        this.contextTop = null;\r\n        this.enableRetinaScaling = false;\r\n        this.interactive = false;\r\n        this.viewportTransform = newVp;\r\n        this.width = scaledWidth;\r\n        this.height = scaledHeight;\r\n        this.calcViewportBoundaries();\r\n        this.renderCanvas(canvasEl.getContext('2d'), this._objects);\r\n        this.viewportTransform = vp;\r\n        this.width = originalWidth;\r\n        this.height = originalHeight;\r\n        this.calcViewportBoundaries();\r\n        this.interactive = originalInteractive;\r\n        this.enableRetinaScaling = originalRetina;\r\n        this.contextTop = originalContextTop;\r\n        return canvasEl;\r\n      },\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Populates canvas with data from the specified dataless JSON.\r\n     * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\r\n     * @deprecated since 1.2.2\r\n     * @param {String|Object} json JSON string or object\r\n     * @param {Function} callback Callback, invoked when json is parsed\r\n     *                            and corresponding objects (e.g: {@link fabric.Image})\r\n     *                            are initialized\r\n     * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\r\n     */\r\n    loadFromDatalessJSON: function (json, callback, reviver) {\r\n      return this.loadFromJSON(json, callback, reviver);\r\n    },\r\n\r\n    /**\r\n     * Populates canvas with data from the specified JSON.\r\n     * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\r\n     * @param {String|Object} json JSON string or object\r\n     * @param {Function} callback Callback, invoked when json is parsed\r\n     *                            and corresponding objects (e.g: {@link fabric.Image})\r\n     *                            are initialized\r\n     * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\r\n     * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\r\n     * @example <caption>loadFromJSON</caption>\r\n     * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\r\n     * @example <caption>loadFromJSON with reviver</caption>\r\n     * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\r\n     *   // `o` = json object\r\n     *   // `object` = fabric.Object instance\r\n     *   // ... do some stuff ...\r\n     * });\r\n     */\r\n    loadFromJSON: function (json, callback, reviver) {\r\n      if (!json) {\r\n        return;\r\n      }\r\n\r\n      // serialize if it wasn't already\r\n      var serialized = (typeof json === 'string')\r\n        ? JSON.parse(json)\r\n        : fabric.util.object.clone(json);\r\n\r\n      var _this = this,\r\n          clipPath = serialized.clipPath,\r\n          renderOnAddRemove = this.renderOnAddRemove;\r\n\r\n      this.renderOnAddRemove = false;\r\n\r\n      delete serialized.clipPath;\r\n\r\n      this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\r\n        _this.clear();\r\n        _this._setBgOverlay(serialized, function () {\r\n          if (clipPath) {\r\n            _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\r\n              _this.clipPath = enlivenedCanvasClip[0];\r\n              _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\r\n            });\r\n          }\r\n          else {\r\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\r\n          }\r\n        });\r\n      }, reviver);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} serialized Object with background and overlay information\r\n     * @param {Array} restored canvas objects\r\n     * @param {Function} cached renderOnAddRemove callback\r\n     * @param {Function} callback Invoked after all background and overlay images/patterns loaded\r\n     */\r\n    __setupCanvas: function(serialized, enlivenedObjects, renderOnAddRemove, callback) {\r\n      var _this = this;\r\n      enlivenedObjects.forEach(function(obj, index) {\r\n        // we splice the array just in case some custom classes restored from JSON\r\n        // will add more object to canvas at canvas init.\r\n        _this.insertAt(obj, index);\r\n      });\r\n      this.renderOnAddRemove = renderOnAddRemove;\r\n      // remove parts i cannot set as options\r\n      delete serialized.objects;\r\n      delete serialized.backgroundImage;\r\n      delete serialized.overlayImage;\r\n      delete serialized.background;\r\n      delete serialized.overlay;\r\n      // this._initOptions does too many things to just\r\n      // call it. Normally loading an Object from JSON\r\n      // create the Object instance. Here the Canvas is\r\n      // already an instance and we are just loading things over it\r\n      this._setOptions(serialized);\r\n      this.renderAll();\r\n      callback && callback();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} serialized Object with background and overlay information\r\n     * @param {Function} callback Invoked after all background and overlay images/patterns loaded\r\n     */\r\n    _setBgOverlay: function(serialized, callback) {\r\n      var loaded = {\r\n        backgroundColor: false,\r\n        overlayColor: false,\r\n        backgroundImage: false,\r\n        overlayImage: false\r\n      };\r\n\r\n      if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\r\n        callback && callback();\r\n        return;\r\n      }\r\n\r\n      var cbIfLoaded = function () {\r\n        if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\r\n          callback && callback();\r\n        }\r\n      };\r\n\r\n      this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\r\n      this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\r\n      this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\r\n      this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\r\n     * @param {(Object|String)} value Value to set\r\n     * @param {Object} loaded Set loaded property to true if property is set\r\n     * @param {Object} callback Callback function to invoke after property is set\r\n     */\r\n    __setBgOverlay: function(property, value, loaded, callback) {\r\n      var _this = this;\r\n\r\n      if (!value) {\r\n        loaded[property] = true;\r\n        callback && callback();\r\n        return;\r\n      }\r\n\r\n      if (property === 'backgroundImage' || property === 'overlayImage') {\r\n        fabric.util.enlivenObjects([value], function(enlivedObject){\r\n          _this[property] = enlivedObject[0];\r\n          loaded[property] = true;\r\n          callback && callback();\r\n        });\r\n      }\r\n      else {\r\n        this['set' + fabric.util.string.capitalize(property, true)](value, function() {\r\n          loaded[property] = true;\r\n          callback && callback();\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Array} objects\r\n     * @param {Function} callback\r\n     * @param {Function} [reviver]\r\n     */\r\n    _enlivenObjects: function (objects, callback, reviver) {\r\n      if (!objects || objects.length === 0) {\r\n        callback && callback([]);\r\n        return;\r\n      }\r\n\r\n      fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\r\n        callback && callback(enlivenedObjects);\r\n      }, null, reviver);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} format\r\n     * @param {Function} callback\r\n     */\r\n    _toDataURL: function (format, callback) {\r\n      this.clone(function (clone) {\r\n        callback(clone.toDataURL(format));\r\n      });\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} format\r\n     * @param {Number} multiplier\r\n     * @param {Function} callback\r\n     */\r\n    _toDataURLWithMultiplier: function (format, multiplier, callback) {\r\n      this.clone(function (clone) {\r\n        callback(clone.toDataURLWithMultiplier(format, multiplier));\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Clones canvas instance\r\n     * @param {Object} [callback] Receives cloned instance as a first argument\r\n     * @param {Array} [properties] Array of properties to include in the cloned canvas and children\r\n     */\r\n    clone: function (callback, properties) {\r\n      var data = JSON.stringify(this.toJSON(properties));\r\n      this.cloneWithoutData(function(clone) {\r\n        clone.loadFromJSON(data, function() {\r\n          callback && callback(clone);\r\n        });\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Clones canvas instance without cloning existing data.\r\n     * This essentially copies canvas dimensions, clipping properties, etc.\r\n     * but leaves data empty (so that you can populate it with your own)\r\n     * @param {Object} [callback] Receives cloned instance as a first argument\r\n     */\r\n    cloneWithoutData: function(callback) {\r\n      var el = fabric.util.createCanvasElement();\r\n\r\n      el.width = this.width;\r\n      el.height = this.height;\r\n\r\n      var clone = new fabric.Canvas(el);\r\n      clone.clipTo = this.clipTo;\r\n      if (this.backgroundImage) {\r\n        clone.setBackgroundImage(this.backgroundImage.src, function() {\r\n          clone.renderAll();\r\n          callback && callback(clone);\r\n        });\r\n        clone.backgroundImageOpacity = this.backgroundImageOpacity;\r\n        clone.backgroundImageStretch = this.backgroundImageStretch;\r\n      }\r\n      else {\r\n        callback && callback(clone);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        clone = fabric.util.object.clone,\r\n        toFixed = fabric.util.toFixed,\r\n        capitalize = fabric.util.string.capitalize,\r\n        degreesToRadians = fabric.util.degreesToRadians,\r\n        supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\r\n        objectCaching = !fabric.isLikelyNode,\r\n        ALIASING_LIMIT = 2;\r\n\r\n    if (fabric.Object) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Root object class from which all 2d shape classes inherit from\r\n     * @class fabric.Object\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\r\n     * @see {@link fabric.Object#initialize} for constructor definition\r\n     *\r\n     * @fires added\r\n     * @fires removed\r\n     *\r\n     * @fires selected\r\n     * @fires deselected\r\n     * @fires modified\r\n     * @fires modified\r\n     * @fires moved\r\n     * @fires scaled\r\n     * @fires rotated\r\n     * @fires skewed\r\n     *\r\n     * @fires rotating\r\n     * @fires scaling\r\n     * @fires moving\r\n     * @fires skewing\r\n     *\r\n     * @fires mousedown\r\n     * @fires mouseup\r\n     * @fires mouseover\r\n     * @fires mouseout\r\n     * @fires mousewheel\r\n     * @fires mousedblclick\r\n     *\r\n     * @fires dragover\r\n     * @fires dragenter\r\n     * @fires dragleave\r\n     * @fires drop\r\n     */\r\n    fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Type of an object (rect, circle, path, etc.).\r\n       * Note that this property is meant to be read-only and not meant to be modified.\r\n       * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\r\n       * @type String\r\n       * @default\r\n       */\r\n      type:                     'object',\r\n\r\n      /**\r\n       * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\r\n       * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\r\n       * @type String\r\n       * @default\r\n       */\r\n      originX:                  'left',\r\n\r\n      /**\r\n       * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\r\n       * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\r\n       * @type String\r\n       * @default\r\n       */\r\n      originY:                  'top',\r\n\r\n      /**\r\n       * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\r\n       * @type Number\r\n       * @default\r\n       */\r\n      top:                      0,\r\n\r\n      /**\r\n       * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\r\n       * @type Number\r\n       * @default\r\n       */\r\n      left:                     0,\r\n\r\n      /**\r\n       * Object width\r\n       * @type Number\r\n       * @default\r\n       */\r\n      width:                    0,\r\n\r\n      /**\r\n       * Object height\r\n       * @type Number\r\n       * @default\r\n       */\r\n      height:                   0,\r\n\r\n      /**\r\n       * Object scale factor (horizontal)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      scaleX:                   1,\r\n\r\n      /**\r\n       * Object scale factor (vertical)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      scaleY:                   1,\r\n\r\n      /**\r\n       * When true, an object is rendered as flipped horizontally\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      flipX:                    false,\r\n\r\n      /**\r\n       * When true, an object is rendered as flipped vertically\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      flipY:                    false,\r\n\r\n      /**\r\n       * Opacity of an object\r\n       * @type Number\r\n       * @default\r\n       */\r\n      opacity:                  1,\r\n\r\n      /**\r\n       * Angle of rotation of an object (in degrees)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      angle:                    0,\r\n\r\n      /**\r\n       * Angle of skew on x axes of an object (in degrees)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      skewX:                    0,\r\n\r\n      /**\r\n       * Angle of skew on y axes of an object (in degrees)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      skewY:                    0,\r\n\r\n      /**\r\n       * Size of object's controlling corners (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cornerSize:               13,\r\n\r\n      /**\r\n       * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      transparentCorners:       true,\r\n\r\n      /**\r\n       * Default cursor value used when hovering over this object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      hoverCursor:              null,\r\n\r\n      /**\r\n       * Default cursor value used when moving this object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      moveCursor:               null,\r\n\r\n      /**\r\n       * Padding between object and its controlling borders (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      padding:                  0,\r\n\r\n      /**\r\n       * Color of controlling borders of an object (when it's active)\r\n       * @type String\r\n       * @default\r\n       */\r\n      borderColor:              'rgba(102,153,255,0.75)',\r\n\r\n      /**\r\n       * Array specifying dash pattern of an object's borders (hasBorder must be true)\r\n       * @since 1.6.2\r\n       * @type Array\r\n       */\r\n      borderDashArray:          null,\r\n\r\n      /**\r\n       * Color of controlling corners of an object (when it's active)\r\n       * @type String\r\n       * @default\r\n       */\r\n      cornerColor:              'rgba(102,153,255,0.5)',\r\n\r\n      /**\r\n       * Color of controlling corners of an object (when it's active and transparentCorners false)\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      cornerStrokeColor:        null,\r\n\r\n      /**\r\n       * Specify style of control, 'rect' or 'circle'\r\n       * @since 1.6.2\r\n       * @type String\r\n       */\r\n      cornerStyle:          'rect',\r\n\r\n      /**\r\n       * Array specifying dash pattern of an object's control (hasBorder must be true)\r\n       * @since 1.6.2\r\n       * @type Array\r\n       */\r\n      cornerDashArray:          null,\r\n\r\n      /**\r\n       * When true, this object will use center point as the origin of transformation\r\n       * when being scaled via the controls.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredScaling:          false,\r\n\r\n      /**\r\n       * When true, this object will use center point as the origin of transformation\r\n       * when being rotated via the controls.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredRotation:         true,\r\n\r\n      /**\r\n       * Color of object's fill\r\n       * takes css colors https://www.w3.org/TR/css-color-3/\r\n       * @type String\r\n       * @default\r\n       */\r\n      fill:                     'rgb(0,0,0)',\r\n\r\n      /**\r\n       * Fill rule used to fill an object\r\n       * accepted values are nonzero, evenodd\r\n       * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\r\n       * @type String\r\n       * @default\r\n       */\r\n      fillRule:                 'nonzero',\r\n\r\n      /**\r\n       * Composite rule used for canvas globalCompositeOperation\r\n       * @type String\r\n       * @default\r\n       */\r\n      globalCompositeOperation: 'source-over',\r\n\r\n      /**\r\n       * Background color of an object.\r\n       * takes css colors https://www.w3.org/TR/css-color-3/\r\n       * @type String\r\n       * @default\r\n       */\r\n      backgroundColor:          '',\r\n\r\n      /**\r\n       * Selection Background color of an object. colored layer behind the object when it is active.\r\n       * does not mix good with globalCompositeOperation methods.\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionBackgroundColor:          '',\r\n\r\n      /**\r\n       * When defined, an object is rendered via stroke and this property specifies its color\r\n       * takes css colors https://www.w3.org/TR/css-color-3/\r\n       * @type String\r\n       * @default\r\n       */\r\n      stroke:                   null,\r\n\r\n      /**\r\n       * Width of a stroke used to render this object\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeWidth:              1,\r\n\r\n      /**\r\n       * Array specifying dash pattern of an object's stroke (stroke must be defined)\r\n       * @type Array\r\n       */\r\n      strokeDashArray:          null,\r\n\r\n      /**\r\n       * Line offset of an object's stroke\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeDashOffset: 0,\r\n\r\n      /**\r\n       * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\r\n       * @type String\r\n       * @default\r\n       */\r\n      strokeLineCap:            'butt',\r\n\r\n      /**\r\n       * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\r\n       * @type String\r\n       * @default\r\n       */\r\n      strokeLineJoin:           'miter',\r\n\r\n      /**\r\n       * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeMiterLimit:         4,\r\n\r\n      /**\r\n       * Shadow object representing shadow of this shape\r\n       * @type fabric.Shadow\r\n       * @default\r\n       */\r\n      shadow:                   null,\r\n\r\n      /**\r\n       * Opacity of object's controlling borders when object is active and moving\r\n       * @type Number\r\n       * @default\r\n       */\r\n      borderOpacityWhenMoving:  0.4,\r\n\r\n      /**\r\n       * Scale factor of object's controlling borders\r\n       * @type Number\r\n       * @default\r\n       */\r\n      borderScaleFactor:        1,\r\n\r\n      /**\r\n       * Transform matrix (similar to SVG's transform matrix)\r\n       * This property has been depreacted. Since caching and and qrDecompose this\r\n       * property can be handled with the standard top,left,scaleX,scaleY,angle and skewX.\r\n       * A documentation example on how to parse and merge a transformMatrix will be provided before\r\n       * completely removing it in fabric 4.0\r\n       * If you are starting a project now, DO NOT use it.\r\n       * @deprecated since 3.2.0\r\n       * @type Array\r\n       */\r\n      transformMatrix:          null,\r\n\r\n      /**\r\n       * Minimum allowed scale value of an object\r\n       * @type Number\r\n       * @default\r\n       */\r\n      minScaleLimit:            0,\r\n\r\n      /**\r\n       * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\r\n       * But events still fire on it.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      selectable:               true,\r\n\r\n      /**\r\n       * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      evented:                  true,\r\n\r\n      /**\r\n       * When set to `false`, an object is not rendered on canvas\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      visible:                  true,\r\n\r\n      /**\r\n       * When set to `false`, object's controls are not displayed and can not be used to manipulate object\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      hasControls:              true,\r\n\r\n      /**\r\n       * When set to `false`, object's controlling borders are not rendered\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      hasBorders:               true,\r\n\r\n      /**\r\n       * When set to `false`, object's controlling rotating point will not be visible or selectable\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      hasRotatingPoint:         true,\r\n\r\n      /**\r\n       * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      rotatingPointOffset:      40,\r\n\r\n      /**\r\n       * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      perPixelTargetFind:       false,\r\n\r\n      /**\r\n       * When `false`, default object's values are not included in its serialization\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      includeDefaultValues:     true,\r\n\r\n      /**\r\n       * Function that determines clipping of an object (context is passed as a first argument).\r\n       * If you are using code minification, ctx argument can be minified/manglied you should use\r\n       * as a workaround `var ctx = arguments[0];` in the function;\r\n       * Note that context origin is at the object's center point (not left/top corner)\r\n       * @deprecated since 2.0.0\r\n       * @type Function\r\n       */\r\n      clipTo:                   null,\r\n\r\n      /**\r\n       * When `true`, object horizontal movement is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockMovementX:            false,\r\n\r\n      /**\r\n       * When `true`, object vertical movement is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockMovementY:            false,\r\n\r\n      /**\r\n       * When `true`, object rotation is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockRotation:             false,\r\n\r\n      /**\r\n       * When `true`, object horizontal scaling is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockScalingX:             false,\r\n\r\n      /**\r\n       * When `true`, object vertical scaling is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockScalingY:             false,\r\n\r\n      /**\r\n       * When `true`, object non-uniform scaling is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockUniScaling:           false,\r\n\r\n      /**\r\n       * When `true`, object horizontal skewing is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockSkewingX:             false,\r\n\r\n      /**\r\n       * When `true`, object vertical skewing is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockSkewingY:             false,\r\n\r\n      /**\r\n       * When `true`, object cannot be flipped by scaling into negative values\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockScalingFlip:          false,\r\n\r\n      /**\r\n       * When `true`, object is not exported in OBJECT/JSON\r\n       * @since 1.6.3\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      excludeFromExport:        false,\r\n\r\n      /**\r\n       * When `true`, object is cached on an additional canvas.\r\n       * When `false`, object is not cached unless necessary ( clipPath )\r\n       * default to true\r\n       * @since 1.7.0\r\n       * @type Boolean\r\n       * @default true\r\n       */\r\n      objectCaching:            objectCaching,\r\n\r\n      /**\r\n       * When `true`, object properties are checked for cache invalidation. In some particular\r\n       * situation you may want this to be disabled ( spray brush, very big, groups)\r\n       * or if your application does not allow you to modify properties for groups child you want\r\n       * to disable it for groups.\r\n       * default to false\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default false\r\n       */\r\n      statefullCache:            false,\r\n\r\n      /**\r\n       * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\r\n       * too much and will be redrawn with correct details at the end of scaling.\r\n       * this setting is performance and application dependant.\r\n       * default to true\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default true\r\n       */\r\n      noScaleCache:              true,\r\n\r\n      /**\r\n       * When `false`, the stoke width will scale with the object.\r\n       * When `true`, the stroke will always match the exact pixel size entered for stroke width.\r\n       * default to false\r\n       * @since 2.6.0\r\n       * @type Boolean\r\n       * @default false\r\n       * @type Boolean\r\n       * @default false\r\n       */\r\n      strokeUniform:              false,\r\n\r\n      /**\r\n       * When set to `true`, object's cache will be rerendered next render call.\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default true\r\n       */\r\n      dirty:                true,\r\n\r\n      /**\r\n       * keeps the value of the last hovered corner during mouse move.\r\n       * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\r\n       * It should be private, but there is no harm in using it as\r\n       * a read-only property.\r\n       * @type number|string|any\r\n       * @default 0\r\n       */\r\n      __corner: 0,\r\n\r\n      /**\r\n       * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\r\n       * @type String\r\n       * @default\r\n       */\r\n      paintFirst:           'fill',\r\n\r\n      /**\r\n       * List of properties to consider when checking if state\r\n       * of an object is changed (fabric.Object#hasStateChanged)\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: (\r\n        'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\r\n        'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\r\n        'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\r\n        'skewX skewY fillRule paintFirst clipPath strokeUniform'\r\n      ).split(' '),\r\n\r\n      /**\r\n       * List of properties to consider when checking if cache needs refresh\r\n       * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\r\n       * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\r\n       * and refreshed at the next render\r\n       * @type Array\r\n       */\r\n      cacheProperties: (\r\n        'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\r\n        ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\r\n      ).split(' '),\r\n\r\n      /**\r\n       * a fabricObject that, without stroke define a clipping area with their shape. filled in black\r\n       * the clipPath object gets used when the object has rendered, and the context is placed in the center\r\n       * of the object cacheCanvas.\r\n       * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\r\n       * @type fabric.Object\r\n       */\r\n      clipPath: undefined,\r\n\r\n      /**\r\n       * Meaningful ONLY when the object is used as clipPath.\r\n       * if true, the clipPath will make the object clip to the outside of the clipPath\r\n       * since 2.4.0\r\n       * @type boolean\r\n       * @default false\r\n       */\r\n      inverted: false,\r\n\r\n      /**\r\n       * Meaningful ONLY when the object is used as clipPath.\r\n       * if true, the clipPath will have its top and left relative to canvas, and will\r\n       * not be influenced by the object transform. This will make the clipPath relative\r\n       * to the canvas, but clipping just a particular object.\r\n       * WARNING this is beta, this feature may change or be renamed.\r\n       * since 2.4.0\r\n       * @type boolean\r\n       * @default false\r\n       */\r\n      absolutePositioned: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        if (options) {\r\n          this.setOptions(options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Create a the canvas used to keep the cached copy of the object\r\n       * @private\r\n       */\r\n      _createCacheCanvas: function() {\r\n        this._cacheProperties = {};\r\n        this._cacheCanvas = fabric.util.createCanvasElement();\r\n        this._cacheContext = this._cacheCanvas.getContext('2d');\r\n        this._updateCacheCanvas();\r\n        // if canvas gets created, is empty, so dirty.\r\n        this.dirty = true;\r\n      },\r\n\r\n      /**\r\n       * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\r\n       * and each side do not cross fabric.cacheSideLimit\r\n       * those numbers are configurable so that you can get as much detail as you want\r\n       * making bargain with performances.\r\n       * @param {Object} dims\r\n       * @param {Object} dims.width width of canvas\r\n       * @param {Object} dims.height height of canvas\r\n       * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.width width of canvas\r\n       * @return {Object}.height height of canvas\r\n       * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       */\r\n      _limitCacheSize: function(dims) {\r\n        var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\r\n            width = dims.width, height = dims.height,\r\n            max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\r\n        if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\r\n          if (width < min) {\r\n            dims.width = min;\r\n          }\r\n          if (height < min) {\r\n            dims.height = min;\r\n          }\r\n          return dims;\r\n        }\r\n        var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\r\n            capValue = fabric.util.capValue,\r\n            x = capValue(min, limitedDims.x, max),\r\n            y = capValue(min, limitedDims.y, max);\r\n        if (width > x) {\r\n          dims.zoomX /= width / x;\r\n          dims.width = x;\r\n          dims.capped = true;\r\n        }\r\n        if (height > y) {\r\n          dims.zoomY /= height / y;\r\n          dims.height = y;\r\n          dims.capped = true;\r\n        }\r\n        return dims;\r\n      },\r\n\r\n      /**\r\n       * Return the dimension and the zoom level needed to create a cache canvas\r\n       * big enough to host the object to be cached.\r\n       * @private\r\n       * @return {Object}.x width of object to be cached\r\n       * @return {Object}.y height of object to be cached\r\n       * @return {Object}.width width of canvas\r\n       * @return {Object}.height height of canvas\r\n       * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       */\r\n      _getCacheCanvasDimensions: function() {\r\n        var objectScale = this.getTotalObjectScaling(),\r\n            // caculate dimensions without skewing\r\n            dim = this._getTransformedDimensions(0, 0),\r\n            neededX = dim.x * objectScale.scaleX / this.scaleX,\r\n            neededY = dim.y * objectScale.scaleY / this.scaleY;\r\n        return {\r\n          // for sure this ALIASING_LIMIT is slightly creating problem\r\n          // in situation in which the cache canvas gets an upper limit\r\n          // also objectScale contains already scaleX and scaleY\r\n          width: neededX + ALIASING_LIMIT,\r\n          height: neededY + ALIASING_LIMIT,\r\n          zoomX: objectScale.scaleX,\r\n          zoomY: objectScale.scaleY,\r\n          x: neededX,\r\n          y: neededY\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Update width and height of the canvas for cache\r\n       * returns true or false if canvas needed resize.\r\n       * @private\r\n       * @return {Boolean} true if the canvas has been resized\r\n       */\r\n      _updateCacheCanvas: function() {\r\n        var targetCanvas = this.canvas;\r\n        if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\r\n          var target = targetCanvas._currentTransform.target,\r\n              action = targetCanvas._currentTransform.action;\r\n          if (this === target && action.slice && action.slice(0, 5) === 'scale') {\r\n            return false;\r\n          }\r\n        }\r\n        var canvas = this._cacheCanvas,\r\n            dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\r\n            minCacheSize = fabric.minCacheSideLimit,\r\n            width = dims.width, height = dims.height, drawingWidth, drawingHeight,\r\n            zoomX = dims.zoomX, zoomY = dims.zoomY,\r\n            dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\r\n            zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\r\n            shouldRedraw = dimensionsChanged || zoomChanged,\r\n            additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\r\n        if (dimensionsChanged) {\r\n          var canvasWidth = this._cacheCanvas.width,\r\n              canvasHeight = this._cacheCanvas.height,\r\n              sizeGrowing = width > canvasWidth || height > canvasHeight,\r\n              sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\r\n                canvasWidth > minCacheSize && canvasHeight > minCacheSize;\r\n          shouldResizeCanvas = sizeGrowing || sizeShrinking;\r\n          if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\r\n            additionalWidth = width * 0.1;\r\n            additionalHeight = height * 0.1;\r\n          }\r\n        }\r\n        if (shouldRedraw) {\r\n          if (shouldResizeCanvas) {\r\n            canvas.width = Math.ceil(width + additionalWidth);\r\n            canvas.height = Math.ceil(height + additionalHeight);\r\n          }\r\n          else {\r\n            this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\r\n            this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\r\n          }\r\n          drawingWidth = dims.x / 2;\r\n          drawingHeight = dims.y / 2;\r\n          this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\r\n          this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\r\n          this.cacheWidth = width;\r\n          this.cacheHeight = height;\r\n          this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\r\n          this._cacheContext.scale(zoomX, zoomY);\r\n          this.zoomX = zoomX;\r\n          this.zoomY = zoomY;\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Sets object's properties from options\r\n       * @param {Object} [options] Options object\r\n       */\r\n      setOptions: function(options) {\r\n        this._setOptions(options);\r\n        this._initGradient(options.fill, 'fill');\r\n        this._initGradient(options.stroke, 'stroke');\r\n        this._initClipping(options);\r\n        this._initPattern(options.fill, 'fill');\r\n        this._initPattern(options.stroke, 'stroke');\r\n      },\r\n\r\n      /**\r\n       * Transforms context when rendering an object\r\n       * @param {CanvasRenderingContext2D} ctx Context\r\n       */\r\n      transform: function(ctx) {\r\n        var m;\r\n        if (this.group && !this.group._transformDone) {\r\n          m = this.calcTransformMatrix();\r\n        }\r\n        else {\r\n          m = this.calcOwnMatrix();\r\n        }\r\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n      },\r\n\r\n      /**\r\n       * Returns an object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n\r\n            object = {\r\n              type:                     this.type,\r\n              version:                  fabric.version,\r\n              originX:                  this.originX,\r\n              originY:                  this.originY,\r\n              left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\r\n              top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\r\n              width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\r\n              height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\r\n              fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\r\n              stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\r\n              strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\r\n              strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\r\n              strokeLineCap:            this.strokeLineCap,\r\n              strokeDashOffset:         this.strokeDashOffset,\r\n              strokeLineJoin:           this.strokeLineJoin,\r\n              strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\r\n              scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\r\n              scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\r\n              angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\r\n              flipX:                    this.flipX,\r\n              flipY:                    this.flipY,\r\n              opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\r\n              shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\r\n              visible:                  this.visible,\r\n              clipTo:                   this.clipTo && String(this.clipTo),\r\n              backgroundColor:          this.backgroundColor,\r\n              fillRule:                 this.fillRule,\r\n              paintFirst:               this.paintFirst,\r\n              globalCompositeOperation: this.globalCompositeOperation,\r\n              transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\r\n              skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\r\n              skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\r\n            };\r\n\r\n        if (this.clipPath) {\r\n          object.clipPath = this.clipPath.toObject(propertiesToInclude);\r\n          object.clipPath.inverted = this.clipPath.inverted;\r\n          object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\r\n        }\r\n\r\n        fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n        if (!this.includeDefaultValues) {\r\n          object = this._removeDefaultValues(object);\r\n        }\r\n\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Returns (dataless) object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toDatalessObject: function(propertiesToInclude) {\r\n        // will be overwritten by subclasses\r\n        return this.toObject(propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} object\r\n       */\r\n      _removeDefaultValues: function(object) {\r\n        var prototype = fabric.util.getKlass(object.type).prototype,\r\n            stateProperties = prototype.stateProperties;\r\n        stateProperties.forEach(function(prop) {\r\n          if (prop === 'left' || prop === 'top') {\r\n            return;\r\n          }\r\n          if (object[prop] === prototype[prop]) {\r\n            delete object[prop];\r\n          }\r\n          var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\r\n                        Object.prototype.toString.call(prototype[prop]) === '[object Array]';\r\n\r\n          // basically a check for [] === []\r\n          if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\r\n            delete object[prop];\r\n          }\r\n        });\r\n\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Returns a string representation of an instance\r\n       * @return {String}\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.' + capitalize(this.type) + '>';\r\n      },\r\n\r\n      /**\r\n       * Return the object scale factor counting also the group scaling\r\n       * @return {Object} object with scaleX and scaleY properties\r\n       */\r\n      getObjectScaling: function() {\r\n        var scaleX = this.scaleX, scaleY = this.scaleY;\r\n        if (this.group) {\r\n          var scaling = this.group.getObjectScaling();\r\n          scaleX *= scaling.scaleX;\r\n          scaleY *= scaling.scaleY;\r\n        }\r\n        return { scaleX: scaleX, scaleY: scaleY };\r\n      },\r\n\r\n      /**\r\n       * Return the object scale factor counting also the group scaling, zoom and retina\r\n       * @return {Object} object with scaleX and scaleY properties\r\n       */\r\n      getTotalObjectScaling: function() {\r\n        var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\r\n        if (this.canvas) {\r\n          var zoom = this.canvas.getZoom();\r\n          var retina = this.canvas.getRetinaScaling();\r\n          scaleX *= zoom * retina;\r\n          scaleY *= zoom * retina;\r\n        }\r\n        return { scaleX: scaleX, scaleY: scaleY };\r\n      },\r\n\r\n      /**\r\n       * Return the object opacity counting also the group property\r\n       * @return {Number}\r\n       */\r\n      getObjectOpacity: function() {\r\n        var opacity = this.opacity;\r\n        if (this.group) {\r\n          opacity *= this.group.getObjectOpacity();\r\n        }\r\n        return opacity;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      _set: function(key, value) {\r\n        var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\r\n            isChanged = this[key] !== value, groupNeedsUpdate = false;\r\n\r\n        if (shouldConstrainValue) {\r\n          value = this._constrainScale(value);\r\n        }\r\n        if (key === 'scaleX' && value < 0) {\r\n          this.flipX = !this.flipX;\r\n          value *= -1;\r\n        }\r\n        else if (key === 'scaleY' && value < 0) {\r\n          this.flipY = !this.flipY;\r\n          value *= -1;\r\n        }\r\n        else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\r\n          value = new fabric.Shadow(value);\r\n        }\r\n        else if (key === 'dirty' && this.group) {\r\n          this.group.set('dirty', value);\r\n        }\r\n\r\n        this[key] = value;\r\n\r\n        if (isChanged) {\r\n          groupNeedsUpdate = this.group && this.group.isOnACache();\r\n          if (this.cacheProperties.indexOf(key) > -1) {\r\n            this.dirty = true;\r\n            groupNeedsUpdate && this.group.set('dirty', true);\r\n          }\r\n          else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\r\n            this.group.set('dirty', true);\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * This callback function is called by the parent group of an object every\r\n       * time a non-delegated property changes on the group. It is passed the key\r\n       * and value as parameters. Not adding in this function's signature to avoid\r\n       * Travis build error about unused variables.\r\n       */\r\n      setOnGroup: function() {\r\n        // implemented by sub-classes, as needed.\r\n      },\r\n\r\n      /**\r\n       * Retrieves viewportTransform from Object's canvas if possible\r\n       * @method getViewportTransform\r\n       * @memberOf fabric.Object.prototype\r\n       * @return {Array}\r\n       */\r\n      getViewportTransform: function() {\r\n        if (this.canvas && this.canvas.viewportTransform) {\r\n          return this.canvas.viewportTransform;\r\n        }\r\n        return fabric.iMatrix.concat();\r\n      },\r\n\r\n      /*\r\n       * @private\r\n       * return if the object would be visible in rendering\r\n       * @memberOf fabric.Object.prototype\r\n       * @return {Boolean}\r\n       */\r\n      isNotVisible: function() {\r\n        return this.opacity === 0 ||\r\n          (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\r\n          !this.visible;\r\n      },\r\n\r\n      /**\r\n       * Renders an object on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      render: function(ctx) {\r\n        // do not render if width/height are zeros or object is not visible\r\n        if (this.isNotVisible()) {\r\n          return;\r\n        }\r\n        if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\r\n          return;\r\n        }\r\n        ctx.save();\r\n        this._setupCompositeOperation(ctx);\r\n        this.drawSelectionBackground(ctx);\r\n        this.transform(ctx);\r\n        this._setOpacity(ctx);\r\n        this._setShadow(ctx, this);\r\n        if (this.transformMatrix) {\r\n          ctx.transform.apply(ctx, this.transformMatrix);\r\n        }\r\n        this.clipTo && fabric.util.clipContext(this, ctx);\r\n        if (this.shouldCache()) {\r\n          this.renderCache();\r\n          this.drawCacheOnCanvas(ctx);\r\n        }\r\n        else {\r\n          this._removeCacheCanvas();\r\n          this.dirty = false;\r\n          this.drawObject(ctx);\r\n          if (this.objectCaching && this.statefullCache) {\r\n            this.saveState({ propertySet: 'cacheProperties' });\r\n          }\r\n        }\r\n        this.clipTo && ctx.restore();\r\n        ctx.restore();\r\n      },\r\n\r\n      renderCache: function(options) {\r\n        options = options || {};\r\n        if (!this._cacheCanvas) {\r\n          this._createCacheCanvas();\r\n        }\r\n        if (this.isCacheDirty()) {\r\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\r\n          this.drawObject(this._cacheContext, options.forClipping);\r\n          this.dirty = false;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Remove cacheCanvas and its dimensions from the objects\r\n       */\r\n      _removeCacheCanvas: function() {\r\n        this._cacheCanvas = null;\r\n        this.cacheWidth = 0;\r\n        this.cacheHeight = 0;\r\n      },\r\n\r\n      /**\r\n       * return true if the object will draw a stroke\r\n       * Does not consider text styles. This is just a shortcut used at rendering time\r\n       * We want it to be an aproximation and be fast.\r\n       * wrote to avoid extra caching, it has to return true when stroke happens,\r\n       * can guess when it will not happen at 100% chance, does not matter if it misses\r\n       * some use case where the stroke is invisible.\r\n       * @since 3.0.0\r\n       * @returns Boolean\r\n       */\r\n      hasStroke: function() {\r\n        return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\r\n      },\r\n\r\n      /**\r\n       * return true if the object will draw a fill\r\n       * Does not consider text styles. This is just a shortcut used at rendering time\r\n       * We want it to be an aproximation and be fast.\r\n       * wrote to avoid extra caching, it has to return true when fill happens,\r\n       * can guess when it will not happen at 100% chance, does not matter if it misses\r\n       * some use case where the fill is invisible.\r\n       * @since 3.0.0\r\n       * @returns Boolean\r\n       */\r\n      hasFill: function() {\r\n        return this.fill && this.fill !== 'transparent';\r\n      },\r\n\r\n      /**\r\n       * When set to `true`, force the object to have its own cache, even if it is inside a group\r\n       * it may be needed when your object behave in a particular way on the cache and always needs\r\n       * its own isolated canvas to render correctly.\r\n       * Created to be overridden\r\n       * since 1.7.12\r\n       * @returns Boolean\r\n       */\r\n      needsItsOwnCache: function() {\r\n        if (this.paintFirst === 'stroke' &&\r\n          this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\r\n          return true;\r\n        }\r\n        if (this.clipPath) {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * objectCaching is a global flag, wins over everything\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group outside is cached.\r\n       * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        this.ownCaching = this.needsItsOwnCache() || (\r\n          this.objectCaching &&\r\n          (!this.group || !this.group.isOnACache())\r\n        );\r\n        return this.ownCaching;\r\n      },\r\n\r\n      /**\r\n       * Check if this object or a child object will cast a shadow\r\n       * used by Group.shouldCache to know if child has a shadow recursively\r\n       * @return {Boolean}\r\n       */\r\n      willDrawShadow: function() {\r\n        return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\r\n      },\r\n\r\n      /**\r\n       * Execute the drawing operation for an object clipPath\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawClipPathOnCache: function(ctx) {\r\n        var path = this.clipPath;\r\n        ctx.save();\r\n        // DEBUG: uncomment this line, comment the following\r\n        // ctx.globalAlpha = 0.4\r\n        if (path.inverted) {\r\n          ctx.globalCompositeOperation = 'destination-out';\r\n        }\r\n        else {\r\n          ctx.globalCompositeOperation = 'destination-in';\r\n        }\r\n        //ctx.scale(1 / 2, 1 / 2);\r\n        if (path.absolutePositioned) {\r\n          var m = fabric.util.invertTransform(this.calcTransformMatrix());\r\n          ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n        }\r\n        path.transform(ctx);\r\n        ctx.scale(1 / path.zoomX, 1 / path.zoomY);\r\n        ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Execute the drawing operation for an object on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawObject: function(ctx, forClipping) {\r\n        var originalFill = this.fill, originalStroke = this.stroke;\r\n        if (forClipping) {\r\n          this.fill = 'black';\r\n          this.stroke = '';\r\n          this._setClippingProperties(ctx);\r\n        }\r\n        else {\r\n          this._renderBackground(ctx);\r\n          this._setStrokeStyles(ctx, this);\r\n          this._setFillStyles(ctx, this);\r\n        }\r\n        this._render(ctx);\r\n        this._drawClipPath(ctx);\r\n        this.fill = originalFill;\r\n        this.stroke = originalStroke;\r\n      },\r\n\r\n      _drawClipPath: function(ctx) {\r\n        var path = this.clipPath;\r\n        if (!path) { return; }\r\n        // needed to setup a couple of variables\r\n        // path canvas gets overridden with this one.\r\n        // TODO find a better solution?\r\n        path.canvas = this.canvas;\r\n        path.shouldCache();\r\n        path._transformDone = true;\r\n        path.renderCache({ forClipping: true });\r\n        this.drawClipPathOnCache(ctx);\r\n      },\r\n\r\n      /**\r\n       * Paint the cached copy of the object on the target context.\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawCacheOnCanvas: function(ctx) {\r\n        ctx.scale(1 / this.zoomX, 1 / this.zoomY);\r\n        ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\r\n      },\r\n\r\n      /**\r\n       * Check if cache is dirty\r\n       * @param {Boolean} skipCanvas skip canvas checks because this object is painted\r\n       * on parent canvas.\r\n       */\r\n      isCacheDirty: function(skipCanvas) {\r\n        if (this.isNotVisible()) {\r\n          return false;\r\n        }\r\n        if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\r\n          // in this case the context is already cleared.\r\n          return true;\r\n        }\r\n        else {\r\n          if (this.dirty ||\r\n            (this.clipPath && this.clipPath.absolutePositioned) ||\r\n            (this.statefullCache && this.hasStateChanged('cacheProperties'))\r\n          ) {\r\n            if (this._cacheCanvas && !skipCanvas) {\r\n              var width = this.cacheWidth / this.zoomX;\r\n              var height = this.cacheHeight / this.zoomY;\r\n              this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\r\n            }\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Draws a background for the object big as its untransformed dimensions\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderBackground: function(ctx) {\r\n        if (!this.backgroundColor) {\r\n          return;\r\n        }\r\n        var dim = this._getNonTransformedDimensions();\r\n        ctx.fillStyle = this.backgroundColor;\r\n\r\n        ctx.fillRect(\r\n          -dim.x / 2,\r\n          -dim.y / 2,\r\n          dim.x,\r\n          dim.y\r\n        );\r\n        // if there is background color no other shadows\r\n        // should be casted\r\n        this._removeShadow(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _setOpacity: function(ctx) {\r\n        if (this.group && !this.group._transformDone) {\r\n          ctx.globalAlpha = this.getObjectOpacity();\r\n        }\r\n        else {\r\n          ctx.globalAlpha *= this.opacity;\r\n        }\r\n      },\r\n\r\n      _setStrokeStyles: function(ctx, decl) {\r\n        if (decl.stroke) {\r\n          ctx.lineWidth = decl.strokeWidth;\r\n          ctx.lineCap = decl.strokeLineCap;\r\n          ctx.lineDashOffset = decl.strokeDashOffset;\r\n          ctx.lineJoin = decl.strokeLineJoin;\r\n          ctx.miterLimit = decl.strokeMiterLimit;\r\n          ctx.strokeStyle = decl.stroke.toLive\r\n            ? decl.stroke.toLive(ctx, this)\r\n            : decl.stroke;\r\n        }\r\n      },\r\n\r\n      _setFillStyles: function(ctx, decl) {\r\n        if (decl.fill) {\r\n          ctx.fillStyle = decl.fill.toLive\r\n            ? decl.fill.toLive(ctx, this)\r\n            : decl.fill;\r\n        }\r\n      },\r\n\r\n      _setClippingProperties: function(ctx) {\r\n        ctx.globalAlpha = 1;\r\n        ctx.strokeStyle = 'transparent';\r\n        ctx.fillStyle = '#000000';\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Sets line dash\r\n       * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\r\n       * @param {Array} dashArray array representing dashes\r\n       * @param {Function} alternative function to call if browser does not support lineDash\r\n       */\r\n      _setLineDash: function(ctx, dashArray, alternative) {\r\n        if (!dashArray || dashArray.length === 0) {\r\n          return;\r\n        }\r\n        // Spec requires the concatenation of two copies the dash list when the number of elements is odd\r\n        if (1 & dashArray.length) {\r\n          dashArray.push.apply(dashArray, dashArray);\r\n        }\r\n        if (supportsLineDash) {\r\n          ctx.setLineDash(dashArray);\r\n        }\r\n        else {\r\n          alternative && alternative(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Renders controls and borders for the object\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} [styleOverride] properties to override the object style\r\n       */\r\n      _renderControls: function(ctx, styleOverride) {\r\n        var vpt = this.getViewportTransform(),\r\n            matrix = this.calcTransformMatrix(),\r\n            options, drawBorders, drawControls;\r\n        styleOverride = styleOverride || { };\r\n        drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\r\n        drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\r\n        matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\r\n        options = fabric.util.qrDecompose(matrix);\r\n        ctx.save();\r\n        ctx.translate(options.translateX, options.translateY);\r\n        ctx.lineWidth = 1 * this.borderScaleFactor;\r\n        if (!this.group) {\r\n          ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n        }\r\n        if (styleOverride.forActiveSelection) {\r\n          ctx.rotate(degreesToRadians(options.angle));\r\n          drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\r\n        }\r\n        else {\r\n          ctx.rotate(degreesToRadians(this.angle));\r\n          drawBorders && this.drawBorders(ctx, styleOverride);\r\n        }\r\n        drawControls && this.drawControls(ctx, styleOverride);\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _setShadow: function(ctx) {\r\n        if (!this.shadow) {\r\n          return;\r\n        }\r\n\r\n        var shadow = this.shadow, canvas = this.canvas, scaling,\r\n            multX = (canvas && canvas.viewportTransform[0]) || 1,\r\n            multY = (canvas && canvas.viewportTransform[3]) || 1;\r\n        if (shadow.nonScaling) {\r\n          scaling = { scaleX: 1, scaleY: 1 };\r\n        }\r\n        else {\r\n          scaling = this.getObjectScaling();\r\n        }\r\n        if (canvas && canvas._isRetinaScaling()) {\r\n          multX *= fabric.devicePixelRatio;\r\n          multY *= fabric.devicePixelRatio;\r\n        }\r\n        ctx.shadowColor = shadow.color;\r\n        ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\r\n          (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\r\n        ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\r\n        ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _removeShadow: function(ctx) {\r\n        if (!this.shadow) {\r\n          return;\r\n        }\r\n\r\n        ctx.shadowColor = '';\r\n        ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} filler fabric.Pattern or fabric.Gradient\r\n       * @return {Object} offset.offsetX offset for text rendering\r\n       * @return {Object} offset.offsetY offset for text rendering\r\n       */\r\n      _applyPatternGradientTransform: function(ctx, filler) {\r\n        if (!filler || !filler.toLive) {\r\n          return { offsetX: 0, offsetY: 0 };\r\n        }\r\n        var t = filler.gradientTransform || filler.patternTransform;\r\n        var offsetX = -this.width / 2 + filler.offsetX || 0,\r\n            offsetY = -this.height / 2 + filler.offsetY || 0;\r\n\r\n        if (filler.gradientUnits === 'percentage') {\r\n          ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\r\n        }\r\n        else {\r\n          ctx.transform(1, 0, 0, 1, offsetX, offsetY);\r\n        }\r\n        if (t) {\r\n          ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\r\n        }\r\n        return { offsetX: offsetX, offsetY: offsetY };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderPaintInOrder: function(ctx) {\r\n        if (this.paintFirst === 'stroke') {\r\n          this._renderStroke(ctx);\r\n          this._renderFill(ctx);\r\n        }\r\n        else {\r\n          this._renderFill(ctx);\r\n          this._renderStroke(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * function that actually render something on the context.\r\n       * empty here to allow Obects to work on tests to benchmark fabric functionalites\r\n       * not related to rendering\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(/* ctx */) {\r\n\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderFill: function(ctx) {\r\n        if (!this.fill) {\r\n          return;\r\n        }\r\n\r\n        ctx.save();\r\n        this._applyPatternGradientTransform(ctx, this.fill);\r\n        if (this.fillRule === 'evenodd') {\r\n          ctx.fill('evenodd');\r\n        }\r\n        else {\r\n          ctx.fill();\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderStroke: function(ctx) {\r\n        if (!this.stroke || this.strokeWidth === 0) {\r\n          return;\r\n        }\r\n\r\n        if (this.shadow && !this.shadow.affectStroke) {\r\n          this._removeShadow(ctx);\r\n        }\r\n\r\n        ctx.save();\r\n        if (this.strokeUniform) {\r\n          ctx.scale(1 / this.scaleX, 1 / this.scaleY);\r\n        }\r\n        this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\r\n        if (this.stroke.toLive && this.stroke.gradientUnits === 'percentage') {\r\n          // need to transform gradient in a pattern.\r\n          // this is a slow process. If you are hitting this codepath, and the object\r\n          // is not using caching, you should consider switching it on.\r\n          // we need a canvas as big as the current object caching canvas.\r\n          this._applyPatternForTransformedGradient(ctx, this.stroke);\r\n        }\r\n        else {\r\n          this._applyPatternGradientTransform(ctx, this.stroke);\r\n        }\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * This function try to patch the missing gradientTransform on canvas gradients.\r\n       * transforming a context to transform the gradient, is going to transform the stroke too.\r\n       * we want to transform the gradient but not the stroke operation, so we create\r\n       * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\r\n       * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size\r\n       * is limited.\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {fabric.Gradient} filler a fabric gradient instance\r\n       */\r\n      _applyPatternForTransformedGradient: function(ctx, filler) {\r\n        var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\r\n            pCanvas = fabric.util.createCanvasElement(), pCtx, retinaScaling = this.canvas.getRetinaScaling(),\r\n            width = dims.x / this.scaleX / retinaScaling, height = dims.y / this.scaleY / retinaScaling;\r\n        pCanvas.width = width;\r\n        pCanvas.height = height;\r\n        pCtx = pCanvas.getContext('2d');\r\n        pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\r\n        pCtx.lineTo(0, height); pCtx.closePath();\r\n        pCtx.translate(width / 2, height / 2);\r\n        pCtx.scale(\r\n          dims.zoomX / this.scaleX / retinaScaling,\r\n          dims.zoomY / this.scaleY / retinaScaling\r\n        );\r\n        this._applyPatternGradientTransform(pCtx, filler);\r\n        pCtx.fillStyle = filler.toLive(ctx);\r\n        pCtx.fill();\r\n        ctx.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2);\r\n        ctx.scale(\r\n          retinaScaling * this.scaleX / dims.zoomX,\r\n          retinaScaling * this.scaleY / dims.zoomY\r\n        );\r\n        ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat');\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it returns the center of the object in the svg\r\n       * untransformed coordinates\r\n       * @private\r\n       * @return {Object} center point from element coordinates\r\n       */\r\n      _findCenterFromElement: function() {\r\n        return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it decompose the transformMatrix\r\n       * and assign properties to object.\r\n       * untransformed coordinates\r\n       * @private\r\n       * @chainable\r\n       */\r\n      _assignTransformMatrixProps: function() {\r\n        if (this.transformMatrix) {\r\n          var options = fabric.util.qrDecompose(this.transformMatrix);\r\n          this.flipX = false;\r\n          this.flipY = false;\r\n          this.set('scaleX', options.scaleX);\r\n          this.set('scaleY', options.scaleY);\r\n          this.angle = options.angle;\r\n          this.skewX = options.skewX;\r\n          this.skewY = 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it removes the transform matrix\r\n       * and set to object properties that fabricjs can handle\r\n       * @private\r\n       * @param {Object} preserveAspectRatioOptions\r\n       * @return {thisArg}\r\n       */\r\n      _removeTransformMatrix: function(preserveAspectRatioOptions) {\r\n        var center = this._findCenterFromElement();\r\n        if (this.transformMatrix) {\r\n          this._assignTransformMatrixProps();\r\n          center = fabric.util.transformPoint(center, this.transformMatrix);\r\n        }\r\n        this.transformMatrix = null;\r\n        if (preserveAspectRatioOptions) {\r\n          this.scaleX *= preserveAspectRatioOptions.scaleX;\r\n          this.scaleY *= preserveAspectRatioOptions.scaleY;\r\n          this.cropX = preserveAspectRatioOptions.cropX;\r\n          this.cropY = preserveAspectRatioOptions.cropY;\r\n          center.x += preserveAspectRatioOptions.offsetLeft;\r\n          center.y += preserveAspectRatioOptions.offsetTop;\r\n          this.width = preserveAspectRatioOptions.width;\r\n          this.height = preserveAspectRatioOptions.height;\r\n        }\r\n        this.setPositionByOrigin(center, 'center', 'center');\r\n      },\r\n\r\n      /**\r\n       * Clones an instance, using a callback method will work for every object.\r\n       * @param {Function} callback Callback is invoked with a clone as a first argument\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       */\r\n      clone: function(callback, propertiesToInclude) {\r\n        var objectForm = this.toObject(propertiesToInclude);\r\n        if (this.constructor.fromObject) {\r\n          this.constructor.fromObject(objectForm, callback);\r\n        }\r\n        else {\r\n          fabric.Object._fromObject('Object', objectForm, callback);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Creates an instance of fabric.Image out of an object\r\n       * could make use of both toDataUrl or toCanvasElement.\r\n       * @param {Function} callback callback, invoked with an instance as a first argument\r\n       * @param {Object} [options] for clone as image, passed to toDataURL\r\n       * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n       * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n       * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n       * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n       * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n       * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n       * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n       * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n       * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n       * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      cloneAsImage: function(callback, options) {\r\n        var canvasEl = this.toCanvasElement(options);\r\n        if (callback) {\r\n          callback(new fabric.Image(canvasEl));\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Converts an object into a HTMLCanvas element\r\n       * @param {Object} options Options object\r\n       * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n       * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n       * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n       * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n       * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n       * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n       * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n       * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\r\n       * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n       */\r\n      toCanvasElement: function(options) {\r\n        options || (options = { });\r\n\r\n        var utils = fabric.util, origParams = utils.saveObjectTransform(this),\r\n            originalGroup = this.group,\r\n            originalShadow = this.shadow, abs = Math.abs,\r\n            multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\r\n        delete this.group;\r\n        if (options.withoutTransform) {\r\n          utils.resetObjectTransform(this);\r\n        }\r\n        if (options.withoutShadow) {\r\n          this.shadow = null;\r\n        }\r\n\r\n        var el = fabric.util.createCanvasElement(),\r\n            // skip canvas zoom and calculate with setCoords now.\r\n            boundingRect = this.getBoundingRect(true, true),\r\n            shadow = this.shadow, scaling,\r\n            shadowOffset = { x: 0, y: 0 }, shadowBlur,\r\n            width, height;\r\n\r\n        if (shadow) {\r\n          shadowBlur = shadow.blur;\r\n          if (shadow.nonScaling) {\r\n            scaling = { scaleX: 1, scaleY: 1 };\r\n          }\r\n          else {\r\n            scaling = this.getObjectScaling();\r\n          }\r\n          // consider non scaling shadow.\r\n          shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * (abs(scaling.scaleX));\r\n          shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * (abs(scaling.scaleY));\r\n        }\r\n        width = boundingRect.width + shadowOffset.x;\r\n        height = boundingRect.height + shadowOffset.y;\r\n        // if the current width/height is not an integer\r\n        // we need to make it so.\r\n        el.width = Math.ceil(width);\r\n        el.height = Math.ceil(height);\r\n        var canvas = new fabric.StaticCanvas(el, {\r\n          enableRetinaScaling: false,\r\n          renderOnAddRemove: false,\r\n          skipOffscreen: false,\r\n        });\r\n        if (options.format === 'jpeg') {\r\n          canvas.backgroundColor = '#fff';\r\n        }\r\n        this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\r\n\r\n        var originalCanvas = this.canvas;\r\n        canvas.add(this);\r\n        var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\r\n        this.shadow = originalShadow;\r\n        this.canvas = originalCanvas;\r\n        if (originalGroup) {\r\n          this.group = originalGroup;\r\n        }\r\n        this.set(origParams).setCoords();\r\n        // canvas.dispose will call image.dispose that will nullify the elements\r\n        // since this canvas is a simple element for the process, we remove references\r\n        // to objects in this way in order to avoid object trashing.\r\n        canvas._objects = [];\r\n        canvas.dispose();\r\n        canvas = null;\r\n\r\n        return canvasEl;\r\n      },\r\n\r\n      /**\r\n       * Converts an object into a data-url-like string\r\n       * @param {Object} options Options object\r\n       * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n       * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n       * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n       * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n       * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n       * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n       * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n       * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n       * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n       * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\r\n       * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n       */\r\n      toDataURL: function(options) {\r\n        options || (options = { });\r\n        return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\r\n      },\r\n\r\n      /**\r\n       * Returns true if specified type is identical to the type of an instance\r\n       * @param {String} type Type to check against\r\n       * @return {Boolean}\r\n       */\r\n      isType: function(type) {\r\n        return this.type === type;\r\n      },\r\n\r\n      /**\r\n       * Returns complexity of an instance\r\n       * @return {Number} complexity of this instance (is 1 unless subclassed)\r\n       */\r\n      complexity: function() {\r\n        return 1;\r\n      },\r\n\r\n      /**\r\n       * Returns a JSON representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} JSON\r\n       */\r\n      toJSON: function(propertiesToInclude) {\r\n        // delegate, not alias\r\n        return this.toObject(propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * Sets gradient (fill or stroke) of an object\r\n       * percentages for x1,x2,y1,y2,r1,r2 together with gradientUnits 'pixels', are not supported.\r\n       * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\r\n       * @param {String} property Property name 'stroke' or 'fill'\r\n       * @param {Object} [options] Options object\r\n       * @param {String} [options.type] Type of gradient 'radial' or 'linear'\r\n       * @param {Number} [options.x1=0] x-coordinate of start point\r\n       * @param {Number} [options.y1=0] y-coordinate of start point\r\n       * @param {Number} [options.x2=0] x-coordinate of end point\r\n       * @param {Number} [options.y2=0] y-coordinate of end point\r\n       * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\r\n       * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\r\n       * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\r\n       * @param {Object} [options.gradientTransform] transformMatrix for gradient\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       * @deprecated since 3.4.0\r\n       * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\r\n       * @example <caption>Set linear gradient</caption>\r\n       * object.setGradient('fill', {\r\n       *   type: 'linear',\r\n       *   x1: -object.width / 2,\r\n       *   y1: 0,\r\n       *   x2: object.width / 2,\r\n       *   y2: 0,\r\n       *   colorStops: {\r\n       *     0: 'red',\r\n       *     0.5: '#005555',\r\n       *     1: 'rgba(0,0,255,0.5)'\r\n       *   }\r\n       * });\r\n       * canvas.renderAll();\r\n       * @example <caption>Set radial gradient</caption>\r\n       * object.setGradient('fill', {\r\n       *   type: 'radial',\r\n       *   x1: 0,\r\n       *   y1: 0,\r\n       *   x2: 0,\r\n       *   y2: 0,\r\n       *   r1: object.width / 2,\r\n       *   r2: 10,\r\n       *   colorStops: {\r\n       *     0: 'red',\r\n       *     0.5: '#005555',\r\n       *     1: 'rgba(0,0,255,0.5)'\r\n       *   }\r\n       * });\r\n       * canvas.renderAll();\r\n       */\r\n      setGradient: function(property, options) {\r\n        options || (options = { });\r\n\r\n        var gradient = { colorStops: [] };\r\n\r\n        gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\r\n        gradient.coords = {\r\n          x1: options.x1,\r\n          y1: options.y1,\r\n          x2: options.x2,\r\n          y2: options.y2\r\n        };\r\n        gradient.gradientUnits = options.gradientUnits || 'pixels';\r\n        if (options.r1 || options.r2) {\r\n          gradient.coords.r1 = options.r1;\r\n          gradient.coords.r2 = options.r2;\r\n        }\r\n\r\n        gradient.gradientTransform = options.gradientTransform;\r\n        fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\r\n\r\n        return this.set(property, fabric.Gradient.forObject(this, gradient));\r\n      },\r\n\r\n      /**\r\n       * Sets pattern fill of an object\r\n       * @param {Object} options Options object\r\n       * @param {(String|HTMLImageElement)} options.source Pattern source\r\n       * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\r\n       * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\r\n       * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\r\n       * @param {Function} [callback] Callback to invoke when image set as a pattern\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       * @deprecated since 3.5.0\r\n       * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\r\n       * @example <caption>Set pattern</caption>\r\n       * object.setPatternFill({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n       *   repeat: 'repeat'\r\n       * },canvas.renderAll.bind(canvas));\r\n       */\r\n      setPatternFill: function(options, callback) {\r\n        return this.set('fill', new fabric.Pattern(options, callback));\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.Object#shadow|shadow} of an object\r\n       * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\r\n       * @param {String} [options.color=rgb(0,0,0)] Shadow color\r\n       * @param {Number} [options.blur=0] Shadow blur\r\n       * @param {Number} [options.offsetX=0] Shadow horizontal offset\r\n       * @param {Number} [options.offsetY=0] Shadow vertical offset\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       * @deprecated since 3.5.0\r\n       * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\r\n       * @example <caption>Set shadow with string notation</caption>\r\n       * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\r\n       * canvas.renderAll();\r\n       * @example <caption>Set shadow with object notation</caption>\r\n       * object.setShadow({\r\n       *   color: 'red',\r\n       *   blur: 10,\r\n       *   offsetX: 20,\r\n       *   offsetY: 20\r\n       * });\r\n       * canvas.renderAll();\r\n       */\r\n      setShadow: function(options) {\r\n        return this.set('shadow', options ? new fabric.Shadow(options) : null);\r\n      },\r\n\r\n      /**\r\n       * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\r\n       * @param {String} color Color value\r\n       * @return {fabric.Object} thisArg\r\n       * @deprecated since 3.5.0\r\n       * @chainable\r\n       */\r\n      setColor: function(color) {\r\n        this.set('fill', color);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets \"angle\" of an instance with centered rotation\r\n       * @param {Number} angle Angle value (in degrees)\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      rotate: function(angle) {\r\n        var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\r\n\r\n        if (shouldCenterOrigin) {\r\n          this._setOriginToCenter();\r\n        }\r\n\r\n        this.set('angle', angle);\r\n\r\n        if (shouldCenterOrigin) {\r\n          this._resetOrigin();\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally on canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      centerH: function () {\r\n        this.canvas && this.canvas.centerObjectH(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally on current viewport of canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterH: function () {\r\n        this.canvas && this.canvas.viewportCenterObjectH(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically on canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      centerV: function () {\r\n        this.canvas && this.canvas.centerObjectV(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically on current viewport of canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterV: function () {\r\n        this.canvas && this.canvas.viewportCenterObjectV(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically and horizontally on canvas to which is was added last\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      center: function () {\r\n        this.canvas && this.canvas.centerObject(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object on current viewport of canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenter: function () {\r\n        this.canvas && this.canvas.viewportCenterObject(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of a pointer relative to an object\r\n       * @param {Event} e Event to operate upon\r\n       * @param {Object} [pointer] Pointer to operate upon (instead of event)\r\n       * @return {Object} Coordinates of a pointer (x, y)\r\n       */\r\n      getLocalPointer: function(e, pointer) {\r\n        pointer = pointer || this.canvas.getPointer(e);\r\n        var pClicked = new fabric.Point(pointer.x, pointer.y),\r\n            objectLeftTop = this._getLeftTopCoords();\r\n        if (this.angle) {\r\n          pClicked = fabric.util.rotatePoint(\r\n            pClicked, objectLeftTop, degreesToRadians(-this.angle));\r\n        }\r\n        return {\r\n          x: pClicked.x - objectLeftTop.x,\r\n          y: pClicked.y - objectLeftTop.y\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Sets canvas globalCompositeOperation for specific object\r\n       * custom composition operation for the particular object can be specified using globalCompositeOperation property\r\n       * @param {CanvasRenderingContext2D} ctx Rendering canvas context\r\n       */\r\n      _setupCompositeOperation: function (ctx) {\r\n        if (this.globalCompositeOperation) {\r\n          ctx.globalCompositeOperation = this.globalCompositeOperation;\r\n        }\r\n      }\r\n    });\r\n\r\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\r\n\r\n    extend(fabric.Object.prototype, fabric.Observable);\r\n\r\n    /**\r\n     * Defines the number of fraction digits to use when serializing object values.\r\n     * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\r\n     * @static\r\n     * @memberOf fabric.Object\r\n     * @constant\r\n     * @type Number\r\n     */\r\n    fabric.Object.NUM_FRACTION_DIGITS = 2;\r\n\r\n    fabric.Object._fromObject = function(className, object, callback, extraParam) {\r\n      var klass = fabric[className];\r\n      object = clone(object, true);\r\n      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\r\n        if (typeof patterns[0] !== 'undefined') {\r\n          object.fill = patterns[0];\r\n        }\r\n        if (typeof patterns[1] !== 'undefined') {\r\n          object.stroke = patterns[1];\r\n        }\r\n        fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\r\n          object.clipPath = enlivedProps[0];\r\n          var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\r\n          callback && callback(instance);\r\n        });\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Unique id used internally when creating SVG elements\r\n     * @static\r\n     * @memberOf fabric.Object\r\n     * @type Number\r\n     */\r\n    fabric.Object.__uid = 0;\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    var degreesToRadians = fabric.util.degreesToRadians,\r\n        originXOffset = {\r\n          left: -0.5,\r\n          center: 0,\r\n          right: 0.5\r\n        },\r\n        originYOffset = {\r\n          top: -0.5,\r\n          center: 0,\r\n          bottom: 0.5\r\n        };\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Translates the coordinates from a set of origin to another (based on the object's dimensions)\r\n       * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n       * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\r\n        var x = point.x,\r\n            y = point.y,\r\n            offsetX, offsetY, dim;\r\n\r\n        if (typeof fromOriginX === 'string') {\r\n          fromOriginX = originXOffset[fromOriginX];\r\n        }\r\n        else {\r\n          fromOriginX -= 0.5;\r\n        }\r\n\r\n        if (typeof toOriginX === 'string') {\r\n          toOriginX = originXOffset[toOriginX];\r\n        }\r\n        else {\r\n          toOriginX -= 0.5;\r\n        }\r\n\r\n        offsetX = toOriginX - fromOriginX;\r\n\r\n        if (typeof fromOriginY === 'string') {\r\n          fromOriginY = originYOffset[fromOriginY];\r\n        }\r\n        else {\r\n          fromOriginY -= 0.5;\r\n        }\r\n\r\n        if (typeof toOriginY === 'string') {\r\n          toOriginY = originYOffset[toOriginY];\r\n        }\r\n        else {\r\n          toOriginY -= 0.5;\r\n        }\r\n\r\n        offsetY = toOriginY - fromOriginY;\r\n\r\n        if (offsetX || offsetY) {\r\n          dim = this._getTransformedDimensions();\r\n          x = point.x + offsetX * dim.x;\r\n          y = point.y + offsetY * dim.y;\r\n        }\r\n\r\n        return new fabric.Point(x, y);\r\n      },\r\n\r\n      /**\r\n       * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\r\n       * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      translateToCenterPoint: function(point, originX, originY) {\r\n        var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\r\n        if (this.angle) {\r\n          return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\r\n        }\r\n        return p;\r\n      },\r\n\r\n      /**\r\n       * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\r\n       * @param {fabric.Point} center The point which corresponds to center of the object\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      translateToOriginPoint: function(center, originX, originY) {\r\n        var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\r\n        if (this.angle) {\r\n          return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\r\n        }\r\n        return p;\r\n      },\r\n\r\n      /**\r\n       * Returns the real center coordinates of the object\r\n       * @return {fabric.Point}\r\n       */\r\n      getCenterPoint: function() {\r\n        var leftTop = new fabric.Point(this.left, this.top);\r\n        return this.translateToCenterPoint(leftTop, this.originX, this.originY);\r\n      },\r\n\r\n      /**\r\n       * Returns the coordinates of the object based on center coordinates\r\n       * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n       * @return {fabric.Point}\r\n       */\r\n      // getOriginPoint: function(center) {\r\n      //   return this.translateToOriginPoint(center, this.originX, this.originY);\r\n      // },\r\n\r\n      /**\r\n       * Returns the coordinates of the object as if it has a different origin\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      getPointByOrigin: function(originX, originY) {\r\n        var center = this.getCenterPoint();\r\n        return this.translateToOriginPoint(center, originX, originY);\r\n      },\r\n\r\n      /**\r\n       * Returns the point in local coordinates\r\n       * @param {fabric.Point} point The point relative to the global coordinate system\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      toLocalPoint: function(point, originX, originY) {\r\n        var center = this.getCenterPoint(),\r\n            p, p2;\r\n\r\n        if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\r\n          p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\r\n        }\r\n        else {\r\n          p = new fabric.Point(this.left, this.top);\r\n        }\r\n\r\n        p2 = new fabric.Point(point.x, point.y);\r\n        if (this.angle) {\r\n          p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\r\n        }\r\n        return p2.subtractEquals(p);\r\n      },\r\n\r\n      /**\r\n       * Returns the point in global coordinates\r\n       * @param {fabric.Point} The point relative to the local coordinate system\r\n       * @return {fabric.Point}\r\n       */\r\n      // toGlobalPoint: function(point) {\r\n      //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\r\n      // },\r\n\r\n      /**\r\n       * Sets the position of the object taking into consideration the object's origin\r\n       * @param {fabric.Point} pos The new position of the object\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {void}\r\n       */\r\n      setPositionByOrigin: function(pos, originX, originY) {\r\n        var center = this.translateToCenterPoint(pos, originX, originY),\r\n            position = this.translateToOriginPoint(center, this.originX, this.originY);\r\n        this.set('left', position.x);\r\n        this.set('top', position.y);\r\n      },\r\n\r\n      /**\r\n       * @param {String} to One of 'left', 'center', 'right'\r\n       */\r\n      adjustPosition: function(to) {\r\n        var angle = degreesToRadians(this.angle),\r\n            hypotFull = this.getScaledWidth(),\r\n            xFull = fabric.util.cos(angle) * hypotFull,\r\n            yFull = fabric.util.sin(angle) * hypotFull,\r\n            offsetFrom, offsetTo;\r\n\r\n        //TODO: this function does not consider mixed situation like top, center.\r\n        if (typeof this.originX === 'string') {\r\n          offsetFrom = originXOffset[this.originX];\r\n        }\r\n        else {\r\n          offsetFrom = this.originX - 0.5;\r\n        }\r\n        if (typeof to === 'string') {\r\n          offsetTo = originXOffset[to];\r\n        }\r\n        else {\r\n          offsetTo = to - 0.5;\r\n        }\r\n        this.left += xFull * (offsetTo - offsetFrom);\r\n        this.top += yFull * (offsetTo - offsetFrom);\r\n        this.setCoords();\r\n        this.originX = to;\r\n      },\r\n\r\n      /**\r\n       * Sets the origin/position of the object to it's center point\r\n       * @private\r\n       * @return {void}\r\n       */\r\n      _setOriginToCenter: function() {\r\n        this._originalOriginX = this.originX;\r\n        this._originalOriginY = this.originY;\r\n\r\n        var center = this.getCenterPoint();\r\n\r\n        this.originX = 'center';\r\n        this.originY = 'center';\r\n\r\n        this.left = center.x;\r\n        this.top = center.y;\r\n      },\r\n\r\n      /**\r\n       * Resets the origin/position of the object to it's original origin\r\n       * @private\r\n       * @return {void}\r\n       */\r\n      _resetOrigin: function() {\r\n        var originPoint = this.translateToOriginPoint(\r\n          this.getCenterPoint(),\r\n          this._originalOriginX,\r\n          this._originalOriginY);\r\n\r\n        this.originX = this._originalOriginX;\r\n        this.originY = this._originalOriginY;\r\n\r\n        this.left = originPoint.x;\r\n        this.top = originPoint.y;\r\n\r\n        this._originalOriginX = null;\r\n        this._originalOriginY = null;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getLeftTopCoords: function() {\r\n        return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\r\n      },\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function getCoords(coords) {\r\n      return [\r\n        new fabric.Point(coords.tl.x, coords.tl.y),\r\n        new fabric.Point(coords.tr.x, coords.tr.y),\r\n        new fabric.Point(coords.br.x, coords.br.y),\r\n        new fabric.Point(coords.bl.x, coords.bl.y)\r\n      ];\r\n    }\r\n\r\n    var degreesToRadians = fabric.util.degreesToRadians,\r\n        multiplyMatrices = fabric.util.multiplyTransformMatrices,\r\n        transformPoint = fabric.util.transformPoint;\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Describe object's corner position in canvas element coordinates.\r\n       * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\r\n       * each property is an object with x, y and corner.\r\n       * The `corner` property contains in a similar manner the 4 points of the\r\n       * interactive area of the corner.\r\n       * The coordinates depends from this properties: width, height, scaleX, scaleY\r\n       * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\r\n       * The coordinates get updated with @method setCoords.\r\n       * You can calculate them without updating with @method calcCoords;\r\n       * @memberOf fabric.Object.prototype\r\n       */\r\n      oCoords: null,\r\n\r\n      /**\r\n       * Describe object's corner position in canvas object absolute coordinates\r\n       * properties are tl,tr,bl,br and describe the four main corner.\r\n       * each property is an object with x, y, instance of Fabric.Point.\r\n       * The coordinates depends from this properties: width, height, scaleX, scaleY\r\n       * skewX, skewY, angle, strokeWidth, top, left.\r\n       * Those coordinates are useful to understand where an object is. They get updated\r\n       * with oCoords but they do not need to be updated when zoom or panning change.\r\n       * The coordinates get updated with @method setCoords.\r\n       * You can calculate them without updating with @method calcCoords(true);\r\n       * @memberOf fabric.Object.prototype\r\n       */\r\n      aCoords: null,\r\n\r\n      /**\r\n       * storage for object transform matrix\r\n       */\r\n      ownMatrixCache: null,\r\n\r\n      /**\r\n       * storage for object full transform matrix\r\n       */\r\n      matrixCache: null,\r\n\r\n      /**\r\n       * return correct set of coordinates for intersection\r\n       */\r\n      getCoords: function(absolute, calculate) {\r\n        if (!this.oCoords) {\r\n          this.setCoords();\r\n        }\r\n        var coords = absolute ? this.aCoords : this.oCoords;\r\n        return getCoords(calculate ? this.calcCoords(absolute) : coords);\r\n      },\r\n\r\n      /**\r\n       * Checks if object intersects with an area formed by 2 points\r\n       * @param {Object} pointTL top-left point of area\r\n       * @param {Object} pointBR bottom-right point of area\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object intersects with an area formed by 2 points\r\n       */\r\n      intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\r\n        var coords = this.getCoords(absolute, calculate),\r\n            intersection = fabric.Intersection.intersectPolygonRectangle(\r\n              coords,\r\n              pointTL,\r\n              pointBR\r\n            );\r\n        return intersection.status === 'Intersection';\r\n      },\r\n\r\n      /**\r\n       * Checks if object intersects with another object\r\n       * @param {Object} other Object to test\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object intersects with another object\r\n       */\r\n      intersectsWithObject: function(other, absolute, calculate) {\r\n        var intersection = fabric.Intersection.intersectPolygonPolygon(\r\n          this.getCoords(absolute, calculate),\r\n          other.getCoords(absolute, calculate)\r\n        );\r\n\r\n        return intersection.status === 'Intersection'\r\n          || other.isContainedWithinObject(this, absolute, calculate)\r\n          || this.isContainedWithinObject(other, absolute, calculate);\r\n      },\r\n\r\n      /**\r\n       * Checks if object is fully contained within area of another object\r\n       * @param {Object} other Object to test\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is fully contained within area of another object\r\n       */\r\n      isContainedWithinObject: function(other, absolute, calculate) {\r\n        var points = this.getCoords(absolute, calculate),\r\n            i = 0, lines = other._getImageLines(\r\n              calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\r\n            );\r\n        for (; i < 4; i++) {\r\n          if (!other.containsPoint(points[i], lines)) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Checks if object is fully contained within area formed by 2 points\r\n       * @param {Object} pointTL top-left point of area\r\n       * @param {Object} pointBR bottom-right point of area\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is fully contained within area formed by 2 points\r\n       */\r\n      isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\r\n        var boundingRect = this.getBoundingRect(absolute, calculate);\r\n\r\n        return (\r\n          boundingRect.left >= pointTL.x &&\r\n          boundingRect.left + boundingRect.width <= pointBR.x &&\r\n          boundingRect.top >= pointTL.y &&\r\n          boundingRect.top + boundingRect.height <= pointBR.y\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Checks if point is inside the object\r\n       * @param {fabric.Point} point Point to check against\r\n       * @param {Object} [lines] object returned from @method _getImageLines\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if point is inside the object\r\n       */\r\n      containsPoint: function(point, lines, absolute, calculate) {\r\n        var lines = lines || this._getImageLines(\r\n              calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\r\n            ),\r\n            xPoints = this._findCrossPoints(point, lines);\r\n\r\n        // if xPoints is odd then point is inside the object\r\n        return (xPoints !== 0 && xPoints % 2 === 1);\r\n      },\r\n\r\n      /**\r\n       * Checks if object is contained within the canvas with current viewportTransform\r\n       * the check is done stopping at first point that appears on screen\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\r\n       * @return {Boolean} true if object is fully or partially contained within canvas\r\n       */\r\n      isOnScreen: function(calculate) {\r\n        if (!this.canvas) {\r\n          return false;\r\n        }\r\n        var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\r\n        var points = this.getCoords(true, calculate), point;\r\n        for (var i = 0; i < 4; i++) {\r\n          point = points[i];\r\n          if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\r\n            return true;\r\n          }\r\n        }\r\n        // no points on screen, check intersection with absolute coordinates\r\n        if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\r\n          return true;\r\n        }\r\n        return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\r\n      },\r\n\r\n      /**\r\n       * Checks if the object contains the midpoint between canvas extremities\r\n       * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\r\n       * @private\r\n       * @param {Fabric.Point} pointTL Top Left point\r\n       * @param {Fabric.Point} pointBR Top Right point\r\n       * @param {Boolean} calculate use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if the object contains the point\r\n       */\r\n      _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\r\n        // worst case scenario the object is so big that contains the screen\r\n        var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\r\n        if (this.containsPoint(centerPoint, null, true, calculate)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Checks if object is partially contained within the canvas with current viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is partially contained within canvas\r\n       */\r\n      isPartiallyOnScreen: function(calculate) {\r\n        if (!this.canvas) {\r\n          return false;\r\n        }\r\n        var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\r\n        if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\r\n          return true;\r\n        }\r\n        return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\r\n      },\r\n\r\n      /**\r\n       * Method that returns an object with the object edges in it, given the coordinates of the corners\r\n       * @private\r\n       * @param {Object} oCoords Coordinates of the object corners\r\n       */\r\n      _getImageLines: function(oCoords) {\r\n        return {\r\n          topline: {\r\n            o: oCoords.tl,\r\n            d: oCoords.tr\r\n          },\r\n          rightline: {\r\n            o: oCoords.tr,\r\n            d: oCoords.br\r\n          },\r\n          bottomline: {\r\n            o: oCoords.br,\r\n            d: oCoords.bl\r\n          },\r\n          leftline: {\r\n            o: oCoords.bl,\r\n            d: oCoords.tl\r\n          }\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Helper method to determine how many cross points are between the 4 object edges\r\n       * and the horizontal line determined by a point on canvas\r\n       * @private\r\n       * @param {fabric.Point} point Point to check\r\n       * @param {Object} lines Coordinates of the object being evaluated\r\n       */\r\n      // remove yi, not used but left code here just in case.\r\n      _findCrossPoints: function(point, lines) {\r\n        var b1, b2, a1, a2, xi, // yi,\r\n            xcount = 0,\r\n            iLine;\r\n\r\n        for (var lineKey in lines) {\r\n          iLine = lines[lineKey];\r\n          // optimisation 1: line below point. no cross\r\n          if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\r\n            continue;\r\n          }\r\n          // optimisation 2: line above point. no cross\r\n          if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\r\n            continue;\r\n          }\r\n          // optimisation 3: vertical line case\r\n          if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\r\n            xi = iLine.o.x;\r\n            // yi = point.y;\r\n          }\r\n          // calculate the intersection point\r\n          else {\r\n            b1 = 0;\r\n            b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\r\n            a1 = point.y - b1 * point.x;\r\n            a2 = iLine.o.y - b2 * iLine.o.x;\r\n\r\n            xi = -(a1 - a2) / (b1 - b2);\r\n            // yi = a1 + b1 * xi;\r\n          }\r\n          // dont count xi < point.x cases\r\n          if (xi >= point.x) {\r\n            xcount += 1;\r\n          }\r\n          // optimisation 4: specific for square images\r\n          if (xcount === 2) {\r\n            break;\r\n          }\r\n        }\r\n        return xcount;\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of object's bounding rectangle (left, top, width, height)\r\n       * the box is intended as aligned to axis of canvas.\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\r\n       * @return {Object} Object with left, top, width, height properties\r\n       */\r\n      getBoundingRect: function(absolute, calculate) {\r\n        var coords = this.getCoords(absolute, calculate);\r\n        return fabric.util.makeBoundingBoxFromPoints(coords);\r\n      },\r\n\r\n      /**\r\n       * Returns width of an object's bounding box counting transformations\r\n       * before 2.0 it was named getWidth();\r\n       * @return {Number} width value\r\n       */\r\n      getScaledWidth: function() {\r\n        return this._getTransformedDimensions().x;\r\n      },\r\n\r\n      /**\r\n       * Returns height of an object bounding box counting transformations\r\n       * before 2.0 it was named getHeight();\r\n       * @return {Number} height value\r\n       */\r\n      getScaledHeight: function() {\r\n        return this._getTransformedDimensions().y;\r\n      },\r\n\r\n      /**\r\n       * Makes sure the scale is valid and modifies it if necessary\r\n       * @private\r\n       * @param {Number} value\r\n       * @return {Number}\r\n       */\r\n      _constrainScale: function(value) {\r\n        if (Math.abs(value) < this.minScaleLimit) {\r\n          if (value < 0) {\r\n            return -this.minScaleLimit;\r\n          }\r\n          else {\r\n            return this.minScaleLimit;\r\n          }\r\n        }\r\n        else if (value === 0) {\r\n          return 0.0001;\r\n        }\r\n        return value;\r\n      },\r\n\r\n      /**\r\n       * Scales an object (equally by x and y)\r\n       * @param {Number} value Scale factor\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      scale: function(value) {\r\n        this._set('scaleX', value);\r\n        this._set('scaleY', value);\r\n        return this.setCoords();\r\n      },\r\n\r\n      /**\r\n       * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\r\n       * @param {Number} value New width value\r\n       * @param {Boolean} absolute ignore viewport\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      scaleToWidth: function(value, absolute) {\r\n        // adjust to bounding rect factor so that rotated shapes would fit as well\r\n        var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\r\n        return this.scale(value / this.width / boundingRectFactor);\r\n      },\r\n\r\n      /**\r\n       * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\r\n       * @param {Number} value New height value\r\n       * @param {Boolean} absolute ignore viewport\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      scaleToHeight: function(value, absolute) {\r\n        // adjust to bounding rect factor so that rotated shapes would fit as well\r\n        var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\r\n        return this.scale(value / this.height / boundingRectFactor);\r\n      },\r\n\r\n      /**\r\n       * Calculates and returns the .coords of an object.\r\n       * @return {Object} Object with tl, tr, br, bl ....\r\n       * @chainable\r\n       */\r\n      calcCoords: function(absolute) {\r\n        var rotateMatrix = this._calcRotateMatrix(),\r\n            translateMatrix = this._calcTranslateMatrix(),\r\n            startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\r\n            vpt = this.getViewportTransform(),\r\n            finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\r\n            dim = this._getTransformedDimensions(),\r\n            w = dim.x / 2, h = dim.y / 2,\r\n            tl = transformPoint({ x: -w, y: -h }, finalMatrix),\r\n            tr = transformPoint({ x: w, y: -h }, finalMatrix),\r\n            bl = transformPoint({ x: -w, y: h }, finalMatrix),\r\n            br = transformPoint({ x: w, y: h }, finalMatrix);\r\n        if (!absolute) {\r\n          var padding = this.padding, angle = degreesToRadians(this.angle),\r\n              cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\r\n              cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\r\n              cosPMinusSinP = cosP - sinP;\r\n          if (padding) {\r\n            tl.x -= cosPMinusSinP;\r\n            tl.y -= cosPSinP;\r\n            tr.x += cosPSinP;\r\n            tr.y -= cosPMinusSinP;\r\n            bl.x -= cosPSinP;\r\n            bl.y += cosPMinusSinP;\r\n            br.x += cosPMinusSinP;\r\n            br.y += cosPSinP;\r\n          }\r\n          var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\r\n              mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\r\n              mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\r\n              mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\r\n              mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\r\n        }\r\n\r\n        // if (!absolute) {\r\n        //   var canvas = this.canvas;\r\n        //   setTimeout(function() {\r\n        //     canvas.contextTop.clearRect(0, 0, 700, 700);\r\n        //     canvas.contextTop.fillStyle = 'green';\r\n        //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\r\n        //   }, 50);\r\n        // }\r\n\r\n        var coords = {\r\n          // corners\r\n          tl: tl, tr: tr, br: br, bl: bl,\r\n        };\r\n        if (!absolute) {\r\n          // middle\r\n          coords.ml = ml;\r\n          coords.mt = mt;\r\n          coords.mr = mr;\r\n          coords.mb = mb;\r\n          // rotating point\r\n          coords.mtr = mtr;\r\n        }\r\n        return coords;\r\n      },\r\n\r\n      /**\r\n       * Sets corner position coordinates based on current angle, width and height.\r\n       * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\r\n       * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\r\n       * @param {Boolean} [skipAbsolute] skip calculation of aCoords, useful in setViewportTransform\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setCoords: function(ignoreZoom, skipAbsolute) {\r\n        this.oCoords = this.calcCoords(ignoreZoom);\r\n        if (!skipAbsolute) {\r\n          this.aCoords = this.calcCoords(true);\r\n        }\r\n\r\n        // set coordinates of the draggable boxes in the corners used to scale/rotate the image\r\n        ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * calculate rotation matrix of an object\r\n       * @return {Array} rotation matrix for the object\r\n       */\r\n      _calcRotateMatrix: function() {\r\n        return fabric.util.calcRotateMatrix(this);\r\n      },\r\n\r\n      /**\r\n       * calculate the translation matrix for an object transform\r\n       * @return {Array} rotation matrix for the object\r\n       */\r\n      _calcTranslateMatrix: function() {\r\n        var center = this.getCenterPoint();\r\n        return [1, 0, 0, 1, center.x, center.y];\r\n      },\r\n\r\n      transformMatrixKey: function(skipGroup) {\r\n        var sep = '_', prefix = '';\r\n        if (!skipGroup && this.group) {\r\n          prefix = this.group.transformMatrixKey(skipGroup) + sep;\r\n        };\r\n        return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\r\n          sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\r\n          sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\r\n      },\r\n\r\n      /**\r\n       * calculate transform matrix that represents the current transformations from the\r\n       * object's properties.\r\n       * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\r\n       * @return {Array} transform matrix for the object\r\n       */\r\n      calcTransformMatrix: function(skipGroup) {\r\n        if (skipGroup) {\r\n          return this.calcOwnMatrix();\r\n        }\r\n        var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\r\n        if (cache.key === key) {\r\n          return cache.value;\r\n        }\r\n        var matrix = this.calcOwnMatrix();\r\n        if (this.group) {\r\n          matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\r\n        }\r\n        cache.key = key;\r\n        cache.value = matrix;\r\n        return matrix;\r\n      },\r\n\r\n      /**\r\n       * calculate transform matrix that represents the current transformations from the\r\n       * object's properties, this matrix does not include the group transformation\r\n       * @return {Array} transform matrix for the object\r\n       */\r\n      calcOwnMatrix: function() {\r\n        var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\r\n        if (cache.key === key) {\r\n          return cache.value;\r\n        }\r\n        var tMatrix = this._calcTranslateMatrix();\r\n        this.translateX = tMatrix[4];\r\n        this.translateY = tMatrix[5];\r\n        cache.key = key;\r\n        cache.value = fabric.util.composeMatrix(this);\r\n        return cache.value;\r\n      },\r\n\r\n      /*\r\n       * Calculate object dimensions from its properties\r\n       * @private\r\n       * @deprecated since 3.4.0, please use fabric.util._calcDimensionsTransformMatrix\r\n       * not including or including flipX, flipY to emulate the flipping boolean\r\n       * @return {Object} .x width dimension\r\n       * @return {Object} .y height dimension\r\n       */\r\n      _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\r\n        return fabric.util.calcDimensionsMatrix({\r\n          skewX: skewX,\r\n          skewY: skewY,\r\n          scaleX: this.scaleX * (flipping && this.flipX ? -1 : 1),\r\n          scaleY: this.scaleY * (flipping && this.flipY ? -1 : 1)\r\n        });\r\n      },\r\n\r\n      /*\r\n       * Calculate object dimensions from its properties\r\n       * @private\r\n       * @return {Object} .x width dimension\r\n       * @return {Object} .y height dimension\r\n       */\r\n      _getNonTransformedDimensions: function() {\r\n        var strokeWidth = this.strokeWidth,\r\n            w = this.width + strokeWidth,\r\n            h = this.height + strokeWidth;\r\n        return { x: w, y: h };\r\n      },\r\n\r\n      /*\r\n       * Calculate object bounding box dimensions from its properties scale, skew.\r\n       * The skewX and skewY parameters are used in the skewing logic path and\r\n       * do not provide something useful to common use cases.\r\n       * @param {Number} [skewX], a value to override current skewX\r\n       * @param {Number} [skewY], a value to override current skewY\r\n       * @private\r\n       * @return {Object} .x width dimension\r\n       * @return {Object} .y height dimension\r\n       */\r\n      _getTransformedDimensions: function(skewX, skewY) {\r\n        if (typeof skewX === 'undefined') {\r\n          skewX = this.skewX;\r\n        }\r\n        if (typeof skewY === 'undefined') {\r\n          skewY = this.skewY;\r\n        }\r\n        var dimensions = this._getNonTransformedDimensions(), dimX, dimY,\r\n            noSkew = skewX === 0 && skewY === 0;\r\n\r\n        if (this.strokeUniform) {\r\n          dimX = this.width;\r\n          dimY = this.height;\r\n        }\r\n        else {\r\n          dimX = dimensions.x;\r\n          dimY = dimensions.y;\r\n        }\r\n        if (noSkew) {\r\n          return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\r\n        }\r\n        else {\r\n          dimX /= 2;\r\n          dimY /= 2;\r\n        }\r\n        var points = [\r\n              {\r\n                x: -dimX,\r\n                y: -dimY\r\n              },\r\n              {\r\n                x: dimX,\r\n                y: -dimY\r\n              },\r\n              {\r\n                x: -dimX,\r\n                y: dimY\r\n              },\r\n              {\r\n                x: dimX,\r\n                y: dimY\r\n              }],\r\n            transformMatrix = fabric.util.calcDimensionsMatrix({\r\n              scaleX: this.scaleX,\r\n              scaleY: this.scaleY,\r\n              skewX: skewX,\r\n              skewY: skewY,\r\n            }),\r\n            bbox = fabric.util.makeBoundingBoxFromPoints(points, transformMatrix);\r\n        return this._finalizeDimensions(bbox.width, bbox.height);\r\n      },\r\n\r\n      /*\r\n       * Calculate object bounding box dimensions from its properties scale, skew.\r\n       * @param Number width width of the bbox\r\n       * @param Number height height of the bbox\r\n       * @private\r\n       * @return {Object} .x finalized width dimension\r\n       * @return {Object} .y finalized height dimension\r\n       */\r\n      _finalizeDimensions: function(width, height) {\r\n        return this.strokeUniform ?\r\n          { x: width + this.strokeWidth, y: height + this.strokeWidth }\r\n          :\r\n          { x: width, y: height };\r\n      },\r\n      /*\r\n       * Calculate object dimensions for controls, including padding and canvas zoom.\r\n       * private\r\n       */\r\n      _calculateCurrentDimensions: function()  {\r\n        var vpt = this.getViewportTransform(),\r\n            dim = this._getTransformedDimensions(),\r\n            p = fabric.util.transformPoint(dim, vpt, true);\r\n\r\n        return p.scalarAdd(2 * this.padding);\r\n      },\r\n    });\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * Moves an object to the bottom of the stack of drawn objects\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    sendToBack: function() {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\r\n      }\r\n      else {\r\n        this.canvas.sendToBack(this);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object to the top of the stack of drawn objects\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    bringToFront: function() {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\r\n      }\r\n      else {\r\n        this.canvas.bringToFront(this);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object down in stack of drawn objects\r\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    sendBackwards: function(intersecting) {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\r\n      }\r\n      else {\r\n        this.canvas.sendBackwards(this, intersecting);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object up in stack of drawn objects\r\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    bringForward: function(intersecting) {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\r\n      }\r\n      else {\r\n        this.canvas.bringForward(this, intersecting);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object to specified level in stack of drawn objects\r\n     * @param {Number} index New position of object\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    moveTo: function(index) {\r\n      if (this.group && this.group.type !== 'activeSelection') {\r\n        fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\r\n      }\r\n      else {\r\n        this.canvas.moveTo(this, index);\r\n      }\r\n      return this;\r\n    }\r\n  });\r\n\r\n\r\n  /* _TO_SVG_START_ */\r\n  (function() {\r\n    function getSvgColorString(prop, value) {\r\n      if (!value) {\r\n        return prop + ': none; ';\r\n      }\r\n      else if (value.toLive) {\r\n        return prop + ': url(#SVGID_' + value.id + '); ';\r\n      }\r\n      else {\r\n        var color = new fabric.Color(value),\r\n            str = prop + ': ' + color.toRgb() + '; ',\r\n            opacity = color.getAlpha();\r\n        if (opacity !== 1) {\r\n          //change the color in rgb + opacity\r\n          str += prop + '-opacity: ' + opacity.toString() + '; ';\r\n        }\r\n        return str;\r\n      }\r\n    }\r\n\r\n    var toFixed = fabric.util.toFixed;\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n      /**\r\n       * Returns styles-string for svg-export\r\n       * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n       * @return {String}\r\n       */\r\n      getSvgStyles: function(skipShadow) {\r\n\r\n        var fillRule = this.fillRule ? this.fillRule : 'nonzero',\r\n            strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\r\n            strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\r\n            strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\r\n            strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\r\n            strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\r\n            strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\r\n            opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\r\n            visibility = this.visible ? '' : ' visibility: hidden;',\r\n            filter = skipShadow ? '' : this.getSvgFilter(),\r\n            fill = getSvgColorString('fill', this.fill),\r\n            stroke = getSvgColorString('stroke', this.stroke);\r\n\r\n        return [\r\n          stroke,\r\n          'stroke-width: ', strokeWidth, '; ',\r\n          'stroke-dasharray: ', strokeDashArray, '; ',\r\n          'stroke-linecap: ', strokeLineCap, '; ',\r\n          'stroke-dashoffset: ', strokeDashOffset, '; ',\r\n          'stroke-linejoin: ', strokeLineJoin, '; ',\r\n          'stroke-miterlimit: ', strokeMiterLimit, '; ',\r\n          fill,\r\n          'fill-rule: ', fillRule, '; ',\r\n          'opacity: ', opacity, ';',\r\n          filter,\r\n          visibility\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns styles-string for svg-export\r\n       * @param {Object} style the object from which to retrieve style properties\r\n       * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\r\n       * @return {String}\r\n       */\r\n      getSvgSpanStyles: function(style, useWhiteSpace) {\r\n        var term = '; ';\r\n        var fontFamily = style.fontFamily ?\r\n          'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\r\n            '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\r\n        var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\r\n            fontFamily = fontFamily,\r\n            fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\r\n            fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\r\n            fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\r\n            fill = style.fill ? getSvgColorString('fill', style.fill) : '',\r\n            stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\r\n            textDecoration = this.getSvgTextDecoration(style),\r\n            deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\r\n        if (textDecoration) {\r\n          textDecoration = 'text-decoration: ' + textDecoration + term;\r\n        }\r\n\r\n        return [\r\n          stroke,\r\n          strokeWidth,\r\n          fontFamily,\r\n          fontSize,\r\n          fontStyle,\r\n          fontWeight,\r\n          textDecoration,\r\n          fill,\r\n          deltaY,\r\n          useWhiteSpace ? 'white-space: pre; ' : ''\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns text-decoration property for svg-export\r\n       * @param {Object} style the object from which to retrieve style properties\r\n       * @return {String}\r\n       */\r\n      getSvgTextDecoration: function(style) {\r\n        if ('overline' in style || 'underline' in style || 'linethrough' in style) {\r\n          return (style.overline ? 'overline ' : '') +\r\n            (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\r\n        }\r\n        return '';\r\n      },\r\n\r\n      /**\r\n       * Returns filter for svg shadow\r\n       * @return {String}\r\n       */\r\n      getSvgFilter: function() {\r\n        return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\r\n      },\r\n\r\n      /**\r\n       * Returns id attribute for svg output\r\n       * @return {String}\r\n       */\r\n      getSvgCommons: function() {\r\n        return [\r\n          this.id ? 'id=\"' + this.id + '\" ' : '',\r\n          this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns transform-string for svg-export\r\n       * @param {Boolean} use the full transform or the single object one.\r\n       * @return {String}\r\n       */\r\n      getSvgTransform: function(full, additionalTransform) {\r\n        var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\r\n            svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\r\n        return svgTransform +\r\n          (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\r\n      },\r\n\r\n      /**\r\n       * Returns transform-string for svg-export from the transform matrix of single elements\r\n       * @return {String}\r\n       */\r\n      getSvgTransformMatrix: function() {\r\n        return this.transformMatrix ? ' ' + fabric.util.matrixToSVG(this.transformMatrix) : '';\r\n      },\r\n\r\n      _setSVGBg: function(textBgRects) {\r\n        if (this.backgroundColor) {\r\n          var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n          textBgRects.push(\r\n            '\\t\\t<rect ',\r\n            this._getFillAttributes(this.backgroundColor),\r\n            ' x=\"',\r\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\r\n            '\" y=\"',\r\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\r\n            '\" width=\"',\r\n            toFixed(this.width, NUM_FRACTION_DIGITS),\r\n            '\" height=\"',\r\n            toFixed(this.height, NUM_FRACTION_DIGITS),\r\n            '\"></rect>\\n');\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        return this._createBaseSVGMarkup(this._toSVG(reviver), { reviver: reviver });\r\n      },\r\n\r\n      /**\r\n       * Returns svg clipPath representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toClipPathSVG: function(reviver) {\r\n        return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), { reviver: reviver });\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\r\n        options = options || {};\r\n        var reviver = options.reviver,\r\n            additionalTransform = options.additionalTransform || '',\r\n            commonPieces = [\r\n              this.getSvgTransform(true, additionalTransform),\r\n              this.getSvgCommons(),\r\n            ].join(''),\r\n            // insert commons in the markup, style and svgCommons\r\n            index = objectMarkup.indexOf('COMMON_PARTS');\r\n        objectMarkup[index] = commonPieces;\r\n        return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createBaseSVGMarkup: function(objectMarkup, options) {\r\n        options = options || {};\r\n        var noStyle = options.noStyle,\r\n            reviver = options.reviver,\r\n            styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\r\n            shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\r\n            clipPath = this.clipPath,\r\n            vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\r\n            absoluteClipPath = clipPath && clipPath.absolutePositioned,\r\n            stroke = this.stroke, fill = this.fill, shadow = this.shadow,\r\n            commonPieces, markup = [], clipPathMarkup,\r\n            // insert commons in the markup, style and svgCommons\r\n            index = objectMarkup.indexOf('COMMON_PARTS'),\r\n            additionalTransform = options.additionalTransform;\r\n        if (clipPath) {\r\n          clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\r\n          clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\r\n            clipPath.toClipPathSVG(reviver) +\r\n            '</clipPath>\\n';\r\n        }\r\n        if (absoluteClipPath) {\r\n          markup.push(\r\n            '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\r\n          );\r\n        }\r\n        markup.push(\r\n          '<g ',\r\n          this.getSvgTransform(false),\r\n          !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\r\n          ' >\\n'\r\n        );\r\n        commonPieces = [\r\n          styleInfo,\r\n          vectorEffect,\r\n          noStyle ? '' : this.addPaintOrder(), ' ',\r\n          additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\r\n        ].join('');\r\n        objectMarkup[index] = commonPieces;\r\n        if (fill && fill.toLive) {\r\n          markup.push(fill.toSVG(this));\r\n        }\r\n        if (stroke && stroke.toLive) {\r\n          markup.push(stroke.toSVG(this));\r\n        }\r\n        if (shadow) {\r\n          markup.push(shadow.toSVG(this));\r\n        }\r\n        if (clipPath) {\r\n          markup.push(clipPathMarkup);\r\n        }\r\n        markup.push(objectMarkup.join(''));\r\n        markup.push('</g>\\n');\r\n        absoluteClipPath && markup.push('</g>\\n');\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n\r\n      addPaintOrder: function() {\r\n        return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\r\n      }\r\n    });\r\n  })();\r\n  /* _TO_SVG_END_ */\r\n\r\n\r\n  (function() {\r\n\r\n    var extend = fabric.util.object.extend,\r\n        originalSet = 'stateProperties';\r\n\r\n    /*\r\n      Depends on `stateProperties`\r\n    */\r\n    function saveProps(origin, destination, props) {\r\n      var tmpObj = { }, deep = true;\r\n      props.forEach(function(prop) {\r\n        tmpObj[prop] = origin[prop];\r\n      });\r\n      extend(origin[destination], tmpObj, deep);\r\n    }\r\n\r\n    function _isEqual(origValue, currentValue, firstPass) {\r\n      if (origValue === currentValue) {\r\n        // if the objects are identical, return\r\n        return true;\r\n      }\r\n      else if (Array.isArray(origValue)) {\r\n        if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\r\n          return false;\r\n        }\r\n        for (var i = 0, len = origValue.length; i < len; i++) {\r\n          if (!_isEqual(origValue[i], currentValue[i])) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      else if (origValue && typeof origValue === 'object') {\r\n        var keys = Object.keys(origValue), key;\r\n        if (!currentValue ||\r\n            typeof currentValue !== 'object' ||\r\n            (!firstPass && keys.length !== Object.keys(currentValue).length)\r\n        ) {\r\n          return false;\r\n        }\r\n        for (var i = 0, len = keys.length; i < len; i++) {\r\n          key = keys[i];\r\n          // since clipPath is in the statefull cache list and the clipPath objects\r\n          // would be iterated as an object, this would lead to possible infinite recursion\r\n          if (key === 'canvas') {\r\n            continue;\r\n          }\r\n          if (!_isEqual(origValue[key], currentValue[key])) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Returns true if object state (one of its state properties) was changed\r\n       * @param {String} [propertySet] optional name for the set of property we want to save\r\n       * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\r\n       */\r\n      hasStateChanged: function(propertySet) {\r\n        propertySet = propertySet || originalSet;\r\n        var dashedPropertySet = '_' + propertySet;\r\n        if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\r\n          return true;\r\n        }\r\n        return !_isEqual(this[dashedPropertySet], this, true);\r\n      },\r\n\r\n      /**\r\n       * Saves state of an object\r\n       * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      saveState: function(options) {\r\n        var propertySet = options && options.propertySet || originalSet,\r\n            destination = '_' + propertySet;\r\n        if (!this[destination]) {\r\n          return this.setupState(options);\r\n        }\r\n        saveProps(this, destination, this[propertySet]);\r\n        if (options && options.stateProperties) {\r\n          saveProps(this, destination, options.stateProperties);\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Setups state of an object\r\n       * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      setupState: function(options) {\r\n        options = options || { };\r\n        var propertySet = options.propertySet || originalSet;\r\n        options.propertySet = propertySet;\r\n        this['_' + propertySet] = { };\r\n        this.saveState(options);\r\n        return this;\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var degreesToRadians = fabric.util.degreesToRadians;\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * The object interactivity controls.\r\n       * @private\r\n       */\r\n      _controlsVisibility: null,\r\n\r\n      /**\r\n       * Determines which corner has been clicked\r\n       * @private\r\n       * @param {Object} pointer The pointer indicating the mouse position\r\n       * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\r\n       */\r\n      _findTargetCorner: function(pointer) {\r\n        // objects in group, anykind, are not self modificable,\r\n        // must not return an hovered corner.\r\n        if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\r\n          return false;\r\n        }\r\n\r\n        var ex = pointer.x,\r\n            ey = pointer.y,\r\n            xPoints,\r\n            lines;\r\n        this.__corner = 0;\r\n        for (var i in this.oCoords) {\r\n\r\n          if (!this.isControlVisible(i)) {\r\n            continue;\r\n          }\r\n\r\n          if (i === 'mtr' && !this.hasRotatingPoint) {\r\n            continue;\r\n          }\r\n\r\n          if (this.get('lockUniScaling') &&\r\n             (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\r\n            continue;\r\n          }\r\n\r\n          lines = this._getImageLines(this.oCoords[i].corner);\r\n\r\n          // debugging\r\n\r\n          // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\r\n\r\n          // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\r\n\r\n          // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\r\n\r\n          // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\r\n\r\n          xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\r\n          if (xPoints !== 0 && xPoints % 2 === 1) {\r\n            this.__corner = i;\r\n            return i;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Sets the coordinates of the draggable boxes in the corners of\r\n       * the image used to scale/rotate it.\r\n       * @private\r\n       */\r\n      _setCornerCoords: function() {\r\n        var coords = this.oCoords,\r\n            newTheta = degreesToRadians(45 - this.angle),\r\n            /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\r\n            /* 0.707106 stands for sqrt(2)/2 */\r\n            cornerHypotenuse = this.cornerSize * 0.707106,\r\n            cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\r\n            sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\r\n            x, y;\r\n\r\n        for (var point in coords) {\r\n          x = coords[point].x;\r\n          y = coords[point].y;\r\n          coords[point].corner = {\r\n            tl: {\r\n              x: x - sinHalfOffset,\r\n              y: y - cosHalfOffset\r\n            },\r\n            tr: {\r\n              x: x + cosHalfOffset,\r\n              y: y - sinHalfOffset\r\n            },\r\n            bl: {\r\n              x: x - cosHalfOffset,\r\n              y: y + sinHalfOffset\r\n            },\r\n            br: {\r\n              x: x + sinHalfOffset,\r\n              y: y + cosHalfOffset\r\n            }\r\n          };\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Draws a colored layer behind the object, inside its selection borders.\r\n       * Requires public options: padding, selectionBackgroundColor\r\n       * this function is called when the context is transformed\r\n       * has checks to be skipped when the object is on a staticCanvas\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawSelectionBackground: function(ctx) {\r\n        if (!this.selectionBackgroundColor ||\r\n          (this.canvas && !this.canvas.interactive) ||\r\n          (this.canvas && this.canvas._activeObject !== this)\r\n        ) {\r\n          return this;\r\n        }\r\n        ctx.save();\r\n        var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\r\n            vpt = this.canvas.viewportTransform;\r\n        ctx.translate(center.x, center.y);\r\n        ctx.scale(1 / vpt[0], 1 / vpt[3]);\r\n        ctx.rotate(degreesToRadians(this.angle));\r\n        ctx.fillStyle = this.selectionBackgroundColor;\r\n        ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\r\n        ctx.restore();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Draws borders of an object's bounding box.\r\n       * Requires public properties: width, height\r\n       * Requires public options: padding, borderColor\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @param {Object} styleOverride object to override the object style\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawBorders: function(ctx, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        var wh = this._calculateCurrentDimensions(),\r\n            strokeWidth = 1 / this.borderScaleFactor,\r\n            width = wh.x + strokeWidth,\r\n            height = wh.y + strokeWidth,\r\n            drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\r\n              styleOverride.hasRotatingPoint : this.hasRotatingPoint,\r\n            hasControls = typeof styleOverride.hasControls !== 'undefined' ?\r\n              styleOverride.hasControls : this.hasControls,\r\n            rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\r\n              styleOverride.rotatingPointOffset : this.rotatingPointOffset;\r\n\r\n        ctx.save();\r\n        ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\r\n        this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\r\n\r\n        ctx.strokeRect(\r\n          -width / 2,\r\n          -height / 2,\r\n          width,\r\n          height\r\n        );\r\n\r\n        if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\r\n\r\n          var rotateHeight = -height / 2;\r\n\r\n          ctx.beginPath();\r\n          ctx.moveTo(0, rotateHeight);\r\n          ctx.lineTo(0, rotateHeight - rotatingPointOffset);\r\n          ctx.stroke();\r\n        }\r\n\r\n        ctx.restore();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Draws borders of an object's bounding box when it is inside a group.\r\n       * Requires public properties: width, height\r\n       * Requires public options: padding, borderColor\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @param {object} options object representing current object parameters\r\n       * @param {Object} styleOverride object to override the object style\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawBordersInGroup: function(ctx, options, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        var p = this._getNonTransformedDimensions(),\r\n            matrix = fabric.util.composeMatrix({\r\n              scaleX: options.scaleX,\r\n              scaleY: options.scaleY,\r\n              skewX: options.skewX\r\n            }),\r\n            wh = fabric.util.transformPoint(p, matrix),\r\n            strokeWidth = 1 / this.borderScaleFactor,\r\n            width = wh.x + strokeWidth,\r\n            height = wh.y + strokeWidth;\r\n\r\n        ctx.save();\r\n        this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\r\n        ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\r\n\r\n        ctx.strokeRect(\r\n          -width / 2,\r\n          -height / 2,\r\n          width,\r\n          height\r\n        );\r\n\r\n        ctx.restore();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Draws corners of an object's bounding box.\r\n       * Requires public properties: width, height\r\n       * Requires public options: cornerSize, padding\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @param {Object} styleOverride object to override the object style\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawControls: function(ctx, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        var wh = this._calculateCurrentDimensions(),\r\n            width = wh.x,\r\n            height = wh.y,\r\n            scaleOffset = styleOverride.cornerSize || this.cornerSize,\r\n            left = -(width + scaleOffset) / 2,\r\n            top = -(height + scaleOffset) / 2,\r\n            transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\r\n              styleOverride.transparentCorners : this.transparentCorners,\r\n            hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\r\n              styleOverride.hasRotatingPoint : this.hasRotatingPoint,\r\n            methodName = transparentCorners ? 'stroke' : 'fill';\r\n\r\n        ctx.save();\r\n        ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\r\n        if (!this.transparentCorners) {\r\n          ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\r\n        }\r\n        this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\r\n\r\n        // top-left\r\n        this._drawControl('tl', ctx, methodName,\r\n          left,\r\n          top, styleOverride);\r\n\r\n        // top-right\r\n        this._drawControl('tr', ctx, methodName,\r\n          left + width,\r\n          top, styleOverride);\r\n\r\n        // bottom-left\r\n        this._drawControl('bl', ctx, methodName,\r\n          left,\r\n          top + height, styleOverride);\r\n\r\n        // bottom-right\r\n        this._drawControl('br', ctx, methodName,\r\n          left + width,\r\n          top + height, styleOverride);\r\n\r\n        if (!this.get('lockUniScaling')) {\r\n\r\n          // middle-top\r\n          this._drawControl('mt', ctx, methodName,\r\n            left + width / 2,\r\n            top, styleOverride);\r\n\r\n          // middle-bottom\r\n          this._drawControl('mb', ctx, methodName,\r\n            left + width / 2,\r\n            top + height, styleOverride);\r\n\r\n          // middle-right\r\n          this._drawControl('mr', ctx, methodName,\r\n            left + width,\r\n            top + height / 2, styleOverride);\r\n\r\n          // middle-left\r\n          this._drawControl('ml', ctx, methodName,\r\n            left,\r\n            top + height / 2, styleOverride);\r\n        }\r\n\r\n        // middle-top-rotate\r\n        if (hasRotatingPoint) {\r\n          this._drawControl('mtr', ctx, methodName,\r\n            left + width / 2,\r\n            top - this.rotatingPointOffset, styleOverride);\r\n        }\r\n\r\n        ctx.restore();\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        if (!this.isControlVisible(control)) {\r\n          return;\r\n        }\r\n        var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\r\n        switch (styleOverride.cornerStyle || this.cornerStyle) {\r\n          case 'circle':\r\n            ctx.beginPath();\r\n            ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\r\n            ctx[methodName]();\r\n            if (stroke) {\r\n              ctx.stroke();\r\n            }\r\n            break;\r\n          default:\r\n            this.transparentCorners || ctx.clearRect(left, top, size, size);\r\n            ctx[methodName + 'Rect'](left, top, size, size);\r\n            if (stroke) {\r\n              ctx.strokeRect(left, top, size, size);\r\n            }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns true if the specified control is visible, false otherwise.\r\n       * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\r\n       * @returns {Boolean} true if the specified control is visible, false otherwise\r\n       */\r\n      isControlVisible: function(controlName) {\r\n        return this._getControlsVisibility()[controlName];\r\n      },\r\n\r\n      /**\r\n       * Sets the visibility of the specified control.\r\n       * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\r\n       * @param {Boolean} visible true to set the specified control visible, false otherwise\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setControlVisible: function(controlName, visible) {\r\n        this._getControlsVisibility()[controlName] = visible;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets the visibility state of object controls.\r\n       * @param {Object} [options] Options object\r\n       * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\r\n       * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\r\n       * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\r\n       * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\r\n       * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\r\n       * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\r\n       * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\r\n       * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\r\n       * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setControlsVisibility: function(options) {\r\n        options || (options = { });\r\n\r\n        for (var p in options) {\r\n          this.setControlVisible(p, options[p]);\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns the instance of the control visibility set for this object.\r\n       * @private\r\n       * @returns {Object}\r\n       */\r\n      _getControlsVisibility: function() {\r\n        if (!this._controlsVisibility) {\r\n          this._controlsVisibility = {\r\n            tl: true,\r\n            tr: true,\r\n            br: true,\r\n            bl: true,\r\n            ml: true,\r\n            mt: true,\r\n            mr: true,\r\n            mb: true,\r\n            mtr: true\r\n          };\r\n        }\r\n        return this._controlsVisibility;\r\n      },\r\n\r\n      /**\r\n       * This callback function is called every time _discardActiveObject or _setActiveObject\r\n       * try to to deselect this object. If the function returns true, the process is cancelled\r\n       * @param {Object} [options] options sent from the upper functions\r\n       * @param {Event} [options.e] event if the process is generated by an event\r\n       */\r\n      onDeselect: function() {\r\n        // implemented by sub-classes, as needed.\r\n      },\r\n\r\n\r\n      /**\r\n       * This callback function is called every time _discardActiveObject or _setActiveObject\r\n       * try to to select this object. If the function returns true, the process is cancelled\r\n       * @param {Object} [options] options sent from the upper functions\r\n       * @param {Event} [options.e] event if the process is generated by an event\r\n       */\r\n      onSelect: function() {\r\n        // implemented by sub-classes, as needed.\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Animation duration (in ms) for fx* methods\r\n     * @type Number\r\n     * @default\r\n     */\r\n    FX_DURATION: 500,\r\n\r\n    /**\r\n     * Centers object horizontally with animation.\r\n     * @param {fabric.Object} object Object to center\r\n     * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxCenterObjectH: function (object, callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: object.left,\r\n        endValue: this.getCenter().left,\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          object.set('left', value);\r\n          _this.requestRenderAll();\r\n          onChange();\r\n        },\r\n        onComplete: function() {\r\n          object.setCoords();\r\n          onComplete();\r\n        }\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object vertically with animation.\r\n     * @param {fabric.Object} object Object to center\r\n     * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxCenterObjectV: function (object, callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: object.top,\r\n        endValue: this.getCenter().top,\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          object.set('top', value);\r\n          _this.requestRenderAll();\r\n          onChange();\r\n        },\r\n        onComplete: function() {\r\n          object.setCoords();\r\n          onComplete();\r\n        }\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Same as `fabric.Canvas#remove` but animated\r\n     * @param {fabric.Object} object Object to remove\r\n     * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxRemove: function (object, callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: object.opacity,\r\n        endValue: 0,\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          object.set('opacity', value);\r\n          _this.requestRenderAll();\r\n          onChange();\r\n        },\r\n        onComplete: function () {\r\n          _this.remove(object);\r\n          onComplete();\r\n        }\r\n      });\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n    /**\r\n     * Animates object's properties\r\n     * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\r\n     * @param {Number|Object} value Value to animate property to (if string was given first) or options object\r\n     * @return {fabric.Object} thisArg\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\r\n     * @chainable\r\n     *\r\n     * As object — multiple properties\r\n     *\r\n     * object.animate({ left: ..., top: ... });\r\n     * object.animate({ left: ..., top: ... }, { duration: ... });\r\n     *\r\n     * As string — one property\r\n     *\r\n     * object.animate('left', ...);\r\n     * object.animate('left', { duration: ... });\r\n     *\r\n     */\r\n    animate: function() {\r\n      if (arguments[0] && typeof arguments[0] === 'object') {\r\n        var propsToAnimate = [], prop, skipCallbacks;\r\n        for (prop in arguments[0]) {\r\n          propsToAnimate.push(prop);\r\n        }\r\n        for (var i = 0, len = propsToAnimate.length; i < len; i++) {\r\n          prop = propsToAnimate[i];\r\n          skipCallbacks = i !== len - 1;\r\n          this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\r\n        }\r\n      }\r\n      else {\r\n        this._animate.apply(this, arguments);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} property Property to animate\r\n     * @param {String} to Value to animate to\r\n     * @param {Object} [options] Options object\r\n     * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\r\n     */\r\n    _animate: function(property, to, options, skipCallbacks) {\r\n      var _this = this, propPair;\r\n\r\n      to = to.toString();\r\n\r\n      if (!options) {\r\n        options = { };\r\n      }\r\n      else {\r\n        options = fabric.util.object.clone(options);\r\n      }\r\n\r\n      if (~property.indexOf('.')) {\r\n        propPair = property.split('.');\r\n      }\r\n\r\n      var currentValue = propPair\r\n        ? this.get(propPair[0])[propPair[1]]\r\n        : this.get(property);\r\n\r\n      if (!('from' in options)) {\r\n        options.from = currentValue;\r\n      }\r\n\r\n      if (~to.indexOf('=')) {\r\n        to = currentValue + parseFloat(to.replace('=', ''));\r\n      }\r\n      else {\r\n        to = parseFloat(to);\r\n      }\r\n\r\n      fabric.util.animate({\r\n        startValue: options.from,\r\n        endValue: to,\r\n        byValue: options.by,\r\n        easing: options.easing,\r\n        duration: options.duration,\r\n        abort: options.abort && function() {\r\n          return options.abort.call(_this);\r\n        },\r\n        onChange: function(value, valueProgress, timeProgress) {\r\n          if (propPair) {\r\n            _this[propPair[0]][propPair[1]] = value;\r\n          }\r\n          else {\r\n            _this.set(property, value);\r\n          }\r\n          if (skipCallbacks) {\r\n            return;\r\n          }\r\n          options.onChange && options.onChange(value, valueProgress, timeProgress);\r\n        },\r\n        onComplete: function(value, valueProgress, timeProgress) {\r\n          if (skipCallbacks) {\r\n            return;\r\n          }\r\n\r\n          _this.setCoords();\r\n          options.onComplete && options.onComplete(value, valueProgress, timeProgress);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        clone = fabric.util.object.clone,\r\n        coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\r\n        supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\r\n\r\n    if (fabric.Line) {\r\n      fabric.warn('fabric.Line is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Line class\r\n     * @class fabric.Line\r\n     * @extends fabric.Object\r\n     * @see {@link fabric.Line#initialize} for constructor definition\r\n     */\r\n    fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'line',\r\n\r\n      /**\r\n       * x value or first line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      x1: 0,\r\n\r\n      /**\r\n       * y value or first line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      y1: 0,\r\n\r\n      /**\r\n       * x value or second line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      x2: 0,\r\n\r\n      /**\r\n       * y value or second line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      y2: 0,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Array} [points] Array of points\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Line} thisArg\r\n       */\r\n      initialize: function(points, options) {\r\n        if (!points) {\r\n          points = [0, 0, 0, 0];\r\n        }\r\n\r\n        this.callSuper('initialize', options);\r\n\r\n        this.set('x1', points[0]);\r\n        this.set('y1', points[1]);\r\n        this.set('x2', points[2]);\r\n        this.set('y2', points[3]);\r\n\r\n        this._setWidthHeight(options);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} [options] Options\r\n       */\r\n      _setWidthHeight: function(options) {\r\n        options || (options = { });\r\n\r\n        this.width = Math.abs(this.x2 - this.x1);\r\n        this.height = Math.abs(this.y2 - this.y1);\r\n\r\n        this.left = 'left' in options\r\n          ? options.left\r\n          : this._getLeftToOriginX();\r\n\r\n        this.top = 'top' in options\r\n          ? options.top\r\n          : this._getTopToOriginY();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       */\r\n      _set: function(key, value) {\r\n        this.callSuper('_set', key, value);\r\n        if (typeof coordProps[key] !== 'undefined') {\r\n          this._setWidthHeight();\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\r\n       */\r\n      _getLeftToOriginX: makeEdgeToOriginGetter(\r\n        { // property names\r\n          origin: 'originX',\r\n          axis1: 'x1',\r\n          axis2: 'x2',\r\n          dimension: 'width'\r\n        },\r\n        { // possible values of origin\r\n          nearest: 'left',\r\n          center: 'center',\r\n          farthest: 'right'\r\n        }\r\n      ),\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\r\n       */\r\n      _getTopToOriginY: makeEdgeToOriginGetter(\r\n        { // property names\r\n          origin: 'originY',\r\n          axis1: 'y1',\r\n          axis2: 'y2',\r\n          dimension: 'height'\r\n        },\r\n        { // possible values of origin\r\n          nearest: 'top',\r\n          center: 'center',\r\n          farthest: 'bottom'\r\n        }\r\n      ),\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        ctx.beginPath();\r\n\r\n        if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\r\n          // move from center (of virtual box) to its left/top corner\r\n          // we can't assume x1, y1 is top left and x2, y2 is bottom right\r\n          var p = this.calcLinePoints();\r\n          ctx.moveTo(p.x1, p.y1);\r\n          ctx.lineTo(p.x2, p.y2);\r\n        }\r\n\r\n        ctx.lineWidth = this.strokeWidth;\r\n\r\n        // TODO: test this\r\n        // make sure setting \"fill\" changes color of a line\r\n        // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\r\n        var origStrokeStyle = ctx.strokeStyle;\r\n        ctx.strokeStyle = this.stroke || ctx.fillStyle;\r\n        this.stroke && this._renderStroke(ctx);\r\n        ctx.strokeStyle = origStrokeStyle;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var p = this.calcLinePoints();\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it returns the center of the object in the svg\r\n       * untransformed coordinates\r\n       * @private\r\n       * @return {Object} center point from element coordinates\r\n       */\r\n      _findCenterFromElement: function() {\r\n        return {\r\n          x: (this.x1 + this.x2) / 2,\r\n          y: (this.y1 + this.y2) / 2,\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @methd toObject\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\r\n      },\r\n\r\n      /*\r\n       * Calculate object dimensions from its properties\r\n       * @private\r\n       */\r\n      _getNonTransformedDimensions: function() {\r\n        var dim = this.callSuper('_getNonTransformedDimensions');\r\n        if (this.strokeLineCap === 'butt') {\r\n          if (this.width === 0) {\r\n            dim.y -= this.strokeWidth;\r\n          }\r\n          if (this.height === 0) {\r\n            dim.x -= this.strokeWidth;\r\n          }\r\n        }\r\n        return dim;\r\n      },\r\n\r\n      /**\r\n       * Recalculates line points given width and height\r\n       * @private\r\n       */\r\n      calcLinePoints: function() {\r\n        var xMult = this.x1 <= this.x2 ? -1 : 1,\r\n            yMult = this.y1 <= this.y2 ? -1 : 1,\r\n            x1 = (xMult * this.width * 0.5),\r\n            y1 = (yMult * this.height * 0.5),\r\n            x2 = (xMult * this.width * -0.5),\r\n            y2 = (yMult * this.height * -0.5);\r\n\r\n        return {\r\n          x1: x1,\r\n          x2: x2,\r\n          y1: y1,\r\n          y2: y2\r\n        };\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @return {Array} an array of strings with the specific svg representation\r\n       * of the instance\r\n       */\r\n      _toSVG: function() {\r\n        var p = this.calcLinePoints();\r\n        return [\r\n          '<line ', 'COMMON_PARTS',\r\n          'x1=\"', p.x1,\r\n          '\" y1=\"', p.y1,\r\n          '\" x2=\"', p.x2,\r\n          '\" y2=\"', p.y2,\r\n          '\" />\\n'\r\n        ];\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Line\r\n     * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\r\n     */\r\n    fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\r\n\r\n    /**\r\n     * Returns fabric.Line instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Line\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} [callback] callback function invoked after parsing\r\n     */\r\n    fabric.Line.fromElement = function(element, callback, options) {\r\n      options = options || { };\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\r\n          points = [\r\n            parsedAttributes.x1 || 0,\r\n            parsedAttributes.y1 || 0,\r\n            parsedAttributes.x2 || 0,\r\n            parsedAttributes.y2 || 0\r\n          ];\r\n      callback(new fabric.Line(points, extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Line instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Line\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     */\r\n    fabric.Line.fromObject = function(object, callback) {\r\n      function _callback(instance) {\r\n        delete instance.points;\r\n        callback && callback(instance);\r\n      };\r\n      var options = clone(object, true);\r\n      options.points = [object.x1, object.y1, object.x2, object.y2];\r\n      fabric.Object._fromObject('Line', options, _callback, 'points');\r\n    };\r\n\r\n    /**\r\n     * Produces a function that calculates distance from canvas edge to Line origin.\r\n     */\r\n    function makeEdgeToOriginGetter(propertyNames, originValues) {\r\n      var origin = propertyNames.origin,\r\n          axis1 = propertyNames.axis1,\r\n          axis2 = propertyNames.axis2,\r\n          dimension = propertyNames.dimension,\r\n          nearest = originValues.nearest,\r\n          center = originValues.center,\r\n          farthest = originValues.farthest;\r\n\r\n      return function() {\r\n        switch (this.get(origin)) {\r\n          case nearest:\r\n            return Math.min(this.get(axis1), this.get(axis2));\r\n          case center:\r\n            return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\r\n          case farthest:\r\n            return Math.max(this.get(axis1), this.get(axis2));\r\n        }\r\n      };\r\n\r\n    }\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        pi = Math.PI;\r\n\r\n    if (fabric.Circle) {\r\n      fabric.warn('fabric.Circle is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Circle class\r\n     * @class fabric.Circle\r\n     * @extends fabric.Object\r\n     * @see {@link fabric.Circle#initialize} for constructor definition\r\n     */\r\n    fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'circle',\r\n\r\n      /**\r\n       * Radius of this circle\r\n       * @type Number\r\n       * @default\r\n       */\r\n      radius: 0,\r\n\r\n      /**\r\n       * Start angle of the circle, moving clockwise\r\n       * deprectated type, this should be in degree, this was an oversight.\r\n       * probably will change to degrees in next major version\r\n       * @type Number\r\n       * @default 0\r\n       */\r\n      startAngle: 0,\r\n\r\n      /**\r\n       * End angle of the circle\r\n       * deprectated type, this should be in degree, this was an oversight.\r\n       * probably will change to degrees in next major version\r\n       * @type Number\r\n       * @default 2Pi\r\n       */\r\n      endAngle: pi * 2,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       * @return {fabric.Circle} thisArg\r\n       */\r\n      _set: function(key, value) {\r\n        this.callSuper('_set', key, value);\r\n\r\n        if (key === 'radius') {\r\n          this.setRadius(value);\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @return {Array} an array of strings with the specific svg representation\r\n       * of the instance\r\n       */\r\n      _toSVG: function() {\r\n        var svgString, x = 0, y = 0,\r\n            angle = (this.endAngle - this.startAngle) % ( 2 * pi);\r\n\r\n        if (angle === 0) {\r\n          svgString = [\r\n            '<circle ', 'COMMON_PARTS',\r\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\r\n            'r=\"', this.radius,\r\n            '\" />\\n'\r\n          ];\r\n        }\r\n        else {\r\n          var startX = fabric.util.cos(this.startAngle) * this.radius,\r\n              startY = fabric.util.sin(this.startAngle) * this.radius,\r\n              endX = fabric.util.cos(this.endAngle) * this.radius,\r\n              endY = fabric.util.sin(this.endAngle) * this.radius,\r\n              largeFlag = angle > pi ? '1' : '0';\r\n          svgString = [\r\n            '<path d=\"M ' + startX + ' ' + startY,\r\n            ' A ' + this.radius + ' ' + this.radius,\r\n            ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\r\n            '\" ', 'COMMON_PARTS', ' />\\n'\r\n          ];\r\n        }\r\n        return svgString;\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          0,\r\n          0,\r\n          this.radius,\r\n          this.startAngle,\r\n          this.endAngle, false);\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * Returns horizontal radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRadiusX: function() {\r\n        return this.get('radius') * this.get('scaleX');\r\n      },\r\n\r\n      /**\r\n       * Returns vertical radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRadiusY: function() {\r\n        return this.get('radius') * this.get('scaleY');\r\n      },\r\n\r\n      /**\r\n       * Sets radius of an object (and updates width accordingly)\r\n       * @return {fabric.Circle} thisArg\r\n       */\r\n      setRadius: function(value) {\r\n        this.radius = value;\r\n        return this.set('width', value * 2).set('height', value * 2);\r\n      },\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Circle\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\r\n     */\r\n    fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Circle} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Circle\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} [callback] Options callback invoked after parsing is finished\r\n     * @param {Object} [options] Options object\r\n     * @throws {Error} If value of `r` attribute is missing or invalid\r\n     */\r\n    fabric.Circle.fromElement = function(element, callback) {\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\r\n\r\n      if (!isValidRadius(parsedAttributes)) {\r\n        throw new Error('value of `r` attribute is required and can not be negative');\r\n      }\r\n\r\n      parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\r\n      parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\r\n      callback(new fabric.Circle(parsedAttributes));\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function isValidRadius(attributes) {\r\n      return (('radius' in attributes) && (attributes.radius >= 0));\r\n    }\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns {@link fabric.Circle} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Circle\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     * @return {Object} Instance of fabric.Circle\r\n     */\r\n    fabric.Circle.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Circle', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Triangle) {\r\n      fabric.warn('fabric.Triangle is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Triangle class\r\n     * @class fabric.Triangle\r\n     * @extends fabric.Object\r\n     * @return {fabric.Triangle} thisArg\r\n     * @see {@link fabric.Triangle#initialize} for constructor definition\r\n     */\r\n    fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'triangle',\r\n\r\n      /**\r\n       * Width is set to 100 to compensate the old initialize code that was setting it to 100\r\n       * @type Number\r\n       * @default\r\n       */\r\n      width: 100,\r\n\r\n      /**\r\n       * Height is set to 100 to compensate the old initialize code that was setting it to 100\r\n       * @type Number\r\n       * @default\r\n       */\r\n      height: 100,\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        var widthBy2 = this.width / 2,\r\n            heightBy2 = this.height / 2;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(-widthBy2, heightBy2);\r\n        ctx.lineTo(0, -heightBy2);\r\n        ctx.lineTo(widthBy2, heightBy2);\r\n        ctx.closePath();\r\n\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var widthBy2 = this.width / 2,\r\n            heightBy2 = this.height / 2;\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @return {Array} an array of strings with the specific svg representation\r\n       * of the instance\r\n       */\r\n      _toSVG: function() {\r\n        var widthBy2 = this.width / 2,\r\n            heightBy2 = this.height / 2,\r\n            points = [\r\n              -widthBy2 + ' ' + heightBy2,\r\n              '0 ' + -heightBy2,\r\n              widthBy2 + ' ' + heightBy2\r\n            ].join(',');\r\n        return [\r\n          '<polygon ', 'COMMON_PARTS',\r\n          'points=\"', points,\r\n          '\" />'\r\n        ];\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /**\r\n     * Returns {@link fabric.Triangle} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Triangle\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     */\r\n    fabric.Triangle.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Triangle', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        piBy2   = Math.PI * 2;\r\n\r\n    if (fabric.Ellipse) {\r\n      fabric.warn('fabric.Ellipse is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Ellipse class\r\n     * @class fabric.Ellipse\r\n     * @extends fabric.Object\r\n     * @return {fabric.Ellipse} thisArg\r\n     * @see {@link fabric.Ellipse#initialize} for constructor definition\r\n     */\r\n    fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'ellipse',\r\n\r\n      /**\r\n       * Horizontal radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      rx:   0,\r\n\r\n      /**\r\n       * Vertical radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      ry:   0,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Ellipse} thisArg\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        this.set('rx', options && options.rx || 0);\r\n        this.set('ry', options && options.ry || 0);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       * @return {fabric.Ellipse} thisArg\r\n       */\r\n      _set: function(key, value) {\r\n        this.callSuper('_set', key, value);\r\n        switch (key) {\r\n\r\n          case 'rx':\r\n            this.rx = value;\r\n            this.set('width', value * 2);\r\n            break;\r\n\r\n          case 'ry':\r\n            this.ry = value;\r\n            this.set('height', value * 2);\r\n            break;\r\n\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns horizontal radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRx: function() {\r\n        return this.get('rx') * this.get('scaleX');\r\n      },\r\n\r\n      /**\r\n       * Returns Vertical radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRy: function() {\r\n        return this.get('ry') * this.get('scaleY');\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @return {Array} an array of strings with the specific svg representation\r\n       * of the instance\r\n       */\r\n      _toSVG: function() {\r\n        return [\r\n          '<ellipse ', 'COMMON_PARTS',\r\n          'cx=\"0\" cy=\"0\" ',\r\n          'rx=\"', this.rx,\r\n          '\" ry=\"', this.ry,\r\n          '\" />\\n'\r\n        ];\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        ctx.beginPath();\r\n        ctx.save();\r\n        ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\r\n        ctx.arc(\r\n          0,\r\n          0,\r\n          this.rx,\r\n          0,\r\n          piBy2,\r\n          false);\r\n        ctx.restore();\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Ellipse\r\n     * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\r\n     */\r\n    fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Ellipse} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Ellipse\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} [callback] Options callback invoked after parsing is finished\r\n     * @return {fabric.Ellipse}\r\n     */\r\n    fabric.Ellipse.fromElement = function(element, callback) {\r\n\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\r\n\r\n      parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\r\n      parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\r\n      callback(new fabric.Ellipse(parsedAttributes));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns {@link fabric.Ellipse} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Ellipse\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     * @return {fabric.Ellipse}\r\n     */\r\n    fabric.Ellipse.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Ellipse', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend;\r\n\r\n    if (fabric.Rect) {\r\n      fabric.warn('fabric.Rect is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Rectangle class\r\n     * @class fabric.Rect\r\n     * @extends fabric.Object\r\n     * @return {fabric.Rect} thisArg\r\n     * @see {@link fabric.Rect#initialize} for constructor definition\r\n     */\r\n    fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\r\n\r\n      /**\r\n       * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'rect',\r\n\r\n      /**\r\n       * Horizontal border radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      rx:   0,\r\n\r\n      /**\r\n       * Vertical border radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      ry:   0,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        this._initRxRy();\r\n      },\r\n\r\n      /**\r\n       * Initializes rx/ry attributes\r\n       * @private\r\n       */\r\n      _initRxRy: function() {\r\n        if (this.rx && !this.ry) {\r\n          this.ry = this.rx;\r\n        }\r\n        else if (this.ry && !this.rx) {\r\n          this.rx = this.ry;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n\r\n        // 1x1 case (used in spray brush) optimization was removed because\r\n        // with caching and higher zoom level this makes more damage than help\r\n\r\n        var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\r\n            ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\r\n            w = this.width,\r\n            h = this.height,\r\n            x = -this.width / 2,\r\n            y = -this.height / 2,\r\n            isRounded = rx !== 0 || ry !== 0,\r\n            /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\r\n            k = 1 - 0.5522847498;\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(x + rx, y);\r\n\r\n        ctx.lineTo(x + w - rx, y);\r\n        isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\r\n\r\n        ctx.lineTo(x + w, y + h - ry);\r\n        isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\r\n\r\n        ctx.lineTo(x + rx, y + h);\r\n        isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\r\n\r\n        ctx.lineTo(x, y + ry);\r\n        isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\r\n\r\n        ctx.closePath();\r\n\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var x = -this.width / 2,\r\n            y = -this.height / 2,\r\n            w = this.width,\r\n            h = this.height;\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @return {Array} an array of strings with the specific svg representation\r\n       * of the instance\r\n       */\r\n      _toSVG: function() {\r\n        var x = -this.width / 2, y = -this.height / 2;\r\n        return [\r\n          '<rect ', 'COMMON_PARTS',\r\n          'x=\"', x, '\" y=\"', y,\r\n          '\" rx=\"', this.rx, '\" ry=\"', this.ry,\r\n          '\" width=\"', this.width, '\" height=\"', this.height,\r\n          '\" />\\n'\r\n        ];\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\r\n     * @static\r\n     * @memberOf fabric.Rect\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\r\n     */\r\n    fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Rect} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Rect\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Rect.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n      options = options || { };\r\n\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\r\n\r\n      parsedAttributes.left = parsedAttributes.left || 0;\r\n      parsedAttributes.top  = parsedAttributes.top  || 0;\r\n      parsedAttributes.height  = parsedAttributes.height || 0;\r\n      parsedAttributes.width  = parsedAttributes.width || 0;\r\n      var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\r\n      rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\r\n      callback(rect);\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns {@link fabric.Rect} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Rect\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\r\n     */\r\n    fabric.Rect.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Rect', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        min = fabric.util.array.min,\r\n        max = fabric.util.array.max,\r\n        toFixed = fabric.util.toFixed;\r\n\r\n    if (fabric.Polyline) {\r\n      fabric.warn('fabric.Polyline is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Polyline class\r\n     * @class fabric.Polyline\r\n     * @extends fabric.Object\r\n     * @see {@link fabric.Polyline#initialize} for constructor definition\r\n     */\r\n    fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'polyline',\r\n\r\n      /**\r\n       * Points array\r\n       * @type Array\r\n       * @default\r\n       */\r\n      points: null,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Array} points Array of points (where each point is an object with x and y)\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Polyline} thisArg\r\n       * @example\r\n       * var poly = new fabric.Polyline([\r\n       *     { x: 10, y: 10 },\r\n       *     { x: 50, y: 30 },\r\n       *     { x: 40, y: 70 },\r\n       *     { x: 60, y: 50 },\r\n       *     { x: 100, y: 150 },\r\n       *     { x: 40, y: 100 }\r\n       *   ], {\r\n       *   stroke: 'red',\r\n       *   left: 100,\r\n       *   top: 100\r\n       * });\r\n       */\r\n      initialize: function(points, options) {\r\n        options = options || {};\r\n        this.points = points || [];\r\n        this.callSuper('initialize', options);\r\n        this._setPositionDimensions(options);\r\n      },\r\n\r\n      _setPositionDimensions: function(options) {\r\n        var calcDim = this._calcDimensions(options), correctLeftTop;\r\n        this.width = calcDim.width;\r\n        this.height = calcDim.height;\r\n        if (!options.fromSVG) {\r\n          correctLeftTop = this.translateToGivenOrigin(\r\n            { x: calcDim.left - this.strokeWidth / 2, y: calcDim.top - this.strokeWidth / 2 },\r\n            'left',\r\n            'top',\r\n            this.originX,\r\n            this.originY\r\n          );\r\n        }\r\n        if (typeof options.left === 'undefined') {\r\n          this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\r\n        }\r\n        if (typeof options.top === 'undefined') {\r\n          this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\r\n        }\r\n        this.pathOffset = {\r\n          x: calcDim.left + this.width / 2,\r\n          y: calcDim.top + this.height / 2\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Calculate the polygon min and max point from points array,\r\n       * returning an object with left, top, widht, height to measure the\r\n       * polygon size\r\n       * @return {Object} object.left X coordinate of the polygon leftmost point\r\n       * @return {Object} object.top Y coordinate of the polygon topmost point\r\n       * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\r\n       * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\r\n       * @private\r\n       */\r\n      _calcDimensions: function() {\r\n\r\n        var points = this.points,\r\n            minX = min(points, 'x') || 0,\r\n            minY = min(points, 'y') || 0,\r\n            maxX = max(points, 'x') || 0,\r\n            maxY = max(points, 'y') || 0,\r\n            width = (maxX - minX),\r\n            height = (maxY - minY);\r\n\r\n        return {\r\n          left: minX,\r\n          top: minY,\r\n          width: width,\r\n          height: height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return extend(this.callSuper('toObject', propertiesToInclude), {\r\n          points: this.points.concat()\r\n        });\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @return {Array} an array of strings with the specific svg representation\r\n       * of the instance\r\n       */\r\n      _toSVG: function() {\r\n        var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n\r\n        for (var i = 0, len = this.points.length; i < len; i++) {\r\n          points.push(\r\n            toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\r\n            toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\r\n          );\r\n        }\r\n        return [\r\n          '<' + this.type + ' ', 'COMMON_PARTS',\r\n          'points=\"', points.join(''),\r\n          '\" />\\n'\r\n        ];\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      commonRender: function(ctx) {\r\n        var point, len = this.points.length,\r\n            x = this.pathOffset.x,\r\n            y = this.pathOffset.y;\r\n\r\n        if (!len || isNaN(this.points[len - 1].y)) {\r\n          // do not draw if no points or odd points\r\n          // NaN comes from parseFloat of a empty string in parser\r\n          return false;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\r\n        for (var i = 0; i < len; i++) {\r\n          point = this.points[i];\r\n          ctx.lineTo(point.x - x, point.y - y);\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        if (!this.commonRender(ctx)) {\r\n          return;\r\n        }\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var p1, p2;\r\n\r\n        ctx.beginPath();\r\n        for (var i = 0, len = this.points.length; i < len; i++) {\r\n          p1 = this.points[i];\r\n          p2 = this.points[i + 1] || p1;\r\n          fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns complexity of an instance\r\n       * @return {Number} complexity of this instance\r\n       */\r\n      complexity: function() {\r\n        return this.get('points').length;\r\n      }\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Polyline\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\r\n     */\r\n    fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\r\n\r\n    /**\r\n     * Returns fabric.Polyline instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Polyline\r\n     * @param {SVGElement} element Element to parser\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Polyline.fromElementGenerator = function(_class) {\r\n      return function(element, callback, options) {\r\n        if (!element) {\r\n          return callback(null);\r\n        }\r\n        options || (options = { });\r\n\r\n        var points = fabric.parsePointsAttribute(element.getAttribute('points')),\r\n            parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\r\n        parsedAttributes.fromSVG = true;\r\n        callback(new fabric[_class](points, extend(parsedAttributes, options)));\r\n      };\r\n    };\r\n\r\n    fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\r\n\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Polyline instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Polyline\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n     */\r\n    fabric.Polyline.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Polyline', object, callback, 'points');\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Polygon) {\r\n      fabric.warn('fabric.Polygon is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Polygon class\r\n     * @class fabric.Polygon\r\n     * @extends fabric.Polyline\r\n     * @see {@link fabric.Polygon#initialize} for constructor definition\r\n     */\r\n    fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'polygon',\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        if (!this.commonRender(ctx)) {\r\n          return;\r\n        }\r\n        ctx.closePath();\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        this.callSuper('_renderDashedStroke', ctx);\r\n        ctx.closePath();\r\n      },\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\r\n     * @static\r\n     * @memberOf fabric.Polygon\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\r\n     */\r\n    fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\r\n\r\n    /**\r\n     * Returns {@link fabric.Polygon} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Polygon\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Polygon instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Polygon\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n     */\r\n    fabric.Polygon.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Polygon', object, callback, 'points');\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        min = fabric.util.array.min,\r\n        max = fabric.util.array.max,\r\n        extend = fabric.util.object.extend,\r\n        _toString = Object.prototype.toString,\r\n        drawArc = fabric.util.drawArc,\r\n        toFixed = fabric.util.toFixed,\r\n        commandLengths = {\r\n          m: 2,\r\n          l: 2,\r\n          h: 1,\r\n          v: 1,\r\n          c: 6,\r\n          s: 4,\r\n          q: 4,\r\n          t: 2,\r\n          a: 7\r\n        },\r\n        repeatedCommands = {\r\n          m: 'l',\r\n          M: 'L'\r\n        };\r\n\r\n    if (fabric.Path) {\r\n      fabric.warn('fabric.Path is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Path class\r\n     * @class fabric.Path\r\n     * @extends fabric.Object\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\r\n     * @see {@link fabric.Path#initialize} for constructor definition\r\n     */\r\n    fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'path',\r\n\r\n      /**\r\n       * Array of path points\r\n       * @type Array\r\n       * @default\r\n       */\r\n      path: null,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\r\n\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Path} thisArg\r\n       */\r\n      initialize: function(path, options) {\r\n        options = options || { };\r\n        this.callSuper('initialize', options);\r\n\r\n        if (!path) {\r\n          path = [];\r\n        }\r\n\r\n        var fromArray = _toString.call(path) === '[object Array]';\r\n\r\n        this.path = fromArray\r\n          ? path\r\n          // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\r\n          : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\r\n\r\n        if (!this.path) {\r\n          return;\r\n        }\r\n\r\n        if (!fromArray) {\r\n          this.path = this._parsePath();\r\n        }\r\n\r\n        fabric.Polyline.prototype._setPositionDimensions.call(this, options);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render path on\r\n       */\r\n      _renderPathCommands: function(ctx) {\r\n        var current, // current instruction\r\n            previous = null,\r\n            subpathStartX = 0,\r\n            subpathStartY = 0,\r\n            x = 0, // current x\r\n            y = 0, // current y\r\n            controlX = 0, // current control point x\r\n            controlY = 0, // current control point y\r\n            tempX,\r\n            tempY,\r\n            l = -this.pathOffset.x,\r\n            t = -this.pathOffset.y;\r\n\r\n        ctx.beginPath();\r\n\r\n        for (var i = 0, len = this.path.length; i < len; ++i) {\r\n\r\n          current = this.path[i];\r\n\r\n          switch (current[0]) { // first letter\r\n\r\n            case 'l': // lineto, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'L': // lineto, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'h': // horizontal lineto, relative\r\n              x += current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'H': // horizontal lineto, absolute\r\n              x = current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'v': // vertical lineto, relative\r\n              y += current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'V': // verical lineto, absolute\r\n              y = current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'm': // moveTo, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              ctx.moveTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'M': // moveTo, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              ctx.moveTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'c': // bezierCurveTo, relative\r\n              tempX = x + current[5];\r\n              tempY = y + current[6];\r\n              controlX = x + current[3];\r\n              controlY = y + current[4];\r\n              ctx.bezierCurveTo(\r\n                x + current[1] + l, // x1\r\n                y + current[2] + t, // y1\r\n                controlX + l, // x2\r\n                controlY + t, // y2\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'C': // bezierCurveTo, absolute\r\n              x = current[5];\r\n              y = current[6];\r\n              controlX = current[3];\r\n              controlY = current[4];\r\n              ctx.bezierCurveTo(\r\n                current[1] + l,\r\n                current[2] + t,\r\n                controlX + l,\r\n                controlY + t,\r\n                x + l,\r\n                y + t\r\n              );\r\n              break;\r\n\r\n            case 's': // shorthand cubic bezierCurveTo, relative\r\n\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              ctx.bezierCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                x + current[1] + l,\r\n                y + current[2] + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'S': // shorthand cubic bezierCurveTo, absolute\r\n              tempX = current[3];\r\n              tempY = current[4];\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              ctx.bezierCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                current[1] + l,\r\n                current[2] + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n\r\n              break;\r\n\r\n            case 'q': // quadraticCurveTo, relative\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n\r\n              ctx.quadraticCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'Q': // quadraticCurveTo, absolute\r\n              tempX = current[3];\r\n              tempY = current[4];\r\n\r\n              ctx.quadraticCurveTo(\r\n                current[1] + l,\r\n                current[2] + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n              break;\r\n\r\n            case 't': // shorthand quadraticCurveTo, relative\r\n\r\n              // transform to absolute x,y\r\n              tempX = x + current[1];\r\n              tempY = y + current[2];\r\n\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              ctx.quadraticCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n\r\n              break;\r\n\r\n            case 'T':\r\n              tempX = current[1];\r\n              tempY = current[2];\r\n\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              ctx.quadraticCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'a':\r\n              // TODO: optimize this\r\n              drawArc(ctx, x + l, y + t, [\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6] + x + l,\r\n                current[7] + y + t\r\n              ]);\r\n              x += current[6];\r\n              y += current[7];\r\n              break;\r\n\r\n            case 'A':\r\n              // TODO: optimize this\r\n              drawArc(ctx, x + l, y + t, [\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6] + l,\r\n                current[7] + t\r\n              ]);\r\n              x = current[6];\r\n              y = current[7];\r\n              break;\r\n\r\n            case 'z':\r\n            case 'Z':\r\n              x = subpathStartX;\r\n              y = subpathStartY;\r\n              ctx.closePath();\r\n              break;\r\n          }\r\n          previous = current;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render path on\r\n       */\r\n      _render: function(ctx) {\r\n        this._renderPathCommands(ctx);\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of an instance\r\n       * @return {String} string representation of an instance\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Path (' + this.complexity() +\r\n          '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return extend(this.callSuper('toObject', propertiesToInclude), {\r\n          path: this.path.map(function(item) { return item.slice(); }),\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Returns dataless object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toDatalessObject: function(propertiesToInclude) {\r\n        var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\r\n        if (o.sourcePath) {\r\n          delete o.path;\r\n        }\r\n        return o;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @return {Array} an array of strings with the specific svg representation\r\n       * of the instance\r\n       */\r\n      _toSVG: function() {\r\n        var path = this.path.map(function(path) {\r\n          return path.join(' ');\r\n        }).join(' ');\r\n        return [\r\n          '<path ', 'COMMON_PARTS',\r\n          'd=\"', path,\r\n          '\" stroke-linecap=\"round\" ',\r\n          '/>\\n'\r\n        ];\r\n      },\r\n\r\n      _getOffsetTransform: function() {\r\n        var digits = fabric.Object.NUM_FRACTION_DIGITS;\r\n        return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\r\n            toFixed(-this.pathOffset.y, digits) + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns svg clipPath representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toClipPathSVG: function(reviver) {\r\n        var additionalTransform = this._getOffsetTransform();\r\n        return '\\t' + this._createBaseClipPathSVGMarkup(\r\n          this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var additionalTransform = this._getOffsetTransform();\r\n        return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns number representation of an instance complexity\r\n       * @return {Number} complexity of this instance\r\n       */\r\n      complexity: function() {\r\n        return this.path.length;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _parsePath: function() {\r\n        var result = [],\r\n            coords = [],\r\n            currentPath,\r\n            parsed,\r\n            re = fabric.rePathCommand,\r\n            match,\r\n            coordsStr;\r\n\r\n        for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\r\n          currentPath = this.path[i];\r\n\r\n          coordsStr = currentPath.slice(1).trim();\r\n          coords.length = 0;\r\n\r\n          while ((match = re.exec(coordsStr))) {\r\n            coords.push(match[0]);\r\n          }\r\n\r\n          coordsParsed = [currentPath.charAt(0)];\r\n\r\n          for (var j = 0, jlen = coords.length; j < jlen; j++) {\r\n            parsed = parseFloat(coords[j]);\r\n            if (!isNaN(parsed)) {\r\n              coordsParsed.push(parsed);\r\n            }\r\n          }\r\n\r\n          var command = coordsParsed[0],\r\n              commandLength = commandLengths[command.toLowerCase()],\r\n              repeatedCommand = repeatedCommands[command] || command;\r\n\r\n          if (coordsParsed.length - 1 > commandLength) {\r\n            for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\r\n              result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\r\n              command = repeatedCommand;\r\n            }\r\n          }\r\n          else {\r\n            result.push(coordsParsed);\r\n          }\r\n        }\r\n\r\n        return result;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _calcDimensions: function() {\r\n\r\n        var aX = [],\r\n            aY = [],\r\n            current, // current instruction\r\n            previous = null,\r\n            subpathStartX = 0,\r\n            subpathStartY = 0,\r\n            x = 0, // current x\r\n            y = 0, // current y\r\n            controlX = 0, // current control point x\r\n            controlY = 0, // current control point y\r\n            tempX,\r\n            tempY,\r\n            bounds;\r\n\r\n        for (var i = 0, len = this.path.length; i < len; ++i) {\r\n\r\n          current = this.path[i];\r\n\r\n          switch (current[0]) { // first letter\r\n\r\n            case 'l': // lineto, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'L': // lineto, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'h': // horizontal lineto, relative\r\n              x += current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'H': // horizontal lineto, absolute\r\n              x = current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'v': // vertical lineto, relative\r\n              y += current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'V': // verical lineto, absolute\r\n              y = current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'm': // moveTo, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'M': // moveTo, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'c': // bezierCurveTo, relative\r\n              tempX = x + current[5];\r\n              tempY = y + current[6];\r\n              controlX = x + current[3];\r\n              controlY = y + current[4];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                x + current[1], // x1\r\n                y + current[2], // y1\r\n                controlX, // x2\r\n                controlY, // y2\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'C': // bezierCurveTo, absolute\r\n              controlX = current[3];\r\n              controlY = current[4];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                current[1],\r\n                current[2],\r\n                controlX,\r\n                controlY,\r\n                current[5],\r\n                current[6]\r\n              );\r\n              x = current[5];\r\n              y = current[6];\r\n              break;\r\n\r\n            case 's': // shorthand cubic bezierCurveTo, relative\r\n\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                x + current[1],\r\n                y + current[2],\r\n                tempX,\r\n                tempY\r\n              );\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'S': // shorthand cubic bezierCurveTo, absolute\r\n              tempX = current[3];\r\n              tempY = current[4];\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                current[1],\r\n                current[2],\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n              break;\r\n\r\n            case 'q': // quadraticCurveTo, relative\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'Q': // quadraticCurveTo, absolute\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                current[3],\r\n                current[4]\r\n              );\r\n              x = current[3];\r\n              y = current[4];\r\n              break;\r\n\r\n            case 't': // shorthand quadraticCurveTo, relative\r\n              // transform to absolute x,y\r\n              tempX = x + current[1];\r\n              tempY = y + current[2];\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n\r\n              break;\r\n\r\n            case 'T':\r\n              tempX = current[1];\r\n              tempY = current[2];\r\n\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'a':\r\n              // TODO: optimize this\r\n              bounds = fabric.util.getBoundsOfArc(x, y,\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6] + x,\r\n                current[7] + y\r\n              );\r\n              x += current[6];\r\n              y += current[7];\r\n              break;\r\n\r\n            case 'A':\r\n              // TODO: optimize this\r\n              bounds = fabric.util.getBoundsOfArc(x, y,\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6],\r\n                current[7]\r\n              );\r\n              x = current[6];\r\n              y = current[7];\r\n              break;\r\n\r\n            case 'z':\r\n            case 'Z':\r\n              x = subpathStartX;\r\n              y = subpathStartY;\r\n              break;\r\n          }\r\n          previous = current;\r\n          bounds.forEach(function (point) {\r\n            aX.push(point.x);\r\n            aY.push(point.y);\r\n          });\r\n          aX.push(x);\r\n          aY.push(y);\r\n        }\r\n\r\n        var minX = min(aX) || 0,\r\n            minY = min(aY) || 0,\r\n            maxX = max(aX) || 0,\r\n            maxY = max(aY) || 0,\r\n            deltaX = maxX - minX,\r\n            deltaY = maxY - minY;\r\n\r\n        return {\r\n          left: minX,\r\n          top: minY,\r\n          width: deltaX,\r\n          height: deltaY\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Creates an instance of fabric.Path from an object\r\n     * @static\r\n     * @memberOf fabric.Path\r\n     * @param {Object} object\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n     */\r\n    fabric.Path.fromObject = function(object, callback) {\r\n      if (typeof object.sourcePath === 'string') {\r\n        var pathUrl = object.sourcePath;\r\n        fabric.loadSVGFromURL(pathUrl, function (elements) {\r\n          var path = elements[0];\r\n          path.setOptions(object);\r\n          callback && callback(path);\r\n        });\r\n      }\r\n      else {\r\n        fabric.Object._fromObject('Path', object, callback, 'path');\r\n      }\r\n    };\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\r\n     * @static\r\n     * @memberOf fabric.Path\r\n     * @see http://www.w3.org/TR/SVG/paths.html#PathElement\r\n     */\r\n    fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\r\n\r\n    /**\r\n     * Creates an instance of fabric.Path from an SVG <path> element\r\n     * @static\r\n     * @memberOf fabric.Path\r\n     * @param {SVGElement} element to parse\r\n     * @param {Function} callback Callback to invoke when an fabric.Path instance is created\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} [callback] Options callback invoked after parsing is finished\r\n     */\r\n    fabric.Path.fromElement = function(element, callback, options) {\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\r\n      parsedAttributes.fromSVG = true;\r\n      callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        min = fabric.util.array.min,\r\n        max = fabric.util.array.max;\r\n\r\n    if (fabric.Group) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Group class\r\n     * @class fabric.Group\r\n     * @extends fabric.Object\r\n     * @mixes fabric.Collection\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\r\n     * @see {@link fabric.Group#initialize} for constructor definition\r\n     */\r\n    fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'group',\r\n\r\n      /**\r\n       * Width of stroke\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeWidth: 0,\r\n\r\n      /**\r\n       * Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      subTargetCheck: false,\r\n\r\n      /**\r\n       * Groups are container, do not render anything on theyr own, ence no cache properties\r\n       * @type Array\r\n       * @default\r\n       */\r\n      cacheProperties: [],\r\n\r\n      /**\r\n       * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\r\n       * available setting this boolean to true.\r\n       * @type Boolean\r\n       * @since 2.0.0\r\n       * @default\r\n       */\r\n      useSetOnGroup: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} objects Group objects\r\n       * @param {Object} [options] Options object\r\n       * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(objects, options, isAlreadyGrouped) {\r\n        options = options || {};\r\n        this._objects = [];\r\n        // if objects enclosed in a group have been grouped already,\r\n        // we cannot change properties of objects.\r\n        // Thus we need to set options to group without objects,\r\n        isAlreadyGrouped && this.callSuper('initialize', options);\r\n        this._objects = objects || [];\r\n        for (var i = this._objects.length; i--; ) {\r\n          this._objects[i].group = this;\r\n        }\r\n\r\n        if (!isAlreadyGrouped) {\r\n          var center = options && options.centerPoint;\r\n          // we want to set origins before calculating the bounding box.\r\n          // so that the topleft can be set with that in mind.\r\n          // if specific top and left are passed, are overwritten later\r\n          // with the callSuper('initialize', options)\r\n          if (options.originX !== undefined) {\r\n            this.originX = options.originX;\r\n          }\r\n          if (options.originY !== undefined) {\r\n            this.originY = options.originY;\r\n          }\r\n          // if coming from svg i do not want to calc bounds.\r\n          // i assume width and height are passed along options\r\n          center || this._calcBounds();\r\n          this._updateObjectsCoords(center);\r\n          delete options.centerPoint;\r\n          this.callSuper('initialize', options);\r\n        }\r\n        else {\r\n          this._updateObjectsACoords();\r\n        }\r\n\r\n        this.setCoords();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\r\n       */\r\n      _updateObjectsACoords: function() {\r\n        var ignoreZoom = true, skipAbsolute = true;\r\n        for (var i = this._objects.length; i--; ){\r\n          this._objects[i].setCoords(ignoreZoom, skipAbsolute);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\r\n       */\r\n      _updateObjectsCoords: function(center) {\r\n        var center = center || this.getCenterPoint();\r\n        for (var i = this._objects.length; i--; ){\r\n          this._updateObjectCoords(this._objects[i], center);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} object\r\n       * @param {fabric.Point} center, current center of group.\r\n       */\r\n      _updateObjectCoords: function(object, center) {\r\n        var objectLeft = object.left,\r\n            objectTop = object.top,\r\n            ignoreZoom = true, skipAbsolute = true;\r\n\r\n        object.set({\r\n          left: objectLeft - center.x,\r\n          top: objectTop - center.y\r\n        });\r\n        object.group = this;\r\n        object.setCoords(ignoreZoom, skipAbsolute);\r\n      },\r\n\r\n      /**\r\n       * Returns string represenation of a group\r\n       * @return {String}\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Group: (' + this.complexity() + ')>';\r\n      },\r\n\r\n      /**\r\n       * Adds an object to a group; Then recalculates group's dimension, position.\r\n       * @param {Object} object\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      addWithUpdate: function(object) {\r\n        this._restoreObjectsState();\r\n        fabric.util.resetObjectTransform(this);\r\n        if (object) {\r\n          this._objects.push(object);\r\n          object.group = this;\r\n          object._set('canvas', this.canvas);\r\n        }\r\n        this._calcBounds();\r\n        this._updateObjectsCoords();\r\n        this.setCoords();\r\n        this.dirty = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Removes an object from a group; Then recalculates group's dimension, position.\r\n       * @param {Object} object\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      removeWithUpdate: function(object) {\r\n        this._restoreObjectsState();\r\n        fabric.util.resetObjectTransform(this);\r\n\r\n        this.remove(object);\r\n        this._calcBounds();\r\n        this._updateObjectsCoords();\r\n        this.setCoords();\r\n        this.dirty = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onObjectAdded: function(object) {\r\n        this.dirty = true;\r\n        object.group = this;\r\n        object._set('canvas', this.canvas);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onObjectRemoved: function(object) {\r\n        this.dirty = true;\r\n        delete object.group;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _set: function(key, value) {\r\n        var i = this._objects.length;\r\n        if (this.useSetOnGroup) {\r\n          while (i--) {\r\n            this._objects[i].setOnGroup(key, value);\r\n          }\r\n        }\r\n        if (key === 'canvas') {\r\n          while (i--) {\r\n            this._objects[i]._set(key, value);\r\n          }\r\n        }\r\n        fabric.Object.prototype._set.call(this, key, value);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var _includeDefaultValues = this.includeDefaultValues;\r\n        var objsToObject = this._objects.map(function(obj) {\r\n          var originalDefaults = obj.includeDefaultValues;\r\n          obj.includeDefaultValues = _includeDefaultValues;\r\n          var _obj = obj.toObject(propertiesToInclude);\r\n          obj.includeDefaultValues = originalDefaults;\r\n          return _obj;\r\n        });\r\n        var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\r\n        obj.objects = objsToObject;\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance, in dataless mode.\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toDatalessObject: function(propertiesToInclude) {\r\n        var objsToObject, sourcePath = this.sourcePath;\r\n        if (sourcePath) {\r\n          objsToObject = sourcePath;\r\n        }\r\n        else {\r\n          var _includeDefaultValues = this.includeDefaultValues;\r\n          objsToObject = this._objects.map(function(obj) {\r\n            var originalDefaults = obj.includeDefaultValues;\r\n            obj.includeDefaultValues = _includeDefaultValues;\r\n            var _obj = obj.toDatalessObject(propertiesToInclude);\r\n            obj.includeDefaultValues = originalDefaults;\r\n            return _obj;\r\n          });\r\n        }\r\n        var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\r\n        obj.objects = objsToObject;\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Renders instance on a given context\r\n       * @param {CanvasRenderingContext2D} ctx context to render instance on\r\n       */\r\n      render: function(ctx) {\r\n        this._transformDone = true;\r\n        this.callSuper('render', ctx);\r\n        this._transformDone = false;\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group is already cached.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        var ownCache = fabric.Object.prototype.shouldCache.call(this);\r\n        if (ownCache) {\r\n          for (var i = 0, len = this._objects.length; i < len; i++) {\r\n            if (this._objects[i].willDrawShadow()) {\r\n              this.ownCaching = false;\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return ownCache;\r\n      },\r\n\r\n      /**\r\n       * Check if this object or a child object will cast a shadow\r\n       * @return {Boolean}\r\n       */\r\n      willDrawShadow: function() {\r\n        if (this.shadow) {\r\n          return fabric.Object.prototype.willDrawShadow.call(this);\r\n        }\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          if (this._objects[i].willDrawShadow()) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Check if this group or its parent group are caching, recursively up\r\n       * @return {Boolean}\r\n       */\r\n      isOnACache: function() {\r\n        return this.ownCaching || (this.group && this.group.isOnACache());\r\n      },\r\n\r\n      /**\r\n       * Execute the drawing operation for an object on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawObject: function(ctx) {\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          this._objects[i].render(ctx);\r\n        }\r\n        this._drawClipPath(ctx);\r\n      },\r\n\r\n      /**\r\n       * Check if cache is dirty\r\n       */\r\n      isCacheDirty: function(skipCanvas) {\r\n        if (this.callSuper('isCacheDirty', skipCanvas)) {\r\n          return true;\r\n        }\r\n        if (!this.statefullCache) {\r\n          return false;\r\n        }\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          if (this._objects[i].isCacheDirty(true)) {\r\n            if (this._cacheCanvas) {\r\n              // if this group has not a cache canvas there is nothing to clean\r\n              var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\r\n              this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\r\n            }\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Retores original state of each of group objects (original state is that which was before group was created).\r\n       * @private\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      _restoreObjectsState: function() {\r\n        this._objects.forEach(this._restoreObjectState, this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Realises the transform from this group onto the supplied object\r\n       * i.e. it tells you what would happen if the supplied object was in\r\n       * the group, and then the group was destroyed. It mutates the supplied\r\n       * object.\r\n       * @param {fabric.Object} object\r\n       * @return {fabric.Object} transformedObject\r\n       */\r\n      realizeTransform: function(object) {\r\n        var matrix = object.calcTransformMatrix(),\r\n            options = fabric.util.qrDecompose(matrix),\r\n            center = new fabric.Point(options.translateX, options.translateY);\r\n        object.flipX = false;\r\n        object.flipY = false;\r\n        object.set('scaleX', options.scaleX);\r\n        object.set('scaleY', options.scaleY);\r\n        object.skewX = options.skewX;\r\n        object.skewY = options.skewY;\r\n        object.angle = options.angle;\r\n        object.setPositionByOrigin(center, 'center', 'center');\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Restores original state of a specified object in group\r\n       * @private\r\n       * @param {fabric.Object} object\r\n       * @return {fabric.Group} thisArg\r\n       */\r\n      _restoreObjectState: function(object) {\r\n        this.realizeTransform(object);\r\n        object.setCoords();\r\n        delete object.group;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Destroys a group (restoring state of its objects)\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      destroy: function() {\r\n        // when group is destroyed objects needs to get a repaint to be eventually\r\n        // displayed on canvas.\r\n        this._objects.forEach(function(object) {\r\n          object.set('dirty', true);\r\n        });\r\n        return this._restoreObjectsState();\r\n      },\r\n\r\n      /**\r\n       * make a group an active selection, remove the group from canvas\r\n       * the group has to be on canvas for this to work.\r\n       * @return {fabric.ActiveSelection} thisArg\r\n       * @chainable\r\n       */\r\n      toActiveSelection: function() {\r\n        if (!this.canvas) {\r\n          return;\r\n        }\r\n        var objects = this._objects, canvas = this.canvas;\r\n        this._objects = [];\r\n        var options = this.toObject();\r\n        delete options.objects;\r\n        var activeSelection = new fabric.ActiveSelection([]);\r\n        activeSelection.set(options);\r\n        activeSelection.type = 'activeSelection';\r\n        canvas.remove(this);\r\n        objects.forEach(function(object) {\r\n          object.group = activeSelection;\r\n          object.dirty = true;\r\n          canvas.add(object);\r\n        });\r\n        activeSelection.canvas = canvas;\r\n        activeSelection._objects = objects;\r\n        canvas._activeObject = activeSelection;\r\n        activeSelection.setCoords();\r\n        return activeSelection;\r\n      },\r\n\r\n      /**\r\n       * Destroys a group (restoring state of its objects)\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      ungroupOnCanvas: function() {\r\n        return this._restoreObjectsState();\r\n      },\r\n\r\n      /**\r\n       * Sets coordinates of all objects inside group\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      setObjectsCoords: function() {\r\n        var ignoreZoom = true, skipAbsolute = true;\r\n        this.forEachObject(function(object) {\r\n          object.setCoords(ignoreZoom, skipAbsolute);\r\n        });\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _calcBounds: function(onlyWidthHeight) {\r\n        var aX = [],\r\n            aY = [],\r\n            o, prop,\r\n            props = ['tr', 'br', 'bl', 'tl'],\r\n            i = 0, iLen = this._objects.length,\r\n            j, jLen = props.length,\r\n            ignoreZoom = true;\r\n\r\n        for ( ; i < iLen; ++i) {\r\n          o = this._objects[i];\r\n          o.setCoords(ignoreZoom);\r\n          for (j = 0; j < jLen; j++) {\r\n            prop = props[j];\r\n            aX.push(o.oCoords[prop].x);\r\n            aY.push(o.oCoords[prop].y);\r\n          }\r\n        }\r\n\r\n        this._getBounds(aX, aY, onlyWidthHeight);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getBounds: function(aX, aY, onlyWidthHeight) {\r\n        var minXY = new fabric.Point(min(aX), min(aY)),\r\n            maxXY = new fabric.Point(max(aX), max(aY)),\r\n            top = minXY.y || 0, left = minXY.x || 0,\r\n            width = (maxXY.x - minXY.x) || 0,\r\n            height = (maxXY.y - minXY.y) || 0;\r\n        this.width = width;\r\n        this.height = height;\r\n        if (!onlyWidthHeight) {\r\n          // the bounding box always finds the topleft most corner.\r\n          // whatever is the group origin, we set up here the left/top position.\r\n          this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\r\n        }\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      _toSVG: function(reviver) {\r\n        var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\r\n\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\r\n        }\r\n        svgString.push('</g>\\n');\r\n        return svgString;\r\n      },\r\n\r\n      /**\r\n       * Returns styles-string for svg-export, specific version for group\r\n       * @return {String}\r\n       */\r\n      getSvgStyles: function() {\r\n        var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ?\r\n              'opacity: ' + this.opacity + ';' : '',\r\n            visibility = this.visible ? '' : ' visibility: hidden;';\r\n        return [\r\n          opacity,\r\n          this.getSvgFilter(),\r\n          visibility\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns svg clipPath representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toClipPathSVG: function(reviver) {\r\n        var svgString = [];\r\n\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\r\n        }\r\n\r\n        return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /**\r\n     * Returns {@link fabric.Group} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Group\r\n     * @param {Object} object Object to create a group from\r\n     * @param {Function} [callback] Callback to invoke when an group instance is created\r\n     */\r\n    fabric.Group.fromObject = function(object, callback) {\r\n      var objects = object.objects,\r\n          options = fabric.util.object.clone(object, true);\r\n      delete options.objects;\r\n      if (typeof objects === 'string') {\r\n        // it has to be an url or something went wrong.\r\n        fabric.loadSVGFromURL(objects, function (elements) {\r\n          var group = fabric.util.groupSVGElements(elements, object, objects);\r\n          group.set(options);\r\n          callback && callback(group);\r\n        });\r\n        return;\r\n      }\r\n      fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\r\n        fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\r\n          var options = fabric.util.object.clone(object, true);\r\n          options.clipPath = enlivedClipPath[0];\r\n          delete options.objects;\r\n          callback && callback(new fabric.Group(enlivenedObjects, options, true));\r\n        });\r\n      });\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.ActiveSelection) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Group class\r\n     * @class fabric.ActiveSelection\r\n     * @extends fabric.Group\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\r\n     * @see {@link fabric.ActiveSelection#initialize} for constructor definition\r\n     */\r\n    fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'activeSelection',\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} objects ActiveSelection objects\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(objects, options) {\r\n        options = options || {};\r\n        this._objects = objects || [];\r\n        for (var i = this._objects.length; i--; ) {\r\n          this._objects[i].group = this;\r\n        }\r\n\r\n        if (options.originX) {\r\n          this.originX = options.originX;\r\n        }\r\n        if (options.originY) {\r\n          this.originY = options.originY;\r\n        }\r\n        this._calcBounds();\r\n        this._updateObjectsCoords();\r\n        fabric.Object.prototype.initialize.call(this, options);\r\n        this.setCoords();\r\n      },\r\n\r\n      /**\r\n       * Change te activeSelection to a normal group,\r\n       * High level function that automatically adds it to canvas as\r\n       * active object. no events fired.\r\n       * @since 2.0.0\r\n       * @return {fabric.Group}\r\n       */\r\n      toGroup: function() {\r\n        var objects = this._objects.concat();\r\n        this._objects = [];\r\n        var options = fabric.Object.prototype.toObject.call(this);\r\n        var newGroup = new fabric.Group([]);\r\n        delete options.type;\r\n        newGroup.set(options);\r\n        objects.forEach(function(object) {\r\n          object.canvas.remove(object);\r\n          object.group = newGroup;\r\n        });\r\n        newGroup._objects = objects;\r\n        if (!this.canvas) {\r\n          return newGroup;\r\n        }\r\n        var canvas = this.canvas;\r\n        canvas.add(newGroup);\r\n        canvas._activeObject = newGroup;\r\n        newGroup.setCoords();\r\n        return newGroup;\r\n      },\r\n\r\n      /**\r\n       * If returns true, deselection is cancelled.\r\n       * @since 2.0.0\r\n       * @return {Boolean} [cancel]\r\n       */\r\n      onDeselect: function() {\r\n        this.destroy();\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of a group\r\n       * @return {String}\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * objectCaching is a global flag, wins over everything\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group outside is cached.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Check if this group or its parent group are caching, recursively up\r\n       * @return {Boolean}\r\n       */\r\n      isOnACache: function() {\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Renders controls and borders for the object\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} [styleOverride] properties to override the object style\r\n       * @param {Object} [childrenOverride] properties to override the children overrides\r\n       */\r\n      _renderControls: function(ctx, styleOverride, childrenOverride) {\r\n        ctx.save();\r\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n        this.callSuper('_renderControls', ctx, styleOverride);\r\n        childrenOverride = childrenOverride || { };\r\n        if (typeof childrenOverride.hasControls === 'undefined') {\r\n          childrenOverride.hasControls = false;\r\n        }\r\n        if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\r\n          childrenOverride.hasRotatingPoint = false;\r\n        }\r\n        childrenOverride.forActiveSelection = true;\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          this._objects[i]._renderControls(ctx, childrenOverride);\r\n        }\r\n        ctx.restore();\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns {@link fabric.ActiveSelection} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.ActiveSelection\r\n     * @param {Object} object Object to create a group from\r\n     * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\r\n     */\r\n    fabric.ActiveSelection.fromObject = function(object, callback) {\r\n      fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\r\n        delete object.objects;\r\n        callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\r\n      });\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var extend = fabric.util.object.extend;\r\n\r\n    if (!global.fabric) {\r\n      global.fabric = { };\r\n    }\r\n\r\n    if (global.fabric.Image) {\r\n      fabric.warn('fabric.Image is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Image class\r\n     * @class fabric.Image\r\n     * @extends fabric.Object\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\r\n     * @see {@link fabric.Image#initialize} for constructor definition\r\n     */\r\n    fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'image',\r\n\r\n      /**\r\n       * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\r\n       * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\r\n       * @type String\r\n       * @default\r\n       */\r\n      crossOrigin: '',\r\n\r\n      /**\r\n       * Width of a stroke.\r\n       * For image quality a stroke multiple of 2 gives better results.\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeWidth: 0,\r\n\r\n      /**\r\n       * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\r\n       * This allows for relative urls as image src.\r\n       * @since 2.7.0\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      srcFromAttribute: false,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaleX to detect\r\n       * if the Image got resized after the last Render\r\n       * @type Number\r\n       */\r\n      _lastScaleX: 1,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaleY to detect\r\n       * if the Image got resized after the last Render\r\n       * @type Number\r\n       */\r\n      _lastScaleY: 1,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaling applied by the apply filter chain\r\n       * @type Number\r\n       */\r\n      _filterScalingX: 1,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaling applied by the apply filter chain\r\n       * @type Number\r\n       */\r\n      _filterScalingY: 1,\r\n\r\n      /**\r\n       * minimum scale factor under which any resizeFilter is triggered to resize the image\r\n       * 0 will disable the automatic resize. 1 will trigger automatically always.\r\n       * number bigger than 1 are not implemented yet.\r\n       * @type Number\r\n       */\r\n      minimumScaleTrigger: 0.5,\r\n\r\n      /**\r\n       * List of properties to consider when checking if\r\n       * state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\r\n\r\n      /**\r\n       * key used to retrieve the texture representing this image\r\n       * @since 2.0.0\r\n       * @type String\r\n       * @default\r\n       */\r\n      cacheKey: '',\r\n\r\n      /**\r\n       * Image crop in pixels from original image size.\r\n       * @since 2.0.0\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cropX: 0,\r\n\r\n      /**\r\n       * Image crop in pixels from original image size.\r\n       * @since 2.0.0\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cropY: 0,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {HTMLImageElement | String} element Image element\r\n       * @param {Object} [options] Options object\r\n       * @param {function} [callback] callback function to call after eventual filters applied.\r\n       * @return {fabric.Image} thisArg\r\n       */\r\n      initialize: function(element, options) {\r\n        options || (options = { });\r\n        this.filters = [];\r\n        this.cacheKey = 'texture' + fabric.Object.__uid++;\r\n        this.callSuper('initialize', options);\r\n        this._initElement(element, options);\r\n      },\r\n\r\n      /**\r\n       * Returns image element which this instance if based on\r\n       * @return {HTMLImageElement} Image element\r\n       */\r\n      getElement: function() {\r\n        return this._element || {};\r\n      },\r\n\r\n      /**\r\n       * Sets image element for this instance to a specified one.\r\n       * If filters defined they are applied to new image.\r\n       * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\r\n       * @param {HTMLImageElement} element\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Image} thisArg\r\n       * @chainable\r\n       */\r\n      setElement: function(element, options) {\r\n        this.removeTexture(this.cacheKey);\r\n        this.removeTexture(this.cacheKey + '_filtered');\r\n        this._element = element;\r\n        this._originalElement = element;\r\n        this._initConfig(options);\r\n        if (this.filters.length !== 0) {\r\n          this.applyFilters();\r\n        }\r\n        // resizeFilters work on the already filtered copy.\r\n        // we need to apply resizeFilters AFTER normal filters.\r\n        // applyResizeFilters is run more often than normal fiters\r\n        // and is triggered by user interactions rather than dev code\r\n        if (this.resizeFilter) {\r\n          this.applyResizeFilters();\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Delete a single texture if in webgl mode\r\n       */\r\n      removeTexture: function(key) {\r\n        var backend = fabric.filterBackend;\r\n        if (backend && backend.evictCachesForKey) {\r\n          backend.evictCachesForKey(key);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Delete textures, reference to elements and eventually JSDOM cleanup\r\n       */\r\n      dispose: function() {\r\n        this.removeTexture(this.cacheKey);\r\n        this.removeTexture(this.cacheKey + '_filtered');\r\n        this._cacheContext = undefined;\r\n        ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\r\n          fabric.util.cleanUpJsdomNode(this[element]);\r\n          this[element] = undefined;\r\n        }).bind(this));\r\n      },\r\n\r\n      /**\r\n       * Sets crossOrigin value (on an instance and corresponding image element)\r\n       * @return {fabric.Image} thisArg\r\n       * @chainable\r\n       */\r\n      setCrossOrigin: function(value) {\r\n        this.crossOrigin = value;\r\n        this._element.crossOrigin = value;\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns original size of an image\r\n       * @return {Object} Object with \"width\" and \"height\" properties\r\n       */\r\n      getOriginalSize: function() {\r\n        var element = this.getElement();\r\n        return {\r\n          width: element.naturalWidth || element.width,\r\n          height: element.naturalHeight || element.height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _stroke: function(ctx) {\r\n        if (!this.stroke || this.strokeWidth === 0) {\r\n          return;\r\n        }\r\n        var w = this.width / 2, h = this.height / 2;\r\n        ctx.beginPath();\r\n        ctx.moveTo(-w, -h);\r\n        ctx.lineTo(w, -h);\r\n        ctx.lineTo(w, h);\r\n        ctx.lineTo(-w, h);\r\n        ctx.lineTo(-w, -h);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var x = -this.width / 2,\r\n            y = -this.height / 2,\r\n            w = this.width,\r\n            h = this.height;\r\n\r\n        ctx.save();\r\n        this._setStrokeStyles(ctx, this);\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\r\n        ctx.closePath();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var filters = [];\r\n\r\n        this.filters.forEach(function(filterObj) {\r\n          if (filterObj) {\r\n            filters.push(filterObj.toObject());\r\n          }\r\n        });\r\n        var object = extend(\r\n          this.callSuper(\r\n            'toObject',\r\n            ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\r\n          ), {\r\n            src: this.getSrc(),\r\n            filters: filters,\r\n          });\r\n        if (this.resizeFilter) {\r\n          object.resizeFilter = this.resizeFilter.toObject();\r\n        }\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\r\n       * @return {Boolean}\r\n       */\r\n      hasCrop: function() {\r\n        return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @return {Array} an array of strings with the specific svg representation\r\n       * of the instance\r\n       */\r\n      _toSVG: function() {\r\n        var svgString = [], imageMarkup = [], strokeSvg,\r\n            x = -this.width / 2, y = -this.height / 2, clipPath = '';\r\n        if (this.hasCrop()) {\r\n          var clipPathId = fabric.Object.__uid++;\r\n          svgString.push(\r\n            '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\r\n            '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\r\n            '</clipPath>\\n'\r\n          );\r\n          clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\r\n        }\r\n        imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\r\n          '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\r\n          // we're essentially moving origin of transformation from top/left corner to the center of the shape\r\n          // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\r\n          // so that object's center aligns with container's left/top\r\n          '\" width=\"', this._element.width || this._element.naturalWidth,\r\n          '\" height=\"', this._element.height || this._element.height,\r\n          '\"', clipPath,\r\n          '></image>\\n');\r\n\r\n        if (this.stroke || this.strokeDashArray) {\r\n          var origFill = this.fill;\r\n          this.fill = null;\r\n          strokeSvg = [\r\n            '\\t<rect ',\r\n            'x=\"', x, '\" y=\"', y,\r\n            '\" width=\"', this.width, '\" height=\"', this.height,\r\n            '\" style=\"', this.getSvgStyles(),\r\n            '\"/>\\n'\r\n          ];\r\n          this.fill = origFill;\r\n        }\r\n        if (this.paintFirst !== 'fill') {\r\n          svgString = svgString.concat(strokeSvg, imageMarkup);\r\n        }\r\n        else {\r\n          svgString = svgString.concat(imageMarkup, strokeSvg);\r\n        }\r\n        return svgString;\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns source of an image\r\n       * @param {Boolean} filtered indicates if the src is needed for svg\r\n       * @return {String} Source of an image\r\n       */\r\n      getSrc: function(filtered) {\r\n        var element = filtered ? this._element : this._originalElement;\r\n        if (element) {\r\n          if (element.toDataURL) {\r\n            return element.toDataURL();\r\n          }\r\n\r\n          if (this.srcFromAttribute) {\r\n            return element.getAttribute('src');\r\n          }\r\n          else {\r\n            return element.src;\r\n          }\r\n        }\r\n        else {\r\n          return this.src || '';\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Sets source of an image\r\n       * @param {String} src Source string (URL)\r\n       * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Image} thisArg\r\n       * @chainable\r\n       */\r\n      setSrc: function(src, callback, options) {\r\n        fabric.util.loadImage(src, function(img) {\r\n          this.setElement(img, options);\r\n          this._setWidthHeight();\r\n          callback && callback(this);\r\n        }, this, options && options.crossOrigin);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of an instance\r\n       * @return {String} String representation of an instance\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\r\n      },\r\n\r\n      applyResizeFilters: function() {\r\n        var filter = this.resizeFilter,\r\n            minimumScale = this.minimumScaleTrigger,\r\n            objectScale = this.getTotalObjectScaling(),\r\n            scaleX = objectScale.scaleX,\r\n            scaleY = objectScale.scaleY,\r\n            elementToFilter = this._filteredEl || this._originalElement;\r\n        if (this.group) {\r\n          this.set('dirty', true);\r\n        }\r\n        if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\r\n          this._element = elementToFilter;\r\n          this._filterScalingX = 1;\r\n          this._filterScalingY = 1;\r\n          this._lastScaleX = scaleX;\r\n          this._lastScaleY = scaleY;\r\n          return;\r\n        }\r\n        if (!fabric.filterBackend) {\r\n          fabric.filterBackend = fabric.initFilterBackend();\r\n        }\r\n        var canvasEl = fabric.util.createCanvasElement(),\r\n            cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\r\n            sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\r\n        canvasEl.width = sourceWidth;\r\n        canvasEl.height = sourceHeight;\r\n        this._element = canvasEl;\r\n        this._lastScaleX = filter.scaleX = scaleX;\r\n        this._lastScaleY = filter.scaleY = scaleY;\r\n        fabric.filterBackend.applyFilters(\r\n          [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\r\n        this._filterScalingX = canvasEl.width / this._originalElement.width;\r\n        this._filterScalingY = canvasEl.height / this._originalElement.height;\r\n      },\r\n\r\n      /**\r\n       * Applies filters assigned to this image (from \"filters\" array) or from filter param\r\n       * @method applyFilters\r\n       * @param {Array} filters to be applied\r\n       * @param {Boolean} forResizing specify if the filter operation is a resize operation\r\n       * @return {thisArg} return the fabric.Image object\r\n       * @chainable\r\n       */\r\n      applyFilters: function(filters) {\r\n\r\n        filters = filters || this.filters || [];\r\n        filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\r\n        this.set('dirty', true);\r\n\r\n        // needs to clear out or WEBGL will not resize correctly\r\n        this.removeTexture(this.cacheKey + '_filtered');\r\n\r\n        if (filters.length === 0) {\r\n          this._element = this._originalElement;\r\n          this._filteredEl = null;\r\n          this._filterScalingX = 1;\r\n          this._filterScalingY = 1;\r\n          return this;\r\n        }\r\n\r\n        var imgElement = this._originalElement,\r\n            sourceWidth = imgElement.naturalWidth || imgElement.width,\r\n            sourceHeight = imgElement.naturalHeight || imgElement.height;\r\n\r\n        if (this._element === this._originalElement) {\r\n          // if the element is the same we need to create a new element\r\n          var canvasEl = fabric.util.createCanvasElement();\r\n          canvasEl.width = sourceWidth;\r\n          canvasEl.height = sourceHeight;\r\n          this._element = canvasEl;\r\n          this._filteredEl = canvasEl;\r\n        }\r\n        else {\r\n          // clear the existing element to get new filter data\r\n          // also dereference the eventual resized _element\r\n          this._element = this._filteredEl;\r\n          this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\r\n          // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\r\n          this._lastScaleX = 1;\r\n          this._lastScaleY = 1;\r\n        }\r\n        if (!fabric.filterBackend) {\r\n          fabric.filterBackend = fabric.initFilterBackend();\r\n        }\r\n        fabric.filterBackend.applyFilters(\r\n          filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\r\n        if (this._originalElement.width !== this._element.width ||\r\n          this._originalElement.height !== this._element.height) {\r\n          this._filterScalingX = this._element.width / this._originalElement.width;\r\n          this._filterScalingY = this._element.height / this._originalElement.height;\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\r\n          this.applyResizeFilters();\r\n        }\r\n        this._stroke(ctx);\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group outside is cached.\r\n       * This is the special image version where we would like to avoid caching where possible.\r\n       * Essentially images do not benefit from caching. They may require caching, and in that\r\n       * case we do it. Also caching an image usually ends in a loss of details.\r\n       * A full performance audit should be done.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        return this.needsItsOwnCache();\r\n      },\r\n\r\n      _renderFill: function(ctx) {\r\n        var elementToDraw = this._element,\r\n            w = this.width, h = this.height,\r\n            sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\r\n            sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\r\n            x = -w / 2, y = -h / 2,\r\n            sX = Math.max(0, this.cropX * this._filterScalingX),\r\n            sY = Math.max(0, this.cropY * this._filterScalingY);\r\n\r\n        elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\r\n      },\r\n\r\n      /**\r\n       * needed to check if image needs resize\r\n       * @private\r\n       */\r\n      _needsResize: function() {\r\n        var scale = this.getTotalObjectScaling();\r\n        return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _resetWidthHeight: function() {\r\n        this.set(this.getOriginalSize());\r\n      },\r\n\r\n      /**\r\n       * The Image class's initialization method. This method is automatically\r\n       * called by the constructor.\r\n       * @private\r\n       * @param {HTMLImageElement|String} element The element representing the image\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initElement: function(element, options) {\r\n        this.setElement(fabric.util.getById(element), options);\r\n        fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initConfig: function(options) {\r\n        options || (options = { });\r\n        this.setOptions(options);\r\n        this._setWidthHeight(options);\r\n        if (this._element && this.crossOrigin) {\r\n          this._element.crossOrigin = this.crossOrigin;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Array} filters to be initialized\r\n       * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\r\n       */\r\n      _initFilters: function(filters, callback) {\r\n        if (filters && filters.length) {\r\n          fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\r\n            callback && callback(enlivenedObjects);\r\n          }, 'fabric.Image.filters');\r\n        }\r\n        else {\r\n          callback && callback();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Set the width and the height of the image object, using the element or the\r\n       * options.\r\n       * @param {Object} [options] Object with width/height properties\r\n       */\r\n      _setWidthHeight: function(options) {\r\n        options || (options = { });\r\n        var el = this.getElement();\r\n        this.width = options.width || el.naturalWidth || el.width || 0;\r\n        this.height = options.height || el.naturalHeight || el.height || 0;\r\n      },\r\n\r\n      /**\r\n       * Calculate offset for center and scale factor for the image in order to respect\r\n       * the preserveAspectRatio attribute\r\n       * @private\r\n       * @return {Object}\r\n       */\r\n      parsePreserveAspectRatioAttribute: function() {\r\n        var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\r\n            rWidth = this._element.width, rHeight = this._element.height,\r\n            scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\r\n            offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\r\n        if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\r\n          if (pAR.meetOrSlice === 'meet') {\r\n            scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\r\n            offset = (pWidth - rWidth * scaleX) / 2;\r\n            if (pAR.alignX === 'Min') {\r\n              offsetLeft = -offset;\r\n            }\r\n            if (pAR.alignX === 'Max') {\r\n              offsetLeft = offset;\r\n            }\r\n            offset = (pHeight - rHeight * scaleY) / 2;\r\n            if (pAR.alignY === 'Min') {\r\n              offsetTop = -offset;\r\n            }\r\n            if (pAR.alignY === 'Max') {\r\n              offsetTop = offset;\r\n            }\r\n          }\r\n          if (pAR.meetOrSlice === 'slice') {\r\n            scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\r\n            offset = rWidth - pWidth / scaleX;\r\n            if (pAR.alignX === 'Mid') {\r\n              cropX = offset / 2;\r\n            }\r\n            if (pAR.alignX === 'Max') {\r\n              cropX = offset;\r\n            }\r\n            offset = rHeight - pHeight / scaleY;\r\n            if (pAR.alignY === 'Mid') {\r\n              cropY = offset / 2;\r\n            }\r\n            if (pAR.alignY === 'Max') {\r\n              cropY = offset;\r\n            }\r\n            rWidth = pWidth / scaleX;\r\n            rHeight = pHeight / scaleY;\r\n          }\r\n        }\r\n        else {\r\n          scaleX = pWidth / rWidth;\r\n          scaleY = pHeight / rHeight;\r\n        }\r\n        return {\r\n          width: rWidth,\r\n          height: rHeight,\r\n          scaleX: scaleX,\r\n          scaleY: scaleY,\r\n          offsetLeft: offsetLeft,\r\n          offsetTop: offsetTop,\r\n          cropX: cropX,\r\n          cropY: cropY\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Default CSS class name for canvas\r\n     * @static\r\n     * @type String\r\n     * @default\r\n     */\r\n    fabric.Image.CSS_CANVAS = 'canvas-img';\r\n\r\n    /**\r\n     * Alias for getSrc\r\n     * @static\r\n     */\r\n    fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\r\n\r\n    /**\r\n     * Creates an instance of fabric.Image from its object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} callback Callback to invoke when an image instance is created\r\n     */\r\n    fabric.Image.fromObject = function(_object, callback) {\r\n      var object = fabric.util.object.clone(_object);\r\n      fabric.util.loadImage(object.src, function(img, error) {\r\n        if (error) {\r\n          callback && callback(null, error);\r\n          return;\r\n        }\r\n        fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\r\n          object.filters = filters || [];\r\n          fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\r\n            object.resizeFilter = resizeFilters[0];\r\n            fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\r\n              object.clipPath = enlivedProps[0];\r\n              var image = new fabric.Image(img, object);\r\n              callback(image);\r\n            });\r\n          });\r\n        });\r\n      }, null, object.crossOrigin);\r\n    };\r\n\r\n    /**\r\n     * Creates an instance of fabric.Image from an URL string\r\n     * @static\r\n     * @param {String} url URL to create an image from\r\n     * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\r\n     * @param {Object} [imgOptions] Options object\r\n     */\r\n    fabric.Image.fromURL = function(url, callback, imgOptions) {\r\n      fabric.util.loadImage(url, function(img) {\r\n        callback && callback(new fabric.Image(img, imgOptions));\r\n      }, null, imgOptions && imgOptions.crossOrigin);\r\n    };\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\r\n     * @static\r\n     * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\r\n     */\r\n    fabric.Image.ATTRIBUTE_NAMES =\r\n      fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Image} instance from an SVG element\r\n     * @static\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} callback Callback to execute when fabric.Image object is created\r\n     * @return {fabric.Image} Instance of fabric.Image\r\n     */\r\n    fabric.Image.fromElement = function(element, callback, options) {\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\r\n      fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\r\n        extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * @private\r\n     * @return {Number} angle value\r\n     */\r\n    _getAngleValueForStraighten: function() {\r\n      var angle = this.angle % 360;\r\n      if (angle > 0) {\r\n        return Math.round((angle - 1) / 90) * 90;\r\n      }\r\n      return Math.round(angle / 90) * 90;\r\n    },\r\n\r\n    /**\r\n     * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    straighten: function() {\r\n      this.rotate(this._getAngleValueForStraighten());\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Same as {@link fabric.Object.prototype.straighten} but with animation\r\n     * @param {Object} callbacks Object with callback functions\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    fxStraighten: function(callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: this.get('angle'),\r\n        endValue: this._getAngleValueForStraighten(),\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          _this.rotate(value);\r\n          onChange();\r\n        },\r\n        onComplete: function() {\r\n          _this.setCoords();\r\n          onComplete();\r\n        },\r\n      });\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Straightens object, then rerenders canvas\r\n     * @param {fabric.Object} object Object to straighten\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    straightenObject: function (object) {\r\n      object.straighten();\r\n      this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\r\n     * @param {fabric.Object} object Object to straighten\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxStraightenObject: function (object) {\r\n      object.fxStraighten({\r\n        onChange: this.requestRenderAllBound\r\n      });\r\n      return this;\r\n    }\r\n  });\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Tests if webgl supports certain precision\r\n     * @param {WebGL} Canvas WebGL context to test on\r\n     * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\r\n     * @returns {Boolean} Whether the user's browser WebGL supports given precision.\r\n     */\r\n    function testPrecision(gl, precision){\r\n      var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\r\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n      gl.shaderSource(fragmentShader, fragmentSource);\r\n      gl.compileShader(fragmentShader);\r\n      if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Indicate whether this filtering backend is supported by the user's browser.\r\n     * @param {Number} tileSize check if the tileSize is supported\r\n     * @returns {Boolean} Whether the user's browser supports WebGL.\r\n     */\r\n    fabric.isWebglSupported = function(tileSize) {\r\n      if (fabric.isLikelyNode) {\r\n        return false;\r\n      }\r\n      tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\r\n      var canvas = document.createElement('canvas');\r\n      var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n      var isSupported = false;\r\n      // eslint-disable-next-line\r\n      if (gl) {\r\n        fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n        isSupported = fabric.maxTextureSize >= tileSize;\r\n        var precisions = ['highp', 'mediump', 'lowp'];\r\n        for (var i = 0; i < 3; i++){\r\n          if (testPrecision(gl, precisions[i])){\r\n            fabric.webGlPrecision = precisions[i];\r\n            break;\r\n          };\r\n        }\r\n      }\r\n      this.isSupported = isSupported;\r\n      return isSupported;\r\n    };\r\n\r\n    fabric.WebglFilterBackend = WebglFilterBackend;\r\n\r\n    /**\r\n     * WebGL filter backend.\r\n     */\r\n    function WebglFilterBackend(options) {\r\n      if (options && options.tileSize) {\r\n        this.tileSize = options.tileSize;\r\n      }\r\n      this.setupGLContext(this.tileSize, this.tileSize);\r\n      this.captureGPUInfo();\r\n    };\r\n\r\n    WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\r\n\r\n      tileSize: 2048,\r\n\r\n      /**\r\n       * Experimental. This object is a sort of repository of help layers used to avoid\r\n       * of recreating them during frequent filtering. If you are previewing a filter with\r\n       * a slider you problably do not want to create help layers every filter step.\r\n       * in this object there will be appended some canvases, created once, resized sometimes\r\n       * cleared never. Clearing is left to the developer.\r\n       **/\r\n      resources: {\r\n\r\n      },\r\n\r\n      /**\r\n       * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\r\n       */\r\n      setupGLContext: function(width, height) {\r\n        this.dispose();\r\n        this.createWebGLCanvas(width, height);\r\n        // eslint-disable-next-line\r\n        this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\r\n        this.chooseFastestCopyGLTo2DMethod(width, height);\r\n      },\r\n\r\n      /**\r\n       * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\r\n       * putImageData is faster than drawImage for that specific operation.\r\n       */\r\n      chooseFastestCopyGLTo2DMethod: function(width, height) {\r\n        var canMeasurePerf = typeof window.performance !== 'undefined', canUseImageData;\r\n        try {\r\n          new ImageData(1, 1);\r\n          canUseImageData = true;\r\n        }\r\n        catch (e) {\r\n          canUseImageData = false;\r\n        }\r\n        // eslint-disable-next-line no-undef\r\n        var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\r\n        // eslint-disable-next-line no-undef\r\n        var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\r\n\r\n        if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\r\n          return;\r\n        }\r\n\r\n        var targetCanvas = fabric.util.createCanvasElement();\r\n        // eslint-disable-next-line no-undef\r\n        var imageBuffer = new ArrayBuffer(width * height * 4);\r\n        if (fabric.forceGLPutImageData) {\r\n          this.imageBuffer = imageBuffer;\r\n          this.copyGLTo2D = copyGLTo2DPutImageData;\r\n          return;\r\n        }\r\n        var testContext = {\r\n          imageBuffer: imageBuffer,\r\n          destinationWidth: width,\r\n          destinationHeight: height,\r\n          targetCanvas: targetCanvas\r\n        };\r\n        var startTime, drawImageTime, putImageDataTime;\r\n        targetCanvas.width = width;\r\n        targetCanvas.height = height;\r\n\r\n        startTime = window.performance.now();\r\n        copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\r\n        drawImageTime = window.performance.now() - startTime;\r\n\r\n        startTime = window.performance.now();\r\n        copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\r\n        putImageDataTime = window.performance.now() - startTime;\r\n\r\n        if (drawImageTime > putImageDataTime) {\r\n          this.imageBuffer = imageBuffer;\r\n          this.copyGLTo2D = copyGLTo2DPutImageData;\r\n        }\r\n        else {\r\n          this.copyGLTo2D = copyGLTo2DDrawImage;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Create a canvas element and associated WebGL context and attaches them as\r\n       * class properties to the GLFilterBackend class.\r\n       */\r\n      createWebGLCanvas: function(width, height) {\r\n        var canvas = fabric.util.createCanvasElement();\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        var glOptions = {\r\n              alpha: true,\r\n              premultipliedAlpha: false,\r\n              depth: false,\r\n              stencil: false,\r\n              antialias: false\r\n            },\r\n            gl = canvas.getContext('webgl', glOptions);\r\n        if (!gl) {\r\n          gl = canvas.getContext('experimental-webgl', glOptions);\r\n        }\r\n        if (!gl) {\r\n          return;\r\n        }\r\n        gl.clearColor(0, 0, 0, 0);\r\n        // this canvas can fire webglcontextlost and webglcontextrestored\r\n        this.canvas = canvas;\r\n        this.gl = gl;\r\n      },\r\n\r\n      /**\r\n       * Attempts to apply the requested filters to the source provided, drawing the filtered output\r\n       * to the provided target canvas.\r\n       *\r\n       * @param {Array} filters The filters to apply.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\r\n       * @param {Number} width The width of the source input.\r\n       * @param {Number} height The height of the source input.\r\n       * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n       * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\r\n       * omitted, caching will be skipped.\r\n       */\r\n      applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\r\n        var gl = this.gl;\r\n        var cachedTexture;\r\n        if (cacheKey) {\r\n          cachedTexture = this.getCachedTexture(cacheKey, source);\r\n        }\r\n        var pipelineState = {\r\n          originalWidth: source.width || source.originalWidth,\r\n          originalHeight: source.height || source.originalHeight,\r\n          sourceWidth: width,\r\n          sourceHeight: height,\r\n          destinationWidth: width,\r\n          destinationHeight: height,\r\n          context: gl,\r\n          sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\r\n          targetTexture: this.createTexture(gl, width, height),\r\n          originalTexture: cachedTexture ||\r\n            this.createTexture(gl, width, height, !cachedTexture && source),\r\n          passes: filters.length,\r\n          webgl: true,\r\n          aPosition: this.aPosition,\r\n          programCache: this.programCache,\r\n          pass: 0,\r\n          filterBackend: this,\r\n          targetCanvas: targetCanvas\r\n        };\r\n        var tempFbo = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\r\n        filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\r\n        resizeCanvasIfNeeded(pipelineState);\r\n        this.copyGLTo2D(gl, pipelineState);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.deleteTexture(pipelineState.sourceTexture);\r\n        gl.deleteTexture(pipelineState.targetTexture);\r\n        gl.deleteFramebuffer(tempFbo);\r\n        targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\r\n        return pipelineState;\r\n      },\r\n\r\n      /**\r\n       * Detach event listeners, remove references, and clean up caches.\r\n       */\r\n      dispose: function() {\r\n        if (this.canvas) {\r\n          this.canvas = null;\r\n          this.gl = null;\r\n        }\r\n        this.clearWebGLCaches();\r\n      },\r\n\r\n      /**\r\n       * Wipe out WebGL-related caches.\r\n       */\r\n      clearWebGLCaches: function() {\r\n        this.programCache = {};\r\n        this.textureCache = {};\r\n      },\r\n\r\n      /**\r\n       * Create a WebGL texture object.\r\n       *\r\n       * Accepts specific dimensions to initialize the textuer to or a source image.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\r\n       * @param {Number} width The width to initialize the texture at.\r\n       * @param {Number} height The height to initialize the texture.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\r\n       * @returns {WebGLTexture}\r\n       */\r\n      createTexture: function(gl, width, height, textureImageSource) {\r\n        var texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        if (textureImageSource) {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\r\n        }\r\n        else {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n        }\r\n        return texture;\r\n      },\r\n\r\n      /**\r\n       * Can be optionally used to get a texture from the cache array\r\n       *\r\n       * If an existing texture is not found, a new texture is created and cached.\r\n       *\r\n       * @param {String} uniqueId A cache key to use to find an existing texture.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\r\n       * texture cache entry if one does not already exist.\r\n       */\r\n      getCachedTexture: function(uniqueId, textureImageSource) {\r\n        if (this.textureCache[uniqueId]) {\r\n          return this.textureCache[uniqueId];\r\n        }\r\n        else {\r\n          var texture = this.createTexture(\r\n            this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\r\n          this.textureCache[uniqueId] = texture;\r\n          return texture;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Clear out cached resources related to a source image that has been\r\n       * filtered previously.\r\n       *\r\n       * @param {String} cacheKey The cache key provided when the source image was filtered.\r\n       */\r\n      evictCachesForKey: function(cacheKey) {\r\n        if (this.textureCache[cacheKey]) {\r\n          this.gl.deleteTexture(this.textureCache[cacheKey]);\r\n          delete this.textureCache[cacheKey];\r\n        }\r\n      },\r\n\r\n      copyGLTo2D: copyGLTo2DDrawImage,\r\n\r\n      /**\r\n       * Attempt to extract GPU information strings from a WebGL context.\r\n       *\r\n       * Useful information when debugging or blacklisting specific GPUs.\r\n       *\r\n       * @returns {Object} A GPU info object with renderer and vendor strings.\r\n       */\r\n      captureGPUInfo: function() {\r\n        if (this.gpuInfo) {\r\n          return this.gpuInfo;\r\n        }\r\n        var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\r\n        if (!gl) {\r\n          return gpuInfo;\r\n        }\r\n        var ext = gl.getExtension('WEBGL_debug_renderer_info');\r\n        if (ext) {\r\n          var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\r\n          var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\r\n          if (renderer) {\r\n            gpuInfo.renderer = renderer.toLowerCase();\r\n          }\r\n          if (vendor) {\r\n            gpuInfo.vendor = vendor.toLowerCase();\r\n          }\r\n        }\r\n        this.gpuInfo = gpuInfo;\r\n        return gpuInfo;\r\n      },\r\n    };\r\n  })();\r\n\r\n  function resizeCanvasIfNeeded(pipelineState) {\r\n    var targetCanvas = pipelineState.targetCanvas,\r\n        width = targetCanvas.width, height = targetCanvas.height,\r\n        dWidth = pipelineState.destinationWidth,\r\n        dHeight = pipelineState.destinationHeight;\r\n\r\n    if (width !== dWidth || height !== dHeight) {\r\n      targetCanvas.width = dWidth;\r\n      targetCanvas.height = dHeight;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy an input WebGL canvas on to an output 2D canvas.\r\n   *\r\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\r\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\r\n   *\r\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\r\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n   */\r\n  function copyGLTo2DDrawImage(gl, pipelineState) {\r\n    var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\r\n        ctx = targetCanvas.getContext('2d');\r\n    ctx.translate(0, targetCanvas.height); // move it down again\r\n    ctx.scale(1, -1); // vertical flip\r\n    // where is my image on the big glcanvas?\r\n    var sourceY = glCanvas.height - targetCanvas.height;\r\n    ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\r\n      targetCanvas.width, targetCanvas.height);\r\n  }\r\n\r\n  /**\r\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\r\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\r\n   *\r\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\r\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n   */\r\n  function copyGLTo2DPutImageData(gl, pipelineState) {\r\n    var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\r\n        dWidth = pipelineState.destinationWidth,\r\n        dHeight = pipelineState.destinationHeight,\r\n        numBytes = dWidth * dHeight * 4;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\r\n    // eslint-disable-next-line no-undef\r\n    var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\r\n\r\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\r\n    var imgData = new ImageData(u8Clamped, dWidth, dHeight);\r\n    ctx.putImageData(imgData, 0, 0);\r\n  }\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n\r\n    var noop = function() {};\r\n\r\n    fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\r\n\r\n    /**\r\n     * Canvas 2D filter backend.\r\n     */\r\n    function Canvas2dFilterBackend() {};\r\n\r\n    Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\r\n      evictCachesForKey: noop,\r\n      dispose: noop,\r\n      clearWebGLCaches: noop,\r\n\r\n      /**\r\n       * Experimental. This object is a sort of repository of help layers used to avoid\r\n       * of recreating them during frequent filtering. If you are previewing a filter with\r\n       * a slider you probably do not want to create help layers every filter step.\r\n       * in this object there will be appended some canvases, created once, resized sometimes\r\n       * cleared never. Clearing is left to the developer.\r\n       **/\r\n      resources: {\r\n\r\n      },\r\n\r\n      /**\r\n       * Apply a set of filters against a source image and draw the filtered output\r\n       * to the provided destination canvas.\r\n       *\r\n       * @param {EnhancedFilter} filters The filter to apply.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\r\n       * @param {Number} sourceWidth The width of the source input.\r\n       * @param {Number} sourceHeight The height of the source input.\r\n       * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n       */\r\n      applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\r\n        var ctx = targetCanvas.getContext('2d');\r\n        ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\r\n        var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n        var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n        var pipelineState = {\r\n          sourceWidth: sourceWidth,\r\n          sourceHeight: sourceHeight,\r\n          imageData: imageData,\r\n          originalEl: sourceElement,\r\n          originalImageData: originalImageData,\r\n          canvasEl: targetCanvas,\r\n          ctx: ctx,\r\n          filterBackend: this,\r\n        };\r\n        filters.forEach(function(filter) { filter.applyTo(pipelineState); });\r\n        if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\r\n          targetCanvas.width = pipelineState.imageData.width;\r\n          targetCanvas.height = pipelineState.imageData.height;\r\n        }\r\n        ctx.putImageData(pipelineState.imageData, 0, 0);\r\n        return pipelineState;\r\n      },\r\n\r\n    };\r\n  })();\r\n\r\n\r\n  /**\r\n   * @namespace fabric.Image.filters\r\n   * @memberOf fabric.Image\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   */\r\n  fabric.Image = fabric.Image || { };\r\n  fabric.Image.filters = fabric.Image.filters || { };\r\n\r\n  /**\r\n   * Root filter class from which all filter classes inherit from\r\n   * @class fabric.Image.filters.BaseFilter\r\n   * @memberOf fabric.Image.filters\r\n   */\r\n  fabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'BaseFilter',\r\n\r\n    /**\r\n     * Array of attributes to send with buffers. do not modify\r\n     * @private\r\n     */\r\n\r\n    vertexSource: 'attribute vec2 aPosition;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'vTexCoord = aPosition;\\n' +\r\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\r\n      '}',\r\n\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'void main() {\\n' +\r\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     */\r\n    initialize: function(options) {\r\n      if (options) {\r\n        this.setOptions(options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets filter's properties from options\r\n     * @param {Object} [options] Options object\r\n     */\r\n    setOptions: function(options) {\r\n      for (var prop in options) {\r\n        this[prop] = options[prop];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Compile this filter's shader program.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\r\n     * @param {String} fragmentSource fragmentShader source for compilation\r\n     * @param {String} vertexSource vertexShader source for compilation\r\n     */\r\n    createProgram: function(gl, fragmentSource, vertexSource) {\r\n      fragmentSource = fragmentSource || this.fragmentSource;\r\n      vertexSource = vertexSource || this.vertexSource;\r\n      if (fabric.webGlPrecision !== 'highp'){\r\n        fragmentSource = fragmentSource.replace(\r\n          /precision highp float/g,\r\n          'precision ' + fabric.webGlPrecision + ' float'\r\n        );\r\n      }\r\n      var vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n      gl.shaderSource(vertexShader, vertexSource);\r\n      gl.compileShader(vertexShader);\r\n      if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\r\n        throw new Error(\r\n          // eslint-disable-next-line prefer-template\r\n          'Vertex shader compile error for ' + this.type + ': ' +\r\n          gl.getShaderInfoLog(vertexShader)\r\n        );\r\n      }\r\n\r\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n      gl.shaderSource(fragmentShader, fragmentSource);\r\n      gl.compileShader(fragmentShader);\r\n      if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n        throw new Error(\r\n          // eslint-disable-next-line prefer-template\r\n          'Fragment shader compile error for ' + this.type + ': ' +\r\n          gl.getShaderInfoLog(fragmentShader)\r\n        );\r\n      }\r\n\r\n      var program = gl.createProgram();\r\n      gl.attachShader(program, vertexShader);\r\n      gl.attachShader(program, fragmentShader);\r\n      gl.linkProgram(program);\r\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        throw new Error(\r\n          // eslint-disable-next-line prefer-template\r\n          'Shader link error for \"${this.type}\" ' +\r\n          gl.getProgramInfoLog(program)\r\n        );\r\n      }\r\n\r\n      var attributeLocations = this.getAttributeLocations(gl, program);\r\n      var uniformLocations = this.getUniformLocations(gl, program) || { };\r\n      uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\r\n      uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\r\n      return {\r\n        program: program,\r\n        attributeLocations: attributeLocations,\r\n        uniformLocations: uniformLocations\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Return a map of attribute names to WebGLAttributeLocation objects.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\r\n     * @returns {Object} A map of attribute names to attribute locations.\r\n     */\r\n    getAttributeLocations: function(gl, program) {\r\n      return {\r\n        aPosition: gl.getAttribLocation(program, 'aPosition'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Return a map of uniform names to WebGLUniformLocation objects.\r\n     *\r\n     * Intended to be overridden by subclasses.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\r\n     * @returns {Object} A map of uniform names to uniform locations.\r\n     */\r\n    getUniformLocations: function (/* gl, program */) {\r\n      // in case i do not need any special uniform i need to return an empty object\r\n      return { };\r\n    },\r\n\r\n    /**\r\n     * Send attribute data from this filter to its shader program on the GPU.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {Object} attributeLocations A map of shader attribute names to their locations.\r\n     */\r\n    sendAttributeData: function(gl, attributeLocations, aPositionData) {\r\n      var attributeLocation = attributeLocations.aPosition;\r\n      var buffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n      gl.enableVertexAttribArray(attributeLocation);\r\n      gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\r\n      gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\r\n    },\r\n\r\n    _setupFrameBuffer: function(options) {\r\n      var gl = options.context, width, height;\r\n      if (options.passes > 1) {\r\n        width = options.destinationWidth;\r\n        height = options.destinationHeight;\r\n        if (options.sourceWidth !== width || options.sourceHeight !== height) {\r\n          gl.deleteTexture(options.targetTexture);\r\n          options.targetTexture = options.filterBackend.createTexture(gl, width, height);\r\n        }\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\r\n          options.targetTexture, 0);\r\n      }\r\n      else {\r\n        // draw last filter on canvas and not to framebuffer.\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.finish();\r\n      }\r\n    },\r\n\r\n    _swapTextures: function(options) {\r\n      options.passes--;\r\n      options.pass++;\r\n      var temp = options.targetTexture;\r\n      options.targetTexture = options.sourceTexture;\r\n      options.sourceTexture = temp;\r\n    },\r\n\r\n    /**\r\n     * Generic isNeutral implementation for one parameter based filters.\r\n     * Used only in image applyFilters to discard filters that will not have an effect\r\n     * on the image\r\n     * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\r\n     * @param {Object} options\r\n     **/\r\n    isNeutralState: function(/* options */) {\r\n      var main = this.mainParameter,\r\n          _class = fabric.Image.filters[this.type].prototype;\r\n      if (main) {\r\n        if (Array.isArray(_class[main])) {\r\n          for (var i = _class[main].length; i--;) {\r\n            if (this[main][i] !== _class[main][i]) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n        else {\r\n          return _class[main] === this[main];\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Apply this filter to the input image data provided.\r\n     *\r\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Number} options.passes The number of filters remaining to be executed\r\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    applyTo: function(options) {\r\n      if (options.webgl) {\r\n        this._setupFrameBuffer(options);\r\n        this.applyToWebGL(options);\r\n        this._swapTextures(options);\r\n      }\r\n      else {\r\n        this.applyTo2d(options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Retrieves the cached shader.\r\n     * @param {Object} options\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    retrieveShader: function(options) {\r\n      if (!options.programCache.hasOwnProperty(this.type)) {\r\n        options.programCache[this.type] = this.createProgram(options.context);\r\n      }\r\n      return options.programCache[this.type];\r\n    },\r\n\r\n    /**\r\n     * Apply this filter using webgl.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Number} options.passes The number of filters remaining to be executed\r\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n     * @param {WebGLTexture} options.originalTexture The texture of the original input image.\r\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    applyToWebGL: function(options) {\r\n      var gl = options.context;\r\n      var shader = this.retrieveShader(options);\r\n      if (options.pass === 0 && options.originalTexture) {\r\n        gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\r\n      }\r\n      else {\r\n        gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\r\n      }\r\n      gl.useProgram(shader.program);\r\n      this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\r\n\r\n      gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\r\n      gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\r\n\r\n      this.sendUniformData(gl, shader.uniformLocations);\r\n      gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\r\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n    },\r\n\r\n    bindAdditionalTexture: function(gl, texture, textureUnit) {\r\n      gl.activeTexture(textureUnit);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      // reset active texture to 0 as usual\r\n      gl.activeTexture(gl.TEXTURE0);\r\n    },\r\n\r\n    unbindAdditionalTexture: function(gl, textureUnit) {\r\n      gl.activeTexture(textureUnit);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n      gl.activeTexture(gl.TEXTURE0);\r\n    },\r\n\r\n    getMainParameter: function() {\r\n      return this[this.mainParameter];\r\n    },\r\n\r\n    setMainParameter: function(value) {\r\n      this[this.mainParameter] = value;\r\n    },\r\n\r\n    /**\r\n     * Send uniform data from this filter to its shader program on the GPU.\r\n     *\r\n     * Intended to be overridden by subclasses.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {Object} uniformLocations A map of shader uniform names to their locations.\r\n     */\r\n    sendUniformData: function(/* gl, uniformLocations */) {\r\n      // Intentionally left blank.  Override me in subclasses.\r\n    },\r\n\r\n    /**\r\n     * If needed by a 2d filter, this functions can create an helper canvas to be used\r\n     * remember that options.targetCanvas is available for use till end of chain.\r\n     */\r\n    createHelpLayer: function(options) {\r\n      if (!options.helpLayer) {\r\n        var helpLayer = document.createElement('canvas');\r\n        helpLayer.width = options.sourceWidth;\r\n        helpLayer.height = options.sourceHeight;\r\n        options.helpLayer = helpLayer;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function() {\r\n      var object = { type: this.type }, mainP = this.mainParameter;\r\n      if (mainP) {\r\n        object[mainP] = this[mainP];\r\n      }\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * Returns a JSON representation of an instance\r\n     * @return {Object} JSON\r\n     */\r\n    toJSON: function() {\r\n      // delegate, not alias\r\n      return this.toObject();\r\n    }\r\n  });\r\n\r\n  fabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\r\n    var filter = new fabric.Image.filters[object.type](object);\r\n    callback && callback(filter);\r\n    return filter;\r\n  };\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Color Matrix filter class\r\n     * @class fabric.Image.filters.ColorMatrix\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\r\n     * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\r\n     * @example <caption>Kodachrome filter</caption>\r\n     * var filter = new fabric.Image.filters.ColorMatrix({\r\n     *  matrix: [\r\n         1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\r\n         -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\r\n         -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\r\n         0, 0, 0, 1, 0\r\n        ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'ColorMatrix',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'uniform mat4 uColorMatrix;\\n' +\r\n        'uniform vec4 uConstants;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'color *= uColorMatrix;\\n' +\r\n          'color += uConstants;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Colormatrix for pixels.\r\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\r\n       * outside the -1, 1 range.\r\n       * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n       * @param {Array} matrix array of 20 numbers.\r\n       * @default\r\n       */\r\n      matrix: [\r\n        1, 0, 0, 0, 0,\r\n        0, 1, 0, 0, 0,\r\n        0, 0, 1, 0, 0,\r\n        0, 0, 0, 1, 0\r\n      ],\r\n\r\n      mainParameter: 'matrix',\r\n\r\n      /**\r\n       * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\r\n       * to save some calculation\r\n       */\r\n      colorsOnly: true,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        // create a new array instead mutating the prototype with push\r\n        this.matrix = this.matrix.slice(0);\r\n      },\r\n\r\n      /**\r\n       * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data,\r\n            iLen = data.length,\r\n            m = this.matrix,\r\n            r, g, b, a, i, colorsOnly = this.colorsOnly;\r\n\r\n        for (i = 0; i < iLen; i += 4) {\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n          if (colorsOnly) {\r\n            data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\r\n            data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\r\n            data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\r\n          }\r\n          else {\r\n            a = data[i + 3];\r\n            data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\r\n            data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\r\n            data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\r\n            data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\r\n          uConstants: gl.getUniformLocation(program, 'uConstants'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var m = this.matrix,\r\n            matrix = [\r\n              m[0], m[1], m[2], m[3],\r\n              m[5], m[6], m[7], m[8],\r\n              m[10], m[11], m[12], m[13],\r\n              m[15], m[16], m[17], m[18]\r\n            ],\r\n            constants = [m[4], m[9], m[14], m[19]];\r\n        gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\r\n        gl.uniform4fv(uniformLocations.uConstants, constants);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] function to invoke after filter creation\r\n     * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\r\n     */\r\n    fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Brightness filter class\r\n     * @class fabric.Image.filters.Brightness\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Brightness({\r\n     *   brightness: 0.05\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Brightness',\r\n\r\n      /**\r\n       * Fragment source for the brightness program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uBrightness;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'color.rgb += uBrightness;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Brightness value, from -1 to 1.\r\n       * translated to -255 to 255 for 2d\r\n       * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n       * @param {Number} brightness\r\n       * @default\r\n       */\r\n      brightness: 0,\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'brightness',\r\n\r\n      /**\r\n      * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n      *\r\n      * @param {Object} options\r\n      * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n      */\r\n      applyTo2d: function(options) {\r\n        if (this.brightness === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i, len = data.length,\r\n            brightness = Math.round(this.brightness * 255);\r\n        for (i = 0; i < len; i += 4) {\r\n          data[i] = data[i] + brightness;\r\n          data[i + 1] = data[i + 1] + brightness;\r\n          data[i + 2] = data[i + 2] + brightness;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uBrightness: gl.getUniformLocation(program, 'uBrightness'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uBrightness, this.brightness);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\r\n     */\r\n    fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\r\n     * @class fabric.Image.filters.Convolute\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example <caption>Sharpen filter</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   matrix: [ 0, -1,  0,\r\n     *            -1,  5, -1,\r\n     *             0, -1,  0 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     * @example <caption>Blur filter</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   matrix: [ 1/9, 1/9, 1/9,\r\n     *             1/9, 1/9, 1/9,\r\n     *             1/9, 1/9, 1/9 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     * @example <caption>Emboss filter</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   matrix: [ 1,   1,  1,\r\n     *             1, 0.7, -1,\r\n     *            -1,  -1, -1 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     * @example <caption>Emboss filter with opaqueness</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   opaque: true,\r\n     *   matrix: [ 1,   1,  1,\r\n     *             1, 0.7, -1,\r\n     *            -1,  -1, -1 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Convolute',\r\n\r\n      /*\r\n       * Opaque value (true/false)\r\n       */\r\n      opaque: false,\r\n\r\n      /*\r\n       * matrix for the filter, max 9x9\r\n       */\r\n      matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n\r\n      /**\r\n       * Fragment source for the brightness program\r\n       */\r\n      fragmentSource: {\r\n        Convolute_3_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[9];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_3_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[9];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n        Convolute_5_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[25];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_5_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[25];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n        Convolute_7_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[49];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_7_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[49];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n        Convolute_9_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[81];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_9_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[81];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n      },\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.Convolute.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Boolean} [options.opaque=false] Opaque value (true/false)\r\n       * @param {Array} [options.matrix] Filter matrix\r\n       */\r\n\r\n\r\n      /**\r\n      * Retrieves the cached shader.\r\n      * @param {Object} options\r\n      * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n      * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n      */\r\n      retrieveShader: function(options) {\r\n        var size = Math.sqrt(this.matrix.length);\r\n        var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\r\n        var shaderSource = this.fragmentSource[cacheKey];\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      /**\r\n       * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data,\r\n            weights = this.matrix,\r\n            side = Math.round(Math.sqrt(weights.length)),\r\n            halfSide = Math.floor(side / 2),\r\n            sw = imageData.width,\r\n            sh = imageData.height,\r\n            output = options.ctx.createImageData(sw, sh),\r\n            dst = output.data,\r\n            // go through the destination image pixels\r\n            alphaFac = this.opaque ? 1 : 0,\r\n            r, g, b, a, dstOff,\r\n            scx, scy, srcOff, wt,\r\n            x, y, cx, cy;\r\n\r\n        for (y = 0; y < sh; y++) {\r\n          for (x = 0; x < sw; x++) {\r\n            dstOff = (y * sw + x) * 4;\r\n            // calculate the weighed sum of the source image pixels that\r\n            // fall under the convolution matrix\r\n            r = 0; g = 0; b = 0; a = 0;\r\n\r\n            for (cy = 0; cy < side; cy++) {\r\n              for (cx = 0; cx < side; cx++) {\r\n                scy = y + cy - halfSide;\r\n                scx = x + cx - halfSide;\r\n\r\n                // eslint-disable-next-line max-depth\r\n                if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\r\n                  continue;\r\n                }\r\n\r\n                srcOff = (scy * sw + scx) * 4;\r\n                wt = weights[cy * side + cx];\r\n\r\n                r += data[srcOff] * wt;\r\n                g += data[srcOff + 1] * wt;\r\n                b += data[srcOff + 2] * wt;\r\n                // eslint-disable-next-line max-depth\r\n                if (!alphaFac) {\r\n                  a += data[srcOff + 3] * wt;\r\n                }\r\n              }\r\n            }\r\n            dst[dstOff] = r;\r\n            dst[dstOff + 1] = g;\r\n            dst[dstOff + 2] = b;\r\n            if (!alphaFac) {\r\n              dst[dstOff + 3] = a;\r\n            }\r\n            else {\r\n              dst[dstOff + 3] = data[dstOff + 3];\r\n            }\r\n          }\r\n        }\r\n        options.imageData = output;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uMatrix: gl.getUniformLocation(program, 'uMatrix'),\r\n          uOpaque: gl.getUniformLocation(program, 'uOpaque'),\r\n          uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\r\n          uSize: gl.getUniformLocation(program, 'uSize'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return extend(this.callSuper('toObject'), {\r\n          opaque: this.opaque,\r\n          matrix: this.matrix\r\n        });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\r\n     */\r\n    fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Grayscale image filter class\r\n     * @class fabric.Image.filters.Grayscale\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Grayscale();\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Grayscale',\r\n\r\n      fragmentSource: {\r\n        average: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'float average = (color.r + color.b + color.g) / 3.0;\\n' +\r\n            'gl_FragColor = vec4(average, average, average, color.a);\\n' +\r\n          '}',\r\n        lightness: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform int uMode;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\r\n            'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\r\n            'gl_FragColor = vec4(average, average, average, col.a);\\n' +\r\n          '}',\r\n        luminosity: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform int uMode;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\r\n            'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\r\n            'gl_FragColor = vec4(average, average, average, col.a);\\n' +\r\n          '}',\r\n      },\r\n\r\n\r\n      /**\r\n       * Grayscale mode, between 'average', 'lightness', 'luminosity'\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      mode: 'average',\r\n\r\n      mainParameter: 'mode',\r\n\r\n      /**\r\n       * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i,\r\n            len = data.length, value,\r\n            mode = this.mode;\r\n        for (i = 0; i < len; i += 4) {\r\n          if (mode === 'average') {\r\n            value = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          }\r\n          else if (mode === 'lightness') {\r\n            value = (Math.min(data[i], data[i + 1], data[i + 2]) +\r\n              Math.max(data[i], data[i + 1], data[i + 2])) / 2;\r\n          }\r\n          else if (mode === 'luminosity') {\r\n            value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\r\n          }\r\n          data[i] = value;\r\n          data[i + 1] = value;\r\n          data[i + 2] = value;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var cacheKey = this.type + '_' + this.mode;\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          var shaderSource = this.fragmentSource[this.mode];\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uMode: gl.getUniformLocation(program, 'uMode'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        // default average mode.\r\n        var mode = 1;\r\n        gl.uniform1i(uniformLocations.uMode, mode);\r\n      },\r\n\r\n      /**\r\n       * Grayscale filter isNeutralState implementation\r\n       * The filter is never neutral\r\n       * on the image\r\n       **/\r\n      isNeutralState: function() {\r\n        return false;\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\r\n     */\r\n    fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Invert filter class\r\n     * @class fabric.Image.filters.Invert\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Invert();\r\n     * object.filters.push(filter);\r\n     * object.applyFilters(canvas.renderAll.bind(canvas));\r\n     */\r\n    filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Invert',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform int uInvert;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'if (uInvert == 1) {\\n' +\r\n            'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Filter invert. if false, does nothing\r\n       * @param {Boolean} invert\r\n       * @default\r\n       */\r\n      invert: true,\r\n\r\n      mainParameter: 'invert',\r\n\r\n      /**\r\n       * Apply the Invert operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i,\r\n            len = data.length;\r\n        for (i = 0; i < len; i += 4) {\r\n          data[i] = 255 - data[i];\r\n          data[i + 1] = 255 - data[i + 1];\r\n          data[i + 2] = 255 - data[i + 2];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Invert filter isNeutralState implementation\r\n       * Used only in image applyFilters to discard filters that will not have an effect\r\n       * on the image\r\n       * @param {Object} options\r\n       **/\r\n      isNeutralState: function() {\r\n        return !this.invert;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uInvert: gl.getUniformLocation(program, 'uInvert'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1i(uniformLocations.uInvert, this.invert);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\r\n     */\r\n    fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Noise filter class\r\n     * @class fabric.Image.filters.Noise\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Noise({\r\n     *   noise: 700\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Noise',\r\n\r\n      /**\r\n       * Fragment source for the noise program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'uniform float uNoise;\\n' +\r\n        'uniform float uSeed;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'float rand(vec2 co, float seed, float vScale) {\\n' +\r\n          'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\r\n        '}\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'noise',\r\n\r\n      /**\r\n       * Noise value, from\r\n       * @param {Number} noise\r\n       * @default\r\n       */\r\n      noise: 0,\r\n\r\n      /**\r\n       * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        if (this.noise === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i, len = data.length,\r\n            noise = this.noise, rand;\r\n\r\n        for (i = 0, len = data.length; i < len; i += 4) {\r\n\r\n          rand = (0.5 - Math.random()) * noise;\r\n\r\n          data[i] += rand;\r\n          data[i + 1] += rand;\r\n          data[i + 2] += rand;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uNoise: gl.getUniformLocation(program, 'uNoise'),\r\n          uSeed: gl.getUniformLocation(program, 'uSeed'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\r\n        gl.uniform1f(uniformLocations.uSeed, Math.random());\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return extend(this.callSuper('toObject'), {\r\n          noise: this.noise\r\n        });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\r\n     */\r\n    fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Pixelate filter class\r\n     * @class fabric.Image.filters.Pixelate\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Pixelate({\r\n     *   blocksize: 8\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Pixelate',\r\n\r\n      blocksize: 4,\r\n\r\n      mainParameter: 'blocksize',\r\n\r\n      /**\r\n       * Fragment source for the Pixelate program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uBlocksize;\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'float blockW = uBlocksize * uStepW;\\n' +\r\n          'float blockH = uBlocksize * uStepW;\\n' +\r\n          'int posX = int(vTexCoord.x / blockW);\\n' +\r\n          'int posY = int(vTexCoord.y / blockH);\\n' +\r\n          'float fposX = float(posX);\\n' +\r\n          'float fposY = float(posY);\\n' +\r\n          'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\r\n          'vec4 color = texture2D(uTexture, squareCoords);\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data,\r\n            iLen = imageData.height,\r\n            jLen = imageData.width,\r\n            index, i, j, r, g, b, a,\r\n            _i, _j, _iLen, _jLen;\r\n\r\n        for (i = 0; i < iLen; i += this.blocksize) {\r\n          for (j = 0; j < jLen; j += this.blocksize) {\r\n\r\n            index = (i * 4) * jLen + (j * 4);\r\n\r\n            r = data[index];\r\n            g = data[index + 1];\r\n            b = data[index + 2];\r\n            a = data[index + 3];\r\n\r\n            _iLen = Math.min(i + this.blocksize, iLen);\r\n            _jLen = Math.min(j + this.blocksize, jLen);\r\n            for (_i = i; _i < _iLen; _i++) {\r\n              for (_j = j; _j < _jLen; _j++) {\r\n                index = (_i * 4) * jLen + (_j * 4);\r\n                data[index] = r;\r\n                data[index + 1] = g;\r\n                data[index + 2] = b;\r\n                data[index + 3] = a;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Indicate when the filter is not gonna apply changes to the image\r\n       **/\r\n      isNeutralState: function() {\r\n        return this.blocksize === 1;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\r\n          uStepW: gl.getUniformLocation(program, 'uStepW'),\r\n          uStepH: gl.getUniformLocation(program, 'uStepH'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\r\n     */\r\n    fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Remove white filter class\r\n     * @class fabric.Image.filters.RemoveColor\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.RemoveColor({\r\n     *   threshold: 0.2,\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'RemoveColor',\r\n\r\n      /**\r\n       * Color to remove, in any format understood by fabric.Color.\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      color: '#FFFFFF',\r\n\r\n      /**\r\n       * Fragment source for the brightness program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec4 uLow;\\n' +\r\n        'uniform vec4 uHigh;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\r\n          'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\r\n            'gl_FragColor.a = 0.0;\\n' +\r\n          '}\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * distance to actual color, as value up or down from each r,g,b\r\n       * between 0 and 1\r\n       **/\r\n      distance: 0.02,\r\n\r\n      /**\r\n       * For color to remove inside distance, use alpha channel for a smoother deletion\r\n       * NOT IMPLEMENTED YET\r\n       **/\r\n      useAlpha: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.RemoveWhite.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Number} [options.color=#RRGGBB] Threshold value\r\n       * @param {Number} [options.distance=10] Distance value\r\n       */\r\n\r\n      /**\r\n       * Applies filter to canvas element\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i,\r\n            distance = this.distance * 255,\r\n            r, g, b,\r\n            source = new fabric.Color(this.color).getSource(),\r\n            lowC = [\r\n              source[0] - distance,\r\n              source[1] - distance,\r\n              source[2] - distance,\r\n            ],\r\n            highC = [\r\n              source[0] + distance,\r\n              source[1] + distance,\r\n              source[2] + distance,\r\n            ];\r\n\r\n\r\n        for (i = 0; i < data.length; i += 4) {\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n\r\n          if (r > lowC[0] &&\r\n              g > lowC[1] &&\r\n              b > lowC[2] &&\r\n              r < highC[0] &&\r\n              g < highC[1] &&\r\n              b < highC[2]) {\r\n            data[i + 3] = 0;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uLow: gl.getUniformLocation(program, 'uLow'),\r\n          uHigh: gl.getUniformLocation(program, 'uHigh'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var source = new fabric.Color(this.color).getSource(),\r\n            distance = parseFloat(this.distance),\r\n            lowC = [\r\n              0 + source[0] / 255 - distance,\r\n              0 + source[1] / 255 - distance,\r\n              0 + source[2] / 255 - distance,\r\n              1\r\n            ],\r\n            highC = [\r\n              source[0] / 255 + distance,\r\n              source[1] / 255 + distance,\r\n              source[2] / 255 + distance,\r\n              1\r\n            ];\r\n        gl.uniform4fv(uniformLocations.uLow, lowC);\r\n        gl.uniform4fv(uniformLocations.uHigh, highC);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return extend(this.callSuper('toObject'), {\r\n          color: this.color,\r\n          distance: this.distance\r\n        });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\r\n     */\r\n    fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    var matrices = {\r\n      Brownie: [\r\n        0.59970,0.34553,-0.27082,0,0.186,\r\n        -0.03770,0.86095,0.15059,0,-0.1449,\r\n        0.24113,-0.07441,0.44972,0,-0.02965,\r\n        0,0,0,1,0\r\n      ],\r\n      Vintage: [\r\n        0.62793,0.32021,-0.03965,0,0.03784,\r\n        0.02578,0.64411,0.03259,0,0.02926,\r\n        0.04660,-0.08512,0.52416,0,0.02023,\r\n        0,0,0,1,0\r\n      ],\r\n      Kodachrome: [\r\n        1.12855,-0.39673,-0.03992,0,0.24991,\r\n        -0.16404,1.08352,-0.05498,0,0.09698,\r\n        -0.16786,-0.56034,1.60148,0,0.13972,\r\n        0,0,0,1,0\r\n      ],\r\n      Technicolor: [\r\n        1.91252,-0.85453,-0.09155,0,0.04624,\r\n        -0.30878,1.76589,-0.10601,0,-0.27589,\r\n        -0.23110,-0.75018,1.84759,0,0.12137,\r\n        0,0,0,1,0\r\n      ],\r\n      Polaroid: [\r\n        1.438,-0.062,-0.062,0,0,\r\n        -0.122,1.378,-0.122,0,0,\r\n        -0.016,-0.016,1.483,0,0,\r\n        0,0,0,1,0\r\n      ],\r\n      Sepia: [\r\n        0.393, 0.769, 0.189, 0, 0,\r\n        0.349, 0.686, 0.168, 0, 0,\r\n        0.272, 0.534, 0.131, 0, 0,\r\n        0, 0, 0, 1, 0\r\n      ],\r\n      BlackWhite: [\r\n        1.5, 1.5, 1.5, 0, -1,\r\n        1.5, 1.5, 1.5, 0, -1,\r\n        1.5, 1.5, 1.5, 0, -1,\r\n        0, 0, 0, 1, 0,\r\n      ]\r\n    };\r\n\r\n    for (var key in matrices) {\r\n      filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\r\n\r\n        /**\r\n         * Filter type\r\n         * @param {String} type\r\n         * @default\r\n         */\r\n        type: key,\r\n\r\n        /**\r\n         * Colormatrix for the effect\r\n         * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\r\n         * outside the -1, 1 range.\r\n         * @param {Array} matrix array of 20 numbers.\r\n         * @default\r\n         */\r\n        matrix: matrices[key],\r\n\r\n        /**\r\n         * Lock the matrix export for this kind of static, parameter less filters.\r\n         */\r\n        mainParameter: false,\r\n        /**\r\n         * Lock the colormatrix on the color part, skipping alpha\r\n         */\r\n        colorsOnly: true,\r\n\r\n      });\r\n      fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n    }\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n    'use strict';\r\n\r\n    var fabric = global.fabric,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Color Blend filter class\r\n     * @class fabric.Image.filter.BlendColor\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @example\r\n     * var filter = new fabric.Image.filters.BlendColor({\r\n     *  color: '#000',\r\n     *  mode: 'multiply'\r\n     * });\r\n     *\r\n     * var filter = new fabric.Image.filters.BlendImage({\r\n     *  image: fabricImageObject,\r\n     *  mode: 'multiply',\r\n     *  alpha: 0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n\r\n    filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\r\n      type: 'BlendColor',\r\n\r\n      /**\r\n       * Color to make the blend operation with. default to a reddish color since black or white\r\n       * gives always strong result.\r\n       **/\r\n      color: '#F95C63',\r\n\r\n      /**\r\n       * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\r\n       * darken, lighten, overlay, exclusion, tint.\r\n       **/\r\n      mode: 'multiply',\r\n\r\n      /**\r\n       * alpha value. represent the strength of the blend color operation.\r\n       **/\r\n      alpha: 1,\r\n\r\n      /**\r\n       * Fragment source for the Multiply program\r\n       */\r\n      fragmentSource: {\r\n        multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\r\n        screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\r\n        add: 'gl_FragColor.rgb += uColor.rgb;\\n',\r\n        diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\r\n        subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\r\n        lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\r\n        darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\r\n        exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\r\n        overlay: 'if (uColor.r < 0.5) {\\n' +\r\n            'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\r\n          '}\\n' +\r\n          'if (uColor.g < 0.5) {\\n' +\r\n            'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\r\n          '}\\n' +\r\n          'if (uColor.b < 0.5) {\\n' +\r\n            'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\r\n          '}\\n',\r\n        tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\r\n          'gl_FragColor.rgb += uColor.rgb;\\n',\r\n      },\r\n\r\n      /**\r\n       * build the fragment source for the filters, joining the common part with\r\n       * the specific one.\r\n       * @param {String} mode the mode of the filter, a key of this.fragmentSource\r\n       * @return {String} the source to be compiled\r\n       * @private\r\n       */\r\n      buildSource: function(mode) {\r\n        return 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform vec4 uColor;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'if (color.a > 0.0) {\\n' +\r\n              this.fragmentSource[mode] +\r\n            '}\\n' +\r\n          '}';\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var cacheKey = this.type + '_' + this.mode, shaderSource;\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          shaderSource = this.buildSource(this.mode);\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      /**\r\n       * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, iLen = data.length,\r\n            tr, tg, tb,\r\n            r, g, b,\r\n            source, alpha1 = 1 - this.alpha;\r\n\r\n        source = new fabric.Color(this.color).getSource();\r\n        tr = source[0] * this.alpha;\r\n        tg = source[1] * this.alpha;\r\n        tb = source[2] * this.alpha;\r\n\r\n        for (var i = 0; i < iLen; i += 4) {\r\n\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n\r\n          switch (this.mode) {\r\n            case 'multiply':\r\n              data[i] = r * tr / 255;\r\n              data[i + 1] = g * tg / 255;\r\n              data[i + 2] = b * tb / 255;\r\n              break;\r\n            case 'screen':\r\n              data[i] = 255 - (255 - r) * (255 - tr) / 255;\r\n              data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\r\n              data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\r\n              break;\r\n            case 'add':\r\n              data[i] = r + tr;\r\n              data[i + 1] = g + tg;\r\n              data[i + 2] = b + tb;\r\n              break;\r\n            case 'diff':\r\n            case 'difference':\r\n              data[i] = Math.abs(r - tr);\r\n              data[i + 1] = Math.abs(g - tg);\r\n              data[i + 2] = Math.abs(b - tb);\r\n              break;\r\n            case 'subtract':\r\n              data[i] = r - tr;\r\n              data[i + 1] = g - tg;\r\n              data[i + 2] = b - tb;\r\n              break;\r\n            case 'darken':\r\n              data[i] = Math.min(r, tr);\r\n              data[i + 1] = Math.min(g, tg);\r\n              data[i + 2] = Math.min(b, tb);\r\n              break;\r\n            case 'lighten':\r\n              data[i] = Math.max(r, tr);\r\n              data[i + 1] = Math.max(g, tg);\r\n              data[i + 2] = Math.max(b, tb);\r\n              break;\r\n            case 'overlay':\r\n              data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\r\n              data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\r\n              data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\r\n              break;\r\n            case 'exclusion':\r\n              data[i] = tr + r - ((2 * tr * r) / 255);\r\n              data[i + 1] = tg + g - ((2 * tg * g) / 255);\r\n              data[i + 2] = tb + b - ((2 * tb * b) / 255);\r\n              break;\r\n            case 'tint':\r\n              data[i] = tr + r * alpha1;\r\n              data[i + 1] = tg + g * alpha1;\r\n              data[i + 2] = tb + b * alpha1;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uColor: gl.getUniformLocation(program, 'uColor'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var source = new fabric.Color(this.color).getSource();\r\n        source[0] = this.alpha * source[0] / 255;\r\n        source[1] = this.alpha * source[1] / 255;\r\n        source[2] = this.alpha * source[2] / 255;\r\n        source[3] = this.alpha;\r\n        gl.uniform4fv(uniformLocations.uColor, source);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return {\r\n          type: this.type,\r\n          color: this.color,\r\n          mode: this.mode,\r\n          alpha: this.alpha\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\r\n     */\r\n    fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n    'use strict';\r\n\r\n    var fabric = global.fabric,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Image Blend filter class\r\n     * @class fabric.Image.filter.BlendImage\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @example\r\n     * var filter = new fabric.Image.filters.BlendColor({\r\n     *  color: '#000',\r\n     *  mode: 'multiply'\r\n     * });\r\n     *\r\n     * var filter = new fabric.Image.filters.BlendImage({\r\n     *  image: fabricImageObject,\r\n     *  mode: 'multiply',\r\n     *  alpha: 0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n\r\n    filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\r\n      type: 'BlendImage',\r\n\r\n      /**\r\n       * Color to make the blend operation with. default to a reddish color since black or white\r\n       * gives always strong result.\r\n       **/\r\n      image: null,\r\n\r\n      /**\r\n       * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\r\n       * darken, lighten, overlay, exclusion, tint.\r\n       **/\r\n      mode: 'multiply',\r\n\r\n      /**\r\n       * alpha value. represent the strength of the blend image operation.\r\n       * not implemented.\r\n       **/\r\n      alpha: 1,\r\n\r\n      vertexSource: 'attribute vec2 aPosition;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'varying vec2 vTexCoord2;\\n' +\r\n        'uniform mat3 uTransformMatrix;\\n' +\r\n        'void main() {\\n' +\r\n          'vTexCoord = aPosition;\\n' +\r\n          'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\r\n          'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Fragment source for the Multiply program\r\n       */\r\n      fragmentSource: {\r\n        multiply: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform sampler2D uImage;\\n' +\r\n          'uniform vec4 uColor;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'varying vec2 vTexCoord2;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\r\n            'color.rgba *= color2.rgba;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        mask: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform sampler2D uImage;\\n' +\r\n          'uniform vec4 uColor;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'varying vec2 vTexCoord2;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\r\n            'color.a = color2.a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var cacheKey = this.type + '_' + this.mode;\r\n        var shaderSource = this.fragmentSource[this.mode];\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      applyToWebGL: function(options) {\r\n        // load texture to blend.\r\n        var gl = options.context,\r\n            texture = this.createTexture(options.filterBackend, this.image);\r\n        this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\r\n        this.callSuper('applyToWebGL', options);\r\n        this.unbindAdditionalTexture(gl, gl.TEXTURE1);\r\n      },\r\n\r\n      createTexture: function(backend, image) {\r\n        return backend.getCachedTexture(image.cacheKey, image._element);\r\n      },\r\n\r\n      /**\r\n       * Calculate a transformMatrix to adapt the image to blend over\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      calculateMatrix: function() {\r\n        var image = this.image,\r\n            width = image._element.width,\r\n            height = image._element.height;\r\n        return [\r\n          1 / image.scaleX, 0, 0,\r\n          0, 1 / image.scaleY, 0,\r\n          -image.left / width, -image.top / height, 1\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            resources = options.filterBackend.resources,\r\n            data = imageData.data, iLen = data.length,\r\n            width = imageData.width,\r\n            height = imageData.height,\r\n            tr, tg, tb, ta,\r\n            r, g, b, a,\r\n            canvas1, context, image = this.image, blendData;\r\n\r\n        if (!resources.blendImage) {\r\n          resources.blendImage = fabric.util.createCanvasElement();\r\n        }\r\n        canvas1 = resources.blendImage;\r\n        context = canvas1.getContext('2d');\r\n        if (canvas1.width !== width || canvas1.height !== height) {\r\n          canvas1.width = width;\r\n          canvas1.height = height;\r\n        }\r\n        else {\r\n          context.clearRect(0, 0, width, height);\r\n        }\r\n        context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\r\n        context.drawImage(image._element, 0, 0, width, height);\r\n        blendData = context.getImageData(0, 0, width, height).data;\r\n        for (var i = 0; i < iLen; i += 4) {\r\n\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n          a = data[i + 3];\r\n\r\n          tr = blendData[i];\r\n          tg = blendData[i + 1];\r\n          tb = blendData[i + 2];\r\n          ta = blendData[i + 3];\r\n\r\n          switch (this.mode) {\r\n            case 'multiply':\r\n              data[i] = r * tr / 255;\r\n              data[i + 1] = g * tg / 255;\r\n              data[i + 2] = b * tb / 255;\r\n              data[i + 3] = a * ta / 255;\r\n              break;\r\n            case 'mask':\r\n              data[i + 3] = ta;\r\n              break;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\r\n          uImage: gl.getUniformLocation(program, 'uImage'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var matrix = this.calculateMatrix();\r\n        gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\r\n        gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return {\r\n          type: this.type,\r\n          image: this.image && this.image.toObject(),\r\n          mode: this.mode,\r\n          alpha: this.alpha\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} callback to be invoked after filter creation\r\n     * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\r\n     */\r\n    fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\r\n      fabric.Image.fromObject(object.image, function(image) {\r\n        var options = fabric.util.object.clone(object);\r\n        options.image = image;\r\n        callback(new fabric.Image.filters.BlendImage(options));\r\n      });\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\r\n        sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\r\n        ceil = Math.ceil,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Resize image filter class\r\n     * @class fabric.Image.filters.Resize\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Resize();\r\n     * object.filters.push(filter);\r\n     * object.applyFilters(canvas.renderAll.bind(canvas));\r\n     */\r\n    filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Resize',\r\n\r\n      /**\r\n       * Resize type\r\n       * for webgl resizeType is just lanczos, for canvas2d can be:\r\n       * bilinear, hermite, sliceHack, lanczos.\r\n       * @param {String} resizeType\r\n       * @default\r\n       */\r\n      resizeType: 'hermite',\r\n\r\n      /**\r\n       * Scale factor for resizing, x axis\r\n       * @param {Number} scaleX\r\n       * @default\r\n       */\r\n      scaleX: 1,\r\n\r\n      /**\r\n       * Scale factor for resizing, y axis\r\n       * @param {Number} scaleY\r\n       * @default\r\n       */\r\n      scaleY: 1,\r\n\r\n      /**\r\n       * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\r\n       * @param {Number} lanczosLobes\r\n       * @default\r\n       */\r\n      lanczosLobes: 3,\r\n\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uDelta: gl.getUniformLocation(program, 'uDelta'),\r\n          uTaps: gl.getUniformLocation(program, 'uTaps'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\r\n        gl.uniform1fv(uniformLocations.uTaps, this.taps);\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          var fragmentShader = this.generateShader(filterWindow);\r\n          options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      getFilterWindow: function() {\r\n        var scale = this.tempScale;\r\n        return Math.ceil(this.lanczosLobes / scale);\r\n      },\r\n\r\n      getTaps: function() {\r\n        var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\r\n            filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\r\n        for (var i = 1; i <= filterWindow; i++) {\r\n          taps[i - 1] = lobeFunction(i * scale);\r\n        }\r\n        return taps;\r\n      },\r\n\r\n      /**\r\n       * Generate vertex and shader sources from the necessary steps numbers\r\n       * @param {Number} filterWindow\r\n       */\r\n      generateShader: function(filterWindow) {\r\n        var offsets = new Array(filterWindow),\r\n            fragmentShader = this.fragmentSourceTOP, filterWindow;\r\n\r\n        for (var i = 1; i <= filterWindow; i++) {\r\n          offsets[i - 1] = i + '.0 * uDelta';\r\n        }\r\n\r\n        fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\r\n        fragmentShader += 'void main() {\\n';\r\n        fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\r\n        fragmentShader += '  float sum = 1.0;\\n';\r\n\r\n        offsets.forEach(function(offset, i) {\r\n          fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\r\n          fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\r\n          fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\r\n        });\r\n        fragmentShader += '  gl_FragColor = color / sum;\\n';\r\n        fragmentShader += '}';\r\n        return fragmentShader;\r\n      },\r\n\r\n      fragmentSourceTOP: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec2 uDelta;\\n' +\r\n        'varying vec2 vTexCoord;\\n',\r\n\r\n      /**\r\n       * Apply the resize filter to the image\r\n       * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n       *\r\n       * @param {Object} options\r\n       * @param {Number} options.passes The number of filters remaining to be executed\r\n       * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n       * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n       * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      applyTo: function(options) {\r\n        if (options.webgl) {\r\n          options.passes++;\r\n          this.width = options.sourceWidth;\r\n          this.horizontal = true;\r\n          this.dW = Math.round(this.width * this.scaleX);\r\n          this.dH = options.sourceHeight;\r\n          this.tempScale = this.dW / this.width;\r\n          this.taps = this.getTaps();\r\n          options.destinationWidth = this.dW;\r\n          this._setupFrameBuffer(options);\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n          options.sourceWidth = options.destinationWidth;\r\n\r\n          this.height = options.sourceHeight;\r\n          this.horizontal = false;\r\n          this.dH = Math.round(this.height * this.scaleY);\r\n          this.tempScale = this.dH / this.height;\r\n          this.taps = this.getTaps();\r\n          options.destinationHeight = this.dH;\r\n          this._setupFrameBuffer(options);\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n          options.sourceHeight = options.destinationHeight;\r\n        }\r\n        else {\r\n          this.applyTo2d(options);\r\n        }\r\n      },\r\n\r\n      isNeutralState: function() {\r\n        return this.scaleX === 1 && this.scaleY === 1;\r\n      },\r\n\r\n      lanczosCreate: function(lobes) {\r\n        return function(x) {\r\n          if (x >= lobes || x <= -lobes) {\r\n            return 0.0;\r\n          }\r\n          if (x < 1.19209290E-07 && x > -1.19209290E-07) {\r\n            return 1.0;\r\n          }\r\n          x *= Math.PI;\r\n          var xx = x / lobes;\r\n          return (sin(x) / x) * sin(xx) / xx;\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Applies filter to canvas element\r\n       * @memberOf fabric.Image.filters.Resize.prototype\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} scaleX\r\n       * @param {Number} scaleY\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            scaleX = this.scaleX,\r\n            scaleY = this.scaleY;\r\n\r\n        this.rcpScaleX = 1 / scaleX;\r\n        this.rcpScaleY = 1 / scaleY;\r\n\r\n        var oW = imageData.width, oH = imageData.height,\r\n            dW = round(oW * scaleX), dH = round(oH * scaleY),\r\n            newData;\r\n\r\n        if (this.resizeType === 'sliceHack') {\r\n          newData = this.sliceByTwo(options, oW, oH, dW, dH);\r\n        }\r\n        else if (this.resizeType === 'hermite') {\r\n          newData = this.hermiteFastResize(options, oW, oH, dW, dH);\r\n        }\r\n        else if (this.resizeType === 'bilinear') {\r\n          newData = this.bilinearFiltering(options, oW, oH, dW, dH);\r\n        }\r\n        else if (this.resizeType === 'lanczos') {\r\n          newData = this.lanczosResize(options, oW, oH, dW, dH);\r\n        }\r\n        options.imageData = newData;\r\n      },\r\n\r\n      /**\r\n       * Filter sliceByTwo\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      sliceByTwo: function(options, oW, oH, dW, dH) {\r\n        var imageData = options.imageData,\r\n            mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\r\n            stepH = oH * mult, resources = fabric.filterBackend.resources,\r\n            tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\r\n        if (!resources.sliceByTwo) {\r\n          resources.sliceByTwo = document.createElement('canvas');\r\n        }\r\n        tmpCanvas = resources.sliceByTwo;\r\n        if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\r\n          tmpCanvas.width = oW * 1.5;\r\n          tmpCanvas.height = oH;\r\n        }\r\n        ctx = tmpCanvas.getContext('2d');\r\n        ctx.clearRect(0, 0, oW * 1.5, oH);\r\n        ctx.putImageData(imageData, 0, 0);\r\n\r\n        dW = floor(dW);\r\n        dH = floor(dH);\r\n\r\n        while (!doneW || !doneH) {\r\n          oW = stepW;\r\n          oH = stepH;\r\n          if (dW < floor(stepW * mult)) {\r\n            stepW = floor(stepW * mult);\r\n          }\r\n          else {\r\n            stepW = dW;\r\n            doneW = true;\r\n          }\r\n          if (dH < floor(stepH * mult)) {\r\n            stepH = floor(stepH * mult);\r\n          }\r\n          else {\r\n            stepH = dH;\r\n            doneH = true;\r\n          }\r\n          ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\r\n          sX = dX;\r\n          sY = dY;\r\n          dY += stepH;\r\n        }\r\n        return ctx.getImageData(sX, sY, dW, dH);\r\n      },\r\n\r\n      /**\r\n       * Filter lanczosResize\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      lanczosResize: function(options, oW, oH, dW, dH) {\r\n\r\n        function process(u) {\r\n          var v, i, weight, idx, a, red, green,\r\n              blue, alpha, fX, fY;\r\n          center.x = (u + 0.5) * ratioX;\r\n          icenter.x = floor(center.x);\r\n          for (v = 0; v < dH; v++) {\r\n            center.y = (v + 0.5) * ratioY;\r\n            icenter.y = floor(center.y);\r\n            a = 0; red = 0; green = 0; blue = 0; alpha = 0;\r\n            for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\r\n              if (i < 0 || i >= oW) {\r\n                continue;\r\n              }\r\n              fX = floor(1000 * abs(i - center.x));\r\n              if (!cacheLanc[fX]) {\r\n                cacheLanc[fX] = { };\r\n              }\r\n              for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\r\n                if (j < 0 || j >= oH) {\r\n                  continue;\r\n                }\r\n                fY = floor(1000 * abs(j - center.y));\r\n                if (!cacheLanc[fX][fY]) {\r\n                  cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\r\n                }\r\n                weight = cacheLanc[fX][fY];\r\n                if (weight > 0) {\r\n                  idx = (j * oW + i) * 4;\r\n                  a += weight;\r\n                  red += weight * srcData[idx];\r\n                  green += weight * srcData[idx + 1];\r\n                  blue += weight * srcData[idx + 2];\r\n                  alpha += weight * srcData[idx + 3];\r\n                }\r\n              }\r\n            }\r\n            idx = (v * dW + u) * 4;\r\n            destData[idx] = red / a;\r\n            destData[idx + 1] = green / a;\r\n            destData[idx + 2] = blue / a;\r\n            destData[idx + 3] = alpha / a;\r\n          }\r\n\r\n          if (++u < dW) {\r\n            return process(u);\r\n          }\r\n          else {\r\n            return destImg;\r\n          }\r\n        }\r\n\r\n        var srcData = options.imageData.data,\r\n            destImg = options.ctx.createImageData(dW, dH),\r\n            destData = destImg.data,\r\n            lanczos = this.lanczosCreate(this.lanczosLobes),\r\n            ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\r\n            rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\r\n            range2X = ceil(ratioX * this.lanczosLobes / 2),\r\n            range2Y = ceil(ratioY * this.lanczosLobes / 2),\r\n            cacheLanc = { }, center = { }, icenter = { };\r\n\r\n        return process(0);\r\n      },\r\n\r\n      /**\r\n       * bilinearFiltering\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      bilinearFiltering: function(options, oW, oH, dW, dH) {\r\n        var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\r\n            color, offset = 0, origPix, ratioX = this.rcpScaleX,\r\n            ratioY = this.rcpScaleY,\r\n            w4 = 4 * (oW - 1), img = options.imageData,\r\n            pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\r\n            destPixels = destImage.data;\r\n        for (i = 0; i < dH; i++) {\r\n          for (j = 0; j < dW; j++) {\r\n            x = floor(ratioX * j);\r\n            y = floor(ratioY * i);\r\n            xDiff = ratioX * j - x;\r\n            yDiff = ratioY * i - y;\r\n            origPix = 4 * (y * oW + x);\r\n\r\n            for (chnl = 0; chnl < 4; chnl++) {\r\n              a = pixels[origPix + chnl];\r\n              b = pixels[origPix + 4 + chnl];\r\n              c = pixels[origPix + w4 + chnl];\r\n              d = pixels[origPix + w4 + 4 + chnl];\r\n              color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\r\n                      c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\r\n              destPixels[offset++] = color;\r\n            }\r\n          }\r\n        }\r\n        return destImage;\r\n      },\r\n\r\n      /**\r\n       * hermiteFastResize\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      hermiteFastResize: function(options, oW, oH, dW, dH) {\r\n        var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\r\n            ratioWHalf = ceil(ratioW / 2),\r\n            ratioHHalf = ceil(ratioH / 2),\r\n            img = options.imageData, data = img.data,\r\n            img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\r\n        for (var j = 0; j < dH; j++) {\r\n          for (var i = 0; i < dW; i++) {\r\n            var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\r\n                gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\r\n            for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\r\n              var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\r\n                  centerX = (i + 0.5) * ratioW, w0 = dy * dy;\r\n              for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\r\n                var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\r\n                    w = sqrt(w0 + dx * dx);\r\n                /* eslint-disable max-depth */\r\n                if (w > 1 && w < -1) {\r\n                  continue;\r\n                }\r\n                //hermite filter\r\n                weight = 2 * w * w * w - 3 * w * w + 1;\r\n                if (weight > 0) {\r\n                  dx = 4 * (xx + yy * oW);\r\n                  //alpha\r\n                  gxA += weight * data[dx + 3];\r\n                  weightsAlpha += weight;\r\n                  //colors\r\n                  if (data[dx + 3] < 255) {\r\n                    weight = weight * data[dx + 3] / 250;\r\n                  }\r\n                  gxR += weight * data[dx];\r\n                  gxG += weight * data[dx + 1];\r\n                  gxB += weight * data[dx + 2];\r\n                  weights += weight;\r\n                }\r\n                /* eslint-enable max-depth */\r\n              }\r\n            }\r\n            data2[x2] = gxR / weights;\r\n            data2[x2 + 1] = gxG / weights;\r\n            data2[x2 + 2] = gxB / weights;\r\n            data2[x2 + 3] = gxA / weightsAlpha;\r\n          }\r\n        }\r\n        return img2;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return {\r\n          type: this.type,\r\n          scaleX: this.scaleX,\r\n          scaleY: this.scaleY,\r\n          resizeType: this.resizeType,\r\n          lanczosLobes: this.lanczosLobes\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\r\n     */\r\n    fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Contrast filter class\r\n     * @class fabric.Image.filters.Contrast\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Contrast({\r\n     *   contrast: 40\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Contrast',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uContrast;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\r\n          'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      contrast: 0,\r\n\r\n      mainParameter: 'contrast',\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.Contrast.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\r\n       */\r\n\r\n      /**\r\n        * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\r\n        *\r\n        * @param {Object} options\r\n        * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n        */\r\n      applyTo2d: function(options) {\r\n        if (this.contrast === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData, i, len,\r\n            data = imageData.data, len = data.length,\r\n            contrast = Math.floor(this.contrast * 255),\r\n            contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n          data[i] = contrastF * (data[i] - 128) + 128;\r\n          data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\r\n          data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uContrast: gl.getUniformLocation(program, 'uContrast'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uContrast, this.contrast);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\r\n     */\r\n    fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Saturate filter class\r\n     * @class fabric.Image.filters.Saturation\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Saturation({\r\n     *   saturation: 100\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Saturation',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uSaturation;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'float rgMax = max(color.r, color.g);\\n' +\r\n          'float rgbMax = max(rgMax, color.b);\\n' +\r\n          'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\r\n          'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\r\n          'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      saturation: 0,\r\n\r\n      mainParameter: 'saturation',\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.Saturate.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\r\n       */\r\n\r\n      /**\r\n       * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        if (this.saturation === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData,\r\n            data = imageData.data, len = data.length,\r\n            adjust = -this.saturation, i, max;\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n          max = Math.max(data[i], data[i + 1], data[i + 2]);\r\n          data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\r\n          data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\r\n          data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uSaturation: gl.getUniformLocation(program, 'uSaturation'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\r\n     */\r\n    fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Blur filter class\r\n     * @class fabric.Image.filters.Blur\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Blur({\r\n     *   blur: 0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\r\n\r\n      type: 'Blur',\r\n\r\n      /*\r\n  'gl_FragColor = vec4(0.0);',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\r\n  */\r\n\r\n      /* eslint-disable max-len */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec2 uDelta;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'const float nSamples = 15.0;\\n' +\r\n        'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\r\n        'float random(vec3 scale) {\\n' +\r\n          /* use the fragment position for a different seed per-pixel */\r\n          'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\r\n        '}\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0.0);\\n' +\r\n          'float total = 0.0;\\n' +\r\n          'float offset = random(v3offset);\\n' +\r\n          'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\r\n            'float percent = (t + offset - 0.5) / nSamples;\\n' +\r\n            'float weight = 1.0 - abs(percent);\\n' +\r\n            'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\r\n            'total += weight;\\n' +\r\n          '}\\n' +\r\n          'gl_FragColor = color / total;\\n' +\r\n        '}',\r\n      /* eslint-enable max-len */\r\n\r\n      /**\r\n       * blur value, in percentage of image dimensions.\r\n       * specific to keep the image blur constant at different resolutions\r\n       * range bewteen 0 and 1.\r\n       */\r\n      blur: 0,\r\n\r\n      mainParameter: 'blur',\r\n\r\n      applyTo: function(options) {\r\n        if (options.webgl) {\r\n          // this aspectRatio is used to give the same blur to vertical and horizontal\r\n          this.aspectRatio = options.sourceWidth / options.sourceHeight;\r\n          options.passes++;\r\n          this._setupFrameBuffer(options);\r\n          this.horizontal = true;\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n          this._setupFrameBuffer(options);\r\n          this.horizontal = false;\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n        }\r\n        else {\r\n          this.applyTo2d(options);\r\n        }\r\n      },\r\n\r\n      applyTo2d: function(options) {\r\n        // paint canvasEl with current image data.\r\n        //options.ctx.putImageData(options.imageData, 0, 0);\r\n        options.imageData = this.simpleBlur(options);\r\n      },\r\n\r\n      simpleBlur: function(options) {\r\n        var resources = options.filterBackend.resources, canvas1, canvas2,\r\n            width = options.imageData.width,\r\n            height = options.imageData.height;\r\n\r\n        if (!resources.blurLayer1) {\r\n          resources.blurLayer1 = fabric.util.createCanvasElement();\r\n          resources.blurLayer2 = fabric.util.createCanvasElement();\r\n        }\r\n        canvas1 = resources.blurLayer1;\r\n        canvas2 = resources.blurLayer2;\r\n        if (canvas1.width !== width || canvas1.height !== height) {\r\n          canvas2.width = canvas1.width = width;\r\n          canvas2.height = canvas1.height = height;\r\n        }\r\n        var ctx1 = canvas1.getContext('2d'),\r\n            ctx2 = canvas2.getContext('2d'),\r\n            nSamples = 15,\r\n            random, percent, j, i,\r\n            blur = this.blur * 0.06 * 0.5;\r\n\r\n        // load first canvas\r\n        ctx1.putImageData(options.imageData, 0, 0);\r\n        ctx2.clearRect(0, 0, width, height);\r\n\r\n        for (i = -nSamples; i <= nSamples; i++) {\r\n          random = (Math.random() - 0.5) / 4;\r\n          percent = i / nSamples;\r\n          j = blur * percent * width + random;\r\n          ctx2.globalAlpha = 1 - Math.abs(percent);\r\n          ctx2.drawImage(canvas1, j, random);\r\n          ctx1.drawImage(canvas2, 0, 0);\r\n          ctx2.globalAlpha = 1;\r\n          ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        }\r\n        for (i = -nSamples; i <= nSamples; i++) {\r\n          random = (Math.random() - 0.5) / 4;\r\n          percent = i / nSamples;\r\n          j = blur * percent * height + random;\r\n          ctx2.globalAlpha = 1 - Math.abs(percent);\r\n          ctx2.drawImage(canvas1, random, j);\r\n          ctx1.drawImage(canvas2, 0, 0);\r\n          ctx2.globalAlpha = 1;\r\n          ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        }\r\n        options.ctx.drawImage(canvas1, 0, 0);\r\n        var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\r\n        ctx1.globalAlpha = 1;\r\n        ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\r\n        return newImageData;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          delta: gl.getUniformLocation(program, 'uDelta'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var delta = this.chooseRightDelta();\r\n        gl.uniform2fv(uniformLocations.delta, delta);\r\n      },\r\n\r\n      /**\r\n       * choose right value of image percentage to blur with\r\n       * @returns {Array} a numeric array with delta values\r\n       */\r\n      chooseRightDelta: function() {\r\n        var blurScale = 1, delta = [0, 0], blur;\r\n        if (this.horizontal) {\r\n          if (this.aspectRatio > 1) {\r\n            // image is wide, i want to shrink radius horizontal\r\n            blurScale = 1 / this.aspectRatio;\r\n          }\r\n        }\r\n        else {\r\n          if (this.aspectRatio < 1) {\r\n            // image is tall, i want to shrink radius vertical\r\n            blurScale = this.aspectRatio;\r\n          }\r\n        }\r\n        blur = blurScale * this.blur * 0.12;\r\n        if (this.horizontal) {\r\n          delta[0] = blur;\r\n        }\r\n        else {\r\n          delta[1] = blur;\r\n        }\r\n        return delta;\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Deserialize a JSON definition of a BlurFilter into a concrete instance.\r\n     */\r\n    filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Gamma filter class\r\n     * @class fabric.Image.filters.Gamma\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Gamma({\r\n     *   brightness: 200\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Gamma',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec3 uGamma;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'vec3 correction = (1.0 / uGamma);\\n' +\r\n          'color.r = pow(color.r, correction.r);\\n' +\r\n          'color.g = pow(color.g, correction.g);\\n' +\r\n          'color.b = pow(color.b, correction.b);\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n          'gl_FragColor.rgb *= color.a;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Gamma array value, from 0.01 to 2.2.\r\n       * @param {Array} gamma\r\n       * @default\r\n       */\r\n      gamma: [1, 1, 1],\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'gamma',\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        this.gamma = [1, 1, 1];\r\n        filters.BaseFilter.prototype.initialize.call(this, options);\r\n      },\r\n\r\n      /**\r\n       * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData, data = imageData.data,\r\n            gamma = this.gamma, len = data.length,\r\n            rInv = 1 / gamma[0], gInv = 1 / gamma[1],\r\n            bInv = 1 / gamma[2], i;\r\n\r\n        if (!this.rVals) {\r\n          // eslint-disable-next-line\r\n          this.rVals = new Uint8Array(256);\r\n          // eslint-disable-next-line\r\n          this.gVals = new Uint8Array(256);\r\n          // eslint-disable-next-line\r\n          this.bVals = new Uint8Array(256);\r\n        }\r\n\r\n        // This is an optimization - pre-compute a look-up table for each color channel\r\n        // instead of performing these pow calls for each pixel in the image.\r\n        for (i = 0, len = 256; i < len; i++) {\r\n          this.rVals[i] = Math.pow(i / 255, rInv) * 255;\r\n          this.gVals[i] = Math.pow(i / 255, gInv) * 255;\r\n          this.bVals[i] = Math.pow(i / 255, bInv) * 255;\r\n        }\r\n        for (i = 0, len = data.length; i < len; i += 4) {\r\n          data[i] = this.rVals[data[i]];\r\n          data[i + 1] = this.gVals[data[i + 1]];\r\n          data[i + 2] = this.bVals[data[i + 2]];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uGamma: gl.getUniformLocation(program, 'uGamma'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform3fv(uniformLocations.uGamma, this.gamma);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\r\n     */\r\n    fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * A container class that knows how to apply a sequence of filters to an input image.\r\n     */\r\n    filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\r\n\r\n      type: 'Composed',\r\n\r\n      /**\r\n       * A non sparse array of filters to apply\r\n       */\r\n      subFilters: [],\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        // create a new array instead mutating the prototype with push\r\n        this.subFilters = this.subFilters.slice(0);\r\n      },\r\n\r\n      /**\r\n       * Apply this container's filters to the input image provided.\r\n       *\r\n       * @param {Object} options\r\n       * @param {Number} options.passes The number of filters remaining to be applied.\r\n       */\r\n      applyTo: function(options) {\r\n        options.passes += this.subFilters.length - 1;\r\n        this.subFilters.forEach(function(filter) {\r\n          filter.applyTo(options);\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Serialize this filter into JSON.\r\n       *\r\n       * @returns {Object} A JSON representation of this filter.\r\n       */\r\n      toObject: function() {\r\n        return fabric.util.object.extend(this.callSuper('toObject'), {\r\n          subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\r\n        });\r\n      },\r\n\r\n      isNeutralState: function() {\r\n        return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\r\n     */\r\n    fabric.Image.filters.Composed.fromObject = function(object, callback) {\r\n      var filters = object.subFilters || [],\r\n          subFilters = filters.map(function(filter) {\r\n            return new fabric.Image.filters[filter.type](filter);\r\n          }),\r\n          instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\r\n      callback && callback(instance);\r\n      return instance;\r\n    };\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * HueRotation filter class\r\n     * @class fabric.Image.filters.HueRotation\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.HueRotation({\r\n     *   rotation: -0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'HueRotation',\r\n\r\n      /**\r\n       * HueRotation value, from -1 to 1.\r\n       * the unit is radians\r\n       * @param {Number} myParameter\r\n       * @default\r\n       */\r\n      rotation: 0,\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'rotation',\r\n\r\n      calculateMatrix: function() {\r\n        var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\r\n            aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\r\n        this.matrix = [\r\n          1, 0, 0, 0, 0,\r\n          0, 1, 0, 0, 0,\r\n          0, 0, 1, 0, 0,\r\n          0, 0, 0, 1, 0\r\n        ];\r\n        this.matrix[0] = cos + OneMinusCos / 3;\r\n        this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\r\n        this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\r\n        this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\r\n        this.matrix[6] = cos + aThird * OneMinusCos;\r\n        this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\r\n        this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\r\n        this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\r\n        this.matrix[12] = cos + aThird * OneMinusCos;\r\n      },\r\n\r\n      /**\r\n       * HueRotation isNeutralState implementation\r\n       * Used only in image applyFilters to discard filters that will not have an effect\r\n       * on the image\r\n       * @param {Object} options\r\n       **/\r\n      isNeutralState: function(options) {\r\n        this.calculateMatrix();\r\n        return filters.BaseFilter.prototype.isNeutralState.call(this, options);\r\n      },\r\n\r\n      /**\r\n       * Apply this filter to the input image data provided.\r\n       *\r\n       * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n       *\r\n       * @param {Object} options\r\n       * @param {Number} options.passes The number of filters remaining to be executed\r\n       * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n       * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n       * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      applyTo: function(options) {\r\n        this.calculateMatrix();\r\n        filters.BaseFilter.prototype.applyTo.call(this, options);\r\n      },\r\n\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\r\n     */\r\n    fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var fabric = global.fabric || (global.fabric = { }),\r\n        clone = fabric.util.object.clone;\r\n\r\n    if (fabric.Text) {\r\n      fabric.warn('fabric.Text is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Text class\r\n     * @class fabric.Text\r\n     * @extends fabric.Object\r\n     * @return {fabric.Text} thisArg\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\r\n     * @see {@link fabric.Text#initialize} for constructor definition\r\n     */\r\n    fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\r\n\r\n      /**\r\n       * Properties which when set cause object to change dimensions\r\n       * @type Array\r\n       * @private\r\n       */\r\n      _dimensionAffectingProps: [\r\n        'fontSize',\r\n        'fontWeight',\r\n        'fontFamily',\r\n        'fontStyle',\r\n        'lineHeight',\r\n        'text',\r\n        'charSpacing',\r\n        'textAlign',\r\n        'styles',\r\n      ],\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _reNewline: /\\r?\\n/,\r\n\r\n      /**\r\n       * Use this regular expression to filter for whitespaces that is not a new line.\r\n       * Mostly used when text is 'justify' aligned.\r\n       * @private\r\n       */\r\n      _reSpacesAndTabs: /[ \\t\\r]/g,\r\n\r\n      /**\r\n       * Use this regular expression to filter for whitespace that is not a new line.\r\n       * Mostly used when text is 'justify' aligned.\r\n       * @private\r\n       */\r\n      _reSpaceAndTab: /[ \\t\\r]/,\r\n\r\n      /**\r\n       * Use this regular expression to filter consecutive groups of non spaces.\r\n       * Mostly used when text is 'justify' aligned.\r\n       * @private\r\n       */\r\n      _reWords: /\\S+/g,\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type:                 'text',\r\n\r\n      /**\r\n       * Font size (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      fontSize:             40,\r\n\r\n      /**\r\n       * Font weight (e.g. bold, normal, 400, 600, 800)\r\n       * @type {(Number|String)}\r\n       * @default\r\n       */\r\n      fontWeight:           'normal',\r\n\r\n      /**\r\n       * Font family\r\n       * @type String\r\n       * @default\r\n       */\r\n      fontFamily:           'Times New Roman',\r\n\r\n      /**\r\n       * Text decoration underline.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      underline:       false,\r\n\r\n      /**\r\n       * Text decoration overline.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      overline:       false,\r\n\r\n      /**\r\n       * Text decoration linethrough.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      linethrough:       false,\r\n\r\n      /**\r\n       * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\r\n       * \"justify-left\", \"justify-center\" or \"justify-right\".\r\n       * @type String\r\n       * @default\r\n       */\r\n      textAlign:            'left',\r\n\r\n      /**\r\n       * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\r\n       * @type String\r\n       * @default\r\n       */\r\n      fontStyle:            'normal',\r\n\r\n      /**\r\n       * Line height\r\n       * @type Number\r\n       * @default\r\n       */\r\n      lineHeight:           1.16,\r\n\r\n      /**\r\n       * Superscript schema object (minimum overlap)\r\n       * @type {Object}\r\n       * @default\r\n       */\r\n      superscript: {\r\n        size:      0.60, // fontSize factor\r\n        baseline: -0.35  // baseline-shift factor (upwards)\r\n      },\r\n\r\n      /**\r\n       * Subscript schema object (minimum overlap)\r\n       * @type {Object}\r\n       * @default\r\n       */\r\n      subscript: {\r\n        size:      0.60, // fontSize factor\r\n        baseline:  0.11  // baseline-shift factor (downwards)\r\n      },\r\n\r\n      /**\r\n       * Background color of text lines\r\n       * @type String\r\n       * @default\r\n       */\r\n      textBackgroundColor:  '',\r\n\r\n      /**\r\n       * List of properties to consider when checking if\r\n       * state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\r\n        'fontWeight',\r\n        'fontSize',\r\n        'text',\r\n        'underline',\r\n        'overline',\r\n        'linethrough',\r\n        'textAlign',\r\n        'fontStyle',\r\n        'lineHeight',\r\n        'textBackgroundColor',\r\n        'charSpacing',\r\n        'styles'),\r\n\r\n      /**\r\n       * List of properties to consider when checking if cache needs refresh\r\n       * @type Array\r\n       */\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\r\n        'fontWeight',\r\n        'fontSize',\r\n        'text',\r\n        'underline',\r\n        'overline',\r\n        'linethrough',\r\n        'textAlign',\r\n        'fontStyle',\r\n        'lineHeight',\r\n        'textBackgroundColor',\r\n        'charSpacing',\r\n        'styles'),\r\n\r\n      /**\r\n       * When defined, an object is rendered via stroke and this property specifies its color.\r\n       * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\r\n       * @type String\r\n       * @default\r\n       */\r\n      stroke:               null,\r\n\r\n      /**\r\n       * Shadow object representing shadow of this shape.\r\n       * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\r\n       * @type fabric.Shadow\r\n       * @default\r\n       */\r\n      shadow:               null,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _fontSizeFraction: 0.222,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      offsets: {\r\n        underline: 0.10,\r\n        linethrough: -0.315,\r\n        overline: -0.88\r\n      },\r\n\r\n      /**\r\n       * Text Line proportion to font Size (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      _fontSizeMult:             1.13,\r\n\r\n      /**\r\n       * additional space between characters\r\n       * expressed in thousands of em unit\r\n       * @type Number\r\n       * @default\r\n       */\r\n      charSpacing:             0,\r\n\r\n      /**\r\n       * Object containing character styles - top-level properties -> line numbers,\r\n       * 2nd-level properties - charater numbers\r\n       * @type Object\r\n       * @default\r\n       */\r\n      styles: null,\r\n\r\n      /**\r\n       * Reference to a context to measure text char or couple of chars\r\n       * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\r\n       * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\r\n       * text object created.\r\n       * @type {CanvasRenderingContext2D}\r\n       * @default\r\n       */\r\n      _measuringContext: null,\r\n\r\n      /**\r\n       * Baseline shift, stlyes only, keep at 0 for the main text object\r\n       * @type {Number}\r\n       * @default\r\n       */\r\n      deltaY: 0,\r\n\r\n      /**\r\n       * Array of properties that define a style unit (of 'styles').\r\n       * @type {Array}\r\n       * @default\r\n       */\r\n      _styleProperties: [\r\n        'stroke',\r\n        'strokeWidth',\r\n        'fill',\r\n        'fontFamily',\r\n        'fontSize',\r\n        'fontWeight',\r\n        'fontStyle',\r\n        'underline',\r\n        'overline',\r\n        'linethrough',\r\n        'deltaY',\r\n        'textBackgroundColor',\r\n      ],\r\n\r\n      /**\r\n       * contains characters bounding boxes\r\n       */\r\n      __charBounds: [],\r\n\r\n      /**\r\n       * use this size when measuring text. To avoid IE11 rounding errors\r\n       * @type {Number}\r\n       * @default\r\n       * @readonly\r\n       * @private\r\n       */\r\n      CACHE_FONT_SIZE: 400,\r\n\r\n      /**\r\n       * contains the min text width to avoid getting 0\r\n       * @type {Number}\r\n       * @default\r\n       */\r\n      MIN_TEXT_WIDTH: 2,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {String} text Text string\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Text} thisArg\r\n       */\r\n      initialize: function(text, options) {\r\n        this.styles = options ? (options.styles || { }) : { };\r\n        this.text = text;\r\n        this.__skipDimension = true;\r\n        this.callSuper('initialize', options);\r\n        this.__skipDimension = false;\r\n        this.initDimensions();\r\n        this.setCoords();\r\n        this.setupState({ propertySet: '_dimensionAffectingProps' });\r\n      },\r\n\r\n      /**\r\n       * Return a contex for measurement of text string.\r\n       * if created it gets stored for reuse\r\n       * @param {String} text Text string\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Text} thisArg\r\n       */\r\n      getMeasuringContext: function() {\r\n        // if we did not return we have to measure something.\r\n        if (!fabric._measuringContext) {\r\n          fabric._measuringContext = this.canvas && this.canvas.contextCache ||\r\n            fabric.util.createCanvasElement().getContext('2d');\r\n        }\r\n        return fabric._measuringContext;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Divides text into lines of text and lines of graphemes.\r\n       */\r\n      _splitText: function() {\r\n        var newLines = this._splitTextIntoLines(this.text);\r\n        this.textLines = newLines.lines;\r\n        this._textLines = newLines.graphemeLines;\r\n        this._unwrappedTextLines = newLines._unwrappedLines;\r\n        this._text = newLines.graphemeText;\r\n        return newLines;\r\n      },\r\n\r\n      /**\r\n       * Initialize or update text dimensions.\r\n       * Updates this.width and this.height with the proper values.\r\n       * Does not return dimensions.\r\n       */\r\n      initDimensions: function() {\r\n        if (this.__skipDimension) {\r\n          return;\r\n        }\r\n        this._splitText();\r\n        this._clearCache();\r\n        this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\r\n        if (this.textAlign.indexOf('justify') !== -1) {\r\n          // once text is measured we need to make space fatter to make justified text.\r\n          this.enlargeSpaces();\r\n        }\r\n        this.height = this.calcTextHeight();\r\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\r\n      },\r\n\r\n      /**\r\n       * Enlarge space boxes and shift the others\r\n       */\r\n      enlargeSpaces: function() {\r\n        var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\r\n            continue;\r\n          }\r\n          accumulatedSpace = 0;\r\n          line = this._textLines[i];\r\n          currentLineWidth = this.getLineWidth(i);\r\n          if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\r\n            numberOfSpaces = spaces.length;\r\n            diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\r\n            for (var j = 0, jlen = line.length; j <= jlen; j++) {\r\n              charBound = this.__charBounds[i][j];\r\n              if (this._reSpaceAndTab.test(line[j])) {\r\n                charBound.width += diffSpace;\r\n                charBound.kernedWidth += diffSpace;\r\n                charBound.left += accumulatedSpace;\r\n                accumulatedSpace += diffSpace;\r\n              }\r\n              else {\r\n                charBound.left += accumulatedSpace;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Detect if the text line is ended with an hard break\r\n       * text and itext do not have wrapping, return false\r\n       * @return {Boolean}\r\n       */\r\n      isEndOfWrapping: function(lineIndex) {\r\n        return lineIndex === this._textLines.length - 1;\r\n      },\r\n\r\n      /**\r\n       * Detect if a line has a linebreak and so we need to account for it when moving\r\n       * and counting style.\r\n       * It return always for text and Itext.\r\n       * @return Number\r\n       */\r\n      missingNewlineOffset: function() {\r\n        return 1;\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of an instance\r\n       * @return {String} String representation of text object\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Text (' + this.complexity() +\r\n          '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\r\n      },\r\n\r\n      /**\r\n       * Return the dimension and the zoom level needed to create a cache canvas\r\n       * big enough to host the object to be cached.\r\n       * @private\r\n       * @param {Object} dim.x width of object to be cached\r\n       * @param {Object} dim.y height of object to be cached\r\n       * @return {Object}.width width of canvas\r\n       * @return {Object}.height height of canvas\r\n       * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       */\r\n      _getCacheCanvasDimensions: function() {\r\n        var dims = this.callSuper('_getCacheCanvasDimensions');\r\n        var fontSize = this.fontSize;\r\n        dims.width += fontSize * dims.zoomX;\r\n        dims.height += fontSize * dims.zoomY;\r\n        return dims;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        this._setTextStyles(ctx);\r\n        this._renderTextLinesBackground(ctx);\r\n        this._renderTextDecoration(ctx, 'underline');\r\n        this._renderText(ctx);\r\n        this._renderTextDecoration(ctx, 'overline');\r\n        this._renderTextDecoration(ctx, 'linethrough');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderText: function(ctx) {\r\n        if (this.paintFirst === 'stroke') {\r\n          this._renderTextStroke(ctx);\r\n          this._renderTextFill(ctx);\r\n        }\r\n        else {\r\n          this._renderTextFill(ctx);\r\n          this._renderTextStroke(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set the font parameter of the context with the object properties or with charStyle\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} [charStyle] object with font style properties\r\n       * @param {String} [charStyle.fontFamily] Font Family\r\n       * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\r\n       * @param {String} [charStyle.fontWeight] Font weight\r\n       * @param {String} [charStyle.fontStyle] Font style (italic|normal)\r\n       */\r\n      _setTextStyles: function(ctx, charStyle, forMeasuring) {\r\n        ctx.textBaseline = 'alphabetic';\r\n        ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\r\n      },\r\n\r\n      /**\r\n       * calculate and return the text Width measuring each line.\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @return {Number} Maximum width of fabric.Text object\r\n       */\r\n      calcTextWidth: function() {\r\n        var maxWidth = this.getLineWidth(0);\r\n\r\n        for (var i = 1, len = this._textLines.length; i < len; i++) {\r\n          var currentLineWidth = this.getLineWidth(i);\r\n          if (currentLineWidth > maxWidth) {\r\n            maxWidth = currentLineWidth;\r\n          }\r\n        }\r\n        return maxWidth;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {String} line Text to render\r\n       * @param {Number} left Left position of text\r\n       * @param {Number} top Top position of text\r\n       * @param {Number} lineIndex Index of a line in a text\r\n       */\r\n      _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\r\n        this._renderChars(method, ctx, line, left, top, lineIndex);\r\n      },\r\n\r\n      /**\r\n       * Renders the text background for lines, taking care of style\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextLinesBackground: function(ctx) {\r\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\r\n          return;\r\n        }\r\n        var lineTopOffset = 0, heightOfLine,\r\n            lineLeftOffset, originalFill = ctx.fillStyle,\r\n            line, lastColor,\r\n            leftOffset = this._getLeftOffset(),\r\n            topOffset = this._getTopOffset(),\r\n            boxStart = 0, boxWidth = 0, charBox, currentColor;\r\n\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          heightOfLine = this.getHeightOfLine(i);\r\n          if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\r\n            lineTopOffset += heightOfLine;\r\n            continue;\r\n          }\r\n          line = this._textLines[i];\r\n          lineLeftOffset = this._getLineLeftOffset(i);\r\n          boxWidth = 0;\r\n          boxStart = 0;\r\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n          for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n            charBox = this.__charBounds[i][j];\r\n            currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n            if (currentColor !== lastColor) {\r\n              ctx.fillStyle = lastColor;\r\n              lastColor && ctx.fillRect(\r\n                leftOffset + lineLeftOffset + boxStart,\r\n                topOffset + lineTopOffset,\r\n                boxWidth,\r\n                heightOfLine / this.lineHeight\r\n              );\r\n              boxStart = charBox.left;\r\n              boxWidth = charBox.width;\r\n              lastColor = currentColor;\r\n            }\r\n            else {\r\n              boxWidth += charBox.kernedWidth;\r\n            }\r\n          }\r\n          if (currentColor) {\r\n            ctx.fillStyle = currentColor;\r\n            ctx.fillRect(\r\n              leftOffset + lineLeftOffset + boxStart,\r\n              topOffset + lineTopOffset,\r\n              boxWidth,\r\n              heightOfLine / this.lineHeight\r\n            );\r\n          }\r\n          lineTopOffset += heightOfLine;\r\n        }\r\n        ctx.fillStyle = originalFill;\r\n        // if there is text background color no\r\n        // other shadows should be casted\r\n        this._removeShadow(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} decl style declaration for cache\r\n       * @param {String} decl.fontFamily fontFamily\r\n       * @param {String} decl.fontStyle fontStyle\r\n       * @param {String} decl.fontWeight fontWeight\r\n       * @return {Object} reference to cache\r\n       */\r\n      getFontCache: function(decl) {\r\n        var fontFamily = decl.fontFamily.toLowerCase();\r\n        if (!fabric.charWidthsCache[fontFamily]) {\r\n          fabric.charWidthsCache[fontFamily] = { };\r\n        }\r\n        var cache = fabric.charWidthsCache[fontFamily],\r\n            cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\r\n        if (!cache[cacheProp]) {\r\n          cache[cacheProp] = { };\r\n        }\r\n        return cache[cacheProp];\r\n      },\r\n\r\n      /**\r\n       * apply all the character style to canvas for rendering\r\n       * @private\r\n       * @param {String} _char\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {Object} [decl]\r\n       */\r\n      _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\r\n\r\n        this._setFillStyles(ctx, styleDeclaration);\r\n        this._setStrokeStyles(ctx, styleDeclaration);\r\n\r\n        ctx.font = this._getFontDeclaration(styleDeclaration);\r\n      },\r\n\r\n      /**\r\n       * measure and return the width of a single character.\r\n       * possibly overridden to accommodate different measure logic or\r\n       * to hook some external lib for character measurement\r\n       * @private\r\n       * @param {String} _char, char to be measured\r\n       * @param {Object} charStyle style of char to be measured\r\n       * @param {String} [previousChar] previous char\r\n       * @param {Object} [prevCharStyle] style of previous char\r\n       */\r\n      _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\r\n        // first i try to return from cache\r\n        var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\r\n            previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\r\n            stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\r\n            fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\r\n\r\n        if (previousChar && fontCache[previousChar] !== undefined) {\r\n          previousWidth = fontCache[previousChar];\r\n        }\r\n        if (fontCache[_char] !== undefined) {\r\n          kernedWidth = width = fontCache[_char];\r\n        }\r\n        if (stylesAreEqual && fontCache[couple] !== undefined) {\r\n          coupleWidth = fontCache[couple];\r\n          kernedWidth = coupleWidth - previousWidth;\r\n        }\r\n        if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\r\n          var ctx = this.getMeasuringContext();\r\n          // send a TRUE to specify measuring font size CACHE_FONT_SIZE\r\n          this._setTextStyles(ctx, charStyle, true);\r\n        }\r\n        if (width === undefined) {\r\n          kernedWidth = width = ctx.measureText(_char).width;\r\n          fontCache[_char] = width;\r\n        }\r\n        if (previousWidth === undefined && stylesAreEqual && previousChar) {\r\n          previousWidth = ctx.measureText(previousChar).width;\r\n          fontCache[previousChar] = previousWidth;\r\n        }\r\n        if (stylesAreEqual && coupleWidth === undefined) {\r\n          // we can measure the kerning couple and subtract the width of the previous character\r\n          coupleWidth = ctx.measureText(couple).width;\r\n          fontCache[couple] = coupleWidth;\r\n          kernedWidth = coupleWidth - previousWidth;\r\n        }\r\n        return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\r\n      },\r\n\r\n      /**\r\n       * Computes height of character at given position\r\n       * @param {Number} line the line index number\r\n       * @param {Number} _char the character index number\r\n       * @return {Number} fontSize of the character\r\n       */\r\n      getHeightOfChar: function(line, _char) {\r\n        return this.getValueOfPropertyAt(line, _char, 'fontSize');\r\n      },\r\n\r\n      /**\r\n       * measure a text line measuring all characters.\r\n       * @param {Number} lineIndex line number\r\n       * @return {Number} Line width\r\n       */\r\n      measureLine: function(lineIndex) {\r\n        var lineInfo = this._measureLine(lineIndex);\r\n        if (this.charSpacing !== 0) {\r\n          lineInfo.width -= this._getWidthOfCharSpacing();\r\n        }\r\n        if (lineInfo.width < 0) {\r\n          lineInfo.width = 0;\r\n        }\r\n        return lineInfo;\r\n      },\r\n\r\n      /**\r\n       * measure every grapheme of a line, populating __charBounds\r\n       * @param {Number} lineIndex\r\n       * @return {Object} object.width total width of characters\r\n       * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\r\n       */\r\n      _measureLine: function(lineIndex) {\r\n        var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\r\n            graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\r\n\r\n        this.__charBounds[lineIndex] = lineBounds;\r\n        for (i = 0; i < line.length; i++) {\r\n          grapheme = line[i];\r\n          graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\r\n          lineBounds[i] = graphemeInfo;\r\n          width += graphemeInfo.kernedWidth;\r\n          prevGrapheme = grapheme;\r\n        }\r\n        // this latest bound box represent the last character of the line\r\n        // to simplify cursor handling in interactive mode.\r\n        lineBounds[i] = {\r\n          left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\r\n          width: 0,\r\n          kernedWidth: 0,\r\n          height: this.fontSize\r\n        };\r\n        return { width: width, numOfSpaces: numOfSpaces };\r\n      },\r\n\r\n      /**\r\n       * Measure and return the info of a single grapheme.\r\n       * needs the the info of previous graphemes already filled\r\n       * @private\r\n       * @param {String} grapheme to be measured\r\n       * @param {Number} lineIndex index of the line where the char is\r\n       * @param {Number} charIndex position in the line\r\n       * @param {String} [prevGrapheme] character preceding the one to be measured\r\n       */\r\n      _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\r\n        var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n            prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\r\n            info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\r\n            kernedWidth = info.kernedWidth,\r\n            width = info.width, charSpacing;\r\n\r\n        if (this.charSpacing !== 0) {\r\n          charSpacing = this._getWidthOfCharSpacing();\r\n          width += charSpacing;\r\n          kernedWidth += charSpacing;\r\n        }\r\n\r\n        var box = {\r\n          width: width,\r\n          left: 0,\r\n          height: style.fontSize,\r\n          kernedWidth: kernedWidth,\r\n          deltaY: style.deltaY,\r\n        };\r\n        if (charIndex > 0 && !skipLeft) {\r\n          var previousBox = this.__charBounds[lineIndex][charIndex - 1];\r\n          box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\r\n        }\r\n        return box;\r\n      },\r\n\r\n      /**\r\n       * Calculate height of line at 'lineIndex'\r\n       * @param {Number} lineIndex index of line to calculate\r\n       * @return {Number}\r\n       */\r\n      getHeightOfLine: function(lineIndex) {\r\n        if (this.__lineHeights[lineIndex]) {\r\n          return this.__lineHeights[lineIndex];\r\n        }\r\n\r\n        var line = this._textLines[lineIndex],\r\n            // char 0 is measured before the line cycle because it nneds to char\r\n            // emptylines\r\n            maxHeight = this.getHeightOfChar(lineIndex, 0);\r\n        for (var i = 1, len = line.length; i < len; i++) {\r\n          maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\r\n        }\r\n\r\n        return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\r\n      },\r\n\r\n      /**\r\n       * Calculate text box height\r\n       */\r\n      calcTextHeight: function() {\r\n        var lineHeight, height = 0;\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          lineHeight = this.getHeightOfLine(i);\r\n          height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\r\n        }\r\n        return height;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} Left offset\r\n       */\r\n      _getLeftOffset: function() {\r\n        return -this.width / 2;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} Top offset\r\n       */\r\n      _getTopOffset: function() {\r\n        return -this.height / 2;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} filler fabric.Pattern or fabric.Gradient\r\n       * @return {Object} offset.offsetX offset for text rendering\r\n       * @return {Object} offset.offsetY offset for text rendering\r\n       */\r\n      _applyPatternGradientTransform: function(ctx, filler) {\r\n        if (!filler || !filler.toLive) {\r\n          return { offsetX: 0, offsetY: 0 };\r\n        }\r\n        var offsetX = -this.width / 2 + filler.offsetX || 0,\r\n            offsetY = -this.height / 2 + filler.offsetY || 0;\r\n\r\n        ctx.transform(1, 0, 0, 1, offsetX, offsetY);\r\n        return { offsetX: offsetX, offsetY: offsetY };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n       */\r\n      _renderTextCommon: function(ctx, method) {\r\n        ctx.save();\r\n        var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\r\n            offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          var heightOfLine = this.getHeightOfLine(i),\r\n              maxHeight = heightOfLine / this.lineHeight,\r\n              leftOffset = this._getLineLeftOffset(i);\r\n          this._renderTextLine(\r\n            method,\r\n            ctx,\r\n            this._textLines[i],\r\n            left + leftOffset - offsets.offsetX,\r\n            top + lineHeights + maxHeight - offsets.offsetY,\r\n            i\r\n          );\r\n          lineHeights += heightOfLine;\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextFill: function(ctx) {\r\n        if (!this.fill && !this.styleHas('fill')) {\r\n          return;\r\n        }\r\n\r\n        this._renderTextCommon(ctx, 'fillText');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextStroke: function(ctx) {\r\n        if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\r\n          return;\r\n        }\r\n\r\n        if (this.shadow && !this.shadow.affectStroke) {\r\n          this._removeShadow(ctx);\r\n        }\r\n\r\n        ctx.save();\r\n        this._setLineDash(ctx, this.strokeDashArray);\r\n        ctx.beginPath();\r\n        this._renderTextCommon(ctx, 'strokeText');\r\n        ctx.closePath();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} method\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {String} line Content of the line\r\n       * @param {Number} left\r\n       * @param {Number} top\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charOffset\r\n       */\r\n      _renderChars: function(method, ctx, line, left, top, lineIndex) {\r\n        // set proper line offset\r\n        var lineHeight = this.getHeightOfLine(lineIndex),\r\n            isJustify = this.textAlign.indexOf('justify') !== -1,\r\n            actualStyle,\r\n            nextStyle,\r\n            charsToRender = '',\r\n            charBox,\r\n            boxWidth = 0,\r\n            timeToRender,\r\n            shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\r\n\r\n        ctx.save();\r\n        top -= lineHeight * this._fontSizeFraction / this.lineHeight;\r\n        if (shortCut) {\r\n          // render all the line in one pass without checking\r\n          this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\r\n          ctx.restore();\r\n          return;\r\n        }\r\n        for (var i = 0, len = line.length - 1; i <= len; i++) {\r\n          timeToRender = i === len || this.charSpacing;\r\n          charsToRender += line[i];\r\n          charBox = this.__charBounds[lineIndex][i];\r\n          if (boxWidth === 0) {\r\n            left += charBox.kernedWidth - charBox.width;\r\n            boxWidth += charBox.width;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n          if (isJustify && !timeToRender) {\r\n            if (this._reSpaceAndTab.test(line[i])) {\r\n              timeToRender = true;\r\n            }\r\n          }\r\n          if (!timeToRender) {\r\n            // if we have charSpacing, we render char by char\r\n            actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n            nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n            timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\r\n          }\r\n          if (timeToRender) {\r\n            this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\r\n            charsToRender = '';\r\n            actualStyle = nextStyle;\r\n            left += boxWidth;\r\n            boxWidth = 0;\r\n          }\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} method\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {String} _char\r\n       * @param {Number} left Left coordinate\r\n       * @param {Number} top Top coordinate\r\n       * @param {Number} lineHeight Height of the line\r\n       */\r\n      _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\r\n        var decl = this._getStyleDeclaration(lineIndex, charIndex),\r\n            fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n            shouldFill = method === 'fillText' && fullDecl.fill,\r\n            shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\r\n\r\n        if (!shouldStroke && !shouldFill) {\r\n          return;\r\n        }\r\n        decl && ctx.save();\r\n\r\n        this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\r\n\r\n        if (decl && decl.textBackgroundColor) {\r\n          this._removeShadow(ctx);\r\n        }\r\n        if (decl && decl.deltaY) {\r\n          top += decl.deltaY;\r\n        }\r\n\r\n        shouldFill && ctx.fillText(_char, left, top);\r\n        shouldStroke && ctx.strokeText(_char, left, top);\r\n        decl && ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Turns the character into a 'superior figure' (i.e. 'superscript')\r\n       * @param {Number} start selection start\r\n       * @param {Number} end selection end\r\n       * @returns {fabric.Text} thisArg\r\n       * @chainable\r\n       */\r\n      setSuperscript: function(start, end) {\r\n        return this._setScript(start, end, this.superscript);\r\n      },\r\n\r\n      /**\r\n       * Turns the character into an 'inferior figure' (i.e. 'subscript')\r\n       * @param {Number} start selection start\r\n       * @param {Number} end selection end\r\n       * @returns {fabric.Text} thisArg\r\n       * @chainable\r\n       */\r\n      setSubscript: function(start, end) {\r\n        return this._setScript(start, end, this.subscript);\r\n      },\r\n\r\n      /**\r\n       * Applies 'schema' at given position\r\n       * @private\r\n       * @param {Number} start selection start\r\n       * @param {Number} end selection end\r\n       * @param {Number} schema\r\n       * @returns {fabric.Text} thisArg\r\n       * @chainable\r\n       */\r\n      _setScript: function(start, end, schema) {\r\n        var loc = this.get2DCursorLocation(start, true),\r\n            fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\r\n            dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\r\n            style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\r\n        this.setSelectionStyles(style, start, end);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} prevStyle\r\n       * @param {Object} thisStyle\r\n       */\r\n      _hasStyleChanged: function(prevStyle, thisStyle) {\r\n        return prevStyle.fill !== thisStyle.fill ||\r\n                prevStyle.stroke !== thisStyle.stroke ||\r\n                prevStyle.strokeWidth !== thisStyle.strokeWidth ||\r\n                prevStyle.fontSize !== thisStyle.fontSize ||\r\n                prevStyle.fontFamily !== thisStyle.fontFamily ||\r\n                prevStyle.fontWeight !== thisStyle.fontWeight ||\r\n                prevStyle.fontStyle !== thisStyle.fontStyle ||\r\n                prevStyle.deltaY !== thisStyle.deltaY;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} prevStyle\r\n       * @param {Object} thisStyle\r\n       */\r\n      _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\r\n        return this._hasStyleChanged(prevStyle, thisStyle) ||\r\n          prevStyle.overline !== thisStyle.overline ||\r\n          prevStyle.underline !== thisStyle.underline ||\r\n          prevStyle.linethrough !== thisStyle.linethrough;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Number} lineIndex index text line\r\n       * @return {Number} Line left offset\r\n       */\r\n      _getLineLeftOffset: function(lineIndex) {\r\n        var lineWidth = this.getLineWidth(lineIndex);\r\n        if (this.textAlign === 'center') {\r\n          return (this.width - lineWidth) / 2;\r\n        }\r\n        if (this.textAlign === 'right') {\r\n          return this.width - lineWidth;\r\n        }\r\n        if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\r\n          return (this.width - lineWidth) / 2;\r\n        }\r\n        if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\r\n          return this.width - lineWidth;\r\n        }\r\n        return 0;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _clearCache: function() {\r\n        this.__lineWidths = [];\r\n        this.__lineHeights = [];\r\n        this.__charBounds = [];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _shouldClearDimensionCache: function() {\r\n        var shouldClear = this._forceClearCache;\r\n        shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\r\n        if (shouldClear) {\r\n          this.dirty = true;\r\n          this._forceClearCache = false;\r\n        }\r\n        return shouldClear;\r\n      },\r\n\r\n      /**\r\n       * Measure a single line given its index. Used to calculate the initial\r\n       * text bounding box. The values are calculated and stored in __lineWidths cache.\r\n       * @private\r\n       * @param {Number} lineIndex line number\r\n       * @return {Number} Line width\r\n       */\r\n      getLineWidth: function(lineIndex) {\r\n        if (this.__lineWidths[lineIndex]) {\r\n          return this.__lineWidths[lineIndex];\r\n        }\r\n\r\n        var width, line = this._textLines[lineIndex], lineInfo;\r\n\r\n        if (line === '') {\r\n          width = 0;\r\n        }\r\n        else {\r\n          lineInfo = this.measureLine(lineIndex);\r\n          width = lineInfo.width;\r\n        }\r\n        this.__lineWidths[lineIndex] = width;\r\n        return width;\r\n      },\r\n\r\n      _getWidthOfCharSpacing: function() {\r\n        if (this.charSpacing !== 0) {\r\n          return this.fontSize * this.charSpacing / 1000;\r\n        }\r\n        return 0;\r\n      },\r\n\r\n      /**\r\n       * Retrieves the value of property at given character position\r\n       * @param {Number} lineIndex the line number\r\n       * @param {Number} charIndex the charater number\r\n       * @param {String} property the property name\r\n       * @returns the value of 'property'\r\n       */\r\n      getValueOfPropertyAt: function(lineIndex, charIndex, property) {\r\n        var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\r\n        if (charStyle && typeof charStyle[property] !== 'undefined') {\r\n          return charStyle[property];\r\n        }\r\n        return this[property];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextDecoration: function(ctx, type) {\r\n        if (!this[type] && !this.styleHas(type)) {\r\n          return;\r\n        }\r\n        var heightOfLine, size, _size,\r\n            lineLeftOffset, dy, _dy,\r\n            line, lastDecoration,\r\n            leftOffset = this._getLeftOffset(),\r\n            topOffset = this._getTopOffset(), top,\r\n            boxStart, boxWidth, charBox, currentDecoration,\r\n            maxHeight, currentFill, lastFill,\r\n            charSpacing = this._getWidthOfCharSpacing();\r\n\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          heightOfLine = this.getHeightOfLine(i);\r\n          if (!this[type] && !this.styleHas(type, i)) {\r\n            topOffset += heightOfLine;\r\n            continue;\r\n          }\r\n          line = this._textLines[i];\r\n          maxHeight = heightOfLine / this.lineHeight;\r\n          lineLeftOffset = this._getLineLeftOffset(i);\r\n          boxStart = 0;\r\n          boxWidth = 0;\r\n          lastDecoration = this.getValueOfPropertyAt(i, 0, type);\r\n          lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\r\n          top = topOffset + maxHeight * (1 - this._fontSizeFraction);\r\n          size = this.getHeightOfChar(i, 0);\r\n          dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\r\n          for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n            charBox = this.__charBounds[i][j];\r\n            currentDecoration = this.getValueOfPropertyAt(i, j, type);\r\n            currentFill = this.getValueOfPropertyAt(i, j, 'fill');\r\n            _size = this.getHeightOfChar(i, j);\r\n            _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\r\n            if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\r\n                boxWidth > 0) {\r\n              ctx.fillStyle = lastFill;\r\n              lastDecoration && lastFill && ctx.fillRect(\r\n                leftOffset + lineLeftOffset + boxStart,\r\n                top + this.offsets[type] * size + dy,\r\n                boxWidth,\r\n                this.fontSize / 15\r\n              );\r\n              boxStart = charBox.left;\r\n              boxWidth = charBox.width;\r\n              lastDecoration = currentDecoration;\r\n              lastFill = currentFill;\r\n              size = _size;\r\n              dy = _dy;\r\n            }\r\n            else {\r\n              boxWidth += charBox.kernedWidth;\r\n            }\r\n          }\r\n          ctx.fillStyle = currentFill;\r\n          currentDecoration && currentFill && ctx.fillRect(\r\n            leftOffset + lineLeftOffset + boxStart,\r\n            top + this.offsets[type] * size + dy,\r\n            boxWidth - charSpacing,\r\n            this.fontSize / 15\r\n          );\r\n          topOffset += heightOfLine;\r\n        }\r\n        // if there is text background color no\r\n        // other shadows should be casted\r\n        this._removeShadow(ctx);\r\n      },\r\n\r\n      /**\r\n       * return font declaration string for canvas context\r\n       * @param {Object} [styleObject] object\r\n       * @returns {String} font declaration formatted for canvas context.\r\n       */\r\n      _getFontDeclaration: function(styleObject, forMeasuring) {\r\n        var style = styleObject || this, family = this.fontFamily,\r\n            fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\r\n        var fontFamily = family === undefined ||\r\n        family.indexOf('\\'') > -1 || family.indexOf(',') > -1 ||\r\n        family.indexOf('\"') > -1 || fontIsGeneric\r\n          ? style.fontFamily : '\"' + style.fontFamily + '\"';\r\n        return [\r\n          // node-canvas needs \"weight style\", while browsers need \"style weight\"\r\n          // verify if this can be fixed in JSDOM\r\n          (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\r\n          (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\r\n          forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\r\n          fontFamily\r\n        ].join(' ');\r\n      },\r\n\r\n      /**\r\n       * Renders text instance on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      render: function(ctx) {\r\n        // do not render if object is not visible\r\n        if (!this.visible) {\r\n          return;\r\n        }\r\n        if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\r\n          return;\r\n        }\r\n        if (this._shouldClearDimensionCache()) {\r\n          this.initDimensions();\r\n        }\r\n        this.callSuper('render', ctx);\r\n      },\r\n\r\n      /**\r\n       * Returns the text as an array of lines.\r\n       * @param {String} text text to split\r\n       * @returns {Array} Lines in the text\r\n       */\r\n      _splitTextIntoLines: function(text) {\r\n        var lines = text.split(this._reNewline),\r\n            newLines = new Array(lines.length),\r\n            newLine = ['\\n'],\r\n            newText = [];\r\n        for (var i = 0; i < lines.length; i++) {\r\n          newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\r\n          newText = newText.concat(newLines[i], newLine);\r\n        }\r\n        newText.pop();\r\n        return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var additionalProperties = [\r\n          'text',\r\n          'fontSize',\r\n          'fontWeight',\r\n          'fontFamily',\r\n          'fontStyle',\r\n          'lineHeight',\r\n          'underline',\r\n          'overline',\r\n          'linethrough',\r\n          'textAlign',\r\n          'textBackgroundColor',\r\n          'charSpacing',\r\n        ].concat(propertiesToInclude);\r\n        var obj = this.callSuper('toObject', additionalProperties);\r\n        obj.styles = clone(this.styles, true);\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\r\n       * @param {String|Object} key Property name or object (if object, iterate over the object properties)\r\n       * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      set: function(key, value) {\r\n        this.callSuper('set', key, value);\r\n        var needsDims = false;\r\n        if (typeof key === 'object') {\r\n          for (var _key in key) {\r\n            needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\r\n          }\r\n        }\r\n        else {\r\n          needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\r\n        }\r\n        if (needsDims) {\r\n          this.initDimensions();\r\n          this.setCoords();\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns complexity of an instance\r\n       * @return {Number} complexity\r\n       */\r\n      complexity: function() {\r\n        return 1;\r\n      }\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     * @see: http://www.w3.org/TR/SVG/text.html#TextElement\r\n     */\r\n    fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\r\n      'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\r\n\r\n    /**\r\n     * Default SVG font size\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     */\r\n    fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\r\n\r\n    /**\r\n     * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Text.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\r\n          parsedAnchor = parsedAttributes.textAnchor || 'left';\r\n      options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\r\n\r\n      options.top = options.top || 0;\r\n      options.left = options.left || 0;\r\n      if (parsedAttributes.textDecoration) {\r\n        var textDecoration = parsedAttributes.textDecoration;\r\n        if (textDecoration.indexOf('underline') !== -1) {\r\n          options.underline = true;\r\n        }\r\n        if (textDecoration.indexOf('overline') !== -1) {\r\n          options.overline = true;\r\n        }\r\n        if (textDecoration.indexOf('line-through') !== -1) {\r\n          options.linethrough = true;\r\n        }\r\n        delete options.textDecoration;\r\n      }\r\n      if ('dx' in parsedAttributes) {\r\n        options.left += parsedAttributes.dx;\r\n      }\r\n      if ('dy' in parsedAttributes) {\r\n        options.top += parsedAttributes.dy;\r\n      }\r\n      if (!('fontSize' in options)) {\r\n        options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n      }\r\n\r\n      var textContent = '';\r\n\r\n      // The XML is not properly parsed in IE9 so a workaround to get\r\n      // textContent is through firstChild.data. Another workaround would be\r\n      // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\r\n      if (!('textContent' in element)) {\r\n        if ('firstChild' in element && element.firstChild !== null) {\r\n          if ('data' in element.firstChild && element.firstChild.data !== null) {\r\n            textContent = element.firstChild.data;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        textContent = element.textContent;\r\n      }\r\n\r\n      textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\r\n      var originalStrokeWidth = options.strokeWidth;\r\n      options.strokeWidth = 0;\r\n\r\n      var text = new fabric.Text(textContent, options),\r\n          textHeightScaleFactor = text.getScaledHeight() / text.height,\r\n          lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\r\n          scaledDiff = lineHeightDiff * textHeightScaleFactor,\r\n          textHeight = text.getScaledHeight() + scaledDiff,\r\n          offX = 0;\r\n      /*\r\n        Adjust positioning:\r\n          x/y attributes in SVG correspond to the bottom-left corner of text bounding box\r\n          fabric output by default at top, left.\r\n      */\r\n      if (parsedAnchor === 'center') {\r\n        offX = text.getScaledWidth() / 2;\r\n      }\r\n      if (parsedAnchor === 'right') {\r\n        offX = text.getScaledWidth();\r\n      }\r\n      text.set({\r\n        left: text.left - offX,\r\n        top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\r\n        strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\r\n      });\r\n      callback(text);\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Text instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\r\n     */\r\n    fabric.Text.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Text', object, callback, 'text');\r\n    };\r\n\r\n    fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\r\n\r\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n    fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\r\n      /**\r\n       * Returns true if object has no styling or no styling in a line\r\n       * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n       * @return {Boolean}\r\n       */\r\n      isEmptyStyles: function(lineIndex) {\r\n        if (!this.styles) {\r\n          return true;\r\n        }\r\n        if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n          return true;\r\n        }\r\n        var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n        for (var p1 in obj) {\r\n          for (var p2 in obj[p1]) {\r\n            // eslint-disable-next-line no-unused-vars\r\n            for (var p3 in obj[p1][p2]) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Returns true if object has a style property or has it ina specified line\r\n       * This function is used to detect if a text will use a particular property or not.\r\n       * @param {String} property to check for\r\n       * @param {Number} lineIndex to check the style on\r\n       * @return {Boolean}\r\n       */\r\n      styleHas: function(property, lineIndex) {\r\n        if (!this.styles || !property || property === '') {\r\n          return false;\r\n        }\r\n        if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n          return false;\r\n        }\r\n        var obj = typeof lineIndex === 'undefined' ? this.styles : { 0: this.styles[lineIndex] };\r\n        // eslint-disable-next-line\r\n        for (var p1 in obj) {\r\n          // eslint-disable-next-line\r\n          for (var p2 in obj[p1]) {\r\n            if (typeof obj[p1][p2][property] !== 'undefined') {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Check if characters in a text have a value for a property\r\n       * whose value matches the textbox's value for that property.  If so,\r\n       * the character-level property is deleted.  If the character\r\n       * has no other properties, then it is also deleted.  Finally,\r\n       * if the line containing that character has no other characters\r\n       * then it also is deleted.\r\n       *\r\n       * @param {string} property The property to compare between characters and text.\r\n       */\r\n      cleanStyle: function(property) {\r\n        if (!this.styles || !property || property === '') {\r\n          return false;\r\n        }\r\n        var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\r\n            allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\r\n        // eslint-disable-next-line\r\n        for (var p1 in obj) {\r\n          letterCount = 0;\r\n          // eslint-disable-next-line\r\n          for (var p2 in obj[p1]) {\r\n            var styleObject = obj[p1][p2],\r\n                stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\r\n\r\n            stylesCount++;\r\n\r\n            if (stylePropertyHasBeenSet) {\r\n              if (!stylePropertyValue) {\r\n                stylePropertyValue = styleObject[property];\r\n              }\r\n              else if (styleObject[property] !== stylePropertyValue) {\r\n                allStyleObjectPropertiesMatch = false;\r\n              }\r\n\r\n              if (styleObject[property] === this[property]) {\r\n                delete styleObject[property];\r\n              }\r\n            }\r\n            else {\r\n              allStyleObjectPropertiesMatch = false;\r\n            }\r\n\r\n            if (Object.keys(styleObject).length !== 0) {\r\n              letterCount++;\r\n            }\r\n            else {\r\n              delete obj[p1][p2];\r\n            }\r\n          }\r\n\r\n          if (letterCount === 0) {\r\n            delete obj[p1];\r\n          }\r\n        }\r\n        // if every grapheme has the same style set then\r\n        // delete those styles and set it on the parent\r\n        for (var i = 0; i < this._textLines.length; i++) {\r\n          graphemeCount += this._textLines[i].length;\r\n        }\r\n        if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\r\n          this[property] = stylePropertyValue;\r\n          this.removeStyle(property);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Remove a style property or properties from all individual character styles\r\n       * in a text object.  Deletes the character style object if it contains no other style\r\n       * props.  Deletes a line style object if it contains no other character styles.\r\n       *\r\n       * @param {String} props The property to remove from character styles.\r\n       */\r\n      removeStyle: function(property) {\r\n        if (!this.styles || !property || property === '') {\r\n          return;\r\n        }\r\n        var obj = this.styles, line, lineNum, charNum;\r\n        for (lineNum in obj) {\r\n          line = obj[lineNum];\r\n          for (charNum in line) {\r\n            delete line[charNum][property];\r\n            if (Object.keys(line[charNum]).length === 0) {\r\n              delete line[charNum];\r\n            }\r\n          }\r\n          if (Object.keys(line).length === 0) {\r\n            delete obj[lineNum];\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _extendStyles: function(index, styles) {\r\n        var loc = this.get2DCursorLocation(index);\r\n\r\n        if (!this._getLineStyle(loc.lineIndex)) {\r\n          this._setLineStyle(loc.lineIndex);\r\n        }\r\n\r\n        if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\r\n          this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\r\n        }\r\n\r\n        fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\r\n      },\r\n\r\n      /**\r\n       * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\r\n       * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\r\n       * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\r\n       */\r\n      get2DCursorLocation: function(selectionStart, skipWrapping) {\r\n        if (typeof selectionStart === 'undefined') {\r\n          selectionStart = this.selectionStart;\r\n        }\r\n        var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\r\n            len = lines.length;\r\n        for (var i = 0; i < len; i++) {\r\n          if (selectionStart <= lines[i].length) {\r\n            return {\r\n              lineIndex: i,\r\n              charIndex: selectionStart\r\n            };\r\n          }\r\n          selectionStart -= lines[i].length + this.missingNewlineOffset(i);\r\n        }\r\n        return {\r\n          lineIndex: i - 1,\r\n          charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Gets style of a current selection/cursor (at the start position)\r\n       * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\r\n       * @param {Number} [startIndex] Start index to get styles at\r\n       * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n       * @param {Boolean} [complete] get full style or not\r\n       * @return {Array} styles an array with one, zero or more Style objects\r\n       */\r\n      getSelectionStyles: function(startIndex, endIndex, complete) {\r\n        if (typeof startIndex === 'undefined') {\r\n          startIndex = this.selectionStart || 0;\r\n        }\r\n        if (typeof endIndex === 'undefined') {\r\n          endIndex = this.selectionEnd || startIndex;\r\n        }\r\n        var styles = [];\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n          styles.push(this.getStyleAtPosition(i, complete));\r\n        }\r\n        return styles;\r\n      },\r\n\r\n      /**\r\n       * Gets style of a current selection/cursor position\r\n       * @param {Number} position  to get styles at\r\n       * @param {Boolean} [complete] full style if true\r\n       * @return {Object} style Style object at a specified index\r\n       * @private\r\n       */\r\n      getStyleAtPosition: function(position, complete) {\r\n        var loc = this.get2DCursorLocation(position),\r\n            style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\r\n              this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\r\n        return style || {};\r\n      },\r\n\r\n      /**\r\n       * Sets style of a current selection, if no selection exist, do not set anything.\r\n       * @param {Object} [styles] Styles object\r\n       * @param {Number} [startIndex] Start index to get styles at\r\n       * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      setSelectionStyles: function(styles, startIndex, endIndex) {\r\n        if (typeof startIndex === 'undefined') {\r\n          startIndex = this.selectionStart || 0;\r\n        }\r\n        if (typeof endIndex === 'undefined') {\r\n          endIndex = this.selectionEnd || startIndex;\r\n        }\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n          this._extendStyles(i, styles);\r\n        }\r\n        /* not included in _extendStyles to avoid clearing cache more than once */\r\n        this._forceClearCache = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * get the reference, not a clone, of the style object for a given character\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @return {Object} style object\r\n       */\r\n      _getStyleDeclaration: function(lineIndex, charIndex) {\r\n        var lineStyle = this.styles && this.styles[lineIndex];\r\n        if (!lineStyle) {\r\n          return null;\r\n        }\r\n        return lineStyle[charIndex];\r\n      },\r\n\r\n      /**\r\n       * return a new object that contains all the style property for a character\r\n       * the object returned is newly created\r\n       * @param {Number} lineIndex of the line where the character is\r\n       * @param {Number} charIndex position of the character on the line\r\n       * @return {Object} style object\r\n       */\r\n      getCompleteStyleDeclaration: function(lineIndex, charIndex) {\r\n        var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\r\n            styleObject = { }, prop;\r\n        for (var i = 0; i < this._styleProperties.length; i++) {\r\n          prop = this._styleProperties[i];\r\n          styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\r\n        }\r\n        return styleObject;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setStyleDeclaration: function(lineIndex, charIndex, style) {\r\n        this.styles[lineIndex][charIndex] = style;\r\n      },\r\n\r\n      /**\r\n       *\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @private\r\n       */\r\n      _deleteStyleDeclaration: function(lineIndex, charIndex) {\r\n        delete this.styles[lineIndex][charIndex];\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @return {Boolean} if the line exists or not\r\n       * @private\r\n       */\r\n      _getLineStyle: function(lineIndex) {\r\n        return !!this.styles[lineIndex];\r\n      },\r\n\r\n      /**\r\n       * Set the line style to an empty object so that is initialized\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _setLineStyle: function(lineIndex) {\r\n        this.styles[lineIndex] = {};\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _deleteLineStyle: function(lineIndex) {\r\n        delete this.styles[lineIndex];\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function parseDecoration(object) {\r\n      if (object.textDecoration) {\r\n        object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\r\n        object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\r\n        object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\r\n        delete object.textDecoration;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\r\n     * prefix when observing canvas.\r\n     * @class fabric.IText\r\n     * @extends fabric.Text\r\n     * @mixes fabric.Observable\r\n     *\r\n     * @fires changed\r\n     * @fires selection:changed\r\n     * @fires editing:entered\r\n     * @fires editing:exited\r\n     *\r\n     * @return {fabric.IText} thisArg\r\n     * @see {@link fabric.IText#initialize} for constructor definition\r\n     *\r\n     * <p>Supported key combinations:</p>\r\n     * <pre>\r\n     *   Move cursor:                    left, right, up, down\r\n     *   Select character:               shift + left, shift + right\r\n     *   Select text vertically:         shift + up, shift + down\r\n     *   Move cursor by word:            alt + left, alt + right\r\n     *   Select words:                   shift + alt + left, shift + alt + right\r\n     *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\r\n     *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\r\n     *   Jump to start/end of text:      cmd + up, cmd + down\r\n     *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\r\n     *   Delete character:               backspace\r\n     *   Delete word:                    alt + backspace\r\n     *   Delete line:                    cmd + backspace\r\n     *   Forward delete:                 delete\r\n     *   Copy text:                      ctrl/cmd + c\r\n     *   Paste text:                     ctrl/cmd + v\r\n     *   Cut text:                       ctrl/cmd + x\r\n     *   Select entire text:             ctrl/cmd + a\r\n     *   Quit editing                    tab or esc\r\n     * </pre>\r\n     *\r\n     * <p>Supported mouse/touch combination</p>\r\n     * <pre>\r\n     *   Position cursor:                click/touch\r\n     *   Create selection:               click/touch & drag\r\n     *   Create selection:               click & shift + click\r\n     *   Select word:                    double click\r\n     *   Select line:                    triple click\r\n     * </pre>\r\n     */\r\n    fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'i-text',\r\n\r\n      /**\r\n       * Index where text selection starts (or where cursor is when there is no selection)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      selectionStart: 0,\r\n\r\n      /**\r\n       * Index where text selection ends\r\n       * @type Number\r\n       * @default\r\n       */\r\n      selectionEnd: 0,\r\n\r\n      /**\r\n       * Color of text selection\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionColor: 'rgba(17,119,255,0.3)',\r\n\r\n      /**\r\n       * Indicates whether text is in editing mode\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      isEditing: false,\r\n\r\n      /**\r\n       * Indicates whether a text can be edited\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      editable: true,\r\n\r\n      /**\r\n       * Border color of text object while it's in editing mode\r\n       * @type String\r\n       * @default\r\n       */\r\n      editingBorderColor: 'rgba(102,153,255,0.25)',\r\n\r\n      /**\r\n       * Width of cursor (in px)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cursorWidth: 2,\r\n\r\n      /**\r\n       * Color of default cursor (when not overwritten by character style)\r\n       * @type String\r\n       * @default\r\n       */\r\n      cursorColor: '#333',\r\n\r\n      /**\r\n       * Delay between cursor blink (in ms)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cursorDelay: 1000,\r\n\r\n      /**\r\n       * Duration of cursor fadein (in ms)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cursorDuration: 600,\r\n\r\n      /**\r\n       * Indicates whether internal text char widths can be cached\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      caching: true,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _reSpace: /\\s|\\n/,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _currentCursorOpacity: 0,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _selectionDirection: null,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _abortCursorAnimation: false,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __widthOfSpace: [],\r\n\r\n      /**\r\n       * Helps determining when the text is in composition, so that the cursor\r\n       * rendering is altered.\r\n       */\r\n      inCompositionMode: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {String} text Text string\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.IText} thisArg\r\n       */\r\n      initialize: function(text, options) {\r\n        this.callSuper('initialize', text, options);\r\n        this.initBehavior();\r\n      },\r\n\r\n      /**\r\n       * Sets selection start (left boundary of a selection)\r\n       * @param {Number} index Index to set selection start to\r\n       */\r\n      setSelectionStart: function(index) {\r\n        index = Math.max(index, 0);\r\n        this._updateAndFire('selectionStart', index);\r\n      },\r\n\r\n      /**\r\n       * Sets selection end (right boundary of a selection)\r\n       * @param {Number} index Index to set selection end to\r\n       */\r\n      setSelectionEnd: function(index) {\r\n        index = Math.min(index, this.text.length);\r\n        this._updateAndFire('selectionEnd', index);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} property 'selectionStart' or 'selectionEnd'\r\n       * @param {Number} index new position of property\r\n       */\r\n      _updateAndFire: function(property, index) {\r\n        if (this[property] !== index) {\r\n          this._fireSelectionChanged();\r\n          this[property] = index;\r\n        }\r\n        this._updateTextarea();\r\n      },\r\n\r\n      /**\r\n       * Fires the even of selection changed\r\n       * @private\r\n       */\r\n      _fireSelectionChanged: function() {\r\n        this.fire('selection:changed');\r\n        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\r\n      },\r\n\r\n      /**\r\n       * Initialize text dimensions. Render all text on given context\r\n       * or on a offscreen canvas to get the text width with measureText.\r\n       * Updates this.width and this.height with the proper values.\r\n       * Does not return dimensions.\r\n       * @private\r\n       */\r\n      initDimensions: function() {\r\n        this.isEditing && this.initDelayedCursor();\r\n        this.clearContextTop();\r\n        this.callSuper('initDimensions');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      render: function(ctx) {\r\n        this.clearContextTop();\r\n        this.callSuper('render', ctx);\r\n        // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\r\n        // the correct position but not at every cursor animation.\r\n        this.cursorOffsetCache = { };\r\n        this.renderCursorOrSelection();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        this.callSuper('_render', ctx);\r\n      },\r\n\r\n      /**\r\n       * Prepare and clean the contextTop\r\n       */\r\n      clearContextTop: function(skipRestore) {\r\n        if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\r\n          return;\r\n        }\r\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\r\n        ctx.save();\r\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        this.transform(ctx);\r\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\r\n        this._clearTextArea(ctx);\r\n        skipRestore || ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Renders cursor or selection (depending on what exists)\r\n       * it does on the contextTop. If contextTop is not available, do nothing.\r\n       */\r\n      renderCursorOrSelection: function() {\r\n        if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\r\n          return;\r\n        }\r\n        var boundaries = this._getCursorBoundaries(),\r\n            ctx = this.canvas.contextTop;\r\n        this.clearContextTop(true);\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          this.renderCursor(boundaries, ctx);\r\n        }\r\n        else {\r\n          this.renderSelection(boundaries, ctx);\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      _clearTextArea: function(ctx) {\r\n        // we add 4 pixel, to be sure to do not leave any pixel out\r\n        var width = this.width + 4, height = this.height + 4;\r\n        ctx.clearRect(-width / 2, -height / 2, width, height);\r\n      },\r\n\r\n      /**\r\n       * Returns cursor boundaries (left, top, leftOffset, topOffset)\r\n       * @private\r\n       * @param {Array} chars Array of characters\r\n       * @param {String} typeOfBoundaries\r\n       */\r\n      _getCursorBoundaries: function(position) {\r\n\r\n        // left/top are left/top of entire text box\r\n        // leftOffset/topOffset are offset from that left/top point of a text box\r\n\r\n        if (typeof position === 'undefined') {\r\n          position = this.selectionStart;\r\n        }\r\n\r\n        var left = this._getLeftOffset(),\r\n            top = this._getTopOffset(),\r\n            offsets = this._getCursorBoundariesOffsets(position);\r\n\r\n        return {\r\n          left: left,\r\n          top: top,\r\n          leftOffset: offsets.left,\r\n          topOffset: offsets.top\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getCursorBoundariesOffsets: function(position) {\r\n        if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\r\n          return this.cursorOffsetCache;\r\n        }\r\n        var lineLeftOffset,\r\n            lineIndex,\r\n            charIndex,\r\n            topOffset = 0,\r\n            leftOffset = 0,\r\n            boundaries,\r\n            cursorPosition = this.get2DCursorLocation(position);\r\n        charIndex = cursorPosition.charIndex;\r\n        lineIndex = cursorPosition.lineIndex;\r\n        for (var i = 0; i < lineIndex; i++) {\r\n          topOffset += this.getHeightOfLine(i);\r\n        }\r\n        lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n        var bound = this.__charBounds[lineIndex][charIndex];\r\n        bound && (leftOffset = bound.left);\r\n        if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\r\n          leftOffset -= this._getWidthOfCharSpacing();\r\n        }\r\n        boundaries = {\r\n          top: topOffset,\r\n          left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\r\n        };\r\n        this.cursorOffsetCache = boundaries;\r\n        return this.cursorOffsetCache;\r\n      },\r\n\r\n      /**\r\n       * Renders cursor\r\n       * @param {Object} boundaries\r\n       * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n       */\r\n      renderCursor: function(boundaries, ctx) {\r\n        var cursorLocation = this.get2DCursorLocation(),\r\n            lineIndex = cursorLocation.lineIndex,\r\n            charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\r\n            charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\r\n            multiplier = this.scaleX * this.canvas.getZoom(),\r\n            cursorWidth = this.cursorWidth / multiplier,\r\n            topOffset = boundaries.topOffset,\r\n            dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\r\n\r\n        topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\r\n          - charHeight * (1 - this._fontSizeFraction);\r\n\r\n        if (this.inCompositionMode) {\r\n          this.renderSelection(boundaries, ctx);\r\n        }\r\n\r\n        ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\r\n        ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\r\n        ctx.fillRect(\r\n          boundaries.left + boundaries.leftOffset - cursorWidth / 2,\r\n          topOffset + boundaries.top + dy,\r\n          cursorWidth,\r\n          charHeight);\r\n      },\r\n\r\n      /**\r\n       * Renders text selection\r\n       * @param {Object} boundaries Object with left/top/leftOffset/topOffset\r\n       * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n       */\r\n      renderSelection: function(boundaries, ctx) {\r\n\r\n        var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\r\n            selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\r\n            isJustify = this.textAlign.indexOf('justify') !== -1,\r\n            start = this.get2DCursorLocation(selectionStart),\r\n            end = this.get2DCursorLocation(selectionEnd),\r\n            startLine = start.lineIndex,\r\n            endLine = end.lineIndex,\r\n            startChar = start.charIndex < 0 ? 0 : start.charIndex,\r\n            endChar = end.charIndex < 0 ? 0 : end.charIndex;\r\n\r\n        for (var i = startLine; i <= endLine; i++) {\r\n          var lineOffset = this._getLineLeftOffset(i) || 0,\r\n              lineHeight = this.getHeightOfLine(i),\r\n              realLineHeight = 0, boxStart = 0, boxEnd = 0;\r\n\r\n          if (i === startLine) {\r\n            boxStart = this.__charBounds[startLine][startChar].left;\r\n          }\r\n          if (i >= startLine && i < endLine) {\r\n            boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\r\n          }\r\n          else if (i === endLine) {\r\n            if (endChar === 0) {\r\n              boxEnd = this.__charBounds[endLine][endChar].left;\r\n            }\r\n            else {\r\n              var charSpacing = this._getWidthOfCharSpacing();\r\n              boxEnd = this.__charBounds[endLine][endChar - 1].left\r\n                + this.__charBounds[endLine][endChar - 1].width - charSpacing;\r\n            }\r\n          }\r\n          realLineHeight = lineHeight;\r\n          if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\r\n            lineHeight /= this.lineHeight;\r\n          }\r\n          if (this.inCompositionMode) {\r\n            ctx.fillStyle = this.compositionColor || 'black';\r\n            ctx.fillRect(\r\n              boundaries.left + lineOffset + boxStart,\r\n              boundaries.top + boundaries.topOffset + lineHeight,\r\n              boxEnd - boxStart,\r\n              1);\r\n          }\r\n          else {\r\n            ctx.fillStyle = this.selectionColor;\r\n            ctx.fillRect(\r\n              boundaries.left + lineOffset + boxStart,\r\n              boundaries.top + boundaries.topOffset,\r\n              boxEnd - boxStart,\r\n              lineHeight);\r\n          }\r\n\r\n\r\n          boundaries.topOffset += realLineHeight;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * High level function to know the height of the cursor.\r\n       * the currentChar is the one that precedes the cursor\r\n       * Returns fontSize of char at the current cursor\r\n       * @return {Number} Character font size\r\n       */\r\n      getCurrentCharFontSize: function() {\r\n        var cp = this._getCurrentCharIndex();\r\n        return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\r\n      },\r\n\r\n      /**\r\n       * High level function to know the color of the cursor.\r\n       * the currentChar is the one that precedes the cursor\r\n       * Returns color (fill) of char at the current cursor\r\n       * @return {String} Character color (fill)\r\n       */\r\n      getCurrentCharColor: function() {\r\n        var cp = this._getCurrentCharIndex();\r\n        return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\r\n      },\r\n\r\n      /**\r\n       * Returns the cursor position for the getCurrent.. functions\r\n       * @private\r\n       */\r\n      _getCurrentCharIndex: function() {\r\n        var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\r\n            charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\r\n        return { l: cursorPosition.lineIndex, c: charIndex };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns fabric.IText instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.IText\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as argument\r\n     */\r\n    fabric.IText.fromObject = function(object, callback) {\r\n      parseDecoration(object);\r\n      if (object.styles) {\r\n        for (var i in object.styles) {\r\n          for (var j in object.styles[i]) {\r\n            parseDecoration(object.styles[i][j]);\r\n          }\r\n        }\r\n      }\r\n      fabric.Object._fromObject('IText', object, callback, 'text');\r\n    };\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var clone = fabric.util.object.clone;\r\n\r\n    fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n\r\n      /**\r\n       * Initializes all the interactive behavior of IText\r\n       */\r\n      initBehavior: function() {\r\n        this.initAddedHandler();\r\n        this.initRemovedHandler();\r\n        this.initCursorSelectionHandlers();\r\n        this.initDoubleClickSimulation();\r\n        this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\r\n      },\r\n\r\n      onDeselect: function() {\r\n        this.isEditing && this.exitEditing();\r\n        this.selected = false;\r\n      },\r\n\r\n      /**\r\n       * Initializes \"added\" event handler\r\n       */\r\n      initAddedHandler: function() {\r\n        var _this = this;\r\n        this.on('added', function() {\r\n          var canvas = _this.canvas;\r\n          if (canvas) {\r\n            if (!canvas._hasITextHandlers) {\r\n              canvas._hasITextHandlers = true;\r\n              _this._initCanvasHandlers(canvas);\r\n            }\r\n            canvas._iTextInstances = canvas._iTextInstances || [];\r\n            canvas._iTextInstances.push(_this);\r\n          }\r\n        });\r\n      },\r\n\r\n      initRemovedHandler: function() {\r\n        var _this = this;\r\n        this.on('removed', function() {\r\n          var canvas = _this.canvas;\r\n          if (canvas) {\r\n            canvas._iTextInstances = canvas._iTextInstances || [];\r\n            fabric.util.removeFromArray(canvas._iTextInstances, _this);\r\n            if (canvas._iTextInstances.length === 0) {\r\n              canvas._hasITextHandlers = false;\r\n              _this._removeCanvasHandlers(canvas);\r\n            }\r\n          }\r\n        });\r\n      },\r\n\r\n      /**\r\n       * register canvas event to manage exiting on other instances\r\n       * @private\r\n       */\r\n      _initCanvasHandlers: function(canvas) {\r\n        canvas._mouseUpITextHandler = function() {\r\n          if (canvas._iTextInstances) {\r\n            canvas._iTextInstances.forEach(function(obj) {\r\n              obj.__isMousedown = false;\r\n            });\r\n          }\r\n        };\r\n        canvas.on('mouse:up', canvas._mouseUpITextHandler);\r\n      },\r\n\r\n      /**\r\n       * remove canvas event to manage exiting on other instances\r\n       * @private\r\n       */\r\n      _removeCanvasHandlers: function(canvas) {\r\n        canvas.off('mouse:up', canvas._mouseUpITextHandler);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _tick: function() {\r\n        this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\r\n\r\n        var tickState;\r\n\r\n        tickState = {\r\n          isAborted: false,\r\n          abort: function() {\r\n            this.isAborted = true;\r\n          },\r\n        };\r\n\r\n        obj.animate('_currentCursorOpacity', targetOpacity, {\r\n          duration: duration,\r\n          onComplete: function() {\r\n            if (!tickState.isAborted) {\r\n              obj[completeMethod]();\r\n            }\r\n          },\r\n          onChange: function() {\r\n            // we do not want to animate a selection, only cursor\r\n            if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\r\n              obj.renderCursorOrSelection();\r\n            }\r\n          },\r\n          abort: function() {\r\n            return tickState.isAborted;\r\n          }\r\n        });\r\n        return tickState;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onTickComplete: function() {\r\n\r\n        var _this = this;\r\n\r\n        if (this._cursorTimeout1) {\r\n          clearTimeout(this._cursorTimeout1);\r\n        }\r\n        this._cursorTimeout1 = setTimeout(function() {\r\n          _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\r\n        }, 100);\r\n      },\r\n\r\n      /**\r\n       * Initializes delayed cursor\r\n       */\r\n      initDelayedCursor: function(restart) {\r\n        var _this = this,\r\n            delay = restart ? 0 : this.cursorDelay;\r\n\r\n        this.abortCursorAnimation();\r\n        this._currentCursorOpacity = 1;\r\n        this._cursorTimeout2 = setTimeout(function() {\r\n          _this._tick();\r\n        }, delay);\r\n      },\r\n\r\n      /**\r\n       * Aborts cursor animation and clears all timeouts\r\n       */\r\n      abortCursorAnimation: function() {\r\n        var shouldClear = this._currentTickState || this._currentTickCompleteState,\r\n            canvas = this.canvas;\r\n        this._currentTickState && this._currentTickState.abort();\r\n        this._currentTickCompleteState && this._currentTickCompleteState.abort();\r\n\r\n        clearTimeout(this._cursorTimeout1);\r\n        clearTimeout(this._cursorTimeout2);\r\n\r\n        this._currentCursorOpacity = 0;\r\n        // to clear just itext area we need to transform the context\r\n        // it may not be worth it\r\n        if (shouldClear && canvas) {\r\n          canvas.clearContext(canvas.contextTop || canvas.contextContainer);\r\n        }\r\n\r\n      },\r\n\r\n      /**\r\n       * Selects entire text\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      selectAll: function() {\r\n        this.selectionStart = 0;\r\n        this.selectionEnd = this._text.length;\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns selected text\r\n       * @return {String}\r\n       */\r\n      getSelectedText: function() {\r\n        return this._text.slice(this.selectionStart, this.selectionEnd).join('');\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing start of current word according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findWordBoundaryLeft: function(startFrom) {\r\n        var offset = 0, index = startFrom - 1;\r\n\r\n        // remove space before cursor first\r\n        if (this._reSpace.test(this._text[index])) {\r\n          while (this._reSpace.test(this._text[index])) {\r\n            offset++;\r\n            index--;\r\n          }\r\n        }\r\n        while (/\\S/.test(this._text[index]) && index > -1) {\r\n          offset++;\r\n          index--;\r\n        }\r\n\r\n        return startFrom - offset;\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing end of current word according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findWordBoundaryRight: function(startFrom) {\r\n        var offset = 0, index = startFrom;\r\n\r\n        // remove space after cursor first\r\n        if (this._reSpace.test(this._text[index])) {\r\n          while (this._reSpace.test(this._text[index])) {\r\n            offset++;\r\n            index++;\r\n          }\r\n        }\r\n        while (/\\S/.test(this._text[index]) && index < this._text.length) {\r\n          offset++;\r\n          index++;\r\n        }\r\n\r\n        return startFrom + offset;\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing start of current line according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findLineBoundaryLeft: function(startFrom) {\r\n        var offset = 0, index = startFrom - 1;\r\n\r\n        while (!/\\n/.test(this._text[index]) && index > -1) {\r\n          offset++;\r\n          index--;\r\n        }\r\n\r\n        return startFrom - offset;\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing end of current line according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findLineBoundaryRight: function(startFrom) {\r\n        var offset = 0, index = startFrom;\r\n\r\n        while (!/\\n/.test(this._text[index]) && index < this._text.length) {\r\n          offset++;\r\n          index++;\r\n        }\r\n\r\n        return startFrom + offset;\r\n      },\r\n\r\n      /**\r\n       * Finds index corresponding to beginning or end of a word\r\n       * @param {Number} selectionStart Index of a character\r\n       * @param {Number} direction 1 or -1\r\n       * @return {Number} Index of the beginning or end of a word\r\n       */\r\n      searchWordBoundary: function(selectionStart, direction) {\r\n        var text = this._text,\r\n            index     = this._reSpace.test(text[selectionStart]) ? selectionStart - 1 : selectionStart,\r\n            _char     = text[index],\r\n            // wrong\r\n            reNonWord = fabric.reNonWord;\r\n\r\n        while (!reNonWord.test(_char) && index > 0 && index < text.length) {\r\n          index += direction;\r\n          _char = text[index];\r\n        }\r\n        if (reNonWord.test(_char)) {\r\n          index += direction === 1 ? 0 : 1;\r\n        }\r\n        return index;\r\n      },\r\n\r\n      /**\r\n       * Selects a word based on the index\r\n       * @param {Number} selectionStart Index of a character\r\n       */\r\n      selectWord: function(selectionStart) {\r\n        selectionStart = selectionStart || this.selectionStart;\r\n        var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\r\n            newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\r\n\r\n        this.selectionStart = newSelectionStart;\r\n        this.selectionEnd = newSelectionEnd;\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        this.renderCursorOrSelection();\r\n      },\r\n\r\n      /**\r\n       * Selects a line based on the index\r\n       * @param {Number} selectionStart Index of a character\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      selectLine: function(selectionStart) {\r\n        selectionStart = selectionStart || this.selectionStart;\r\n        var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\r\n            newSelectionEnd = this.findLineBoundaryRight(selectionStart);\r\n\r\n        this.selectionStart = newSelectionStart;\r\n        this.selectionEnd = newSelectionEnd;\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Enters editing state\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      enterEditing: function(e) {\r\n        if (this.isEditing || !this.editable) {\r\n          return;\r\n        }\r\n\r\n        if (this.canvas) {\r\n          this.canvas.calcOffset();\r\n          this.exitEditingOnOthers(this.canvas);\r\n        }\r\n\r\n        this.isEditing = true;\r\n\r\n        this.initHiddenTextarea(e);\r\n        this.hiddenTextarea.focus();\r\n        this.hiddenTextarea.value = this.text;\r\n        this._updateTextarea();\r\n        this._saveEditingProps();\r\n        this._setEditingProps();\r\n        this._textBeforeEdit = this.text;\r\n\r\n        this._tick();\r\n        this.fire('editing:entered');\r\n        this._fireSelectionChanged();\r\n        if (!this.canvas) {\r\n          return this;\r\n        }\r\n        this.canvas.fire('text:editing:entered', { target: this });\r\n        this.initMouseMoveHandler();\r\n        this.canvas.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      exitEditingOnOthers: function(canvas) {\r\n        if (canvas._iTextInstances) {\r\n          canvas._iTextInstances.forEach(function(obj) {\r\n            obj.selected = false;\r\n            if (obj.isEditing) {\r\n              obj.exitEditing();\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Initializes \"mousemove\" event handler\r\n       */\r\n      initMouseMoveHandler: function() {\r\n        this.canvas.on('mouse:move', this.mouseMoveHandler);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      mouseMoveHandler: function(options) {\r\n        if (!this.__isMousedown || !this.isEditing) {\r\n          return;\r\n        }\r\n\r\n        var newSelectionStart = this.getSelectionStartFromPointer(options.e),\r\n            currentStart = this.selectionStart,\r\n            currentEnd = this.selectionEnd;\r\n        if (\r\n          (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\r\n          &&\r\n          (currentStart === newSelectionStart || currentEnd === newSelectionStart)\r\n        ) {\r\n          return;\r\n        }\r\n        if (newSelectionStart > this.__selectionStartOnMouseDown) {\r\n          this.selectionStart = this.__selectionStartOnMouseDown;\r\n          this.selectionEnd = newSelectionStart;\r\n        }\r\n        else {\r\n          this.selectionStart = newSelectionStart;\r\n          this.selectionEnd = this.__selectionStartOnMouseDown;\r\n        }\r\n        if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\r\n          this.restartCursorIfNeeded();\r\n          this._fireSelectionChanged();\r\n          this._updateTextarea();\r\n          this.renderCursorOrSelection();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setEditingProps: function() {\r\n        this.hoverCursor = 'text';\r\n\r\n        if (this.canvas) {\r\n          this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\r\n        }\r\n\r\n        this.borderColor = this.editingBorderColor;\r\n        this.hasControls = this.selectable = false;\r\n        this.lockMovementX = this.lockMovementY = true;\r\n      },\r\n\r\n      /**\r\n       * convert from textarea to grapheme indexes\r\n       */\r\n      fromStringToGraphemeSelection: function(start, end, text) {\r\n        var smallerTextStart = text.slice(0, start),\r\n            graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\r\n        if (start === end) {\r\n          return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n        }\r\n        var smallerTextEnd = text.slice(start, end),\r\n            graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\r\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\r\n      },\r\n\r\n      /**\r\n       * convert from fabric to textarea values\r\n       */\r\n      fromGraphemeToStringSelection: function(start, end, _text) {\r\n        var smallerTextStart = _text.slice(0, start),\r\n            graphemeStart = smallerTextStart.join('').length;\r\n        if (start === end) {\r\n          return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n        }\r\n        var smallerTextEnd = _text.slice(start, end),\r\n            graphemeEnd = smallerTextEnd.join('').length;\r\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _updateTextarea: function() {\r\n        this.cursorOffsetCache = { };\r\n        if (!this.hiddenTextarea) {\r\n          return;\r\n        }\r\n        if (!this.inCompositionMode) {\r\n          var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\r\n          this.hiddenTextarea.selectionStart = newSelection.selectionStart;\r\n          this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\r\n        }\r\n        this.updateTextareaPosition();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      updateFromTextArea: function() {\r\n        if (!this.hiddenTextarea) {\r\n          return;\r\n        }\r\n        this.cursorOffsetCache = { };\r\n        this.text = this.hiddenTextarea.value;\r\n        if (this._shouldClearDimensionCache()) {\r\n          this.initDimensions();\r\n          this.setCoords();\r\n        }\r\n        var newSelection = this.fromStringToGraphemeSelection(\r\n          this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\r\n        this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\r\n        if (!this.inCompositionMode) {\r\n          this.selectionStart = newSelection.selectionStart;\r\n        }\r\n        this.updateTextareaPosition();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      updateTextareaPosition: function() {\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          var style = this._calcTextareaPosition();\r\n          this.hiddenTextarea.style.left = style.left;\r\n          this.hiddenTextarea.style.top = style.top;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Object} style contains style for hiddenTextarea\r\n       */\r\n      _calcTextareaPosition: function() {\r\n        if (!this.canvas) {\r\n          return { x: 1, y: 1 };\r\n        }\r\n        var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\r\n            boundaries = this._getCursorBoundaries(desiredPosition),\r\n            cursorLocation = this.get2DCursorLocation(desiredPosition),\r\n            lineIndex = cursorLocation.lineIndex,\r\n            charIndex = cursorLocation.charIndex,\r\n            charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\r\n            leftOffset = boundaries.leftOffset,\r\n            m = this.calcTransformMatrix(),\r\n            p = {\r\n              x: boundaries.left + leftOffset,\r\n              y: boundaries.top + boundaries.topOffset + charHeight\r\n            },\r\n            retinaScaling = this.canvas.getRetinaScaling(),\r\n            upperCanvas = this.canvas.upperCanvasEl,\r\n            upperCanvasWidth = upperCanvas.width / retinaScaling,\r\n            upperCanvasHeight = upperCanvas.height / retinaScaling,\r\n            maxWidth = upperCanvasWidth - charHeight,\r\n            maxHeight = upperCanvasHeight - charHeight,\r\n            scaleX = upperCanvas.clientWidth / upperCanvasWidth,\r\n            scaleY = upperCanvas.clientHeight / upperCanvasHeight;\r\n\r\n        p = fabric.util.transformPoint(p, m);\r\n        p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\r\n        p.x *= scaleX;\r\n        p.y *= scaleY;\r\n        if (p.x < 0) {\r\n          p.x = 0;\r\n        }\r\n        if (p.x > maxWidth) {\r\n          p.x = maxWidth;\r\n        }\r\n        if (p.y < 0) {\r\n          p.y = 0;\r\n        }\r\n        if (p.y > maxHeight) {\r\n          p.y = maxHeight;\r\n        }\r\n\r\n        // add canvas offset on document\r\n        p.x += this.canvas._offset.left;\r\n        p.y += this.canvas._offset.top;\r\n\r\n        return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _saveEditingProps: function() {\r\n        this._savedProps = {\r\n          hasControls: this.hasControls,\r\n          borderColor: this.borderColor,\r\n          lockMovementX: this.lockMovementX,\r\n          lockMovementY: this.lockMovementY,\r\n          hoverCursor: this.hoverCursor,\r\n          selectable: this.selectable,\r\n          defaultCursor: this.canvas && this.canvas.defaultCursor,\r\n          moveCursor: this.canvas && this.canvas.moveCursor\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _restoreEditingProps: function() {\r\n        if (!this._savedProps) {\r\n          return;\r\n        }\r\n\r\n        this.hoverCursor = this._savedProps.hoverCursor;\r\n        this.hasControls = this._savedProps.hasControls;\r\n        this.borderColor = this._savedProps.borderColor;\r\n        this.selectable = this._savedProps.selectable;\r\n        this.lockMovementX = this._savedProps.lockMovementX;\r\n        this.lockMovementY = this._savedProps.lockMovementY;\r\n\r\n        if (this.canvas) {\r\n          this.canvas.defaultCursor = this._savedProps.defaultCursor;\r\n          this.canvas.moveCursor = this._savedProps.moveCursor;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Exits from editing state\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      exitEditing: function() {\r\n        var isTextChanged = (this._textBeforeEdit !== this.text);\r\n        this.selected = false;\r\n        this.isEditing = false;\r\n\r\n        this.selectionEnd = this.selectionStart;\r\n\r\n        if (this.hiddenTextarea) {\r\n          this.hiddenTextarea.blur && this.hiddenTextarea.blur();\r\n          this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\r\n          this.hiddenTextarea = null;\r\n        }\r\n\r\n        this.abortCursorAnimation();\r\n        this._restoreEditingProps();\r\n        this._currentCursorOpacity = 0;\r\n        if (this._shouldClearDimensionCache()) {\r\n          this.initDimensions();\r\n          this.setCoords();\r\n        }\r\n        this.fire('editing:exited');\r\n        isTextChanged && this.fire('modified');\r\n        if (this.canvas) {\r\n          this.canvas.off('mouse:move', this.mouseMoveHandler);\r\n          this.canvas.fire('text:editing:exited', { target: this });\r\n          isTextChanged && this.canvas.fire('object:modified', { target: this });\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _removeExtraneousStyles: function() {\r\n        for (var prop in this.styles) {\r\n          if (!this._textLines[prop]) {\r\n            delete this.styles[prop];\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * remove and reflow a style block from start to end.\r\n       * @param {Number} start linear start position for removal (included in removal)\r\n       * @param {Number} end linear end position for removal ( excluded from removal )\r\n       */\r\n      removeStyleFromTo: function(start, end) {\r\n        var cursorStart = this.get2DCursorLocation(start, true),\r\n            cursorEnd = this.get2DCursorLocation(end, true),\r\n            lineStart = cursorStart.lineIndex,\r\n            charStart = cursorStart.charIndex,\r\n            lineEnd = cursorEnd.lineIndex,\r\n            charEnd = cursorEnd.charIndex,\r\n            i, styleObj;\r\n        if (lineStart !== lineEnd) {\r\n          // step1 remove the trailing of lineStart\r\n          if (this.styles[lineStart]) {\r\n            for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\r\n              delete this.styles[lineStart][i];\r\n            }\r\n          }\r\n          // step2 move the trailing of lineEnd to lineStart if needed\r\n          if (this.styles[lineEnd]) {\r\n            for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\r\n              styleObj = this.styles[lineEnd][i];\r\n              if (styleObj) {\r\n                this.styles[lineStart] || (this.styles[lineStart] = { });\r\n                this.styles[lineStart][charStart + i - charEnd] = styleObj;\r\n              }\r\n            }\r\n          }\r\n          // step3 detects lines will be completely removed.\r\n          for (i = lineStart + 1; i <= lineEnd; i++) {\r\n            delete this.styles[i];\r\n          }\r\n          // step4 shift remaining lines.\r\n          this.shiftLineStyles(lineEnd, lineStart - lineEnd);\r\n        }\r\n        else {\r\n          // remove and shift left on the same line\r\n          if (this.styles[lineStart]) {\r\n            styleObj = this.styles[lineStart];\r\n            var diff = charEnd - charStart, numericChar, _char;\r\n            for (i = charStart; i < charEnd; i++) {\r\n              delete styleObj[i];\r\n            }\r\n            for (_char in this.styles[lineStart]) {\r\n              numericChar = parseInt(_char, 10);\r\n              if (numericChar >= charEnd) {\r\n                styleObj[numericChar - diff] = styleObj[_char];\r\n                delete styleObj[_char];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Shifts line styles up or down\r\n       * @param {Number} lineIndex Index of a line\r\n       * @param {Number} offset Can any number?\r\n       */\r\n      shiftLineStyles: function(lineIndex, offset) {\r\n        // shift all line styles by offset upward or downward\r\n        // do not clone deep. we need new array, not new style objects\r\n        var clonedStyles = clone(this.styles);\r\n        for (var line in this.styles) {\r\n          var numericLine = parseInt(line, 10);\r\n          if (numericLine > lineIndex) {\r\n            this.styles[numericLine + offset] = clonedStyles[numericLine];\r\n            if (!clonedStyles[numericLine - offset]) {\r\n              delete this.styles[numericLine];\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      restartCursorIfNeeded: function() {\r\n        if (!this._currentTickState || this._currentTickState.isAborted\r\n          || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\r\n        ) {\r\n          this.initDelayedCursor();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Inserts new style object\r\n       * @param {Number} lineIndex Index of a line\r\n       * @param {Number} charIndex Index of a char\r\n       * @param {Number} qty number of lines to add\r\n       * @param {Array} copiedStyle Array of objects styles\r\n       */\r\n      insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\r\n        var currentCharStyle,\r\n            newLineStyles = {},\r\n            somethingAdded = false;\r\n\r\n        qty || (qty = 1);\r\n        this.shiftLineStyles(lineIndex, qty);\r\n        if (this.styles[lineIndex]) {\r\n          currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\r\n        }\r\n\r\n        // we clone styles of all chars\r\n        // after cursor onto the current line\r\n        for (var index in this.styles[lineIndex]) {\r\n          var numIndex = parseInt(index, 10);\r\n          if (numIndex >= charIndex) {\r\n            somethingAdded = true;\r\n            newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\r\n            // remove lines from the previous line since they're on a new line now\r\n            delete this.styles[lineIndex][index];\r\n          }\r\n        }\r\n        if (somethingAdded) {\r\n          this.styles[lineIndex + qty] = newLineStyles;\r\n        }\r\n        else {\r\n          delete this.styles[lineIndex + qty];\r\n        }\r\n        // for the other lines\r\n        // we clone current char style onto the next (otherwise empty) line\r\n        while (qty > 1) {\r\n          qty--;\r\n          if (copiedStyle && copiedStyle[qty]) {\r\n            this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\r\n          }\r\n          else if (currentCharStyle) {\r\n            this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\r\n          }\r\n          else {\r\n            delete this.styles[lineIndex + qty];\r\n          }\r\n        }\r\n        this._forceClearCache = true;\r\n      },\r\n\r\n      /**\r\n       * Inserts style object for a given line/char index\r\n       * @param {Number} lineIndex Index of a line\r\n       * @param {Number} charIndex Index of a char\r\n       * @param {Number} quantity number Style object to insert, if given\r\n       * @param {Array} copiedStyle array of style objects\r\n       */\r\n      insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\r\n        if (!this.styles) {\r\n          this.styles = {};\r\n        }\r\n        var currentLineStyles       = this.styles[lineIndex],\r\n            currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\r\n\r\n        quantity || (quantity = 1);\r\n        // shift all char styles by quantity forward\r\n        // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\r\n        for (var index in currentLineStylesCloned) {\r\n          var numericIndex = parseInt(index, 10);\r\n          if (numericIndex >= charIndex) {\r\n            currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\r\n            // only delete the style if there was nothing moved there\r\n            if (!currentLineStylesCloned[numericIndex - quantity]) {\r\n              delete currentLineStyles[numericIndex];\r\n            }\r\n          }\r\n        }\r\n        this._forceClearCache = true;\r\n        if (copiedStyle) {\r\n          while (quantity--) {\r\n            if (!Object.keys(copiedStyle[quantity]).length) {\r\n              continue;\r\n            }\r\n            if (!this.styles[lineIndex]) {\r\n              this.styles[lineIndex] = {};\r\n            }\r\n            this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\r\n          }\r\n          return;\r\n        }\r\n        if (!currentLineStyles) {\r\n          return;\r\n        }\r\n        var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\r\n        while (newStyle && quantity--) {\r\n          this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Inserts style object(s)\r\n       * @param {Array} insertedText Characters at the location where style is inserted\r\n       * @param {Number} start cursor index for inserting style\r\n       * @param {Array} [copiedStyle] array of style objects to insert.\r\n       */\r\n      insertNewStyleBlock: function(insertedText, start, copiedStyle) {\r\n        var cursorLoc = this.get2DCursorLocation(start, true),\r\n            addedLines = [0], linesLength = 0;\r\n        for (var i = 0; i < insertedText.length; i++) {\r\n          if (insertedText[i] === '\\n') {\r\n            linesLength++;\r\n            addedLines[linesLength] = 0;\r\n          }\r\n          else {\r\n            addedLines[linesLength]++;\r\n          }\r\n        }\r\n        if (addedLines[0] > 0) {\r\n          this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\r\n          copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\r\n        }\r\n        linesLength && this.insertNewlineStyleObject(\r\n          cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\r\n        for (var i = 1; i < linesLength; i++) {\r\n          if (addedLines[i] > 0) {\r\n            this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\r\n          }\r\n          else if (copiedStyle) {\r\n            this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\r\n          }\r\n          copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\r\n        }\r\n        // we use i outside the loop to get it like linesLength\r\n        if (addedLines[i] > 0) {\r\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set the selectionStart and selectionEnd according to the new position of cursor\r\n       * mimic the key - mouse navigation when shift is pressed.\r\n       */\r\n      setSelectionStartEndWithShift: function(start, end, newSelection) {\r\n        if (newSelection <= start) {\r\n          if (end === start) {\r\n            this._selectionDirection = 'left';\r\n          }\r\n          else if (this._selectionDirection === 'right') {\r\n            this._selectionDirection = 'left';\r\n            this.selectionEnd = start;\r\n          }\r\n          this.selectionStart = newSelection;\r\n        }\r\n        else if (newSelection > start && newSelection < end) {\r\n          if (this._selectionDirection === 'right') {\r\n            this.selectionEnd = newSelection;\r\n          }\r\n          else {\r\n            this.selectionStart = newSelection;\r\n          }\r\n        }\r\n        else {\r\n          // newSelection is > selection start and end\r\n          if (end === start) {\r\n            this._selectionDirection = 'right';\r\n          }\r\n          else if (this._selectionDirection === 'left') {\r\n            this._selectionDirection = 'right';\r\n            this.selectionStart = end;\r\n          }\r\n          this.selectionEnd = newSelection;\r\n        }\r\n      },\r\n\r\n      setSelectionInBoundaries: function() {\r\n        var length = this.text.length;\r\n        if (this.selectionStart > length) {\r\n          this.selectionStart = length;\r\n        }\r\n        else if (this.selectionStart < 0) {\r\n          this.selectionStart = 0;\r\n        }\r\n        if (this.selectionEnd > length) {\r\n          this.selectionEnd = length;\r\n        }\r\n        else if (this.selectionEnd < 0) {\r\n          this.selectionEnd = 0;\r\n        }\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n    /**\r\n     * Initializes \"dbclick\" event handler\r\n     */\r\n    initDoubleClickSimulation: function() {\r\n\r\n      // for double click\r\n      this.__lastClickTime = +new Date();\r\n\r\n      // for triple click\r\n      this.__lastLastClickTime = +new Date();\r\n\r\n      this.__lastPointer = { };\r\n\r\n      this.on('mousedown', this.onMouseDown);\r\n    },\r\n\r\n    /**\r\n     * Default event handler to simulate triple click\r\n     * @private\r\n     */\r\n    onMouseDown: function(options) {\r\n      if (!this.canvas) {\r\n        return;\r\n      }\r\n      this.__newClickTime = +new Date();\r\n      var newPointer = options.pointer;\r\n      if (this.isTripleClick(newPointer)) {\r\n        this.fire('tripleclick', options);\r\n        this._stopEvent(options.e);\r\n      }\r\n      this.__lastLastClickTime = this.__lastClickTime;\r\n      this.__lastClickTime = this.__newClickTime;\r\n      this.__lastPointer = newPointer;\r\n      this.__lastIsEditing = this.isEditing;\r\n      this.__lastSelected = this.selected;\r\n    },\r\n\r\n    isTripleClick: function(newPointer) {\r\n      return this.__newClickTime - this.__lastClickTime < 500 &&\r\n          this.__lastClickTime - this.__lastLastClickTime < 500 &&\r\n          this.__lastPointer.x === newPointer.x &&\r\n          this.__lastPointer.y === newPointer.y;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _stopEvent: function(e) {\r\n      e.preventDefault && e.preventDefault();\r\n      e.stopPropagation && e.stopPropagation();\r\n    },\r\n\r\n    /**\r\n     * Initializes event handlers related to cursor or selection\r\n     */\r\n    initCursorSelectionHandlers: function() {\r\n      this.initMousedownHandler();\r\n      this.initMouseupHandler();\r\n      this.initClicks();\r\n    },\r\n\r\n    /**\r\n     * Default handler for double click, select a word\r\n     */\r\n    doubleClickHandler: function(options) {\r\n      if (!this.isEditing) {\r\n        return;\r\n      }\r\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\r\n    },\r\n\r\n    /**\r\n     * Default handler for triple click, select a line\r\n     */\r\n    tripleClickHandler: function(options) {\r\n      if (!this.isEditing) {\r\n        return;\r\n      }\r\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\r\n    },\r\n\r\n    /**\r\n     * Initializes double and triple click event handlers\r\n     */\r\n    initClicks: function() {\r\n      this.on('mousedblclick', this.doubleClickHandler);\r\n      this.on('tripleclick', this.tripleClickHandler);\r\n    },\r\n\r\n    /**\r\n     * Default event handler for the basic functionalities needed on _mouseDown\r\n     * can be overridden to do something different.\r\n     * Scope of this implementation is: find the click position, set selectionStart\r\n     * find selectionEnd, initialize the drawing of either cursor or selection area\r\n     */\r\n    _mouseDownHandler: function(options) {\r\n      if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\r\n        return;\r\n      }\r\n\r\n      this.__isMousedown = true;\r\n\r\n      if (this.selected) {\r\n        this.setCursorByClick(options.e);\r\n      }\r\n\r\n      if (this.isEditing) {\r\n        this.__selectionStartOnMouseDown = this.selectionStart;\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          this.abortCursorAnimation();\r\n        }\r\n        this.renderCursorOrSelection();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Default event handler for the basic functionalities needed on mousedown:before\r\n     * can be overridden to do something different.\r\n     * Scope of this implementation is: verify the object is already selected when mousing down\r\n     */\r\n    _mouseDownHandlerBefore: function(options) {\r\n      if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\r\n        return;\r\n      }\r\n      // we want to avoid that an object that was selected and then becomes unselectable,\r\n      // may trigger editing mode in some way.\r\n      this.selected = this === this.canvas._activeObject;\r\n    },\r\n\r\n    /**\r\n     * Initializes \"mousedown\" event handler\r\n     */\r\n    initMousedownHandler: function() {\r\n      this.on('mousedown', this._mouseDownHandler);\r\n      this.on('mousedown:before', this._mouseDownHandlerBefore);\r\n    },\r\n\r\n    /**\r\n     * Initializes \"mouseup\" event handler\r\n     */\r\n    initMouseupHandler: function() {\r\n      this.on('mouseup', this.mouseUpHandler);\r\n    },\r\n\r\n    /**\r\n     * standard hander for mouse up, overridable\r\n     * @private\r\n     */\r\n    mouseUpHandler: function(options) {\r\n      this.__isMousedown = false;\r\n      if (!this.editable || this.group ||\r\n        (options.transform && options.transform.actionPerformed) ||\r\n        (options.e.button && options.e.button !== 1)) {\r\n        return;\r\n      }\r\n\r\n      if (this.canvas) {\r\n        var currentActive = this.canvas._activeObject;\r\n        if (currentActive && currentActive !== this) {\r\n          // avoid running this logic when there is an active object\r\n          // this because is possible with shift click and fast clicks,\r\n          // to rapidly deselect and reselect this object and trigger an enterEdit\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (this.__lastSelected && !this.__corner) {\r\n        this.selected = false;\r\n        this.__lastSelected = false;\r\n        this.enterEditing(options.e);\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          this.initDelayedCursor(true);\r\n        }\r\n        else {\r\n          this.renderCursorOrSelection();\r\n        }\r\n      }\r\n      else {\r\n        this.selected = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Changes cursor location in a text depending on passed pointer (x/y) object\r\n     * @param {Event} e Event object\r\n     */\r\n    setCursorByClick: function(e) {\r\n      var newSelection = this.getSelectionStartFromPointer(e),\r\n          start = this.selectionStart, end = this.selectionEnd;\r\n      if (e.shiftKey) {\r\n        this.setSelectionStartEndWithShift(start, end, newSelection);\r\n      }\r\n      else {\r\n        this.selectionStart = newSelection;\r\n        this.selectionEnd = newSelection;\r\n      }\r\n      if (this.isEditing) {\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns index of a character corresponding to where an object was clicked\r\n     * @param {Event} e Event object\r\n     * @return {Number} Index of a character\r\n     */\r\n    getSelectionStartFromPointer: function(e) {\r\n      var mouseOffset = this.getLocalPointer(e),\r\n          prevWidth = 0,\r\n          width = 0,\r\n          height = 0,\r\n          charIndex = 0,\r\n          lineIndex = 0,\r\n          lineLeftOffset,\r\n          line;\r\n\r\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n        if (height <= mouseOffset.y) {\r\n          height += this.getHeightOfLine(i) * this.scaleY;\r\n          lineIndex = i;\r\n          if (i > 0) {\r\n            charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\r\n          }\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n      width = lineLeftOffset * this.scaleX;\r\n      line = this._textLines[lineIndex];\r\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n        prevWidth = width;\r\n        // i removed something about flipX here, check.\r\n        width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\r\n        if (width <= mouseOffset.x) {\r\n          charIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\r\n      // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\r\n      var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\r\n          distanceBtwNextCharAndCursor = width - mouseOffset.x,\r\n          offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\r\n            distanceBtwNextCharAndCursor < 0 ? 0 : 1,\r\n          newSelectionStart = index + offset;\r\n      // if object is horizontally flipped, mirror cursor location from the end\r\n      if (this.flipX) {\r\n        newSelectionStart = jlen - newSelectionStart;\r\n      }\r\n\r\n      if (newSelectionStart > this._text.length) {\r\n        newSelectionStart = this._text.length;\r\n      }\r\n\r\n      return newSelectionStart;\r\n    }\r\n  });\r\n\r\n\r\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n\r\n    /**\r\n     * Initializes hidden textarea (needed to bring up keyboard in iOS)\r\n     */\r\n    initHiddenTextarea: function() {\r\n      this.hiddenTextarea = fabric.document.createElement('textarea');\r\n      this.hiddenTextarea.setAttribute('autocapitalize', 'off');\r\n      this.hiddenTextarea.setAttribute('autocorrect', 'off');\r\n      this.hiddenTextarea.setAttribute('autocomplete', 'off');\r\n      this.hiddenTextarea.setAttribute('spellcheck', 'false');\r\n      this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\r\n      this.hiddenTextarea.setAttribute('wrap', 'off');\r\n      var style = this._calcTextareaPosition();\r\n      // line-height: 1px; was removed from the style to fix this:\r\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\r\n      this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\r\n      '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\r\n      ' paddingｰtop: ' + style.fontSize + ';';\r\n      fabric.document.body.appendChild(this.hiddenTextarea);\r\n\r\n      fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\r\n\r\n      if (!this._clickHandlerInitialized && this.canvas) {\r\n        fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\r\n        this._clickHandlerInitialized = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * For functionalities on keyDown\r\n     * Map a special key to a function of the instance/prototype\r\n     * If you need different behaviour for ESC or TAB or arrows, you have to change\r\n     * this map setting the name of a function that you build on the fabric.Itext or\r\n     * your prototype.\r\n     * the map change will affect all Instances unless you need for only some text Instances\r\n     * in that case you have to clone this object and assign your Instance.\r\n     * this.keysMap = fabric.util.object.clone(this.keysMap);\r\n     * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\r\n     */\r\n    keysMap: {\r\n      9:  'exitEditing',\r\n      27: 'exitEditing',\r\n      33: 'moveCursorUp',\r\n      34: 'moveCursorDown',\r\n      35: 'moveCursorRight',\r\n      36: 'moveCursorLeft',\r\n      37: 'moveCursorLeft',\r\n      38: 'moveCursorUp',\r\n      39: 'moveCursorRight',\r\n      40: 'moveCursorDown',\r\n    },\r\n\r\n    /**\r\n     * For functionalities on keyUp + ctrl || cmd\r\n     */\r\n    ctrlKeysMapUp: {\r\n      67: 'copy',\r\n      88: 'cut'\r\n    },\r\n\r\n    /**\r\n     * For functionalities on keyDown + ctrl || cmd\r\n     */\r\n    ctrlKeysMapDown: {\r\n      65: 'selectAll'\r\n    },\r\n\r\n    onClick: function() {\r\n      // No need to trigger click event here, focus is enough to have the keyboard appear on Android\r\n      this.hiddenTextarea && this.hiddenTextarea.focus();\r\n    },\r\n\r\n    /**\r\n     * Handles keyup event\r\n     * @param {Event} e Event object\r\n     */\r\n    onKeyDown: function(e) {\r\n      if (!this.isEditing || this.inCompositionMode) {\r\n        return;\r\n      }\r\n      if (e.keyCode in this.keysMap) {\r\n        this[this.keysMap[e.keyCode]](e);\r\n      }\r\n      else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\r\n        this[this.ctrlKeysMapDown[e.keyCode]](e);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n      e.stopImmediatePropagation();\r\n      e.preventDefault();\r\n      if (e.keyCode >= 33 && e.keyCode <= 40) {\r\n        // if i press an arrow key just update selection\r\n        this.clearContextTop();\r\n        this.renderCursorOrSelection();\r\n      }\r\n      else {\r\n        this.canvas && this.canvas.requestRenderAll();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handles keyup event\r\n     * We handle KeyUp because ie11 and edge have difficulties copy/pasting\r\n     * if a copy/cut event fired, keyup is dismissed\r\n     * @param {Event} e Event object\r\n     */\r\n    onKeyUp: function(e) {\r\n      if (!this.isEditing || this._copyDone || this.inCompositionMode) {\r\n        this._copyDone = false;\r\n        return;\r\n      }\r\n      if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\r\n        this[this.ctrlKeysMapUp[e.keyCode]](e);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n      e.stopImmediatePropagation();\r\n      e.preventDefault();\r\n      this.canvas && this.canvas.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * Handles onInput event\r\n     * @param {Event} e Event object\r\n     */\r\n    onInput: function(e) {\r\n      var fromPaste = this.fromPaste;\r\n      this.fromPaste = false;\r\n      e && e.stopPropagation();\r\n      if (!this.isEditing) {\r\n        return;\r\n      }\r\n      // decisions about style changes.\r\n      var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\r\n          charCount = this._text.length,\r\n          nextCharCount = nextText.length,\r\n          removedText, insertedText,\r\n          charDiff = nextCharCount - charCount;\r\n      if (this.hiddenTextarea.value === '') {\r\n        this.styles = { };\r\n        this.updateFromTextArea();\r\n        this.fire('changed');\r\n        if (this.canvas) {\r\n          this.canvas.fire('text:changed', { target: this });\r\n          this.canvas.requestRenderAll();\r\n        }\r\n        return;\r\n      }\r\n\r\n      var textareaSelection = this.fromStringToGraphemeSelection(\r\n        this.hiddenTextarea.selectionStart,\r\n        this.hiddenTextarea.selectionEnd,\r\n        this.hiddenTextarea.value\r\n      );\r\n      var backDelete = this.selectionStart > textareaSelection.selectionStart;\r\n\r\n      if (this.selectionStart !== this.selectionEnd) {\r\n        removedText = this._text.slice(this.selectionStart, this.selectionEnd);\r\n        charDiff += this.selectionEnd - this.selectionStart;\r\n      }\r\n      else if (nextCharCount < charCount) {\r\n        if (backDelete) {\r\n          removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\r\n        }\r\n        else {\r\n          removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\r\n        }\r\n      }\r\n      insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\r\n      if (removedText && removedText.length) {\r\n        if (this.selectionStart !== this.selectionEnd) {\r\n          this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\r\n        }\r\n        else if (backDelete) {\r\n          // detect differencies between forwardDelete and backDelete\r\n          this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\r\n        }\r\n        else {\r\n          this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\r\n        }\r\n      }\r\n      if (insertedText.length) {\r\n        if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\r\n          this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\r\n        }\r\n        else {\r\n          this.insertNewStyleBlock(insertedText, this.selectionStart);\r\n        }\r\n      }\r\n      this.updateFromTextArea();\r\n      this.fire('changed');\r\n      if (this.canvas) {\r\n        this.canvas.fire('text:changed', { target: this });\r\n        this.canvas.requestRenderAll();\r\n      }\r\n    },\r\n    /**\r\n     * Composition start\r\n     */\r\n    onCompositionStart: function() {\r\n      this.inCompositionMode = true;\r\n    },\r\n\r\n    /**\r\n     * Composition end\r\n     */\r\n    onCompositionEnd: function() {\r\n      this.inCompositionMode = false;\r\n    },\r\n\r\n    // /**\r\n    //  * Composition update\r\n    //  */\r\n    onCompositionUpdate: function(e) {\r\n      this.compositionStart = e.target.selectionStart;\r\n      this.compositionEnd = e.target.selectionEnd;\r\n      this.updateTextareaPosition();\r\n    },\r\n\r\n    /**\r\n     * Copies selected text\r\n     * @param {Event} e Event object\r\n     */\r\n    copy: function() {\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        //do not cut-copy if no selection\r\n        return;\r\n      }\r\n\r\n      fabric.copiedText = this.getSelectedText();\r\n      if (!fabric.disableStyleCopyPaste) {\r\n        fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\r\n      }\r\n      else {\r\n        fabric.copiedTextStyle = null;\r\n      }\r\n      this._copyDone = true;\r\n    },\r\n\r\n    /**\r\n     * Pastes text\r\n     * @param {Event} e Event object\r\n     */\r\n    paste: function() {\r\n      this.fromPaste = true;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object\r\n     * @return {Object} Clipboard data object\r\n     */\r\n    _getClipboardData: function(e) {\r\n      return (e && e.clipboardData) || fabric.window.clipboardData;\r\n    },\r\n\r\n    /**\r\n     * Finds the width in pixels before the cursor on the same line\r\n     * @private\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @return {Number} widthBeforeCursor width before cursor\r\n     */\r\n    _getWidthBeforeCursor: function(lineIndex, charIndex) {\r\n      var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\r\n\r\n      if (charIndex > 0) {\r\n        bound = this.__charBounds[lineIndex][charIndex - 1];\r\n        widthBeforeCursor += bound.left + bound.width;\r\n      }\r\n      return widthBeforeCursor;\r\n    },\r\n\r\n    /**\r\n     * Gets start offset of a selection\r\n     * @param {Event} e Event object\r\n     * @param {Boolean} isRight\r\n     * @return {Number}\r\n     */\r\n    getDownCursorOffset: function(e, isRight) {\r\n      var selectionProp = this._getSelectionForOffset(e, isRight),\r\n          cursorLocation = this.get2DCursorLocation(selectionProp),\r\n          lineIndex = cursorLocation.lineIndex;\r\n      // if on last line, down cursor goes to end of line\r\n      if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\r\n        // move to the end of a text\r\n        return this._text.length - selectionProp;\r\n      }\r\n      var charIndex = cursorLocation.charIndex,\r\n          widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n          indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\r\n          textAfterCursor = this._textLines[lineIndex].slice(charIndex);\r\n      return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\r\n    },\r\n\r\n    /**\r\n     * private\r\n     * Helps finding if the offset should be counted from Start or End\r\n     * @param {Event} e Event object\r\n     * @param {Boolean} isRight\r\n     * @return {Number}\r\n     */\r\n    _getSelectionForOffset: function(e, isRight) {\r\n      if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\r\n        return this.selectionEnd;\r\n      }\r\n      else {\r\n        return this.selectionStart;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Event} e Event object\r\n     * @param {Boolean} isRight\r\n     * @return {Number}\r\n     */\r\n    getUpCursorOffset: function(e, isRight) {\r\n      var selectionProp = this._getSelectionForOffset(e, isRight),\r\n          cursorLocation = this.get2DCursorLocation(selectionProp),\r\n          lineIndex = cursorLocation.lineIndex;\r\n      if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\r\n        // if on first line, up cursor goes to start of line\r\n        return -selectionProp;\r\n      }\r\n      var charIndex = cursorLocation.charIndex,\r\n          widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n          indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\r\n          textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\r\n          missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\r\n      // return a negative offset\r\n      return -this._textLines[lineIndex - 1].length\r\n       + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\r\n    },\r\n\r\n    /**\r\n     * for a given width it founds the matching character.\r\n     * @private\r\n     */\r\n    _getIndexOnLine: function(lineIndex, width) {\r\n\r\n      var line = this._textLines[lineIndex],\r\n          lineLeftOffset = this._getLineLeftOffset(lineIndex),\r\n          widthOfCharsOnLine = lineLeftOffset,\r\n          indexOnLine = 0, charWidth, foundMatch;\r\n\r\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n        charWidth = this.__charBounds[lineIndex][j].width;\r\n        widthOfCharsOnLine += charWidth;\r\n        if (widthOfCharsOnLine > width) {\r\n          foundMatch = true;\r\n          var leftEdge = widthOfCharsOnLine - charWidth,\r\n              rightEdge = widthOfCharsOnLine,\r\n              offsetFromLeftEdge = Math.abs(leftEdge - width),\r\n              offsetFromRightEdge = Math.abs(rightEdge - width);\r\n\r\n          indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      // reached end\r\n      if (!foundMatch) {\r\n        indexOnLine = line.length - 1;\r\n      }\r\n\r\n      return indexOnLine;\r\n    },\r\n\r\n\r\n    /**\r\n     * Moves cursor down\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorDown: function(e) {\r\n      if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\r\n        return;\r\n      }\r\n      this._moveCursorUpOrDown('Down', e);\r\n    },\r\n\r\n    /**\r\n     * Moves cursor up\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorUp: function(e) {\r\n      if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n        return;\r\n      }\r\n      this._moveCursorUpOrDown('Up', e);\r\n    },\r\n\r\n    /**\r\n     * Moves cursor up or down, fires the events\r\n     * @param {String} direction 'Up' or 'Down'\r\n     * @param {Event} e Event object\r\n     */\r\n    _moveCursorUpOrDown: function(direction, e) {\r\n      // getUpCursorOffset\r\n      // getDownCursorOffset\r\n      var action = 'get' + direction + 'CursorOffset',\r\n          offset = this[action](e, this._selectionDirection === 'right');\r\n      if (e.shiftKey) {\r\n        this.moveCursorWithShift(offset);\r\n      }\r\n      else {\r\n        this.moveCursorWithoutShift(offset);\r\n      }\r\n      if (offset !== 0) {\r\n        this.setSelectionInBoundaries();\r\n        this.abortCursorAnimation();\r\n        this._currentCursorOpacity = 1;\r\n        this.initDelayedCursor();\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor with shift\r\n     * @param {Number} offset\r\n     */\r\n    moveCursorWithShift: function(offset) {\r\n      var newSelection = this._selectionDirection === 'left'\r\n        ? this.selectionStart + offset\r\n        : this.selectionEnd + offset;\r\n      this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\r\n      return offset !== 0;\r\n    },\r\n\r\n    /**\r\n     * Moves cursor up without shift\r\n     * @param {Number} offset\r\n     */\r\n    moveCursorWithoutShift: function(offset) {\r\n      if (offset < 0) {\r\n        this.selectionStart += offset;\r\n        this.selectionEnd = this.selectionStart;\r\n      }\r\n      else {\r\n        this.selectionEnd += offset;\r\n        this.selectionStart = this.selectionEnd;\r\n      }\r\n      return offset !== 0;\r\n    },\r\n\r\n    /**\r\n     * Moves cursor left\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorLeft: function(e) {\r\n      if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n        return;\r\n      }\r\n      this._moveCursorLeftOrRight('Left', e);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @return {Boolean} true if a change happened\r\n     */\r\n    _move: function(e, prop, direction) {\r\n      var newValue;\r\n      if (e.altKey) {\r\n        newValue = this['findWordBoundary' + direction](this[prop]);\r\n      }\r\n      else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\r\n        newValue = this['findLineBoundary' + direction](this[prop]);\r\n      }\r\n      else {\r\n        this[prop] += direction === 'Left' ? -1 : 1;\r\n        return true;\r\n      }\r\n      if (typeof newValue !== undefined && this[prop] !== newValue) {\r\n        this[prop] = newValue;\r\n        return true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _moveLeft: function(e, prop) {\r\n      return this._move(e, prop, 'Left');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _moveRight: function(e, prop) {\r\n      return this._move(e, prop, 'Right');\r\n    },\r\n\r\n    /**\r\n     * Moves cursor left without keeping selection\r\n     * @param {Event} e\r\n     */\r\n    moveCursorLeftWithoutShift: function(e) {\r\n      var change = true;\r\n      this._selectionDirection = 'left';\r\n\r\n      // only move cursor when there is no selection,\r\n      // otherwise we discard it, and leave cursor on same place\r\n      if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\r\n        change = this._moveLeft(e, 'selectionStart');\r\n\r\n      }\r\n      this.selectionEnd = this.selectionStart;\r\n      return change;\r\n    },\r\n\r\n    /**\r\n     * Moves cursor left while keeping selection\r\n     * @param {Event} e\r\n     */\r\n    moveCursorLeftWithShift: function(e) {\r\n      if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\r\n        return this._moveLeft(e, 'selectionEnd');\r\n      }\r\n      else if (this.selectionStart !== 0){\r\n        this._selectionDirection = 'left';\r\n        return this._moveLeft(e, 'selectionStart');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorRight: function(e) {\r\n      if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\r\n        return;\r\n      }\r\n      this._moveCursorLeftOrRight('Right', e);\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right or Left, fires event\r\n     * @param {String} direction 'Left', 'Right'\r\n     * @param {Event} e Event object\r\n     */\r\n    _moveCursorLeftOrRight: function(direction, e) {\r\n      var actionName = 'moveCursor' + direction + 'With';\r\n      this._currentCursorOpacity = 1;\r\n\r\n      if (e.shiftKey) {\r\n        actionName += 'Shift';\r\n      }\r\n      else {\r\n        actionName += 'outShift';\r\n      }\r\n      if (this[actionName](e)) {\r\n        this.abortCursorAnimation();\r\n        this.initDelayedCursor();\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right while keeping selection\r\n     * @param {Event} e\r\n     */\r\n    moveCursorRightWithShift: function(e) {\r\n      if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\r\n        return this._moveRight(e, 'selectionStart');\r\n      }\r\n      else if (this.selectionEnd !== this._text.length) {\r\n        this._selectionDirection = 'right';\r\n        return this._moveRight(e, 'selectionEnd');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right without keeping selection\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorRightWithoutShift: function(e) {\r\n      var changed = true;\r\n      this._selectionDirection = 'right';\r\n\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        changed = this._moveRight(e, 'selectionStart');\r\n        this.selectionEnd = this.selectionStart;\r\n      }\r\n      else {\r\n        this.selectionStart = this.selectionEnd;\r\n      }\r\n      return changed;\r\n    },\r\n\r\n    /**\r\n     * Removes characters from start/end\r\n     * start/end ar per grapheme position in _text array.\r\n     *\r\n     * @param {Number} start\r\n     * @param {Number} end default to start + 1\r\n     */\r\n    removeChars: function(start, end) {\r\n      if (typeof end === 'undefined') {\r\n        end = start + 1;\r\n      }\r\n      this.removeStyleFromTo(start, end);\r\n      this._text.splice(start, end - start);\r\n      this.text = this._text.join('');\r\n      this.set('dirty', true);\r\n      if (this._shouldClearDimensionCache()) {\r\n        this.initDimensions();\r\n        this.setCoords();\r\n      }\r\n      this._removeExtraneousStyles();\r\n    },\r\n\r\n    /**\r\n     * insert characters at start position, before start position.\r\n     * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\r\n     * if style array is provided, it must be as the same length of text in graphemes\r\n     * if end is provided and is bigger than start, old text is replaced.\r\n     * start/end ar per grapheme position in _text array.\r\n     *\r\n     * @param {String} text text to insert\r\n     * @param {Array} style array of style objects\r\n     * @param {Number} start\r\n     * @param {Number} end default to start + 1\r\n     */\r\n    insertChars: function(text, style, start, end) {\r\n      if (typeof end === 'undefined') {\r\n        end = start;\r\n      }\r\n      if (end > start) {\r\n        this.removeStyleFromTo(start, end);\r\n      }\r\n      var graphemes = fabric.util.string.graphemeSplit(text);\r\n      this.insertNewStyleBlock(graphemes, start, style);\r\n      this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\r\n      this.text = this._text.join('');\r\n      this.set('dirty', true);\r\n      if (this._shouldClearDimensionCache()) {\r\n        this.initDimensions();\r\n        this.setCoords();\r\n      }\r\n      this._removeExtraneousStyles();\r\n    },\r\n\r\n  });\r\n\r\n\r\n  /* _TO_SVG_START_ */\r\n  (function() {\r\n    var toFixed = fabric.util.toFixed,\r\n        multipleSpacesRegex = /  +/g;\r\n\r\n    fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\r\n\r\n      /**\r\n       * Returns SVG representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      _toSVG: function() {\r\n        var offsets = this._getSVGLeftTopOffsets(),\r\n            textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\r\n        return this._wrapSVGTextAndBg(textAndBg);\r\n      },\r\n\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        return this._createBaseSVGMarkup(\r\n          this._toSVG(),\r\n          { reviver: reviver, noStyle: true, withShadow: true }\r\n        );\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getSVGLeftTopOffsets: function() {\r\n        return {\r\n          textLeft: -this.width / 2,\r\n          textTop: -this.height / 2,\r\n          lineTop: this.getHeightOfLine(0)\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _wrapSVGTextAndBg: function(textAndBg) {\r\n        var noShadow = true,\r\n            textDecoration = this.getSvgTextDecoration(this);\r\n        return [\r\n          textAndBg.textBgRects.join(''),\r\n          '\\t\\t<text xml:space=\"preserve\" ',\r\n          (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\r\n          (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\r\n          (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\r\n          (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\r\n          (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\r\n          'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\r\n          textAndBg.textSpans.join(''),\r\n          '</text>\\n'\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Number} textTopOffset Text top offset\r\n       * @param {Number} textLeftOffset Text left offset\r\n       * @return {Object}\r\n       */\r\n      _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\r\n        var textSpans = [],\r\n            textBgRects = [],\r\n            height = textTopOffset, lineOffset;\r\n        // bounding-box background\r\n        this._setSVGBg(textBgRects);\r\n\r\n        // text and text-background\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          lineOffset = this._getLineLeftOffset(i);\r\n          if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\r\n            this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\r\n          }\r\n          this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\r\n          height += this.getHeightOfLine(i);\r\n        }\r\n\r\n        return {\r\n          textSpans: textSpans,\r\n          textBgRects: textBgRects\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createTextCharSpan: function(_char, styleDecl, left, top) {\r\n        var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\r\n            styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\r\n            fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\r\n            dy = styleDecl.deltaY, dySpan = '',\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n        if (dy) {\r\n          dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\r\n        }\r\n        return [\r\n          '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\r\n          toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\r\n          fillStyles, '>',\r\n          fabric.util.string.escapeXml(_char),\r\n          '</tspan>'\r\n        ].join('');\r\n      },\r\n\r\n      _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\r\n        // set proper line offset\r\n        var lineHeight = this.getHeightOfLine(lineIndex),\r\n            isJustify = this.textAlign.indexOf('justify') !== -1,\r\n            actualStyle,\r\n            nextStyle,\r\n            charsToRender = '',\r\n            charBox, style,\r\n            boxWidth = 0,\r\n            line = this._textLines[lineIndex],\r\n            timeToRender;\r\n\r\n        textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\r\n        for (var i = 0, len = line.length - 1; i <= len; i++) {\r\n          timeToRender = i === len || this.charSpacing;\r\n          charsToRender += line[i];\r\n          charBox = this.__charBounds[lineIndex][i];\r\n          if (boxWidth === 0) {\r\n            textLeftOffset += charBox.kernedWidth - charBox.width;\r\n            boxWidth += charBox.width;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n          if (isJustify && !timeToRender) {\r\n            if (this._reSpaceAndTab.test(line[i])) {\r\n              timeToRender = true;\r\n            }\r\n          }\r\n          if (!timeToRender) {\r\n            // if we have charSpacing, we render char by char\r\n            actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n            nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n            timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\r\n          }\r\n          if (timeToRender) {\r\n            style = this._getStyleDeclaration(lineIndex, i) || { };\r\n            textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\r\n            charsToRender = '';\r\n            actualStyle = nextStyle;\r\n            textLeftOffset += boxWidth;\r\n            boxWidth = 0;\r\n          }\r\n        }\r\n      },\r\n\r\n      _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n        textBgRects.push(\r\n          '\\t\\t<rect ',\r\n          this._getFillAttributes(color),\r\n          ' x=\"',\r\n          toFixed(left, NUM_FRACTION_DIGITS),\r\n          '\" y=\"',\r\n          toFixed(top, NUM_FRACTION_DIGITS),\r\n          '\" width=\"',\r\n          toFixed(width, NUM_FRACTION_DIGITS),\r\n          '\" height=\"',\r\n          toFixed(height, NUM_FRACTION_DIGITS),\r\n          '\"></rect>\\n');\r\n      },\r\n\r\n      _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\r\n        var line = this._textLines[i],\r\n            heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\r\n            boxWidth = 0,\r\n            boxStart = 0,\r\n            charBox, currentColor,\r\n            lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n          charBox = this.__charBounds[i][j];\r\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n          if (currentColor !== lastColor) {\r\n            lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\r\n              textTopOffset, boxWidth, heightOfLine);\r\n            boxStart = charBox.left;\r\n            boxWidth = charBox.width;\r\n            lastColor = currentColor;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n        }\r\n        currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\r\n          textTopOffset, boxWidth, heightOfLine);\r\n      },\r\n\r\n      /**\r\n       * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\r\n       * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\r\n       *\r\n       * @private\r\n       * @param {*} value\r\n       * @return {String}\r\n       */\r\n      _getFillAttributes: function(value) {\r\n        var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\r\n        if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\r\n          return 'fill=\"' + value + '\"';\r\n        }\r\n        return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getSVGLineTopOffset: function(lineIndex) {\r\n        var lineTopOffset = 0, lastHeight = 0;\r\n        for (var j = 0; j < lineIndex; j++) {\r\n          lineTopOffset += this.getHeightOfLine(j);\r\n        }\r\n        lastHeight = this.getHeightOfLine(j);\r\n        return {\r\n          lineTop: lineTopOffset,\r\n          offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns styles-string for svg-export\r\n       * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n       * @return {String}\r\n       */\r\n      getSvgStyles: function(skipShadow) {\r\n        var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\r\n        return svgStyle + ' white-space: pre;';\r\n      },\r\n    });\r\n  })();\r\n  /* _TO_SVG_END_ */\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n    /**\r\n     * Textbox class, based on IText, allows the user to resize the text rectangle\r\n     * and wraps lines automatically. Textboxes have their Y scaling locked, the\r\n     * user can only change width. Height is adjusted automatically based on the\r\n     * wrapping of lines.\r\n     * @class fabric.Textbox\r\n     * @extends fabric.IText\r\n     * @mixes fabric.Observable\r\n     * @return {fabric.Textbox} thisArg\r\n     * @see {@link fabric.Textbox#initialize} for constructor definition\r\n     */\r\n    fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'textbox',\r\n\r\n      /**\r\n       * Minimum width of textbox, in pixels.\r\n       * @type Number\r\n       * @default\r\n       */\r\n      minWidth: 20,\r\n\r\n      /**\r\n       * Minimum calculated width of a textbox, in pixels.\r\n       * fixed to 2 so that an empty textbox cannot go to 0\r\n       * and is still selectable without text.\r\n       * @type Number\r\n       * @default\r\n       */\r\n      dynamicMinWidth: 2,\r\n\r\n      /**\r\n       * Cached array of text wrapping.\r\n       * @type Array\r\n       */\r\n      __cachedLines: null,\r\n\r\n      /**\r\n       * Override standard Object class values\r\n       */\r\n      lockScalingFlip: true,\r\n\r\n      /**\r\n       * Override standard Object class values\r\n       * Textbox needs this on false\r\n       */\r\n      noScaleCache: false,\r\n\r\n      /**\r\n       * Properties which when set cause object to change dimensions\r\n       * @type Object\r\n       * @private\r\n       */\r\n      _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\r\n\r\n      /**\r\n       * Use this regular expression to split strings in breakable lines\r\n       * @private\r\n       */\r\n      _wordJoiners: /[ \\t\\r]/,\r\n\r\n      /**\r\n       * Use this boolean property in order to split strings that have no white space concept.\r\n       * this is a cheap way to help with chinese/japaense\r\n       * @type Boolean\r\n       * @since 2.6.0\r\n       */\r\n      splitByGrapheme: false,\r\n\r\n      /**\r\n       * Unlike superclass's version of this function, Textbox does not update\r\n       * its width.\r\n       * @private\r\n       * @override\r\n       */\r\n      initDimensions: function() {\r\n        if (this.__skipDimension) {\r\n          return;\r\n        }\r\n        this.isEditing && this.initDelayedCursor();\r\n        this.clearContextTop();\r\n        this._clearCache();\r\n        // clear dynamicMinWidth as it will be different after we re-wrap line\r\n        this.dynamicMinWidth = 0;\r\n        // wrap lines\r\n        this._styleMap = this._generateStyleMap(this._splitText());\r\n        // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\r\n        if (this.dynamicMinWidth > this.width) {\r\n          this._set('width', this.dynamicMinWidth);\r\n        }\r\n        if (this.textAlign.indexOf('justify') !== -1) {\r\n          // once text is measured we need to make space fatter to make justified text.\r\n          this.enlargeSpaces();\r\n        }\r\n        // clear cache and re-calculate height\r\n        this.height = this.calcTextHeight();\r\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\r\n      },\r\n\r\n      /**\r\n       * Generate an object that translates the style object so that it is\r\n       * broken up by visual lines (new lines and automatic wrapping).\r\n       * The original text styles object is broken up by actual lines (new lines only),\r\n       * which is only sufficient for Text / IText\r\n       * @private\r\n       */\r\n      _generateStyleMap: function(textInfo) {\r\n        var realLineCount     = 0,\r\n            realLineCharCount = 0,\r\n            charCount         = 0,\r\n            map               = {};\r\n\r\n        for (var i = 0; i < textInfo.graphemeLines.length; i++) {\r\n          if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\r\n            realLineCharCount = 0;\r\n            charCount++;\r\n            realLineCount++;\r\n          }\r\n          else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\r\n            // this case deals with space's that are removed from end of lines when wrapping\r\n            realLineCharCount++;\r\n            charCount++;\r\n          }\r\n\r\n          map[i] = { line: realLineCount, offset: realLineCharCount };\r\n\r\n          charCount += textInfo.graphemeLines[i].length;\r\n          realLineCharCount += textInfo.graphemeLines[i].length;\r\n        }\r\n\r\n        return map;\r\n      },\r\n\r\n      /**\r\n       * Returns true if object has a style property or has it on a specified line\r\n       * @param {Number} lineIndex\r\n       * @return {Boolean}\r\n       */\r\n      styleHas: function(property, lineIndex) {\r\n        if (this._styleMap && !this.isWrapping) {\r\n          var map = this._styleMap[lineIndex];\r\n          if (map) {\r\n            lineIndex = map.line;\r\n          }\r\n        }\r\n        return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\r\n      },\r\n\r\n      /**\r\n       * Returns true if object has no styling or no styling in a line\r\n       * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n       * @return {Boolean}\r\n       */\r\n      isEmptyStyles: function(lineIndex) {\r\n        if (!this.styles) {\r\n          return true;\r\n        }\r\n        var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false,\r\n            map = this._styleMap[lineIndex], mapNextLine = this._styleMap[lineIndex + 1];\r\n        if (map) {\r\n          lineIndex = map.line;\r\n          offset = map.offset;\r\n        }\r\n        if (mapNextLine) {\r\n          nextLineIndex = mapNextLine.line;\r\n          shouldLimit = nextLineIndex === lineIndex;\r\n          nextOffset = mapNextLine.offset;\r\n        }\r\n        obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n        for (var p1 in obj) {\r\n          for (var p2 in obj[p1]) {\r\n            if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\r\n              // eslint-disable-next-line no-unused-vars\r\n              for (var p3 in obj[p1][p2]) {\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @private\r\n       */\r\n      _getStyleDeclaration: function(lineIndex, charIndex) {\r\n        if (this._styleMap && !this.isWrapping) {\r\n          var map = this._styleMap[lineIndex];\r\n          if (!map) {\r\n            return null;\r\n          }\r\n          lineIndex = map.line;\r\n          charIndex = map.offset + charIndex;\r\n        }\r\n        return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setStyleDeclaration: function(lineIndex, charIndex, style) {\r\n        var map = this._styleMap[lineIndex];\r\n        lineIndex = map.line;\r\n        charIndex = map.offset + charIndex;\r\n\r\n        this.styles[lineIndex][charIndex] = style;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @private\r\n       */\r\n      _deleteStyleDeclaration: function(lineIndex, charIndex) {\r\n        var map = this._styleMap[lineIndex];\r\n        lineIndex = map.line;\r\n        charIndex = map.offset + charIndex;\r\n        delete this.styles[lineIndex][charIndex];\r\n      },\r\n\r\n      /**\r\n       * probably broken need a fix\r\n       * Returns the real style line that correspond to the wrapped lineIndex line\r\n       * Used just to verify if the line does exist or not.\r\n       * @param {Number} lineIndex\r\n       * @returns {Boolean} if the line exists or not\r\n       * @private\r\n       */\r\n      _getLineStyle: function(lineIndex) {\r\n        var map = this._styleMap[lineIndex];\r\n        return !!this.styles[map.line];\r\n      },\r\n\r\n      /**\r\n       * Set the line style to an empty object so that is initialized\r\n       * @param {Number} lineIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setLineStyle: function(lineIndex) {\r\n        var map = this._styleMap[lineIndex];\r\n        this.styles[map.line] = {};\r\n      },\r\n\r\n      /**\r\n       * Wraps text using the 'width' property of Textbox. First this function\r\n       * splits text on newlines, so we preserve newlines entered by the user.\r\n       * Then it wraps each line using the width of the Textbox by calling\r\n       * _wrapLine().\r\n       * @param {Array} lines The string array of text that is split into lines\r\n       * @param {Number} desiredWidth width you want to wrap to\r\n       * @returns {Array} Array of lines\r\n       */\r\n      _wrapText: function(lines, desiredWidth) {\r\n        var wrapped = [], i;\r\n        this.isWrapping = true;\r\n        for (i = 0; i < lines.length; i++) {\r\n          wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\r\n        }\r\n        this.isWrapping = false;\r\n        return wrapped;\r\n      },\r\n\r\n      /**\r\n       * Helper function to measure a string of text, given its lineIndex and charIndex offset\r\n       * it gets called when charBounds are not available yet.\r\n       * @param {CanvasRenderingContext2D} ctx\r\n       * @param {String} text\r\n       * @param {number} lineIndex\r\n       * @param {number} charOffset\r\n       * @returns {number}\r\n       * @private\r\n       */\r\n      _measureWord: function(word, lineIndex, charOffset) {\r\n        var width = 0, prevGrapheme, skipLeft = true;\r\n        charOffset = charOffset || 0;\r\n        for (var i = 0, len = word.length; i < len; i++) {\r\n          var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\r\n          width += box.kernedWidth;\r\n          prevGrapheme = word[i];\r\n        }\r\n        return width;\r\n      },\r\n\r\n      /**\r\n       * Wraps a line of text using the width of the Textbox and a context.\r\n       * @param {Array} line The grapheme array that represent the line\r\n       * @param {Number} lineIndex\r\n       * @param {Number} desiredWidth width you want to wrap the line to\r\n       * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\r\n       * @returns {Array} Array of line(s) into which the given text is wrapped\r\n       * to.\r\n       */\r\n      _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\r\n        var lineWidth = 0,\r\n            splitByGrapheme = this.splitByGrapheme,\r\n            graphemeLines = [],\r\n            line = [],\r\n            // spaces in different languges?\r\n            words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\r\n            word = '',\r\n            offset = 0,\r\n            infix = splitByGrapheme ? '' : ' ',\r\n            wordWidth = 0,\r\n            infixWidth = 0,\r\n            largestWordWidth = 0,\r\n            lineJustStarted = true,\r\n            additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\r\n            reservedSpace = reservedSpace || 0;\r\n        // fix a difference between split and graphemeSplit\r\n        if (words.length === 0) {\r\n          words.push([]);\r\n        }\r\n        desiredWidth -= reservedSpace;\r\n        for (var i = 0; i < words.length; i++) {\r\n          // if using splitByGrapheme words are already in graphemes.\r\n          word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\r\n          wordWidth = this._measureWord(word, lineIndex, offset);\r\n          offset += word.length;\r\n\r\n          lineWidth += infixWidth + wordWidth - additionalSpace;\r\n\r\n          if (lineWidth >= desiredWidth && !lineJustStarted) {\r\n            graphemeLines.push(line);\r\n            line = [];\r\n            lineWidth = wordWidth;\r\n            lineJustStarted = true;\r\n          }\r\n          else {\r\n            lineWidth += additionalSpace;\r\n          }\r\n\r\n          if (!lineJustStarted && !splitByGrapheme) {\r\n            line.push(infix);\r\n          }\r\n          line = line.concat(word);\r\n\r\n          infixWidth = this._measureWord([infix], lineIndex, offset);\r\n          offset++;\r\n          lineJustStarted = false;\r\n          // keep track of largest word\r\n          if (wordWidth > largestWordWidth) {\r\n            largestWordWidth = wordWidth;\r\n          }\r\n        }\r\n\r\n        i && graphemeLines.push(line);\r\n\r\n        if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\r\n          this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\r\n        }\r\n\r\n        return graphemeLines;\r\n      },\r\n\r\n      /**\r\n       * Detect if the text line is ended with an hard break\r\n       * text and itext do not have wrapping, return false\r\n       * @param {Number} lineIndex text to split\r\n       * @return {Boolean}\r\n       */\r\n      isEndOfWrapping: function(lineIndex) {\r\n        if (!this._styleMap[lineIndex + 1]) {\r\n          // is last line, return true;\r\n          return true;\r\n        }\r\n        if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\r\n          // this is last line before a line break, return true;\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Detect if a line has a linebreak and so we need to account for it when moving\r\n       * and counting style.\r\n       * @return Number\r\n       */\r\n      missingNewlineOffset: function(lineIndex) {\r\n        if (this.splitByGrapheme) {\r\n          return this.isEndOfWrapping(lineIndex) ? 1 : 0;\r\n        }\r\n        return 1;\r\n      },\r\n\r\n      /**\r\n      * Gets lines of text to render in the Textbox. This function calculates\r\n      * text wrapping on the fly every time it is called.\r\n      * @param {String} text text to split\r\n      * @returns {Array} Array of lines in the Textbox.\r\n      * @override\r\n      */\r\n      _splitTextIntoLines: function(text) {\r\n        var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\r\n            graphemeLines = this._wrapText(newText.lines, this.width),\r\n            lines = new Array(graphemeLines.length);\r\n        for (var i = 0; i < graphemeLines.length; i++) {\r\n          lines[i] = graphemeLines[i].join('');\r\n        }\r\n        newText.lines = lines;\r\n        newText.graphemeLines = graphemeLines;\r\n        return newText;\r\n      },\r\n\r\n      getMinWidth: function() {\r\n        return Math.max(this.minWidth, this.dynamicMinWidth);\r\n      },\r\n\r\n      _removeExtraneousStyles: function() {\r\n        var linesToKeep = {};\r\n        for (var prop in this._styleMap) {\r\n          if (this._textLines[prop]) {\r\n            linesToKeep[this._styleMap[prop].line] = 1;\r\n          }\r\n        }\r\n        for (var prop in this.styles) {\r\n          if (!linesToKeep[prop]) {\r\n            delete this.styles[prop];\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @method toObject\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns fabric.Textbox instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Textbox\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\r\n     */\r\n    fabric.Textbox.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Textbox', object, callback, 'text');\r\n    };\r\n  })();\r\n  return fabric;\r\n});\ndefine('skylark-fabric/Canvas',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Canvas = fabric.Canvas;\r\n});\ndefine('skylark-fabric/Circle',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Circle = fabric.Circle;\r\n});\ndefine('skylark-fabric/Color',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Color = fabric.Color;\r\n});\ndefine('skylark-fabric/Ellipse',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Ellipse = fabric.Ellipse;\r\n});\ndefine('skylark-fabric/Group',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Group = fabric.Group;\r\n});\ndefine('skylark-fabric/Image',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Image = fabric.Image;\r\n});\ndefine('skylark-fabric/Line',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Line = fabric.Line;\r\n});\ndefine('skylark-fabric/Object',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n\tfabric.Object.remove = function() {\r\n        return this.canvas.remove(this);\r\n    };\r\n    \r\n    return canvas2d.Object = fabric.Object;\r\n});\ndefine('skylark-fabric/Path',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Path = fabric.Path;\r\n});\ndefine('skylark-fabric/Point',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Point = fabric.Point;\r\n});\ndefine('skylark-fabric/Polygon',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Polygon = fabric.Polygon;\r\n});\ndefine('skylark-fabric/Polyline',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Polyline = fabric.Polyline;\r\n});\ndefine('skylark-fabric/Rect',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Rect = fabric.Rect;\r\n});\ndefine('skylark-fabric/Text',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Text = fabric.Text;\r\n});\ndefine('skylark-fabric/Triangle',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Triangle = fabric.Triangle;\r\n});\ndefine('skylark-fabric/util',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.util = fabric.util;\r\n});\ndefine('skylark-fabric/main',[\r\n    \"./canvas2d\",\r\n    \"./Canvas\",\r\n    \"./Circle\",\r\n    \"./Color\",\r\n    \"./Ellipse\",\r\n    \"./Group\",\r\n    \"./Image\",\r\n    \"./Line\",\r\n    \"./Object\",\r\n    \"./Path\",\r\n    \"./Point\",\r\n    \"./Polygon\",\r\n    \"./Polyline\",\r\n    \"./Rect\",\r\n    \"./Text\",\r\n    \"./Triangle\",\r\n    \"./util\"\r\n], function(canvas2d) {\r\n    return canvas2d;\r\n});\r\n\ndefine('skylark-fabric', ['skylark-fabric/main'], function (main) { return main; });\n\ndefine('skylark-darkroomjs/Darkroom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-widgets-base/Widget\",\r\n    \"skylark-fabric\"\r\n], function(skylark, langx, noder,finder,Widget,fabric) {\r\n  'use strict';\r\n\r\n  var Plugins = {};\r\n\r\n  function computeImageViewPort(image) {\r\n    //return {\r\n    //  height : image.height,\r\n    //  width : image.width\r\n    //};\r\n    return {\r\n      height: Math.abs(image.getScaledWidth() * (Math.sin(image.angle * Math.PI/180))) + Math.abs(image.getScaledHeight() * (Math.cos(image.angle * Math.PI/180))),\r\n      width: Math.abs(image.getScaledHeight() * (Math.sin(image.angle * Math.PI/180))) + Math.abs(image.getScaledWidth() * (Math.cos(image.angle * Math.PI/180))),\r\n    }\r\n  }\r\n\r\n // Toolbar object.\r\n  function Toolbar(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  Toolbar.prototype = {\r\n    createButtonGroup: function(options) {\r\n      var buttonGroup = document.createElement('div');\r\n      buttonGroup.className = 'darkroom-button-group';\r\n      this.element.appendChild(buttonGroup);\r\n\r\n      return new ButtonGroup(buttonGroup);\r\n    }\r\n  };\r\n\r\n  // ButtonGroup object.\r\n  function ButtonGroup(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  ButtonGroup.prototype = {\r\n    createButton: function(options) {\r\n      var defaults = {\r\n        image: 'help',\r\n        type: 'default',\r\n        group: 'default',\r\n        hide: false,\r\n        disabled: false\r\n      };\r\n\r\n      options = langx.mixin({},defaults,options);\r\n\r\n      var buttonElement = document.createElement('button');\r\n      buttonElement.type = 'button';\r\n      buttonElement.className = 'darkroom-button darkroom-button-' + options.type;\r\n      buttonElement.innerHTML = '<svg class=\"darkroom-icon\"><use xlink:href=\"#' + options.image + '\" /></svg>';\r\n      this.element.appendChild(buttonElement);\r\n\r\n      var button = new Button(buttonElement);\r\n      button.hide(options.hide);\r\n      button.disable(options.disabled);\r\n\r\n      return button;\r\n    }\r\n  }\r\n\r\n  // Button object.\r\n  function Button(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  Button.prototype = {\r\n    addEventListener: function(eventName, listener) {\r\n      if (this.element.addEventListener){\r\n        this.element.addEventListener(eventName, listener);\r\n      } else if (this.element.attachEvent) {\r\n        this.element.attachEvent('on' + eventName, listener);\r\n      }\r\n    },\r\n    removeEventListener: function(eventName, listener) {\r\n      if (this.element.removeEventListener){\r\n        this.element.removeEventListener(eventName, listener);\r\n      }\r\n    },\r\n    active: function(value) {\r\n      if (value)\r\n        this.element.classList.add('darkroom-button-active');\r\n      else\r\n        this.element.classList.remove('darkroom-button-active');\r\n    },\r\n    hide: function(value) {\r\n      if (value)\r\n        this.element.classList.add('darkroom-button-hidden');\r\n      else\r\n        this.element.classList.remove('darkroom-button-hidden');\r\n    },\r\n    disable: function(value) {\r\n      this.element.disabled = (value) ? true : false;\r\n    }\r\n  };\r\n\r\n  var Darkroom = Widget.inherit({\r\n    klassName : \"Darkroom\",\r\n\r\n    /*\r\n     * @param {Element} el The container element. \r\n     */\r\n    _construct : function(el,options,plugins) {\r\n      if (typeof el === 'string') {\r\n        el = finder.find(el);\r\n      }\r\n\r\n      this._initializeDOM(el);\r\n      this.overrided(this.containerElement,options);\r\n      //this.options = langx.mixin({}, this.defaults,options);\r\n\r\n      // List of the instancied plugins\r\n      this.plugins = {};\r\n\r\n//      var image = new Image();\r\n//      image.onload = function() {\r\n        // Initialize the DOM/fabric elements\r\n        this._initializeImage();\r\n\r\n        // Then initialize the plugins\r\n        this._initializePlugins();\r\n\r\n        // Public method to adjust image according to the canvas\r\n        this.refresh(function() {\r\n          // Execute a custom callback after initialization\r\n          this.options.initialize.bind(this).call();\r\n        }.bind(this));\r\n\r\n  //    }.bind(this)\r\n\r\n      //image.crossOrigin = 'anonymous';\r\n      //image.src = el.src;\r\n    },\r\n\r\n    // Reference to the main container element\r\n    containerElement: null,\r\n\r\n    // Reference to the fabric canvas object\r\n    canvas: null,\r\n\r\n    // Reference to the fabric image object\r\n    image: null,\r\n\r\n    // Reference to the fabric source canvas object\r\n    sourceCanvas: null,\r\n\r\n    // Reference to the fabric source image object\r\n    sourceImage: null,\r\n\r\n    // Track of the original image element\r\n    originalImageElement: null,\r\n\r\n    // Stack of transformations to apply to the image source\r\n    transformations: [],\r\n\r\n    // Default options\r\n    options: {\r\n      // Canvas properties (dimension, ratio, color)\r\n      minWidth: null,\r\n      minHeight: null,\r\n      maxWidth: null,\r\n      maxHeight: null,\r\n      ratio: null,\r\n      backgroundColor: '#fff',\r\n\r\n      // Plugins options\r\n      plugins: {},\r\n\r\n      // Post-initialisation callback\r\n      initialize: function() { /* noop */ }\r\n    },\r\n\r\n\r\n\r\n    selfDestroy: function() {\r\n      var container = this.containerElement;\r\n      var image = new Image();\r\n      image.onload = function() {\r\n        container.parentNode.replaceChild(image, container);\r\n      }\r\n\r\n      image.src = this.sourceImage.toDataURL();\r\n    },\r\n\r\n    // Add ability to attach event listener on the core object.\r\n    // It uses the canvas element to process events.\r\n    addEventListener: function(eventName, callback) {\r\n      var el = this.canvas.getElement();\r\n      if (el.addEventListener){\r\n        el.addEventListener(eventName, callback);\r\n      } else if (el.attachEvent) {\r\n        el.attachEvent('on' + eventName, callback);\r\n      }\r\n    },\r\n\r\n    dispatchEvent: function(eventName) {\r\n      // Use the old way of creating event to be IE compatible\r\n      // See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\r\n      var event = document.createEvent('Event');\r\n      event.initEvent(eventName, true, true);\r\n\r\n      this.canvas.getElement().dispatchEvent(event);\r\n    },\r\n\r\n    // Adjust image & canvas dimension according to min/max width/height\r\n    // and ratio specified in the options.\r\n    // This method should be called after each image transformation.\r\n    refresh: function(next) {\r\n      var clone = new Image();\r\n      clone.onload = function() {\r\n        this._replaceCurrentImage(new fabric.Image(clone));\r\n\r\n        if (next) next();\r\n      }.bind(this);\r\n      clone.src = this.sourceImage.toDataURL();\r\n    },\r\n\r\n    _replaceCurrentImage: function(newImage) {\r\n      if (this.image) {\r\n        this.image.canvas.remove(this.image);\r\n      }\r\n\r\n      this.image = newImage;\r\n      this.image.selectable = false;\r\n\r\n      // Adjust width or height according to specified ratio\r\n      var viewport = computeImageViewPort(this.image);\r\n      var canvasWidth = viewport.width;\r\n      var canvasHeight = viewport.height;\r\n\r\n      if (null !== this.options.ratio) {\r\n        var canvasRatio = +this.options.ratio;\r\n        var currentRatio = canvasWidth / canvasHeight;\r\n\r\n        if (currentRatio > canvasRatio) {\r\n          canvasHeight = canvasWidth / canvasRatio;\r\n        } else if (currentRatio < canvasRatio) {\r\n          canvasWidth = canvasHeight * canvasRatio;\r\n        }\r\n      }\r\n\r\n      // Then scale the image to fit into dimension limits\r\n      var scaleMin = 1;\r\n      var scaleMax = 1;\r\n      var scaleX = 1;\r\n      var scaleY = 1;\r\n\r\n      if (null !== this.options.maxWidth && this.options.maxWidth < canvasWidth) {\r\n        scaleX =  this.options.maxWidth / canvasWidth;\r\n      }\r\n      if (null !== this.options.maxHeight && this.options.maxHeight < canvasHeight) {\r\n        scaleY =  this.options.maxHeight / canvasHeight;\r\n      }\r\n      scaleMin = Math.min(scaleX, scaleY);\r\n\r\n      scaleX = 1;\r\n      scaleY = 1;\r\n      if (null !== this.options.minWidth && this.options.minWidth > canvasWidth) {\r\n        scaleX =  this.options.minWidth / canvasWidth;\r\n      }\r\n      if (null !== this.options.minHeight && this.options.minHeight > canvasHeight) {\r\n        scaleY =  this.options.minHeight / canvasHeight;\r\n      }\r\n      scaleMax = Math.max(scaleX, scaleY);\r\n\r\n      var scale = scaleMax * scaleMin; // one should be equals to 1\r\n\r\n      canvasWidth *= scale;\r\n      canvasHeight *= scale;\r\n\r\n      // Finally place the image in the center of the canvas\r\n      this.image.scaleX = (1 * scale);\r\n      this.image.scaleY = (1 * scale);\r\n      this.canvas.add(this.image);\r\n      this.canvas.setWidth(canvasWidth);\r\n      this.canvas.setHeight(canvasHeight);\r\n      this.canvas.centerObject(this.image);\r\n      this.image.setCoords();\r\n    },\r\n\r\n    // Apply the transformation on the current image and save it in the\r\n    // transformations stack (in order to reconstitute the previous states\r\n    // of the image).\r\n    applyTransformation: function(transformation) {\r\n      this.transformations.push(transformation);\r\n\r\n      transformation.applyTransformation(\r\n        this.sourceCanvas,\r\n        this.sourceImage,\r\n        this._postTransformation.bind(this)\r\n      );\r\n    },\r\n\r\n    _postTransformation: function(newImage) {\r\n      if (newImage)\r\n        this.sourceImage = newImage;\r\n\r\n      this.refresh(function() {\r\n        this.dispatchEvent('core:transformation');\r\n      }.bind(this));\r\n    },\r\n\r\n    // Initialize image from original element plus re-apply every\r\n    // transformations.\r\n    reinitializeImage: function() {\r\n      this.canvas.remove(this.sourceImage);\r\n      this._initializeImage();\r\n      this._popTransformation(this.transformations.slice())\r\n    },\r\n\r\n    _popTransformation: function(transformations) {\r\n      if (0 === transformations.length) {\r\n        this.dispatchEvent('core:reinitialized');\r\n        this.refresh();\r\n        return;\r\n      }\r\n\r\n      var transformation = transformations.shift();\r\n\r\n      var next = function(newImage) {\r\n        if (newImage) this.sourceImage = newImage;\r\n        this._popTransformation(transformations)\r\n      };\r\n\r\n      transformation.applyTransformation(\r\n        this.sourceCanvas,\r\n        this.sourceImage,\r\n        next.bind(this)\r\n      );\r\n    },\r\n\r\n    // Create the DOM elements and instanciate the fabric canvas.\r\n    // The image element is replaced by a new `div` element.\r\n    // However the original image is re-injected in order to keep a trace of it.\r\n    _initializeDOM: function(imageElement) {\r\n      // Container\r\n      var mainContainerElement = document.createElement('div');\r\n      mainContainerElement.className = 'darkroom-container';\r\n\r\n      // Toolbar\r\n      var toolbarElement = document.createElement('div');\r\n      toolbarElement.className = 'darkroom-toolbar';\r\n      mainContainerElement.appendChild(toolbarElement);\r\n\r\n      // Viewport canvas\r\n      var canvasContainerElement = document.createElement('div');\r\n      canvasContainerElement.className = 'darkroom-image-container';\r\n      var canvasElement = this.canvasElement = document.createElement('canvas');\r\n      canvasContainerElement.appendChild(canvasElement);\r\n      mainContainerElement.appendChild(canvasContainerElement);\r\n\r\n      // Source canvas\r\n      var sourceCanvasContainerElement = document.createElement('div');\r\n      sourceCanvasContainerElement.className = 'darkroom-source-container';\r\n      sourceCanvasContainerElement.style.display = 'none';\r\n      var sourceCanvasElement = this.sourceCanvasElement = document.createElement('canvas');\r\n      sourceCanvasContainerElement.appendChild(sourceCanvasElement);\r\n      mainContainerElement.appendChild(sourceCanvasContainerElement);\r\n\r\n      // Original image\r\n      imageElement.parentNode.replaceChild(mainContainerElement, imageElement);\r\n      imageElement.style.display = 'none';\r\n      mainContainerElement.appendChild(imageElement);\r\n\r\n      // Instanciate object from elements\r\n      this.containerElement = mainContainerElement;\r\n      this.originalImageElement = imageElement;\r\n\r\n      this.toolbar = new Toolbar(toolbarElement);\r\n\r\n    },\r\n\r\n    // Instanciate the fabric image object.\r\n    // The image is created as a static element with no control,\r\n    // then it is add in the fabric canvas object.\r\n    _initializeImage: function() {\r\n      this.canvas = new fabric.Canvas(this.canvasElement, {\r\n        selection: false,\r\n        backgroundColor: this.options.backgroundColor\r\n      });\r\n\r\n      this.sourceCanvas = new fabric.Canvas(this.sourceCanvasElement, {\r\n        selection: false,\r\n        backgroundColor: this.options.backgroundColor\r\n      });\r\n \r\n      this.sourceImage = new fabric.Image(this.originalImageElement, {\r\n        // Some options to make the image static\r\n        selectable: false,\r\n        evented: false,\r\n        lockMovementX: true,\r\n        lockMovementY: true,\r\n        lockRotation: true,\r\n        lockScalingX: true,\r\n        lockScalingY: true,\r\n        lockUniScaling: true,\r\n        hasControls: false,\r\n        hasBorders: false,\r\n      });\r\n\r\n      this.sourceCanvas.add(this.sourceImage);\r\n\r\n      // Adjust width or height according to specified ratio\r\n      var viewport = computeImageViewPort(this.sourceImage);\r\n      var canvasWidth = viewport.width;\r\n      var canvasHeight = viewport.height;\r\n\r\n      this.sourceCanvas.setWidth(canvasWidth);\r\n      this.sourceCanvas.setHeight(canvasHeight);\r\n      this.sourceCanvas.centerObject(this.sourceImage);\r\n      this.sourceImage.setCoords();\r\n    },\r\n\r\n    // Initialize every plugins.\r\n    // Note that plugins are instanciated in the same order than they\r\n    // are declared in the parameter object.\r\n    _initializePlugins: function() {\r\n      for (var name in Plugins) {\r\n        var pluginInfo = Plugins[name];\r\n        var options = this.options.plugins[name];\r\n\r\n        // Setting false into the plugin options will disable the plugin\r\n        if (options === false)\r\n          continue;\r\n\r\n        // Avoid any issues with _proto_\r\n        if (!Plugins.hasOwnProperty(name))\r\n          continue;\r\n\r\n        this.plugins[name] = new pluginInfo.ctor(this, options);\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n\r\n  Darkroom.Plugin = langx.Evented.inherit({\r\n    klassName : \"Plugin\",\r\n\r\n    defaults: {},\r\n\r\n    init : function(Darkroom,options) {\r\n      this.Darkroom = Darkroom;\r\n      this.options = langx.mixin({},this.defaults,options);\r\n\r\n    }\r\n  });\r\n\r\n\r\n  Darkroom.Transformation = langx.Evented.inherit({\r\n    klassName : \"Transformation\",\r\n\r\n    init : function(options) {\r\n      this.options = options;\r\n    }\r\n  });\r\n\r\n\r\n  Darkroom.installPlugin = function(setting) {\r\n\r\n    //Plugins.push(setting);\r\n    Plugins[setting.name] = setting;\r\n  };\r\n\r\n  return skylark.attach(\"intg.Darkroom\",Darkroom);\r\n\r\n});\r\n\r\n\ndefine('skylark-darkroomjs/plugins/history',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-fabric\",\r\n  '../Darkroom',\r\n],function(langx,noder, $, fabric,Darkroom) {\r\n  'use strict';\r\n\r\n  var HistoryPlugin= Darkroom.Plugin.inherit({\r\n     undoTransformations: null,\r\n\r\n     init : function(Darkroom,options) {\r\n      this.overrided(Darkroom,options);\r\n      this.undoTransformations = [];\r\n      this._initButtons();\r\n\r\n      this.Darkroom.addEventListener('core:transformation', this._onTranformationApplied.bind(this));\r\n    },\r\n\r\n    undo: function() {\r\n      if (this.Darkroom.transformations.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var lastTransformation = this.Darkroom.transformations.pop();\r\n      this.undoTransformations.unshift(lastTransformation);\r\n\r\n      this.Darkroom.reinitializeImage();\r\n      this._updateButtons();\r\n    },\r\n\r\n    redo: function() {\r\n      if (this.undoTransformations.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var cancelTransformation = this.undoTransformations.shift();\r\n      this.Darkroom.transformations.push(cancelTransformation);\r\n\r\n      this.Darkroom.reinitializeImage();\r\n      this._updateButtons();\r\n    },\r\n\r\n    _initButtons: function() {\r\n      var buttonGroup = this.Darkroom.toolbar.createButtonGroup();\r\n\r\n      this.backButton = buttonGroup.createButton({\r\n        image: 'undo',\r\n        disabled: true\r\n      });\r\n\r\n      this.forwardButton = buttonGroup.createButton({\r\n        image: 'redo',\r\n        disabled: true\r\n      });\r\n\r\n      this.backButton.addEventListener('click', this.undo.bind(this));\r\n      this.forwardButton.addEventListener('click', this.redo.bind(this));\r\n\r\n      return this;\r\n    },\r\n\r\n    _updateButtons: function() {\r\n      this.backButton.disable((this.Darkroom.transformations.length === 0))\r\n      this.forwardButton.disable((this.undoTransformations.length === 0))\r\n    },\r\n\r\n    _onTranformationApplied: function() {\r\n      this.undoTransformations = [];\r\n      this._updateButtons();\r\n    }\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"history\",\r\n    ctor : HistoryPlugin\r\n  };\r\n\r\n  Darkroom.installPlugin(pluginInfo);\r\n\r\n  return pluginInfo;\r\n\r\n  \r\n});\r\n\ndefine('skylark-domx-transforms/transforms',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.attach(\"domx.transforms\", transforms);\r\n});\r\n\ndefine('skylark-domx-transforms/main',[\r\n\t\"./transforms\"\r\n],function(transforms){\r\n\treturn transforms;\r\n});\ndefine('skylark-domx-transforms', ['skylark-domx-transforms/main'], function (main) { return main; });\n\ndefine('skylark-domx-images/images',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-transforms\",\r\n    \"skylark-domx-query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.attach(\"domx.images\" , images);\r\n});\r\n\ndefine('skylark-domx-images/main',[\r\n\t\"./images\"\r\n],function(images){\r\n\treturn images;\r\n});\ndefine('skylark-domx-images', ['skylark-domx-images/main'], function (main) { return main; });\n\ndefine('skylark-darkroomjs/plugins/crop',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-images\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-fabric\",\r\n  '../Darkroom',\r\n],function(langx,noder, images,$, fabric,Darkroom) {\r\n  'use strict';\r\n\r\n  function computeImageViewPort(image) {\r\n    //return {\r\n    //  height : image.height,\r\n    //  width : image.width\r\n    //};\r\n    return {\r\n      height: Math.abs(image.getScaledWidth() * (Math.sin(image.get(\"angle\") * Math.PI/180))) + Math.abs(image.getScaledHeight() * (Math.cos(image.get(\"angle\") * Math.PI/180))),\r\n      width: Math.abs(image.getScaledHeight() * (Math.sin(image.get(\"angle\") * Math.PI/180))) + Math.abs(image.getScaledWidth() * (Math.cos(image.get(\"angle\") * Math.PI/180))),\r\n    }\r\n  }\r\n  \r\n\r\n  var Crop = Darkroom.Transformation.inherit({\r\n    applyTransformation: function(canvas, image, next) {\r\n      // Snapshot the image delimited by the crop zone\r\n      var snapshot = new Image();\r\n\r\n      var viewport = computeImageViewPort(image);\r\n      var imageWidth = viewport.width;\r\n      var imageHeight = viewport.height;\r\n\r\n      var left = this.options.left * imageWidth;\r\n      var top = this.options.top * imageHeight;\r\n      var width = Math.min(this.options.width * imageWidth, imageWidth - left);\r\n      var height = Math.min(this.options.height * imageHeight, imageHeight - top);\r\n\r\n      snapshot.src = canvas.toDataURL({\r\n        left: left,\r\n        top: top,\r\n        width: width,\r\n        height: height,\r\n      });\r\n\r\n      images.loaded(snapshot).then(function() {\r\n        // Validate image\r\n        if (height < 1 || width < 1)\r\n          return;\r\n\r\n        var imgInstance = new fabric.Image(snapshot, {\r\n          // options to make the image static\r\n          selectable: false,\r\n          evented: false,\r\n          lockMovementX: true,\r\n          lockMovementY: true,\r\n          lockRotation: true,\r\n          lockScalingX: true,\r\n          lockScalingY: true,\r\n          lockUniScaling: true,\r\n          hasControls: false,\r\n          hasBorders: false\r\n        });\r\n\r\n        var width = snapshot.width;\r\n        var height = snapshot.height;\r\n\r\n        // Update canvas size\r\n        canvas.setWidth(width);\r\n        canvas.setHeight(height);\r\n\r\n        // Add image\r\n        canvas.remove(image);\r\n        canvas.add(imgInstance);\r\n\r\n        next(imgInstance);\r\n      });\r\n    }\r\n  });\r\n\r\n  var CropZone = fabric.util.createClass(fabric.Rect, {\r\n    _render: function(ctx) {\r\n      this.callSuper('_render', ctx);\r\n\r\n      var canvas = ctx.canvas;\r\n      var dashWidth = 7;\r\n\r\n      // Set original scale\r\n      var flipX = this.flipX ? -1 : 1;\r\n      var flipY = this.flipY ? -1 : 1;\r\n      var scaleX = flipX / this.scaleX;\r\n      var scaleY = flipY / this.scaleY;\r\n\r\n      ctx.scale(scaleX, scaleY);\r\n\r\n      // Overlay rendering\r\n      //ctx.fillStyle = 'rgba(0, 0, 0, 0.5)'; //modifeied by lwf\r\n      this._renderOverlay(ctx);\r\n\r\n      // Set dashed borders\r\n      if (ctx.setLineDash !== undefined)\r\n        ctx.setLineDash([dashWidth, dashWidth]);\r\n      else if (ctx.mozDash !== undefined)\r\n        ctx.mozDash = [dashWidth, dashWidth];\r\n\r\n      // First lines rendering with black\r\n      ctx.strokeStyle = 'rgba(0, 0, 0, 0.2)';\r\n      this._renderBorders(ctx);\r\n      this._renderGrid(ctx);\r\n\r\n      // Re render lines in white\r\n      ctx.lineDashOffset = dashWidth;\r\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.4)';\r\n      this._renderBorders(ctx);\r\n      this._renderGrid(ctx);\r\n\r\n      // Reset scale\r\n      ctx.scale(1/scaleX, 1/scaleY);\r\n    },\r\n\r\n    _renderOverlay: function(ctx) {\r\n      var canvas = ctx.canvas;\r\n\r\n      //\r\n      //    x0    x1        x2      x3\r\n      // y0 +------------------------+\r\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\r\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\r\n      // y1 +------+---------+-------+\r\n      //    |\\\\\\\\\\\\|         |\\\\\\\\\\\\\\|\r\n      //    |\\\\\\\\\\\\|    0    |\\\\\\\\\\\\\\|\r\n      //    |\\\\\\\\\\\\|         |\\\\\\\\\\\\\\|\r\n      // y2 +------+---------+-------+\r\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\r\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\r\n      // y3 +------------------------+\r\n      //\r\n\r\n      var x0 = Math.ceil(-this.getScaledWidth() / 2 - this.left);\r\n      var x1 = Math.ceil(-this.getScaledWidth() / 2);\r\n      var x2 = Math.ceil(this.getScaledWidth() / 2);\r\n      var x3 = Math.ceil(this.getScaledWidth() / 2 + (canvas.width - this.getScaledWidth() - this.left));\r\n\r\n      var y0 = Math.ceil(-this.getScaledHeight() / 2 - this.top);\r\n      var y1 = Math.ceil(-this.getScaledHeight() / 2);\r\n      var y2 = Math.ceil(this.getScaledHeight() / 2);\r\n      var y3 = Math.ceil(this.getScaledHeight() / 2 + (canvas.height - this.getScaledHeight() - this.top));\r\n\r\n      ctx.beginPath();\r\n      \r\n      // Draw outer rectangle.\r\n      // Numbers are +/-1 so that overlay edges don't get blurry.\r\n      ctx.moveTo(x0 - 1, y0 - 1);\r\n      ctx.lineTo(x3 + 1, y0 - 1);\r\n      ctx.lineTo(x3 + 1, y3 + 1);\r\n      ctx.lineTo(x0 - 1, y3 - 1);\r\n      ctx.lineTo(x0 - 1, y0 - 1);\r\n      ctx.closePath();\r\n\r\n      // Draw inner rectangle.\r\n      ctx.moveTo(x1, y1);\r\n      ctx.lineTo(x1, y2);\r\n      ctx.lineTo(x2, y2);\r\n      ctx.lineTo(x2, y1);\r\n      ctx.lineTo(x1, y1);\r\n\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    },\r\n\r\n    _renderBorders: function(ctx) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getScaledWidth()/2, -this.getScaledHeight()/2); // upper left\r\n      ctx.lineTo(this.getScaledWidth()/2, -this.getScaledHeight()/2); // upper right\r\n      ctx.lineTo(this.getScaledWidth()/2, this.getScaledHeight()/2); // down right\r\n      ctx.lineTo(-this.getScaledWidth()/2, this.getScaledHeight()/2); // down left\r\n      ctx.lineTo(-this.getScaledWidth()/2, -this.getScaledHeight()/2); // upper left\r\n      ctx.stroke();\r\n    },\r\n\r\n    _renderGrid: function(ctx) {\r\n      \r\n      // Vertical lines\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getScaledWidth()/2 + 1/3 * this.getScaledWidth(), -this.getScaledHeight()/2);\r\n      ctx.lineTo(-this.getScaledWidth()/2 + 1/3 * this.getScaledWidth(), this.getScaledHeight()/2);\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getScaledWidth()/2 + 2/3 * this.getScaledWidth(), -this.getScaledHeight()/2);\r\n      ctx.lineTo(-this.getScaledWidth()/2 + 2/3 * this.getScaledWidth(), this.getScaledHeight()/2);\r\n      ctx.stroke();\r\n      // Horizontal lines\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getScaledWidth()/2, -this.getScaledHeight()/2 + 1/3 * this.getScaledHeight());\r\n      ctx.lineTo(this.getScaledWidth()/2, -this.getScaledHeight()/2 + 1/3 * this.getScaledHeight());\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.moveTo(-this.getScaledWidth()/2, -this.getScaledHeight()/2 + 2/3 * this.getScaledHeight());\r\n      ctx.lineTo(this.getScaledWidth()/2, -this.getScaledHeight()/2 + 2/3 * this.getScaledHeight());\r\n      ctx.stroke();\r\n    }\r\n  });\r\n\r\n  var CropPlugin = Darkroom.Plugin.inherit({\r\n    // Init point\r\n    startX: null,\r\n    startY: null,\r\n\r\n    // Keycrop\r\n    isKeyCroping: false,\r\n    isKeyLeft: false,\r\n    isKeyUp: false,\r\n\r\n    defaults: {\r\n      // min crop dimension\r\n      minHeight: 1,\r\n      minWidth: 1,\r\n      // ensure crop ratio\r\n      ratio: null,\r\n      // quick crop feature (set a key code to enable it)\r\n      quickCropKey: false\r\n    },\r\n\r\n     init : function(Darkroom,options) {\r\n      this.overrided(Darkroom,options);\r\n      var buttonGroup = this.Darkroom.toolbar.createButtonGroup();\r\n\r\n      this.cropButton = buttonGroup.createButton({\r\n        image: 'crop'\r\n      });\r\n      this.okButton = buttonGroup.createButton({\r\n        image: 'done',\r\n        type: 'success',\r\n        hide: true\r\n      });\r\n      this.cancelButton = buttonGroup.createButton({\r\n        image: 'close',\r\n        type: 'danger',\r\n        hide: true\r\n      });\r\n\r\n      // Buttons click\r\n      this.cropButton.addEventListener('click', this.toggleCrop.bind(this));\r\n      this.okButton.addEventListener('click', this.cropCurrentZone.bind(this));\r\n      this.cancelButton.addEventListener('click', this.releaseFocus.bind(this));\r\n\r\n      // Canvas events\r\n      this.Darkroom.canvas.on('mouse:down', this.onMouseDown.bind(this));\r\n      this.Darkroom.canvas.on('mouse:move', this.onMouseMove.bind(this));\r\n      this.Darkroom.canvas.on('mouse:up', this.onMouseUp.bind(this));\r\n      this.Darkroom.canvas.on('object:moving', this.onObjectMoving.bind(this));\r\n      this.Darkroom.canvas.on('object:scaling', this.onObjectScaling.bind(this));\r\n\r\n      fabric.util.addListener(document, 'keydown', this.onKeyDown.bind(this));\r\n      fabric.util.addListener(document, 'keyup', this.onKeyUp.bind(this));\r\n\r\n      this.Darkroom.addEventListener('core:transformation', this.releaseFocus.bind(this));\r\n    },\r\n\r\n    // Avoid crop zone to go beyond the canvas edges\r\n    onObjectMoving: function(event) {\r\n      if (!this.hasFocus()) {\r\n        return;\r\n      }\r\n\r\n      var currentObject = event.target;\r\n      if (currentObject !== this.cropZone)\r\n        return;\r\n\r\n      var canvas = this.Darkroom.canvas;\r\n      var x = currentObject.left, y = currentObject.top;\r\n      var w = currentObject.getScaledWidth(), h = currentObject.getScaledHeight();\r\n      var maxX = canvas.getWidth() - w;\r\n      var maxY = canvas.getHeight() - h;\r\n\r\n      if (x < 0)\r\n        currentObject.set('left', 0);\r\n      if (y < 0)\r\n        currentObject.set('top', 0);\r\n      if (x > maxX)\r\n        currentObject.set('left', maxX);\r\n      if (y > maxY)\r\n        currentObject.set('top', maxY);\r\n\r\n      this.Darkroom.dispatchEvent('crop:update');\r\n    },\r\n\r\n    // Prevent crop zone from going beyond the canvas edges (like mouseMove)\r\n    onObjectScaling: function(event) {\r\n      if (!this.hasFocus()) {\r\n        return;\r\n      }\r\n\r\n      var preventScaling = false;\r\n      var currentObject = event.target;\r\n      if (currentObject !== this.cropZone)\r\n        return;\r\n\r\n      var canvas = this.Darkroom.canvas;\r\n      var pointer = canvas.getPointer(event.e);\r\n      var x = pointer.x;\r\n      var y = pointer.y;\r\n\r\n      var minX = currentObject.left;\r\n      var minY = currentObject.top;\r\n      var maxX = currentObject.left + currentObject.getScaledWidth();\r\n      var maxY = currentObject.top + currentObject.getScaledHeight();\r\n\r\n      if (null !== this.options.ratio) {\r\n        if (minX < 0 || maxX > canvas.getWidth() || minY < 0 || maxY > canvas.getHeight()) {\r\n          preventScaling = true;\r\n        }\r\n      }\r\n\r\n      if (minX < 0 || maxX > canvas.getWidth() || preventScaling) {\r\n        var lastScaleX = this.lastScaleX || 1;\r\n        currentObject.setScaleX(lastScaleX);\r\n      }\r\n      if (minX < 0) {\r\n        currentObject.setLeft(0);\r\n      }\r\n\r\n      if (minY < 0 || maxY > canvas.getHeight() || preventScaling) {\r\n        var lastScaleY = this.lastScaleY || 1;\r\n        currentObject.setScaleY(lastScaleY);\r\n      }\r\n      if (minY < 0) {\r\n        currentObject.setTop(0);\r\n      }\r\n\r\n      if (currentObject.get(\"width\") < this.options.minWidth) {\r\n        currentObject.scaleToWidth(this.options.minWidth);\r\n      }\r\n      if (currentObject.get(\"height\") < this.options.minHeight) {\r\n        currentObject.scaleToHeight(this.options.minHeight);\r\n      }\r\n\r\n      this.lastScaleX = currentObject.get(\"scaleX\");\r\n      this.lastScaleY = currentObject.get(\"scaleY\");\r\n\r\n      this.Darkroom.dispatchEvent('crop:update');\r\n    },\r\n\r\n    // Init crop zone\r\n    onMouseDown: function(event) {\r\n      if (!this.hasFocus()) {\r\n        return;\r\n      }\r\n\r\n      var canvas = this.Darkroom.canvas;\r\n\r\n      // recalculate offset, in case canvas was manipulated since last `calcOffset`\r\n      canvas.calcOffset();\r\n      var pointer = canvas.getPointer(event.e);\r\n      var x = pointer.x;\r\n      var y = pointer.y;\r\n      var point = new fabric.Point(x, y);\r\n\r\n      // Check if user want to scale or drag the crop zone.\r\n      var activeObject = canvas.getActiveObject();\r\n      if (activeObject === this.cropZone || this.cropZone.containsPoint(point)) {\r\n        return;\r\n      }\r\n\r\n      canvas.discardActiveObject();\r\n      this.cropZone.set(\"width\",0);\r\n      this.cropZone.set(\"height\",0);\r\n      this.cropZone.set(\"scaleX\",1);\r\n      this.cropZone.set(\"scaleY\",1);\r\n\r\n      this.startX = x;\r\n      this.startY = y;\r\n    },\r\n\r\n    // Extend crop zone\r\n    onMouseMove: function(event) {\r\n      // Quick crop feature\r\n      if (this.isKeyCroping)\r\n        return this.onMouseMoveKeyCrop(event);\r\n\r\n      if (null === this.startX || null === this.startY) {\r\n        return;\r\n      }\r\n\r\n      var canvas = this.Darkroom.canvas;\r\n      var pointer = canvas.getPointer(event.e);\r\n      var x = pointer.x;\r\n      var y = pointer.y;\r\n\r\n      this._renderCropZone(this.startX, this.startY, x, y);\r\n    },\r\n\r\n    onMouseMoveKeyCrop: function(event) {\r\n      var canvas = this.Darkroom.canvas;\r\n      var zone = this.cropZone;\r\n\r\n      var pointer = canvas.getPointer(event.e);\r\n      var x = pointer.x;\r\n      var y = pointer.y;\r\n\r\n      if (!zone.left || !zone.top) {\r\n        zone.set(\"top\",y);\r\n        zone.set(\"left\",x);\r\n      }\r\n\r\n      this.isKeyLeft =  x < zone.left + zone.width / 2 ;\r\n      this.isKeyUp = y < zone.top + zone.height / 2 ;\r\n\r\n      this._renderCropZone(\r\n        Math.min(zone.left, x),\r\n        Math.min(zone.top, y),\r\n        Math.max(zone.left+zone.width, x),\r\n        Math.max(zone.top+zone.height, y)\r\n      );\r\n    },\r\n\r\n    // Finish crop zone\r\n    onMouseUp: function(event) {\r\n      if (null === this.startX || null === this.startY) {\r\n        return;\r\n      }\r\n\r\n      var canvas = this.Darkroom.canvas;\r\n      this.cropZone.setCoords();\r\n      canvas.setActiveObject(this.cropZone);\r\n      canvas.calcOffset();\r\n\r\n      this.startX = null;\r\n      this.startY = null;\r\n    },\r\n\r\n    onKeyDown: function(event) {\r\n      if (false === this.options.quickCropKey || event.keyCode !== this.options.quickCropKey || this.isKeyCroping)\r\n        return;\r\n\r\n      // Active quick crop flow\r\n      this.isKeyCroping = true ;\r\n      this.Darkroom.canvas.discardActiveObject();\r\n      this.cropZone.set(\"width\",0);\r\n      this.cropZone.set(\"height\",0);\r\n      this.cropZone.set(\"scaleX\",1);\r\n      this.cropZone.set(\"scaleY\",1);\r\n      this.cropZone.set(\"top\",0);\r\n      this.cropZone.set(\"left\",0);\r\n    },\r\n\r\n    onKeyUp: function(event) {\r\n      if (false === this.options.quickCropKey || event.keyCode !== this.options.quickCropKey || !this.isKeyCroping)\r\n        return;\r\n\r\n      // Unactive quick crop flow\r\n      this.isKeyCroping = false;\r\n      this.startX = 1;\r\n      this.startY = 1;\r\n      this.onMouseUp();\r\n    },\r\n\r\n    selectZone: function(x, y, width, height, forceDimension) {\r\n      if (!this.hasFocus())\r\n        this.requireFocus();\r\n\r\n      if (!forceDimension) {\r\n        this._renderCropZone(x, y, x+width, y+height);\r\n      } else {\r\n        this.cropZone.set({\r\n          'left': x,\r\n          'top': y,\r\n          'width': width,\r\n          'height': height\r\n        });\r\n      }\r\n\r\n      var canvas = this.Darkroom.canvas;\r\n      canvas.bringToFront(this.cropZone);\r\n      this.cropZone.setCoords();\r\n      canvas.setActiveObject(this.cropZone);\r\n      canvas.calcOffset();\r\n\r\n      this.Darkroom.dispatchEvent('crop:update');\r\n    },\r\n\r\n    toggleCrop: function() {\r\n      if (!this.hasFocus())\r\n        this.requireFocus();\r\n      else\r\n        this.releaseFocus();\r\n    },\r\n\r\n    cropCurrentZone: function() {\r\n      if (!this.hasFocus())\r\n        return;\r\n\r\n      // Avoid croping empty zone\r\n      if (this.cropZone.width < 1 && this.cropZone.height < 1)\r\n        return;\r\n\r\n      var image = this.Darkroom.image;\r\n\r\n      // Compute crop zone dimensions\r\n      var top = this.cropZone.get(\"top\") - image.get(\"top\");\r\n      var left = this.cropZone.get(\"left\") - image.get(\"left\");\r\n      var width = this.cropZone.get(\"width\");\r\n      var height = this.cropZone.get(\"height\");\r\n\r\n      // Adjust dimensions to image only\r\n      if (top < 0) {\r\n        height += top;\r\n        top = 0;\r\n      }\r\n\r\n      if (left < 0) {\r\n        width += left;\r\n        left = 0;\r\n      }\r\n\r\n      // Apply crop transformation.\r\n      // Make sure to use relative dimension since the crop will be applied\r\n      // on the source image.\r\n      this.Darkroom.applyTransformation(new Crop({\r\n        top: top / image.getScaledHeight(),\r\n        left: left / image.getScaledWidth(),\r\n        width: width / image.getScaledWidth(),\r\n        height: height / image.getScaledHeight(),\r\n      }));\r\n    },\r\n\r\n    // Test wether crop zone is set\r\n    hasFocus: function() {\r\n      return this.cropZone !== undefined;\r\n    },\r\n\r\n    // Create the crop zone\r\n    requireFocus: function() {\r\n      this.cropZone = new CropZone({\r\n        fill: 'transparent',\r\n        hasBorders: false,\r\n        originX: 'left',\r\n        originY: 'top',\r\n        //stroke: '#444',\r\n        //strokeDashArray: [5, 5],\r\n        //borderColor: '#444',\r\n        cornerColor: '#444',\r\n        cornerSize: 8,\r\n        transparentCorners: false,\r\n        lockRotation: true,\r\n        hasRotatingPoint: false,\r\n      });\r\n\r\n      if (null !== this.options.ratio) {\r\n        this.cropZone.set('lockUniScaling', true);\r\n      }\r\n\r\n      this.Darkroom.canvas.add(this.cropZone);\r\n      this.Darkroom.canvas.defaultCursor = 'crosshair';\r\n\r\n      this.cropButton.active(true);\r\n      this.okButton.hide(false);\r\n      this.cancelButton.hide(false);\r\n    },\r\n\r\n    // Remove the crop zone\r\n    releaseFocus: function() {\r\n      if (undefined === this.cropZone)\r\n        return;\r\n\r\n      this.cropZone.canvas.remove(this.cropZone);\r\n      this.cropZone = undefined;\r\n\r\n      this.cropButton.active(false);\r\n      this.okButton.hide(true);\r\n      this.cancelButton.hide(true);\r\n\r\n      this.Darkroom.canvas.defaultCursor = 'default';\r\n\r\n      this.Darkroom.dispatchEvent('crop:update');\r\n    },\r\n\r\n    _renderCropZone: function(fromX, fromY, toX, toY) {\r\n      var canvas = this.Darkroom.canvas;\r\n\r\n      var isRight = (toX > fromX);\r\n      var isLeft = !isRight;\r\n      var isDown = (toY > fromY);\r\n      var isUp = !isDown;\r\n\r\n      var minWidth = Math.min(+this.options.minWidth, canvas.getWidth());\r\n      var minHeight = Math.min(+this.options.minHeight, canvas.getHeight());\r\n\r\n      // Define corner coordinates\r\n      var leftX = Math.min(fromX, toX);\r\n      var rightX = Math.max(fromX, toX);\r\n      var topY = Math.min(fromY, toY);\r\n      var bottomY = Math.max(fromY, toY);\r\n\r\n      // Replace current point into the canvas\r\n      leftX = Math.max(0, leftX);\r\n      rightX = Math.min(canvas.getWidth(), rightX);\r\n      topY = Math.max(0, topY)\r\n      bottomY = Math.min(canvas.getHeight(), bottomY);\r\n\r\n      // Recalibrate coordinates according to given options\r\n      if (rightX - leftX < minWidth) {\r\n        if (isRight)\r\n          rightX = leftX + minWidth;\r\n        else\r\n          leftX = rightX - minWidth;\r\n      }\r\n      if (bottomY - topY < minHeight) {\r\n        if (isDown)\r\n          bottomY = topY + minHeight;\r\n        else\r\n          topY = bottomY - minHeight;\r\n      }\r\n\r\n      // Truncate truncate according to canvas dimensions\r\n      if (leftX < 0) {\r\n        // Translate to the left\r\n        rightX += Math.abs(leftX);\r\n        leftX = 0\r\n      }\r\n      if (rightX > canvas.getWidth()) {\r\n        // Translate to the right\r\n        leftX -= (rightX - canvas.getWidth());\r\n        rightX = canvas.getWidth();\r\n      }\r\n      if (topY < 0) {\r\n        // Translate to the bottom\r\n        bottomY += Math.abs(topY);\r\n        topY = 0\r\n      }\r\n      if (bottomY > canvas.getHeight()) {\r\n        // Translate to the right\r\n        topY -= (bottomY - canvas.getHeight());\r\n        bottomY = canvas.getHeight();\r\n      }\r\n\r\n      var width = rightX - leftX;\r\n      var height = bottomY - topY;\r\n      var currentRatio = width / height;\r\n\r\n      if (this.options.ratio && +this.options.ratio !== currentRatio) {\r\n        var ratio = +this.options.ratio;\r\n\r\n        if(this.isKeyCroping) {\r\n          isLeft = this.isKeyLeft;\r\n          isUp = this.isKeyUp;\r\n        }\r\n\r\n        if (currentRatio < ratio) {\r\n          var newWidth = height * ratio;\r\n          if (isLeft) {\r\n            leftX -= (newWidth - width);\r\n          }\r\n          width = newWidth;\r\n        } else if (currentRatio > ratio) {\r\n          var newHeight = height / (ratio * height/width);\r\n          if (isUp) {\r\n            topY -= (newHeight - height);\r\n          }\r\n          height = newHeight;\r\n        }\r\n\r\n        if (leftX < 0) {\r\n          leftX = 0;\r\n          //TODO\r\n        }\r\n        if (topY < 0) {\r\n          topY = 0;\r\n          //TODO\r\n        }\r\n        if (leftX + width > canvas.getWidth()) {\r\n          var newWidth = canvas.getWidth() - leftX;\r\n          height = newWidth * height / width;\r\n          width = newWidth;\r\n          if (isUp) {\r\n            topY = fromY - height;\r\n          }\r\n        }\r\n        if (topY + height > canvas.getHeight()) {\r\n          var newHeight = canvas.getHeight() - topY;\r\n          width = width * newHeight / height;\r\n          height = newHeight;\r\n          if (isLeft) {\r\n            leftX = fromX - width;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Apply coordinates\r\n      this.cropZone.left = leftX;\r\n      this.cropZone.top = topY;\r\n      this.cropZone.width = width;\r\n      this.cropZone.height = height;\r\n\r\n      this.Darkroom.canvas.bringToFront(this.cropZone);\r\n\r\n      this.Darkroom.dispatchEvent('crop:update');\r\n    }\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"crop\",\r\n    ctor : CropPlugin\r\n  };\r\n\r\n  Darkroom.installPlugin(pluginInfo);\r\n\r\n  return pluginInfo;\r\n\r\n});\r\n\ndefine('skylark-darkroomjs/plugins/rotate',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-fabric\",\r\n  '../Darkroom',\r\n],function(langx,noder, $, fabric,Darkroom) {\r\n  'use strict';\r\n\r\nvar Rotation = Darkroom.Transformation.inherit({\r\n\r\n  applyTransformation: function(canvas, image, next) {\r\n    var angle = (image.angle + this.options.angle) % 360;\r\n    image.rotate(angle);\r\n\r\n    var width, height;\r\n    height = Math.abs(image.getScaledWidth()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getScaledHeight()*(Math.cos(angle*Math.PI/180)));\r\n    width = Math.abs(image.getScaledHeight()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getScaledWidth()*(Math.cos(angle*Math.PI/180)));\r\n\r\n    canvas.setWidth(width);\r\n    canvas.setHeight(height);\r\n\r\n    canvas.centerObject(image);\r\n    image.setCoords();\r\n    canvas.renderAll();\r\n\r\n    next();\r\n  }\r\n});\r\n\r\n\r\n  var RotatePlugin = Darkroom.Plugin.inherit({\r\n    init: function(Darkroom,options) {\r\n      this.overrided(Darkroom,options);\r\n      var buttonGroup = this.Darkroom.toolbar.createButtonGroup();\r\n\r\n      var leftButton = buttonGroup.createButton({\r\n        image: 'rotate-left'\r\n      });\r\n\r\n      var rightButton = buttonGroup.createButton({\r\n        image: 'rotate-right'\r\n      });\r\n\r\n      leftButton.addEventListener('click', this.rotateLeft.bind(this));\r\n      rightButton.addEventListener('click', this.rotateRight.bind(this));\r\n    },\r\n\r\n    rotateLeft: function() {\r\n      this.rotate(-90);\r\n    },\r\n\r\n    rotateRight: function() {\r\n      this.rotate(90);\r\n    },\r\n\r\n    rotate: function rotate(angle) {\r\n      this.Darkroom.applyTransformation(\r\n        new Rotation({angle: angle})\r\n      );\r\n    }\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"rotate\",\r\n    ctor : RotatePlugin\r\n  };\r\n\r\n  Darkroom.installPlugin(pluginInfo);\r\n\r\n  return pluginInfo;\r\n\r\n});\r\n\ndefine('skylark-darkroomjs/plugins/save',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-fabric\",\r\n  '../Darkroom',\r\n],function(langx,noder, $, fabric,Darkroom) {\r\n  'use strict';\r\n\r\n  var SavePlugin= Darkroom.Plugin.inherit({\r\n\r\n    defaults: {\r\n      callback: function() {\r\n        this.Darkroom.selfDestroy();\r\n      }\r\n    },\r\n\r\n    init: function(Darkroom,options) {\r\n      this.overrided(Darkroom,options);\r\n\r\n      var buttonGroup = this.Darkroom.toolbar.createButtonGroup();\r\n\r\n      this.destroyButton = buttonGroup.createButton({\r\n        image: 'save'\r\n      });\r\n\r\n      this.destroyButton.addEventListener('click', this.options.callback.bind(this));\r\n    },\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"save\",\r\n    ctor : SavePlugin\r\n  };\r\n\r\n  Darkroom.installPlugin(pluginInfo);\r\n\r\n  return pluginInfo;  \r\n\r\n});\r\n\ndefine('skylark-darkroomjs/main',[\r\n    \"./Darkroom\",\r\n    \"./plugins/history\",\r\n    \"./plugins/crop\",\r\n    \"./plugins/rotate\",\r\n    \"./plugins/save\"\r\n], function(Darkroom) {\r\n    return Darkroom;\r\n})\r\n;\ndefine('skylark-darkroomjs', ['skylark-darkroomjs/main'], function (main) { return main; });\n\n"]}