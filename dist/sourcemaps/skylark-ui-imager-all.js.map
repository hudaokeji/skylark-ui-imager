{"version":3,"sources":["skylark-ui-imager-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","maybeAddPx","cssNumber","classRE","classReCache","RegExp","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","style","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","dom","isIE","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","cssPropName","support","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","$","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","space","tab","up","special","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","el","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","dragHandle","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","e1","over","dropped","manager","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","dropzone","droppedCallback","enterdCount","types","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","createObjectURL","_delegator","domNode","HTMLElement","VisualElement","batch","action","widgets","defineWidgetClass","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","canvas2d","resizeCanvasIfNeeded","pipelineState","targetCanvas","dWidth","destinationWidth","dHeight","destinationHeight","copyGLTo2DDrawImage","gl","glCanvas","canvas","getContext","translate","sourceY","drawImage","copyGLTo2DPutImageData","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","fabric","version","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","DOMParser","isTouchSupported","isLikelyNode","Buffer","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","initFilterBackend","isWebglSupported","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","__eventListeners","eventListener","fill","observe","stopObserving","fire","listenersForEvent","Observable","Collection","_objects","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","nonSplicing","objects","somethingRemoved","_onObjectRemoved","forEachObject","getObjects","isEmpty","complexity","reduce","memo","CommonMethods","_setOptions","_initGradient","filler","colorStops","Gradient","_initPattern","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","_setObject","_set","sqrt","atan2","pow","abs","PiBy180","PI","PiBy2","cos","angle","angleSlice","sin","sign","removeFromArray","getRandomInt","min","floor","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","subtractEquals","rotateVector","Point","addEquals","vector","rx","ry","transformPoint","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","yPoints","minY","maxY","invertTransform","r","toFixed","number","fractionDigits","parseUnit","fontSize","unit","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","camelize","resolveNamespace","getSvgAttributes","loadImage","crossOrigin","img","createImage","onLoadCallback","substring","loadImageInDom","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","fromObject","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","groupSVGElements","centerPoint","Group","sourcePath","populateWithProperties","destination","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","saveObjectTransform","isTransparent","tolerance","temp","_isTransparent","imageData","getImageData","parsePreserveAspectRatioAttribute","meetOrSlice","alignX","alignY","aspectRatioAttrs","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","arcToSegments","toX","toY","large","sweep","rotateX","argsString","_join","sinTh","cosTh","fromX","fromY","py","rx2","ry2","py2","px2","pl","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","c","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","drawArc","fy","tx","ty","segsNorm","bezierCurveTo","getBoundsOfArc","bound","invoke","byProperty","value1","value2","k","condition","extend","Element","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","getWholeChar","isNaN","Subclass","callSuper","parentMethod","_this","superClassMethod","initialize","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","areHostMethods","methodNames","createListener","wrappedHandler","createWrappedHandler","getElement","createDispatcher","handlersForEvent","getPointer","srcElement","unknown","getScrollLeftTop","pointerX","pointerY","_getPointer","pageProp","clientProp","pointer","touchProp","eventTouchProp","getUniqueId","__uniqueID","addListener","removeListener","shouldUseAddListenerRemoveListener","shouldUseAttachEventDetachEvent","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","styles","elementStyle","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","getById","makeElement","htmlFor","wrapElement","docElement","host","getElementOffset","docElem","scrollLeftTop","box","offsetAttributes","getElementStyle","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","sliceCanConvertNodelists","_slice","arrayLike","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","addParamToUrl","emptyFn","onComplete","makeXHR","parameters","factories","ActiveXObject","req","requestAnimFrame","onChange","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","_requestAnimFrame","cancelAnimFrame","_cancelAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","calculateColor","begin","color","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","posValue","colorEasing","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","transformMatrix","parseTransformAttribute","fillIndex","strokeIndex","getSvgRegex","_setStrokeFillOpacity","colorAttributes","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeList","nodeArray","parseStyleString","oStyle","chunk","pair","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","classNames","elementById","nodelist","parseUseDirectives","xlink","substr","el2","currentTrans","oldLength","applyViewboxTransform","el3","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","svgViewBoxElementsRegEx","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","translateMatrix","widthDiff","heightDiff","hasAncestorWithNodeName","svgValidTagNames","svgViewBoxElements","svgInvalidAncestors","svgValidParents","fill-opacity","fill-rule","font-family","font-size","font-style","letter-spacing","paint-order","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","svgValidTagNamesRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","gradientDefs","rotateMatrix","multiplierX","multiplierY","skewMatrix","commaWsp","transformList","reTransformList","reTransform","matrices","operation","combinedMatrix","parseSVGDocument","parsingOptions","__uid","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","tagArray","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","ElementsParser","parsePointsAttribute","parsedPoints","rules","allRules","styleContents","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","loadXML","_options","allElements","loadSVGFromString","parseFromString","regexUrl","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","Image","_removeTransformMatrix","instanceFillValue","gradientId","lastIndex","createAccessors","propName","capitalizedPropName","setterName","getterName","stateProperties","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divideEquals","lte","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","pathOffset","minRadius","maxRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","naturalWidth","naturalHeight","createPattern","Shadow","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","BLUR_BOX","StaticCanvas","CANVAS_INIT_ERROR","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","canvasEl","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","ignoreVpt","skipAbsolute","group","setCoords","calcViewportBoundaries","zoomToPoint","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","_renderOverlay","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","_char","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","needsFullRender","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","STROKE_OFFSET","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","ignoreZoom","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","shouldCache","_cacheCanvas","normalizedPointer","targetRelativeX","cacheTranslationX","zoomX","targetRelativeY","cacheTranslationY","zoomY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","selectionKeyPressed","_shouldClearSelection","selectable","centerTransform","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","isEditing","subTarget","subTargetCheck","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","lowerCanvasClass","_copyCanvasStyle","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","removed","opt","oldObject","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","layoutProps","originalValues","realizeTransform","clearContextTop","_setCursorFromEvent","checkClick","which","cursorOffset","mr","ml","RIGHT_CLICK","MIDDLE_CLICK","LEFT_CLICK","addEventOptions","passive","cursorMap","_bindEvents","addOrRemove","functor","eventjsFunctor","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","eventsBound","_simpleEventHandler","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","__onOrientationChange","__onShake","__onLongPress","_fireEnterLeaveEvents","_cacheTransformEventData","_handleEvent","_resetTransformEventData","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","shouldRender","_maybeGroupObjects","__corner","eventType","subTargets","absolutePointer","_scaling","actionPerformed","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","saveState","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","outFires","inFires","oldTarget","targetChanged","previousTarget","nextTarget","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","supportQuality","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","originalSkipOffScreen","needsResize","__toDataURL","loadFromDatalessJSON","loadFromJSON","serialized","_enlivenObjects","_setBgOverlay","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","ALIASING_LIMIT","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","cacheProperties","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","setTransform","_transformDone","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","ownCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","skipCanvas","_removeShadow","decl","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","objectForm","_fromObject","cloneAsImage","dataUrl","origParams","withoutTransform","getBoundingRect","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","extraParam","originXOffset","originYOffset","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","getCoords","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","calculate","calcCoords","pointTL","pointBR","intersection","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","w","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","_setCornerCoords","transformMatrixKey","sep","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","term","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgId","getSvgTransform","translatePart","anglePart","scalePart","skewXPart","skewYPart","flipXPart","flipYPart","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","addPaintOrder","saveProps","tmpObj","_isEqual","origValue","currentValue","firstPass","originalSet","dashedPropertySet","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","valueProgress","timeProgress","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","nearest","farthest","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","_callback","isValidRadius","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","subpathStartX","subpathStartY","controlX","controlY","chunks","addTransform","currentPath","coordsStr","coordsParsed","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","objsToObject","originalDefaults","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","removeTexture","_originalElement","_initConfig","resizeFilter","applyResizeFilters","applyFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","clipPath","clipPathId","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","sW","sH","elementToDraw","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","putImageDataTime","testContext","copyGLTo2D","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","originalWidth","originalHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","applyFiltersDebug","glError","getError","NO_ERROR","errorString","glErrorToString","glErrorCode","errorCode","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","gpuInfo","ext","getExtension","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalImageData","originalEl","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","main","mainParameter","_class","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","mult","doneW","doneH","stepW","stepH","sX","sY","dX","dY","u","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","nSamples","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThird","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","originalFill","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","fontDeclaration","previousFontDeclaration","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","char","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","numOfSpaces","lineBounds","_getGraphemeBox","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","stylePropertyHasBeenSet","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","lineOffset","realLineHeight","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","graphemeEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","removeChars","insertChars","multipleSpacesRegex","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","noShadow","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","svgStyle","Textbox","minWidth","dynamicMinWidth","__cachedLines","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","nextLineIndex","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","setObjectScaleOverridden","tw","UI","computeImageViewPort","getAngle","Toolbar","ButtonGroup","Button","ui","Plugins","createButtonGroup","buttonGroup","createButton","buttonElement","disable","Imager","plugins","_initializeDOM","containerElement","_initializeImage","_initializePlugins","refresh","sourceCanvas","sourceImage","originalImageElement","transformations","minHeight","ratio","selfDestroy","initEvent","_replaceCurrentImage","newImage","canvasRatio","currentRatio","scaleMin","scaleMax","setScaleX","setScaleY","applyTransformation","transformation","_postTransformation","reinitializeImage","_popTransformation","imageElement","mainContainerElement","toolbarElement","canvasContainerElement","canvasElement","sourceCanvasContainerElement","sourceCanvasElement","toolbar","pluginInfo","Plugin","imager","Transformation","installPlugin","HistoryPlugin","undoTransformations","_initButtons","_onTranformationApplied","undo","lastTransformation","_updateButtons","redo","cancelTransformation","backButton","forwardButton","getMatrix","radian","Cos","Sin","M11","M12","M21","M22","css3Transform","transformData","_createApiMethod","calcFunc","calcs","vertical","degress","hZoom","vZoom","zoomin","zoomout","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","isLoaded","progressedCount","progressed","isCompleted","addBackgroundImage","elm1","reURL","childImgs","preload","urls","images","viewer","loadedCallback","_init","border","_load","_dispose","imagesLoaded","imagesViewer","Crop","snapshot","imageWidth","imageHeight","imgInstance","CropZone","dashWidth","mozDash","_renderBorders","_renderGrid","lineDashOffset","getLeft","getTop","CropPlugin","isKeyCroping","isKeyLeft","isKeyUp","quickCropKey","cropButton","okButton","cancelButton","toggleCrop","cropCurrentZone","releaseFocus","onObjectMoving","onObjectScaling","hasFocus","cropZone","preventScaling","lastScaleX","setLeft","lastScaleY","setTop","getScaleX","getScaleY","onMouseMoveKeyCrop","_renderCropZone","zone","selectZone","forceDimension","requireFocus","isLeft","isDown","isUp","leftX","rightX","topY","bottomY","newWidth","newHeight","Rotation","RotatePlugin","leftButton","rightButton","rotateLeft","rotateRight","SavePlugin","destroyButton"],"mappings":"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SAAAuI,GACA5F,EAAA4F,GAAA8mC,EAAAjqC,EAAAmD,GAAAnD,KAGAoqC,EAAAnhC,QAAA1L,MAKA+kB,EAAApZ,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAsiB,GAGAlJ,EAAApZ,UACA,YACA,aACAg4B,GAIA5e,EAAApZ,UACA,MACA,KACA,MACA,YACA,WACA2qB,GAGAvR,EAAApZ,UACA,SACA,YACA6/B,GAGAzmB,EAAApZ,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA8gB,GAEA1H,EAAAiB,KAAA,SAAAjX,GACA,MAAA,SAAAA,EACAjQ,KAAAsmB,KAEAtmB,KAAAsmB,KAAAU,WAAA/W,IAKAgW,EAAApZ,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAqxB,GAIAjY,EAAApZ,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA+nB,GAGA3O,EAAApZ,UACA,YACA,aACAg4B,GAIA5e,EAAApZ,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAiX,GAGAmC,EAAApZ,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAiR,GAEAnf,EAAAsnB,KAAAA,IAGAxoB,OAAA,yBACA,YACA,UACA,UACA,UACA,WACA,SACA,YACA,UACA,UACA,SAAAkB,EAAAsL,EAAA6Z,EAAAqL,EAAArR,EAAA8W,EAAA4C,EAAA9jB,EAAAuS,GAgFA,QAAAioB,KACA,MAAAA,GAuKA,QAAAC,GAAArnC,EAAA9J,EAAAiI,IAtPA,GAAAmpC,GAAA,iBAkFAC,GAjFAtsC,MAAAkD,UAAAoC,MAiFA4C,EAAA6F,QAAAhL,SACA2H,KAAA,SAAA1B,EAAAg3B,GAEA,GAAA93B,EAAA5E,WAAA0F,GAAA,CACA,GACAA,GAAAg3B,CACA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","file":"../skylark-ui-imager-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        marginSize : marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector);\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.dragSource,\r\n             dragHandle : draggable.dragHandle\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.dragSource);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          dragHandle : draggable.dragHandle,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n        \r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        var e1 = eventer.create(\"dndStarted\",{\r\n          elm : e.elm,\r\n          dragSource : e.dragSource,\r\n          dragHandle : e.dragHandle,\r\n          ghost : e.ghost,\r\n          transfer : e.transfer\r\n        });\r\n\r\n        this.trigger(e1);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"dndEnded\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self.params = langx.clone(params);\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            var params = self.params;\r\n            if (params.handle) {\r\n              self.dragHandle = finder.closest(e.target,params.handle);\r\n              if (!self.dragHandle) {\r\n                return;\r\n              }\r\n            }\r\n            if (params.source) {\r\n                self.dragSource = finder.closest(e.target,params.source);\r\n            } else {\r\n                self.dragSource = self.elm;\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.attr(self.dragSource, \"draggable\", 'true');\r\n            } \r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              //datax.attr(self.dragSource, \"draggable\", 'false');\r\n              self.dragSource = null;\r\n              self.dragHandle = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.attr(self.dragSource, \"draggable\", 'false');\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"dndStarted\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"dndEnded\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(options,el) {\r\n\t    \t//for supporting init(el,options)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils-canvas2d/canvas2d',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n\treturn skylark.canvas2d = skylark.canvas2d || {};\r\n});\ndefine('skylark-utils-canvas2d/primitives/fabric',[], function() { \r\n  var fabric = fabric || { version: '2.3.6' };\r\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\r\n    fabric.document = document;\r\n    fabric.window = window;\r\n  }\r\n  else {\r\n    // assume we're running under node.js when document/window are not present\r\n    fabric.document = require('jsdom')\r\n      .jsdom(\r\n        decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\r\n        { features: {\r\n          FetchExternalResources: ['img']\r\n        }\r\n        });\r\n    fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\r\n    fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\r\n    fabric.window = fabric.document.defaultView;\r\n    DOMParser = require('xmldom').DOMParser;\r\n  }\r\n\r\n  /**\r\n   * True when in environment that supports touch events\r\n   * @type boolean\r\n   */\r\n  fabric.isTouchSupported = 'ontouchstart' in fabric.window;\r\n\r\n  /**\r\n   * True when in environment that's probably Node.js\r\n   * @type boolean\r\n   */\r\n  fabric.isLikelyNode = typeof Buffer !== 'undefined' &&\r\n                        typeof window === 'undefined';\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * Attributes parsed from all SVG elements\r\n   * @type array\r\n   */\r\n  fabric.SHARED_ATTRIBUTES = [\r\n    \"display\",\r\n    \"transform\",\r\n    \"fill\", \"fill-opacity\", \"fill-rule\",\r\n    \"opacity\",\r\n    \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\r\n    \"stroke-linejoin\", \"stroke-miterlimit\",\r\n    \"stroke-opacity\", \"stroke-width\",\r\n    \"id\", \"paint-order\",\r\n    \"instantiated_by_use\"\r\n  ];\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\r\n   */\r\n  fabric.DPI = 96;\r\n  fabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\r\n  fabric.fontPaths = { };\r\n  fabric.iMatrix = [1, 0, 0, 1, 0, 0];\r\n  fabric.canvasModule = 'canvas';\r\n\r\n  /**\r\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.perfLimitSizeTotal = 2097152;\r\n\r\n  /**\r\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.maxCacheSideLimit = 4096;\r\n\r\n  /**\r\n   * Lowest pixel limit for cache canvases, set at 256PX\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.minCacheSideLimit = 256;\r\n\r\n  /**\r\n   * Cache Object for widths of chars in text rendering.\r\n   */\r\n  fabric.charWidthsCache = { };\r\n\r\n  /**\r\n   * if webgl is enabled and available, textureSize will determine the size\r\n   * of the canvas backend\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default\r\n   */\r\n  fabric.textureSize = 2048;\r\n\r\n  /**\r\n   * Enable webgl for filtering picture is available\r\n   * A filtering backend will be initialized, this will both take memory and\r\n   * time since a default 2048x2048 canvas will be created for the gl context\r\n   * @since 2.0.0\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  fabric.enableGLFiltering = true;\r\n\r\n  /**\r\n   * Device Pixel Ratio\r\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\r\n   */\r\n  fabric.devicePixelRatio = fabric.window.devicePixelRatio ||\r\n                            fabric.window.webkitDevicePixelRatio ||\r\n                            fabric.window.mozDevicePixelRatio ||\r\n                            1;\r\n  /**\r\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\r\n   * which is unitless and not rendered equally across browsers.\r\n   *\r\n   * Values that work quite well (as of October 2017) are:\r\n   * - Chrome: 1.5\r\n   * - Edge: 1.75\r\n   * - Firefox: 0.9\r\n   * - Safari: 0.95\r\n   *\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default 1\r\n   */\r\n  fabric.browserShadowBlurConstant = 1;\r\n\r\n  /**\r\n   * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\r\n   * It was an internal variable, is accessible since version 2.3.4\r\n   */\r\n  fabric.arcToSegmentsCache = { };\r\n\r\n  /**\r\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\r\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\r\n   * you do not get any speed benefit and you get a big object in memory.\r\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\r\n   * can eventually clear it.\r\n   * It was an internal variable, is accessible since version 2.3.4\r\n   */\r\n  fabric.boundsOfCurveCache = { };\r\n\r\n  /**\r\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\r\n   * @default true\r\n   */\r\n  fabric.cachesBoundsOfCurve = true;\r\n\r\n  fabric.initFilterBackend = function() {\r\n    if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\r\n      console.log('max texture size: ' + fabric.maxTextureSize);\r\n      return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\r\n    }\r\n    else if (fabric.Canvas2dFilterBackend) {\r\n      return (new fabric.Canvas2dFilterBackend());\r\n    }\r\n  };\r\n\r\n\r\n  //if (typeof document !== 'undefined' && typeof window !== 'undefined') {\r\n  //  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\r\n  //  window.fabric = fabric;\r\n  //}\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} eventName\r\n     * @param {Function} handler\r\n     */\r\n    function _removeEventListener(eventName, handler) {\r\n      if (!this.__eventListeners[eventName]) {\r\n        return;\r\n      }\r\n      var eventListener = this.__eventListeners[eventName];\r\n      if (handler) {\r\n        eventListener[eventListener.indexOf(handler)] = false;\r\n      }\r\n      else {\r\n        fabric.util.array.fill(eventListener, false);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Observes specified event\r\n     * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\r\n     * @memberOf fabric.Observable\r\n     * @alias on\r\n     * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n     * @param {Function} handler Function that receives a notification when an event of the specified type occurs\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    function observe(eventName, handler) {\r\n      if (!this.__eventListeners) {\r\n        this.__eventListeners = { };\r\n      }\r\n      // one object with key/value pairs was passed\r\n      if (arguments.length === 1) {\r\n        for (var prop in eventName) {\r\n          this.on(prop, eventName[prop]);\r\n        }\r\n      }\r\n      else {\r\n        if (!this.__eventListeners[eventName]) {\r\n          this.__eventListeners[eventName] = [];\r\n        }\r\n        this.__eventListeners[eventName].push(handler);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Stops event observing for a particular event handler. Calling this method\r\n     * without arguments removes all handlers for all events\r\n     * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\r\n     * @memberOf fabric.Observable\r\n     * @alias off\r\n     * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n     * @param {Function} handler Function to be deleted from EventListeners\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    function stopObserving(eventName, handler) {\r\n      if (!this.__eventListeners) {\r\n        return;\r\n      }\r\n\r\n      // remove all key/value pairs (event name -> event handler)\r\n      if (arguments.length === 0) {\r\n        for (eventName in this.__eventListeners) {\r\n          _removeEventListener.call(this, eventName);\r\n        }\r\n      }\r\n      // one object with key/value pairs was passed\r\n      else if (arguments.length === 1 && typeof arguments[0] === 'object') {\r\n        for (var prop in eventName) {\r\n          _removeEventListener.call(this, prop, eventName[prop]);\r\n        }\r\n      }\r\n      else {\r\n        _removeEventListener.call(this, eventName, handler);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Fires event with an optional options object\r\n     * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\r\n     * @memberOf fabric.Observable\r\n     * @alias trigger\r\n     * @param {String} eventName Event name to fire\r\n     * @param {Object} [options] Options object\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    function fire(eventName, options) {\r\n      if (!this.__eventListeners) {\r\n        return;\r\n      }\r\n\r\n      var listenersForEvent = this.__eventListeners[eventName];\r\n      if (!listenersForEvent) {\r\n        return;\r\n      }\r\n\r\n      for (var i = 0, len = listenersForEvent.length; i < len; i++) {\r\n        listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\r\n      }\r\n      this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\r\n        return value !== false;\r\n      });\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @namespace fabric.Observable\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\r\n     * @see {@link http://fabricjs.com/events|Events demo}\r\n     */\r\n    fabric.Observable = {\r\n      observe: observe,\r\n      stopObserving: stopObserving,\r\n      fire: fire,\r\n\r\n      on: observe,\r\n      off: stopObserving,\r\n      trigger: fire\r\n    };\r\n  })();\r\n\r\n\r\n  /**\r\n   * @namespace fabric.Collection\r\n   */\r\n  fabric.Collection = {\r\n\r\n    _objects: [],\r\n\r\n    /**\r\n     * Adds objects to collection, Canvas or Group, then renders canvas\r\n     * (if `renderOnAddRemove` is not `false`).\r\n     * in case of Group no changes to bounding box are made.\r\n     * Objects should be instances of (or inherit from) fabric.Object\r\n     * Use of this function is highly discouraged for groups.\r\n     * you can add a bunch of objects with the add method but then you NEED\r\n     * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\r\n     * @param {...fabric.Object} object Zero or more fabric instances\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    add: function () {\r\n      this._objects.push.apply(this._objects, arguments);\r\n      if (this._onObjectAdded) {\r\n        for (var i = 0, length = arguments.length; i < length; i++) {\r\n          this._onObjectAdded(arguments[i]);\r\n        }\r\n      }\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\r\n     * An object should be an instance of (or inherit from) fabric.Object\r\n     * Use of this function is highly discouraged for groups.\r\n     * you can add a bunch of objects with the insertAt method but then you NEED\r\n     * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\r\n     * @param {Object} object Object to insert\r\n     * @param {Number} index Index to insert object at\r\n     * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    insertAt: function (object, index, nonSplicing) {\r\n      var objects = this._objects;\r\n      if (nonSplicing) {\r\n        objects[index] = object;\r\n      }\r\n      else {\r\n        objects.splice(index, 0, object);\r\n      }\r\n      this._onObjectAdded && this._onObjectAdded(object);\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\r\n     * @param {...fabric.Object} object Zero or more fabric instances\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    remove: function() {\r\n      var objects = this._objects,\r\n          index, somethingRemoved = false;\r\n\r\n      for (var i = 0, length = arguments.length; i < length; i++) {\r\n        index = objects.indexOf(arguments[i]);\r\n\r\n        // only call onObjectRemoved if an object was actually removed\r\n        if (index !== -1) {\r\n          somethingRemoved = true;\r\n          objects.splice(index, 1);\r\n          this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\r\n        }\r\n      }\r\n\r\n      this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Executes given function for each object in this group\r\n     * @param {Function} callback\r\n     *                   Callback invoked with current object as first argument,\r\n     *                   index - as second and an array of all objects - as third.\r\n     *                   Callback is invoked in a context of Global Object (e.g. `window`)\r\n     *                   when no `context` argument is given\r\n     *\r\n     * @param {Object} context Context (aka thisObject)\r\n     * @return {Self} thisArg\r\n     * @chainable\r\n     */\r\n    forEachObject: function(callback, context) {\r\n      var objects = this.getObjects();\r\n      for (var i = 0, len = objects.length; i < len; i++) {\r\n        callback.call(context, objects[i], i, objects);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns an array of children objects of this instance\r\n     * Type parameter introduced in 1.3.10\r\n     * since 2.3.5 this method return always a COPY of the array;\r\n     * @param {String} [type] When specified, only objects of this type are returned\r\n     * @return {Array}\r\n     */\r\n    getObjects: function(type) {\r\n      if (typeof type === 'undefined') {\r\n        return this._objects.concat();\r\n      }\r\n      return this._objects.filter(function(o) {\r\n        return o.type === type;\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Returns object at specified index\r\n     * @param {Number} index\r\n     * @return {Self} thisArg\r\n     */\r\n    item: function (index) {\r\n      return this._objects[index];\r\n    },\r\n\r\n    /**\r\n     * Returns true if collection contains no objects\r\n     * @return {Boolean} true if collection is empty\r\n     */\r\n    isEmpty: function () {\r\n      return this._objects.length === 0;\r\n    },\r\n\r\n    /**\r\n     * Returns a size of a collection (i.e: length of an array containing its objects)\r\n     * @return {Number} Collection size\r\n     */\r\n    size: function() {\r\n      return this._objects.length;\r\n    },\r\n\r\n    /**\r\n     * Returns true if collection contains an object\r\n     * @param {Object} object Object to check against\r\n     * @return {Boolean} `true` if collection contains an object\r\n     */\r\n    contains: function(object) {\r\n      return this._objects.indexOf(object) > -1;\r\n    },\r\n\r\n    /**\r\n     * Returns number representation of a collection complexity\r\n     * @return {Number} complexity\r\n     */\r\n    complexity: function () {\r\n      return this._objects.reduce(function (memo, current) {\r\n        memo += current.complexity ? current.complexity() : 0;\r\n        return memo;\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @namespace fabric.CommonMethods\r\n   */\r\n  fabric.CommonMethods = {\r\n\r\n    /**\r\n     * Sets object's properties from options\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _setOptions: function(options) {\r\n      for (var prop in options) {\r\n        this.set(prop, options[prop]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [filler] Options object\r\n     * @param {String} [property] property to set the Gradient to\r\n     */\r\n    _initGradient: function(filler, property) {\r\n      if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\r\n        this.set(property, new fabric.Gradient(filler));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [filler] Options object\r\n     * @param {String} [property] property to set the Pattern to\r\n     * @param {Function} [callback] callback to invoke after pattern load\r\n     */\r\n    _initPattern: function(filler, property, callback) {\r\n      if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\r\n        this.set(property, new fabric.Pattern(filler, callback));\r\n      }\r\n      else {\r\n        callback && callback();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _initClipping: function(options) {\r\n      if (!options.clipTo || typeof options.clipTo !== 'string') {\r\n        return;\r\n      }\r\n\r\n      var functionBody = fabric.util.getFunctionBody(options.clipTo);\r\n      if (typeof functionBody !== 'undefined') {\r\n        this.clipTo = new Function('ctx', functionBody);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setObject: function(obj) {\r\n      for (var prop in obj) {\r\n        this._set(prop, obj[prop]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\r\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\r\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    set: function(key, value) {\r\n      if (typeof key === 'object') {\r\n        this._setObject(key);\r\n      }\r\n      else {\r\n        if (typeof value === 'function' && key !== 'clipTo') {\r\n          this._set(key, value(this.get(key)));\r\n        }\r\n        else {\r\n          this._set(key, value);\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n\r\n    _set: function(key, value) {\r\n      this[key] = value;\r\n    },\r\n\r\n    /**\r\n     * Toggles specified property from `true` to `false` or from `false` to `true`\r\n     * @param {String} property Property to toggle\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    toggle: function(property) {\r\n      var value = this.get(property);\r\n      if (typeof value === 'boolean') {\r\n        this.set(property, !value);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Basic getter\r\n     * @param {String} property Property name\r\n     * @return {*} value of a property\r\n     */\r\n    get: function(property) {\r\n      return this[property];\r\n    }\r\n  };\r\n\r\n\r\n  (function(global) {\r\n\r\n    var sqrt = Math.sqrt,\r\n        atan2 = Math.atan2,\r\n        pow = Math.pow,\r\n        abs = Math.abs,\r\n        PiBy180 = Math.PI / 180,\r\n        PiBy2 = Math.PI / 2;\r\n\r\n    /**\r\n     * @namespace fabric.util\r\n     */\r\n    fabric.util = {\r\n\r\n      /**\r\n       * Calculate the cos of an angle, avoiding returning floats for known results\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} angle the angle in radians or in degree\r\n       * @return {Number}\r\n       */\r\n      cos: function(angle) {\r\n        if (angle === 0) { return 1; }\r\n        if (angle < 0) {\r\n          // cos(a) = cos(-a)\r\n          angle = -angle;\r\n        }\r\n        var angleSlice = angle / PiBy2;\r\n        switch (angleSlice) {\r\n          case 1: case 3: return 0;\r\n          case 2: return -1;\r\n        }\r\n        return Math.cos(angle);\r\n      },\r\n\r\n      /**\r\n       * Calculate the sin of an angle, avoiding returning floats for known results\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} angle the angle in radians or in degree\r\n       * @return {Number}\r\n       */\r\n      sin: function(angle) {\r\n        if (angle === 0) { return 0; }\r\n        var angleSlice = angle / PiBy2, sign = 1;\r\n        if (angle < 0) {\r\n          // sin(-a) = -sin(a)\r\n          sign = -1;\r\n        }\r\n        switch (angleSlice) {\r\n          case 1: return sign;\r\n          case 2: return 0;\r\n          case 3: return -sign;\r\n        }\r\n        return Math.sin(angle);\r\n      },\r\n\r\n      /**\r\n       * Removes value from an array.\r\n       * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} array\r\n       * @param {*} value\r\n       * @return {Array} original array\r\n       */\r\n      removeFromArray: function(array, value) {\r\n        var idx = array.indexOf(value);\r\n        if (idx !== -1) {\r\n          array.splice(idx, 1);\r\n        }\r\n        return array;\r\n      },\r\n\r\n      /**\r\n       * Returns random number between 2 specified ones.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} min lower limit\r\n       * @param {Number} max upper limit\r\n       * @return {Number} random value (between min and max)\r\n       */\r\n      getRandomInt: function(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n      },\r\n\r\n      /**\r\n       * Transforms degrees to radians.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} degrees value in degrees\r\n       * @return {Number} value in radians\r\n       */\r\n      degreesToRadians: function(degrees) {\r\n        return degrees * PiBy180;\r\n      },\r\n\r\n      /**\r\n       * Transforms radians to degrees.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number} radians value in radians\r\n       * @return {Number} value in degrees\r\n       */\r\n      radiansToDegrees: function(radians) {\r\n        return radians / PiBy180;\r\n      },\r\n\r\n      /**\r\n       * Rotates `point` around `origin` with `radians`\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {fabric.Point} point The point to rotate\r\n       * @param {fabric.Point} origin The origin of the rotation\r\n       * @param {Number} radians The radians of the angle for the rotation\r\n       * @return {fabric.Point} The new rotated point\r\n       */\r\n      rotatePoint: function(point, origin, radians) {\r\n        point.subtractEquals(origin);\r\n        var v = fabric.util.rotateVector(point, radians);\r\n        return new fabric.Point(v.x, v.y).addEquals(origin);\r\n      },\r\n\r\n      /**\r\n       * Rotates `vector` with `radians`\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Object} vector The vector to rotate (x and y)\r\n       * @param {Number} radians The radians of the angle for the rotation\r\n       * @return {Object} The new rotated point\r\n       */\r\n      rotateVector: function(vector, radians) {\r\n        var sin = fabric.util.sin(radians),\r\n            cos = fabric.util.cos(radians),\r\n            rx = vector.x * cos - vector.y * sin,\r\n            ry = vector.x * sin + vector.y * cos;\r\n        return {\r\n          x: rx,\r\n          y: ry\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Apply transform t to point p\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {fabric.Point} p The point to transform\r\n       * @param  {Array} t The transform\r\n       * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\r\n       * @return {fabric.Point} The transformed point\r\n       */\r\n      transformPoint: function(p, t, ignoreOffset) {\r\n        if (ignoreOffset) {\r\n          return new fabric.Point(\r\n            t[0] * p.x + t[2] * p.y,\r\n            t[1] * p.x + t[3] * p.y\r\n          );\r\n        }\r\n        return new fabric.Point(\r\n          t[0] * p.x + t[2] * p.y + t[4],\r\n          t[1] * p.x + t[3] * p.y + t[5]\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of points's bounding rectangle (left, top, width, height)\r\n       * @param {Array} points 4 points array\r\n       * @return {Object} Object with left, top, width, height properties\r\n       */\r\n      makeBoundingBoxFromPoints: function(points) {\r\n        var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\r\n            minX = fabric.util.array.min(xPoints),\r\n            maxX = fabric.util.array.max(xPoints),\r\n            width = maxX - minX,\r\n            yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\r\n            minY = fabric.util.array.min(yPoints),\r\n            maxY = fabric.util.array.max(yPoints),\r\n            height = maxY - minY;\r\n\r\n        return {\r\n          left: minX,\r\n          top: minY,\r\n          width: width,\r\n          height: height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Invert transformation t\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} t The transform\r\n       * @return {Array} The inverted transform\r\n       */\r\n      invertTransform: function(t) {\r\n        var a = 1 / (t[0] * t[3] - t[1] * t[2]),\r\n            r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\r\n            o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\r\n        r[4] = -o.x;\r\n        r[5] = -o.y;\r\n        return r;\r\n      },\r\n\r\n      /**\r\n       * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Number|String} number number to operate on\r\n       * @param {Number} fractionDigits number of fraction digits to \"leave\"\r\n       * @return {Number}\r\n       */\r\n      toFixed: function(number, fractionDigits) {\r\n        return parseFloat(Number(number).toFixed(fractionDigits));\r\n      },\r\n\r\n      /**\r\n       * Converts from attribute value to pixel value if applicable.\r\n       * Returns converted pixels or original value not converted.\r\n       * @param {Number|String} value number to operate on\r\n       * @param {Number} fontSize\r\n       * @return {Number|String}\r\n       */\r\n      parseUnit: function(value, fontSize) {\r\n        var unit = /\\D{0,2}$/.exec(value),\r\n            number = parseFloat(value);\r\n        if (!fontSize) {\r\n          fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n        }\r\n        switch (unit[0]) {\r\n          case 'mm':\r\n            return number * fabric.DPI / 25.4;\r\n\r\n          case 'cm':\r\n            return number * fabric.DPI / 2.54;\r\n\r\n          case 'in':\r\n            return number * fabric.DPI;\r\n\r\n          case 'pt':\r\n            return number * fabric.DPI / 72; // or * 4 / 3\r\n\r\n          case 'pc':\r\n            return number * fabric.DPI / 72 * 12; // or * 16\r\n\r\n          case 'em':\r\n            return number * fontSize;\r\n\r\n          default:\r\n            return number;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Function which always returns `false`.\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {Boolean}\r\n       */\r\n      falseFunction: function() {\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Returns klass \"Class\" object of given namespace\r\n       * @memberOf fabric.util\r\n       * @param {String} type Type of object (eg. 'circle')\r\n       * @param {String} namespace Namespace to get klass \"Class\" object from\r\n       * @return {Object} klass \"Class\"\r\n       */\r\n      getKlass: function(type, namespace) {\r\n        // capitalize first letter only\r\n        type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\r\n        return fabric.util.resolveNamespace(namespace)[type];\r\n      },\r\n\r\n      /**\r\n       * Returns array of attributes for given svg that fabric parses\r\n       * @memberOf fabric.util\r\n       * @param {String} type Type of svg element (eg. 'circle')\r\n       * @return {Array} string names of supported attributes\r\n       */\r\n      getSvgAttributes: function(type) {\r\n        var attributes = [\r\n          'instantiated_by_use',\r\n          'style',\r\n          'id',\r\n          'class'\r\n        ];\r\n        switch (type) {\r\n          case 'linearGradient':\r\n            attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\r\n            break;\r\n          case 'radialGradient':\r\n            attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\r\n            break;\r\n          case 'stop':\r\n            attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\r\n            break;\r\n        }\r\n        return attributes;\r\n      },\r\n\r\n      /**\r\n       * Returns object of given namespace\r\n       * @memberOf fabric.util\r\n       * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\r\n       * @return {Object} Object for given namespace (default fabric)\r\n       */\r\n      resolveNamespace: function(namespace) {\r\n        if (!namespace) {\r\n          return fabric;\r\n        }\r\n\r\n        var parts = namespace.split('.'),\r\n            len = parts.length, i,\r\n            obj = global || fabric.window;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n          obj = obj[parts[i]];\r\n        }\r\n\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Loads image element from given url and passes it to a callback\r\n       * @memberOf fabric.util\r\n       * @param {String} url URL representing an image\r\n       * @param {Function} callback Callback; invoked with loaded image\r\n       * @param {*} [context] Context to invoke callback in\r\n       * @param {Object} [crossOrigin] crossOrigin value to set image element to\r\n       */\r\n      loadImage: function(url, callback, context, crossOrigin) {\r\n        if (!url) {\r\n          callback && callback.call(context, url);\r\n          return;\r\n        }\r\n\r\n        var img = fabric.util.createImage();\r\n\r\n        /** @ignore */\r\n        var onLoadCallback = function () {\r\n          callback && callback.call(context, img);\r\n          img = img.onload = img.onerror = null;\r\n        };\r\n\r\n        img.onload = onLoadCallback;\r\n        /** @ignore */\r\n        img.onerror = function() {\r\n          fabric.log('Error loading ' + img.src);\r\n          callback && callback.call(context, null, true);\r\n          img = img.onload = img.onerror = null;\r\n        };\r\n\r\n        // data-urls appear to be buggy with crossOrigin\r\n        // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\r\n        // see https://code.google.com/p/chromium/issues/detail?id=315152\r\n        //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\r\n        if (url.indexOf('data') !== 0 && crossOrigin) {\r\n          img.crossOrigin = crossOrigin;\r\n        }\r\n\r\n        // IE10 / IE11-Fix: SVG contents from data: URI\r\n        // will only be available if the IMG is present\r\n        // in the DOM (and visible)\r\n        if (url.substring(0,14) === 'data:image/svg') {\r\n          img.onload = null;\r\n          fabric.util.loadImageInDom(img, onLoadCallback);\r\n        }\r\n\r\n        img.src = url;\r\n      },\r\n\r\n      /**\r\n       * Attaches SVG image with data: URL to the dom\r\n       * @memberOf fabric.util\r\n       * @param {Object} img Image object with data:image/svg src\r\n       * @param {Function} callback Callback; invoked with loaded image\r\n       * @return {Object} DOM element (div containing the SVG image)\r\n       */\r\n      loadImageInDom: function(img, onLoadCallback) {\r\n        var div = fabric.document.createElement('div');\r\n        div.style.width = div.style.height = '1px';\r\n        div.style.left = div.style.top = '-100%';\r\n        div.style.position = 'absolute';\r\n        div.appendChild(img);\r\n        fabric.document.querySelector('body').appendChild(div);\r\n        /**\r\n         * Wrap in function to:\r\n         *   1. Call existing callback\r\n         *   2. Cleanup DOM\r\n         */\r\n        img.onload = function () {\r\n          onLoadCallback();\r\n          div.parentNode.removeChild(div);\r\n          div = null;\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Creates corresponding fabric instances from their object representations\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} objects Objects to enliven\r\n       * @param {Function} callback Callback to invoke when all objects are created\r\n       * @param {String} namespace Namespace to get klass \"Class\" object from\r\n       * @param {Function} reviver Method for further parsing of object elements,\r\n       * called after each fabric object created.\r\n       */\r\n      enlivenObjects: function(objects, callback, namespace, reviver) {\r\n        objects = objects || [];\r\n\r\n        function onLoaded() {\r\n          if (++numLoadedObjects === numTotalObjects) {\r\n            callback && callback(enlivenedObjects);\r\n          }\r\n        }\r\n\r\n        var enlivenedObjects = [],\r\n            numLoadedObjects = 0,\r\n            numTotalObjects = objects.length;\r\n\r\n        if (!numTotalObjects) {\r\n          callback && callback(enlivenedObjects);\r\n          return;\r\n        }\r\n\r\n        objects.forEach(function (o, index) {\r\n          // if sparse array\r\n          if (!o || !o.type) {\r\n            onLoaded();\r\n            return;\r\n          }\r\n          var klass = fabric.util.getKlass(o.type, namespace);\r\n          klass.fromObject(o, function (obj, error) {\r\n            error || (enlivenedObjects[index] = obj);\r\n            reviver && reviver(o, obj, error);\r\n            onLoaded();\r\n          });\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Create and wait for loading of patterns\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} patterns Objects to enliven\r\n       * @param {Function} callback Callback to invoke when all objects are created\r\n       * called after each fabric object created.\r\n       */\r\n      enlivenPatterns: function(patterns, callback) {\r\n        patterns = patterns || [];\r\n\r\n        function onLoaded() {\r\n          if (++numLoadedPatterns === numPatterns) {\r\n            callback && callback(enlivenedPatterns);\r\n          }\r\n        }\r\n\r\n        var enlivenedPatterns = [],\r\n            numLoadedPatterns = 0,\r\n            numPatterns = patterns.length;\r\n\r\n        if (!numPatterns) {\r\n          callback && callback(enlivenedPatterns);\r\n          return;\r\n        }\r\n\r\n        patterns.forEach(function (p, index) {\r\n          if (p && p.source) {\r\n            new fabric.Pattern(p, function(pattern) {\r\n              enlivenedPatterns[index] = pattern;\r\n              onLoaded();\r\n            });\r\n          }\r\n          else {\r\n            enlivenedPatterns[index] = p;\r\n            onLoaded();\r\n          }\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Groups SVG elements (usually those retrieved from SVG document)\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Array} elements SVG elements to group\r\n       * @param {Object} [options] Options object\r\n       * @param {String} path Value to set sourcePath to\r\n       * @return {fabric.Object|fabric.Group}\r\n       */\r\n      groupSVGElements: function(elements, options, path) {\r\n        var object;\r\n        if (elements.length === 1) {\r\n          return elements[0];\r\n        }\r\n        if (options) {\r\n          if (options.width && options.height) {\r\n            options.centerPoint = {\r\n              x: options.width / 2,\r\n              y: options.height / 2\r\n            };\r\n          }\r\n          else {\r\n            delete options.width;\r\n            delete options.height;\r\n          }\r\n        }\r\n        object = new fabric.Group(elements, options);\r\n        if (typeof path !== 'undefined') {\r\n          object.sourcePath = path;\r\n        }\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Populates an object with properties of another object\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param {Object} source Source object\r\n       * @param {Object} destination Destination object\r\n       * @return {Array} properties Properties names to include\r\n       */\r\n      populateWithProperties: function(source, destination, properties) {\r\n        if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\r\n          for (var i = 0, len = properties.length; i < len; i++) {\r\n            if (properties[i] in source) {\r\n              destination[properties[i]] = source[properties[i]];\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Draws a dashed line between two points\r\n       *\r\n       * This method is used to draw dashed line around selection area.\r\n       * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\r\n       *\r\n       * @param {CanvasRenderingContext2D} ctx context\r\n       * @param {Number} x  start x coordinate\r\n       * @param {Number} y start y coordinate\r\n       * @param {Number} x2 end x coordinate\r\n       * @param {Number} y2 end y coordinate\r\n       * @param {Array} da dash array pattern\r\n       */\r\n      drawDashedLine: function(ctx, x, y, x2, y2, da) {\r\n        var dx = x2 - x,\r\n            dy = y2 - y,\r\n            len = sqrt(dx * dx + dy * dy),\r\n            rot = atan2(dy, dx),\r\n            dc = da.length,\r\n            di = 0,\r\n            draw = true;\r\n\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        ctx.moveTo(0, 0);\r\n        ctx.rotate(rot);\r\n\r\n        x = 0;\r\n        while (len > x) {\r\n          x += da[di++ % dc];\r\n          if (x > len) {\r\n            x = len;\r\n          }\r\n          ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\r\n          draw = !draw;\r\n        }\r\n\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Creates canvas element\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {CanvasElement} initialized canvas element\r\n       */\r\n      createCanvasElement: function() {\r\n        return fabric.document.createElement('canvas');\r\n      },\r\n\r\n      /**\r\n       * Creates image element (works on client and node)\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @return {HTMLImageElement} HTML image element\r\n       */\r\n      createImage: function() {\r\n        return fabric.document.createElement('img');\r\n      },\r\n\r\n      /**\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @deprecated since 2.0.0\r\n       * @param {fabric.Object} receiver Object implementing `clipTo` method\r\n       * @param {CanvasRenderingContext2D} ctx Context to clip\r\n       */\r\n      clipContext: function(receiver, ctx) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        receiver.clipTo(ctx);\r\n        ctx.clip();\r\n      },\r\n\r\n      /**\r\n       * Multiply matrix A by matrix B to nest transformations\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {Array} a First transformMatrix\r\n       * @param  {Array} b Second transformMatrix\r\n       * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\r\n       * @return {Array} The product of the two transform matrices\r\n       */\r\n      multiplyTransformMatrices: function(a, b, is2x2) {\r\n        // Matrix multiply a * b\r\n        return [\r\n          a[0] * b[0] + a[2] * b[1],\r\n          a[1] * b[0] + a[3] * b[1],\r\n          a[0] * b[2] + a[2] * b[3],\r\n          a[1] * b[2] + a[3] * b[3],\r\n          is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\r\n          is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * Decomposes standard 2x2 matrix into transform componentes\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {Array} a transformMatrix\r\n       * @return {Object} Components of transform\r\n       */\r\n      qrDecompose: function(a) {\r\n        var angle = atan2(a[1], a[0]),\r\n            denom = pow(a[0], 2) + pow(a[1], 2),\r\n            scaleX = sqrt(denom),\r\n            scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\r\n            skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\r\n        return {\r\n          angle: angle  / PiBy180,\r\n          scaleX: scaleX,\r\n          scaleY: scaleY,\r\n          skewX: skewX / PiBy180,\r\n          skewY: 0,\r\n          translateX: a[4],\r\n          translateY: a[5]\r\n        };\r\n      },\r\n\r\n      customTransformMatrix: function(scaleX, scaleY, skewX) {\r\n        var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\r\n            scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\r\n        return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\r\n      },\r\n\r\n      /**\r\n       * reset an object transform state to neutral. Top and left are not accounted for\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {fabric.Object} target object to transform\r\n       */\r\n      resetObjectTransform: function (target) {\r\n        target.scaleX = 1;\r\n        target.scaleY = 1;\r\n        target.skewX = 0;\r\n        target.skewY = 0;\r\n        target.flipX = false;\r\n        target.flipY = false;\r\n        target.rotate(0);\r\n      },\r\n\r\n      /**\r\n       * Extract Object transform values\r\n       * @static\r\n       * @memberOf fabric.util\r\n       * @param  {fabric.Object} target object to read from\r\n       * @return {Object} Components of transform\r\n       */\r\n      saveObjectTransform: function (target) {\r\n        return {\r\n          scaleX: target.scaleX,\r\n          scaleY: target.scaleY,\r\n          skewX: target.skewX,\r\n          skewY: target.skewY,\r\n          angle: target.angle,\r\n          left: target.left,\r\n          flipX: target.flipX,\r\n          flipY: target.flipY,\r\n          top: target.top\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of function body\r\n       * @param {Function} fn Function to get body of\r\n       * @return {String} Function body\r\n       */\r\n      getFunctionBody: function(fn) {\r\n        return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\r\n      },\r\n\r\n      /**\r\n       * Returns true if context has transparent pixel\r\n       * at specified location (taking tolerance into account)\r\n       * @param {CanvasRenderingContext2D} ctx context\r\n       * @param {Number} x x coordinate\r\n       * @param {Number} y y coordinate\r\n       * @param {Number} tolerance Tolerance\r\n       */\r\n      isTransparent: function(ctx, x, y, tolerance) {\r\n\r\n        // If tolerance is > 0 adjust start coords to take into account.\r\n        // If moves off Canvas fix to 0\r\n        if (tolerance > 0) {\r\n          if (x > tolerance) {\r\n            x -= tolerance;\r\n          }\r\n          else {\r\n            x = 0;\r\n          }\r\n          if (y > tolerance) {\r\n            y -= tolerance;\r\n          }\r\n          else {\r\n            y = 0;\r\n          }\r\n        }\r\n\r\n        var _isTransparent = true, i, temp,\r\n            imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\r\n            l = imageData.data.length;\r\n\r\n        // Split image data - for tolerance > 1, pixelDataSize = 4;\r\n        for (i = 3; i < l; i += 4) {\r\n          temp = imageData.data[i];\r\n          _isTransparent = temp <= 0;\r\n          if (_isTransparent === false) {\r\n            break; // Stop if colour found\r\n          }\r\n        }\r\n\r\n        imageData = null;\r\n\r\n        return _isTransparent;\r\n      },\r\n\r\n      /**\r\n       * Parse preserveAspectRatio attribute from element\r\n       * @param {string} attribute to be parsed\r\n       * @return {Object} an object containing align and meetOrSlice attribute\r\n       */\r\n      parsePreserveAspectRatioAttribute: function(attribute) {\r\n        var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\r\n            aspectRatioAttrs = attribute.split(' '), align;\r\n\r\n        if (aspectRatioAttrs && aspectRatioAttrs.length) {\r\n          meetOrSlice = aspectRatioAttrs.pop();\r\n          if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\r\n            align = meetOrSlice;\r\n            meetOrSlice = 'meet';\r\n          }\r\n          else if (aspectRatioAttrs.length) {\r\n            align = aspectRatioAttrs.pop();\r\n          }\r\n        }\r\n        //divide align in alignX and alignY\r\n        alignX = align !== 'none' ? align.slice(1, 4) : 'none';\r\n        alignY = align !== 'none' ? align.slice(5, 8) : 'none';\r\n        return {\r\n          meetOrSlice: meetOrSlice,\r\n          alignX: alignX,\r\n          alignY: alignY\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Clear char widths cache for the given font family or all the cache if no\r\n       * fontFamily is specified.\r\n       * Use it if you know you are loading fonts in a lazy way and you are not waiting\r\n       * for custom fonts to load properly when adding text objects to the canvas.\r\n       * If a text object is added when its own font is not loaded yet, you will get wrong\r\n       * measurement and so wrong bounding boxes.\r\n       * After the font cache is cleared, either change the textObject text content or call\r\n       * initDimensions() to trigger a recalculation\r\n       * @memberOf fabric.util\r\n       * @param {String} [fontFamily] font family to clear\r\n       */\r\n      clearFabricFontCache: function(fontFamily) {\r\n        fontFamily = (fontFamily || '').toLowerCase();\r\n        if (!fontFamily) {\r\n          fabric.charWidthsCache = { };\r\n        }\r\n        else if (fabric.charWidthsCache[fontFamily]) {\r\n          delete fabric.charWidthsCache[fontFamily];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Given current aspect ratio, determines the max width and height that can\r\n       * respect the total allowed area for the cache.\r\n       * @memberOf fabric.util\r\n       * @param {Number} ar aspect ratio\r\n       * @param {Number} maximumArea Maximum area you want to achieve\r\n       * @return {Object.x} Limited dimensions by X\r\n       * @return {Object.y} Limited dimensions by Y\r\n       */\r\n      limitDimsByArea: function(ar, maximumArea) {\r\n        var roughWidth = Math.sqrt(maximumArea * ar),\r\n            perfLimitSizeY = Math.floor(maximumArea / roughWidth);\r\n        return { x: Math.floor(roughWidth), y: perfLimitSizeY };\r\n      },\r\n\r\n      capValue: function(min, value, max) {\r\n        return Math.max(min, Math.min(value, max));\r\n      },\r\n\r\n      findScaleToFit: function(source, destination) {\r\n        return Math.min(destination.width / source.width, destination.height / source.height);\r\n      },\r\n\r\n      findScaleToCover: function(source, destination) {\r\n        return Math.max(destination.width / source.width, destination.height / source.height);\r\n      }\r\n    };\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    var _join = Array.prototype.join;\r\n\r\n    /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\r\n     * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\r\n     * http://mozilla.org/MPL/2.0/\r\n     */\r\n    function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\r\n      var argsString = _join.call(arguments);\r\n      if (fabric.arcToSegmentsCache[argsString]) {\r\n        return fabric.arcToSegmentsCache[argsString];\r\n      }\r\n\r\n      var PI = Math.PI, th = rotateX * PI / 180,\r\n          sinTh = fabric.util.sin(th),\r\n          cosTh = fabric.util.cos(th),\r\n          fromX = 0, fromY = 0;\r\n\r\n      rx = Math.abs(rx);\r\n      ry = Math.abs(ry);\r\n\r\n      var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\r\n          py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\r\n          rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\r\n          pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\r\n          root = 0;\r\n\r\n      if (pl < 0) {\r\n        var s = Math.sqrt(1 - pl / (rx2 * ry2));\r\n        rx *= s;\r\n        ry *= s;\r\n      }\r\n      else {\r\n        root = (large === sweep ? -1.0 : 1.0) *\r\n                Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\r\n      }\r\n\r\n      var cx = root * rx * py / ry,\r\n          cy = -root * ry * px / rx,\r\n          cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\r\n          cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\r\n          mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\r\n          dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\r\n\r\n      if (sweep === 0 && dtheta > 0) {\r\n        dtheta -= 2 * PI;\r\n      }\r\n      else if (sweep === 1 && dtheta < 0) {\r\n        dtheta += 2 * PI;\r\n      }\r\n\r\n      // Convert into cubic bezier segments <= 90deg\r\n      var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\r\n          result = [], mDelta = dtheta / segments,\r\n          mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\r\n          th3 = mTheta + mDelta;\r\n\r\n      for (var i = 0; i < segments; i++) {\r\n        result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\r\n        fromX = result[i][4];\r\n        fromY = result[i][5];\r\n        mTheta = th3;\r\n        th3 += mDelta;\r\n      }\r\n      fabric.arcToSegmentsCache[argsString] = result;\r\n      return result;\r\n    }\r\n\r\n    function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\r\n      var costh2 = fabric.util.cos(th2),\r\n          sinth2 = fabric.util.sin(th2),\r\n          costh3 = fabric.util.cos(th3),\r\n          sinth3 = fabric.util.sin(th3),\r\n          toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\r\n          toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\r\n          cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\r\n          cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\r\n          cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\r\n          cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\r\n\r\n      return [\r\n        cp1X, cp1Y,\r\n        cp2X, cp2Y,\r\n        toX, toY\r\n      ];\r\n    }\r\n\r\n    /*\r\n     * Private\r\n     */\r\n    function calcVectorAngle(ux, uy, vx, vy) {\r\n      var ta = Math.atan2(uy, ux),\r\n          tb = Math.atan2(vy, vx);\r\n      if (tb >= ta) {\r\n        return tb - ta;\r\n      }\r\n      else {\r\n        return 2 * Math.PI - (ta - tb);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Draws arc\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @param {Number} fx\r\n     * @param {Number} fy\r\n     * @param {Array} coords\r\n     */\r\n    fabric.util.drawArc = function(ctx, fx, fy, coords) {\r\n      var rx = coords[0],\r\n          ry = coords[1],\r\n          rot = coords[2],\r\n          large = coords[3],\r\n          sweep = coords[4],\r\n          tx = coords[5],\r\n          ty = coords[6],\r\n          segs = [[], [], [], []],\r\n          segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\r\n\r\n      for (var i = 0, len = segsNorm.length; i < len; i++) {\r\n        segs[i][0] = segsNorm[i][0] + fx;\r\n        segs[i][1] = segsNorm[i][1] + fy;\r\n        segs[i][2] = segsNorm[i][2] + fx;\r\n        segs[i][3] = segsNorm[i][3] + fy;\r\n        segs[i][4] = segsNorm[i][4] + fx;\r\n        segs[i][5] = segsNorm[i][5] + fy;\r\n        ctx.bezierCurveTo.apply(ctx, segs[i]);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Calculate bounding box of a elliptic-arc\r\n     * @param {Number} fx start point of arc\r\n     * @param {Number} fy\r\n     * @param {Number} rx horizontal radius\r\n     * @param {Number} ry vertical radius\r\n     * @param {Number} rot angle of horizontal axe\r\n     * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\r\n     * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\r\n     * @param {Number} tx end point of arc\r\n     * @param {Number} ty\r\n     */\r\n    fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\r\n\r\n      var fromX = 0, fromY = 0, bound, bounds = [],\r\n          segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\r\n\r\n      for (var i = 0, len = segs.length; i < len; i++) {\r\n        bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\r\n        bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\r\n        bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\r\n        fromX = segs[i][4];\r\n        fromY = segs[i][5];\r\n      }\r\n      return bounds;\r\n    };\r\n\r\n    /**\r\n     * Calculate bounding box of a beziercurve\r\n     * @param {Number} x0 starting point\r\n     * @param {Number} y0\r\n     * @param {Number} x1 first control point\r\n     * @param {Number} y1\r\n     * @param {Number} x2 secondo control point\r\n     * @param {Number} y2\r\n     * @param {Number} x3 end of beizer\r\n     * @param {Number} y3\r\n     */\r\n    // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\r\n    function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n      var argsString;\r\n      if (fabric.cachesBoundsOfCurve) {\r\n        argsString = _join.call(arguments);\r\n        if (fabric.boundsOfCurveCache[argsString]) {\r\n          return fabric.boundsOfCurveCache[argsString];\r\n        }\r\n      }\r\n\r\n      var sqrt = Math.sqrt,\r\n          min = Math.min, max = Math.max,\r\n          abs = Math.abs, tvalues = [],\r\n          bounds = [[], []],\r\n          a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n      b = 6 * x0 - 12 * x1 + 6 * x2;\r\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n      c = 3 * x1 - 3 * x0;\r\n\r\n      for (var i = 0; i < 2; ++i) {\r\n        if (i > 0) {\r\n          b = 6 * y0 - 12 * y1 + 6 * y2;\r\n          a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n          c = 3 * y1 - 3 * y0;\r\n        }\r\n\r\n        if (abs(a) < 1e-12) {\r\n          if (abs(b) < 1e-12) {\r\n            continue;\r\n          }\r\n          t = -c / b;\r\n          if (0 < t && t < 1) {\r\n            tvalues.push(t);\r\n          }\r\n          continue;\r\n        }\r\n        b2ac = b * b - 4 * c * a;\r\n        if (b2ac < 0) {\r\n          continue;\r\n        }\r\n        sqrtb2ac = sqrt(b2ac);\r\n        t1 = (-b + sqrtb2ac) / (2 * a);\r\n        if (0 < t1 && t1 < 1) {\r\n          tvalues.push(t1);\r\n        }\r\n        t2 = (-b - sqrtb2ac) / (2 * a);\r\n        if (0 < t2 && t2 < 1) {\r\n          tvalues.push(t2);\r\n        }\r\n      }\r\n\r\n      var x, y, j = tvalues.length, jlen = j, mt;\r\n      while (j--) {\r\n        t = tvalues[j];\r\n        mt = 1 - t;\r\n        x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n        bounds[0][j] = x;\r\n\r\n        y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n        bounds[1][j] = y;\r\n      }\r\n\r\n      bounds[0][jlen] = x0;\r\n      bounds[1][jlen] = y0;\r\n      bounds[0][jlen + 1] = x3;\r\n      bounds[1][jlen + 1] = y3;\r\n      var result = [\r\n        {\r\n          x: min.apply(null, bounds[0]),\r\n          y: min.apply(null, bounds[1])\r\n        },\r\n        {\r\n          x: max.apply(null, bounds[0]),\r\n          y: max.apply(null, bounds[1])\r\n        }\r\n      ];\r\n      if (fabric.cachesBoundsOfCurve) {\r\n        fabric.boundsOfCurveCache[argsString] = result;\r\n      }\r\n      return result;\r\n    }\r\n\r\n    fabric.util.getBoundsOfCurve = getBoundsOfCurve;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var slice = Array.prototype.slice;\r\n\r\n    /**\r\n     * Invokes method on all items in a given array\r\n     * @memberOf fabric.util.array\r\n     * @param {Array} array Array to iterate over\r\n     * @param {String} method Name of a method to invoke\r\n     * @return {Array}\r\n     */\r\n    function invoke(array, method) {\r\n      var args = slice.call(arguments, 2), result = [];\r\n      for (var i = 0, len = array.length; i < len; i++) {\r\n        result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * Finds maximum value in array (not necessarily \"first\" one)\r\n     * @memberOf fabric.util.array\r\n     * @param {Array} array Array to iterate over\r\n     * @param {String} byProperty\r\n     * @return {*}\r\n     */\r\n    function max(array, byProperty) {\r\n      return find(array, byProperty, function(value1, value2) {\r\n        return value1 >= value2;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Finds minimum value in array (not necessarily \"first\" one)\r\n     * @memberOf fabric.util.array\r\n     * @param {Array} array Array to iterate over\r\n     * @param {String} byProperty\r\n     * @return {*}\r\n     */\r\n    function min(array, byProperty) {\r\n      return find(array, byProperty, function(value1, value2) {\r\n        return value1 < value2;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function fill(array, value) {\r\n      var k = array.length;\r\n      while (k--) {\r\n        array[k] = value;\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function find(array, byProperty, condition) {\r\n      if (!array || array.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var i = array.length - 1,\r\n          result = byProperty ? array[i][byProperty] : array[i];\r\n      if (byProperty) {\r\n        while (i--) {\r\n          if (condition(array[i][byProperty], result)) {\r\n            result = array[i][byProperty];\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        while (i--) {\r\n          if (condition(array[i], result)) {\r\n            result = array[i];\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * @namespace fabric.util.array\r\n     */\r\n    fabric.util.array = {\r\n      fill: fill,\r\n      invoke: invoke,\r\n      min: min,\r\n      max: max\r\n    };\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n    /**\r\n     * Copies all enumerable properties of one js object to another\r\n     * Does not clone or extend fabric.Object subclasses.\r\n     * @memberOf fabric.util.object\r\n     * @param {Object} destination Where to copy to\r\n     * @param {Object} source Where to copy from\r\n     * @return {Object}\r\n     */\r\n\r\n    function extend(destination, source, deep) {\r\n      // JScript DontEnum bug is not taken care of\r\n      // the deep clone is for internal use, is not meant to avoid\r\n      // javascript traps or cloning html element or self referenced objects.\r\n      if (deep) {\r\n        if (!fabric.isLikelyNode && source instanceof Element) {\r\n          // avoid cloning deep images, canvases,\r\n          destination = source;\r\n        }\r\n        else if (source instanceof Array) {\r\n          destination = [];\r\n          for (var i = 0, len = source.length; i < len; i++) {\r\n            destination[i] = extend({ }, source[i], deep);\r\n          }\r\n        }\r\n        else if (source && typeof source === 'object') {\r\n          for (var property in source) {\r\n            if (source.hasOwnProperty(property)) {\r\n              destination[property] = extend({ }, source[property], deep);\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          // this sounds odd for an extend but is ok for recursive use\r\n          destination = source;\r\n        }\r\n      }\r\n      else {\r\n        for (var property in source) {\r\n          destination[property] = source[property];\r\n        }\r\n      }\r\n      return destination;\r\n    }\r\n\r\n    /**\r\n     * Creates an empty object and copies all enumerable properties of another object to it\r\n     * @memberOf fabric.util.object\r\n     * TODO: this function return an empty object if you try to clone null\r\n     * @param {Object} object Object to clone\r\n     * @return {Object}\r\n     */\r\n    function clone(object, deep) {\r\n      return extend({ }, object, deep);\r\n    }\r\n\r\n    /** @namespace fabric.util.object */\r\n    fabric.util.object = {\r\n      extend: extend,\r\n      clone: clone\r\n    };\r\n    fabric.util.object.extend(fabric.util, fabric.Observable);\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * Camelizes a string\r\n     * @memberOf fabric.util.string\r\n     * @param {String} string String to camelize\r\n     * @return {String} Camelized version of a string\r\n     */\r\n    function camelize(string) {\r\n      return string.replace(/-+(.)?/g, function(match, character) {\r\n        return character ? character.toUpperCase() : '';\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Capitalizes a string\r\n     * @memberOf fabric.util.string\r\n     * @param {String} string String to capitalize\r\n     * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\r\n     * and other letters stay untouched, if false first letter is capitalized\r\n     * and other letters are converted to lowercase.\r\n     * @return {String} Capitalized version of a string\r\n     */\r\n    function capitalize(string, firstLetterOnly) {\r\n      return string.charAt(0).toUpperCase() +\r\n        (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Escapes XML in a string\r\n     * @memberOf fabric.util.string\r\n     * @param {String} string String to escape\r\n     * @return {String} Escaped version of a string\r\n     */\r\n    function escapeXml(string) {\r\n      return string.replace(/&/g, '&amp;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&apos;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n    }\r\n\r\n    /**\r\n     * Divide a string in the user perceived single units\r\n     * @memberOf fabric.util.string\r\n     * @param {String} textstring String to escape\r\n     * @return {Array} array containing the graphemes\r\n     */\r\n    function graphemeSplit(textstring) {\r\n      var i = 0, chr, graphemes = [];\r\n      for (i = 0, chr; i < textstring.length; i++) {\r\n        if ((chr = getWholeChar(textstring, i)) === false) {\r\n          continue;\r\n        }\r\n        graphemes.push(chr);\r\n      }\r\n      return graphemes;\r\n    }\r\n\r\n    // taken from mdn in the charAt doc page.\r\n    function getWholeChar(str, i) {\r\n      var code = str.charCodeAt(i);\r\n\r\n      if (isNaN(code)) {\r\n        return ''; // Position not found\r\n      }\r\n      if (code < 0xD800 || code > 0xDFFF) {\r\n        return str.charAt(i);\r\n      }\r\n\r\n      // High surrogate (could change last hex to 0xDB7F to treat high private\r\n      // surrogates as single characters)\r\n      if (0xD800 <= code && code <= 0xDBFF) {\r\n        if (str.length <= (i + 1)) {\r\n          throw 'High surrogate without following low surrogate';\r\n        }\r\n        var next = str.charCodeAt(i + 1);\r\n        if (0xDC00 > next || next > 0xDFFF) {\r\n          throw 'High surrogate without following low surrogate';\r\n        }\r\n        return str.charAt(i) + str.charAt(i + 1);\r\n      }\r\n      // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\r\n      if (i === 0) {\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      var prev = str.charCodeAt(i - 1);\r\n\r\n      // (could change last hex to 0xDB7F to treat high private\r\n      // surrogates as single characters)\r\n      if (0xD800 > prev || prev > 0xDBFF) {\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      // We can pass over low surrogates now as the second component\r\n      // in a pair which we have already processed\r\n      return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * String utilities\r\n     * @namespace fabric.util.string\r\n     */\r\n    fabric.util.string = {\r\n      camelize: camelize,\r\n      capitalize: capitalize,\r\n      escapeXml: escapeXml,\r\n      graphemeSplit: graphemeSplit\r\n    };\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var slice = Array.prototype.slice, emptyFunction = function() { },\r\n\r\n        IS_DONTENUM_BUGGY = (function() {\r\n          for (var p in { toString: 1 }) {\r\n            if (p === 'toString') {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })(),\r\n\r\n        /** @ignore */\r\n        addMethods = function(klass, source, parent) {\r\n          for (var property in source) {\r\n\r\n            if (property in klass.prototype &&\r\n                typeof klass.prototype[property] === 'function' &&\r\n                (source[property] + '').indexOf('callSuper') > -1) {\r\n\r\n              klass.prototype[property] = (function(property) {\r\n                return function() {\r\n\r\n                  var superclass = this.constructor.superclass;\r\n                  this.constructor.superclass = parent;\r\n                  var returnValue = source[property].apply(this, arguments);\r\n                  this.constructor.superclass = superclass;\r\n\r\n                  if (property !== 'initialize') {\r\n                    return returnValue;\r\n                  }\r\n                };\r\n              })(property);\r\n            }\r\n            else {\r\n              klass.prototype[property] = source[property];\r\n            }\r\n\r\n            if (IS_DONTENUM_BUGGY) {\r\n              if (source.toString !== Object.prototype.toString) {\r\n                klass.prototype.toString = source.toString;\r\n              }\r\n              if (source.valueOf !== Object.prototype.valueOf) {\r\n                klass.prototype.valueOf = source.valueOf;\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n    function Subclass() { }\r\n\r\n    function callSuper(methodName) {\r\n      var parentMethod = null,\r\n          _this = this;\r\n\r\n      // climb prototype chain to find method not equal to callee's method\r\n      while (_this.constructor.superclass) {\r\n        var superClassMethod = _this.constructor.superclass.prototype[methodName];\r\n        if (_this[methodName] !== superClassMethod) {\r\n          parentMethod = superClassMethod;\r\n          break;\r\n        }\r\n        // eslint-disable-next-line\r\n        _this = _this.constructor.superclass.prototype;\r\n      }\r\n\r\n      if (!parentMethod) {\r\n        return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\r\n      }\r\n\r\n      return (arguments.length > 1)\r\n        ? parentMethod.apply(this, slice.call(arguments, 1))\r\n        : parentMethod.call(this);\r\n    }\r\n\r\n    /**\r\n     * Helper for creation of \"classes\".\r\n     * @memberOf fabric.util\r\n     * @param {Function} [parent] optional \"Class\" to inherit from\r\n     * @param {Object} [properties] Properties shared by all instances of this class\r\n     *                  (be careful modifying objects defined here as this would affect all instances)\r\n     */\r\n    function createClass() {\r\n      var parent = null,\r\n          properties = slice.call(arguments, 0);\r\n\r\n      if (typeof properties[0] === 'function') {\r\n        parent = properties.shift();\r\n      }\r\n      function klass() {\r\n        this.initialize.apply(this, arguments);\r\n      }\r\n\r\n      klass.superclass = parent;\r\n      klass.subclasses = [];\r\n\r\n      if (parent) {\r\n        Subclass.prototype = parent.prototype;\r\n        klass.prototype = new Subclass();\r\n        parent.subclasses.push(klass);\r\n      }\r\n      for (var i = 0, length = properties.length; i < length; i++) {\r\n        addMethods(klass, properties[i], parent);\r\n      }\r\n      if (!klass.prototype.initialize) {\r\n        klass.prototype.initialize = emptyFunction;\r\n      }\r\n      klass.prototype.constructor = klass;\r\n      klass.prototype.callSuper = callSuper;\r\n      return klass;\r\n    }\r\n\r\n    fabric.util.createClass = createClass;\r\n  })();\r\n\r\n\r\n  (function () {\r\n\r\n    var unknown = 'unknown';\r\n\r\n    /* EVENT HANDLING */\r\n\r\n    function areHostMethods(object) {\r\n      var methodNames = Array.prototype.slice.call(arguments, 1),\r\n          t, i, len = methodNames.length;\r\n      for (i = 0; i < len; i++) {\r\n        t = typeof object[methodNames[i]];\r\n        if (!(/^(?:function|object|unknown)$/).test(t)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    /** @ignore */\r\n    var getElement,\r\n        setElement,\r\n        getUniqueId = (function () {\r\n          var uid = 0;\r\n          return function (element) {\r\n            return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\r\n          };\r\n        })();\r\n\r\n    (function () {\r\n      var elements = { };\r\n      /** @ignore */\r\n      getElement = function (uid) {\r\n        return elements[uid];\r\n      };\r\n      /** @ignore */\r\n      setElement = function (uid, element) {\r\n        elements[uid] = element;\r\n      };\r\n    })();\r\n\r\n    function createListener(uid, handler) {\r\n      return {\r\n        handler: handler,\r\n        wrappedHandler: createWrappedHandler(uid, handler)\r\n      };\r\n    }\r\n\r\n    function createWrappedHandler(uid, handler) {\r\n      return function (e) {\r\n        handler.call(getElement(uid), e || fabric.window.event);\r\n      };\r\n    }\r\n\r\n    function createDispatcher(uid, eventName) {\r\n      return function (e) {\r\n        if (handlers[uid] && handlers[uid][eventName]) {\r\n          var handlersForEvent = handlers[uid][eventName];\r\n          for (var i = 0, len = handlersForEvent.length; i < len; i++) {\r\n            handlersForEvent[i].call(this, e || fabric.window.event);\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    var shouldUseAddListenerRemoveListener = (\r\n          areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\r\n          areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\r\n\r\n        shouldUseAttachEventDetachEvent = (\r\n          areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\r\n          areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\r\n\r\n        // IE branch\r\n        listeners = { },\r\n\r\n        // DOM L0 branch\r\n        handlers = { },\r\n\r\n        addListener, removeListener;\r\n\r\n    if (shouldUseAddListenerRemoveListener) {\r\n      /** @ignore */\r\n      addListener = function (element, eventName, handler, options) {\r\n        // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\r\n        element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\r\n      };\r\n      /** @ignore */\r\n      removeListener = function (element, eventName, handler, options) {\r\n        element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\r\n      };\r\n    }\r\n\r\n    else if (shouldUseAttachEventDetachEvent) {\r\n      /** @ignore */\r\n      addListener = function (element, eventName, handler) {\r\n        if (!element) {\r\n          return;\r\n        }\r\n        var uid = getUniqueId(element);\r\n        setElement(uid, element);\r\n        if (!listeners[uid]) {\r\n          listeners[uid] = { };\r\n        }\r\n        if (!listeners[uid][eventName]) {\r\n          listeners[uid][eventName] = [];\r\n\r\n        }\r\n        var listener = createListener(uid, handler);\r\n        listeners[uid][eventName].push(listener);\r\n        element.attachEvent('on' + eventName, listener.wrappedHandler);\r\n      };\r\n      /** @ignore */\r\n      removeListener = function (element, eventName, handler) {\r\n        if (!element) {\r\n          return;\r\n        }\r\n        var uid = getUniqueId(element), listener;\r\n        if (listeners[uid] && listeners[uid][eventName]) {\r\n          for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\r\n            listener = listeners[uid][eventName][i];\r\n            if (listener && listener.handler === handler) {\r\n              element.detachEvent('on' + eventName, listener.wrappedHandler);\r\n              listeners[uid][eventName][i] = null;\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n    else {\r\n      /** @ignore */\r\n      addListener = function (element, eventName, handler) {\r\n        if (!element) {\r\n          return;\r\n        }\r\n        var uid = getUniqueId(element);\r\n        if (!handlers[uid]) {\r\n          handlers[uid] = { };\r\n        }\r\n        if (!handlers[uid][eventName]) {\r\n          handlers[uid][eventName] = [];\r\n          var existingHandler = element['on' + eventName];\r\n          if (existingHandler) {\r\n            handlers[uid][eventName].push(existingHandler);\r\n          }\r\n          element['on' + eventName] = createDispatcher(uid, eventName);\r\n        }\r\n        handlers[uid][eventName].push(handler);\r\n      };\r\n      /** @ignore */\r\n      removeListener = function (element, eventName, handler) {\r\n        if (!element) {\r\n          return;\r\n        }\r\n        var uid = getUniqueId(element);\r\n        if (handlers[uid] && handlers[uid][eventName]) {\r\n          var handlersForEvent = handlers[uid][eventName];\r\n          for (var i = 0, len = handlersForEvent.length; i < len; i++) {\r\n            if (handlersForEvent[i] === handler) {\r\n              handlersForEvent.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Adds an event listener to an element\r\n     * @function\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element\r\n     * @param {String} eventName\r\n     * @param {Function} handler\r\n     */\r\n    fabric.util.addListener = addListener;\r\n\r\n    /**\r\n     * Removes an event listener from an element\r\n     * @function\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element\r\n     * @param {String} eventName\r\n     * @param {Function} handler\r\n     */\r\n    fabric.util.removeListener = removeListener;\r\n\r\n    /**\r\n     * Cross-browser wrapper for getting event's coordinates\r\n     * @memberOf fabric.util\r\n     * @param {Event} event Event object\r\n     */\r\n    function getPointer(event) {\r\n      event || (event = fabric.window.event);\r\n\r\n      var element = event.target ||\r\n                    (typeof event.srcElement !== unknown ? event.srcElement : null),\r\n\r\n          scroll = fabric.util.getScrollLeftTop(element);\r\n      return {\r\n        x: pointerX(event) + scroll.left,\r\n        y: pointerY(event) + scroll.top\r\n      };\r\n    }\r\n\r\n    var pointerX = function(event) {\r\n          return event.clientX;\r\n        },\r\n\r\n        pointerY = function(event) {\r\n          return event.clientY;\r\n        };\r\n\r\n    function _getPointer(event, pageProp, clientProp) {\r\n      var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\r\n      var pointer, eventTouchProp = event[touchProp];\r\n\r\n      if (eventTouchProp && eventTouchProp[0]) {\r\n        pointer = eventTouchProp[0][clientProp];\r\n      }\r\n\r\n      if (typeof pointer === 'undefined') {\r\n        pointer = event[clientProp];\r\n      }\r\n\r\n      return pointer;\r\n    }\r\n\r\n    if (fabric.isTouchSupported) {\r\n      pointerX = function(event) {\r\n        return _getPointer(event, 'pageX', 'clientX');\r\n      };\r\n      pointerY = function(event) {\r\n        return _getPointer(event, 'pageY', 'clientY');\r\n      };\r\n    }\r\n\r\n    fabric.util.getPointer = getPointer;\r\n\r\n  })();\r\n\r\n\r\n  (function () {\r\n\r\n    /**\r\n     * Cross-browser wrapper for setting element's style\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element\r\n     * @param {Object} styles\r\n     * @return {HTMLElement} Element that was passed as a first argument\r\n     */\r\n    function setStyle(element, styles) {\r\n      var elementStyle = element.style;\r\n      if (!elementStyle) {\r\n        return element;\r\n      }\r\n      if (typeof styles === 'string') {\r\n        element.style.cssText += ';' + styles;\r\n        return styles.indexOf('opacity') > -1\r\n          ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\r\n          : element;\r\n      }\r\n      for (var property in styles) {\r\n        if (property === 'opacity') {\r\n          setOpacity(element, styles[property]);\r\n        }\r\n        else {\r\n          var normalizedProperty = (property === 'float' || property === 'cssFloat')\r\n            ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\r\n            : property;\r\n          elementStyle[normalizedProperty] = styles[property];\r\n        }\r\n      }\r\n      return element;\r\n    }\r\n\r\n    var parseEl = fabric.document.createElement('div'),\r\n        supportsOpacity = typeof parseEl.style.opacity === 'string',\r\n        supportsFilters = typeof parseEl.style.filter === 'string',\r\n        reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\r\n\r\n        /** @ignore */\r\n        setOpacity = function (element) { return element; };\r\n\r\n    if (supportsOpacity) {\r\n      /** @ignore */\r\n      setOpacity = function(element, value) {\r\n        element.style.opacity = value;\r\n        return element;\r\n      };\r\n    }\r\n    else if (supportsFilters) {\r\n      /** @ignore */\r\n      setOpacity = function(element, value) {\r\n        var es = element.style;\r\n        if (element.currentStyle && !element.currentStyle.hasLayout) {\r\n          es.zoom = 1;\r\n        }\r\n        if (reOpacity.test(es.filter)) {\r\n          value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\r\n          es.filter = es.filter.replace(reOpacity, value);\r\n        }\r\n        else {\r\n          es.filter += ' alpha(opacity=' + (value * 100) + ')';\r\n        }\r\n        return element;\r\n      };\r\n    }\r\n\r\n    fabric.util.setStyle = setStyle;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var _slice = Array.prototype.slice;\r\n\r\n    /**\r\n     * Takes id and returns an element with that id (if one exists in a document)\r\n     * @memberOf fabric.util\r\n     * @param {String|HTMLElement} id\r\n     * @return {HTMLElement|null}\r\n     */\r\n    function getById(id) {\r\n      return typeof id === 'string' ? fabric.document.getElementById(id) : id;\r\n    }\r\n\r\n    var sliceCanConvertNodelists,\r\n        /**\r\n         * Converts an array-like object (e.g. arguments or NodeList) to an array\r\n         * @memberOf fabric.util\r\n         * @param {Object} arrayLike\r\n         * @return {Array}\r\n         */\r\n        toArray = function(arrayLike) {\r\n          return _slice.call(arrayLike, 0);\r\n        };\r\n\r\n    try {\r\n      sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\r\n    }\r\n    catch (err) { }\r\n\r\n    if (!sliceCanConvertNodelists) {\r\n      toArray = function(arrayLike) {\r\n        var arr = new Array(arrayLike.length), i = arrayLike.length;\r\n        while (i--) {\r\n          arr[i] = arrayLike[i];\r\n        }\r\n        return arr;\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Creates specified element with specified attributes\r\n     * @memberOf fabric.util\r\n     * @param {String} tagName Type of an element to create\r\n     * @param {Object} [attributes] Attributes to set on an element\r\n     * @return {HTMLElement} Newly created element\r\n     */\r\n    function makeElement(tagName, attributes) {\r\n      var el = fabric.document.createElement(tagName);\r\n      for (var prop in attributes) {\r\n        if (prop === 'class') {\r\n          el.className = attributes[prop];\r\n        }\r\n        else if (prop === 'for') {\r\n          el.htmlFor = attributes[prop];\r\n        }\r\n        else {\r\n          el.setAttribute(prop, attributes[prop]);\r\n        }\r\n      }\r\n      return el;\r\n    }\r\n\r\n    /**\r\n     * Adds class to an element\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to add class to\r\n     * @param {String} className Class to add to an element\r\n     */\r\n    function addClass(element, className) {\r\n      if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\r\n        element.className += (element.className ? ' ' : '') + className;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Wraps element with another element\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to wrap\r\n     * @param {HTMLElement|String} wrapper Element to wrap with\r\n     * @param {Object} [attributes] Attributes to set on a wrapper\r\n     * @return {HTMLElement} wrapper\r\n     */\r\n    function wrapElement(element, wrapper, attributes) {\r\n      if (typeof wrapper === 'string') {\r\n        wrapper = makeElement(wrapper, attributes);\r\n      }\r\n      if (element.parentNode) {\r\n        element.parentNode.replaceChild(wrapper, element);\r\n      }\r\n      wrapper.appendChild(element);\r\n      return wrapper;\r\n    }\r\n\r\n    /**\r\n     * Returns element scroll offsets\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to operate on\r\n     * @return {Object} Object with left/top values\r\n     */\r\n    function getScrollLeftTop(element) {\r\n\r\n      var left = 0,\r\n          top = 0,\r\n          docElement = fabric.document.documentElement,\r\n          body = fabric.document.body || {\r\n            scrollLeft: 0, scrollTop: 0\r\n          };\r\n\r\n      // While loop checks (and then sets element to) .parentNode OR .host\r\n      //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\r\n      //  but the .parentNode of a root ShadowDOM node will always be null, instead\r\n      //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\r\n      while (element && (element.parentNode || element.host)) {\r\n\r\n        // Set element to element parent, or 'host' in case of ShadowDOM\r\n        element = element.parentNode || element.host;\r\n\r\n        if (element === fabric.document) {\r\n          left = body.scrollLeft || docElement.scrollLeft || 0;\r\n          top = body.scrollTop ||  docElement.scrollTop || 0;\r\n        }\r\n        else {\r\n          left += element.scrollLeft || 0;\r\n          top += element.scrollTop || 0;\r\n        }\r\n\r\n        if (element.nodeType === 1 && element.style.position === 'fixed') {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return { left: left, top: top };\r\n    }\r\n\r\n    /**\r\n     * Returns offset for a given element\r\n     * @function\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to get offset for\r\n     * @return {Object} Object with \"left\" and \"top\" properties\r\n     */\r\n    function getElementOffset(element) {\r\n      var docElem,\r\n          doc = element && element.ownerDocument,\r\n          box = { left: 0, top: 0 },\r\n          offset = { left: 0, top: 0 },\r\n          scrollLeftTop,\r\n          offsetAttributes = {\r\n            borderLeftWidth: 'left',\r\n            borderTopWidth:  'top',\r\n            paddingLeft:     'left',\r\n            paddingTop:      'top'\r\n          };\r\n\r\n      if (!doc) {\r\n        return offset;\r\n      }\r\n\r\n      for (var attr in offsetAttributes) {\r\n        offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\r\n      }\r\n\r\n      docElem = doc.documentElement;\r\n      if ( typeof element.getBoundingClientRect !== 'undefined' ) {\r\n        box = element.getBoundingClientRect();\r\n      }\r\n\r\n      scrollLeftTop = getScrollLeftTop(element);\r\n\r\n      return {\r\n        left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\r\n        top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Returns style attribute value of a given element\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to get style attribute for\r\n     * @param {String} attr Style attribute to get for element\r\n     * @return {String} Style attribute value of the given element.\r\n     */\r\n    var getElementStyle;\r\n    if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\r\n      getElementStyle = function(element, attr) {\r\n        var style = fabric.document.defaultView.getComputedStyle(element, null);\r\n        return style ? style[attr] : undefined;\r\n      };\r\n    }\r\n    else {\r\n      getElementStyle = function(element, attr) {\r\n        var value = element.style[attr];\r\n        if (!value && element.currentStyle) {\r\n          value = element.currentStyle[attr];\r\n        }\r\n        return value;\r\n      };\r\n    }\r\n\r\n    (function () {\r\n      var style = fabric.document.documentElement.style,\r\n          selectProp = 'userSelect' in style\r\n            ? 'userSelect'\r\n            : 'MozUserSelect' in style\r\n              ? 'MozUserSelect'\r\n              : 'WebkitUserSelect' in style\r\n                ? 'WebkitUserSelect'\r\n                : 'KhtmlUserSelect' in style\r\n                  ? 'KhtmlUserSelect'\r\n                  : '';\r\n\r\n      /**\r\n       * Makes element unselectable\r\n       * @memberOf fabric.util\r\n       * @param {HTMLElement} element Element to make unselectable\r\n       * @return {HTMLElement} Element that was passed in\r\n       */\r\n      function makeElementUnselectable(element) {\r\n        if (typeof element.onselectstart !== 'undefined') {\r\n          element.onselectstart = fabric.util.falseFunction;\r\n        }\r\n        if (selectProp) {\r\n          element.style[selectProp] = 'none';\r\n        }\r\n        else if (typeof element.unselectable === 'string') {\r\n          element.unselectable = 'on';\r\n        }\r\n        return element;\r\n      }\r\n\r\n      /**\r\n       * Makes element selectable\r\n       * @memberOf fabric.util\r\n       * @param {HTMLElement} element Element to make selectable\r\n       * @return {HTMLElement} Element that was passed in\r\n       */\r\n      function makeElementSelectable(element) {\r\n        if (typeof element.onselectstart !== 'undefined') {\r\n          element.onselectstart = null;\r\n        }\r\n        if (selectProp) {\r\n          element.style[selectProp] = '';\r\n        }\r\n        else if (typeof element.unselectable === 'string') {\r\n          element.unselectable = '';\r\n        }\r\n        return element;\r\n      }\r\n\r\n      fabric.util.makeElementUnselectable = makeElementUnselectable;\r\n      fabric.util.makeElementSelectable = makeElementSelectable;\r\n    })();\r\n\r\n    (function() {\r\n\r\n      /**\r\n       * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\r\n       * @memberOf fabric.util\r\n       * @param {String} url URL of a script to load\r\n       * @param {Function} callback Callback to execute when script is finished loading\r\n       */\r\n      function getScript(url, callback) {\r\n        var headEl = fabric.document.getElementsByTagName('head')[0],\r\n            scriptEl = fabric.document.createElement('script'),\r\n            loading = true;\r\n\r\n        /** @ignore */\r\n        scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\r\n          if (loading) {\r\n            if (typeof this.readyState === 'string' &&\r\n                this.readyState !== 'loaded' &&\r\n                this.readyState !== 'complete') {\r\n              return;\r\n            }\r\n            loading = false;\r\n            callback(e || fabric.window.event);\r\n            scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\r\n          }\r\n        };\r\n        scriptEl.src = url;\r\n        headEl.appendChild(scriptEl);\r\n        // causes issue in Opera\r\n        // headEl.removeChild(scriptEl);\r\n      }\r\n\r\n      fabric.util.getScript = getScript;\r\n    })();\r\n\r\n    function getNodeCanvas(element) {\r\n      var impl = fabric.jsdomImplForWrapper(element);\r\n      return impl._canvas || impl._image;\r\n    };\r\n\r\n    function cleanUpJsdomNode(element) {\r\n      if (!fabric.isLikelyNode) {\r\n        return;\r\n      }\r\n      var impl = fabric.jsdomImplForWrapper(element);\r\n      if (impl) {\r\n        impl._image = null;\r\n        impl._canvas = null;\r\n        // unsure if necessary\r\n        impl._currentSrc = null;\r\n        impl._attributes = null;\r\n        impl._classList = null;\r\n      }\r\n    }\r\n\r\n    fabric.util.getById = getById;\r\n    fabric.util.toArray = toArray;\r\n    fabric.util.makeElement = makeElement;\r\n    fabric.util.addClass = addClass;\r\n    fabric.util.wrapElement = wrapElement;\r\n    fabric.util.getScrollLeftTop = getScrollLeftTop;\r\n    fabric.util.getElementOffset = getElementOffset;\r\n    fabric.util.getElementStyle = getElementStyle;\r\n    fabric.util.getNodeCanvas = getNodeCanvas;\r\n    fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function addParamToUrl(url, param) {\r\n      return url + (/\\?/.test(url) ? '&' : '?') + param;\r\n    }\r\n\r\n    var makeXHR = (function() {\r\n      var factories = [\r\n        function() { return new fabric.window.XMLHttpRequest(); },\r\n        function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\r\n        function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\r\n        function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); }\r\n      ];\r\n      for (var i = factories.length; i--; ) {\r\n        try {\r\n          var req = factories[i]();\r\n          if (req) {\r\n            return factories[i];\r\n          }\r\n        }\r\n        catch (err) { }\r\n      }\r\n    })();\r\n\r\n    function emptyFn() { }\r\n\r\n    /**\r\n     * Cross-browser abstraction for sending XMLHttpRequest\r\n     * @memberOf fabric.util\r\n     * @param {String} url URL to send XMLHttpRequest to\r\n     * @param {Object} [options] Options object\r\n     * @param {String} [options.method=\"GET\"]\r\n     * @param {String} [options.parameters] parameters to append to url in GET or in body\r\n     * @param {String} [options.body] body to send with POST or PUT request\r\n     * @param {Function} options.onComplete Callback to invoke when request is completed\r\n     * @return {XMLHttpRequest} request\r\n     */\r\n    function request(url, options) {\r\n      options || (options = { });\r\n\r\n      var method = options.method ? options.method.toUpperCase() : 'GET',\r\n          onComplete = options.onComplete || function() { },\r\n          xhr = makeXHR(),\r\n          body = options.body || options.parameters;\r\n\r\n      /** @ignore */\r\n      xhr.onreadystatechange = function() {\r\n        if (xhr.readyState === 4) {\r\n          onComplete(xhr);\r\n          xhr.onreadystatechange = emptyFn;\r\n        }\r\n      };\r\n\r\n      if (method === 'GET') {\r\n        body = null;\r\n        if (typeof options.parameters === 'string') {\r\n          url = addParamToUrl(url, options.parameters);\r\n        }\r\n      }\r\n\r\n      xhr.open(method, url, true);\r\n\r\n      if (method === 'POST' || method === 'PUT') {\r\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n      }\r\n\r\n      xhr.send(body);\r\n      return xhr;\r\n    }\r\n\r\n    fabric.util.request = request;\r\n  })();\r\n\r\n\r\n  /**\r\n   * Wrapper around `console.log` (when available)\r\n   * @param {*} [values] Values to log\r\n   */\r\n  fabric.log = function() { };\r\n\r\n  /**\r\n   * Wrapper around `console.warn` (when available)\r\n   * @param {*} [values] Values to log as a warning\r\n   */\r\n  fabric.warn = function() { };\r\n\r\n  /* eslint-disable */\r\n  if (typeof console !== 'undefined') {\r\n\r\n    ['log', 'warn'].forEach(function(methodName) {\r\n\r\n      if (typeof console[methodName] !== 'undefined' &&\r\n          typeof console[methodName].apply === 'function') {\r\n\r\n        fabric[methodName] = function() {\r\n          return console[methodName].apply(console, arguments);\r\n        };\r\n      }\r\n    });\r\n  }\r\n  /* eslint-enable */\r\n\r\n\r\n  (function() {\r\n\r\n    function noop() {\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\r\n     * @memberOf fabric.util\r\n     * @param {Object} [options] Animation options\r\n     * @param {Function} [options.onChange] Callback; invoked on every value change\r\n     * @param {Function} [options.onComplete] Callback; invoked when value change is completed\r\n     * @param {Number} [options.startValue=0] Starting value\r\n     * @param {Number} [options.endValue=100] Ending value\r\n     * @param {Number} [options.byValue=100] Value to modify the property by\r\n     * @param {Function} [options.easing] Easing function\r\n     * @param {Number} [options.duration=500] Duration of change (in ms)\r\n     */\r\n    function animate(options) {\r\n\r\n      requestAnimFrame(function(timestamp) {\r\n        options || (options = { });\r\n\r\n        var start = timestamp || +new Date(),\r\n            duration = options.duration || 500,\r\n            finish = start + duration, time,\r\n            onChange = options.onChange || noop,\r\n            abort = options.abort || noop,\r\n            onComplete = options.onComplete || noop,\r\n            easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\r\n            startValue = 'startValue' in options ? options.startValue : 0,\r\n            endValue = 'endValue' in options ? options.endValue : 100,\r\n            byValue = options.byValue || endValue - startValue;\r\n\r\n        options.onStart && options.onStart();\r\n\r\n        (function tick(ticktime) {\r\n          if (abort()) {\r\n            onComplete(endValue, 1, 1);\r\n            return;\r\n          }\r\n          time = ticktime || +new Date();\r\n          var currentTime = time > finish ? duration : (time - start),\r\n              timePerc = currentTime / duration,\r\n              current = easing(currentTime, startValue, byValue, duration),\r\n              valuePerc = Math.abs((current - startValue) / byValue);\r\n          onChange(current, valuePerc, timePerc);\r\n          if (time > finish) {\r\n            options.onComplete && options.onComplete();\r\n            return;\r\n          }\r\n          requestAnimFrame(tick);\r\n        })(start);\r\n      });\r\n\r\n    }\r\n\r\n    var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\r\n                            fabric.window.webkitRequestAnimationFrame ||\r\n                            fabric.window.mozRequestAnimationFrame    ||\r\n                            fabric.window.oRequestAnimationFrame      ||\r\n                            fabric.window.msRequestAnimationFrame     ||\r\n                            function(callback) {\r\n                              return fabric.window.setTimeout(callback, 1000 / 60);\r\n                            };\r\n\r\n    var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\r\n\r\n    /**\r\n     * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n     * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\r\n     * @memberOf fabric.util\r\n     * @param {Function} callback Callback to invoke\r\n     * @param {DOMElement} element optional Element to associate with animation\r\n     */\r\n    function requestAnimFrame() {\r\n      return _requestAnimFrame.apply(fabric.window, arguments);\r\n    }\r\n\r\n    function cancelAnimFrame() {\r\n      return _cancelAnimFrame.apply(fabric.window, arguments);\r\n    }\r\n\r\n    fabric.util.animate = animate;\r\n    fabric.util.requestAnimFrame = requestAnimFrame;\r\n    fabric.util.cancelAnimFrame = cancelAnimFrame;\r\n  })();\r\n\r\n\r\n  (function() {\r\n    // Calculate an in-between color. Returns a \"rgba()\" string.\r\n    // Credit: Edwin Martin <edwin@bitstorm.org>\r\n    //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\r\n    function calculateColor(begin, end, pos) {\r\n      var color = 'rgba('\r\n          + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\r\n          + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\r\n          + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\r\n\r\n      color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\r\n      color += ')';\r\n      return color;\r\n    }\r\n\r\n    /**\r\n     * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\r\n     * @memberOf fabric.util\r\n     * @param {String} fromColor The starting color in hex or rgb(a) format.\r\n     * @param {String} toColor The starting color in hex or rgb(a) format.\r\n     * @param {Number} [duration] Duration of change (in ms).\r\n     * @param {Object} [options] Animation options\r\n     * @param {Function} [options.onChange] Callback; invoked on every value change\r\n     * @param {Function} [options.onComplete] Callback; invoked when value change is completed\r\n     * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\r\n     */\r\n    function animateColor(fromColor, toColor, duration, options) {\r\n      var startColor = new fabric.Color(fromColor).getSource(),\r\n          endColor = new fabric.Color(toColor).getSource();\r\n\r\n      options = options || {};\r\n\r\n      fabric.util.animate(fabric.util.object.extend(options, {\r\n        duration: duration || 500,\r\n        startValue: startColor,\r\n        endValue: endColor,\r\n        byValue: endColor,\r\n        easing: function (currentTime, startValue, byValue, duration) {\r\n          var posValue = options.colorEasing\r\n            ? options.colorEasing(currentTime, duration)\r\n            : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\r\n          return calculateColor(startValue, byValue, posValue);\r\n        }\r\n      }));\r\n    }\r\n\r\n    fabric.util.animateColor = animateColor;\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function normalize(a, c, p, s) {\r\n      if (a < Math.abs(c)) {\r\n        a = c;\r\n        s = p / 4;\r\n      }\r\n      else {\r\n        //handle the 0/0 case:\r\n        if (c === 0 && a === 0) {\r\n          s = p / (2 * Math.PI) * Math.asin(1);\r\n        }\r\n        else {\r\n          s = p / (2 * Math.PI) * Math.asin(c / a);\r\n        }\r\n      }\r\n      return { a: a, c: c, p: p, s: s };\r\n    }\r\n\r\n    function elastic(opts, t, d) {\r\n      return opts.a *\r\n        Math.pow(2, 10 * (t -= 1)) *\r\n        Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\r\n    }\r\n\r\n    /**\r\n     * Cubic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutCubic(t, b, c, d) {\r\n      return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Cubic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutCubic(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * t * t * t + b;\r\n      }\r\n      return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Quartic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInQuart(t, b, c, d) {\r\n      return c * (t /= d) * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * Quartic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutQuart(t, b, c, d) {\r\n      return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Quartic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutQuart(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * t * t * t * t + b;\r\n      }\r\n      return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Quintic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInQuint(t, b, c, d) {\r\n      return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * Quintic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutQuint(t, b, c, d) {\r\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Quintic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutQuint(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * t * t * t * t * t + b;\r\n      }\r\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Sinusoidal easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInSine(t, b, c, d) {\r\n      return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n    }\r\n\r\n    /**\r\n     * Sinusoidal easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutSine(t, b, c, d) {\r\n      return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n    }\r\n\r\n    /**\r\n     * Sinusoidal easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutSine(t, b, c, d) {\r\n      return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Exponential easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInExpo(t, b, c, d) {\r\n      return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n    }\r\n\r\n    /**\r\n     * Exponential easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutExpo(t, b, c, d) {\r\n      return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Exponential easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutExpo(t, b, c, d) {\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      if (t === d) {\r\n        return b + c;\r\n      }\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n      }\r\n      return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Circular easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInCirc(t, b, c, d) {\r\n      return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Circular easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutCirc(t, b, c, d) {\r\n      return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n\r\n    /**\r\n     * Circular easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutCirc(t, b, c, d) {\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n      }\r\n      return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Elastic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInElastic(t, b, c, d) {\r\n      var s = 1.70158, p = 0, a = c;\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      t /= d;\r\n      if (t === 1) {\r\n        return b + c;\r\n      }\r\n      if (!p) {\r\n        p = d * 0.3;\r\n      }\r\n      var opts = normalize(a, c, p, s);\r\n      return -elastic(opts, t, d) + b;\r\n    }\r\n\r\n    /**\r\n     * Elastic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutElastic(t, b, c, d) {\r\n      var s = 1.70158, p = 0, a = c;\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      t /= d;\r\n      if (t === 1) {\r\n        return b + c;\r\n      }\r\n      if (!p) {\r\n        p = d * 0.3;\r\n      }\r\n      var opts = normalize(a, c, p, s);\r\n      return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\r\n    }\r\n\r\n    /**\r\n     * Elastic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutElastic(t, b, c, d) {\r\n      var s = 1.70158, p = 0, a = c;\r\n      if (t === 0) {\r\n        return b;\r\n      }\r\n      t /= d / 2;\r\n      if (t === 2) {\r\n        return b + c;\r\n      }\r\n      if (!p) {\r\n        p = d * (0.3 * 1.5);\r\n      }\r\n      var opts = normalize(a, c, p, s);\r\n      if (t < 1) {\r\n        return -0.5 * elastic(opts, t, d) + b;\r\n      }\r\n      return opts.a * Math.pow(2, -10 * (t -= 1)) *\r\n        Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\r\n    }\r\n\r\n    /**\r\n     * Backwards easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInBack(t, b, c, d, s) {\r\n      if (s === undefined) {\r\n        s = 1.70158;\r\n      }\r\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n\r\n    /**\r\n     * Backwards easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutBack(t, b, c, d, s) {\r\n      if (s === undefined) {\r\n        s = 1.70158;\r\n      }\r\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * Backwards easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutBack(t, b, c, d, s) {\r\n      if (s === undefined) {\r\n        s = 1.70158;\r\n      }\r\n      t /= d / 2;\r\n      if (t < 1) {\r\n        return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n      }\r\n      return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * Bouncing easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInBounce(t, b, c, d) {\r\n      return c - easeOutBounce (d - t, 0, c, d) + b;\r\n    }\r\n\r\n    /**\r\n     * Bouncing easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeOutBounce(t, b, c, d) {\r\n      if ((t /= d) < (1 / 2.75)) {\r\n        return c * (7.5625 * t * t) + b;\r\n      }\r\n      else if (t < (2 / 2.75)) {\r\n        return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\r\n      }\r\n      else if (t < (2.5 / 2.75)) {\r\n        return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\r\n      }\r\n      else {\r\n        return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Bouncing easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    function easeInOutBounce(t, b, c, d) {\r\n      if (t < d / 2) {\r\n        return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\r\n      }\r\n      return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\r\n    }\r\n\r\n    /**\r\n     * Easing functions\r\n     * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\r\n     * @namespace fabric.util.ease\r\n     */\r\n    fabric.util.ease = {\r\n\r\n      /**\r\n       * Quadratic easing in\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeInQuad: function(t, b, c, d) {\r\n        return c * (t /= d) * t + b;\r\n      },\r\n\r\n      /**\r\n       * Quadratic easing out\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeOutQuad: function(t, b, c, d) {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n      },\r\n\r\n      /**\r\n       * Quadratic easing in and out\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeInOutQuad: function(t, b, c, d) {\r\n        t /= (d / 2);\r\n        if (t < 1) {\r\n          return c / 2 * t * t + b;\r\n        }\r\n        return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n      },\r\n\r\n      /**\r\n       * Cubic easing in\r\n       * @memberOf fabric.util.ease\r\n       */\r\n      easeInCubic: function(t, b, c, d) {\r\n        return c * (t /= d) * t * t + b;\r\n      },\r\n\r\n      easeOutCubic: easeOutCubic,\r\n      easeInOutCubic: easeInOutCubic,\r\n      easeInQuart: easeInQuart,\r\n      easeOutQuart: easeOutQuart,\r\n      easeInOutQuart: easeInOutQuart,\r\n      easeInQuint: easeInQuint,\r\n      easeOutQuint: easeOutQuint,\r\n      easeInOutQuint: easeInOutQuint,\r\n      easeInSine: easeInSine,\r\n      easeOutSine: easeOutSine,\r\n      easeInOutSine: easeInOutSine,\r\n      easeInExpo: easeInExpo,\r\n      easeOutExpo: easeOutExpo,\r\n      easeInOutExpo: easeInOutExpo,\r\n      easeInCirc: easeInCirc,\r\n      easeOutCirc: easeOutCirc,\r\n      easeInOutCirc: easeInOutCirc,\r\n      easeInElastic: easeInElastic,\r\n      easeOutElastic: easeOutElastic,\r\n      easeInOutElastic: easeInOutElastic,\r\n      easeInBack: easeInBack,\r\n      easeOutBack: easeOutBack,\r\n      easeInOutBack: easeInOutBack,\r\n      easeInBounce: easeInBounce,\r\n      easeOutBounce: easeOutBounce,\r\n      easeInOutBounce: easeInOutBounce\r\n    };\r\n\r\n  })();\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * @name fabric\r\n     * @namespace\r\n     */\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        clone = fabric.util.object.clone,\r\n        toFixed = fabric.util.toFixed,\r\n        parseUnit = fabric.util.parseUnit,\r\n        multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\r\n\r\n        svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\r\n          'image', 'text', 'linearGradient', 'radialGradient', 'stop'],\r\n        svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\r\n        svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\r\n        svgValidParents = ['symbol', 'g', 'a', 'svg'],\r\n\r\n        attributesMap = {\r\n          cx:                   'left',\r\n          x:                    'left',\r\n          r:                    'radius',\r\n          cy:                   'top',\r\n          y:                    'top',\r\n          display:              'visible',\r\n          visibility:           'visible',\r\n          transform:            'transformMatrix',\r\n          'fill-opacity':       'fillOpacity',\r\n          'fill-rule':          'fillRule',\r\n          'font-family':        'fontFamily',\r\n          'font-size':          'fontSize',\r\n          'font-style':         'fontStyle',\r\n          'font-weight':        'fontWeight',\r\n          'letter-spacing':     'charSpacing',\r\n          'paint-order':        'paintFirst',\r\n          'stroke-dasharray':   'strokeDashArray',\r\n          'stroke-linecap':     'strokeLineCap',\r\n          'stroke-linejoin':    'strokeLineJoin',\r\n          'stroke-miterlimit':  'strokeMiterLimit',\r\n          'stroke-opacity':     'strokeOpacity',\r\n          'stroke-width':       'strokeWidth',\r\n          'text-decoration':    'textDecoration',\r\n          'text-anchor':        'textAnchor',\r\n          opacity:              'opacity'\r\n        },\r\n\r\n        colorAttributes = {\r\n          stroke: 'strokeOpacity',\r\n          fill:   'fillOpacity'\r\n        };\r\n\r\n    fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\r\n    fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\r\n    fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\r\n    fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\r\n\r\n    fabric.cssRules = { };\r\n    fabric.gradientDefs = { };\r\n\r\n    function normalizeAttr(attr) {\r\n      // transform attribute names\r\n      if (attr in attributesMap) {\r\n        return attributesMap[attr];\r\n      }\r\n      return attr;\r\n    }\r\n\r\n    function normalizeValue(attr, value, parentAttributes, fontSize) {\r\n      var isArray = Object.prototype.toString.call(value) === '[object Array]',\r\n          parsed;\r\n\r\n      if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\r\n        value = '';\r\n      }\r\n      else if (attr === 'strokeDashArray') {\r\n        if (value === 'none') {\r\n          value = null;\r\n        }\r\n        else {\r\n          value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\r\n            return parseFloat(n);\r\n          });\r\n        }\r\n      }\r\n      else if (attr === 'transformMatrix') {\r\n        if (parentAttributes && parentAttributes.transformMatrix) {\r\n          value = multiplyTransformMatrices(\r\n            parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\r\n        }\r\n        else {\r\n          value = fabric.parseTransformAttribute(value);\r\n        }\r\n      }\r\n      else if (attr === 'visible') {\r\n        value = value !== 'none' && value !== 'hidden';\r\n        // display=none on parent element always takes precedence over child element\r\n        if (parentAttributes && parentAttributes.visible === false) {\r\n          value = false;\r\n        }\r\n      }\r\n      else if (attr === 'opacity') {\r\n        value = parseFloat(value);\r\n        if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\r\n          value *= parentAttributes.opacity;\r\n        }\r\n      }\r\n      else if (attr === 'textAnchor' /* text-anchor */) {\r\n        value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\r\n      }\r\n      else if (attr === 'charSpacing') {\r\n        // parseUnit returns px and we convert it to em\r\n        parsed = parseUnit(value, fontSize) / fontSize * 1000;\r\n      }\r\n      else if (attr === 'paintFirst') {\r\n        var fillIndex = value.indexOf('fill');\r\n        var strokeIndex = value.indexOf('stroke');\r\n        var value = 'fill';\r\n        if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\r\n          value = 'stroke';\r\n        }\r\n        else if (fillIndex === -1 && strokeIndex > -1) {\r\n          value = 'stroke';\r\n        }\r\n      }\r\n      else {\r\n        parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\r\n      }\r\n\r\n      return (!isArray && isNaN(parsed) ? value : parsed);\r\n    }\r\n\r\n    /**\r\n      * @private\r\n      */\r\n    function getSvgRegex(arr) {\r\n      return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} attributes Array of attributes to parse\r\n     */\r\n    function _setStrokeFillOpacity(attributes) {\r\n      for (var attr in colorAttributes) {\r\n\r\n        if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\r\n          continue;\r\n        }\r\n\r\n        if (typeof attributes[attr] === 'undefined') {\r\n          if (!fabric.Object.prototype[attr]) {\r\n            continue;\r\n          }\r\n          attributes[attr] = fabric.Object.prototype[attr];\r\n        }\r\n\r\n        if (attributes[attr].indexOf('url(') === 0) {\r\n          continue;\r\n        }\r\n\r\n        var color = new fabric.Color(attributes[attr]);\r\n        attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\r\n      }\r\n      return attributes;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function _getMultipleNodes(doc, nodeNames) {\r\n      var nodeName, nodeArray = [], nodeList, i, len;\r\n      for (i = 0, len = nodeNames.length; i < len; i++) {\r\n        nodeName = nodeNames[i];\r\n        nodeList = doc.getElementsByTagName(nodeName);\r\n        nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\r\n      }\r\n      return nodeArray;\r\n    }\r\n\r\n    /**\r\n     * Parses \"transform\" attribute, returning an array of values\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric\r\n     * @param {String} attributeValue String containing attribute value\r\n     * @return {Array} Array of 6 elements representing transformation matrix\r\n     */\r\n    fabric.parseTransformAttribute = (function() {\r\n      function rotateMatrix(matrix, args) {\r\n        var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\r\n            x = 0, y = 0;\r\n        if (args.length === 3) {\r\n          x = args[1];\r\n          y = args[2];\r\n        }\r\n\r\n        matrix[0] = cos;\r\n        matrix[1] = sin;\r\n        matrix[2] = -sin;\r\n        matrix[3] = cos;\r\n        matrix[4] = x - (cos * x - sin * y);\r\n        matrix[5] = y - (sin * x + cos * y);\r\n      }\r\n\r\n      function scaleMatrix(matrix, args) {\r\n        var multiplierX = args[0],\r\n            multiplierY = (args.length === 2) ? args[1] : args[0];\r\n\r\n        matrix[0] = multiplierX;\r\n        matrix[3] = multiplierY;\r\n      }\r\n\r\n      function skewMatrix(matrix, args, pos) {\r\n        matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\r\n      }\r\n\r\n      function translateMatrix(matrix, args) {\r\n        matrix[4] = args[0];\r\n        if (args.length === 2) {\r\n          matrix[5] = args[1];\r\n        }\r\n      }\r\n\r\n      // identity matrix\r\n      var iMatrix = [\r\n            1, // a\r\n            0, // b\r\n            0, // c\r\n            1, // d\r\n            0, // e\r\n            0  // f\r\n          ],\r\n\r\n          // == begin transform regexp\r\n          number = fabric.reNum,\r\n\r\n          commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\r\n\r\n          skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\r\n\r\n          skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\r\n\r\n          rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                      commaWsp + '(' + number + ')' +\r\n                      commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n          scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                      commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n          translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                      commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n          matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' + commaWsp +\r\n                    '(' + number + ')' +\r\n                    '\\\\s*\\\\))',\r\n\r\n          transform = '(?:' +\r\n                      matrix + '|' +\r\n                      translate + '|' +\r\n                      scale + '|' +\r\n                      rotate + '|' +\r\n                      skewX + '|' +\r\n                      skewY +\r\n                      ')',\r\n\r\n          transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\r\n\r\n          transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\r\n\r\n          // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\r\n          reTransformList = new RegExp(transformList),\r\n          // == end transform regexp\r\n\r\n          reTransform = new RegExp(transform, 'g');\r\n\r\n      return function(attributeValue) {\r\n\r\n        // start with identity matrix\r\n        var matrix = iMatrix.concat(),\r\n            matrices = [];\r\n\r\n        // return if no argument was given or\r\n        // an argument does not match transform attribute regexp\r\n        if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\r\n          return matrix;\r\n        }\r\n\r\n        attributeValue.replace(reTransform, function(match) {\r\n\r\n          var m = new RegExp(transform).exec(match).filter(function (match) {\r\n                // match !== '' && match != null\r\n                return (!!match);\r\n              }),\r\n              operation = m[1],\r\n              args = m.slice(2).map(parseFloat);\r\n\r\n          switch (operation) {\r\n            case 'translate':\r\n              translateMatrix(matrix, args);\r\n              break;\r\n            case 'rotate':\r\n              args[0] = fabric.util.degreesToRadians(args[0]);\r\n              rotateMatrix(matrix, args);\r\n              break;\r\n            case 'scale':\r\n              scaleMatrix(matrix, args);\r\n              break;\r\n            case 'skewX':\r\n              skewMatrix(matrix, args, 2);\r\n              break;\r\n            case 'skewY':\r\n              skewMatrix(matrix, args, 1);\r\n              break;\r\n            case 'matrix':\r\n              matrix = args;\r\n              break;\r\n          }\r\n\r\n          // snapshot current matrix into matrices array\r\n          matrices.push(matrix.concat());\r\n          // reset\r\n          matrix = iMatrix.concat();\r\n        });\r\n\r\n        var combinedMatrix = matrices[0];\r\n        while (matrices.length > 1) {\r\n          matrices.shift();\r\n          combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\r\n        }\r\n        return combinedMatrix;\r\n      };\r\n    })();\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function parseStyleString(style, oStyle) {\r\n      var attr, value;\r\n      style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\r\n        var pair = chunk.split(':');\r\n\r\n        attr = pair[0].trim().toLowerCase();\r\n        value =  pair[1].trim();\r\n\r\n        oStyle[attr] = value;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function parseStyleObject(style, oStyle) {\r\n      var attr, value;\r\n      for (var prop in style) {\r\n        if (typeof style[prop] === 'undefined') {\r\n          continue;\r\n        }\r\n\r\n        attr = prop.toLowerCase();\r\n        value = style[prop];\r\n\r\n        oStyle[attr] = value;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function getGlobalStylesForElement(element, svgUid) {\r\n      var styles = { };\r\n      for (var rule in fabric.cssRules[svgUid]) {\r\n        if (elementMatchesRule(element, rule.split(' '))) {\r\n          for (var property in fabric.cssRules[svgUid][rule]) {\r\n            styles[property] = fabric.cssRules[svgUid][rule][property];\r\n          }\r\n        }\r\n      }\r\n      return styles;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function elementMatchesRule(element, selectors) {\r\n      var firstMatching, parentMatching = true;\r\n      //start from rightmost selector.\r\n      firstMatching = selectorMatches(element, selectors.pop());\r\n      if (firstMatching && selectors.length) {\r\n        parentMatching = doesSomeParentMatch(element, selectors);\r\n      }\r\n      return firstMatching && parentMatching && (selectors.length === 0);\r\n    }\r\n\r\n    function doesSomeParentMatch(element, selectors) {\r\n      var selector, parentMatching = true;\r\n      while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\r\n        if (parentMatching) {\r\n          selector = selectors.pop();\r\n        }\r\n        element = element.parentNode;\r\n        parentMatching = selectorMatches(element, selector);\r\n      }\r\n      return selectors.length === 0;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function selectorMatches(element, selector) {\r\n      var nodeName = element.nodeName,\r\n          classNames = element.getAttribute('class'),\r\n          id = element.getAttribute('id'), matcher, i;\r\n      // i check if a selector matches slicing away part from it.\r\n      // if i get empty string i should match\r\n      matcher = new RegExp('^' + nodeName, 'i');\r\n      selector = selector.replace(matcher, '');\r\n      if (id && selector.length) {\r\n        matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\r\n        selector = selector.replace(matcher, '');\r\n      }\r\n      if (classNames && selector.length) {\r\n        classNames = classNames.split(' ');\r\n        for (i = classNames.length; i--;) {\r\n          matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\r\n          selector = selector.replace(matcher, '');\r\n        }\r\n      }\r\n      return selector.length === 0;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * to support IE8 missing getElementById on SVGdocument\r\n     */\r\n    function elementById(doc, id) {\r\n      var el;\r\n      doc.getElementById && (el = doc.getElementById(id));\r\n      if (el) {\r\n        return el;\r\n      }\r\n      var node, i, len, nodelist = doc.getElementsByTagName('*');\r\n      for (i = 0, len = nodelist.length; i < len; i++) {\r\n        node = nodelist[i];\r\n        if (id === node.getAttribute('id')) {\r\n          return node;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function parseUseDirectives(doc) {\r\n      var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\r\n\r\n      while (nodelist.length && i < nodelist.length) {\r\n        var el = nodelist[i],\r\n            xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\r\n            x = el.getAttribute('x') || 0,\r\n            y = el.getAttribute('y') || 0,\r\n            el2 = elementById(doc, xlink).cloneNode(true),\r\n            currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\r\n            parentNode, oldLength = nodelist.length, attr, j, attrs, len;\r\n\r\n        applyViewboxTransform(el2);\r\n        if (/^svg$/i.test(el2.nodeName)) {\r\n          var el3 = el2.ownerDocument.createElement('g');\r\n          for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\r\n            attr = attrs.item(j);\r\n            el3.setAttribute(attr.nodeName, attr.nodeValue);\r\n          }\r\n          // el2.firstChild != null\r\n          while (el2.firstChild) {\r\n            el3.appendChild(el2.firstChild);\r\n          }\r\n          el2 = el3;\r\n        }\r\n\r\n        for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\r\n          attr = attrs.item(j);\r\n          if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\r\n            attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\r\n            continue;\r\n          }\r\n\r\n          if (attr.nodeName === 'transform') {\r\n            currentTrans = attr.nodeValue + ' ' + currentTrans;\r\n          }\r\n          else {\r\n            el2.setAttribute(attr.nodeName, attr.nodeValue);\r\n          }\r\n        }\r\n\r\n        el2.setAttribute('transform', currentTrans);\r\n        el2.setAttribute('instantiated_by_use', '1');\r\n        el2.removeAttribute('id');\r\n        parentNode = el.parentNode;\r\n        parentNode.replaceChild(el2, el);\r\n        // some browsers do not shorten nodelist after replaceChild (IE8)\r\n        if (nodelist.length === oldLength) {\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\r\n    // matches, e.g.: +14.56e-12, etc.\r\n    var reViewBoxAttrValue = new RegExp(\r\n      '^' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n      '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\r\n      '$'\r\n    );\r\n\r\n    /**\r\n     * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\r\n     */\r\n    function applyViewboxTransform(element) {\r\n\r\n      var viewBoxAttr = element.getAttribute('viewBox'),\r\n          scaleX = 1,\r\n          scaleY = 1,\r\n          minX = 0,\r\n          minY = 0,\r\n          viewBoxWidth, viewBoxHeight, matrix, el,\r\n          widthAttr = element.getAttribute('width'),\r\n          heightAttr = element.getAttribute('height'),\r\n          x = element.getAttribute('x') || 0,\r\n          y = element.getAttribute('y') || 0,\r\n          preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\r\n          missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\r\n                             || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\r\n          missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\r\n          toBeParsed = missingViewBox && missingDimAttr,\r\n          parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\r\n\r\n      parsedDim.width = 0;\r\n      parsedDim.height = 0;\r\n      parsedDim.toBeParsed = toBeParsed;\r\n\r\n      if (toBeParsed) {\r\n        return parsedDim;\r\n      }\r\n\r\n      if (missingViewBox) {\r\n        parsedDim.width = parseUnit(widthAttr);\r\n        parsedDim.height = parseUnit(heightAttr);\r\n        return parsedDim;\r\n      }\r\n\r\n      minX = -parseFloat(viewBoxAttr[1]);\r\n      minY = -parseFloat(viewBoxAttr[2]);\r\n      viewBoxWidth = parseFloat(viewBoxAttr[3]);\r\n      viewBoxHeight = parseFloat(viewBoxAttr[4]);\r\n\r\n      if (!missingDimAttr) {\r\n        parsedDim.width = parseUnit(widthAttr);\r\n        parsedDim.height = parseUnit(heightAttr);\r\n        scaleX = parsedDim.width / viewBoxWidth;\r\n        scaleY = parsedDim.height / viewBoxHeight;\r\n      }\r\n      else {\r\n        parsedDim.width = viewBoxWidth;\r\n        parsedDim.height = viewBoxHeight;\r\n      }\r\n\r\n      // default is to preserve aspect ratio\r\n      preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\r\n      if (preserveAspectRatio.alignX !== 'none') {\r\n        //translate all container for the effect of Mid, Min, Max\r\n        if (preserveAspectRatio.meetOrSlice === 'meet') {\r\n          scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\r\n          // calculate additional translation to move the viewbox\r\n        }\r\n        if (preserveAspectRatio.meetOrSlice === 'slice') {\r\n          scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\r\n          // calculate additional translation to move the viewbox\r\n        }\r\n        widthDiff = parsedDim.width - viewBoxWidth * scaleX;\r\n        heightDiff = parsedDim.height - viewBoxHeight * scaleX;\r\n        if (preserveAspectRatio.alignX === 'Mid') {\r\n          widthDiff /= 2;\r\n        }\r\n        if (preserveAspectRatio.alignY === 'Mid') {\r\n          heightDiff /= 2;\r\n        }\r\n        if (preserveAspectRatio.alignX === 'Min') {\r\n          widthDiff = 0;\r\n        }\r\n        if (preserveAspectRatio.alignY === 'Min') {\r\n          heightDiff = 0;\r\n        }\r\n      }\r\n\r\n      if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\r\n        return parsedDim;\r\n      }\r\n\r\n      if (x || y) {\r\n        translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\r\n      }\r\n\r\n      matrix = translateMatrix + ' matrix(' + scaleX +\r\n                    ' 0' +\r\n                    ' 0 ' +\r\n                    scaleY + ' ' +\r\n                    (minX * scaleX + widthDiff) + ' ' +\r\n                    (minY * scaleY + heightDiff) + ') ';\r\n\r\n      if (element.nodeName === 'svg') {\r\n        el = element.ownerDocument.createElement('g');\r\n        // element.firstChild != null\r\n        while (element.firstChild) {\r\n          el.appendChild(element.firstChild);\r\n        }\r\n        element.appendChild(el);\r\n      }\r\n      else {\r\n        el = element;\r\n        matrix = el.getAttribute('transform') + matrix;\r\n      }\r\n\r\n      el.setAttribute('transform', matrix);\r\n      return parsedDim;\r\n    }\r\n\r\n    function hasAncestorWithNodeName(element, nodeName) {\r\n      while (element && (element = element.parentNode)) {\r\n        if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\r\n          && !element.getAttribute('instantiated_by_use')) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric\r\n     * @param {SVGDocument} doc SVG document to parse\r\n     * @param {Function} callback Callback to call when parsing is finished;\r\n     * It's being passed an array of elements (parsed from a document).\r\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n     * @param {Object} [parsingOptions] options for parsing document\r\n     * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\r\n     */\r\n    fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\r\n      if (!doc) {\r\n        return;\r\n      }\r\n\r\n      parseUseDirectives(doc);\r\n\r\n      var svgUid =  fabric.Object.__uid++, i, len,\r\n          options = applyViewboxTransform(doc),\r\n          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\r\n      options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\r\n      options.svgUid = svgUid;\r\n\r\n      if (descendants.length === 0 && fabric.isLikelyNode) {\r\n        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\r\n        // https://github.com/ajaxorg/node-o3-xml/issues/21\r\n        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\r\n        var arr = [];\r\n        for (i = 0, len = descendants.length; i < len; i++) {\r\n          arr[i] = descendants[i];\r\n        }\r\n        descendants = arr;\r\n      }\r\n\r\n      var elements = descendants.filter(function(el) {\r\n        applyViewboxTransform(el);\r\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\r\n              !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\r\n      });\r\n\r\n      if (!elements || (elements && !elements.length)) {\r\n        callback && callback([], {});\r\n        return;\r\n      }\r\n\r\n      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\r\n      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\r\n      // Precedence of rules:   style > class > attribute\r\n      fabric.parseElements(elements, function(instances, elements) {\r\n        if (callback) {\r\n          callback(instances, options, elements, descendants);\r\n        }\r\n      }, clone(options), reviver, parsingOptions);\r\n    };\r\n\r\n    var reFontDeclaration = new RegExp(\r\n      '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\r\n      '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\r\n        fabric.reNum +\r\n      '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\r\n\r\n    extend(fabric, {\r\n      /**\r\n       * Parses a short font declaration, building adding its properties to a style object\r\n       * @static\r\n       * @function\r\n       * @memberOf fabric\r\n       * @param {String} value font declaration\r\n       * @param {Object} oStyle definition\r\n       */\r\n      parseFontDeclaration: function(value, oStyle) {\r\n        var match = value.match(reFontDeclaration);\r\n\r\n        if (!match) {\r\n          return;\r\n        }\r\n        var fontStyle = match[1],\r\n            // font variant is not used\r\n            // fontVariant = match[2],\r\n            fontWeight = match[3],\r\n            fontSize = match[4],\r\n            lineHeight = match[5],\r\n            fontFamily = match[6];\r\n\r\n        if (fontStyle) {\r\n          oStyle.fontStyle = fontStyle;\r\n        }\r\n        if (fontWeight) {\r\n          oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\r\n        }\r\n        if (fontSize) {\r\n          oStyle.fontSize = parseUnit(fontSize);\r\n        }\r\n        if (fontFamily) {\r\n          oStyle.fontFamily = fontFamily;\r\n        }\r\n        if (lineHeight) {\r\n          oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Parses an SVG document, returning all of the gradient declarations found in it\r\n       * @static\r\n       * @function\r\n       * @memberOf fabric\r\n       * @param {SVGDocument} doc SVG document to parse\r\n       * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\r\n       */\r\n      getGradientDefs: function(doc) {\r\n        var tagArray = [\r\n              'linearGradient',\r\n              'radialGradient',\r\n              'svg:linearGradient',\r\n              'svg:radialGradient'],\r\n            elList = _getMultipleNodes(doc, tagArray),\r\n            el, j = 0, id, xlink,\r\n            gradientDefs = { }, idsToXlinkMap = { };\r\n        j = elList.length;\r\n\r\n        while (j--) {\r\n          el = elList[j];\r\n          xlink = el.getAttribute('xlink:href');\r\n          id = el.getAttribute('id');\r\n          if (xlink) {\r\n            idsToXlinkMap[id] = xlink.substr(1);\r\n          }\r\n          gradientDefs[id] = el;\r\n        }\r\n\r\n        for (id in idsToXlinkMap) {\r\n          var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\r\n          el = gradientDefs[id];\r\n          while (el2.firstChild) {\r\n            el.appendChild(el2.firstChild);\r\n          }\r\n        }\r\n        return gradientDefs;\r\n      },\r\n\r\n      /**\r\n       * Returns an object of attributes' name/value, given element and an array of attribute names;\r\n       * Parses parent \"g\" nodes recursively upwards.\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {DOMElement} element Element to parse\r\n       * @param {Array} attributes Array of attributes to parse\r\n       * @return {Object} object containing parsed attributes' names/values\r\n       */\r\n      parseAttributes: function(element, attributes, svgUid) {\r\n\r\n        if (!element) {\r\n          return;\r\n        }\r\n\r\n        var value,\r\n            parentAttributes = { },\r\n            fontSize;\r\n\r\n        if (typeof svgUid === 'undefined') {\r\n          svgUid = element.getAttribute('svgUid');\r\n        }\r\n        // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\r\n        if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\r\n          parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\r\n        }\r\n        fontSize = (parentAttributes && parentAttributes.fontSize ) ||\r\n                   element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n\r\n        var ownAttributes = attributes.reduce(function(memo, attr) {\r\n          value = element.getAttribute(attr);\r\n          if (value) { // eslint-disable-line\r\n            memo[attr] = value;\r\n          }\r\n          return memo;\r\n        }, { });\r\n        // add values parsed from style, which take precedence over attributes\r\n        // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\r\n        ownAttributes = extend(ownAttributes,\r\n          extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\r\n\r\n        var normalizedAttr, normalizedValue, normalizedStyle = {};\r\n        for (var attr in ownAttributes) {\r\n          normalizedAttr = normalizeAttr(attr);\r\n          normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\r\n          normalizedStyle[normalizedAttr] = normalizedValue;\r\n        }\r\n        if (normalizedStyle && normalizedStyle.font) {\r\n          fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\r\n        }\r\n        var mergedAttrs = extend(parentAttributes, normalizedStyle);\r\n        return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\r\n      },\r\n\r\n      /**\r\n       * Transforms an array of svg elements to corresponding fabric.* instances\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {Array} elements Array of elements to parse\r\n       * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\r\n       * @param {Object} [options] Options object\r\n       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n       */\r\n      parseElements: function(elements, callback, options, reviver, parsingOptions) {\r\n        new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\r\n      },\r\n\r\n      /**\r\n       * Parses \"style\" attribute, retuning an object with values\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {SVGElement} element Element to parse\r\n       * @return {Object} Objects with values parsed from style attribute of an element\r\n       */\r\n      parseStyleAttribute: function(element) {\r\n        var oStyle = { },\r\n            style = element.getAttribute('style');\r\n\r\n        if (!style) {\r\n          return oStyle;\r\n        }\r\n\r\n        if (typeof style === 'string') {\r\n          parseStyleString(style, oStyle);\r\n        }\r\n        else {\r\n          parseStyleObject(style, oStyle);\r\n        }\r\n\r\n        return oStyle;\r\n      },\r\n\r\n      /**\r\n       * Parses \"points\" attribute, returning an array of values\r\n       * @static\r\n       * @memberOf fabric\r\n       * @param {String} points points attribute string\r\n       * @return {Array} array of points\r\n       */\r\n      parsePointsAttribute: function(points) {\r\n\r\n        // points attribute is required and must not be empty\r\n        if (!points) {\r\n          return null;\r\n        }\r\n\r\n        // replace commas with whitespace and remove bookending whitespace\r\n        points = points.replace(/,/g, ' ').trim();\r\n\r\n        points = points.split(/\\s+/);\r\n        var parsedPoints = [], i, len;\r\n\r\n        for (i = 0, len = points.length; i < len; i += 2) {\r\n          parsedPoints.push({\r\n            x: parseFloat(points[i]),\r\n            y: parseFloat(points[i + 1])\r\n          });\r\n        }\r\n\r\n        // odd number of points is an error\r\n        // if (parsedPoints.length % 2 !== 0) {\r\n        //   return null;\r\n        // }\r\n\r\n        return parsedPoints;\r\n      },\r\n\r\n      /**\r\n       * Returns CSS rules for a given SVG document\r\n       * @static\r\n       * @function\r\n       * @memberOf fabric\r\n       * @param {SVGDocument} doc SVG document to parse\r\n       * @return {Object} CSS rules of this document\r\n       */\r\n      getCSSRules: function(doc) {\r\n        var styles = doc.getElementsByTagName('style'), i, len,\r\n            allRules = { }, rules;\r\n\r\n        // very crude parsing of style contents\r\n        for (i = 0, len = styles.length; i < len; i++) {\r\n          // IE9 doesn't support textContent, but provides text instead.\r\n          var styleContents = styles[i].textContent || styles[i].text;\r\n\r\n          // remove comments\r\n          styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\r\n          if (styleContents.trim() === '') {\r\n            continue;\r\n          }\r\n          rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\r\n          rules = rules.map(function(rule) { return rule.trim(); });\r\n          // eslint-disable-next-line no-loop-func\r\n          rules.forEach(function(rule) {\r\n\r\n            var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\r\n                ruleObj = { }, declaration = match[2].trim(),\r\n                propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\r\n\r\n            for (i = 0, len = propertyValuePairs.length; i < len; i++) {\r\n              var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\r\n                  property = pair[0],\r\n                  value = pair[1];\r\n              ruleObj[property] = value;\r\n            }\r\n            rule = match[1];\r\n            rule.split(',').forEach(function(_rule) {\r\n              _rule = _rule.replace(/^svg/i, '').trim();\r\n              if (_rule === '') {\r\n                return;\r\n              }\r\n              if (allRules[_rule]) {\r\n                fabric.util.object.extend(allRules[_rule], ruleObj);\r\n              }\r\n              else {\r\n                allRules[_rule] = fabric.util.object.clone(ruleObj);\r\n              }\r\n            });\r\n          });\r\n        }\r\n        return allRules;\r\n      },\r\n\r\n      /**\r\n       * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\r\n       * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\r\n       * @memberOf fabric\r\n       * @param {String} url\r\n       * @param {Function} callback\r\n       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n       * @param {Object} [options] Object containing options for parsing\r\n       * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\r\n       */\r\n      loadSVGFromURL: function(url, callback, reviver, options) {\r\n\r\n        url = url.replace(/^\\n\\s*/, '').trim();\r\n        new fabric.util.request(url, {\r\n          method: 'get',\r\n          onComplete: onComplete\r\n        });\r\n\r\n        function onComplete(r) {\r\n\r\n          var xml = r.responseXML;\r\n          if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\r\n            xml = new ActiveXObject('Microsoft.XMLDOM');\r\n            xml.async = 'false';\r\n            //IE chokes on DOCTYPE\r\n            xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\r\n          }\r\n          if (!xml || !xml.documentElement) {\r\n            callback && callback(null);\r\n          }\r\n\r\n          fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\r\n            callback && callback(results, _options, elements, allElements);\r\n          }, reviver, options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\r\n       * @memberOf fabric\r\n       * @param {String} string\r\n       * @param {Function} callback\r\n       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n       * @param {Object} [options] Object containing options for parsing\r\n       * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\r\n       */\r\n      loadSVGFromString: function(string, callback, reviver, options) {\r\n        string = string.trim();\r\n        var doc;\r\n        if (typeof DOMParser !== 'undefined') {\r\n          var parser = new DOMParser();\r\n          if (parser && parser.parseFromString) {\r\n            doc = parser.parseFromString(string, 'text/xml');\r\n          }\r\n        }\r\n        else if (fabric.window.ActiveXObject) {\r\n          doc = new ActiveXObject('Microsoft.XMLDOM');\r\n          doc.async = 'false';\r\n          // IE chokes on DOCTYPE\r\n          doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\r\n        }\r\n\r\n        fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\r\n          callback(results, _options, elements, allElements);\r\n        }, reviver, options);\r\n      }\r\n    });\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  fabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\r\n    this.elements = elements;\r\n    this.callback = callback;\r\n    this.options = options;\r\n    this.reviver = reviver;\r\n    this.svgUid = (options && options.svgUid) || 0;\r\n    this.parsingOptions = parsingOptions;\r\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.parse = function() {\r\n    this.instances = new Array(this.elements.length);\r\n    this.numElements = this.elements.length;\r\n\r\n    this.createObjects();\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.createObjects = function() {\r\n    for (var i = 0, len = this.elements.length; i < len; i++) {\r\n      this.elements[i].setAttribute('svgUid', this.svgUid);\r\n      (function(_obj, i) {\r\n        setTimeout(function() {\r\n          _obj.createObject(_obj.elements[i], i);\r\n        }, 0);\r\n      })(this, i);\r\n    }\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.createObject = function(el, index) {\r\n    var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\r\n    if (klass && klass.fromElement) {\r\n      try {\r\n        this._createObject(klass, el, index);\r\n      }\r\n      catch (err) {\r\n        fabric.log(err);\r\n      }\r\n    }\r\n    else {\r\n      this.checkIfDone();\r\n    }\r\n  };\r\n\r\n  fabric.ElementsParser.prototype._createObject = function(klass, el, index) {\r\n    klass.fromElement(el, this.createCallback(index, el), this.options);\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.createCallback = function(index, el) {\r\n    var _this = this;\r\n    return function(obj) {\r\n      var _options;\r\n      _this.resolveGradient(obj, 'fill');\r\n      _this.resolveGradient(obj, 'stroke');\r\n      if (obj instanceof fabric.Image) {\r\n        _options = obj.parsePreserveAspectRatioAttribute(el);\r\n      }\r\n      obj._removeTransformMatrix(_options);\r\n      _this.reviver && _this.reviver(el, obj);\r\n      _this.instances[index] = obj;\r\n      _this.checkIfDone();\r\n    };\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\r\n\r\n    var instanceFillValue = obj[property];\r\n    if (!(/^url\\(/).test(instanceFillValue)) {\r\n      return;\r\n    }\r\n    var gradientId = this.regexUrl.exec(instanceFillValue)[1];\r\n    this.regexUrl.lastIndex = 0;\r\n    if (fabric.gradientDefs[this.svgUid][gradientId]) {\r\n      obj.set(property,\r\n        fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\r\n    }\r\n  };\r\n\r\n  fabric.ElementsParser.prototype.checkIfDone = function() {\r\n    if (--this.numElements === 0) {\r\n      this.instances = this.instances.filter(function(el) {\r\n        // eslint-disable-next-line no-eq-null, eqeqeq\r\n        return el != null;\r\n      });\r\n      this.callback(this.instances, this.elements);\r\n    }\r\n  };\r\n\r\n(function() {\r\n\r\n  /**\r\n   * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\r\n   * @static\r\n   * @memberOf fabric.util\r\n   * @param {Object} klass \"Class\" to create accessors for\r\n   */\r\n  fabric.util.createAccessors = function(klass) {\r\n    var proto = klass.prototype, i, propName,\r\n        capitalizedPropName, setterName, getterName;\r\n\r\n    for (i = proto.stateProperties.length; i--; ) {\r\n\r\n      propName = proto.stateProperties[i];\r\n      capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\r\n      setterName = 'set' + capitalizedPropName;\r\n      getterName = 'get' + capitalizedPropName;\r\n\r\n      // using `new Function` for better introspection\r\n      if (!proto[getterName]) {\r\n        proto[getterName] = (function(property) {\r\n          return new Function('return this.get(\"' + property + '\")');\r\n        })(propName);\r\n      }\r\n      if (!proto[setterName]) {\r\n        proto[setterName] = (function(property) {\r\n          return new Function('value', 'return this.set(\"' + property + '\", value)');\r\n        })(propName);\r\n      }\r\n    }\r\n  };\r\n\r\n  /** @lends fabric.Text.Prototype */\r\n  /**\r\n   * Retrieves object's fontSize\r\n   * @method getFontSize\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Font size (in pixels)\r\n   */\r\n\r\n  /**\r\n   * Sets object's fontSize\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setFontSize\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {Number} fontSize Font size (in pixels)\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's fontWeight\r\n   * @method getFontWeight\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {(String|Number)} Font weight\r\n   */\r\n\r\n  /**\r\n   * Sets object's fontWeight\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setFontWeight\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {(Number|String)} fontWeight Font weight\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's fontFamily\r\n   * @method getFontFamily\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Font family\r\n   */\r\n\r\n  /**\r\n   * Sets object's fontFamily\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setFontFamily\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} fontFamily Font family\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's text\r\n   * @method getText\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} text\r\n   */\r\n\r\n  /**\r\n   * Sets object's text\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setText\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} text Text\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's underline\r\n   * @method getUnderline\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {Boolean} underline enabled or disabled\r\n   */\r\n\r\n  /**\r\n   * Sets object's underline\r\n   * @method setUnderline\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {Boolean} underline Text decoration\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's fontStyle\r\n   * @method getFontStyle\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Font style\r\n   */\r\n\r\n  /**\r\n   * Sets object's fontStyle\r\n   * Does not update the object .width and .height,\r\n   * call .initDimensions() to update the values.\r\n   * @method setFontStyle\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} fontStyle Font style\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's lineHeight\r\n   * @method getLineHeight\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {Number} Line height\r\n   */\r\n\r\n  /**\r\n   * Sets object's lineHeight\r\n   * @method setLineHeight\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {Number} lineHeight Line height\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's textAlign\r\n   * @method getTextAlign\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Text alignment\r\n   */\r\n\r\n  /**\r\n   * Sets object's textAlign\r\n   * @method setTextAlign\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} textAlign Text alignment\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's textBackgroundColor\r\n   * @method getTextBackgroundColor\r\n   * @memberOf fabric.Text.prototype\r\n   * @return {String} Text background color\r\n   */\r\n\r\n  /**\r\n   * Sets object's textBackgroundColor\r\n   * @method setTextBackgroundColor\r\n   * @memberOf fabric.Text.prototype\r\n   * @param {String} textBackgroundColor Text background color\r\n   * @return {fabric.Text}\r\n   * @chainable\r\n   */\r\n\r\n  /** @lends fabric.Object.Prototype */\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#clipTo|clipping function}\r\n   * @method getClipTo\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Function}\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#clipTo|clipping function}\r\n   * @method setClipTo\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Function} clipTo Clipping function\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\r\n   * @method getTransformMatrix\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Array} transformMatrix\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\r\n   * @method setTransformMatrix\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Array} transformMatrix\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#visible|visible} state\r\n   * @method getVisible\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Boolean} True if visible\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#visible|visible} state\r\n   * @method setVisible\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Boolean} value visible value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#shadow|shadow}\r\n   * @method getShadow\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Object} Shadow instance\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#stroke|stroke}\r\n   * @method getStroke\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {String} stroke value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#stroke|stroke}\r\n   * @method setStroke\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {String} value stroke value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\r\n   * @method getStrokeWidth\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} strokeWidth value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\r\n   * @method setStrokeWidth\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value strokeWidth value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#originX|originX}\r\n   * @method getOriginX\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {String} originX value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#originX|originX}\r\n   * @method setOriginX\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {String} value originX value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#originY|originY}\r\n   * @method getOriginY\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {String} originY value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#originY|originY}\r\n   * @method setOriginY\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {String} value originY value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#fill|fill}\r\n   * @method getFill\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {String} Fill value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#fill|fill}\r\n   * @method setFill\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {String} value Fill value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#opacity|opacity}\r\n   * @method getOpacity\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} Opacity value (0-1)\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#opacity|opacity}\r\n   * @method setOpacity\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value Opacity value (0-1)\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\r\n   * @method getAngle\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number}\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#top|top position}\r\n   * @method getTop\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} Top value (in pixels)\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#top|top position}\r\n   * @method setTop\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value Top value (in pixels)\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#left|left position}\r\n   * @method getLeft\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} Left value (in pixels)\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#left|left position}\r\n   * @method setLeft\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value Left value (in pixels)\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\r\n   * @method getScaleX\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} scaleX value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#scaleX|scaleX} value\r\n   * @method setScaleX\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value scaleX value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\r\n   * @method getScaleY\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Number} scaleY value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#scaleY|scaleY} value\r\n   * @method setScaleY\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Number} value scaleY value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#flipX|flipX} value\r\n   * @method getFlipX\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Boolean} flipX value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#flipX|flipX} value\r\n   * @method setFlipX\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Boolean} value flipX value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n  /**\r\n   * Retrieves object's {@link fabric.Object#flipY|flipY} value\r\n   * @method getFlipY\r\n   * @memberOf fabric.Object.prototype\r\n   * @return {Boolean} flipY value\r\n   */\r\n\r\n  /**\r\n   * Sets object's {@link fabric.Object#flipY|flipY} value\r\n   * @method setFlipY\r\n   * @memberOf fabric.Object.prototype\r\n   * @param {Boolean} value flipY value\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\r\n\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Point) {\r\n      fabric.warn('fabric.Point is already defined');\r\n      return;\r\n    }\r\n\r\n    fabric.Point = Point;\r\n\r\n    /**\r\n     * Point class\r\n     * @class fabric.Point\r\n     * @memberOf fabric\r\n     * @constructor\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @return {fabric.Point} thisArg\r\n     */\r\n    function Point(x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n    }\r\n\r\n    Point.prototype = /** @lends fabric.Point.prototype */ {\r\n\r\n      type: 'point',\r\n\r\n      constructor: Point,\r\n\r\n      /**\r\n       * Adds another point to this one and returns another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} new Point instance with added values\r\n       */\r\n      add: function (that) {\r\n        return new Point(this.x + that.x, this.y + that.y);\r\n      },\r\n\r\n      /**\r\n       * Adds another point to this one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      addEquals: function (that) {\r\n        this.x += that.x;\r\n        this.y += that.y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Adds value to this point and returns a new one\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} new Point with added value\r\n       */\r\n      scalarAdd: function (scalar) {\r\n        return new Point(this.x + scalar, this.y + scalar);\r\n      },\r\n\r\n      /**\r\n       * Adds value to this point\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      scalarAddEquals: function (scalar) {\r\n        this.x += scalar;\r\n        this.y += scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Subtracts another point from this point and returns a new one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} new Point object with subtracted values\r\n       */\r\n      subtract: function (that) {\r\n        return new Point(this.x - that.x, this.y - that.y);\r\n      },\r\n\r\n      /**\r\n       * Subtracts another point from this point\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      subtractEquals: function (that) {\r\n        this.x -= that.x;\r\n        this.y -= that.y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Subtracts value from this point and returns a new one\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point}\r\n       */\r\n      scalarSubtract: function (scalar) {\r\n        return new Point(this.x - scalar, this.y - scalar);\r\n      },\r\n\r\n      /**\r\n       * Subtracts value from this point\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      scalarSubtractEquals: function (scalar) {\r\n        this.x -= scalar;\r\n        this.y -= scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Multiplies this point by a value and returns a new one\r\n       * TODO: rename in scalarMultiply in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point}\r\n       */\r\n      multiply: function (scalar) {\r\n        return new Point(this.x * scalar, this.y * scalar);\r\n      },\r\n\r\n      /**\r\n       * Multiplies this point by a value\r\n       * TODO: rename in scalarMultiplyEquals in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      multiplyEquals: function (scalar) {\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Divides this point by a value and returns a new one\r\n       * TODO: rename in scalarDivide in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point}\r\n       */\r\n      divide: function (scalar) {\r\n        return new Point(this.x / scalar, this.y / scalar);\r\n      },\r\n\r\n      /**\r\n       * Divides this point by a value\r\n       * TODO: rename in scalarDivideEquals in 2.0\r\n       * @param {Number} scalar\r\n       * @return {fabric.Point} thisArg\r\n       * @chainable\r\n       */\r\n      divideEquals: function (scalar) {\r\n        this.x /= scalar;\r\n        this.y /= scalar;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is equal to another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      eq: function (that) {\r\n        return (this.x === that.x && this.y === that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is less than another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      lt: function (that) {\r\n        return (this.x < that.x && this.y < that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is less than or equal to another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      lte: function (that) {\r\n        return (this.x <= that.x && this.y <= that.y);\r\n      },\r\n\r\n      /**\r\n\r\n       * Returns true if this point is greater another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      gt: function (that) {\r\n        return (this.x > that.x && this.y > that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns true if this point is greater than or equal to another one\r\n       * @param {fabric.Point} that\r\n       * @return {Boolean}\r\n       */\r\n      gte: function (that) {\r\n        return (this.x >= that.x && this.y >= that.y);\r\n      },\r\n\r\n      /**\r\n       * Returns new point which is the result of linear interpolation with this one and another one\r\n       * @param {fabric.Point} that\r\n       * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\r\n       * @return {fabric.Point}\r\n       */\r\n      lerp: function (that, t) {\r\n        if (typeof t === 'undefined') {\r\n          t = 0.5;\r\n        }\r\n        t = Math.max(Math.min(1, t), 0);\r\n        return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\r\n      },\r\n\r\n      /**\r\n       * Returns distance from this point and another one\r\n       * @param {fabric.Point} that\r\n       * @return {Number}\r\n       */\r\n      distanceFrom: function (that) {\r\n        var dx = this.x - that.x,\r\n            dy = this.y - that.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n      },\r\n\r\n      /**\r\n       * Returns the point between this point and another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point}\r\n       */\r\n      midPointFrom: function (that) {\r\n        return this.lerp(that);\r\n      },\r\n\r\n      /**\r\n       * Returns a new point which is the min of this and another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point}\r\n       */\r\n      min: function (that) {\r\n        return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\r\n      },\r\n\r\n      /**\r\n       * Returns a new point which is the max of this and another one\r\n       * @param {fabric.Point} that\r\n       * @return {fabric.Point}\r\n       */\r\n      max: function (that) {\r\n        return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of this point\r\n       * @return {String}\r\n       */\r\n      toString: function () {\r\n        return this.x + ',' + this.y;\r\n      },\r\n\r\n      /**\r\n       * Sets x/y of this point\r\n       * @param {Number} x\r\n       * @param {Number} y\r\n       * @chainable\r\n       */\r\n      setXY: function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets x of this point\r\n       * @param {Number} x\r\n       * @chainable\r\n       */\r\n      setX: function (x) {\r\n        this.x = x;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets y of this point\r\n       * @param {Number} y\r\n       * @chainable\r\n       */\r\n      setY: function (y) {\r\n        this.y = y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets x/y of this point from another point\r\n       * @param {fabric.Point} that\r\n       * @chainable\r\n       */\r\n      setFromPoint: function (that) {\r\n        this.x = that.x;\r\n        this.y = that.y;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Swaps x/y of this point and another point\r\n       * @param {fabric.Point} that\r\n       */\r\n      swap: function (that) {\r\n        var x = this.x,\r\n            y = this.y;\r\n        this.x = that.x;\r\n        this.y = that.y;\r\n        that.x = x;\r\n        that.y = y;\r\n      },\r\n\r\n      /**\r\n       * return a cloned instance of the point\r\n       * @return {fabric.Point}\r\n       */\r\n      clone: function () {\r\n        return new Point(this.x, this.y);\r\n      }\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Intersection) {\r\n      fabric.warn('fabric.Intersection is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Intersection class\r\n     * @class fabric.Intersection\r\n     * @memberOf fabric\r\n     * @constructor\r\n     */\r\n    function Intersection(status) {\r\n      this.status = status;\r\n      this.points = [];\r\n    }\r\n\r\n    fabric.Intersection = Intersection;\r\n\r\n    fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\r\n\r\n      constructor: Intersection,\r\n\r\n      /**\r\n       * Appends a point to intersection\r\n       * @param {fabric.Point} point\r\n       * @return {fabric.Intersection} thisArg\r\n       * @chainable\r\n       */\r\n      appendPoint: function (point) {\r\n        this.points.push(point);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Appends points to intersection\r\n       * @param {Array} points\r\n       * @return {fabric.Intersection} thisArg\r\n       * @chainable\r\n       */\r\n      appendPoints: function (points) {\r\n        this.points = this.points.concat(points);\r\n        return this;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Checks if one line intersects another\r\n     * TODO: rename in intersectSegmentSegment\r\n     * @static\r\n     * @param {fabric.Point} a1\r\n     * @param {fabric.Point} a2\r\n     * @param {fabric.Point} b1\r\n     * @param {fabric.Point} b2\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\r\n      var result,\r\n          uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\r\n          ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\r\n          uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\r\n      if (uB !== 0) {\r\n        var ua = uaT / uB,\r\n            ub = ubT / uB;\r\n        if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\r\n          result = new Intersection('Intersection');\r\n          result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\r\n        }\r\n        else {\r\n          result = new Intersection();\r\n        }\r\n      }\r\n      else {\r\n        if (uaT === 0 || ubT === 0) {\r\n          result = new Intersection('Coincident');\r\n        }\r\n        else {\r\n          result = new Intersection('Parallel');\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    /**\r\n     * Checks if line intersects polygon\r\n     * TODO: rename in intersectSegmentPolygon\r\n     * fix detection of coincident\r\n     * @static\r\n     * @param {fabric.Point} a1\r\n     * @param {fabric.Point} a2\r\n     * @param {Array} points\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\r\n      var result = new Intersection(),\r\n          length = points.length,\r\n          b1, b2, inter, i;\r\n\r\n      for (i = 0; i < length; i++) {\r\n        b1 = points[i];\r\n        b2 = points[(i + 1) % length];\r\n        inter = Intersection.intersectLineLine(a1, a2, b1, b2);\r\n\r\n        result.appendPoints(inter.points);\r\n      }\r\n      if (result.points.length > 0) {\r\n        result.status = 'Intersection';\r\n      }\r\n      return result;\r\n    };\r\n\r\n    /**\r\n     * Checks if polygon intersects another polygon\r\n     * @static\r\n     * @param {Array} points1\r\n     * @param {Array} points2\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\r\n      var result = new Intersection(),\r\n          length = points1.length, i;\r\n\r\n      for (i = 0; i < length; i++) {\r\n        var a1 = points1[i],\r\n            a2 = points1[(i + 1) % length],\r\n            inter = Intersection.intersectLinePolygon(a1, a2, points2);\r\n\r\n        result.appendPoints(inter.points);\r\n      }\r\n      if (result.points.length > 0) {\r\n        result.status = 'Intersection';\r\n      }\r\n      return result;\r\n    };\r\n\r\n    /**\r\n     * Checks if polygon intersects rectangle\r\n     * @static\r\n     * @param {Array} points\r\n     * @param {fabric.Point} r1\r\n     * @param {fabric.Point} r2\r\n     * @return {fabric.Intersection}\r\n     */\r\n    fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\r\n      var min = r1.min(r2),\r\n          max = r1.max(r2),\r\n          topRight = new fabric.Point(max.x, min.y),\r\n          bottomLeft = new fabric.Point(min.x, max.y),\r\n          inter1 = Intersection.intersectLinePolygon(min, topRight, points),\r\n          inter2 = Intersection.intersectLinePolygon(topRight, max, points),\r\n          inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\r\n          inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\r\n          result = new Intersection();\r\n\r\n      result.appendPoints(inter1.points);\r\n      result.appendPoints(inter2.points);\r\n      result.appendPoints(inter3.points);\r\n      result.appendPoints(inter4.points);\r\n\r\n      if (result.points.length > 0) {\r\n        result.status = 'Intersection';\r\n      }\r\n      return result;\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Color) {\r\n      fabric.warn('fabric.Color is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Color class\r\n     * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\r\n     * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\r\n     *\r\n     * @class fabric.Color\r\n     * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\r\n     * @return {fabric.Color} thisArg\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\r\n     */\r\n    function Color(color) {\r\n      if (!color) {\r\n        this.setSource([0, 0, 0, 1]);\r\n      }\r\n      else {\r\n        this._tryParsingColor(color);\r\n      }\r\n    }\r\n\r\n    fabric.Color = Color;\r\n\r\n    fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\r\n\r\n      /**\r\n       * @private\r\n       * @param {String|Array} color Color value to parse\r\n       */\r\n      _tryParsingColor: function(color) {\r\n        var source;\r\n\r\n        if (color in Color.colorNameMap) {\r\n          color = Color.colorNameMap[color];\r\n        }\r\n\r\n        if (color === 'transparent') {\r\n          source = [255, 255, 255, 0];\r\n        }\r\n\r\n        if (!source) {\r\n          source = Color.sourceFromHex(color);\r\n        }\r\n        if (!source) {\r\n          source = Color.sourceFromRgb(color);\r\n        }\r\n        if (!source) {\r\n          source = Color.sourceFromHsl(color);\r\n        }\r\n        if (!source) {\r\n          //if color is not recognize let's make black as canvas does\r\n          source = [0, 0, 0, 1];\r\n        }\r\n        if (source) {\r\n          this.setSource(source);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\r\n       * @private\r\n       * @param {Number} r Red color value\r\n       * @param {Number} g Green color value\r\n       * @param {Number} b Blue color value\r\n       * @return {Array} Hsl color\r\n       */\r\n      _rgbToHsl: function(r, g, b) {\r\n        r /= 255; g /= 255; b /= 255;\r\n\r\n        var h, s, l,\r\n            max = fabric.util.array.max([r, g, b]),\r\n            min = fabric.util.array.min([r, g, b]);\r\n\r\n        l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n          h = s = 0; // achromatic\r\n        }\r\n        else {\r\n          var d = max - min;\r\n          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n          switch (max) {\r\n            case r:\r\n              h = (g - b) / d + (g < b ? 6 : 0);\r\n              break;\r\n            case g:\r\n              h = (b - r) / d + 2;\r\n              break;\r\n            case b:\r\n              h = (r - g) / d + 4;\r\n              break;\r\n          }\r\n          h /= 6;\r\n        }\r\n\r\n        return [\r\n          Math.round(h * 360),\r\n          Math.round(s * 100),\r\n          Math.round(l * 100)\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n       * @return {Array}\r\n       */\r\n      getSource: function() {\r\n        return this._source;\r\n      },\r\n\r\n      /**\r\n       * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n       * @param {Array} source\r\n       */\r\n      setSource: function(source) {\r\n        this._source = source;\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in RGB format\r\n       * @return {String} ex: rgb(0-255,0-255,0-255)\r\n       */\r\n      toRgb: function() {\r\n        var source = this.getSource();\r\n        return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in RGBA format\r\n       * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\r\n       */\r\n      toRgba: function() {\r\n        var source = this.getSource();\r\n        return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HSL format\r\n       * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\r\n       */\r\n      toHsl: function() {\r\n        var source = this.getSource(),\r\n            hsl = this._rgbToHsl(source[0], source[1], source[2]);\r\n\r\n        return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HSLA format\r\n       * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\r\n       */\r\n      toHsla: function() {\r\n        var source = this.getSource(),\r\n            hsl = this._rgbToHsl(source[0], source[1], source[2]);\r\n\r\n        return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HEX format\r\n       * @return {String} ex: FF5555\r\n       */\r\n      toHex: function() {\r\n        var source = this.getSource(), r, g, b;\r\n\r\n        r = source[0].toString(16);\r\n        r = (r.length === 1) ? ('0' + r) : r;\r\n\r\n        g = source[1].toString(16);\r\n        g = (g.length === 1) ? ('0' + g) : g;\r\n\r\n        b = source[2].toString(16);\r\n        b = (b.length === 1) ? ('0' + b) : b;\r\n\r\n        return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\r\n      },\r\n\r\n      /**\r\n       * Returns color representation in HEXA format\r\n       * @return {String} ex: FF5555CC\r\n       */\r\n      toHexa: function() {\r\n        var source = this.getSource(), a;\r\n\r\n        a = Math.round(source[3] * 255);\r\n        a = a.toString(16);\r\n        a = (a.length === 1) ? ('0' + a) : a;\r\n\r\n        return this.toHex() + a.toUpperCase();\r\n      },\r\n\r\n      /**\r\n       * Gets value of alpha channel for this color\r\n       * @return {Number} 0-1\r\n       */\r\n      getAlpha: function() {\r\n        return this.getSource()[3];\r\n      },\r\n\r\n      /**\r\n       * Sets value of alpha channel for this color\r\n       * @param {Number} alpha Alpha value 0-1\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      setAlpha: function(alpha) {\r\n        var source = this.getSource();\r\n        source[3] = alpha;\r\n        this.setSource(source);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Transforms color to its grayscale representation\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      toGrayscale: function() {\r\n        var source = this.getSource(),\r\n            average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\r\n            currentAlpha = source[3];\r\n        this.setSource([average, average, average, currentAlpha]);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Transforms color to its black and white representation\r\n       * @param {Number} threshold\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      toBlackWhite: function(threshold) {\r\n        var source = this.getSource(),\r\n            average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\r\n            currentAlpha = source[3];\r\n\r\n        threshold = threshold || 127;\r\n\r\n        average = (Number(average) < Number(threshold)) ? 0 : 255;\r\n        this.setSource([average, average, average, currentAlpha]);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Overlays color with another color\r\n       * @param {String|fabric.Color} otherColor\r\n       * @return {fabric.Color} thisArg\r\n       */\r\n      overlayWith: function(otherColor) {\r\n        if (!(otherColor instanceof Color)) {\r\n          otherColor = new Color(otherColor);\r\n        }\r\n\r\n        var result = [],\r\n            alpha = this.getAlpha(),\r\n            otherAlpha = 0.5,\r\n            source = this.getSource(),\r\n            otherSource = otherColor.getSource(), i;\r\n\r\n        for (i = 0; i < 3; i++) {\r\n          result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\r\n        }\r\n\r\n        result[3] = alpha;\r\n        this.setSource(result);\r\n        return this;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     */\r\n    // eslint-disable-next-line max-len\r\n    fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\r\n\r\n    /**\r\n     * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     */\r\n    fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\r\n\r\n    /**\r\n     * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     */\r\n    fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\r\n\r\n    /**\r\n     * Map of the 148 color names with HEX code\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Color\r\n     * @see: https://www.w3.org/TR/css3-color/#svg-color\r\n     */\r\n    fabric.Color.colorNameMap = {\r\n      aliceblue:            '#F0F8FF',\r\n      antiquewhite:         '#FAEBD7',\r\n      aqua:                 '#00FFFF',\r\n      aquamarine:           '#7FFFD4',\r\n      azure:                '#F0FFFF',\r\n      beige:                '#F5F5DC',\r\n      bisque:               '#FFE4C4',\r\n      black:                '#000000',\r\n      blanchedalmond:       '#FFEBCD',\r\n      blue:                 '#0000FF',\r\n      blueviolet:           '#8A2BE2',\r\n      brown:                '#A52A2A',\r\n      burlywood:            '#DEB887',\r\n      cadetblue:            '#5F9EA0',\r\n      chartreuse:           '#7FFF00',\r\n      chocolate:            '#D2691E',\r\n      coral:                '#FF7F50',\r\n      cornflowerblue:       '#6495ED',\r\n      cornsilk:             '#FFF8DC',\r\n      crimson:              '#DC143C',\r\n      cyan:                 '#00FFFF',\r\n      darkblue:             '#00008B',\r\n      darkcyan:             '#008B8B',\r\n      darkgoldenrod:        '#B8860B',\r\n      darkgray:             '#A9A9A9',\r\n      darkgrey:             '#A9A9A9',\r\n      darkgreen:            '#006400',\r\n      darkkhaki:            '#BDB76B',\r\n      darkmagenta:          '#8B008B',\r\n      darkolivegreen:       '#556B2F',\r\n      darkorange:           '#FF8C00',\r\n      darkorchid:           '#9932CC',\r\n      darkred:              '#8B0000',\r\n      darksalmon:           '#E9967A',\r\n      darkseagreen:         '#8FBC8F',\r\n      darkslateblue:        '#483D8B',\r\n      darkslategray:        '#2F4F4F',\r\n      darkslategrey:        '#2F4F4F',\r\n      darkturquoise:        '#00CED1',\r\n      darkviolet:           '#9400D3',\r\n      deeppink:             '#FF1493',\r\n      deepskyblue:          '#00BFFF',\r\n      dimgray:              '#696969',\r\n      dimgrey:              '#696969',\r\n      dodgerblue:           '#1E90FF',\r\n      firebrick:            '#B22222',\r\n      floralwhite:          '#FFFAF0',\r\n      forestgreen:          '#228B22',\r\n      fuchsia:              '#FF00FF',\r\n      gainsboro:            '#DCDCDC',\r\n      ghostwhite:           '#F8F8FF',\r\n      gold:                 '#FFD700',\r\n      goldenrod:            '#DAA520',\r\n      gray:                 '#808080',\r\n      grey:                 '#808080',\r\n      green:                '#008000',\r\n      greenyellow:          '#ADFF2F',\r\n      honeydew:             '#F0FFF0',\r\n      hotpink:              '#FF69B4',\r\n      indianred:            '#CD5C5C',\r\n      indigo:               '#4B0082',\r\n      ivory:                '#FFFFF0',\r\n      khaki:                '#F0E68C',\r\n      lavender:             '#E6E6FA',\r\n      lavenderblush:        '#FFF0F5',\r\n      lawngreen:            '#7CFC00',\r\n      lemonchiffon:         '#FFFACD',\r\n      lightblue:            '#ADD8E6',\r\n      lightcoral:           '#F08080',\r\n      lightcyan:            '#E0FFFF',\r\n      lightgoldenrodyellow: '#FAFAD2',\r\n      lightgray:            '#D3D3D3',\r\n      lightgrey:            '#D3D3D3',\r\n      lightgreen:           '#90EE90',\r\n      lightpink:            '#FFB6C1',\r\n      lightsalmon:          '#FFA07A',\r\n      lightseagreen:        '#20B2AA',\r\n      lightskyblue:         '#87CEFA',\r\n      lightslategray:       '#778899',\r\n      lightslategrey:       '#778899',\r\n      lightsteelblue:       '#B0C4DE',\r\n      lightyellow:          '#FFFFE0',\r\n      lime:                 '#00FF00',\r\n      limegreen:            '#32CD32',\r\n      linen:                '#FAF0E6',\r\n      magenta:              '#FF00FF',\r\n      maroon:               '#800000',\r\n      mediumaquamarine:     '#66CDAA',\r\n      mediumblue:           '#0000CD',\r\n      mediumorchid:         '#BA55D3',\r\n      mediumpurple:         '#9370DB',\r\n      mediumseagreen:       '#3CB371',\r\n      mediumslateblue:      '#7B68EE',\r\n      mediumspringgreen:    '#00FA9A',\r\n      mediumturquoise:      '#48D1CC',\r\n      mediumvioletred:      '#C71585',\r\n      midnightblue:         '#191970',\r\n      mintcream:            '#F5FFFA',\r\n      mistyrose:            '#FFE4E1',\r\n      moccasin:             '#FFE4B5',\r\n      navajowhite:          '#FFDEAD',\r\n      navy:                 '#000080',\r\n      oldlace:              '#FDF5E6',\r\n      olive:                '#808000',\r\n      olivedrab:            '#6B8E23',\r\n      orange:               '#FFA500',\r\n      orangered:            '#FF4500',\r\n      orchid:               '#DA70D6',\r\n      palegoldenrod:        '#EEE8AA',\r\n      palegreen:            '#98FB98',\r\n      paleturquoise:        '#AFEEEE',\r\n      palevioletred:        '#DB7093',\r\n      papayawhip:           '#FFEFD5',\r\n      peachpuff:            '#FFDAB9',\r\n      peru:                 '#CD853F',\r\n      pink:                 '#FFC0CB',\r\n      plum:                 '#DDA0DD',\r\n      powderblue:           '#B0E0E6',\r\n      purple:               '#800080',\r\n      rebeccapurple:        '#663399',\r\n      red:                  '#FF0000',\r\n      rosybrown:            '#BC8F8F',\r\n      royalblue:            '#4169E1',\r\n      saddlebrown:          '#8B4513',\r\n      salmon:               '#FA8072',\r\n      sandybrown:           '#F4A460',\r\n      seagreen:             '#2E8B57',\r\n      seashell:             '#FFF5EE',\r\n      sienna:               '#A0522D',\r\n      silver:               '#C0C0C0',\r\n      skyblue:              '#87CEEB',\r\n      slateblue:            '#6A5ACD',\r\n      slategray:            '#708090',\r\n      slategrey:            '#708090',\r\n      snow:                 '#FFFAFA',\r\n      springgreen:          '#00FF7F',\r\n      steelblue:            '#4682B4',\r\n      tan:                  '#D2B48C',\r\n      teal:                 '#008080',\r\n      thistle:              '#D8BFD8',\r\n      tomato:               '#FF6347',\r\n      turquoise:            '#40E0D0',\r\n      violet:               '#EE82EE',\r\n      wheat:                '#F5DEB3',\r\n      white:                '#FFFFFF',\r\n      whitesmoke:           '#F5F5F5',\r\n      yellow:               '#FFFF00',\r\n      yellowgreen:          '#9ACD32'\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @param {Number} p\r\n     * @param {Number} q\r\n     * @param {Number} t\r\n     * @return {Number}\r\n     */\r\n    function hue2rgb(p, q, t) {\r\n      if (t < 0) {\r\n        t += 1;\r\n      }\r\n      if (t > 1) {\r\n        t -= 1;\r\n      }\r\n      if (t < 1 / 6) {\r\n        return p + (q - p) * 6 * t;\r\n      }\r\n      if (t < 1 / 2) {\r\n        return q;\r\n      }\r\n      if (t < 2 / 3) {\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n      }\r\n      return p;\r\n    }\r\n\r\n    /**\r\n     * Returns new color object, when given a color in RGB format\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromRgb = function(color) {\r\n      return Color.fromSource(Color.sourceFromRgb(color));\r\n    };\r\n\r\n    /**\r\n     * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\r\n     * @return {Array} source\r\n     */\r\n    fabric.Color.sourceFromRgb = function(color) {\r\n      var match = color.match(Color.reRGBa);\r\n      if (match) {\r\n        var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\r\n            g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\r\n            b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\r\n\r\n        return [\r\n          parseInt(r, 10),\r\n          parseInt(g, 10),\r\n          parseInt(b, 10),\r\n          match[4] ? parseFloat(match[4]) : 1\r\n        ];\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Returns new color object, when given a color in RGBA format\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric.Color\r\n     * @param {String} color\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromRgba = Color.fromRgb;\r\n\r\n    /**\r\n     * Returns new color object, when given a color in HSL format\r\n     * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\r\n     * @memberOf fabric.Color\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromHsl = function(color) {\r\n      return Color.fromSource(Color.sourceFromHsl(color));\r\n    };\r\n\r\n    /**\r\n     * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\r\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\r\n     * @return {Array} source\r\n     * @see http://http://www.w3.org/TR/css3-color/#hsl-color\r\n     */\r\n    fabric.Color.sourceFromHsl = function(color) {\r\n      var match = color.match(Color.reHSLa);\r\n      if (!match) {\r\n        return;\r\n      }\r\n\r\n      var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\r\n          s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\r\n          l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\r\n          r, g, b;\r\n\r\n      if (s === 0) {\r\n        r = g = b = l;\r\n      }\r\n      else {\r\n        var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\r\n            p = l * 2 - q;\r\n\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n      }\r\n\r\n      return [\r\n        Math.round(r * 255),\r\n        Math.round(g * 255),\r\n        Math.round(b * 255),\r\n        match[4] ? parseFloat(match[4]) : 1\r\n      ];\r\n    };\r\n\r\n    /**\r\n     * Returns new color object, when given a color in HSLA format\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric.Color\r\n     * @param {String} color\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromHsla = Color.fromHsl;\r\n\r\n    /**\r\n     * Returns new color object, when given a color in HEX format\r\n     * @static\r\n     * @memberOf fabric.Color\r\n     * @param {String} color Color value ex: FF5555\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromHex = function(color) {\r\n      return Color.fromSource(Color.sourceFromHex(color));\r\n    };\r\n\r\n    /**\r\n     * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\r\n     * @static\r\n     * @memberOf fabric.Color\r\n     * @param {String} color ex: FF5555 or FF5544CC (RGBa)\r\n     * @return {Array} source\r\n     */\r\n    fabric.Color.sourceFromHex = function(color) {\r\n      if (color.match(Color.reHex)) {\r\n        var value = color.slice(color.indexOf('#') + 1),\r\n            isShortNotation = (value.length === 3 || value.length === 4),\r\n            isRGBa = (value.length === 8 || value.length === 4),\r\n            r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\r\n            g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\r\n            b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\r\n            a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\r\n\r\n        return [\r\n          parseInt(r, 16),\r\n          parseInt(g, 16),\r\n          parseInt(b, 16),\r\n          parseFloat((parseInt(a, 16) / 255).toFixed(2))\r\n        ];\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\r\n     * @static\r\n     * @memberOf fabric.Color\r\n     * @param {Array} source\r\n     * @return {fabric.Color}\r\n     */\r\n    fabric.Color.fromSource = function(source) {\r\n      var oColor = new Color();\r\n      oColor.setSource(source);\r\n      return oColor;\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    /* _FROM_SVG_START_ */\r\n    function getColorStop(el) {\r\n      var style = el.getAttribute('style'),\r\n          offset = el.getAttribute('offset') || 0,\r\n          color, colorAlpha, opacity, i;\r\n\r\n      // convert percents to absolute values\r\n      offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\r\n      offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\r\n      if (style) {\r\n        var keyValuePairs = style.split(/\\s*;\\s*/);\r\n\r\n        if (keyValuePairs[keyValuePairs.length - 1] === '') {\r\n          keyValuePairs.pop();\r\n        }\r\n\r\n        for (i = keyValuePairs.length; i--; ) {\r\n\r\n          var split = keyValuePairs[i].split(/\\s*:\\s*/),\r\n              key = split[0].trim(),\r\n              value = split[1].trim();\r\n\r\n          if (key === 'stop-color') {\r\n            color = value;\r\n          }\r\n          else if (key === 'stop-opacity') {\r\n            opacity = value;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!color) {\r\n        color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\r\n      }\r\n      if (!opacity) {\r\n        opacity = el.getAttribute('stop-opacity');\r\n      }\r\n\r\n      color = new fabric.Color(color);\r\n      colorAlpha = color.getAlpha();\r\n      opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\r\n      opacity *= colorAlpha;\r\n\r\n      return {\r\n        offset: offset,\r\n        color: color.toRgb(),\r\n        opacity: opacity\r\n      };\r\n    }\r\n\r\n    function getLinearCoords(el) {\r\n      return {\r\n        x1: el.getAttribute('x1') || 0,\r\n        y1: el.getAttribute('y1') || 0,\r\n        x2: el.getAttribute('x2') || '100%',\r\n        y2: el.getAttribute('y2') || 0\r\n      };\r\n    }\r\n\r\n    function getRadialCoords(el) {\r\n      return {\r\n        x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\r\n        y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\r\n        r1: 0,\r\n        x2: el.getAttribute('cx') || '50%',\r\n        y2: el.getAttribute('cy') || '50%',\r\n        r2: el.getAttribute('r') || '50%'\r\n      };\r\n    }\r\n    /* _FROM_SVG_END_ */\r\n\r\n    var clone = fabric.util.object.clone;\r\n\r\n    /**\r\n     * Gradient class\r\n     * @class fabric.Gradient\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\r\n     * @see {@link fabric.Gradient#initialize} for constructor definition\r\n     */\r\n    fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\r\n\r\n      /**\r\n       * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\r\n       * @type Number\r\n       * @default 0\r\n       */\r\n      offsetX: 0,\r\n\r\n      /**\r\n       * Vertical offset for aligning gradients coming from SVG when outside pathgroups\r\n       * @type Number\r\n       * @default 0\r\n       */\r\n      offsetY: 0,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\r\n       * @return {fabric.Gradient} thisArg\r\n       */\r\n      initialize: function(options) {\r\n        options || (options = { });\r\n\r\n        var coords = { };\r\n\r\n        this.id = fabric.Object.__uid++;\r\n        this.type = options.type || 'linear';\r\n\r\n        coords = {\r\n          x1: options.coords.x1 || 0,\r\n          y1: options.coords.y1 || 0,\r\n          x2: options.coords.x2 || 0,\r\n          y2: options.coords.y2 || 0\r\n        };\r\n\r\n        if (this.type === 'radial') {\r\n          coords.r1 = options.coords.r1 || 0;\r\n          coords.r2 = options.coords.r2 || 0;\r\n        }\r\n        this.coords = coords;\r\n        this.colorStops = options.colorStops.slice();\r\n        if (options.gradientTransform) {\r\n          this.gradientTransform = options.gradientTransform;\r\n        }\r\n        this.offsetX = options.offsetX || this.offsetX;\r\n        this.offsetY = options.offsetY || this.offsetY;\r\n      },\r\n\r\n      /**\r\n       * Adds another colorStop\r\n       * @param {Object} colorStop Object with offset and color\r\n       * @return {fabric.Gradient} thisArg\r\n       */\r\n      addColorStop: function(colorStops) {\r\n        for (var position in colorStops) {\r\n          var color = new fabric.Color(colorStops[position]);\r\n          this.colorStops.push({\r\n            offset: parseFloat(position),\r\n            color: color.toRgb(),\r\n            opacity: color.getAlpha()\r\n          });\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of a gradient\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object}\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var object = {\r\n          type: this.type,\r\n          coords: this.coords,\r\n          colorStops: this.colorStops,\r\n          offsetX: this.offsetX,\r\n          offsetY: this.offsetY,\r\n          gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\r\n        };\r\n        fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n\r\n        return object;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of an gradient\r\n       * @param {Object} object Object to create a gradient for\r\n       * @return {String} SVG representation of an gradient (linear/radial)\r\n       */\r\n      toSVG: function(object) {\r\n        var coords = clone(this.coords, true), i, len,\r\n            markup, commonAttributes, colorStops = clone(this.colorStops, true),\r\n            needsSwap = coords.r1 > coords.r2,\r\n            offsetX = object.width / 2, offsetY = object.height / 2;\r\n        // colorStops must be sorted ascending\r\n        colorStops.sort(function(a, b) {\r\n          return a.offset - b.offset;\r\n        });\r\n        if (object.type === 'path') {\r\n          offsetX -= object.pathOffset.x;\r\n          offsetY -= object.pathOffset.y;\r\n        }\r\n        for (var prop in coords) {\r\n          if (prop === 'x1' || prop === 'x2') {\r\n            coords[prop] += this.offsetX - offsetX;\r\n          }\r\n          else if (prop === 'y1' || prop === 'y2') {\r\n            coords[prop] += this.offsetY - offsetY;\r\n          }\r\n        }\r\n\r\n        commonAttributes = 'id=\"SVGID_' + this.id +\r\n                       '\" gradientUnits=\"userSpaceOnUse\"';\r\n        if (this.gradientTransform) {\r\n          commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\r\n        }\r\n        if (this.type === 'linear') {\r\n          markup = [\r\n            '<linearGradient ',\r\n            commonAttributes,\r\n            ' x1=\"', coords.x1,\r\n            '\" y1=\"', coords.y1,\r\n            '\" x2=\"', coords.x2,\r\n            '\" y2=\"', coords.y2,\r\n            '\">\\n'\r\n          ];\r\n        }\r\n        else if (this.type === 'radial') {\r\n          // svg radial gradient has just 1 radius. the biggest.\r\n          markup = [\r\n            '<radialGradient ',\r\n            commonAttributes,\r\n            ' cx=\"', needsSwap ? coords.x1 : coords.x2,\r\n            '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\r\n            '\" r=\"', needsSwap ? coords.r1 : coords.r2,\r\n            '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\r\n            '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\r\n            '\">\\n'\r\n          ];\r\n        }\r\n\r\n        if (this.type === 'radial') {\r\n          if (needsSwap) {\r\n            // svg goes from internal to external radius. if radius are inverted, swap color stops.\r\n            colorStops = colorStops.concat();\r\n            colorStops.reverse();\r\n            for (i = 0, len = colorStops.length; i < len; i++) {\r\n              colorStops[i].offset = 1 - colorStops[i].offset;\r\n            }\r\n          }\r\n          var minRadius = Math.min(coords.r1, coords.r2);\r\n          if (minRadius > 0) {\r\n            // i have to shift all colorStops and add new one in 0.\r\n            var maxRadius = Math.max(coords.r1, coords.r2),\r\n                percentageShift = minRadius / maxRadius;\r\n            for (i = 0, len = colorStops.length; i < len; i++) {\r\n              colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\r\n            }\r\n          }\r\n        }\r\n\r\n        for (i = 0, len = colorStops.length; i < len; i++) {\r\n          var colorStop = colorStops[i];\r\n          markup.push(\r\n            '<stop ',\r\n            'offset=\"', (colorStop.offset * 100) + '%',\r\n            '\" style=\"stop-color:', colorStop.color,\r\n            (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\r\n            '\"/>\\n'\r\n          );\r\n        }\r\n\r\n        markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\r\n\r\n        return markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns an instance of CanvasGradient\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @return {CanvasGradient}\r\n       */\r\n      toLive: function(ctx) {\r\n        var gradient, coords = fabric.util.object.clone(this.coords), i, len;\r\n\r\n        if (!this.type) {\r\n          return;\r\n        }\r\n\r\n        if (this.type === 'linear') {\r\n          gradient = ctx.createLinearGradient(\r\n            coords.x1, coords.y1, coords.x2, coords.y2);\r\n        }\r\n        else if (this.type === 'radial') {\r\n          gradient = ctx.createRadialGradient(\r\n            coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\r\n        }\r\n\r\n        for (i = 0, len = this.colorStops.length; i < len; i++) {\r\n          var color = this.colorStops[i].color,\r\n              opacity = this.colorStops[i].opacity,\r\n              offset = this.colorStops[i].offset;\r\n\r\n          if (typeof opacity !== 'undefined') {\r\n            color = new fabric.Color(color).setAlpha(opacity).toRgba();\r\n          }\r\n          gradient.addColorStop(offset, color);\r\n        }\r\n\r\n        return gradient;\r\n      }\r\n    });\r\n\r\n    fabric.util.object.extend(fabric.Gradient, {\r\n\r\n      /* _FROM_SVG_START_ */\r\n      /**\r\n       * Returns {@link fabric.Gradient} instance from an SVG element\r\n       * @static\r\n       * @memberOf fabric.Gradient\r\n       * @param {SVGGradientElement} el SVG gradient element\r\n       * @param {fabric.Object} instance\r\n       * @return {fabric.Gradient} Gradient instance\r\n       * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\r\n       * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\r\n       */\r\n      fromElement: function(el, instance) {\r\n        /**\r\n         *  @example:\r\n         *\r\n         *  <linearGradient id=\"linearGrad1\">\r\n         *    <stop offset=\"0%\" stop-color=\"white\"/>\r\n         *    <stop offset=\"100%\" stop-color=\"black\"/>\r\n         *  </linearGradient>\r\n         *\r\n         *  OR\r\n         *\r\n         *  <linearGradient id=\"linearGrad2\">\r\n         *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\r\n         *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\r\n         *  </linearGradient>\r\n         *\r\n         *  OR\r\n         *\r\n         *  <radialGradient id=\"radialGrad1\">\r\n         *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n         *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\r\n         *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n         *  </radialGradient>\r\n         *\r\n         *  OR\r\n         *\r\n         *  <radialGradient id=\"radialGrad2\">\r\n         *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\r\n         *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\r\n         *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\r\n         *  </radialGradient>\r\n         *\r\n         */\r\n\r\n        var colorStopEls = el.getElementsByTagName('stop'),\r\n            type,\r\n            gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\r\n            gradientTransform = el.getAttribute('gradientTransform'),\r\n            colorStops = [],\r\n            coords, ellipseMatrix, i;\r\n\r\n        if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\r\n          type = 'linear';\r\n        }\r\n        else {\r\n          type = 'radial';\r\n        }\r\n\r\n        if (type === 'linear') {\r\n          coords = getLinearCoords(el);\r\n        }\r\n        else if (type === 'radial') {\r\n          coords = getRadialCoords(el);\r\n        }\r\n\r\n        for (i = colorStopEls.length; i--; ) {\r\n          colorStops.push(getColorStop(colorStopEls[i]));\r\n        }\r\n\r\n        ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\r\n\r\n        var gradient = new fabric.Gradient({\r\n          type: type,\r\n          coords: coords,\r\n          colorStops: colorStops,\r\n          offsetX: -instance.left,\r\n          offsetY: -instance.top\r\n        });\r\n\r\n        if (gradientTransform || ellipseMatrix !== '') {\r\n          gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\r\n        }\r\n\r\n        return gradient;\r\n      },\r\n      /* _FROM_SVG_END_ */\r\n\r\n      /**\r\n       * Returns {@link fabric.Gradient} instance from its object representation\r\n       * @static\r\n       * @memberOf fabric.Gradient\r\n       * @param {Object} obj\r\n       * @param {Object} [options] Options object\r\n       */\r\n      forObject: function(obj, options) {\r\n        options || (options = { });\r\n        _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\r\n        return new fabric.Gradient(options);\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function _convertPercentUnitsToValues(object, options, gradientUnits) {\r\n      var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\r\n      for (var prop in options) {\r\n        if (options[prop] === 'Infinity') {\r\n          options[prop] = 1;\r\n        }\r\n        else if (options[prop] === '-Infinity') {\r\n          options[prop] = 0;\r\n        }\r\n        propValue = parseFloat(options[prop], 10);\r\n        if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\r\n          multFactor = 0.01;\r\n        }\r\n        else {\r\n          multFactor = 1;\r\n        }\r\n        if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\r\n          multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\r\n          addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\r\n        }\r\n        else if (prop === 'y1' || prop === 'y2') {\r\n          multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\r\n          addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\r\n        }\r\n        options[prop] = propValue * multFactor + addFactor;\r\n      }\r\n      if (object.type === 'ellipse' &&\r\n          options.r2 !== null &&\r\n          gradientUnits === 'objectBoundingBox' &&\r\n          object.rx !== object.ry) {\r\n\r\n        var scaleFactor = object.ry / object.rx;\r\n        ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\r\n        if (options.y1) {\r\n          options.y1 /= scaleFactor;\r\n        }\r\n        if (options.y2) {\r\n          options.y2 /= scaleFactor;\r\n        }\r\n      }\r\n      return ellipseMatrix;\r\n    }\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n\r\n    var toFixed = fabric.util.toFixed;\r\n\r\n    /**\r\n     * Pattern class\r\n     * @class fabric.Pattern\r\n     * @see {@link http://fabricjs.com/patterns|Pattern demo}\r\n     * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\r\n     * @see {@link fabric.Pattern#initialize} for constructor definition\r\n     */\r\n\r\n\r\n    fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\r\n\r\n      /**\r\n       * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\r\n       * @type String\r\n       * @default\r\n       */\r\n      repeat: 'repeat',\r\n\r\n      /**\r\n       * Pattern horizontal offset from object's left/top corner\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetX: 0,\r\n\r\n      /**\r\n       * Pattern vertical offset from object's left/top corner\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetY: 0,\r\n\r\n      /**\r\n       * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\r\n       * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\r\n       * @type String\r\n       * @default\r\n       */\r\n      crossOrigin: '',\r\n\r\n      /**\r\n       * transform matrix to change the pattern, imported from svgs.\r\n       * @type Array\r\n       * @default\r\n       */\r\n      patternTransform: null,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       * @param {Function} [callback] function to invoke after callback init.\r\n       * @return {fabric.Pattern} thisArg\r\n       */\r\n      initialize: function(options, callback) {\r\n        options || (options = { });\r\n\r\n        this.id = fabric.Object.__uid++;\r\n        this.setOptions(options);\r\n        if (!options.source || (options.source && typeof options.source !== 'string')) {\r\n          callback && callback(this);\r\n          return;\r\n        }\r\n        // function string\r\n        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\r\n          this.source = new Function(fabric.util.getFunctionBody(options.source));\r\n          callback && callback(this);\r\n        }\r\n        else {\r\n          // img src string\r\n          var _this = this;\r\n          this.source = fabric.util.createImage();\r\n          fabric.util.loadImage(options.source, function(img) {\r\n            _this.source = img;\r\n            callback && callback(_this);\r\n          }, null, this.crossOrigin);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of a pattern\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of a pattern instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n            source, object;\r\n\r\n        // callback\r\n        if (typeof this.source === 'function') {\r\n          source = String(this.source);\r\n        }\r\n        // <img> element\r\n        else if (typeof this.source.src === 'string') {\r\n          source = this.source.src;\r\n        }\r\n        // <canvas> element\r\n        else if (typeof this.source === 'object' && this.source.toDataURL) {\r\n          source = this.source.toDataURL();\r\n        }\r\n\r\n        object = {\r\n          type: 'pattern',\r\n          source: source,\r\n          repeat: this.repeat,\r\n          crossOrigin: this.crossOrigin,\r\n          offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\r\n          offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\r\n          patternTransform: this.patternTransform ? this.patternTransform.concat() : null\r\n        };\r\n        fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n\r\n        return object;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of a pattern\r\n       * @param {fabric.Object} object\r\n       * @return {String} SVG representation of a pattern\r\n       */\r\n      toSVG: function(object) {\r\n        var patternSource = typeof this.source === 'function' ? this.source() : this.source,\r\n            patternWidth = patternSource.width / object.width,\r\n            patternHeight = patternSource.height / object.height,\r\n            patternOffsetX = this.offsetX / object.width,\r\n            patternOffsetY = this.offsetY / object.height,\r\n            patternImgSrc = '';\r\n        if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\r\n          patternHeight = 1;\r\n          if (patternOffsetY) {\r\n            patternHeight += Math.abs(patternOffsetY);\r\n          }\r\n        }\r\n        if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\r\n          patternWidth = 1;\r\n          if (patternOffsetX) {\r\n            patternWidth += Math.abs(patternOffsetX);\r\n          }\r\n\r\n        }\r\n        if (patternSource.src) {\r\n          patternImgSrc = patternSource.src;\r\n        }\r\n        else if (patternSource.toDataURL) {\r\n          patternImgSrc = patternSource.toDataURL();\r\n        }\r\n\r\n        return '<pattern id=\"SVGID_' + this.id +\r\n                      '\" x=\"' + patternOffsetX +\r\n                      '\" y=\"' + patternOffsetY +\r\n                      '\" width=\"' + patternWidth +\r\n                      '\" height=\"' + patternHeight + '\">\\n' +\r\n                 '<image x=\"0\" y=\"0\"' +\r\n                        ' width=\"' + patternSource.width +\r\n                        '\" height=\"' + patternSource.height +\r\n                        '\" xlink:href=\"' + patternImgSrc +\r\n                 '\"></image>\\n' +\r\n               '</pattern>\\n';\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      setOptions: function(options) {\r\n        for (var prop in options) {\r\n          this[prop] = options[prop];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns an instance of CanvasPattern\r\n       * @param {CanvasRenderingContext2D} ctx Context to create pattern\r\n       * @return {CanvasPattern}\r\n       */\r\n      toLive: function(ctx) {\r\n        var source = typeof this.source === 'function' ? this.source() : this.source;\r\n\r\n        // if the image failed to load, return, and allow rest to continue loading\r\n        if (!source) {\r\n          return '';\r\n        }\r\n\r\n        // if an image\r\n        if (typeof source.src !== 'undefined') {\r\n          if (!source.complete) {\r\n            return '';\r\n          }\r\n          if (source.naturalWidth === 0 || source.naturalHeight === 0) {\r\n            return '';\r\n          }\r\n        }\r\n        return ctx.createPattern(source, this.repeat);\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        toFixed = fabric.util.toFixed;\r\n\r\n    if (fabric.Shadow) {\r\n      fabric.warn('fabric.Shadow is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Shadow class\r\n     * @class fabric.Shadow\r\n     * @see {@link http://fabricjs.com/shadows|Shadow demo}\r\n     * @see {@link fabric.Shadow#initialize} for constructor definition\r\n     */\r\n    fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\r\n\r\n      /**\r\n       * Shadow color\r\n       * @type String\r\n       * @default\r\n       */\r\n      color: 'rgb(0,0,0)',\r\n\r\n      /**\r\n       * Shadow blur\r\n       * @type Number\r\n       */\r\n      blur: 0,\r\n\r\n      /**\r\n       * Shadow horizontal offset\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetX: 0,\r\n\r\n      /**\r\n       * Shadow vertical offset\r\n       * @type Number\r\n       * @default\r\n       */\r\n      offsetY: 0,\r\n\r\n      /**\r\n       * Whether the shadow should affect stroke operations\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      affectStroke: false,\r\n\r\n      /**\r\n       * Indicates whether toObject should include default values\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      includeDefaultValues: true,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\r\n       * @return {fabric.Shadow} thisArg\r\n       */\r\n      initialize: function(options) {\r\n\r\n        if (typeof options === 'string') {\r\n          options = this._parseShadow(options);\r\n        }\r\n\r\n        for (var prop in options) {\r\n          this[prop] = options[prop];\r\n        }\r\n\r\n        this.id = fabric.Object.__uid++;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} shadow Shadow value to parse\r\n       * @return {Object} Shadow object with color, offsetX, offsetY and blur\r\n       */\r\n      _parseShadow: function(shadow) {\r\n        var shadowStr = shadow.trim(),\r\n            offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\r\n            color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\r\n\r\n        return {\r\n          color: color.trim(),\r\n          offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\r\n          offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\r\n          blur: parseInt(offsetsAndBlur[3], 10) || 0\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns a string representation of an instance\r\n       * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\r\n       * @return {String} Returns CSS3 text-shadow declaration\r\n       */\r\n      toString: function() {\r\n        return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of a shadow\r\n       * @param {fabric.Object} object\r\n       * @return {String} SVG representation of a shadow\r\n       */\r\n      toSVG: function(object) {\r\n        var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n            offset = fabric.util.rotateVector(\r\n              { x: this.offsetX, y: this.offsetY },\r\n              fabric.util.degreesToRadians(-object.angle)),\r\n            BLUR_BOX = 20, color = new fabric.Color(this.color);\r\n\r\n        if (object.width && object.height) {\r\n          //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\r\n          // we add some extra space to filter box to contain the blur ( 20 )\r\n          fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\r\n          fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\r\n        }\r\n        if (object.flipX) {\r\n          offset.x *= -1;\r\n        }\r\n        if (object.flipY) {\r\n          offset.y *= -1;\r\n        }\r\n\r\n        return (\r\n          '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\r\n            'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\r\n            '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\r\n              toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\r\n            '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\r\n            '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\r\n            '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\r\n            '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\r\n            '\\t<feMerge>\\n' +\r\n              '\\t\\t<feMergeNode></feMergeNode>\\n' +\r\n              '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\r\n            '\\t</feMerge>\\n' +\r\n          '</filter>\\n');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns object representation of a shadow\r\n       * @return {Object} Object representation of a shadow instance\r\n       */\r\n      toObject: function() {\r\n        if (this.includeDefaultValues) {\r\n          return {\r\n            color: this.color,\r\n            blur: this.blur,\r\n            offsetX: this.offsetX,\r\n            offsetY: this.offsetY,\r\n            affectStroke: this.affectStroke\r\n          };\r\n        }\r\n        var obj = { }, proto = fabric.Shadow.prototype;\r\n\r\n        ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\r\n          if (this[prop] !== proto[prop]) {\r\n            obj[prop] = this[prop];\r\n          }\r\n        }, this);\r\n\r\n        return obj;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\r\n     * @static\r\n     * @field\r\n     * @memberOf fabric.Shadow\r\n     */\r\n    // eslint-disable-next-line max-len\r\n    fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function () {\r\n\r\n    'use strict';\r\n\r\n    if (fabric.StaticCanvas) {\r\n      fabric.warn('fabric.StaticCanvas is already defined.');\r\n      return;\r\n    }\r\n\r\n    // aliases for faster resolution\r\n    var extend = fabric.util.object.extend,\r\n        getElementOffset = fabric.util.getElementOffset,\r\n        removeFromArray = fabric.util.removeFromArray,\r\n        toFixed = fabric.util.toFixed,\r\n        transformPoint = fabric.util.transformPoint,\r\n        invertTransform = fabric.util.invertTransform,\r\n\r\n        CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\r\n\r\n    /**\r\n     * Static canvas class\r\n     * @class fabric.StaticCanvas\r\n     * @mixes fabric.Collection\r\n     * @mixes fabric.Observable\r\n     * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\r\n     * @see {@link fabric.StaticCanvas#initialize} for constructor definition\r\n     * @fires before:render\r\n     * @fires after:render\r\n     * @fires canvas:cleared\r\n     * @fires object:added\r\n     * @fires object:removed\r\n     */\r\n    fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(el, options) {\r\n        options || (options = { });\r\n        this.renderAndResetBound = this.renderAndReset.bind(this);\r\n        this.requestRenderAllBound = this.requestRenderAll.bind(this);\r\n        this._initStatic(el, options);\r\n      },\r\n\r\n      /**\r\n       * Background color of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\r\n       * @type {(String|fabric.Pattern)}\r\n       * @default\r\n       */\r\n      backgroundColor: '',\r\n\r\n      /**\r\n       * Background image of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\r\n       * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\r\n       * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\r\n       * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\r\n       * @type fabric.Image\r\n       * @default\r\n       */\r\n      backgroundImage: null,\r\n\r\n      /**\r\n       * Overlay color of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\r\n       * @since 1.3.9\r\n       * @type {(String|fabric.Pattern)}\r\n       * @default\r\n       */\r\n      overlayColor: '',\r\n\r\n      /**\r\n       * Overlay image of canvas instance.\r\n       * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\r\n       * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\r\n       * and \"overlayImageTop\" properties are deprecated since 1.3.9.\r\n       * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\r\n       * @type fabric.Image\r\n       * @default\r\n       */\r\n      overlayImage: null,\r\n\r\n      /**\r\n       * Indicates whether toObject/toDatalessObject should include default values\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      includeDefaultValues: true,\r\n\r\n      /**\r\n       * Indicates whether objects' state should be saved\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      stateful: false,\r\n\r\n      /**\r\n       * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\r\n       * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\r\n       * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\r\n       * since the renders are quequed and executed one per frame.\r\n       * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\r\n       * Left default to true to do not break documentation and old app, fiddles.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      renderOnAddRemove: true,\r\n\r\n      /**\r\n       * Function that determines clipping of entire canvas area\r\n       * Being passed context as first argument.\r\n       * If you are using code minification, ctx argument can be minified/manglied you should use\r\n       * as a workaround `var ctx = arguments[0];` in the function;\r\n       * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\r\n       * @deprecated since 2.0.0\r\n       * @type Function\r\n       * @default\r\n       */\r\n      clipTo: null,\r\n\r\n      /**\r\n       * Indicates whether object controls (borders/controls) are rendered above overlay image\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      controlsAboveOverlay: false,\r\n\r\n      /**\r\n       * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      allowTouchScrolling: false,\r\n\r\n      /**\r\n       * Indicates whether this canvas will use image smoothing, this is on by default in browsers\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      imageSmoothingEnabled: true,\r\n\r\n      /**\r\n       * The transformation (in the format of Canvas transform) which focuses the viewport\r\n       * @type Array\r\n       * @default\r\n       */\r\n      viewportTransform: fabric.iMatrix.concat(),\r\n\r\n      /**\r\n       * if set to false background image is not affected by viewport transform\r\n       * @since 1.6.3\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      backgroundVpt: true,\r\n\r\n      /**\r\n       * if set to false overlya image is not affected by viewport transform\r\n       * @since 1.6.3\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      overlayVpt: true,\r\n\r\n      /**\r\n       * Callback; invoked right before object is about to be scaled/rotated\r\n       * @deprecated since 2.3.0\r\n       * Use before:transform event\r\n       */\r\n      onBeforeScaleRotate: function () {\r\n        /* NOOP */\r\n      },\r\n\r\n      /**\r\n       * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      enableRetinaScaling: true,\r\n\r\n      /**\r\n       * Describe canvas element extension over design\r\n       * properties are tl,tr,bl,br.\r\n       * if canvas is not zoomed/panned those points are the four corner of canvas\r\n       * if canvas is viewportTransformed you those points indicate the extension\r\n       * of canvas element in plain untrasformed coordinates\r\n       * The coordinates get updated with @method calcViewportBoundaries.\r\n       * @memberOf fabric.StaticCanvas.prototype\r\n       */\r\n      vptCoords: { },\r\n\r\n      /**\r\n       * Based on vptCoords and object.aCoords, skip rendering of objects that\r\n       * are not included in current viewport.\r\n       * May greatly help in applications with crowded canvas and use of zoom/pan\r\n       * If One of the corner of the bounding box of the object is on the canvas\r\n       * the objects get rendered.\r\n       * @memberOf fabric.StaticCanvas.prototype\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      skipOffscreen: true,\r\n\r\n      /**\r\n       * @private\r\n       * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initStatic: function(el, options) {\r\n        var cb = this.requestRenderAllBound;\r\n        this._objects = [];\r\n        this._createLowerCanvas(el);\r\n        this._initOptions(options);\r\n        this._setImageSmoothing();\r\n        // only initialize retina scaling once\r\n        if (!this.interactive) {\r\n          this._initRetinaScaling();\r\n        }\r\n\r\n        if (options.overlayImage) {\r\n          this.setOverlayImage(options.overlayImage, cb);\r\n        }\r\n        if (options.backgroundImage) {\r\n          this.setBackgroundImage(options.backgroundImage, cb);\r\n        }\r\n        if (options.backgroundColor) {\r\n          this.setBackgroundColor(options.backgroundColor, cb);\r\n        }\r\n        if (options.overlayColor) {\r\n          this.setOverlayColor(options.overlayColor, cb);\r\n        }\r\n        this.calcOffset();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _isRetinaScaling: function() {\r\n        return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} retinaScaling if applied, otherwise 1;\r\n       */\r\n      getRetinaScaling: function() {\r\n        return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _initRetinaScaling: function() {\r\n        if (!this._isRetinaScaling()) {\r\n          return;\r\n        }\r\n        this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\r\n        this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\r\n\r\n        this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\r\n      },\r\n\r\n      /**\r\n       * Calculates canvas element offset relative to the document\r\n       * This method is also attached as \"resize\" event handler of window\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      calcOffset: function () {\r\n        this._offset = getElementOffset(this.lowerCanvasEl);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\r\n       * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\r\n       * @param {Function} callback callback to invoke when image is loaded and set as an overlay\r\n       * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\r\n       * @example <caption>Normal overlayImage with left/top = 0</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   // Needed to position overlayImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>overlayImage with different properties</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\r\n       * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\r\n       *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\r\n       *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\r\n       * });\r\n       * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   width: canvas.width,\r\n       *   height: canvas.height,\r\n       *   // Needed to position overlayImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>overlayImage loaded from cross-origin</caption>\r\n       * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top',\r\n       *   crossOrigin: 'anonymous'\r\n       * });\r\n       */\r\n      setOverlayImage: function (image, callback, options) {\r\n        return this.__setBgOverlayImage('overlayImage', image, callback, options);\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\r\n       * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\r\n       * @param {Function} callback Callback to invoke when image is loaded and set as background\r\n       * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\r\n       * @example <caption>Normal backgroundImage with left/top = 0</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   // Needed to position backgroundImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>backgroundImage with different properties</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\r\n       * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\r\n       *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\r\n       *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\r\n       * });\r\n       * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   width: canvas.width,\r\n       *   height: canvas.height,\r\n       *   // Needed to position backgroundImage at 0/0\r\n       *   originX: 'left',\r\n       *   originY: 'top'\r\n       * });\r\n       * @example <caption>backgroundImage loaded from cross-origin</caption>\r\n       * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n       *   opacity: 0.5,\r\n       *   angle: 45,\r\n       *   left: 400,\r\n       *   top: 400,\r\n       *   originX: 'left',\r\n       *   originY: 'top',\r\n       *   crossOrigin: 'anonymous'\r\n       * });\r\n       */\r\n      setBackgroundImage: function (image, callback, options) {\r\n        return this.__setBgOverlayImage('backgroundImage', image, callback, options);\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\r\n       * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\r\n       * @param {Function} callback Callback to invoke when foreground color is set\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\r\n       * @example <caption>Normal overlayColor - color value</caption>\r\n       * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as overlayColor</caption>\r\n       * canvas.setOverlayColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\r\n       * }, canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\r\n       * canvas.setOverlayColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n       *   repeat: 'repeat',\r\n       *   offsetX: 200,\r\n       *   offsetY: 100\r\n       * }, canvas.renderAll.bind(canvas));\r\n       */\r\n      setOverlayColor: function(overlayColor, callback) {\r\n        return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\r\n       * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\r\n       * @param {Function} callback Callback to invoke when background color is set\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\r\n       * @example <caption>Normal backgroundColor - color value</caption>\r\n       * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as backgroundColor</caption>\r\n       * canvas.setBackgroundColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\r\n       * }, canvas.renderAll.bind(canvas));\r\n       * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\r\n       * canvas.setBackgroundColor({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n       *   repeat: 'repeat',\r\n       *   offsetX: 200,\r\n       *   offsetY: 100\r\n       * }, canvas.renderAll.bind(canvas));\r\n       */\r\n      setBackgroundColor: function(backgroundColor, callback) {\r\n        return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\r\n       */\r\n      _setImageSmoothing: function() {\r\n        var ctx = this.getContext();\r\n\r\n        ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\r\n          || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\r\n        ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\r\n       * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\r\n       * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\r\n       * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\r\n       * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\r\n       */\r\n      __setBgOverlayImage: function(property, image, callback, options) {\r\n        if (typeof image === 'string') {\r\n          fabric.util.loadImage(image, function(img) {\r\n            img && (this[property] = new fabric.Image(img, options));\r\n            callback && callback(img);\r\n          }, this, options && options.crossOrigin);\r\n        }\r\n        else {\r\n          options && image.setOptions(options);\r\n          this[property] = image;\r\n          callback && callback(image);\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\r\n       * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\r\n       * @param {(Object|String|null)} color Object with pattern information, color value or null\r\n       * @param {Function} [callback] Callback is invoked when color is set\r\n       */\r\n      __setBgOverlayColor: function(property, color, callback) {\r\n        this[property] = color;\r\n        this._initGradient(color, property);\r\n        this._initPattern(color, property, callback);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createCanvasElement: function() {\r\n        var element = fabric.util.createCanvasElement();\r\n        if (!element) {\r\n          throw CANVAS_INIT_ERROR;\r\n        }\r\n        if (!element.style) {\r\n          element.style = { };\r\n        }\r\n        if (typeof element.getContext === 'undefined') {\r\n          throw CANVAS_INIT_ERROR;\r\n        }\r\n        return element;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initOptions: function (options) {\r\n        this._setOptions(options);\r\n\r\n        this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\r\n        this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\r\n\r\n        if (!this.lowerCanvasEl.style) {\r\n          return;\r\n        }\r\n\r\n        this.lowerCanvasEl.width = this.width;\r\n        this.lowerCanvasEl.height = this.height;\r\n\r\n        this.lowerCanvasEl.style.width = this.width + 'px';\r\n        this.lowerCanvasEl.style.height = this.height + 'px';\r\n\r\n        this.viewportTransform = this.viewportTransform.slice();\r\n      },\r\n\r\n      /**\r\n       * Creates a bottom canvas\r\n       * @private\r\n       * @param {HTMLElement} [canvasEl]\r\n       */\r\n      _createLowerCanvas: function (canvasEl) {\r\n        // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\r\n        if (canvasEl && canvasEl.getContext) {\r\n          this.lowerCanvasEl = canvasEl;\r\n        }\r\n        else {\r\n          this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\r\n        }\r\n\r\n        fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\r\n\r\n        if (this.interactive) {\r\n          this._applyCanvasStyle(this.lowerCanvasEl);\r\n        }\r\n\r\n        this.contextContainer = this.lowerCanvasEl.getContext('2d');\r\n      },\r\n\r\n      /**\r\n       * Returns canvas width (in px)\r\n       * @return {Number}\r\n       */\r\n      getWidth: function () {\r\n        return this.width;\r\n      },\r\n\r\n      /**\r\n       * Returns canvas height (in px)\r\n       * @return {Number}\r\n       */\r\n      getHeight: function () {\r\n        return this.height;\r\n      },\r\n\r\n      /**\r\n       * Sets width of this canvas instance\r\n       * @param {Number|String} value                         Value to set width to\r\n       * @param {Object}        [options]                     Options object\r\n       * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n       * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setWidth: function (value, options) {\r\n        return this.setDimensions({ width: value }, options);\r\n      },\r\n\r\n      /**\r\n       * Sets height of this canvas instance\r\n       * @param {Number|String} value                         Value to set height to\r\n       * @param {Object}        [options]                     Options object\r\n       * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n       * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setHeight: function (value, options) {\r\n        return this.setDimensions({ height: value }, options);\r\n      },\r\n\r\n      /**\r\n       * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\r\n       * @param {Object}        dimensions                    Object with width/height properties\r\n       * @param {Number|String} [dimensions.width]            Width of canvas element\r\n       * @param {Number|String} [dimensions.height]           Height of canvas element\r\n       * @param {Object}        [options]                     Options object\r\n       * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n       * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      setDimensions: function (dimensions, options) {\r\n        var cssValue;\r\n\r\n        options = options || {};\r\n\r\n        for (var prop in dimensions) {\r\n          cssValue = dimensions[prop];\r\n\r\n          if (!options.cssOnly) {\r\n            this._setBackstoreDimension(prop, dimensions[prop]);\r\n            cssValue += 'px';\r\n            this.hasLostContext = true;\r\n          }\r\n\r\n          if (!options.backstoreOnly) {\r\n            this._setCssDimension(prop, cssValue);\r\n          }\r\n        }\r\n        if (this._isCurrentlyDrawing) {\r\n          this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\r\n        }\r\n        this._initRetinaScaling();\r\n        this._setImageSmoothing();\r\n        this.calcOffset();\r\n\r\n        if (!options.cssOnly) {\r\n          this.requestRenderAll();\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Helper for setting width/height\r\n       * @private\r\n       * @param {String} prop property (width|height)\r\n       * @param {Number} value value to set property to\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      _setBackstoreDimension: function (prop, value) {\r\n        this.lowerCanvasEl[prop] = value;\r\n\r\n        if (this.upperCanvasEl) {\r\n          this.upperCanvasEl[prop] = value;\r\n        }\r\n\r\n        if (this.cacheCanvasEl) {\r\n          this.cacheCanvasEl[prop] = value;\r\n        }\r\n\r\n        this[prop] = value;\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Helper for setting css width/height\r\n       * @private\r\n       * @param {String} prop property (width|height)\r\n       * @param {String} value value to set property to\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      _setCssDimension: function (prop, value) {\r\n        this.lowerCanvasEl.style[prop] = value;\r\n\r\n        if (this.upperCanvasEl) {\r\n          this.upperCanvasEl.style[prop] = value;\r\n        }\r\n\r\n        if (this.wrapperEl) {\r\n          this.wrapperEl.style[prop] = value;\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns canvas zoom level\r\n       * @return {Number}\r\n       */\r\n      getZoom: function () {\r\n        return this.viewportTransform[0];\r\n      },\r\n\r\n      /**\r\n       * Sets viewport transform of this canvas instance\r\n       * @param {Array} vpt the transform in the form of context.transform\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setViewportTransform: function (vpt) {\r\n        var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\r\n        this.viewportTransform = vpt;\r\n        for (i = 0, len = this._objects.length; i < len; i++) {\r\n          object = this._objects[i];\r\n          object.group || object.setCoords(ignoreVpt, skipAbsolute);\r\n        }\r\n        if (activeObject && activeObject.type === 'activeSelection') {\r\n          activeObject.setCoords(ignoreVpt, skipAbsolute);\r\n        }\r\n        this.calcViewportBoundaries();\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets zoom level of this canvas instance, zoom centered around point\r\n       * @param {fabric.Point} point to zoom with respect to\r\n       * @param {Number} value to set zoom to, less than 1 zooms out\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      zoomToPoint: function (point, value) {\r\n        // TODO: just change the scale, preserve other transformations\r\n        var before = point, vpt = this.viewportTransform.slice(0);\r\n        point = transformPoint(point, invertTransform(this.viewportTransform));\r\n        vpt[0] = value;\r\n        vpt[3] = value;\r\n        var after = transformPoint(point, vpt);\r\n        vpt[4] += before.x - after.x;\r\n        vpt[5] += before.y - after.y;\r\n        return this.setViewportTransform(vpt);\r\n      },\r\n\r\n      /**\r\n       * Sets zoom level of this canvas instance\r\n       * @param {Number} value to set zoom to, less than 1 zooms out\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      setZoom: function (value) {\r\n        this.zoomToPoint(new fabric.Point(0, 0), value);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Pan viewport so as to place point at top left corner of canvas\r\n       * @param {fabric.Point} point to move to\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      absolutePan: function (point) {\r\n        var vpt = this.viewportTransform.slice(0);\r\n        vpt[4] = -point.x;\r\n        vpt[5] = -point.y;\r\n        return this.setViewportTransform(vpt);\r\n      },\r\n\r\n      /**\r\n       * Pans viewpoint relatively\r\n       * @param {fabric.Point} point (position vector) to move by\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable true\r\n       */\r\n      relativePan: function (point) {\r\n        return this.absolutePan(new fabric.Point(\r\n          -point.x - this.viewportTransform[4],\r\n          -point.y - this.viewportTransform[5]\r\n        ));\r\n      },\r\n\r\n      /**\r\n       * Returns &lt;canvas> element corresponding to this instance\r\n       * @return {HTMLCanvasElement}\r\n       */\r\n      getElement: function () {\r\n        return this.lowerCanvasEl;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} obj Object that was added\r\n       */\r\n      _onObjectAdded: function(obj) {\r\n        this.stateful && obj.setupState();\r\n        obj._set('canvas', this);\r\n        obj.setCoords();\r\n        this.fire('object:added', { target: obj });\r\n        obj.fire('added');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} obj Object that was removed\r\n       */\r\n      _onObjectRemoved: function(obj) {\r\n        this.fire('object:removed', { target: obj });\r\n        obj.fire('removed');\r\n        delete obj.canvas;\r\n      },\r\n\r\n      /**\r\n       * Clears specified context of canvas element\r\n       * @param {CanvasRenderingContext2D} ctx Context to clear\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      clearContext: function(ctx) {\r\n        ctx.clearRect(0, 0, this.width, this.height);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns context of canvas where objects are drawn\r\n       * @return {CanvasRenderingContext2D}\r\n       */\r\n      getContext: function () {\r\n        return this.contextContainer;\r\n      },\r\n\r\n      /**\r\n       * Clears all contexts (background, main, top) of an instance\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      clear: function () {\r\n        this._objects.length = 0;\r\n        this.backgroundImage = null;\r\n        this.overlayImage = null;\r\n        this.backgroundColor = '';\r\n        this.overlayColor = '';\r\n        if (this._hasITextHandlers) {\r\n          this.off('mouse:up', this._mouseUpITextHandler);\r\n          this._iTextInstances = null;\r\n          this._hasITextHandlers = false;\r\n        }\r\n        this.clearContext(this.contextContainer);\r\n        this.fire('canvas:cleared');\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Renders the canvas\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderAll: function () {\r\n        var canvasToDrawOn = this.contextContainer;\r\n        this.renderCanvas(canvasToDrawOn, this._objects);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Function created to be instance bound at initialization\r\n       * used in requestAnimationFrame rendering\r\n       * Let the fabricJS call it. If you call it manually you could have more\r\n       * animationFrame stacking on to of each other\r\n       * for an imperative rendering, use canvas.renderAll\r\n       * @private\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderAndReset: function() {\r\n        this.isRendering = 0;\r\n        this.renderAll();\r\n      },\r\n\r\n      /**\r\n       * Append a renderAll request to next animation frame.\r\n       * unless one is already in progress, in that case nothing is done\r\n       * a boolean flag will avoid appending more.\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      requestRenderAll: function () {\r\n        if (!this.isRendering) {\r\n          this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Calculate the position of the 4 corner of canvas with current viewportTransform.\r\n       * helps to determinate when an object is in the current rendering viewport using\r\n       * object absolute coordinates ( aCoords )\r\n       * @return {Object} points.tl\r\n       * @chainable\r\n       */\r\n      calcViewportBoundaries: function() {\r\n        var points = { }, width = this.width, height = this.height,\r\n            iVpt = invertTransform(this.viewportTransform);\r\n        points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\r\n        points.br = transformPoint({ x: width, y: height }, iVpt);\r\n        points.tr = new fabric.Point(points.br.x, points.tl.y);\r\n        points.bl = new fabric.Point(points.tl.x, points.br.y);\r\n        this.vptCoords = points;\r\n        return points;\r\n      },\r\n\r\n      cancelRequestedRender: function() {\r\n        if (this.isRendering) {\r\n          fabric.util.cancelAnimFrame(this.isRendering);\r\n          this.isRendering = 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Renders background, objects, overlay and controls.\r\n       * @param {CanvasRenderingContext2D} ctx\r\n       * @param {Array} objects to render\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderCanvas: function(ctx, objects) {\r\n        var v = this.viewportTransform;\r\n        this.cancelRequestedRender();\r\n        this.calcViewportBoundaries();\r\n        this.clearContext(ctx);\r\n        this.fire('before:render');\r\n        if (this.clipTo) {\r\n          fabric.util.clipContext(this, ctx);\r\n        }\r\n        this._renderBackground(ctx);\r\n\r\n        ctx.save();\r\n        //apply viewport transform once for all rendering process\r\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        this._renderObjects(ctx, objects);\r\n        ctx.restore();\r\n        if (!this.controlsAboveOverlay && this.interactive) {\r\n          this.drawControls(ctx);\r\n        }\r\n        if (this.clipTo) {\r\n          ctx.restore();\r\n        }\r\n        this._renderOverlay(ctx);\r\n        if (this.controlsAboveOverlay && this.interactive) {\r\n          this.drawControls(ctx);\r\n        }\r\n        this.fire('after:render');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Array} objects to render\r\n       */\r\n      _renderObjects: function(ctx, objects) {\r\n        var i, len;\r\n        for (i = 0, len = objects.length; i < len; ++i) {\r\n          objects[i] && objects[i].render(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {string} property 'background' or 'overlay'\r\n       */\r\n      _renderBackgroundOrOverlay: function(ctx, property) {\r\n        var object = this[property + 'Color'], v;\r\n        if (object) {\r\n          ctx.fillStyle = object.toLive\r\n            ? object.toLive(ctx, this)\r\n            : object;\r\n\r\n          ctx.fillRect(\r\n            object.offsetX || 0,\r\n            object.offsetY || 0,\r\n            this.width,\r\n            this.height);\r\n        }\r\n        object = this[property + 'Image'];\r\n        if (object) {\r\n          if (this[property + 'Vpt']) {\r\n            v = this.viewportTransform;\r\n            ctx.save();\r\n            ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n          }\r\n          object.render(ctx);\r\n          this[property + 'Vpt'] && ctx.restore();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderBackground: function(ctx) {\r\n        this._renderBackgroundOrOverlay(ctx, 'background');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderOverlay: function(ctx) {\r\n        this._renderBackgroundOrOverlay(ctx, 'overlay');\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of a center of canvas.\r\n       * Returned value is an object with top and left properties\r\n       * @return {Object} object with \"top\" and \"left\" number values\r\n       */\r\n      getCenter: function () {\r\n        return {\r\n          top: this.height / 2,\r\n          left: this.width / 2\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally in the canvas\r\n       * @param {fabric.Object} object Object to center horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       */\r\n      centerObjectH: function (object) {\r\n        return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically in the canvas\r\n       * @param {fabric.Object} object Object to center vertically\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      centerObjectV: function (object) {\r\n        return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically and horizontally in the canvas\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      centerObject: function(object) {\r\n        var center = this.getCenter();\r\n\r\n        return this._centerObject(object, new fabric.Point(center.left, center.top));\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically and horizontally in the viewport\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterObject: function(object) {\r\n        var vpCenter = this.getVpCenter();\r\n\r\n        return this._centerObject(object, vpCenter);\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally in the viewport, object.top is unchanged\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterObjectH: function(object) {\r\n        var vpCenter = this.getVpCenter();\r\n        this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object Vertically in the viewport, object.top is unchanged\r\n       * @param {fabric.Object} object Object to center vertically and horizontally\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterObjectV: function(object) {\r\n        var vpCenter = this.getVpCenter();\r\n\r\n        return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\r\n      },\r\n\r\n      /**\r\n       * Calculate the point in canvas that correspond to the center of actual viewport.\r\n       * @return {fabric.Point} vpCenter, viewport center\r\n       * @chainable\r\n       */\r\n      getVpCenter: function() {\r\n        var center = this.getCenter(),\r\n            iVpt = invertTransform(this.viewportTransform);\r\n        return transformPoint({ x: center.left, y: center.top }, iVpt);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} object Object to center\r\n       * @param {fabric.Point} center Center point\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      _centerObject: function(object, center) {\r\n        object.setPositionByOrigin(center, 'center', 'center');\r\n        object.setCoords();\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returs dataless JSON representation of canvas\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {String} json string\r\n       */\r\n      toDatalessJSON: function (propertiesToInclude) {\r\n        return this.toDatalessObject(propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of canvas\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function (propertiesToInclude) {\r\n        return this._toObjectMethod('toObject', propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * Returns dataless object representation of canvas\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toDatalessObject: function (propertiesToInclude) {\r\n        return this._toObjectMethod('toDatalessObject', propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObjectMethod: function (methodName, propertiesToInclude) {\r\n\r\n        var data = {\r\n          version: fabric.version,\r\n          objects: this._toObjects(methodName, propertiesToInclude)\r\n        };\r\n\r\n        extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\r\n\r\n        fabric.util.populateWithProperties(this, data, propertiesToInclude);\r\n\r\n        return data;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObjects: function(methodName, propertiesToInclude) {\r\n        return this._objects.filter(function(object) {\r\n          return !object.excludeFromExport;\r\n        }).map(function(instance) {\r\n          return this._toObject(instance, methodName, propertiesToInclude);\r\n        }, this);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObject: function(instance, methodName, propertiesToInclude) {\r\n        var originalValue;\r\n\r\n        if (!this.includeDefaultValues) {\r\n          originalValue = instance.includeDefaultValues;\r\n          instance.includeDefaultValues = false;\r\n        }\r\n\r\n        var object = instance[methodName](propertiesToInclude);\r\n        if (!this.includeDefaultValues) {\r\n          instance.includeDefaultValues = originalValue;\r\n        }\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __serializeBgOverlay: function(methodName, propertiesToInclude) {\r\n        var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\r\n\r\n        if (this.backgroundColor) {\r\n          data.background = this.backgroundColor.toObject\r\n            ? this.backgroundColor.toObject(propertiesToInclude)\r\n            : this.backgroundColor;\r\n        }\r\n\r\n        if (this.overlayColor) {\r\n          data.overlay = this.overlayColor.toObject\r\n            ? this.overlayColor.toObject(propertiesToInclude)\r\n            : this.overlayColor;\r\n        }\r\n        if (bgImage && !bgImage.excludeFromExport) {\r\n          data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\r\n        }\r\n        if (overlay && !overlay.excludeFromExport) {\r\n          data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\r\n        }\r\n\r\n        return data;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\r\n       * a zoomed canvas will then produce zoomed SVG output.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      svgViewportTransformation: true,\r\n\r\n      /**\r\n       * Returns SVG representation of canvas\r\n       * @function\r\n       * @param {Object} [options] Options object for SVG output\r\n       * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\r\n       * @param {Object} [options.viewBox] SVG viewbox object\r\n       * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\r\n       * @param {Number} [options.viewBox.y] y-coordinate of viewbox\r\n       * @param {Number} [options.viewBox.width] Width of viewbox\r\n       * @param {Number} [options.viewBox.height] Height of viewbox\r\n       * @param {String} [options.encoding=UTF-8] Encoding of SVG output\r\n       * @param {String} [options.width] desired width of svg with or without units\r\n       * @param {String} [options.height] desired height of svg with or without units\r\n       * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\r\n       * @return {String} SVG string\r\n       * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n       * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\r\n       * @example <caption>Normal SVG output</caption>\r\n       * var svg = canvas.toSVG();\r\n       * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\r\n       * var svg = canvas.toSVG({suppressPreamble: true});\r\n       * @example <caption>SVG output with viewBox attribute</caption>\r\n       * var svg = canvas.toSVG({\r\n       *   viewBox: {\r\n       *     x: 100,\r\n       *     y: 100,\r\n       *     width: 200,\r\n       *     height: 300\r\n       *   }\r\n       * });\r\n       * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\r\n       * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\r\n       * @example <caption>Modify SVG output with reviver function</caption>\r\n       * var svg = canvas.toSVG(null, function(svg) {\r\n       *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\r\n       * });\r\n       */\r\n      toSVG: function(options, reviver) {\r\n        options || (options = { });\r\n\r\n        var markup = [];\r\n\r\n        this._setSVGPreamble(markup, options);\r\n        this._setSVGHeader(markup, options);\r\n\r\n        this._setSVGBgOverlayColor(markup, 'backgroundColor');\r\n        this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\r\n\r\n        this._setSVGObjects(markup, reviver);\r\n\r\n        this._setSVGBgOverlayColor(markup, 'overlayColor');\r\n        this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\r\n\r\n        markup.push('</svg>');\r\n\r\n        return markup.join('');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGPreamble: function(markup, options) {\r\n        if (options.suppressPreamble) {\r\n          return;\r\n        }\r\n        markup.push(\r\n          '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\r\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\r\n          '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\r\n        );\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGHeader: function(markup, options) {\r\n        var width = options.width || this.width,\r\n            height = options.height || this.height,\r\n            vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n\r\n        if (options.viewBox) {\r\n          viewBox = 'viewBox=\"' +\r\n                  options.viewBox.x + ' ' +\r\n                  options.viewBox.y + ' ' +\r\n                  options.viewBox.width + ' ' +\r\n                  options.viewBox.height + '\" ';\r\n        }\r\n        else {\r\n          if (this.svgViewportTransformation) {\r\n            vpt = this.viewportTransform;\r\n            viewBox = 'viewBox=\"' +\r\n                    toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\r\n                    toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\r\n                    toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\r\n                    toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\r\n          }\r\n        }\r\n\r\n        markup.push(\r\n          '<svg ',\r\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\r\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\r\n          'version=\"1.1\" ',\r\n          'width=\"', width, '\" ',\r\n          'height=\"', height, '\" ',\r\n          viewBox,\r\n          'xml:space=\"preserve\">\\n',\r\n          '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\r\n          '<defs>\\n',\r\n          this.createSVGFontFacesMarkup(),\r\n          this.createSVGRefElementsMarkup(),\r\n          '</defs>\\n'\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Creates markup containing SVG referenced elements like patterns, gradients etc.\r\n       * @return {String}\r\n       */\r\n      createSVGRefElementsMarkup: function() {\r\n        var _this = this,\r\n            markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\r\n              var fill = _this[prop];\r\n              if (fill && fill.toLive) {\r\n                return fill.toSVG(_this, false);\r\n              }\r\n            });\r\n        return markup.join('');\r\n      },\r\n\r\n      /**\r\n       * Creates markup containing SVG font faces,\r\n       * font URLs for font faces must be collected by developers\r\n       * and are not extracted from the DOM by fabricjs\r\n       * @param {Array} objects Array of fabric objects\r\n       * @return {String}\r\n       */\r\n      createSVGFontFacesMarkup: function() {\r\n        var markup = '', fontList = { }, obj, fontFamily,\r\n            style, row, rowIndex, _char, charIndex, i, len,\r\n            fontPaths = fabric.fontPaths, objects = this._objects;\r\n\r\n        for (i = 0, len = objects.length; i < len; i++) {\r\n          obj = objects[i];\r\n          fontFamily = obj.fontFamily;\r\n          if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\r\n            continue;\r\n          }\r\n          fontList[fontFamily] = true;\r\n          if (!obj.styles) {\r\n            continue;\r\n          }\r\n          style = obj.styles;\r\n          for (rowIndex in style) {\r\n            row = style[rowIndex];\r\n            for (charIndex in row) {\r\n              _char = row[charIndex];\r\n              fontFamily = _char.fontFamily;\r\n              if (!fontList[fontFamily] && fontPaths[fontFamily]) {\r\n                fontList[fontFamily] = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        for (var j in fontList) {\r\n          markup += [\r\n            '\\t\\t@font-face {\\n',\r\n            '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\r\n            '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\r\n            '\\t\\t}\\n'\r\n          ].join('');\r\n        }\r\n\r\n        if (markup) {\r\n          markup = [\r\n            '\\t<style type=\"text/css\">',\r\n            '<![CDATA[\\n',\r\n            markup,\r\n            ']]>',\r\n            '</style>\\n'\r\n          ].join('');\r\n        }\r\n\r\n        return markup;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGObjects: function(markup, reviver) {\r\n        var instance, i, len, objects = this._objects;\r\n        for (i = 0, len = objects.length; i < len; i++) {\r\n          instance = objects[i];\r\n          if (instance.excludeFromExport) {\r\n            continue;\r\n          }\r\n          this._setSVGObject(markup, instance, reviver);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGObject: function(markup, instance, reviver) {\r\n        markup.push(instance.toSVG(reviver));\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGBgOverlayImage: function(markup, property, reviver) {\r\n        if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\r\n          markup.push(this[property].toSVG(reviver));\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGBgOverlayColor: function(markup, property) {\r\n        var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0],\r\n            finalHeight = this.height / vpt[3];\r\n        if (!filler) {\r\n          return;\r\n        }\r\n        if (filler.toLive) {\r\n          var repeat = filler.repeat;\r\n          markup.push(\r\n            '<rect transform=\"translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\r\n            ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\r\n            'width=\"',\r\n            (repeat === 'repeat-y' || repeat === 'no-repeat'\r\n              ? filler.source.width\r\n              : finalWidth ),\r\n            '\" height=\"',\r\n            (repeat === 'repeat-x' || repeat === 'no-repeat'\r\n              ? filler.source.height\r\n              : finalHeight),\r\n            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\r\n            '></rect>\\n'\r\n          );\r\n        }\r\n        else {\r\n          markup.push(\r\n            '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\r\n            'fill=\"', this[property], '\"',\r\n            '></rect>\\n'\r\n          );\r\n        }\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Moves an object or the objects of a multiple selection\r\n       * to the bottom of the stack of drawn objects\r\n       * @param {fabric.Object} object Object to send to back\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      sendToBack: function (object) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, objs;\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = objs.length; i--;) {\r\n            obj = objs[i];\r\n            removeFromArray(this._objects, obj);\r\n            this._objects.unshift(obj);\r\n          }\r\n        }\r\n        else {\r\n          removeFromArray(this._objects, object);\r\n          this._objects.unshift(object);\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Moves an object or the objects of a multiple selection\r\n       * to the top of the stack of drawn objects\r\n       * @param {fabric.Object} object Object to send\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      bringToFront: function (object) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, objs;\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = 0; i < objs.length; i++) {\r\n            obj = objs[i];\r\n            removeFromArray(this._objects, obj);\r\n            this._objects.push(obj);\r\n          }\r\n        }\r\n        else {\r\n          removeFromArray(this._objects, object);\r\n          this._objects.push(object);\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Moves an object or a selection down in stack of drawn objects\r\n       * An optional paramter, intersecting allowes to move the object in behind\r\n       * the first intersecting object. Where intersection is calculated with\r\n       * bounding box. If no intersection is found, there will not be change in the\r\n       * stack.\r\n       * @param {fabric.Object} object Object to send\r\n       * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      sendBackwards: function (object, intersecting) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, idx, newIdx, objs, objsMoved = 0;\r\n\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = 0; i < objs.length; i++) {\r\n            obj = objs[i];\r\n            idx = this._objects.indexOf(obj);\r\n            if (idx > 0 + objsMoved) {\r\n              newIdx = idx - 1;\r\n              removeFromArray(this._objects, obj);\r\n              this._objects.splice(newIdx, 0, obj);\r\n            }\r\n            objsMoved++;\r\n          }\r\n        }\r\n        else {\r\n          idx = this._objects.indexOf(object);\r\n          if (idx !== 0) {\r\n            // if object is not on the bottom of stack\r\n            newIdx = this._findNewLowerIndex(object, idx, intersecting);\r\n            removeFromArray(this._objects, object);\r\n            this._objects.splice(newIdx, 0, object);\r\n          }\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _findNewLowerIndex: function(object, idx, intersecting) {\r\n        var newIdx, i;\r\n\r\n        if (intersecting) {\r\n          newIdx = idx;\r\n\r\n          // traverse down the stack looking for the nearest intersecting object\r\n          for (i = idx - 1; i >= 0; --i) {\r\n\r\n            var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\r\n                                 object.isContainedWithinObject(this._objects[i]) ||\r\n                                 this._objects[i].isContainedWithinObject(object);\r\n\r\n            if (isIntersecting) {\r\n              newIdx = i;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          newIdx = idx - 1;\r\n        }\r\n\r\n        return newIdx;\r\n      },\r\n\r\n      /**\r\n       * Moves an object or a selection up in stack of drawn objects\r\n       * An optional paramter, intersecting allowes to move the object in front\r\n       * of the first intersecting object. Where intersection is calculated with\r\n       * bounding box. If no intersection is found, there will not be change in the\r\n       * stack.\r\n       * @param {fabric.Object} object Object to send\r\n       * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      bringForward: function (object, intersecting) {\r\n        if (!object) {\r\n          return this;\r\n        }\r\n        var activeSelection = this._activeObject,\r\n            i, obj, idx, newIdx, objs, objsMoved = 0;\r\n\r\n        if (object === activeSelection && object.type === 'activeSelection') {\r\n          objs = activeSelection._objects;\r\n          for (i = objs.length; i--;) {\r\n            obj = objs[i];\r\n            idx = this._objects.indexOf(obj);\r\n            if (idx < this._objects.length - 1 - objsMoved) {\r\n              newIdx = idx + 1;\r\n              removeFromArray(this._objects, obj);\r\n              this._objects.splice(newIdx, 0, obj);\r\n            }\r\n            objsMoved++;\r\n          }\r\n        }\r\n        else {\r\n          idx = this._objects.indexOf(object);\r\n          if (idx !== this._objects.length - 1) {\r\n            // if object is not on top of stack (last item in an array)\r\n            newIdx = this._findNewUpperIndex(object, idx, intersecting);\r\n            removeFromArray(this._objects, object);\r\n            this._objects.splice(newIdx, 0, object);\r\n          }\r\n        }\r\n        this.renderOnAddRemove && this.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _findNewUpperIndex: function(object, idx, intersecting) {\r\n        var newIdx, i, len;\r\n\r\n        if (intersecting) {\r\n          newIdx = idx;\r\n\r\n          // traverse up the stack looking for the nearest intersecting object\r\n          for (i = idx + 1, len = this._objects.length; i < len; ++i) {\r\n\r\n            var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\r\n                                 object.isContainedWithinObject(this._objects[i]) ||\r\n                                 this._objects[i].isContainedWithinObject(object);\r\n\r\n            if (isIntersecting) {\r\n              newIdx = i;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          newIdx = idx + 1;\r\n        }\r\n\r\n        return newIdx;\r\n      },\r\n\r\n      /**\r\n       * Moves an object to specified level in stack of drawn objects\r\n       * @param {fabric.Object} object Object to send\r\n       * @param {Number} index Position to move to\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      moveTo: function (object, index) {\r\n        removeFromArray(this._objects, object);\r\n        this._objects.splice(index, 0, object);\r\n        return this.renderOnAddRemove && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * Clears a canvas element and dispose objects\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      dispose: function () {\r\n        // cancel eventually ongoing renders\r\n        if (this.isRendering) {\r\n          fabric.util.cancelAnimFrame(this.isRendering);\r\n          this.isRendering = 0;\r\n        }\r\n        this.forEachObject(function(object) {\r\n          object.dispose && object.dispose();\r\n        });\r\n        this._objects = [];\r\n        if (this.backgroundImage && this.backgroundImage.dispose) {\r\n          this.backgroundImage.dispose();\r\n        }\r\n        this.backgroundImage = null;\r\n        if (this.overlayImage && this.overlayImage.dispose) {\r\n          this.overlayImage.dispose();\r\n        }\r\n        this.overlayImage = null;\r\n        this._iTextInstances = null;\r\n        this.contextContainer = null;\r\n        fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\r\n        this.lowerCanvasEl = undefined;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns a string representation of an instance\r\n       * @return {String} string representation of an instance\r\n       */\r\n      toString: function () {\r\n        return '#<fabric.Canvas (' + this.complexity() + '): ' +\r\n                 '{ objects: ' + this._objects.length + ' }>';\r\n      }\r\n    });\r\n\r\n    extend(fabric.StaticCanvas.prototype, fabric.Observable);\r\n    extend(fabric.StaticCanvas.prototype, fabric.Collection);\r\n    extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\r\n\r\n    extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\r\n\r\n      /**\r\n       * @static\r\n       * @type String\r\n       * @default\r\n       */\r\n      EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\r\n\r\n      /**\r\n       * Provides a way to check support of some of the canvas methods\r\n       * (either those of HTMLCanvasElement itself, or rendering context)\r\n       *\r\n       * @param {String} methodName Method to check support for;\r\n       *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\r\n       * @return {Boolean | null} `true` if method is supported (or at least exists),\r\n       *                          `null` if canvas element or context can not be initialized\r\n       */\r\n      supports: function (methodName) {\r\n        var el = fabric.util.createCanvasElement();\r\n\r\n        if (!el || !el.getContext) {\r\n          return null;\r\n        }\r\n\r\n        var ctx = el.getContext('2d');\r\n        if (!ctx) {\r\n          return null;\r\n        }\r\n\r\n        switch (methodName) {\r\n\r\n          case 'getImageData':\r\n            return typeof ctx.getImageData !== 'undefined';\r\n\r\n          case 'setLineDash':\r\n            return typeof ctx.setLineDash !== 'undefined';\r\n\r\n          case 'toDataURL':\r\n            return typeof el.toDataURL !== 'undefined';\r\n\r\n          case 'toDataURLWithQuality':\r\n            try {\r\n              el.toDataURL('image/jpeg', 0);\r\n              return true;\r\n            }\r\n            catch (e) { }\r\n            return false;\r\n\r\n          default:\r\n            return null;\r\n        }\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns JSON representation of canvas\r\n     * @function\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {String} JSON string\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n     * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\r\n     * @example <caption>JSON without additional properties</caption>\r\n     * var json = canvas.toJSON();\r\n     * @example <caption>JSON with additional properties included</caption>\r\n     * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\r\n     * @example <caption>JSON without default values</caption>\r\n     * canvas.includeDefaultValues = false;\r\n     * var json = canvas.toJSON();\r\n     */\r\n    fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\r\n\r\n    if (fabric.isLikelyNode) {\r\n      fabric.StaticCanvas.prototype.createPNGStream = function() {\r\n        var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\r\n        return impl && impl.createPNGStream();\r\n      };\r\n      fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\r\n        var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\r\n        return impl && impl.createJPEGStream(opts);\r\n      };\r\n    }\r\n  })();\r\n\r\n\r\n  /**\r\n   * BaseBrush class\r\n   * @class fabric.BaseBrush\r\n   * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\r\n   */\r\n  fabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\r\n\r\n    /**\r\n     * Color of a brush\r\n     * @type String\r\n     * @default\r\n     */\r\n    color: 'rgb(0, 0, 0)',\r\n\r\n    /**\r\n     * Width of a brush, has to be a Number, no string literals\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width: 1,\r\n\r\n    /**\r\n     * Shadow object representing shadow of this shape.\r\n     * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\r\n     * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\r\n     * @type fabric.Shadow\r\n     * @default\r\n     */\r\n    shadow: null,\r\n\r\n    /**\r\n     * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\r\n     * @type String\r\n     * @default\r\n     */\r\n    strokeLineCap: 'round',\r\n\r\n    /**\r\n     * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\r\n     * @type String\r\n     * @default\r\n     */\r\n    strokeLineJoin: 'round',\r\n\r\n    /**\r\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\r\n     * @type Number\r\n     * @default\r\n     */\r\n    strokeMiterLimit:         10,\r\n\r\n    /**\r\n     * Stroke Dash Array.\r\n     * @type Array\r\n     * @default\r\n     */\r\n    strokeDashArray: null,\r\n\r\n    /**\r\n     * Sets shadow of an object\r\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    setShadow: function(options) {\r\n      this.shadow = new fabric.Shadow(options);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets brush styles\r\n     * @private\r\n     */\r\n    _setBrushStyles: function() {\r\n      var ctx = this.canvas.contextTop;\r\n      ctx.strokeStyle = this.color;\r\n      ctx.lineWidth = this.width;\r\n      ctx.lineCap = this.strokeLineCap;\r\n      ctx.miterLimit = this.strokeMiterLimit;\r\n      ctx.lineJoin = this.strokeLineJoin;\r\n      if (fabric.StaticCanvas.supports('setLineDash')) {\r\n        ctx.setLineDash(this.strokeDashArray || []);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets the transformation on given context\r\n     * @param {RenderingContext2d} ctx context to render on\r\n     * @private\r\n     */\r\n    _saveAndTransform: function(ctx) {\r\n      var v = this.canvas.viewportTransform;\r\n      ctx.save();\r\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n    },\r\n\r\n    /**\r\n     * Sets brush shadow styles\r\n     * @private\r\n     */\r\n    _setShadow: function() {\r\n      if (!this.shadow) {\r\n        return;\r\n      }\r\n\r\n      var ctx = this.canvas.contextTop,\r\n          zoom = this.canvas.getZoom();\r\n\r\n      ctx.shadowColor = this.shadow.color;\r\n      ctx.shadowBlur = this.shadow.blur * zoom;\r\n      ctx.shadowOffsetX = this.shadow.offsetX * zoom;\r\n      ctx.shadowOffsetY = this.shadow.offsetY * zoom;\r\n    },\r\n\r\n    /**\r\n     * Removes brush shadow styles\r\n     * @private\r\n     */\r\n    _resetShadow: function() {\r\n      var ctx = this.canvas.contextTop;\r\n\r\n      ctx.shadowColor = '';\r\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n    }\r\n  });\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * PencilBrush class\r\n     * @class fabric.PencilBrush\r\n     * @extends fabric.BaseBrush\r\n     */\r\n    fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {fabric.Canvas} canvas\r\n       * @return {fabric.PencilBrush} Instance of a pencil brush\r\n       */\r\n      initialize: function(canvas) {\r\n        this.canvas = canvas;\r\n        this._points = [];\r\n      },\r\n\r\n      /**\r\n       * Invoked inside on mouse down and mouse move\r\n       * @param {Object} pointer\r\n       */\r\n      _drawSegment: function (ctx, p1, p2) {\r\n        var midPoint = p1.midPointFrom(p2);\r\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n        return midPoint;\r\n      },\r\n\r\n      /**\r\n       * Inovoked on mouse down\r\n       * @param {Object} pointer\r\n       */\r\n      onMouseDown: function(pointer) {\r\n        this._prepareForDrawing(pointer);\r\n        // capture coordinates immediately\r\n        // this allows to draw dots (when movement never occurs)\r\n        this._captureDrawingPath(pointer);\r\n        this._render();\r\n      },\r\n\r\n      /**\r\n       * Inovoked on mouse move\r\n       * @param {Object} pointer\r\n       */\r\n      onMouseMove: function(pointer) {\r\n        if (this._captureDrawingPath(pointer) && this._points.length > 1) {\r\n          if (this.needsFullRender) {\r\n            // redraw curve\r\n            // clear top canvas\r\n            this.canvas.clearContext(this.canvas.contextTop);\r\n            this._render();\r\n          }\r\n          else {\r\n            var points = this._points, length = points.length, ctx = this.canvas.contextTop;\r\n            // draw the curve update\r\n            this._saveAndTransform(ctx);\r\n            if (this.oldEnd) {\r\n              ctx.beginPath();\r\n              ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\r\n            }\r\n            this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Invoked on mouse up\r\n       */\r\n      onMouseUp: function() {\r\n        this.oldEnd = undefined;\r\n        this._finalizeAndAddPath();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} pointer Actual mouse position related to the canvas.\r\n       */\r\n      _prepareForDrawing: function(pointer) {\r\n\r\n        var p = new fabric.Point(pointer.x, pointer.y);\r\n\r\n        this._reset();\r\n        this._addPoint(p);\r\n        this.canvas.contextTop.moveTo(p.x, p.y);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Point} point Point to be added to points array\r\n       */\r\n      _addPoint: function(point) {\r\n        if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\r\n          return false;\r\n        }\r\n        this._points.push(point);\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Clear points array and set contextTop canvas style.\r\n       * @private\r\n       */\r\n      _reset: function() {\r\n        this._points.length = 0;\r\n        this._setBrushStyles();\r\n        var color = new fabric.Color(this.color);\r\n        this.needsFullRender = (color.getAlpha() < 1);\r\n        this._setShadow();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} pointer Actual mouse position related to the canvas.\r\n       */\r\n      _captureDrawingPath: function(pointer) {\r\n        var pointerPoint = new fabric.Point(pointer.x, pointer.y);\r\n        return this._addPoint(pointerPoint);\r\n      },\r\n\r\n      /**\r\n       * Draw a smooth path on the topCanvas using quadraticCurveTo\r\n       * @private\r\n       */\r\n      _render: function() {\r\n        var ctx  = this.canvas.contextTop, i, len,\r\n            p1 = this._points[0],\r\n            p2 = this._points[1];\r\n\r\n        this._saveAndTransform(ctx);\r\n        ctx.beginPath();\r\n        //if we only have 2 points in the path and they are the same\r\n        //it means that the user only clicked the canvas without moving the mouse\r\n        //then we should be drawing a dot. A path isn't drawn between two identical dots\r\n        //that's why we set them apart a bit\r\n        if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\r\n          var width = this.width / 1000;\r\n          p1 = new fabric.Point(p1.x, p1.y);\r\n          p2 = new fabric.Point(p2.x, p2.y);\r\n          p1.x -= width;\r\n          p2.x += width;\r\n        }\r\n        ctx.moveTo(p1.x, p1.y);\r\n\r\n        for (i = 1, len = this._points.length; i < len; i++) {\r\n          // we pick the point between pi + 1 & pi + 2 as the\r\n          // end point and p1 as our control point.\r\n          this._drawSegment(ctx, p1, p2);\r\n          p1 = this._points[i];\r\n          p2 = this._points[i + 1];\r\n        }\r\n        // Draw last line as a straight line while\r\n        // we wait for the next point to be able to calculate\r\n        // the bezier control point\r\n        ctx.lineTo(p1.x, p1.y);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Converts points to SVG path\r\n       * @param {Array} points Array of points\r\n       * @return {String} SVG path\r\n       */\r\n      convertPointsToSVGPath: function(points) {\r\n        var path = [], i, width = this.width / 1000,\r\n            p1 = new fabric.Point(points[0].x, points[0].y),\r\n            p2 = new fabric.Point(points[1].x, points[1].y),\r\n            len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\r\n\r\n        if (manyPoints) {\r\n          multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\r\n          multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\r\n        }\r\n        path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\r\n        for (i = 1; i < len; i++) {\r\n          if (!p1.eq(p2)) {\r\n            var midPoint = p1.midPointFrom(p2);\r\n            // p1 is our bezier control point\r\n            // midpoint is our endpoint\r\n            // start point is p(i-1) value.\r\n            path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\r\n          }\r\n          p1 = points[i];\r\n          if ((i + 1) < points.length) {\r\n            p2 = points[i + 1];\r\n          }\r\n        }\r\n        if (manyPoints) {\r\n          multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\r\n          multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\r\n        }\r\n        path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\r\n        return path;\r\n      },\r\n\r\n      /**\r\n       * Creates fabric.Path object to add on canvas\r\n       * @param {String} pathData Path data\r\n       * @return {fabric.Path} Path to add on canvas\r\n       */\r\n      createPath: function(pathData) {\r\n        var path = new fabric.Path(pathData, {\r\n          fill: null,\r\n          stroke: this.color,\r\n          strokeWidth: this.width,\r\n          strokeLineCap: this.strokeLineCap,\r\n          strokeMiterLimit: this.strokeMiterLimit,\r\n          strokeLineJoin: this.strokeLineJoin,\r\n          strokeDashArray: this.strokeDashArray,\r\n        });\r\n        var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\r\n        position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\r\n        path.top = position.y;\r\n        path.left = position.x;\r\n        if (this.shadow) {\r\n          this.shadow.affectStroke = true;\r\n          path.setShadow(this.shadow);\r\n        }\r\n\r\n        return path;\r\n      },\r\n\r\n      /**\r\n       * On mouseup after drawing the path on contextTop canvas\r\n       * we use the points captured to create an new fabric path object\r\n       * and add it to the fabric canvas.\r\n       */\r\n      _finalizeAndAddPath: function() {\r\n        var ctx = this.canvas.contextTop;\r\n        ctx.closePath();\r\n\r\n        var pathData = this.convertPointsToSVGPath(this._points).join('');\r\n        if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\r\n          // do not create 0 width/height paths, as they are\r\n          // rendered inconsistently across browsers\r\n          // Firefox 4, for example, renders a dot,\r\n          // whereas Chrome 10 renders nothing\r\n          this.canvas.requestRenderAll();\r\n          return;\r\n        }\r\n\r\n        var path = this.createPath(pathData);\r\n        this.canvas.clearContext(this.canvas.contextTop);\r\n        this.canvas.add(path);\r\n        this.canvas.renderAll();\r\n        path.setCoords();\r\n        this._resetShadow();\r\n\r\n\r\n        // fire event 'path' created\r\n        this.canvas.fire('path:created', { path: path });\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  /**\r\n   * CircleBrush class\r\n   * @class fabric.CircleBrush\r\n   */\r\n  fabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\r\n\r\n    /**\r\n     * Width of a brush\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width: 10,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {fabric.Canvas} canvas\r\n     * @return {fabric.CircleBrush} Instance of a circle brush\r\n     */\r\n    initialize: function(canvas) {\r\n      this.canvas = canvas;\r\n      this.points = [];\r\n    },\r\n\r\n    /**\r\n     * Invoked inside on mouse down and mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    drawDot: function(pointer) {\r\n      var point = this.addPoint(pointer),\r\n          ctx = this.canvas.contextTop;\r\n      this._saveAndTransform(ctx);\r\n      ctx.fillStyle = point.fill;\r\n      ctx.beginPath();\r\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse down\r\n     */\r\n    onMouseDown: function(pointer) {\r\n      this.points.length = 0;\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._setShadow();\r\n      this.drawDot(pointer);\r\n    },\r\n\r\n    /**\r\n     * Render the full state of the brush\r\n     * @private\r\n     */\r\n    _render: function() {\r\n      var ctx  = this.canvas.contextTop, i, len,\r\n          points = this.points, point;\r\n      this._saveAndTransform(ctx);\r\n      for (i = 0, len = points.length; i < len; i++) {\r\n        point = points[i];\r\n        ctx.fillStyle = point.fill;\r\n        ctx.beginPath();\r\n        ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseMove: function(pointer) {\r\n      this.drawDot(pointer);\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse up\r\n     */\r\n    onMouseUp: function() {\r\n      var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\r\n      this.canvas.renderOnAddRemove = false;\r\n\r\n      var circles = [];\r\n\r\n      for (i = 0, len = this.points.length; i < len; i++) {\r\n        var point = this.points[i],\r\n            circle = new fabric.Circle({\r\n              radius: point.radius,\r\n              left: point.x,\r\n              top: point.y,\r\n              originX: 'center',\r\n              originY: 'center',\r\n              fill: point.fill\r\n            });\r\n\r\n        this.shadow && circle.setShadow(this.shadow);\r\n\r\n        circles.push(circle);\r\n      }\r\n      var group = new fabric.Group(circles);\r\n      group.canvas = this.canvas;\r\n\r\n      this.canvas.add(group);\r\n      this.canvas.fire('path:created', { path: group });\r\n\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._resetShadow();\r\n      this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n      this.canvas.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * @param {Object} pointer\r\n     * @return {fabric.Point} Just added pointer point\r\n     */\r\n    addPoint: function(pointer) {\r\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y),\r\n\r\n          circleRadius = fabric.util.getRandomInt(\r\n            Math.max(0, this.width - 20), this.width + 20) / 2,\r\n\r\n          circleColor = new fabric.Color(this.color)\r\n            .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\r\n            .toRgba();\r\n\r\n      pointerPoint.radius = circleRadius;\r\n      pointerPoint.fill = circleColor;\r\n\r\n      this.points.push(pointerPoint);\r\n\r\n      return pointerPoint;\r\n    }\r\n  });\r\n\r\n\r\n  /**\r\n   * SprayBrush class\r\n   * @class fabric.SprayBrush\r\n   */\r\n  fabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\r\n\r\n    /**\r\n     * Width of a spray\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width:              10,\r\n\r\n    /**\r\n     * Density of a spray (number of dots per chunk)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    density:            20,\r\n\r\n    /**\r\n     * Width of spray dots\r\n     * @type Number\r\n     * @default\r\n     */\r\n    dotWidth:           1,\r\n\r\n    /**\r\n     * Width variance of spray dots\r\n     * @type Number\r\n     * @default\r\n     */\r\n    dotWidthVariance:   1,\r\n\r\n    /**\r\n     * Whether opacity of a dot should be random\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    randomOpacity:        false,\r\n\r\n    /**\r\n     * Whether overlapping dots (rectangles) should be removed (for performance reasons)\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    optimizeOverlapping:  true,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {fabric.Canvas} canvas\r\n     * @return {fabric.SprayBrush} Instance of a spray brush\r\n     */\r\n    initialize: function(canvas) {\r\n      this.canvas = canvas;\r\n      this.sprayChunks = [];\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse down\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseDown: function(pointer) {\r\n      this.sprayChunks.length = 0;\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._setShadow();\r\n\r\n      this.addSprayChunk(pointer);\r\n      this.render(this.sprayChunkPoints);\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseMove: function(pointer) {\r\n      this.addSprayChunk(pointer);\r\n      this.render(this.sprayChunkPoints);\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse up\r\n     */\r\n    onMouseUp: function() {\r\n      var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\r\n      this.canvas.renderOnAddRemove = false;\r\n\r\n      var rects = [];\r\n\r\n      for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\r\n        var sprayChunk = this.sprayChunks[i];\r\n\r\n        for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\r\n\r\n          var rect = new fabric.Rect({\r\n            width: sprayChunk[j].width,\r\n            height: sprayChunk[j].width,\r\n            left: sprayChunk[j].x + 1,\r\n            top: sprayChunk[j].y + 1,\r\n            originX: 'center',\r\n            originY: 'center',\r\n            fill: this.color\r\n          });\r\n          rects.push(rect);\r\n        }\r\n      }\r\n\r\n      if (this.optimizeOverlapping) {\r\n        rects = this._getOptimizedRects(rects);\r\n      }\r\n\r\n      var group = new fabric.Group(rects);\r\n      this.shadow && group.setShadow(this.shadow);\r\n      this.canvas.add(group);\r\n      this.canvas.fire('path:created', { path: group });\r\n\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this._resetShadow();\r\n      this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n      this.canvas.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Array} rects\r\n     */\r\n    _getOptimizedRects: function(rects) {\r\n\r\n      // avoid creating duplicate rects at the same coordinates\r\n      var uniqueRects = { }, key, i, len;\r\n\r\n      for (i = 0, len = rects.length; i < len; i++) {\r\n        key = rects[i].left + '' + rects[i].top;\r\n        if (!uniqueRects[key]) {\r\n          uniqueRects[key] = rects[i];\r\n        }\r\n      }\r\n      var uniqueRectsArray = [];\r\n      for (key in uniqueRects) {\r\n        uniqueRectsArray.push(uniqueRects[key]);\r\n      }\r\n\r\n      return uniqueRectsArray;\r\n    },\r\n\r\n    /**\r\n     * Render new chunk of spray brush\r\n     */\r\n    render: function(sprayChunk) {\r\n      var ctx = this.canvas.contextTop, i, len;\r\n      ctx.fillStyle = this.color;\r\n\r\n      this._saveAndTransform(ctx);\r\n\r\n      for (i = 0, len = sprayChunk.length; i < len; i++) {\r\n        var point = sprayChunk[i];\r\n        if (typeof point.opacity !== 'undefined') {\r\n          ctx.globalAlpha = point.opacity;\r\n        }\r\n        ctx.fillRect(point.x, point.y, point.width, point.width);\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Render all spray chunks\r\n     */\r\n    _render: function() {\r\n      var ctx = this.canvas.contextTop, i, ilen;\r\n      ctx.fillStyle = this.color;\r\n\r\n      this._saveAndTransform(ctx);\r\n\r\n      for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\r\n        this.render(this.sprayChunks[i]);\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * @param {Object} pointer\r\n     */\r\n    addSprayChunk: function(pointer) {\r\n      this.sprayChunkPoints = [];\r\n\r\n      var x, y, width, radius = this.width / 2, i;\r\n\r\n      for (i = 0; i < this.density; i++) {\r\n\r\n        x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\r\n        y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\r\n\r\n        if (this.dotWidthVariance) {\r\n          width = fabric.util.getRandomInt(\r\n            // bottom clamp width to 1\r\n            Math.max(1, this.dotWidth - this.dotWidthVariance),\r\n            this.dotWidth + this.dotWidthVariance);\r\n        }\r\n        else {\r\n          width = this.dotWidth;\r\n        }\r\n\r\n        var point = new fabric.Point(x, y);\r\n        point.width = width;\r\n\r\n        if (this.randomOpacity) {\r\n          point.opacity = fabric.util.getRandomInt(0, 100) / 100;\r\n        }\r\n\r\n        this.sprayChunkPoints.push(point);\r\n      }\r\n\r\n      this.sprayChunks.push(this.sprayChunkPoints);\r\n    }\r\n  });\r\n\r\n\r\n  /**\r\n   * PatternBrush class\r\n   * @class fabric.PatternBrush\r\n   * @extends fabric.BaseBrush\r\n   */\r\n  fabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\r\n\r\n    getPatternSrc: function() {\r\n\r\n      var dotWidth = 20,\r\n          dotDistance = 5,\r\n          patternCanvas = fabric.util.createCanvasElement(),\r\n          patternCtx = patternCanvas.getContext('2d');\r\n\r\n      patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\r\n\r\n      patternCtx.fillStyle = this.color;\r\n      patternCtx.beginPath();\r\n      patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\r\n      patternCtx.closePath();\r\n      patternCtx.fill();\r\n\r\n      return patternCanvas;\r\n    },\r\n\r\n    getPatternSrcFunction: function() {\r\n      return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\r\n    },\r\n\r\n    /**\r\n     * Creates \"pattern\" instance property\r\n     */\r\n    getPattern: function() {\r\n      return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\r\n    },\r\n\r\n    /**\r\n     * Sets brush styles\r\n     */\r\n    _setBrushStyles: function() {\r\n      this.callSuper('_setBrushStyles');\r\n      this.canvas.contextTop.strokeStyle = this.getPattern();\r\n    },\r\n\r\n    /**\r\n     * Creates path\r\n     */\r\n    createPath: function(pathData) {\r\n      var path = this.callSuper('createPath', pathData),\r\n          topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\r\n\r\n      path.stroke = new fabric.Pattern({\r\n        source: this.source || this.getPatternSrcFunction(),\r\n        offsetX: -topLeft.x,\r\n        offsetY: -topLeft.y\r\n      });\r\n      return path;\r\n    }\r\n  });\r\n\r\n\r\n  (function() {\r\n\r\n    var getPointer = fabric.util.getPointer,\r\n        degreesToRadians = fabric.util.degreesToRadians,\r\n        radiansToDegrees = fabric.util.radiansToDegrees,\r\n        atan2 = Math.atan2,\r\n        abs = Math.abs,\r\n        supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\r\n\r\n        STROKE_OFFSET = 0.5;\r\n\r\n    /**\r\n     * Canvas class\r\n     * @class fabric.Canvas\r\n     * @extends fabric.StaticCanvas\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\r\n     * @see {@link fabric.Canvas#initialize} for constructor definition\r\n     *\r\n     * @fires object:modified\r\n     * @fires object:rotated\r\n     * @fires object:scaled\r\n     * @fires object:moved\r\n     * @fires object:skewed\r\n     * @fires object:rotating\r\n     * @fires object:scaling\r\n     * @fires object:moving\r\n     * @fires object:skewing\r\n     * @fires object:selected this event is deprecated. use selection:created\r\n     *\r\n     * @fires before:transform\r\n     * @fires before:selection:cleared\r\n     * @fires selection:cleared\r\n     * @fires selection:updated\r\n     * @fires selection:created\r\n     *\r\n     * @fires path:created\r\n     * @fires mouse:down\r\n     * @fires mouse:move\r\n     * @fires mouse:up\r\n     * @fires mouse:down:before\r\n     * @fires mouse:move:before\r\n     * @fires mouse:up:before\r\n     * @fires mouse:over\r\n     * @fires mouse:out\r\n     * @fires mouse:dblclick\r\n     *\r\n     * @fires dragover\r\n     * @fires dragenter\r\n     * @fires dragleave\r\n     * @fires drop\r\n     *\r\n     */\r\n    fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(el, options) {\r\n        options || (options = { });\r\n        this.renderAndResetBound = this.renderAndReset.bind(this);\r\n        this.requestRenderAllBound = this.requestRenderAll.bind(this);\r\n        this._initStatic(el, options);\r\n        this._initInteractive();\r\n        this._createCacheCanvas();\r\n      },\r\n\r\n      /**\r\n       * When true, objects can be transformed by one side (unproportionally)\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      uniScaleTransform:      false,\r\n\r\n      /**\r\n       * Indicates which key enable unproportional scaling\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled feature disabled.\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      uniScaleKey:           'shiftKey',\r\n\r\n      /**\r\n       * When true, objects use center point as the origin of scale transformation.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredScaling:        false,\r\n\r\n      /**\r\n       * When true, objects use center point as the origin of rotate transformation.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredRotation:       false,\r\n\r\n      /**\r\n       * Indicates which key enable centered Transform\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled feature disabled.\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      centeredKey:           'altKey',\r\n\r\n      /**\r\n       * Indicates which key enable alternate action on corner\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled feature disabled.\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      altActionKey:           'shiftKey',\r\n\r\n      /**\r\n       * Indicates that canvas is interactive. This property should not be changed.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      interactive:            true,\r\n\r\n      /**\r\n       * Indicates whether group selection should be enabled\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      selection:              true,\r\n\r\n      /**\r\n       * Indicates which key or keys enable multiple click selection\r\n       * Pass value as a string or array of strings\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * If `null` or empty or containing any other string that is not a modifier key\r\n       * feature is disabled.\r\n       * @since 1.6.2\r\n       * @type String|Array\r\n       * @default\r\n       */\r\n      selectionKey:           'shiftKey',\r\n\r\n      /**\r\n       * Indicates which key enable alternative selection\r\n       * in case of target overlapping with active object\r\n       * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n       * For a series of reason that come from the general expectations on how\r\n       * things should work, this feature works only for preserveObjectStacking true.\r\n       * If `null` or 'none' or any other string that is not a modifier key\r\n       * feature is disabled.\r\n       * @since 1.6.5\r\n       * @type null|String\r\n       * @default\r\n       */\r\n      altSelectionKey:           null,\r\n\r\n      /**\r\n       * Color of selection\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\r\n\r\n      /**\r\n       * Default dash array pattern\r\n       * If not empty the selection border is dashed\r\n       * @type Array\r\n       */\r\n      selectionDashArray:     [],\r\n\r\n      /**\r\n       * Color of the border of selection (usually slightly darker than color of selection itself)\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\r\n\r\n      /**\r\n       * Width of a line used in object/group selection\r\n       * @type Number\r\n       * @default\r\n       */\r\n      selectionLineWidth:     1,\r\n\r\n      /**\r\n       * Select only shapes that are fully contained in the dragged selection rectangle.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      selectionFullyContained: false,\r\n\r\n      /**\r\n       * Default cursor value used when hovering over an object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      hoverCursor:            'move',\r\n\r\n      /**\r\n       * Default cursor value used when moving an object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      moveCursor:             'move',\r\n\r\n      /**\r\n       * Default cursor value used for the entire canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      defaultCursor:          'default',\r\n\r\n      /**\r\n       * Cursor value used during free drawing\r\n       * @type String\r\n       * @default\r\n       */\r\n      freeDrawingCursor:      'crosshair',\r\n\r\n      /**\r\n       * Cursor value used for rotation point\r\n       * @type String\r\n       * @default\r\n       */\r\n      rotationCursor:         'crosshair',\r\n\r\n      /**\r\n       * Cursor value used for disabled elements ( corners with disabled action )\r\n       * @type String\r\n       * @since 2.0.0\r\n       * @default\r\n       */\r\n      notAllowedCursor:         'not-allowed',\r\n\r\n      /**\r\n       * Default element class that's given to wrapper (div) element of canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      containerClass:         'canvas-container',\r\n\r\n      /**\r\n       * When true, object detection happens on per-pixel basis rather than on per-bounding-box\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      perPixelTargetFind:     false,\r\n\r\n      /**\r\n       * Number of pixels around target pixel to tolerate (consider active) during object detection\r\n       * @type Number\r\n       * @default\r\n       */\r\n      targetFindTolerance:    0,\r\n\r\n      /**\r\n       * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      skipTargetFind:         false,\r\n\r\n      /**\r\n       * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\r\n       * After mousedown, mousemove creates a shape,\r\n       * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\r\n       * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      isDrawingMode:          false,\r\n\r\n      /**\r\n       * Indicates whether objects should remain in current stack position when selected.\r\n       * When false objects are brought to top and rendered as part of the selection group\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      preserveObjectStacking: false,\r\n\r\n      /**\r\n       * Indicates the angle that an object will lock to while rotating.\r\n       * @type Number\r\n       * @since 1.6.7\r\n       * @default\r\n       */\r\n      snapAngle: 0,\r\n\r\n      /**\r\n       * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\r\n       * When `null`, the snapThreshold will default to the snapAngle.\r\n       * @type null|Number\r\n       * @since 1.6.7\r\n       * @default\r\n       */\r\n      snapThreshold: null,\r\n\r\n      /**\r\n       * Indicates if the right click on canvas can output the context menu or not\r\n       * @type Boolean\r\n       * @since 1.6.5\r\n       * @default\r\n       */\r\n      stopContextMenu: false,\r\n\r\n      /**\r\n       * Indicates if the canvas can fire right click events\r\n       * @type Boolean\r\n       * @since 1.6.5\r\n       * @default\r\n       */\r\n      fireRightClick: false,\r\n\r\n      /**\r\n       * Indicates if the canvas can fire middle click events\r\n       * @type Boolean\r\n       * @since 1.7.8\r\n       * @default\r\n       */\r\n      fireMiddleClick: false,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _initInteractive: function() {\r\n        this._currentTransform = null;\r\n        this._groupSelector = null;\r\n        this._initWrapperElement();\r\n        this._createUpperCanvas();\r\n        this._initEventListeners();\r\n\r\n        this._initRetinaScaling();\r\n\r\n        this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\r\n\r\n        this.calcOffset();\r\n      },\r\n\r\n      /**\r\n       * Divides objects in two groups, one to render immediately\r\n       * and one to render as activeGroup.\r\n       * @return {Array} objects to render immediately and pushes the other in the activeGroup.\r\n       */\r\n      _chooseObjectsToRender: function() {\r\n        var activeObjects = this.getActiveObjects(),\r\n            object, objsToRender, activeGroupObjects;\r\n\r\n        if (activeObjects.length > 0 && !this.preserveObjectStacking) {\r\n          objsToRender = [];\r\n          activeGroupObjects = [];\r\n          for (var i = 0, length = this._objects.length; i < length; i++) {\r\n            object = this._objects[i];\r\n            if (activeObjects.indexOf(object) === -1 ) {\r\n              objsToRender.push(object);\r\n            }\r\n            else {\r\n              activeGroupObjects.push(object);\r\n            }\r\n          }\r\n          if (activeObjects.length > 1) {\r\n            this._activeObject._objects = activeGroupObjects;\r\n          }\r\n          objsToRender.push.apply(objsToRender, activeGroupObjects);\r\n        }\r\n        else {\r\n          objsToRender = this._objects;\r\n        }\r\n        return objsToRender;\r\n      },\r\n\r\n      /**\r\n       * Renders both the top canvas and the secondary container canvas.\r\n       * @return {fabric.Canvas} instance\r\n       * @chainable\r\n       */\r\n      renderAll: function () {\r\n        if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\r\n          this.clearContext(this.contextTop);\r\n          this.contextTopDirty = false;\r\n        }\r\n        if (this.hasLostContext) {\r\n          this.renderTopLayer(this.contextTop);\r\n        }\r\n        var canvasToDrawOn = this.contextContainer;\r\n        this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\r\n        return this;\r\n      },\r\n\r\n      renderTopLayer: function(ctx) {\r\n        if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n          this.freeDrawingBrush && this.freeDrawingBrush._render();\r\n        }\r\n        // we render the top context - last object\r\n        if (this.selection && this._groupSelector) {\r\n          this._drawSelection(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method to render only the top canvas.\r\n       * Also used to render the group selection box.\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      renderTop: function () {\r\n        var ctx = this.contextTop;\r\n        this.clearContext(ctx);\r\n        this.renderTopLayer(ctx);\r\n        this.fire('after:render');\r\n        this.contextTopDirty = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Resets the current transform to its original values and chooses the type of resizing based on the event\r\n       * @private\r\n       */\r\n      _resetCurrentTransform: function() {\r\n        var t = this._currentTransform;\r\n\r\n        t.target.set({\r\n          scaleX: t.original.scaleX,\r\n          scaleY: t.original.scaleY,\r\n          skewX: t.original.skewX,\r\n          skewY: t.original.skewY,\r\n          left: t.original.left,\r\n          top: t.original.top\r\n        });\r\n\r\n        if (this._shouldCenterTransform(t.target)) {\r\n          if (t.originX !== 'center') {\r\n            if (t.originX === 'right') {\r\n              t.mouseXSign = -1;\r\n            }\r\n            else {\r\n              t.mouseXSign = 1;\r\n            }\r\n          }\r\n          if (t.originY !== 'center') {\r\n            if (t.originY === 'bottom') {\r\n              t.mouseYSign = -1;\r\n            }\r\n            else {\r\n              t.mouseYSign = 1;\r\n            }\r\n          }\r\n\r\n          t.originX = 'center';\r\n          t.originY = 'center';\r\n        }\r\n        else {\r\n          t.originX = t.original.originX;\r\n          t.originY = t.original.originY;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Checks if point is contained within an area of given object\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target Object to test against\r\n       * @param {Object} [point] x,y object of point coordinates we want to check.\r\n       * @return {Boolean} true if point is contained within an area of given object\r\n       */\r\n      containsPoint: function (e, target, point) {\r\n        var ignoreZoom = true,\r\n            pointer = point || this.getPointer(e, ignoreZoom),\r\n            xy;\r\n\r\n        if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\r\n          xy = this._normalizePointer(target.group, pointer);\r\n        }\r\n        else {\r\n          xy = { x: pointer.x, y: pointer.y };\r\n        }\r\n        // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\r\n        // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\r\n        return (target.containsPoint(xy) || target._findTargetCorner(pointer));\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _normalizePointer: function (object, pointer) {\r\n        var m = object.calcTransformMatrix(),\r\n            invertedM = fabric.util.invertTransform(m),\r\n            vptPointer = this.restorePointerVpt(pointer);\r\n        return fabric.util.transformPoint(vptPointer, invertedM);\r\n      },\r\n\r\n      /**\r\n       * Returns true if object is transparent at a certain location\r\n       * @param {fabric.Object} target Object to check\r\n       * @param {Number} x Left coordinate\r\n       * @param {Number} y Top coordinate\r\n       * @return {Boolean}\r\n       */\r\n      isTargetTransparent: function (target, x, y) {\r\n        if (target.shouldCache() && target._cacheCanvas) {\r\n          var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\r\n              targetRelativeX = target.cacheTranslationX + (normalizedPointer.x * target.zoomX),\r\n              targetRelativeY = target.cacheTranslationY + (normalizedPointer.y * target.zoomY);\r\n\r\n          var isTransparent = fabric.util.isTransparent(\r\n            target._cacheContext, targetRelativeX, targetRelativeY, this.targetFindTolerance);\r\n\r\n          return isTransparent;\r\n        }\r\n\r\n        var ctx = this.contextCache,\r\n            originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\r\n\r\n        target.selectionBackgroundColor = '';\r\n\r\n        this.clearContext(ctx);\r\n\r\n        ctx.save();\r\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        target.render(ctx);\r\n        ctx.restore();\r\n\r\n        target === this._activeObject && target._renderControls(ctx, {\r\n          hasBorders: false,\r\n          transparentCorners: false\r\n        }, {\r\n          hasBorders: false,\r\n        });\r\n\r\n        target.selectionBackgroundColor = originalColor;\r\n\r\n        var isTransparent = fabric.util.isTransparent(\r\n          ctx, x, y, this.targetFindTolerance);\r\n\r\n        return isTransparent;\r\n      },\r\n\r\n      /**\r\n       * takes an event and determins if selection key has been pressed\r\n       * @private\r\n       * @param {Event} e Event object\r\n       */\r\n      _isSelectionKeyPressed: function(e) {\r\n        var selectionKeyPressed = false;\r\n\r\n        if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\r\n          selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\r\n        }\r\n        else {\r\n          selectionKeyPressed = e[this.selectionKey];\r\n        }\r\n\r\n        return selectionKeyPressed;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       */\r\n      _shouldClearSelection: function (e, target) {\r\n        var activeObjects = this.getActiveObjects(),\r\n            activeObject = this._activeObject;\r\n\r\n        return (\r\n          !target\r\n          ||\r\n          (target &&\r\n            activeObject &&\r\n            activeObjects.length > 1 &&\r\n            activeObjects.indexOf(target) === -1 &&\r\n            activeObject !== target &&\r\n            !this._isSelectionKeyPressed(e))\r\n          ||\r\n          (target && !target.evented)\r\n          ||\r\n          (target &&\r\n            !target.selectable &&\r\n            activeObject &&\r\n            activeObject !== target)\r\n        );\r\n      },\r\n\r\n      /**\r\n       * centeredScaling from object can't override centeredScaling from canvas.\r\n       * this should be fixed, since object setting should take precedence over canvas.\r\n       * @private\r\n       * @param {fabric.Object} target\r\n       */\r\n      _shouldCenterTransform: function (target) {\r\n        if (!target) {\r\n          return;\r\n        }\r\n\r\n        var t = this._currentTransform,\r\n            centerTransform;\r\n\r\n        if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\r\n          centerTransform = this.centeredScaling || target.centeredScaling;\r\n        }\r\n        else if (t.action === 'rotate') {\r\n          centerTransform = this.centeredRotation || target.centeredRotation;\r\n        }\r\n\r\n        return centerTransform ? !t.altKey : t.altKey;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getOriginFromCorner: function(target, corner) {\r\n        var origin = {\r\n          x: target.originX,\r\n          y: target.originY\r\n        };\r\n\r\n        if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\r\n          origin.x = 'right';\r\n        }\r\n        else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\r\n          origin.x = 'left';\r\n        }\r\n\r\n        if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\r\n          origin.y = 'bottom';\r\n        }\r\n        else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\r\n          origin.y = 'top';\r\n        }\r\n\r\n        return origin;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getActionFromCorner: function(target, corner, e) {\r\n        if (!corner) {\r\n          return 'drag';\r\n        }\r\n\r\n        switch (corner) {\r\n          case 'mtr':\r\n            return 'rotate';\r\n          case 'ml':\r\n          case 'mr':\r\n            return e[this.altActionKey] ? 'skewY' : 'scaleX';\r\n          case 'mt':\r\n          case 'mb':\r\n            return e[this.altActionKey] ? 'skewX' : 'scaleY';\r\n          default:\r\n            return 'scale';\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       */\r\n      _setupCurrentTransform: function (e, target) {\r\n        if (!target) {\r\n          return;\r\n        }\r\n\r\n        var pointer = this.getPointer(e),\r\n            corner = target._findTargetCorner(this.getPointer(e, true)),\r\n            action = this._getActionFromCorner(target, corner, e),\r\n            origin = this._getOriginFromCorner(target, corner);\r\n\r\n        this._currentTransform = {\r\n          target: target,\r\n          action: action,\r\n          corner: corner,\r\n          scaleX: target.scaleX,\r\n          scaleY: target.scaleY,\r\n          skewX: target.skewX,\r\n          skewY: target.skewY,\r\n          // used by transation\r\n          offsetX: pointer.x - target.left,\r\n          offsetY: pointer.y - target.top,\r\n          originX: origin.x,\r\n          originY: origin.y,\r\n          ex: pointer.x,\r\n          ey: pointer.y,\r\n          lastX: pointer.x,\r\n          lastY: pointer.y,\r\n          // unsure they are usefull anymore.\r\n          // left: target.left,\r\n          // top: target.top,\r\n          theta: degreesToRadians(target.angle),\r\n          // end of unsure\r\n          width: target.width * target.scaleX,\r\n          mouseXSign: 1,\r\n          mouseYSign: 1,\r\n          shiftKey: e.shiftKey,\r\n          altKey: e[this.centeredKey],\r\n          original: fabric.util.saveObjectTransform(target),\r\n        };\r\n\r\n        this._currentTransform.original.originX = origin.x;\r\n        this._currentTransform.original.originY = origin.y;\r\n\r\n        this._resetCurrentTransform();\r\n        this._beforeTransform(e);\r\n      },\r\n\r\n      /**\r\n       * Translates object by \"setting\" its left/top\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @return {Boolean} true if the translation occurred\r\n       */\r\n      _translateObject: function (x, y) {\r\n        var transform = this._currentTransform,\r\n            target = transform.target,\r\n            newLeft = x - transform.offsetX,\r\n            newTop = y - transform.offsetY,\r\n            moveX = !target.get('lockMovementX') && target.left !== newLeft,\r\n            moveY = !target.get('lockMovementY') && target.top !== newTop;\r\n\r\n        moveX && target.set('left', newLeft);\r\n        moveY && target.set('top', newTop);\r\n        return moveX || moveY;\r\n      },\r\n\r\n      /**\r\n       * Check if we are increasing a positive skew or lower it,\r\n       * checking mouse direction and pressed corner.\r\n       * @private\r\n       */\r\n      _changeSkewTransformOrigin: function(mouseMove, t, by) {\r\n        var property = 'originX', origins = { 0: 'center' },\r\n            skew = t.target.skewX, originA = 'left', originB = 'right',\r\n            corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\r\n            flipSign = 1;\r\n\r\n        mouseMove = mouseMove > 0 ? 1 : -1;\r\n        if (by === 'y') {\r\n          skew = t.target.skewY;\r\n          originA = 'top';\r\n          originB = 'bottom';\r\n          property = 'originY';\r\n        }\r\n        origins[-1] = originA;\r\n        origins[1] = originB;\r\n\r\n        t.target.flipX && (flipSign *= -1);\r\n        t.target.flipY && (flipSign *= -1);\r\n\r\n        if (skew === 0) {\r\n          t.skewSign = -corner * mouseMove * flipSign;\r\n          t[property] = origins[-mouseMove];\r\n        }\r\n        else {\r\n          skew = skew > 0 ? 1 : -1;\r\n          t.skewSign = skew;\r\n          t[property] = origins[skew * corner * flipSign];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Skew object by mouse events\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @param {String} by Either 'x' or 'y'\r\n       * @return {Boolean} true if the skewing occurred\r\n       */\r\n      _skewObject: function (x, y, by) {\r\n        var t = this._currentTransform,\r\n            target = t.target, skewed = false,\r\n            lockSkewingX = target.get('lockSkewingX'),\r\n            lockSkewingY = target.get('lockSkewingY');\r\n\r\n        if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\r\n          return false;\r\n        }\r\n\r\n        // Get the constraint point\r\n        var center = target.getCenterPoint(),\r\n            actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\r\n            lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\r\n            actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\r\n\r\n        this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\r\n        actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\r\n        constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\r\n        // Actually skew the object\r\n        skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\r\n        t.lastX = x;\r\n        t.lastY = y;\r\n        // Make sure the constraints apply\r\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\r\n        return skewed;\r\n      },\r\n\r\n      /**\r\n       * Set object skew\r\n       * @private\r\n       * @return {Boolean} true if the skewing occurred\r\n       */\r\n      _setObjectSkew: function(localMouse, transform, by, _dim) {\r\n        var target = transform.target, newValue, skewed = false,\r\n            skewSign = transform.skewSign, newDim, dimNoSkew,\r\n            otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\r\n\r\n        if (by === 'x') {\r\n          otherBy = 'y';\r\n          _otherBy = 'Y';\r\n          _by = 'X';\r\n          skewX = 0;\r\n          skewY = target.skewY;\r\n        }\r\n        else {\r\n          otherBy = 'x';\r\n          _otherBy = 'X';\r\n          _by = 'Y';\r\n          skewX = target.skewX;\r\n          skewY = 0;\r\n        }\r\n\r\n        dimNoSkew = target._getTransformedDimensions(skewX, skewY);\r\n        newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\r\n        if (newDimMouse <= 2) {\r\n          newValue = 0;\r\n        }\r\n        else {\r\n          newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\r\n                                          (dimNoSkew[otherBy] / target['scale' + _otherBy]));\r\n          newValue = fabric.util.radiansToDegrees(newValue);\r\n        }\r\n        skewed = target['skew' + _by] !== newValue;\r\n        target.set('skew' + _by, newValue);\r\n        if (target['skew' + _otherBy] !== 0) {\r\n          newDim = target._getTransformedDimensions();\r\n          newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\r\n          target.set('scale' + _otherBy, newValue);\r\n        }\r\n        return skewed;\r\n      },\r\n\r\n      /**\r\n       * Scales object by invoking its scaleX/scaleY methods\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\r\n       *                    When not provided, an object is scaled by both dimensions equally\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _scaleObject: function (x, y, by) {\r\n        var t = this._currentTransform,\r\n            target = t.target,\r\n            lockScalingX = target.lockScalingX,\r\n            lockScalingY = target.lockScalingY,\r\n            lockScalingFlip = target.lockScalingFlip;\r\n\r\n        if (lockScalingX && lockScalingY) {\r\n          return false;\r\n        }\r\n\r\n        // Get the constraint point\r\n        var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\r\n            localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\r\n            dim = target._getTransformedDimensions(), scaled = false;\r\n\r\n        this._setLocalMouse(localMouse, t);\r\n\r\n        // Actually scale the object\r\n        scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\r\n\r\n        // Make sure the constraints apply\r\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\r\n        return scaled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\r\n        var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\r\n            changeX, changeY, scaleX, scaleY;\r\n\r\n        scaleX = localMouse.x * target.scaleX / _dim.x;\r\n        scaleY = localMouse.y * target.scaleY / _dim.y;\r\n        changeX = target.scaleX !== scaleX;\r\n        changeY = target.scaleY !== scaleY;\r\n\r\n        if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\r\n          forbidScalingX = true;\r\n          localMouse.x = 0;\r\n        }\r\n\r\n        if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\r\n          forbidScalingY = true;\r\n          localMouse.y = 0;\r\n        }\r\n\r\n        if (by === 'equally' && !lockScalingX && !lockScalingY) {\r\n          scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\r\n        }\r\n        else if (!by) {\r\n          forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\r\n          forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\r\n        }\r\n        else if (by === 'x' && !target.get('lockUniScaling')) {\r\n          forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\r\n        }\r\n        else if (by === 'y' && !target.get('lockUniScaling')) {\r\n          forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\r\n        }\r\n        transform.newScaleX = scaleX;\r\n        transform.newScaleY = scaleY;\r\n        forbidScalingX || forbidScalingY || this._flipObject(transform, by);\r\n        return scaled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _scaleObjectEqually: function(localMouse, target, transform, _dim) {\r\n\r\n        var dist = localMouse.y + localMouse.x,\r\n            lastDist = _dim.y * transform.original.scaleY / target.scaleY +\r\n                       _dim.x * transform.original.scaleX / target.scaleX,\r\n            scaled, signX = localMouse.x < 0 ? -1 : 1,\r\n            signY = localMouse.y < 0 ? -1 : 1;\r\n\r\n        // We use transform.scaleX/Y instead of target.scaleX/Y\r\n        // because the object may have a min scale and we'll loose the proportions\r\n        transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\r\n        transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\r\n        scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\r\n        target.set('scaleX', transform.newScaleX);\r\n        target.set('scaleY', transform.newScaleY);\r\n        return scaled;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _flipObject: function(transform, by) {\r\n        if (transform.newScaleX < 0 && by !== 'y') {\r\n          if (transform.originX === 'left') {\r\n            transform.originX = 'right';\r\n          }\r\n          else if (transform.originX === 'right') {\r\n            transform.originX = 'left';\r\n          }\r\n        }\r\n\r\n        if (transform.newScaleY < 0 && by !== 'x') {\r\n          if (transform.originY === 'top') {\r\n            transform.originY = 'bottom';\r\n          }\r\n          else if (transform.originY === 'bottom') {\r\n            transform.originY = 'top';\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setLocalMouse: function(localMouse, t) {\r\n        var target = t.target, zoom = this.getZoom(),\r\n            padding = target.padding / zoom;\r\n\r\n        if (t.originX === 'right') {\r\n          localMouse.x *= -1;\r\n        }\r\n        else if (t.originX === 'center') {\r\n          localMouse.x *= t.mouseXSign * 2;\r\n          if (localMouse.x < 0) {\r\n            t.mouseXSign = -t.mouseXSign;\r\n          }\r\n        }\r\n\r\n        if (t.originY === 'bottom') {\r\n          localMouse.y *= -1;\r\n        }\r\n        else if (t.originY === 'center') {\r\n          localMouse.y *= t.mouseYSign * 2;\r\n          if (localMouse.y < 0) {\r\n            t.mouseYSign = -t.mouseYSign;\r\n          }\r\n        }\r\n\r\n        // adjust the mouse coordinates when dealing with padding\r\n        if (abs(localMouse.x) > padding) {\r\n          if (localMouse.x < 0) {\r\n            localMouse.x += padding;\r\n          }\r\n          else {\r\n            localMouse.x -= padding;\r\n          }\r\n        }\r\n        else { // mouse is within the padding, set to 0\r\n          localMouse.x = 0;\r\n        }\r\n\r\n        if (abs(localMouse.y) > padding) {\r\n          if (localMouse.y < 0) {\r\n            localMouse.y += padding;\r\n          }\r\n          else {\r\n            localMouse.y -= padding;\r\n          }\r\n        }\r\n        else {\r\n          localMouse.y = 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Rotates object by invoking its rotate method\r\n       * @private\r\n       * @param {Number} x pointer's x coordinate\r\n       * @param {Number} y pointer's y coordinate\r\n       * @return {Boolean} true if the rotation occurred\r\n       */\r\n      _rotateObject: function (x, y) {\r\n\r\n        var t = this._currentTransform,\r\n            target = t.target, constraintPosition,\r\n            constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\r\n\r\n        if (target.lockRotation) {\r\n          return false;\r\n        }\r\n\r\n        var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\r\n            curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\r\n            angle = radiansToDegrees(curAngle - lastAngle + t.theta),\r\n            hasRotated = true;\r\n\r\n        if (target.snapAngle > 0) {\r\n          var snapAngle  = target.snapAngle,\r\n              snapThreshold  = target.snapThreshold || snapAngle,\r\n              rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\r\n              leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\r\n\r\n          if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\r\n            angle = leftAngleLocked;\r\n          }\r\n          else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\r\n            angle = rightAngleLocked;\r\n          }\r\n        }\r\n\r\n        // normalize angle to positive value\r\n        if (angle < 0) {\r\n          angle = 360 + angle;\r\n        }\r\n        angle %= 360;\r\n\r\n        if (target.angle === angle) {\r\n          hasRotated = false;\r\n        }\r\n        else {\r\n          // rotation only happen here\r\n          target.angle = angle;\r\n          // Make sure the constraints apply\r\n          target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\r\n        }\r\n\r\n        return hasRotated;\r\n      },\r\n\r\n      /**\r\n       * Set the cursor type of the canvas element\r\n       * @param {String} value Cursor type of the canvas element.\r\n       * @see http://www.w3.org/TR/css3-ui/#cursor\r\n       */\r\n      setCursor: function (value) {\r\n        this.upperCanvasEl.style.cursor = value;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx to draw the selection on\r\n       */\r\n      _drawSelection: function (ctx) {\r\n        var groupSelector = this._groupSelector,\r\n            left = groupSelector.left,\r\n            top = groupSelector.top,\r\n            aleft = abs(left),\r\n            atop = abs(top);\r\n\r\n        if (this.selectionColor) {\r\n          ctx.fillStyle = this.selectionColor;\r\n\r\n          ctx.fillRect(\r\n            groupSelector.ex - ((left > 0) ? 0 : -left),\r\n            groupSelector.ey - ((top > 0) ? 0 : -top),\r\n            aleft,\r\n            atop\r\n          );\r\n        }\r\n\r\n        if (!this.selectionLineWidth || !this.selectionBorderColor) {\r\n          return;\r\n        }\r\n        ctx.lineWidth = this.selectionLineWidth;\r\n        ctx.strokeStyle = this.selectionBorderColor;\r\n\r\n        // selection border\r\n        if (this.selectionDashArray.length > 1 && !supportLineDash) {\r\n\r\n          var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\r\n              py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\r\n\r\n          ctx.beginPath();\r\n\r\n          fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\r\n          fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\r\n          fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\r\n          fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\r\n\r\n          ctx.closePath();\r\n          ctx.stroke();\r\n        }\r\n        else {\r\n          fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\r\n          ctx.strokeRect(\r\n            groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\r\n            groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\r\n            aleft,\r\n            atop\r\n          );\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method that determines what object we are clicking on\r\n       * the skipGroup parameter is for internal use, is needed for shift+click action\r\n       * @param {Event} e mouse event\r\n       * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\r\n       */\r\n      findTarget: function (e, skipGroup) {\r\n        if (this.skipTargetFind) {\r\n          return;\r\n        }\r\n\r\n        var ignoreZoom = true,\r\n            pointer = this.getPointer(e, ignoreZoom),\r\n            activeObject = this._activeObject,\r\n            aObjects = this.getActiveObjects(),\r\n            activeTarget, activeTargetSubs;\r\n\r\n        // first check current group (if one exists)\r\n        // active group does not check sub targets like normal groups.\r\n        // if active group just exits.\r\n        this.targets = [];\r\n\r\n        if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\r\n          return activeObject;\r\n        }\r\n        // if we hit the corner of an activeObject, let's return that.\r\n        if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\r\n          return activeObject;\r\n        }\r\n        if (aObjects.length === 1 &&\r\n          activeObject === this._searchPossibleTargets([activeObject], pointer)) {\r\n          if (!this.preserveObjectStacking) {\r\n            return activeObject;\r\n          }\r\n          else {\r\n            activeTarget = activeObject;\r\n            activeTargetSubs = this.targets;\r\n            this.targets = [];\r\n          }\r\n        }\r\n        var target = this._searchPossibleTargets(this._objects, pointer);\r\n        if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\r\n          target = activeTarget;\r\n          this.targets = activeTargetSubs;\r\n        }\r\n        return target;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _checkTarget: function(pointer, obj) {\r\n        if (obj &&\r\n            obj.visible &&\r\n            obj.evented &&\r\n            this.containsPoint(null, obj, pointer)){\r\n          if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\r\n            var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\r\n            if (!isTransparent) {\r\n              return true;\r\n            }\r\n          }\r\n          else {\r\n            return true;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _searchPossibleTargets: function(objects, pointer) {\r\n\r\n        // Cache all targets where their bounding box contains point.\r\n        var target, i = objects.length, normalizedPointer, subTarget;\r\n        // Do not check for currently grouped objects, since we check the parent group itself.\r\n        // until we call this function specifically to search inside the activeGroup\r\n        while (i--) {\r\n          if (this._checkTarget(pointer, objects[i])) {\r\n            target = objects[i];\r\n            if (target.subTargetCheck && target instanceof fabric.Group) {\r\n              normalizedPointer = this._normalizePointer(target, pointer);\r\n              subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\r\n              subTarget && this.targets.push(subTarget);\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        return target;\r\n      },\r\n\r\n      /**\r\n       * Returns pointer coordinates without the effect of the viewport\r\n       * @param {Object} pointer with \"x\" and \"y\" number values\r\n       * @return {Object} object with \"x\" and \"y\" number values\r\n       */\r\n      restorePointerVpt: function(pointer) {\r\n        return fabric.util.transformPoint(\r\n          pointer,\r\n          fabric.util.invertTransform(this.viewportTransform)\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Returns pointer coordinates relative to canvas.\r\n       * Can return coordinates with or without viewportTransform.\r\n       * ignoreZoom false gives back coordinates that represent\r\n       * the point clicked on canvas element.\r\n       * ignoreZoom true gives back coordinates after being processed\r\n       * by the viewportTransform ( sort of coordinates of what is displayed\r\n       * on the canvas where you are clicking.\r\n       * ignoreZoom true = HTMLElement coordinates relative to top,left\r\n       * ignoreZoom false, default = fabric space coordinates, the same used for shape position\r\n       * To interact with your shapes top and left you want to use ignoreZoom true\r\n       * most of the time, while ignoreZoom false will give you coordinates\r\n       * compatible with the object.oCoords system.\r\n       * of the time.\r\n       * @param {Event} e\r\n       * @param {Boolean} ignoreZoom\r\n       * @return {Object} object with \"x\" and \"y\" number values\r\n       */\r\n      getPointer: function (e, ignoreZoom) {\r\n        // return cached values if we are in the event processing chain\r\n        if (this._absolutePointer && !ignoreZoom) {\r\n          return this._absolutePointer;\r\n        }\r\n        if (this._pointer && ignoreZoom) {\r\n          return this._pointer;\r\n        }\r\n\r\n        var pointer = getPointer(e),\r\n            upperCanvasEl = this.upperCanvasEl,\r\n            bounds = upperCanvasEl.getBoundingClientRect(),\r\n            boundsWidth = bounds.width || 0,\r\n            boundsHeight = bounds.height || 0,\r\n            cssScale;\r\n\r\n        if (!boundsWidth || !boundsHeight ) {\r\n          if ('top' in bounds && 'bottom' in bounds) {\r\n            boundsHeight = Math.abs( bounds.top - bounds.bottom );\r\n          }\r\n          if ('right' in bounds && 'left' in bounds) {\r\n            boundsWidth = Math.abs( bounds.right - bounds.left );\r\n          }\r\n        }\r\n\r\n        this.calcOffset();\r\n        pointer.x = pointer.x - this._offset.left;\r\n        pointer.y = pointer.y - this._offset.top;\r\n        if (!ignoreZoom) {\r\n          pointer = this.restorePointerVpt(pointer);\r\n        }\r\n\r\n        if (boundsWidth === 0 || boundsHeight === 0) {\r\n          // If bounds are not available (i.e. not visible), do not apply scale.\r\n          cssScale = { width: 1, height: 1 };\r\n        }\r\n        else {\r\n          cssScale = {\r\n            width: upperCanvasEl.width / boundsWidth,\r\n            height: upperCanvasEl.height / boundsHeight\r\n          };\r\n        }\r\n\r\n        return {\r\n          x: pointer.x * cssScale.width,\r\n          y: pointer.y * cssScale.height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\r\n       */\r\n      _createUpperCanvas: function () {\r\n        var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\r\n\r\n        // there is no need to create a new upperCanvas element if we have already one.\r\n        if (this.upperCanvasEl) {\r\n          this.upperCanvasEl.className = '';\r\n        }\r\n        else {\r\n          this.upperCanvasEl = this._createCanvasElement();\r\n        }\r\n        fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\r\n\r\n        this.wrapperEl.appendChild(this.upperCanvasEl);\r\n\r\n        this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\r\n        this._applyCanvasStyle(this.upperCanvasEl);\r\n        this.contextTop = this.upperCanvasEl.getContext('2d');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createCacheCanvas: function () {\r\n        this.cacheCanvasEl = this._createCanvasElement();\r\n        this.cacheCanvasEl.setAttribute('width', this.width);\r\n        this.cacheCanvasEl.setAttribute('height', this.height);\r\n        this.contextCache = this.cacheCanvasEl.getContext('2d');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _initWrapperElement: function () {\r\n        this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\r\n          'class': this.containerClass\r\n        });\r\n        fabric.util.setStyle(this.wrapperEl, {\r\n          width: this.width + 'px',\r\n          height: this.height + 'px',\r\n          position: 'relative'\r\n        });\r\n        fabric.util.makeElementUnselectable(this.wrapperEl);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {HTMLElement} element canvas element to apply styles on\r\n       */\r\n      _applyCanvasStyle: function (element) {\r\n        var width = this.width || element.width,\r\n            height = this.height || element.height;\r\n\r\n        fabric.util.setStyle(element, {\r\n          position: 'absolute',\r\n          width: width + 'px',\r\n          height: height + 'px',\r\n          left: 0,\r\n          top: 0,\r\n          'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\r\n        });\r\n        element.width = width;\r\n        element.height = height;\r\n        fabric.util.makeElementUnselectable(element);\r\n      },\r\n\r\n      /**\r\n       * Copy the entire inline style from one element (fromEl) to another (toEl)\r\n       * @private\r\n       * @param {Element} fromEl Element style is copied from\r\n       * @param {Element} toEl Element copied style is applied to\r\n       */\r\n      _copyCanvasStyle: function (fromEl, toEl) {\r\n        toEl.style.cssText = fromEl.style.cssText;\r\n      },\r\n\r\n      /**\r\n       * Returns context of canvas where object selection is drawn\r\n       * @return {CanvasRenderingContext2D}\r\n       */\r\n      getSelectionContext: function() {\r\n        return this.contextTop;\r\n      },\r\n\r\n      /**\r\n       * Returns &lt;canvas> element on which object selection is drawn\r\n       * @return {HTMLCanvasElement}\r\n       */\r\n      getSelectionElement: function () {\r\n        return this.upperCanvasEl;\r\n      },\r\n\r\n      /**\r\n       * Returns currently active object\r\n       * @return {fabric.Object} active object\r\n       */\r\n      getActiveObject: function () {\r\n        return this._activeObject;\r\n      },\r\n\r\n      /**\r\n       * Returns an array with the current selected objects\r\n       * @return {fabric.Object} active object\r\n       */\r\n      getActiveObjects: function () {\r\n        var active = this._activeObject;\r\n        if (active) {\r\n          if (active.type === 'activeSelection' && active._objects) {\r\n            return active._objects.slice(0);\r\n          }\r\n          else {\r\n            return [active];\r\n          }\r\n        }\r\n        return [];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {fabric.Object} obj Object that was removed\r\n       */\r\n      _onObjectRemoved: function(obj) {\r\n        // removing active object should fire \"selection:cleared\" events\r\n        if (obj === this._activeObject) {\r\n          this.fire('before:selection:cleared', { target: obj });\r\n          this._discardActiveObject();\r\n          this.fire('selection:cleared', { target: obj });\r\n          obj.fire('deselected');\r\n        }\r\n        if (this._hoveredTarget === obj) {\r\n          this._hoveredTarget = null;\r\n        }\r\n        this.callSuper('_onObjectRemoved', obj);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Compares the old activeObject with the current one and fires correct events\r\n       * @param {fabric.Object} obj old activeObject\r\n       */\r\n      _fireSelectionEvents: function(oldObjects, e) {\r\n        var somethingChanged = false, objects = this.getActiveObjects(),\r\n            added = [], removed = [], opt = { e: e };\r\n        oldObjects.forEach(function(oldObject) {\r\n          if (objects.indexOf(oldObject) === -1) {\r\n            somethingChanged = true;\r\n            oldObject.fire('deselected', opt);\r\n            removed.push(oldObject);\r\n          }\r\n        });\r\n        objects.forEach(function(object) {\r\n          if (oldObjects.indexOf(object) === -1) {\r\n            somethingChanged = true;\r\n            object.fire('selected', opt);\r\n            added.push(object);\r\n          }\r\n        });\r\n        if (oldObjects.length > 0 && objects.length > 0) {\r\n          opt.selected = added;\r\n          opt.deselected = removed;\r\n          // added for backward compatibility\r\n          opt.updated = added[0] || removed[0];\r\n          opt.target = this._activeObject;\r\n          somethingChanged && this.fire('selection:updated', opt);\r\n        }\r\n        else if (objects.length > 0) {\r\n          // deprecated event\r\n          if (objects.length === 1) {\r\n            opt.target = added[0];\r\n            this.fire('object:selected', opt);\r\n          }\r\n          opt.selected = added;\r\n          // added for backward compatibility\r\n          opt.target = this._activeObject;\r\n          this.fire('selection:created', opt);\r\n        }\r\n        else if (oldObjects.length > 0) {\r\n          opt.deselected = removed;\r\n          this.fire('selection:cleared', opt);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Sets given object as the only active object on canvas\r\n       * @param {fabric.Object} object Object to set as an active one\r\n       * @param {Event} [e] Event (passed along when firing \"object:selected\")\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      setActiveObject: function (object, e) {\r\n        var currentActives = this.getActiveObjects();\r\n        this._setActiveObject(object, e);\r\n        this._fireSelectionEvents(currentActives, e);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} object to set as active\r\n       * @param {Event} [e] Event (passed along when firing \"object:selected\")\r\n       * @return {Boolean} true if the selection happened\r\n       */\r\n      _setActiveObject: function(object, e) {\r\n        if (this._activeObject === object) {\r\n          return false;\r\n        }\r\n        if (!this._discardActiveObject(e, object)) {\r\n          return false;\r\n        }\r\n        if (object.onSelect({ e: e })) {\r\n          return false;\r\n        }\r\n        this._activeObject = object;\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _discardActiveObject: function(e, object) {\r\n        var obj = this._activeObject;\r\n        if (obj) {\r\n          // onDeselect return TRUE to cancel selection;\r\n          if (obj.onDeselect({ e: e, object: object })) {\r\n            return false;\r\n          }\r\n          this._activeObject = null;\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Discards currently active object and fire events. If the function is called by fabric\r\n       * as a consequence of a mouse event, the event is passed as a parameter and\r\n       * sent to the fire function for the custom events. When used as a method the\r\n       * e param does not have any application.\r\n       * @param {event} e\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      discardActiveObject: function (e) {\r\n        var currentActives = this.getActiveObjects();\r\n        if (currentActives.length) {\r\n          this.fire('before:selection:cleared', { target: currentActives[0], e: e });\r\n        }\r\n        this._discardActiveObject(e);\r\n        this._fireSelectionEvents(currentActives, e);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Clears a canvas element and removes all event listeners\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      dispose: function () {\r\n        var wrapper = this.wrapperEl;\r\n        this.removeListeners();\r\n        wrapper.removeChild(this.upperCanvasEl);\r\n        wrapper.removeChild(this.lowerCanvasEl);\r\n        this.contextCache = null;\r\n        this.contextTop = null;\r\n        ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\r\n          fabric.util.cleanUpJsdomNode(this[element]);\r\n          this[element] = undefined;\r\n        }).bind(this));\r\n        if (wrapper.parentNode) {\r\n          wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\r\n        }\r\n        delete this.wrapperEl;\r\n        fabric.StaticCanvas.prototype.dispose.call(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Clears all contexts (background, main, top) of an instance\r\n       * @return {fabric.Canvas} thisArg\r\n       * @chainable\r\n       */\r\n      clear: function () {\r\n        // this.discardActiveGroup();\r\n        this.discardActiveObject();\r\n        this.clearContext(this.contextTop);\r\n        return this.callSuper('clear');\r\n      },\r\n\r\n      /**\r\n       * Draws objects' controls (borders/controls)\r\n       * @param {CanvasRenderingContext2D} ctx Context to render controls on\r\n       */\r\n      drawControls: function(ctx) {\r\n        var activeObject = this._activeObject;\r\n\r\n        if (activeObject) {\r\n          activeObject._renderControls(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _toObject: function(instance, methodName, propertiesToInclude) {\r\n        //If the object is part of the current selection group, it should\r\n        //be transformed appropriately\r\n        //i.e. it should be serialised as it would appear if the selection group\r\n        //were to be destroyed.\r\n        var originalProperties = this._realizeGroupTransformOnObject(instance),\r\n            object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\r\n        //Undo the damage we did by changing all of its properties\r\n        this._unwindGroupTransformOnObject(instance, originalProperties);\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Realises an object's group transformation on it\r\n       * @private\r\n       * @param {fabric.Object} [instance] the object to transform (gets mutated)\r\n       * @returns the original values of instance which were changed\r\n       */\r\n      _realizeGroupTransformOnObject: function(instance) {\r\n        if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\r\n          var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\r\n          //Copy all the positionally relevant properties across now\r\n          var originalValues = {};\r\n          layoutProps.forEach(function(prop) {\r\n            originalValues[prop] = instance[prop];\r\n          });\r\n          this._activeObject.realizeTransform(instance);\r\n          return originalValues;\r\n        }\r\n        else {\r\n          return null;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Restores the changed properties of instance\r\n       * @private\r\n       * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\r\n       * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\r\n       */\r\n      _unwindGroupTransformOnObject: function(instance, originalValues) {\r\n        if (originalValues) {\r\n          instance.set(originalValues);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setSVGObject: function(markup, instance, reviver) {\r\n        //If the object is in a selection group, simulate what would happen to that\r\n        //object when the group is deselected\r\n        var originalProperties = this._realizeGroupTransformOnObject(instance);\r\n        this.callSuper('_setSVGObject', markup, instance, reviver);\r\n        this._unwindGroupTransformOnObject(instance, originalProperties);\r\n      },\r\n\r\n      setViewportTransform: function (vpt) {\r\n        if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\r\n          this._activeObject.clearContextTop();\r\n        }\r\n        fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\r\n      }\r\n    });\r\n\r\n    // copying static properties manually to work around Opera's bug,\r\n    // where \"prototype\" property is enumerable and overrides existing prototype\r\n    for (var prop in fabric.StaticCanvas) {\r\n      if (prop !== 'prototype') {\r\n        fabric.Canvas[prop] = fabric.StaticCanvas[prop];\r\n      }\r\n    }\r\n\r\n    if (fabric.isTouchSupported) {\r\n      /** @ignore */\r\n      fabric.Canvas.prototype._setCursorFromEvent = function() { };\r\n    }\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var cursorOffset = {\r\n          mt: 0, // n\r\n          tr: 1, // ne\r\n          mr: 2, // e\r\n          br: 3, // se\r\n          mb: 4, // s\r\n          bl: 5, // sw\r\n          ml: 6, // w\r\n          tl: 7 // nw\r\n        },\r\n        addListener = fabric.util.addListener,\r\n        removeListener = fabric.util.removeListener,\r\n        RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\r\n        addEventOptions = { passive: false };\r\n\r\n    function checkClick(e, value) {\r\n      return 'which' in e ? e.which === value : e.button === value - 1;\r\n    }\r\n\r\n    fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\r\n\r\n      /**\r\n       * Map of cursor style values for each of the object controls\r\n       * @private\r\n       */\r\n      cursorMap: [\r\n        'n-resize',\r\n        'ne-resize',\r\n        'e-resize',\r\n        'se-resize',\r\n        's-resize',\r\n        'sw-resize',\r\n        'w-resize',\r\n        'nw-resize'\r\n      ],\r\n\r\n      /**\r\n       * Adds mouse listeners to canvas\r\n       * @private\r\n       */\r\n      _initEventListeners: function () {\r\n        // in case we initialized the class twice. This should not happen normally\r\n        // but in some kind of applications where the canvas element may be changed\r\n        // this is a workaround to having double listeners.\r\n        this.removeListeners();\r\n        this._bindEvents();\r\n        this.addOrRemove(addListener, 'add');\r\n      },\r\n\r\n      addOrRemove: function(functor, eventjsFunctor) {\r\n        functor(fabric.window, 'resize', this._onResize);\r\n        functor(this.upperCanvasEl, 'mousedown', this._onMouseDown);\r\n        functor(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\r\n        functor(this.upperCanvasEl, 'mouseout', this._onMouseOut);\r\n        functor(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\r\n        functor(this.upperCanvasEl, 'wheel', this._onMouseWheel);\r\n        functor(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\r\n        functor(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\r\n        functor(this.upperCanvasEl, 'touchstart', this._onMouseDown, addEventOptions);\r\n        functor(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\r\n        functor(this.upperCanvasEl, 'dragover', this._onDragOver);\r\n        functor(this.upperCanvasEl, 'dragenter', this._onDragEnter);\r\n        functor(this.upperCanvasEl, 'dragleave', this._onDragLeave);\r\n        functor(this.upperCanvasEl, 'drop', this._onDrop);\r\n        if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'gesture', this._onGesture);\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'drag', this._onDrag);\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'orientation', this._onOrientationChange);\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'shake', this._onShake);\r\n          eventjs[eventjsFunctor](this.upperCanvasEl, 'longpress', this._onLongPress);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Removes all event listeners\r\n       */\r\n      removeListeners: function() {\r\n        this.addOrRemove(removeListener, 'remove');\r\n        // if you dispose on a mouseDown, before mouse up, you need to clean document to...\r\n        removeListener(fabric.document, 'mouseup', this._onMouseUp);\r\n        removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\r\n        removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\r\n        removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _bindEvents: function() {\r\n        if (this.eventsBound) {\r\n          // for any reason we pass here twice we do not want to bind events twice.\r\n          return;\r\n        }\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onResize = this._onResize.bind(this);\r\n        this._onGesture = this._onGesture.bind(this);\r\n        this._onDrag = this._onDrag.bind(this);\r\n        this._onShake = this._onShake.bind(this);\r\n        this._onLongPress = this._onLongPress.bind(this);\r\n        this._onOrientationChange = this._onOrientationChange.bind(this);\r\n        this._onMouseWheel = this._onMouseWheel.bind(this);\r\n        this._onMouseOut = this._onMouseOut.bind(this);\r\n        this._onMouseEnter = this._onMouseEnter.bind(this);\r\n        this._onContextMenu = this._onContextMenu.bind(this);\r\n        this._onDoubleClick = this._onDoubleClick.bind(this);\r\n        this._onDragOver = this._onDragOver.bind(this);\r\n        this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\r\n        this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\r\n        this._onDrop = this._simpleEventHandler.bind(this, 'drop');\r\n        this.eventsBound = true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js gesture\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onGesture: function(e, self) {\r\n        this.__onTransformGesture && this.__onTransformGesture(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js drag\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onDrag: function(e, self) {\r\n        this.__onDrag && this.__onDrag(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on wheel event\r\n       */\r\n      _onMouseWheel: function(e) {\r\n        this.__onMouseWheel(e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onMouseOut: function(e) {\r\n        var target = this._hoveredTarget;\r\n        this.fire('mouse:out', { target: target, e: e });\r\n        this._hoveredTarget = null;\r\n        target && target.fire('mouseout', { e: e });\r\n        if (this._iTextInstances) {\r\n          this._iTextInstances.forEach(function(obj) {\r\n            if (obj.isEditing) {\r\n              obj.hiddenTextarea.focus();\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseenter\r\n       */\r\n      _onMouseEnter: function(e) {\r\n        if (!this.findTarget(e)) {\r\n          this.fire('mouse:over', { target: null, e: e });\r\n          this._hoveredTarget = null;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js orientation change\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onOrientationChange: function(e, self) {\r\n        this.__onOrientationChange && this.__onOrientationChange(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js shake\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onShake: function(e, self) {\r\n        this.__onShake && this.__onShake(e, self);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js shake\r\n       * @param {Event} [self] Inner Event object\r\n       */\r\n      _onLongPress: function(e, self) {\r\n        this.__onLongPress && this.__onLongPress(e, self);\r\n      },\r\n\r\n      /**\r\n       * prevent default to allow drop event to be fired\r\n       * @private\r\n       * @param {Event} [e] Event object fired on Event.js shake\r\n       */\r\n      _onDragOver: function(e) {\r\n        e.preventDefault();\r\n        var target = this._simpleEventHandler('dragover', e);\r\n        this._fireEnterLeaveEvents(target, e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onContextMenu: function (e) {\r\n        if (this.stopContextMenu) {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onDoubleClick: function (e) {\r\n        this._cacheTransformEventData(e);\r\n        this._handleEvent(e, 'dblclick');\r\n        this._resetTransformEventData(e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onMouseDown: function (e) {\r\n        this.__onMouseDown(e);\r\n        this._resetTransformEventData();\r\n        addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\r\n        addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n\r\n        removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\r\n        removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\r\n\r\n        if (e.type === 'touchstart') {\r\n          // Unbind mousedown to prevent double triggers from touch devices\r\n          removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\r\n        }\r\n        else {\r\n          addListener(fabric.document, 'mouseup', this._onMouseUp);\r\n          addListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      _onMouseUp: function (e) {\r\n        this.__onMouseUp(e);\r\n        this._resetTransformEventData();\r\n        removeListener(fabric.document, 'mouseup', this._onMouseUp);\r\n        removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\r\n\r\n        removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\r\n        removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n\r\n        addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\r\n        addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\r\n\r\n        if (e.type === 'touchend') {\r\n          // Wait 400ms before rebinding mousedown to prevent double triggers\r\n          // from touch devices\r\n          var _this = this;\r\n          setTimeout(function() {\r\n            addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\r\n          }, 400);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousemove\r\n       */\r\n      _onMouseMove: function (e) {\r\n        !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\r\n        this.__onMouseMove(e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onResize: function () {\r\n        this.calcOffset();\r\n      },\r\n\r\n      /**\r\n       * Decides whether the canvas should be redrawn in mouseup and mousedown events.\r\n       * @private\r\n       * @param {Object} target\r\n       * @param {Object} pointer\r\n       */\r\n      _shouldRender: function(target, pointer) {\r\n        var activeObject = this._activeObject;\r\n\r\n        if (activeObject && activeObject.isEditing && target === activeObject) {\r\n          // if we mouse up/down over a editing textbox a cursor change,\r\n          // there is no need to re render\r\n          return false;\r\n        }\r\n        return !!(\r\n          (target && (\r\n            target.isMoving ||\r\n            target !== activeObject))\r\n          ||\r\n          (!target && !!activeObject)\r\n          ||\r\n          (!target && !activeObject && !this._groupSelector)\r\n          ||\r\n          (pointer &&\r\n            this._previousPointer &&\r\n            this.selection && (\r\n              pointer.x !== this._previousPointer.x ||\r\n            pointer.y !== this._previousPointer.y))\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Method that defines the actions when mouse is released on canvas.\r\n       * The method resets the currentTransform parameters, store the image corner\r\n       * position in the image object and render the canvas on top.\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      __onMouseUp: function (e) {\r\n        var target, transform = this._currentTransform,\r\n            groupSelector = this._groupSelector,\r\n            isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\r\n        this._cacheTransformEventData(e);\r\n        target = this._target;\r\n        this._handleEvent(e, 'up:before');\r\n        // if right/middle click just fire events and return\r\n        // target undefined will make the _handleEvent search the target\r\n        if (checkClick(e, RIGHT_CLICK)) {\r\n          if (this.fireRightClick) {\r\n            this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (checkClick(e, MIDDLE_CLICK)) {\r\n          if (this.fireMiddleClick) {\r\n            this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\r\n          }\r\n          this._resetTransformEventData();\r\n          return;\r\n        }\r\n\r\n        if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n          this._onMouseUpInDrawingMode(e);\r\n          return;\r\n        }\r\n\r\n        if (transform) {\r\n          this._finalizeCurrentTransform(e);\r\n        }\r\n\r\n        var shouldRender = this._shouldRender(target, this._absolutePointer);\r\n\r\n        if (target || !isClick) {\r\n          this._maybeGroupObjects(e);\r\n        }\r\n        if (target) {\r\n          target.isMoving = false;\r\n        }\r\n        this._setCursorFromEvent(e, target);\r\n        this._handleEvent(e, 'up', LEFT_CLICK, isClick);\r\n        this._groupSelector = null;\r\n        this._currentTransform = null;\r\n        target && (target.__corner = 0);\r\n        shouldRender && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Handle event firing for target and subtargets\r\n       * @param {Event} e event from mouse\r\n       * @param {String} eventType event to fire (up, down or move)\r\n       * @return {Fabric.Object} target return the the target found, for internal reasons.\r\n       */\r\n      _simpleEventHandler: function(eventType, e) {\r\n        var target = this.findTarget(e),\r\n            targets = this.targets,\r\n            options = {\r\n              e: e,\r\n              target: target,\r\n              subTargets: targets,\r\n            };\r\n        this.fire(eventType, options);\r\n        target && target.fire(eventType, options);\r\n        if (!targets) {\r\n          return target;\r\n        }\r\n        for (var i = 0; i < targets.length; i++) {\r\n          targets[i].fire(eventType, options);\r\n        }\r\n        return target;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Handle event firing for target and subtargets\r\n       * @param {Event} e event from mouse\r\n       * @param {String} eventType event to fire (up, down or move)\r\n       * @param {fabric.Object} targetObj receiving event\r\n       * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\r\n       * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\r\n       */\r\n      _handleEvent: function(e, eventType, button, isClick) {\r\n        var target = this._target,\r\n            targets = this.targets || [],\r\n            options = {\r\n              e: e,\r\n              target: target,\r\n              subTargets: targets,\r\n              button: button || LEFT_CLICK,\r\n              isClick: isClick || false,\r\n              pointer: this._pointer,\r\n              absolutePointer: this._absolutePointer,\r\n              transform: this._currentTransform\r\n            };\r\n        this.fire('mouse:' + eventType, options);\r\n        target && target.fire('mouse' + eventType, options);\r\n        for (var i = 0; i < targets.length; i++) {\r\n          targets[i].fire('mouse' + eventType, options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\r\n       */\r\n      _finalizeCurrentTransform: function(e) {\r\n\r\n        var transform = this._currentTransform,\r\n            target = transform.target,\r\n            eventName,\r\n            options = {\r\n              e: e,\r\n              target: target,\r\n              transform: transform,\r\n            };\r\n\r\n        if (target._scaling) {\r\n          target._scaling = false;\r\n        }\r\n\r\n        target.setCoords();\r\n\r\n        if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\r\n          if (transform.actionPerformed) {\r\n            eventName = this._addEventOptions(options, transform);\r\n            this._fire(eventName, options);\r\n          }\r\n          this._fire('modified', options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Mutate option object in order to add by property and give back the event name.\r\n       * @private\r\n       * @param {Object} options to mutate\r\n       * @param {Object} transform to inspect action from\r\n       */\r\n      _addEventOptions: function(options, transform) {\r\n        // we can probably add more details at low cost\r\n        // scale change, rotation changes, translation changes\r\n        var eventName, by;\r\n        switch (transform.action) {\r\n          case 'scaleX':\r\n            eventName = 'scaled';\r\n            by = 'x';\r\n            break;\r\n          case 'scaleY':\r\n            eventName = 'scaled';\r\n            by = 'y';\r\n            break;\r\n          case 'skewX':\r\n            eventName = 'skewed';\r\n            by = 'x';\r\n            break;\r\n          case 'skewY':\r\n            eventName = 'skewed';\r\n            by = 'y';\r\n            break;\r\n          case 'scale':\r\n            eventName = 'scaled';\r\n            by = 'equally';\r\n            break;\r\n          case 'rotate':\r\n            eventName = 'rotated';\r\n            break;\r\n          case 'drag':\r\n            eventName = 'moved';\r\n            break;\r\n        }\r\n        options.by = by;\r\n        return eventName;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      _onMouseDownInDrawingMode: function(e) {\r\n        this._isCurrentlyDrawing = true;\r\n        if (this.getActiveObject()) {\r\n          this.discardActiveObject(e).requestRenderAll();\r\n        }\r\n        if (this.clipTo) {\r\n          fabric.util.clipContext(this, this.contextTop);\r\n        }\r\n        var pointer = this.getPointer(e);\r\n        this.freeDrawingBrush.onMouseDown(pointer);\r\n        this._handleEvent(e, 'down');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mousemove\r\n       */\r\n      _onMouseMoveInDrawingMode: function(e) {\r\n        if (this._isCurrentlyDrawing) {\r\n          var pointer = this.getPointer(e);\r\n          this.freeDrawingBrush.onMouseMove(pointer);\r\n        }\r\n        this.setCursor(this.freeDrawingCursor);\r\n        this._handleEvent(e, 'move');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      _onMouseUpInDrawingMode: function(e) {\r\n        this._isCurrentlyDrawing = false;\r\n        if (this.clipTo) {\r\n          this.contextTop.restore();\r\n        }\r\n        this.freeDrawingBrush.onMouseUp();\r\n        this._handleEvent(e, 'up');\r\n      },\r\n\r\n      /**\r\n       * Method that defines the actions when mouse is clicked on canvas.\r\n       * The method inits the currentTransform parameters and renders all the\r\n       * canvas so the current image can be placed on the top canvas and the rest\r\n       * in on the container one.\r\n       * @private\r\n       * @param {Event} e Event object fired on mousedown\r\n       */\r\n      __onMouseDown: function (e) {\r\n        this._cacheTransformEventData(e);\r\n        this._handleEvent(e, 'down:before');\r\n        var target = this._target;\r\n        // if right click just fire events\r\n        if (checkClick(e, RIGHT_CLICK)) {\r\n          if (this.fireRightClick) {\r\n            this._handleEvent(e, 'down', RIGHT_CLICK);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (checkClick(e, MIDDLE_CLICK)) {\r\n          if (this.fireMiddleClick) {\r\n            this._handleEvent(e, 'down', MIDDLE_CLICK);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (this.isDrawingMode) {\r\n          this._onMouseDownInDrawingMode(e);\r\n          return;\r\n        }\r\n\r\n        // ignore if some object is being transformed at this moment\r\n        if (this._currentTransform) {\r\n          return;\r\n        }\r\n\r\n        var pointer = this._pointer;\r\n        // save pointer for check in __onMouseUp event\r\n        this._previousPointer = pointer;\r\n        var shouldRender = this._shouldRender(target, pointer),\r\n            shouldGroup = this._shouldGroup(e, target);\r\n        if (this._shouldClearSelection(e, target)) {\r\n          this.discardActiveObject(e);\r\n        }\r\n        else if (shouldGroup) {\r\n          this._handleGrouping(e, target);\r\n          target = this._activeObject;\r\n        }\r\n\r\n        if (this.selection && (!target ||\r\n          (!target.selectable && !target.isEditing && target !== this._activeObject))) {\r\n          this._groupSelector = {\r\n            ex: pointer.x,\r\n            ey: pointer.y,\r\n            top: 0,\r\n            left: 0\r\n          };\r\n        }\r\n\r\n        if (target) {\r\n          if (target.selectable) {\r\n            this.setActiveObject(target, e);\r\n          }\r\n          if (target === this._activeObject && (target.__corner || !shouldGroup)) {\r\n            this._setupCurrentTransform(e, target);\r\n          }\r\n        }\r\n        this._handleEvent(e, 'down');\r\n        // we must renderAll so that we update the visuals\r\n        shouldRender && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * reset cache form common information needed during event processing\r\n       * @private\r\n       */\r\n      _resetTransformEventData: function() {\r\n        this._target = null;\r\n        this._pointer = null;\r\n        this._absolutePointer = null;\r\n      },\r\n\r\n      /**\r\n       * Cache common information needed during event processing\r\n       * @private\r\n       * @param {Event} e Event object fired on event\r\n       */\r\n      _cacheTransformEventData: function(e) {\r\n        // reset in order to avoid stale caching\r\n        this._resetTransformEventData();\r\n        this._pointer = this.getPointer(e, true);\r\n        this._absolutePointer = this.restorePointerVpt(this._pointer);\r\n        this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _beforeTransform: function(e) {\r\n        var t = this._currentTransform;\r\n        this.stateful && t.target.saveState();\r\n        this.fire('before:transform', {\r\n          e: e,\r\n          transform: t,\r\n        });\r\n        // determine if it's a drag or rotate case\r\n        if (t.corner) {\r\n          this.onBeforeScaleRotate(t.target);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method that defines the actions when mouse is hovering the canvas.\r\n       * The currentTransform parameter will definde whether the user is rotating/scaling/translating\r\n       * an image or neither of them (only hovering). A group selection is also possible and would cancel\r\n       * all any other type of action.\r\n       * In case of an image transformation only the top canvas will be rendered.\r\n       * @private\r\n       * @param {Event} e Event object fired on mousemove\r\n       */\r\n      __onMouseMove: function (e) {\r\n        this._handleEvent(e, 'move:before');\r\n        this._cacheTransformEventData(e);\r\n        var target, pointer;\r\n\r\n        if (this.isDrawingMode) {\r\n          this._onMouseMoveInDrawingMode(e);\r\n          return;\r\n        }\r\n        if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\r\n          return;\r\n        }\r\n\r\n        var groupSelector = this._groupSelector;\r\n\r\n        // We initially clicked in an empty area, so we draw a box for multiple selection\r\n        if (groupSelector) {\r\n          pointer = this._pointer;\r\n\r\n          groupSelector.left = pointer.x - groupSelector.ex;\r\n          groupSelector.top = pointer.y - groupSelector.ey;\r\n\r\n          this.renderTop();\r\n        }\r\n        else if (!this._currentTransform) {\r\n          target = this.findTarget(e) || null;\r\n          this._setCursorFromEvent(e, target);\r\n          this._fireOverOutEvents(target, e);\r\n        }\r\n        else {\r\n          this._transformObject(e);\r\n        }\r\n        this._handleEvent(e, 'move');\r\n        this._resetTransformEventData();\r\n      },\r\n\r\n      /**\r\n       * Manage the mouseout, mouseover events for the fabric object on the canvas\r\n       * @param {Fabric.Object} target the target where the target from the mousemove event\r\n       * @param {Event} e Event object fired on mousemove\r\n       * @private\r\n       */\r\n      _fireOverOutEvents: function(target, e) {\r\n        this.fireSynteticInOutEvents(target, e, {\r\n          targetName: '_hoveredTarget',\r\n          canvasEvtOut: 'mouse:out',\r\n          evtOut: 'mouseout',\r\n          canvasEvtIn: 'mouse:over',\r\n          evtIn: 'mouseover',\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\r\n       * @param {Fabric.Object} target the target where the target from the onDrag event\r\n       * @param {Event} e Event object fired on ondrag\r\n       * @private\r\n       */\r\n      _fireEnterLeaveEvents: function(target, e) {\r\n        this.fireSynteticInOutEvents(target, e, {\r\n          targetName: '_draggedoverTarget',\r\n          evtOut: 'dragleave',\r\n          evtIn: 'dragenter',\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Manage the syntetic in/out events for the fabric objects on the canvas\r\n       * @param {Fabric.Object} target the target where the target from the supported events\r\n       * @param {Event} e Event object fired\r\n       * @param {Object} config configuration for the function to work\r\n       * @param {String} config.targetName property on the canvas where the old target is stored\r\n       * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\r\n       * @param {String} config.evtOut name of the event to fire for out\r\n       * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\r\n       * @param {String} config.evtIn name of the event to fire for in\r\n       * @private\r\n       */\r\n      fireSynteticInOutEvents: function(target, e, config) {\r\n        var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,\r\n            targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\r\n        if (targetChanged) {\r\n          inOpt = { e: e, target: target, previousTarget: oldTarget };\r\n          outOpt = { e: e, target: oldTarget, nextTarget: target };\r\n          this[config.targetName] = target;\r\n        }\r\n        inFires = target && targetChanged;\r\n        outFires = oldTarget && targetChanged;\r\n        if (outFires) {\r\n          canvasEvtOut && this.fire(canvasEvtOut, outOpt);\r\n          oldTarget.fire(config.evtOut, outOpt);\r\n        }\r\n        if (inFires) {\r\n          canvasEvtIn && this.fire(canvasEvtIn, inOpt);\r\n          target.fire(config.evtIn, inOpt);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Method that defines actions when an Event Mouse Wheel\r\n       * @param {Event} e Event object fired on mouseup\r\n       */\r\n      __onMouseWheel: function(e) {\r\n        this._cacheTransformEventData(e);\r\n        this._handleEvent(e, 'wheel');\r\n        this._resetTransformEventData();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event fired on mousemove\r\n       */\r\n      _transformObject: function(e) {\r\n        var pointer = this.getPointer(e),\r\n            transform = this._currentTransform;\r\n\r\n        transform.reset = false;\r\n        transform.target.isMoving = true;\r\n        transform.shiftKey = e.shiftKey;\r\n        transform.altKey = e[this.centeredKey];\r\n\r\n        this._beforeScaleTransform(e, transform);\r\n        this._performTransformAction(e, transform, pointer);\r\n\r\n        transform.actionPerformed && this.requestRenderAll();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _performTransformAction: function(e, transform, pointer) {\r\n        var x = pointer.x,\r\n            y = pointer.y,\r\n            action = transform.action,\r\n            actionPerformed = false,\r\n            options = {\r\n              target: transform.target,\r\n              e: e,\r\n              transform: transform,\r\n              pointer: pointer\r\n            };\r\n\r\n        if (action === 'rotate') {\r\n          (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\r\n        }\r\n        else if (action === 'scale') {\r\n          (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\r\n        }\r\n        else if (action === 'scaleX') {\r\n          (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\r\n        }\r\n        else if (action === 'scaleY') {\r\n          (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\r\n        }\r\n        else if (action === 'skewX') {\r\n          (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\r\n        }\r\n        else if (action === 'skewY') {\r\n          (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\r\n        }\r\n        else {\r\n          actionPerformed = this._translateObject(x, y);\r\n          if (actionPerformed) {\r\n            this._fire('moving', options);\r\n            this.setCursor(options.target.moveCursor || this.moveCursor);\r\n          }\r\n        }\r\n        transform.actionPerformed = transform.actionPerformed || actionPerformed;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _fire: function(eventName, options) {\r\n        this.fire('object:' + eventName, options);\r\n        options.target.fire(eventName, options);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _beforeScaleTransform: function(e, transform) {\r\n        if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\r\n          var centerTransform = this._shouldCenterTransform(transform.target);\r\n\r\n          // Switch from a normal resize to center-based\r\n          if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\r\n             // Switch from center-based resize to normal one\r\n             (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\r\n          ) {\r\n            this._resetCurrentTransform();\r\n            transform.reset = true;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {Object} transform current tranform\r\n       * @param {Number} x mouse position x from origin\r\n       * @param {Number} y mouse poistion y from origin\r\n       * @return {Boolean} true if the scaling occurred\r\n       */\r\n      _onScale: function(e, transform, x, y) {\r\n        if (this._isUniscalePossible(e, transform.target)) {\r\n          transform.currentAction = 'scale';\r\n          return this._scaleObject(x, y);\r\n        }\r\n        else {\r\n          // Switch from a normal resize to proportional\r\n          if (!transform.reset && transform.currentAction === 'scale') {\r\n            this._resetCurrentTransform();\r\n          }\r\n\r\n          transform.currentAction = 'scaleEqually';\r\n          return this._scaleObject(x, y, 'equally');\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target current target\r\n       * @return {Boolean} true if unproportional scaling is possible\r\n       */\r\n      _isUniscalePossible: function(e, target) {\r\n        return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\r\n      },\r\n\r\n      /**\r\n       * Sets the cursor depending on where the canvas is being hovered.\r\n       * Note: very buggy in Opera\r\n       * @param {Event} e Event object\r\n       * @param {Object} target Object that the mouse is hovering, if so.\r\n       */\r\n      _setCursorFromEvent: function (e, target) {\r\n        if (!target) {\r\n          this.setCursor(this.defaultCursor);\r\n          return false;\r\n        }\r\n\r\n        var hoverCursor = target.hoverCursor || this.hoverCursor,\r\n            activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\r\n              this._activeObject : null,\r\n            // only show proper corner when group selection is not active\r\n            corner = (!activeSelection || !activeSelection.contains(target))\r\n                      && target._findTargetCorner(this.getPointer(e, true));\r\n\r\n        if (!corner) {\r\n          this.setCursor(hoverCursor);\r\n        }\r\n        else {\r\n          this.setCursor(this.getCornerCursor(corner, target, e));\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      getCornerCursor: function(corner, target, e) {\r\n        if (this.actionIsDisabled(corner, target, e)) {\r\n          return this.notAllowedCursor;\r\n        }\r\n        else if (corner in cursorOffset) {\r\n          return this._getRotatedCornerCursor(corner, target, e);\r\n        }\r\n        else if (corner === 'mtr' && target.hasRotatingPoint) {\r\n          return this.rotationCursor;\r\n        }\r\n        else {\r\n          return this.defaultCursor;\r\n        }\r\n      },\r\n\r\n      actionIsDisabled: function(corner, target, e) {\r\n        if (corner === 'mt' || corner === 'mb') {\r\n          return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\r\n        }\r\n        else if (corner === 'ml' || corner === 'mr') {\r\n          return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\r\n        }\r\n        else if (corner === 'mtr') {\r\n          return target.lockRotation;\r\n        }\r\n        else {\r\n          return this._isUniscalePossible(e, target) ?\r\n            target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getRotatedCornerCursor: function(corner, target, e) {\r\n        var n = Math.round((target.angle % 360) / 45);\r\n\r\n        if (n < 0) {\r\n          n += 8; // full circle ahead\r\n        }\r\n        n += cursorOffset[corner];\r\n        if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\r\n          //if we are holding shift and we are on a mx corner...\r\n          n += 2;\r\n        }\r\n        // normalize n to be from 0 to 7\r\n        n %= 8;\r\n\r\n        return this.cursorMap[n];\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var min = Math.min,\r\n        max = Math.max;\r\n\r\n    fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       * @return {Boolean}\r\n       */\r\n      _shouldGroup: function(e, target) {\r\n        var activeObject = this._activeObject;\r\n\r\n        return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\r\n              (activeObject !== target || activeObject.type === 'activeSelection');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e Event object\r\n       * @param {fabric.Object} target\r\n       */\r\n      _handleGrouping: function (e, target) {\r\n        var activeObject = this._activeObject;\r\n        if (activeObject.__corner) {\r\n          return;\r\n        }\r\n        if (target === activeObject) {\r\n          // if it's a group, find target again, using activeGroup objects\r\n          target = this.findTarget(e, true);\r\n          // if even object is not found or we are on activeObjectCorner, bail out\r\n          if (!target) {\r\n            return;\r\n          }\r\n        }\r\n        if (activeObject && activeObject.type === 'activeSelection') {\r\n          this._updateActiveSelection(target, e);\r\n        }\r\n        else {\r\n          this._createActiveSelection(target, e);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _updateActiveSelection: function(target, e) {\r\n        var activeSelection = this._activeObject,\r\n            currentActiveObjects = activeSelection._objects.slice(0);\r\n        if (activeSelection.contains(target)) {\r\n          activeSelection.removeWithUpdate(target);\r\n          this._hoveredTarget = target;\r\n          if (activeSelection.size() === 1) {\r\n            // activate last remaining object\r\n            this._setActiveObject(activeSelection.item(0), e);\r\n          }\r\n        }\r\n        else {\r\n          activeSelection.addWithUpdate(target);\r\n          this._hoveredTarget = activeSelection;\r\n        }\r\n        this._fireSelectionEvents(currentActiveObjects, e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createActiveSelection: function(target, e) {\r\n        var currentActives = this.getActiveObjects(), group = this._createGroup(target);\r\n        this._hoveredTarget = group;\r\n        this._setActiveObject(group, e);\r\n        this._fireSelectionEvents(currentActives, e);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} target\r\n       */\r\n      _createGroup: function(target) {\r\n        var objects = this._objects,\r\n            isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\r\n            groupObjects = isActiveLower\r\n              ? [this._activeObject, target]\r\n              : [target, this._activeObject];\r\n        this._activeObject.isEditing && this._activeObject.exitEditing();\r\n        return new fabric.ActiveSelection(groupObjects, {\r\n          canvas: this\r\n        });\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Event} e mouse event\r\n       */\r\n      _groupSelectedObjects: function (e) {\r\n\r\n        var group = this._collectObjects(),\r\n            aGroup;\r\n\r\n        // do not create group for 1 element only\r\n        if (group.length === 1) {\r\n          this.setActiveObject(group[0], e);\r\n        }\r\n        else if (group.length > 1) {\r\n          aGroup = new fabric.ActiveSelection(group.reverse(), {\r\n            canvas: this\r\n          });\r\n          this.setActiveObject(aGroup, e);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _collectObjects: function() {\r\n        var group = [],\r\n            currentObject,\r\n            x1 = this._groupSelector.ex,\r\n            y1 = this._groupSelector.ey,\r\n            x2 = x1 + this._groupSelector.left,\r\n            y2 = y1 + this._groupSelector.top,\r\n            selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\r\n            selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\r\n            allowIntersect = !this.selectionFullyContained,\r\n            isClick = x1 === x2 && y1 === y2;\r\n        // we iterate reverse order to collect top first in case of click.\r\n        for (var i = this._objects.length; i--; ) {\r\n          currentObject = this._objects[i];\r\n\r\n          if (!currentObject || !currentObject.selectable || !currentObject.visible) {\r\n            continue;\r\n          }\r\n\r\n          if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\r\n              currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\r\n              (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\r\n              (allowIntersect && currentObject.containsPoint(selectionX2Y2))\r\n          ) {\r\n            group.push(currentObject);\r\n\r\n            // only add one object if it's a click\r\n            if (isClick) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return group;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _maybeGroupObjects: function(e) {\r\n        if (this.selection && this._groupSelector) {\r\n          this._groupSelectedObjects(e);\r\n        }\r\n        this.setCursor(this.defaultCursor);\r\n        // clear selection and current transformation\r\n        this._groupSelector = null;\r\n      }\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  (function () {\r\n\r\n    var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\r\n\r\n    fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n      /**\r\n       * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\r\n       * @param {Object} [options] Options object\r\n       * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n       * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n       * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\r\n       * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n       * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n       * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n       * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n       * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\r\n       * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n       * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\r\n       * @example <caption>Generate jpeg dataURL with lower quality</caption>\r\n       * var dataURL = canvas.toDataURL({\r\n       *   format: 'jpeg',\r\n       *   quality: 0.8\r\n       * });\r\n       * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\r\n       * var dataURL = canvas.toDataURL({\r\n       *   format: 'png',\r\n       *   left: 100,\r\n       *   top: 100,\r\n       *   width: 200,\r\n       *   height: 200\r\n       * });\r\n       * @example <caption>Generate double scaled png dataURL</caption>\r\n       * var dataURL = canvas.toDataURL({\r\n       *   format: 'png',\r\n       *   multiplier: 2\r\n       * });\r\n       */\r\n      toDataURL: function (options) {\r\n        options || (options = { });\r\n\r\n        var format = options.format || 'png',\r\n            quality = options.quality || 1,\r\n            multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? 1 : 1 / this.getRetinaScaling()),\r\n            cropping = {\r\n              left: options.left || 0,\r\n              top: options.top || 0,\r\n              width: options.width || 0,\r\n              height: options.height || 0,\r\n            };\r\n        return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\r\n\r\n        var origWidth = this.width,\r\n            origHeight = this.height,\r\n            scaledWidth = (cropping.width || this.width) * multiplier,\r\n            scaledHeight = (cropping.height || this.height) * multiplier,\r\n            zoom = this.getZoom(),\r\n            newZoom = zoom * multiplier,\r\n            vp = this.viewportTransform,\r\n            translateX = (vp[4] - cropping.left) * multiplier,\r\n            translateY = (vp[5] - cropping.top) * multiplier,\r\n            newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\r\n            originalInteractive = this.interactive,\r\n            originalSkipOffScreen = this.skipOffscreen,\r\n            needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\r\n\r\n        this.viewportTransform = newVp;\r\n        this.skipOffscreen = false;\r\n        // setting interactive to false avoid exporting controls\r\n        this.interactive = false;\r\n        if (needsResize) {\r\n          this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\r\n        }\r\n        // call a renderAll to force sync update. This will cancel the scheduled requestRenderAll\r\n        // from setDimensions\r\n        this.renderAll();\r\n        var data = this.__toDataURL(format, quality, cropping);\r\n        this.interactive = originalInteractive;\r\n        this.skipOffscreen = originalSkipOffScreen;\r\n        this.viewportTransform = vp;\r\n        //setDimensions with no option object is taking care of:\r\n        //this.width, this.height, this.requestRenderAll()\r\n        if (needsResize) {\r\n          this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\r\n        }\r\n        this.renderAll();\r\n        return data;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __toDataURL: function(format, quality) {\r\n\r\n        var canvasEl = this.contextContainer.canvas;\r\n        // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\r\n        if (format === 'jpg') {\r\n          format = 'jpeg';\r\n        }\r\n\r\n        var data = supportQuality\r\n          ? canvasEl.toDataURL('image/' + format, quality)\r\n          : canvasEl.toDataURL('image/' + format);\r\n\r\n        return data;\r\n      },\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Populates canvas with data from the specified dataless JSON.\r\n     * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\r\n     * @deprecated since 1.2.2\r\n     * @param {String|Object} json JSON string or object\r\n     * @param {Function} callback Callback, invoked when json is parsed\r\n     *                            and corresponding objects (e.g: {@link fabric.Image})\r\n     *                            are initialized\r\n     * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\r\n     */\r\n    loadFromDatalessJSON: function (json, callback, reviver) {\r\n      return this.loadFromJSON(json, callback, reviver);\r\n    },\r\n\r\n    /**\r\n     * Populates canvas with data from the specified JSON.\r\n     * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\r\n     * @param {String|Object} json JSON string or object\r\n     * @param {Function} callback Callback, invoked when json is parsed\r\n     *                            and corresponding objects (e.g: {@link fabric.Image})\r\n     *                            are initialized\r\n     * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\r\n     * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\r\n     * @example <caption>loadFromJSON</caption>\r\n     * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\r\n     * @example <caption>loadFromJSON with reviver</caption>\r\n     * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\r\n     *   // `o` = json object\r\n     *   // `object` = fabric.Object instance\r\n     *   // ... do some stuff ...\r\n     * });\r\n     */\r\n    loadFromJSON: function (json, callback, reviver) {\r\n      if (!json) {\r\n        return;\r\n      }\r\n\r\n      // serialize if it wasn't already\r\n      var serialized = (typeof json === 'string')\r\n        ? JSON.parse(json)\r\n        : fabric.util.object.clone(json);\r\n\r\n      var _this = this,\r\n          renderOnAddRemove = this.renderOnAddRemove;\r\n      this.renderOnAddRemove = false;\r\n\r\n      this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\r\n        _this.clear();\r\n        _this._setBgOverlay(serialized, function () {\r\n          enlivenedObjects.forEach(function(obj, index) {\r\n            // we splice the array just in case some custom classes restored from JSON\r\n            // will add more object to canvas at canvas init.\r\n            _this.insertAt(obj, index);\r\n          });\r\n          _this.renderOnAddRemove = renderOnAddRemove;\r\n          // remove parts i cannot set as options\r\n          delete serialized.objects;\r\n          delete serialized.backgroundImage;\r\n          delete serialized.overlayImage;\r\n          delete serialized.background;\r\n          delete serialized.overlay;\r\n          // this._initOptions does too many things to just\r\n          // call it. Normally loading an Object from JSON\r\n          // create the Object instance. Here the Canvas is\r\n          // already an instance and we are just loading things over it\r\n          _this._setOptions(serialized);\r\n          _this.renderAll();\r\n          callback && callback();\r\n        });\r\n      }, reviver);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} serialized Object with background and overlay information\r\n     * @param {Function} callback Invoked after all background and overlay images/patterns loaded\r\n     */\r\n    _setBgOverlay: function(serialized, callback) {\r\n      var loaded = {\r\n        backgroundColor: false,\r\n        overlayColor: false,\r\n        backgroundImage: false,\r\n        overlayImage: false\r\n      };\r\n\r\n      if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\r\n        callback && callback();\r\n        return;\r\n      }\r\n\r\n      var cbIfLoaded = function () {\r\n        if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\r\n          callback && callback();\r\n        }\r\n      };\r\n\r\n      this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\r\n      this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\r\n      this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\r\n      this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\r\n     * @param {(Object|String)} value Value to set\r\n     * @param {Object} loaded Set loaded property to true if property is set\r\n     * @param {Object} callback Callback function to invoke after property is set\r\n     */\r\n    __setBgOverlay: function(property, value, loaded, callback) {\r\n      var _this = this;\r\n\r\n      if (!value) {\r\n        loaded[property] = true;\r\n        callback && callback();\r\n        return;\r\n      }\r\n\r\n      if (property === 'backgroundImage' || property === 'overlayImage') {\r\n        fabric.util.enlivenObjects([value], function(enlivedObject){\r\n          _this[property] = enlivedObject[0];\r\n          loaded[property] = true;\r\n          callback && callback();\r\n        });\r\n      }\r\n      else {\r\n        this['set' + fabric.util.string.capitalize(property, true)](value, function() {\r\n          loaded[property] = true;\r\n          callback && callback();\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Array} objects\r\n     * @param {Function} callback\r\n     * @param {Function} [reviver]\r\n     */\r\n    _enlivenObjects: function (objects, callback, reviver) {\r\n      if (!objects || objects.length === 0) {\r\n        callback && callback([]);\r\n        return;\r\n      }\r\n\r\n      fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\r\n        callback && callback(enlivenedObjects);\r\n      }, null, reviver);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} format\r\n     * @param {Function} callback\r\n     */\r\n    _toDataURL: function (format, callback) {\r\n      this.clone(function (clone) {\r\n        callback(clone.toDataURL(format));\r\n      });\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} format\r\n     * @param {Number} multiplier\r\n     * @param {Function} callback\r\n     */\r\n    _toDataURLWithMultiplier: function (format, multiplier, callback) {\r\n      this.clone(function (clone) {\r\n        callback(clone.toDataURLWithMultiplier(format, multiplier));\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Clones canvas instance\r\n     * @param {Object} [callback] Receives cloned instance as a first argument\r\n     * @param {Array} [properties] Array of properties to include in the cloned canvas and children\r\n     */\r\n    clone: function (callback, properties) {\r\n      var data = JSON.stringify(this.toJSON(properties));\r\n      this.cloneWithoutData(function(clone) {\r\n        clone.loadFromJSON(data, function() {\r\n          callback && callback(clone);\r\n        });\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Clones canvas instance without cloning existing data.\r\n     * This essentially copies canvas dimensions, clipping properties, etc.\r\n     * but leaves data empty (so that you can populate it with your own)\r\n     * @param {Object} [callback] Receives cloned instance as a first argument\r\n     */\r\n    cloneWithoutData: function(callback) {\r\n      var el = fabric.util.createCanvasElement();\r\n\r\n      el.width = this.width;\r\n      el.height = this.height;\r\n\r\n      var clone = new fabric.Canvas(el);\r\n      clone.clipTo = this.clipTo;\r\n      if (this.backgroundImage) {\r\n        clone.setBackgroundImage(this.backgroundImage.src, function() {\r\n          clone.renderAll();\r\n          callback && callback(clone);\r\n        });\r\n        clone.backgroundImageOpacity = this.backgroundImageOpacity;\r\n        clone.backgroundImageStretch = this.backgroundImageStretch;\r\n      }\r\n      else {\r\n        callback && callback(clone);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        clone = fabric.util.object.clone,\r\n        toFixed = fabric.util.toFixed,\r\n        capitalize = fabric.util.string.capitalize,\r\n        degreesToRadians = fabric.util.degreesToRadians,\r\n        supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\r\n        objectCaching = !fabric.isLikelyNode,\r\n        ALIASING_LIMIT = 2;\r\n\r\n    if (fabric.Object) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Root object class from which all 2d shape classes inherit from\r\n     * @class fabric.Object\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\r\n     * @see {@link fabric.Object#initialize} for constructor definition\r\n     *\r\n     * @fires added\r\n     * @fires removed\r\n     *\r\n     * @fires selected\r\n     * @fires deselected\r\n     * @fires modified\r\n     * @fires modified\r\n     * @fires moved\r\n     * @fires scaled\r\n     * @fires rotated\r\n     * @fires skewed\r\n     *\r\n     * @fires rotating\r\n     * @fires scaling\r\n     * @fires moving\r\n     * @fires skewing\r\n     *\r\n     * @fires mousedown\r\n     * @fires mouseup\r\n     * @fires mouseover\r\n     * @fires mouseout\r\n     * @fires mousewheel\r\n     * @fires mousedblclick\r\n     *\r\n     * @fires dragover\r\n     * @fires dragenter\r\n     * @fires dragleave\r\n     * @fires drop\r\n     */\r\n    fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Type of an object (rect, circle, path, etc.).\r\n       * Note that this property is meant to be read-only and not meant to be modified.\r\n       * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\r\n       * @type String\r\n       * @default\r\n       */\r\n      type:                     'object',\r\n\r\n      /**\r\n       * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\r\n       * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\r\n       * @type String\r\n       * @default\r\n       */\r\n      originX:                  'left',\r\n\r\n      /**\r\n       * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\r\n       * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\r\n       * @type String\r\n       * @default\r\n       */\r\n      originY:                  'top',\r\n\r\n      /**\r\n       * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\r\n       * @type Number\r\n       * @default\r\n       */\r\n      top:                      0,\r\n\r\n      /**\r\n       * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\r\n       * @type Number\r\n       * @default\r\n       */\r\n      left:                     0,\r\n\r\n      /**\r\n       * Object width\r\n       * @type Number\r\n       * @default\r\n       */\r\n      width:                    0,\r\n\r\n      /**\r\n       * Object height\r\n       * @type Number\r\n       * @default\r\n       */\r\n      height:                   0,\r\n\r\n      /**\r\n       * Object scale factor (horizontal)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      scaleX:                   1,\r\n\r\n      /**\r\n       * Object scale factor (vertical)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      scaleY:                   1,\r\n\r\n      /**\r\n       * When true, an object is rendered as flipped horizontally\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      flipX:                    false,\r\n\r\n      /**\r\n       * When true, an object is rendered as flipped vertically\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      flipY:                    false,\r\n\r\n      /**\r\n       * Opacity of an object\r\n       * @type Number\r\n       * @default\r\n       */\r\n      opacity:                  1,\r\n\r\n      /**\r\n       * Angle of rotation of an object (in degrees)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      angle:                    0,\r\n\r\n      /**\r\n       * Angle of skew on x axes of an object (in degrees)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      skewX:                    0,\r\n\r\n      /**\r\n       * Angle of skew on y axes of an object (in degrees)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      skewY:                    0,\r\n\r\n      /**\r\n       * Size of object's controlling corners (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cornerSize:               13,\r\n\r\n      /**\r\n       * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      transparentCorners:       true,\r\n\r\n      /**\r\n       * Default cursor value used when hovering over this object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      hoverCursor:              null,\r\n\r\n      /**\r\n       * Default cursor value used when moving this object on canvas\r\n       * @type String\r\n       * @default\r\n       */\r\n      moveCursor:               null,\r\n\r\n      /**\r\n       * Padding between object and its controlling borders (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      padding:                  0,\r\n\r\n      /**\r\n       * Color of controlling borders of an object (when it's active)\r\n       * @type String\r\n       * @default\r\n       */\r\n      borderColor:              'rgba(102,153,255,0.75)',\r\n\r\n      /**\r\n       * Array specifying dash pattern of an object's borders (hasBorder must be true)\r\n       * @since 1.6.2\r\n       * @type Array\r\n       */\r\n      borderDashArray:          null,\r\n\r\n      /**\r\n       * Color of controlling corners of an object (when it's active)\r\n       * @type String\r\n       * @default\r\n       */\r\n      cornerColor:              'rgba(102,153,255,0.5)',\r\n\r\n      /**\r\n       * Color of controlling corners of an object (when it's active and transparentCorners false)\r\n       * @since 1.6.2\r\n       * @type String\r\n       * @default\r\n       */\r\n      cornerStrokeColor:        null,\r\n\r\n      /**\r\n       * Specify style of control, 'rect' or 'circle'\r\n       * @since 1.6.2\r\n       * @type String\r\n       */\r\n      cornerStyle:          'rect',\r\n\r\n      /**\r\n       * Array specifying dash pattern of an object's control (hasBorder must be true)\r\n       * @since 1.6.2\r\n       * @type Array\r\n       */\r\n      cornerDashArray:          null,\r\n\r\n      /**\r\n       * When true, this object will use center point as the origin of transformation\r\n       * when being scaled via the controls.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredScaling:          false,\r\n\r\n      /**\r\n       * When true, this object will use center point as the origin of transformation\r\n       * when being rotated via the controls.\r\n       * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n       * @since 1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      centeredRotation:         true,\r\n\r\n      /**\r\n       * Color of object's fill\r\n       * takes css colors https://www.w3.org/TR/css-color-3/\r\n       * @type String\r\n       * @default\r\n       */\r\n      fill:                     'rgb(0,0,0)',\r\n\r\n      /**\r\n       * Fill rule used to fill an object\r\n       * accepted values are nonzero, evenodd\r\n       * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\r\n       * @type String\r\n       * @default\r\n       */\r\n      fillRule:                 'nonzero',\r\n\r\n      /**\r\n       * Composite rule used for canvas globalCompositeOperation\r\n       * @type String\r\n       * @default\r\n       */\r\n      globalCompositeOperation: 'source-over',\r\n\r\n      /**\r\n       * Background color of an object.\r\n       * takes css colors https://www.w3.org/TR/css-color-3/\r\n       * @type String\r\n       * @default\r\n       */\r\n      backgroundColor:          '',\r\n\r\n      /**\r\n       * Selection Background color of an object. colored layer behind the object when it is active.\r\n       * does not mix good with globalCompositeOperation methods.\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionBackgroundColor:          '',\r\n\r\n      /**\r\n       * When defined, an object is rendered via stroke and this property specifies its color\r\n       * takes css colors https://www.w3.org/TR/css-color-3/\r\n       * @type String\r\n       * @default\r\n       */\r\n      stroke:                   null,\r\n\r\n      /**\r\n       * Width of a stroke used to render this object\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeWidth:              1,\r\n\r\n      /**\r\n       * Array specifying dash pattern of an object's stroke (stroke must be defined)\r\n       * @type Array\r\n       */\r\n      strokeDashArray:          null,\r\n\r\n      /**\r\n       * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\r\n       * @type String\r\n       * @default\r\n       */\r\n      strokeLineCap:            'butt',\r\n\r\n      /**\r\n       * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\r\n       * @type String\r\n       * @default\r\n       */\r\n      strokeLineJoin:           'miter',\r\n\r\n      /**\r\n       * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeMiterLimit:         4,\r\n\r\n      /**\r\n       * Shadow object representing shadow of this shape\r\n       * @type fabric.Shadow\r\n       * @default\r\n       */\r\n      shadow:                   null,\r\n\r\n      /**\r\n       * Opacity of object's controlling borders when object is active and moving\r\n       * @type Number\r\n       * @default\r\n       */\r\n      borderOpacityWhenMoving:  0.4,\r\n\r\n      /**\r\n       * Scale factor of object's controlling borders\r\n       * @type Number\r\n       * @default\r\n       */\r\n      borderScaleFactor:        1,\r\n\r\n      /**\r\n       * Transform matrix (similar to SVG's transform matrix)\r\n       * @type Array\r\n       */\r\n      transformMatrix:          null,\r\n\r\n      /**\r\n       * Minimum allowed scale value of an object\r\n       * @type Number\r\n       * @default\r\n       */\r\n      minScaleLimit:            0,\r\n\r\n      /**\r\n       * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\r\n       * But events still fire on it.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      selectable:               true,\r\n\r\n      /**\r\n       * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      evented:                  true,\r\n\r\n      /**\r\n       * When set to `false`, an object is not rendered on canvas\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      visible:                  true,\r\n\r\n      /**\r\n       * When set to `false`, object's controls are not displayed and can not be used to manipulate object\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      hasControls:              true,\r\n\r\n      /**\r\n       * When set to `false`, object's controlling borders are not rendered\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      hasBorders:               true,\r\n\r\n      /**\r\n       * When set to `false`, object's controlling rotating point will not be visible or selectable\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      hasRotatingPoint:         true,\r\n\r\n      /**\r\n       * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      rotatingPointOffset:      40,\r\n\r\n      /**\r\n       * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      perPixelTargetFind:       false,\r\n\r\n      /**\r\n       * When `false`, default object's values are not included in its serialization\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      includeDefaultValues:     true,\r\n\r\n      /**\r\n       * Function that determines clipping of an object (context is passed as a first argument).\r\n       * If you are using code minification, ctx argument can be minified/manglied you should use\r\n       * as a workaround `var ctx = arguments[0];` in the function;\r\n       * Note that context origin is at the object's center point (not left/top corner)\r\n       * @deprecated since 2.0.0\r\n       * @type Function\r\n       */\r\n      clipTo:                   null,\r\n\r\n      /**\r\n       * When `true`, object horizontal movement is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockMovementX:            false,\r\n\r\n      /**\r\n       * When `true`, object vertical movement is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockMovementY:            false,\r\n\r\n      /**\r\n       * When `true`, object rotation is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockRotation:             false,\r\n\r\n      /**\r\n       * When `true`, object horizontal scaling is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockScalingX:             false,\r\n\r\n      /**\r\n       * When `true`, object vertical scaling is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockScalingY:             false,\r\n\r\n      /**\r\n       * When `true`, object non-uniform scaling is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockUniScaling:           false,\r\n\r\n      /**\r\n       * When `true`, object horizontal skewing is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockSkewingX:             false,\r\n\r\n      /**\r\n       * When `true`, object vertical skewing is locked\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockSkewingY:             false,\r\n\r\n      /**\r\n       * When `true`, object cannot be flipped by scaling into negative values\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      lockScalingFlip:          false,\r\n\r\n      /**\r\n       * When `true`, object is not exported in OBJECT/JSON\r\n       * since 1.6.3\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      excludeFromExport:        false,\r\n\r\n      /**\r\n       * When `true`, object is cached on an additional canvas.\r\n       * default to true\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default true\r\n       */\r\n      objectCaching:            objectCaching,\r\n\r\n      /**\r\n       * When `true`, object properties are checked for cache invalidation. In some particular\r\n       * situation you may want this to be disabled ( spray brush, very big, groups)\r\n       * or if your application does not allow you to modify properties for groups child you want\r\n       * to disable it for groups.\r\n       * default to false\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default false\r\n       */\r\n      statefullCache:            false,\r\n\r\n      /**\r\n       * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\r\n       * too much and will be redrawn with correct details at the end of scaling.\r\n       * this setting is performance and application dependant.\r\n       * default to true\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default true\r\n       */\r\n      noScaleCache:              true,\r\n\r\n      /**\r\n       * When set to `true`, object's cache will be rerendered next render call.\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default true\r\n       */\r\n      dirty:                true,\r\n\r\n      /**\r\n       * keeps the value of the last hovered coner during mouse move.\r\n       * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\r\n       * It should be private, but there is no harm in using it as\r\n       * a read-only property.\r\n       * @type number|string|any\r\n       * @default 0\r\n       */\r\n      __corner: 0,\r\n\r\n      /**\r\n       * Determins if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\r\n       * @type String\r\n       * @default\r\n       */\r\n      paintFirst:           'fill',\r\n\r\n      /**\r\n       * List of properties to consider when checking if state\r\n       * of an object is changed (fabric.Object#hasStateChanged)\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: (\r\n        'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\r\n        'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\r\n        'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\r\n        'skewX skewY fillRule paintFirst'\r\n      ).split(' '),\r\n\r\n      /**\r\n       * List of properties to consider when checking if cache needs refresh\r\n       * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\r\n       * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\r\n       * and refreshed at the next render\r\n       * @type Array\r\n       */\r\n      cacheProperties: (\r\n        'fill stroke strokeWidth strokeDashArray width height paintFirst' +\r\n        ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\r\n      ).split(' '),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        if (options) {\r\n          this.setOptions(options);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Create a the canvas used to keep the cached copy of the object\r\n       * @private\r\n       */\r\n      _createCacheCanvas: function() {\r\n        this._cacheProperties = {};\r\n        this._cacheCanvas = fabric.util.createCanvasElement();\r\n        this._cacheContext = this._cacheCanvas.getContext('2d');\r\n        this._updateCacheCanvas();\r\n        // if canvas gets created, is empty, so dirty.\r\n        this.dirty = true;\r\n      },\r\n\r\n      /**\r\n       * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\r\n       * and each side do not cross fabric.cacheSideLimit\r\n       * those numbers are configurable so that you can get as much detail as you want\r\n       * making bargain with performances.\r\n       * @param {Object} dims\r\n       * @param {Object} dims.width width of canvas\r\n       * @param {Object} dims.height height of canvas\r\n       * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.width width of canvas\r\n       * @return {Object}.height height of canvas\r\n       * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       */\r\n      _limitCacheSize: function(dims) {\r\n        var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\r\n            width = dims.width, height = dims.height,\r\n            max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\r\n        if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\r\n          if (width < min) {\r\n            dims.width = min;\r\n          }\r\n          if (height < min) {\r\n            dims.height = min;\r\n          }\r\n          return dims;\r\n        }\r\n        var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\r\n            capValue = fabric.util.capValue,\r\n            x = capValue(min, limitedDims.x, max),\r\n            y = capValue(min, limitedDims.y, max);\r\n        if (width > x) {\r\n          dims.zoomX /= width / x;\r\n          dims.width = x;\r\n          dims.capped = true;\r\n        }\r\n        if (height > y) {\r\n          dims.zoomY /= height / y;\r\n          dims.height = y;\r\n          dims.capped = true;\r\n        }\r\n        return dims;\r\n      },\r\n\r\n      /**\r\n       * Return the dimension and the zoom level needed to create a cache canvas\r\n       * big enough to host the object to be cached.\r\n       * @private\r\n       * @param {Object} dim.x width of object to be cached\r\n       * @param {Object} dim.y height of object to be cached\r\n       * @return {Object}.width width of canvas\r\n       * @return {Object}.height height of canvas\r\n       * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       */\r\n      _getCacheCanvasDimensions: function() {\r\n        var objectScale = this.getTotalObjectScaling(),\r\n            dim = this._getNonTransformedDimensions(),\r\n            zoomX = objectScale.scaleX,\r\n            zoomY = objectScale.scaleY,\r\n            width = dim.x * zoomX,\r\n            height = dim.y * zoomY;\r\n        return {\r\n          // for sure this ALIASING_LIMIT is slightly crating problem\r\n          // in situation in wich the cache canvas gets an upper limit\r\n          width: width + ALIASING_LIMIT,\r\n          height: height + ALIASING_LIMIT,\r\n          zoomX: zoomX,\r\n          zoomY: zoomY,\r\n          x: dim.x,\r\n          y: dim.y\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Update width and height of the canvas for cache\r\n       * returns true or false if canvas needed resize.\r\n       * @private\r\n       * @return {Boolean} true if the canvas has been resized\r\n       */\r\n      _updateCacheCanvas: function() {\r\n        if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\r\n          var target = this.canvas._currentTransform.target,\r\n              action = this.canvas._currentTransform.action;\r\n          if (this === target && action.slice && action.slice(0, 5) === 'scale') {\r\n            return false;\r\n          }\r\n        }\r\n        var canvas = this._cacheCanvas,\r\n            dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\r\n            minCacheSize = fabric.minCacheSideLimit,\r\n            width = dims.width, height = dims.height, drawingWidth, drawingHeight,\r\n            zoomX = dims.zoomX, zoomY = dims.zoomY,\r\n            dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\r\n            zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\r\n            shouldRedraw = dimensionsChanged || zoomChanged,\r\n            additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\r\n        if (dimensionsChanged) {\r\n          var canvasWidth = this._cacheCanvas.width,\r\n              canvasHeight = this._cacheCanvas.height,\r\n              sizeGrowing = width > canvasWidth || height > canvasHeight,\r\n              sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\r\n                canvasWidth > minCacheSize && canvasHeight > minCacheSize;\r\n          shouldResizeCanvas = sizeGrowing || sizeShrinking;\r\n          if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\r\n            additionalWidth = width * 0.1;\r\n            additionalHeight = height * 0.1;\r\n          }\r\n        }\r\n        if (shouldRedraw) {\r\n          if (shouldResizeCanvas) {\r\n            canvas.width = Math.ceil(width + additionalWidth);\r\n            canvas.height = Math.ceil(height + additionalHeight);\r\n          }\r\n          else {\r\n            this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\r\n            this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\r\n          }\r\n          drawingWidth = dims.x * zoomX / 2;\r\n          drawingHeight = dims.y * zoomY / 2;\r\n          this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\r\n          this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\r\n          this.cacheWidth = width;\r\n          this.cacheHeight = height;\r\n          this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\r\n          this._cacheContext.scale(zoomX, zoomY);\r\n          this.zoomX = zoomX;\r\n          this.zoomY = zoomY;\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Sets object's properties from options\r\n       * @param {Object} [options] Options object\r\n       */\r\n      setOptions: function(options) {\r\n        this._setOptions(options);\r\n        this._initGradient(options.fill, 'fill');\r\n        this._initGradient(options.stroke, 'stroke');\r\n        this._initClipping(options);\r\n        this._initPattern(options.fill, 'fill');\r\n        this._initPattern(options.stroke, 'stroke');\r\n      },\r\n\r\n      /**\r\n       * Transforms context when rendering an object\r\n       * @param {CanvasRenderingContext2D} ctx Context\r\n       */\r\n      transform: function(ctx) {\r\n        var m;\r\n        if (this.group && !this.group._transformDone) {\r\n          m = this.calcTransformMatrix();\r\n        }\r\n        else {\r\n          m = this.calcOwnMatrix();\r\n        }\r\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n      },\r\n\r\n      /**\r\n       * Returns an object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n\r\n            object = {\r\n              type:                     this.type,\r\n              version:                  fabric.version,\r\n              originX:                  this.originX,\r\n              originY:                  this.originY,\r\n              left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\r\n              top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\r\n              width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\r\n              height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\r\n              fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\r\n              stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\r\n              strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\r\n              strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\r\n              strokeLineCap:            this.strokeLineCap,\r\n              strokeLineJoin:           this.strokeLineJoin,\r\n              strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\r\n              scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\r\n              scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\r\n              angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\r\n              flipX:                    this.flipX,\r\n              flipY:                    this.flipY,\r\n              opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\r\n              shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\r\n              visible:                  this.visible,\r\n              clipTo:                   this.clipTo && String(this.clipTo),\r\n              backgroundColor:          this.backgroundColor,\r\n              fillRule:                 this.fillRule,\r\n              paintFirst:               this.paintFirst,\r\n              globalCompositeOperation: this.globalCompositeOperation,\r\n              transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\r\n              skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\r\n              skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\r\n            };\r\n\r\n        fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n        if (!this.includeDefaultValues) {\r\n          object = this._removeDefaultValues(object);\r\n        }\r\n\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Returns (dataless) object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toDatalessObject: function(propertiesToInclude) {\r\n        // will be overwritten by subclasses\r\n        return this.toObject(propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} object\r\n       */\r\n      _removeDefaultValues: function(object) {\r\n        var prototype = fabric.util.getKlass(object.type).prototype,\r\n            stateProperties = prototype.stateProperties;\r\n        stateProperties.forEach(function(prop) {\r\n          if (object[prop] === prototype[prop]) {\r\n            delete object[prop];\r\n          }\r\n          var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\r\n                        Object.prototype.toString.call(prototype[prop]) === '[object Array]';\r\n\r\n          // basically a check for [] === []\r\n          if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\r\n            delete object[prop];\r\n          }\r\n        });\r\n\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Returns a string representation of an instance\r\n       * @return {String}\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.' + capitalize(this.type) + '>';\r\n      },\r\n\r\n      /**\r\n       * Return the object scale factor counting also the group scaling\r\n       * @return {Object} object with scaleX and scaleY properties\r\n       */\r\n      getObjectScaling: function() {\r\n        var scaleX = this.scaleX, scaleY = this.scaleY;\r\n        if (this.group) {\r\n          var scaling = this.group.getObjectScaling();\r\n          scaleX *= scaling.scaleX;\r\n          scaleY *= scaling.scaleY;\r\n        }\r\n        return { scaleX: scaleX, scaleY: scaleY };\r\n      },\r\n\r\n      /**\r\n       * Return the object scale factor counting also the group scaling, zoom and retina\r\n       * @return {Object} object with scaleX and scaleY properties\r\n       */\r\n      getTotalObjectScaling: function() {\r\n        var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\r\n        if (this.canvas) {\r\n          var zoom = this.canvas.getZoom();\r\n          var retina = this.canvas.getRetinaScaling();\r\n          scaleX *= zoom * retina;\r\n          scaleY *= zoom * retina;\r\n        }\r\n        return { scaleX: scaleX, scaleY: scaleY };\r\n      },\r\n\r\n      /**\r\n       * Return the object opacity counting also the group property\r\n       * @return {Number}\r\n       */\r\n      getObjectOpacity: function() {\r\n        var opacity = this.opacity;\r\n        if (this.group) {\r\n          opacity *= this.group.getObjectOpacity();\r\n        }\r\n        return opacity;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      _set: function(key, value) {\r\n        var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\r\n            isChanged = this[key] !== value, groupNeedsUpdate = false;\r\n\r\n        if (shouldConstrainValue) {\r\n          value = this._constrainScale(value);\r\n        }\r\n        if (key === 'scaleX' && value < 0) {\r\n          this.flipX = !this.flipX;\r\n          value *= -1;\r\n        }\r\n        else if (key === 'scaleY' && value < 0) {\r\n          this.flipY = !this.flipY;\r\n          value *= -1;\r\n        }\r\n        else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\r\n          value = new fabric.Shadow(value);\r\n        }\r\n        else if (key === 'dirty' && this.group) {\r\n          this.group.set('dirty', value);\r\n        }\r\n\r\n        this[key] = value;\r\n\r\n        if (isChanged) {\r\n          groupNeedsUpdate = this.group && this.group.isOnACache();\r\n          if (this.cacheProperties.indexOf(key) > -1) {\r\n            this.dirty = true;\r\n            groupNeedsUpdate && this.group.set('dirty', true);\r\n          }\r\n          else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\r\n            this.group.set('dirty', true);\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * This callback function is called by the parent group of an object every\r\n       * time a non-delegated property changes on the group. It is passed the key\r\n       * and value as parameters. Not adding in this function's signature to avoid\r\n       * Travis build error about unused variables.\r\n       */\r\n      setOnGroup: function() {\r\n        // implemented by sub-classes, as needed.\r\n      },\r\n\r\n      /**\r\n       * Retrieves viewportTransform from Object's canvas if possible\r\n       * @method getViewportTransform\r\n       * @memberOf fabric.Object.prototype\r\n       * @return {Boolean}\r\n       */\r\n      getViewportTransform: function() {\r\n        if (this.canvas && this.canvas.viewportTransform) {\r\n          return this.canvas.viewportTransform;\r\n        }\r\n        return fabric.iMatrix.concat();\r\n      },\r\n\r\n      /*\r\n       * @private\r\n       * return if the object would be visible in rendering\r\n       * @memberOf fabric.Object.prototype\r\n       * @return {Boolean}\r\n       */\r\n      isNotVisible: function() {\r\n        return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\r\n      },\r\n\r\n      /**\r\n       * Renders an object on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      render: function(ctx) {\r\n        // do not render if width/height are zeros or object is not visible\r\n        if (this.isNotVisible()) {\r\n          return;\r\n        }\r\n        if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\r\n          return;\r\n        }\r\n        ctx.save();\r\n        this._setupCompositeOperation(ctx);\r\n        this.drawSelectionBackground(ctx);\r\n        this.transform(ctx);\r\n        this._setOpacity(ctx);\r\n        this._setShadow(ctx, this);\r\n        if (this.transformMatrix) {\r\n          ctx.transform.apply(ctx, this.transformMatrix);\r\n        }\r\n        this.clipTo && fabric.util.clipContext(this, ctx);\r\n        if (this.shouldCache()) {\r\n          if (!this._cacheCanvas) {\r\n            this._createCacheCanvas();\r\n\r\n          }\r\n          if (this.isCacheDirty()) {\r\n            this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\r\n            this.drawObject(this._cacheContext);\r\n            this.dirty = false;\r\n          }\r\n          this.drawCacheOnCanvas(ctx);\r\n        }\r\n        else {\r\n          this._removeCacheCanvas();\r\n          this.dirty = false;\r\n          this.drawObject(ctx);\r\n          if (this.objectCaching && this.statefullCache) {\r\n            this.saveState({ propertySet: 'cacheProperties' });\r\n          }\r\n        }\r\n        this.clipTo && ctx.restore();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Remove cacheCanvas and its dimensions from the objects\r\n       */\r\n      _removeCacheCanvas: function() {\r\n        this._cacheCanvas = null;\r\n        this.cacheWidth = 0;\r\n        this.cacheHeight = 0;\r\n      },\r\n\r\n      /**\r\n       * When set to `true`, force the object to have its own cache, even if it is inside a group\r\n       * it may be needed when your object behave in a particular way on the cache and always needs\r\n       * its own isolated canvas to render correctly.\r\n       * Created to be overridden\r\n       * since 1.7.12\r\n       * @returns false\r\n       */\r\n      needsItsOwnCache: function() {\r\n        if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * objectCaching is a global flag, wins over everything\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group outside is cached.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        this.ownCaching = this.objectCaching &&\r\n        (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\r\n        return this.ownCaching;\r\n      },\r\n\r\n      /**\r\n       * Check if this object or a child object will cast a shadow\r\n       * used by Group.shouldCache to know if child has a shadow recursively\r\n       * @return {Boolean}\r\n       */\r\n      willDrawShadow: function() {\r\n        return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\r\n      },\r\n\r\n      /**\r\n       * Execute the drawing operation for an object on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawObject: function(ctx) {\r\n        this._renderBackground(ctx);\r\n        this._setStrokeStyles(ctx, this);\r\n        this._setFillStyles(ctx, this);\r\n        this._render(ctx);\r\n      },\r\n\r\n      /**\r\n       * Paint the cached copy of the object on the target context.\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawCacheOnCanvas: function(ctx) {\r\n        ctx.scale(1 / this.zoomX, 1 / this.zoomY);\r\n        ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\r\n      },\r\n\r\n      /**\r\n       * Check if cache is dirty\r\n       * @param {Boolean} skipCanvas skip canvas checks because this object is painted\r\n       * on parent canvas.\r\n       */\r\n      isCacheDirty: function(skipCanvas) {\r\n        if (this.isNotVisible()) {\r\n          return false;\r\n        }\r\n        if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\r\n          // in this case the context is already cleared.\r\n          return true;\r\n        }\r\n        else {\r\n          if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\r\n            if (this._cacheCanvas && !skipCanvas) {\r\n              var width = this.cacheWidth / this.zoomX;\r\n              var height = this.cacheHeight / this.zoomY;\r\n              this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\r\n            }\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Draws a background for the object big as its untrasformed dimensions\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderBackground: function(ctx) {\r\n        if (!this.backgroundColor) {\r\n          return;\r\n        }\r\n        var dim = this._getNonTransformedDimensions();\r\n        ctx.fillStyle = this.backgroundColor;\r\n\r\n        ctx.fillRect(\r\n          -dim.x / 2,\r\n          -dim.y / 2,\r\n          dim.x,\r\n          dim.y\r\n        );\r\n        // if there is background color no other shadows\r\n        // should be casted\r\n        this._removeShadow(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _setOpacity: function(ctx) {\r\n        if (this.group && !this.group._transformDone) {\r\n          ctx.globalAlpha = this.getObjectOpacity();\r\n        }\r\n        else {\r\n          ctx.globalAlpha *= this.opacity;\r\n        }\r\n      },\r\n\r\n      _setStrokeStyles: function(ctx, decl) {\r\n        if (decl.stroke) {\r\n          ctx.lineWidth = decl.strokeWidth;\r\n          ctx.lineCap = decl.strokeLineCap;\r\n          ctx.lineJoin = decl.strokeLineJoin;\r\n          ctx.miterLimit = decl.strokeMiterLimit;\r\n          ctx.strokeStyle = decl.stroke.toLive\r\n            ? decl.stroke.toLive(ctx, this)\r\n            : decl.stroke;\r\n        }\r\n      },\r\n\r\n      _setFillStyles: function(ctx, decl) {\r\n        if (decl.fill) {\r\n          ctx.fillStyle = decl.fill.toLive\r\n            ? decl.fill.toLive(ctx, this)\r\n            : decl.fill;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Sets line dash\r\n       * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\r\n       * @param {Array} dashArray array representing dashes\r\n       * @param {Function} alternative function to call if browaser does not support lineDash\r\n       */\r\n      _setLineDash: function(ctx, dashArray, alternative) {\r\n        if (!dashArray) {\r\n          return;\r\n        }\r\n        // Spec requires the concatenation of two copies the dash list when the number of elements is odd\r\n        if (1 & dashArray.length) {\r\n          dashArray.push.apply(dashArray, dashArray);\r\n        }\r\n        if (supportsLineDash) {\r\n          ctx.setLineDash(dashArray);\r\n        }\r\n        else {\r\n          alternative && alternative(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Renders controls and borders for the object\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} [styleOverride] properties to override the object style\r\n       */\r\n      _renderControls: function(ctx, styleOverride) {\r\n        var vpt = this.getViewportTransform(),\r\n            matrix = this.calcTransformMatrix(),\r\n            options, drawBorders, drawControls;\r\n        styleOverride = styleOverride || { };\r\n        drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\r\n        drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\r\n        matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\r\n        options = fabric.util.qrDecompose(matrix);\r\n        ctx.save();\r\n        ctx.translate(options.translateX, options.translateY);\r\n        ctx.lineWidth = 1 * this.borderScaleFactor;\r\n        if (!this.group) {\r\n          ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n        }\r\n        if (styleOverride.forActiveSelection) {\r\n          ctx.rotate(degreesToRadians(options.angle));\r\n          drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\r\n        }\r\n        else {\r\n          ctx.rotate(degreesToRadians(this.angle));\r\n          drawBorders && this.drawBorders(ctx, styleOverride);\r\n        }\r\n        drawControls && this.drawControls(ctx, styleOverride);\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _setShadow: function(ctx) {\r\n        if (!this.shadow) {\r\n          return;\r\n        }\r\n\r\n        var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\r\n            multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\r\n            scaling = this.getObjectScaling();\r\n        if (this.canvas && this.canvas._isRetinaScaling()) {\r\n          multX *= fabric.devicePixelRatio;\r\n          multY *= fabric.devicePixelRatio;\r\n        }\r\n        ctx.shadowColor = this.shadow.color;\r\n        ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant *\r\n          (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\r\n        ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\r\n        ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _removeShadow: function(ctx) {\r\n        if (!this.shadow) {\r\n          return;\r\n        }\r\n\r\n        ctx.shadowColor = '';\r\n        ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} filler fabric.Pattern or fabric.Gradient\r\n       */\r\n      _applyPatternGradientTransform: function(ctx, filler) {\r\n        if (!filler || !filler.toLive) {\r\n          return { offsetX: 0, offsetY: 0 };\r\n        }\r\n        var t = filler.gradientTransform || filler.patternTransform;\r\n        var offsetX = -this.width / 2 + filler.offsetX || 0,\r\n            offsetY = -this.height / 2 + filler.offsetY || 0;\r\n        ctx.translate(offsetX, offsetY);\r\n        if (t) {\r\n          ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\r\n        }\r\n        return { offsetX: offsetX, offsetY: offsetY };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderPaintInOrder: function(ctx) {\r\n        if (this.paintFirst === 'stroke') {\r\n          this._renderStroke(ctx);\r\n          this._renderFill(ctx);\r\n        }\r\n        else {\r\n          this._renderFill(ctx);\r\n          this._renderStroke(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderFill: function(ctx) {\r\n        if (!this.fill) {\r\n          return;\r\n        }\r\n\r\n        ctx.save();\r\n        this._applyPatternGradientTransform(ctx, this.fill);\r\n        if (this.fillRule === 'evenodd') {\r\n          ctx.fill('evenodd');\r\n        }\r\n        else {\r\n          ctx.fill();\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      _renderStroke: function(ctx) {\r\n        if (!this.stroke || this.strokeWidth === 0) {\r\n          return;\r\n        }\r\n\r\n        if (this.shadow && !this.shadow.affectStroke) {\r\n          this._removeShadow(ctx);\r\n        }\r\n\r\n        ctx.save();\r\n        this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\r\n        this._applyPatternGradientTransform(ctx, this.stroke);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it returns the center of the object in the svg\r\n       * untransformed coordinates\r\n       * @private\r\n       * @return {Object} center point from element coordinates\r\n       */\r\n      _findCenterFromElement: function() {\r\n        return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it decoompose the transformMatrix\r\n       * and assign properties to object.\r\n       * untransformed coordinates\r\n       * @private\r\n       * @chainable\r\n       */\r\n      _assignTransformMatrixProps: function() {\r\n        if (this.transformMatrix) {\r\n          var options = fabric.util.qrDecompose(this.transformMatrix);\r\n          this.flipX = false;\r\n          this.flipY = false;\r\n          this.set('scaleX', options.scaleX);\r\n          this.set('scaleY', options.scaleY);\r\n          this.angle = options.angle;\r\n          this.skewX = options.skewX;\r\n          this.skewY = 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it removes the transform matrix\r\n       * and set to object properties that fabricjs can handle\r\n       * @private\r\n       * @param {Object} preserveAspectRatioOptions\r\n       * @return {thisArg}\r\n       */\r\n      _removeTransformMatrix: function(preserveAspectRatioOptions) {\r\n        var center = this._findCenterFromElement();\r\n        if (this.transformMatrix) {\r\n          this._assignTransformMatrixProps();\r\n          center = fabric.util.transformPoint(center, this.transformMatrix);\r\n        }\r\n        this.transformMatrix = null;\r\n        if (preserveAspectRatioOptions) {\r\n          this.scaleX *= preserveAspectRatioOptions.scaleX;\r\n          this.scaleY *= preserveAspectRatioOptions.scaleY;\r\n          this.cropX = preserveAspectRatioOptions.cropX;\r\n          this.cropY = preserveAspectRatioOptions.cropY;\r\n          center.x += preserveAspectRatioOptions.offsetLeft;\r\n          center.y += preserveAspectRatioOptions.offsetTop;\r\n          this.width = preserveAspectRatioOptions.width;\r\n          this.height = preserveAspectRatioOptions.height;\r\n        }\r\n        this.setPositionByOrigin(center, 'center', 'center');\r\n      },\r\n\r\n      /**\r\n       * Clones an instance, using a callback method will work for every object.\r\n       * @param {Function} callback Callback is invoked with a clone as a first argument\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       */\r\n      clone: function(callback, propertiesToInclude) {\r\n        var objectForm = this.toObject(propertiesToInclude);\r\n        if (this.constructor.fromObject) {\r\n          this.constructor.fromObject(objectForm, callback);\r\n        }\r\n        else {\r\n          fabric.Object._fromObject('Object', objectForm, callback);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Creates an instance of fabric.Image out of an object\r\n       * @param {Function} callback callback, invoked with an instance as a first argument\r\n       * @param {Object} [options] for clone as image, passed to toDataURL\r\n       * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      cloneAsImage: function(callback, options) {\r\n        var dataUrl = this.toDataURL(options);\r\n        fabric.util.loadImage(dataUrl, function(img) {\r\n          if (callback) {\r\n            callback(new fabric.Image(img));\r\n          }\r\n        });\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Converts an object into a data-url-like string\r\n       * @param {Object} options Options object\r\n       * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n       * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n       * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n       * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n       * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n       * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n       * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n       * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n       * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n       * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n       */\r\n      toDataURL: function(options) {\r\n        options || (options = { });\r\n\r\n        var origParams = fabric.util.saveObjectTransform(this);\r\n\r\n        if (options.withoutTransform) {\r\n          fabric.util.resetObjectTransform(this);\r\n        }\r\n\r\n        var el = fabric.util.createCanvasElement(),\r\n            // skip canvas zoom and calculate with setCoords now.\r\n            boundingRect = this.getBoundingRect(true, true);\r\n\r\n        el.width = boundingRect.width;\r\n        el.height = boundingRect.height;\r\n        var canvas = new fabric.StaticCanvas(el, {\r\n          enableRetinaScaling: options.enableRetinaScaling,\r\n          renderOnAddRemove: false,\r\n          skipOffscreen: false,\r\n        });\r\n        // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\r\n        if (options.format === 'jpg') {\r\n          options.format = 'jpeg';\r\n        }\r\n\r\n        if (options.format === 'jpeg') {\r\n          canvas.backgroundColor = '#fff';\r\n        }\r\n\r\n        this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\r\n\r\n        var originalCanvas = this.canvas;\r\n        canvas.add(this);\r\n        var data = canvas.toDataURL(options);\r\n        this.set(origParams).setCoords();\r\n        this.canvas = originalCanvas;\r\n        // canvas.dispose will call image.dispose that will nullify the elements\r\n        // since this canvas is a simple element for the process, we remove references\r\n        // to objects in this way in order to avoid object trashing.\r\n        canvas._objects = [];\r\n        canvas.dispose();\r\n        canvas = null;\r\n\r\n        return data;\r\n      },\r\n\r\n      /**\r\n       * Returns true if specified type is identical to the type of an instance\r\n       * @param {String} type Type to check against\r\n       * @return {Boolean}\r\n       */\r\n      isType: function(type) {\r\n        return this.type === type;\r\n      },\r\n\r\n      /**\r\n       * Returns complexity of an instance\r\n       * @return {Number} complexity of this instance (is 1 unless subclassed)\r\n       */\r\n      complexity: function() {\r\n        return 1;\r\n      },\r\n\r\n      /**\r\n       * Returns a JSON representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} JSON\r\n       */\r\n      toJSON: function(propertiesToInclude) {\r\n        // delegate, not alias\r\n        return this.toObject(propertiesToInclude);\r\n      },\r\n\r\n      /**\r\n       * Sets gradient (fill or stroke) of an object\r\n       * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\r\n       * @param {String} property Property name 'stroke' or 'fill'\r\n       * @param {Object} [options] Options object\r\n       * @param {String} [options.type] Type of gradient 'radial' or 'linear'\r\n       * @param {Number} [options.x1=0] x-coordinate of start point\r\n       * @param {Number} [options.y1=0] y-coordinate of start point\r\n       * @param {Number} [options.x2=0] x-coordinate of end point\r\n       * @param {Number} [options.y2=0] y-coordinate of end point\r\n       * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\r\n       * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\r\n       * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\r\n       * @param {Object} [options.gradientTransform] transforMatrix for gradient\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\r\n       * @example <caption>Set linear gradient</caption>\r\n       * object.setGradient('fill', {\r\n       *   type: 'linear',\r\n       *   x1: -object.width / 2,\r\n       *   y1: 0,\r\n       *   x2: object.width / 2,\r\n       *   y2: 0,\r\n       *   colorStops: {\r\n       *     0: 'red',\r\n       *     0.5: '#005555',\r\n       *     1: 'rgba(0,0,255,0.5)'\r\n       *   }\r\n       * });\r\n       * canvas.renderAll();\r\n       * @example <caption>Set radial gradient</caption>\r\n       * object.setGradient('fill', {\r\n       *   type: 'radial',\r\n       *   x1: 0,\r\n       *   y1: 0,\r\n       *   x2: 0,\r\n       *   y2: 0,\r\n       *   r1: object.width / 2,\r\n       *   r2: 10,\r\n       *   colorStops: {\r\n       *     0: 'red',\r\n       *     0.5: '#005555',\r\n       *     1: 'rgba(0,0,255,0.5)'\r\n       *   }\r\n       * });\r\n       * canvas.renderAll();\r\n       */\r\n      setGradient: function(property, options) {\r\n        options || (options = { });\r\n\r\n        var gradient = { colorStops: [] };\r\n\r\n        gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\r\n        gradient.coords = {\r\n          x1: options.x1,\r\n          y1: options.y1,\r\n          x2: options.x2,\r\n          y2: options.y2\r\n        };\r\n\r\n        if (options.r1 || options.r2) {\r\n          gradient.coords.r1 = options.r1;\r\n          gradient.coords.r2 = options.r2;\r\n        }\r\n\r\n        gradient.gradientTransform = options.gradientTransform;\r\n        fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\r\n\r\n        return this.set(property, fabric.Gradient.forObject(this, gradient));\r\n      },\r\n\r\n      /**\r\n       * Sets pattern fill of an object\r\n       * @param {Object} options Options object\r\n       * @param {(String|HTMLImageElement)} options.source Pattern source\r\n       * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\r\n       * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\r\n       * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\r\n       * @param {Function} [callback] Callback to invoke when image set as a pattern\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\r\n       * @example <caption>Set pattern</caption>\r\n       * object.setPatternFill({\r\n       *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n       *   repeat: 'repeat'\r\n       * },canvas.renderAll.bind(canvas));\r\n       */\r\n      setPatternFill: function(options, callback) {\r\n        return this.set('fill', new fabric.Pattern(options, callback));\r\n      },\r\n\r\n      /**\r\n       * Sets {@link fabric.Object#shadow|shadow} of an object\r\n       * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\r\n       * @param {String} [options.color=rgb(0,0,0)] Shadow color\r\n       * @param {Number} [options.blur=0] Shadow blur\r\n       * @param {Number} [options.offsetX=0] Shadow horizontal offset\r\n       * @param {Number} [options.offsetY=0] Shadow vertical offset\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\r\n       * @example <caption>Set shadow with string notation</caption>\r\n       * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\r\n       * canvas.renderAll();\r\n       * @example <caption>Set shadow with object notation</caption>\r\n       * object.setShadow({\r\n       *   color: 'red',\r\n       *   blur: 10,\r\n       *   offsetX: 20,\r\n       *   offsetY: 20\r\n       * });\r\n       * canvas.renderAll();\r\n       */\r\n      setShadow: function(options) {\r\n        return this.set('shadow', options ? new fabric.Shadow(options) : null);\r\n      },\r\n\r\n      /**\r\n       * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\r\n       * @param {String} color Color value\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setColor: function(color) {\r\n        this.set('fill', color);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets \"angle\" of an instance with centered rotation\r\n       * @param {Number} angle Angle value (in degrees)\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      rotate: function(angle) {\r\n        var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\r\n\r\n        if (shouldCenterOrigin) {\r\n          this._setOriginToCenter();\r\n        }\r\n\r\n        this.set('angle', angle);\r\n\r\n        if (shouldCenterOrigin) {\r\n          this._resetOrigin();\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally on canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      centerH: function () {\r\n        this.canvas && this.canvas.centerObjectH(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object horizontally on current viewport of canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterH: function () {\r\n        this.canvas && this.canvas.viewportCenterObjectH(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically on canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      centerV: function () {\r\n        this.canvas && this.canvas.centerObjectV(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically on current viewport of canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenterV: function () {\r\n        this.canvas && this.canvas.viewportCenterObjectV(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object vertically and horizontally on canvas to which is was added last\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      center: function () {\r\n        this.canvas && this.canvas.centerObject(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Centers object on current viewport of canvas to which it was added last.\r\n       * You might need to call `setCoords` on an object after centering, to update controls area.\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      viewportCenter: function () {\r\n        this.canvas && this.canvas.viewportCenterObject(this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of a pointer relative to an object\r\n       * @param {Event} e Event to operate upon\r\n       * @param {Object} [pointer] Pointer to operate upon (instead of event)\r\n       * @return {Object} Coordinates of a pointer (x, y)\r\n       */\r\n      getLocalPointer: function(e, pointer) {\r\n        pointer = pointer || this.canvas.getPointer(e);\r\n        var pClicked = new fabric.Point(pointer.x, pointer.y),\r\n            objectLeftTop = this._getLeftTopCoords();\r\n        if (this.angle) {\r\n          pClicked = fabric.util.rotatePoint(\r\n            pClicked, objectLeftTop, degreesToRadians(-this.angle));\r\n        }\r\n        return {\r\n          x: pClicked.x - objectLeftTop.x,\r\n          y: pClicked.y - objectLeftTop.y\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Sets canvas globalCompositeOperation for specific object\r\n       * custom composition operation for the particular object can be specifed using globalCompositeOperation property\r\n       * @param {CanvasRenderingContext2D} ctx Rendering canvas context\r\n       */\r\n      _setupCompositeOperation: function (ctx) {\r\n        if (this.globalCompositeOperation) {\r\n          ctx.globalCompositeOperation = this.globalCompositeOperation;\r\n        }\r\n      }\r\n    });\r\n\r\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\r\n\r\n    extend(fabric.Object.prototype, fabric.Observable);\r\n\r\n    /**\r\n     * Defines the number of fraction digits to use when serializing object values.\r\n     * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\r\n     * @static\r\n     * @memberOf fabric.Object\r\n     * @constant\r\n     * @type Number\r\n     */\r\n    fabric.Object.NUM_FRACTION_DIGITS = 2;\r\n\r\n    fabric.Object._fromObject = function(className, object, callback, extraParam) {\r\n      var klass = fabric[className];\r\n      object = clone(object, true);\r\n      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\r\n        if (typeof patterns[0] !== 'undefined') {\r\n          object.fill = patterns[0];\r\n        }\r\n        if (typeof patterns[1] !== 'undefined') {\r\n          object.stroke = patterns[1];\r\n        }\r\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\r\n        callback && callback(instance);\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Unique id used internally when creating SVG elements\r\n     * @static\r\n     * @memberOf fabric.Object\r\n     * @type Number\r\n     */\r\n    fabric.Object.__uid = 0;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    var degreesToRadians = fabric.util.degreesToRadians,\r\n        originXOffset = {\r\n          left: -0.5,\r\n          center: 0,\r\n          right: 0.5\r\n        },\r\n        originYOffset = {\r\n          top: -0.5,\r\n          center: 0,\r\n          bottom: 0.5\r\n        };\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Translates the coordinates from a set of origin to another (based on the object's dimensions)\r\n       * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n       * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\r\n        var x = point.x,\r\n            y = point.y,\r\n            offsetX, offsetY, dim;\r\n\r\n        if (typeof fromOriginX === 'string') {\r\n          fromOriginX = originXOffset[fromOriginX];\r\n        }\r\n        else {\r\n          fromOriginX -= 0.5;\r\n        }\r\n\r\n        if (typeof toOriginX === 'string') {\r\n          toOriginX = originXOffset[toOriginX];\r\n        }\r\n        else {\r\n          toOriginX -= 0.5;\r\n        }\r\n\r\n        offsetX = toOriginX - fromOriginX;\r\n\r\n        if (typeof fromOriginY === 'string') {\r\n          fromOriginY = originYOffset[fromOriginY];\r\n        }\r\n        else {\r\n          fromOriginY -= 0.5;\r\n        }\r\n\r\n        if (typeof toOriginY === 'string') {\r\n          toOriginY = originYOffset[toOriginY];\r\n        }\r\n        else {\r\n          toOriginY -= 0.5;\r\n        }\r\n\r\n        offsetY = toOriginY - fromOriginY;\r\n\r\n        if (offsetX || offsetY) {\r\n          dim = this._getTransformedDimensions();\r\n          x = point.x + offsetX * dim.x;\r\n          y = point.y + offsetY * dim.y;\r\n        }\r\n\r\n        return new fabric.Point(x, y);\r\n      },\r\n\r\n      /**\r\n       * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\r\n       * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      translateToCenterPoint: function(point, originX, originY) {\r\n        var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\r\n        if (this.angle) {\r\n          return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\r\n        }\r\n        return p;\r\n      },\r\n\r\n      /**\r\n       * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\r\n       * @param {fabric.Point} center The point which corresponds to center of the object\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      translateToOriginPoint: function(center, originX, originY) {\r\n        var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\r\n        if (this.angle) {\r\n          return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\r\n        }\r\n        return p;\r\n      },\r\n\r\n      /**\r\n       * Returns the real center coordinates of the object\r\n       * @return {fabric.Point}\r\n       */\r\n      getCenterPoint: function() {\r\n        var leftTop = new fabric.Point(this.left, this.top);\r\n        return this.translateToCenterPoint(leftTop, this.originX, this.originY);\r\n      },\r\n\r\n      /**\r\n       * Returns the coordinates of the object based on center coordinates\r\n       * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n       * @return {fabric.Point}\r\n       */\r\n      // getOriginPoint: function(center) {\r\n      //   return this.translateToOriginPoint(center, this.originX, this.originY);\r\n      // },\r\n\r\n      /**\r\n       * Returns the coordinates of the object as if it has a different origin\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      getPointByOrigin: function(originX, originY) {\r\n        var center = this.getCenterPoint();\r\n        return this.translateToOriginPoint(center, originX, originY);\r\n      },\r\n\r\n      /**\r\n       * Returns the point in local coordinates\r\n       * @param {fabric.Point} point The point relative to the global coordinate system\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {fabric.Point}\r\n       */\r\n      toLocalPoint: function(point, originX, originY) {\r\n        var center = this.getCenterPoint(),\r\n            p, p2;\r\n\r\n        if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\r\n          p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\r\n        }\r\n        else {\r\n          p = new fabric.Point(this.left, this.top);\r\n        }\r\n\r\n        p2 = new fabric.Point(point.x, point.y);\r\n        if (this.angle) {\r\n          p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\r\n        }\r\n        return p2.subtractEquals(p);\r\n      },\r\n\r\n      /**\r\n       * Returns the point in global coordinates\r\n       * @param {fabric.Point} The point relative to the local coordinate system\r\n       * @return {fabric.Point}\r\n       */\r\n      // toGlobalPoint: function(point) {\r\n      //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\r\n      // },\r\n\r\n      /**\r\n       * Sets the position of the object taking into consideration the object's origin\r\n       * @param {fabric.Point} pos The new position of the object\r\n       * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n       * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n       * @return {void}\r\n       */\r\n      setPositionByOrigin: function(pos, originX, originY) {\r\n        var center = this.translateToCenterPoint(pos, originX, originY),\r\n            position = this.translateToOriginPoint(center, this.originX, this.originY);\r\n        this.set('left', position.x);\r\n        this.set('top', position.y);\r\n      },\r\n\r\n      /**\r\n       * @param {String} to One of 'left', 'center', 'right'\r\n       */\r\n      adjustPosition: function(to) {\r\n        var angle = degreesToRadians(this.angle),\r\n            hypotFull = this.getScaledWidth(),\r\n            xFull = fabric.util.cos(angle) * hypotFull,\r\n            yFull = fabric.util.sin(angle) * hypotFull,\r\n            offsetFrom, offsetTo;\r\n\r\n        //TODO: this function does not consider mixed situation like top, center.\r\n        if (typeof this.originX === 'string') {\r\n          offsetFrom = originXOffset[this.originX];\r\n        }\r\n        else {\r\n          offsetFrom = this.originX - 0.5;\r\n        }\r\n        if (typeof to === 'string') {\r\n          offsetTo = originXOffset[to];\r\n        }\r\n        else {\r\n          offsetTo = to - 0.5;\r\n        }\r\n        this.left += xFull * (offsetTo - offsetFrom);\r\n        this.top += yFull * (offsetTo - offsetFrom);\r\n        this.setCoords();\r\n        this.originX = to;\r\n      },\r\n\r\n      /**\r\n       * Sets the origin/position of the object to it's center point\r\n       * @private\r\n       * @return {void}\r\n       */\r\n      _setOriginToCenter: function() {\r\n        this._originalOriginX = this.originX;\r\n        this._originalOriginY = this.originY;\r\n\r\n        var center = this.getCenterPoint();\r\n\r\n        this.originX = 'center';\r\n        this.originY = 'center';\r\n\r\n        this.left = center.x;\r\n        this.top = center.y;\r\n      },\r\n\r\n      /**\r\n       * Resets the origin/position of the object to it's original origin\r\n       * @private\r\n       * @return {void}\r\n       */\r\n      _resetOrigin: function() {\r\n        var originPoint = this.translateToOriginPoint(\r\n          this.getCenterPoint(),\r\n          this._originalOriginX,\r\n          this._originalOriginY);\r\n\r\n        this.originX = this._originalOriginX;\r\n        this.originY = this._originalOriginY;\r\n\r\n        this.left = originPoint.x;\r\n        this.top = originPoint.y;\r\n\r\n        this._originalOriginX = null;\r\n        this._originalOriginY = null;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getLeftTopCoords: function() {\r\n        return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\r\n      },\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function getCoords(coords) {\r\n      return [\r\n        new fabric.Point(coords.tl.x, coords.tl.y),\r\n        new fabric.Point(coords.tr.x, coords.tr.y),\r\n        new fabric.Point(coords.br.x, coords.br.y),\r\n        new fabric.Point(coords.bl.x, coords.bl.y)\r\n      ];\r\n    }\r\n\r\n    var degreesToRadians = fabric.util.degreesToRadians,\r\n        multiplyMatrices = fabric.util.multiplyTransformMatrices,\r\n        transformPoint = fabric.util.transformPoint;\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Describe object's corner position in canvas element coordinates.\r\n       * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\r\n       * each property is an object with x, y and corner.\r\n       * The `corner` property contains in a similar manner the 4 points of the\r\n       * interactive area of the corner.\r\n       * The coordinates depends from this properties: width, height, scaleX, scaleY\r\n       * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\r\n       * The coordinates get updated with @method setCoords.\r\n       * You can calculate them without updating with @method calcCoords;\r\n       * @memberOf fabric.Object.prototype\r\n       */\r\n      oCoords: null,\r\n\r\n      /**\r\n       * Describe object's corner position in canvas object absolute coordinates\r\n       * properties are tl,tr,bl,br and describe the four main corner.\r\n       * each property is an object with x, y, instance of Fabric.Point.\r\n       * The coordinates depends from this properties: width, height, scaleX, scaleY\r\n       * skewX, skewY, angle, strokeWidth, top, left.\r\n       * Those coordinates are usefull to understand where an object is. They get updated\r\n       * with oCoords but they do not need to be updated when zoom or panning change.\r\n       * The coordinates get updated with @method setCoords.\r\n       * You can calculate them without updating with @method calcCoords(true);\r\n       * @memberOf fabric.Object.prototype\r\n       */\r\n      aCoords: null,\r\n\r\n      /**\r\n       * storage for object transform matrix\r\n       */\r\n      ownMatrixCache: null,\r\n\r\n      /**\r\n       * storage for object full transform matrix\r\n       */\r\n      matrixCache: null,\r\n\r\n      /**\r\n       * return correct set of coordinates for intersection\r\n       */\r\n      getCoords: function(absolute, calculate) {\r\n        if (!this.oCoords) {\r\n          this.setCoords();\r\n        }\r\n        var coords = absolute ? this.aCoords : this.oCoords;\r\n        return getCoords(calculate ? this.calcCoords(absolute) : coords);\r\n      },\r\n\r\n      /**\r\n       * Checks if object intersects with an area formed by 2 points\r\n       * @param {Object} pointTL top-left point of area\r\n       * @param {Object} pointBR bottom-right point of area\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object intersects with an area formed by 2 points\r\n       */\r\n      intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\r\n        var coords = this.getCoords(absolute, calculate),\r\n            intersection = fabric.Intersection.intersectPolygonRectangle(\r\n              coords,\r\n              pointTL,\r\n              pointBR\r\n            );\r\n        return intersection.status === 'Intersection';\r\n      },\r\n\r\n      /**\r\n       * Checks if object intersects with another object\r\n       * @param {Object} other Object to test\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object intersects with another object\r\n       */\r\n      intersectsWithObject: function(other, absolute, calculate) {\r\n        var intersection = fabric.Intersection.intersectPolygonPolygon(\r\n          this.getCoords(absolute, calculate),\r\n          other.getCoords(absolute, calculate)\r\n        );\r\n\r\n        return intersection.status === 'Intersection'\r\n          || other.isContainedWithinObject(this, absolute, calculate)\r\n          || this.isContainedWithinObject(other, absolute, calculate);\r\n      },\r\n\r\n      /**\r\n       * Checks if object is fully contained within area of another object\r\n       * @param {Object} other Object to test\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is fully contained within area of another object\r\n       */\r\n      isContainedWithinObject: function(other, absolute, calculate) {\r\n        var points = this.getCoords(absolute, calculate),\r\n            i = 0, lines = other._getImageLines(\r\n              calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\r\n            );\r\n        for (; i < 4; i++) {\r\n          if (!other.containsPoint(points[i], lines)) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Checks if object is fully contained within area formed by 2 points\r\n       * @param {Object} pointTL top-left point of area\r\n       * @param {Object} pointBR bottom-right point of area\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is fully contained within area formed by 2 points\r\n       */\r\n      isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\r\n        var boundingRect = this.getBoundingRect(absolute, calculate);\r\n\r\n        return (\r\n          boundingRect.left >= pointTL.x &&\r\n          boundingRect.left + boundingRect.width <= pointBR.x &&\r\n          boundingRect.top >= pointTL.y &&\r\n          boundingRect.top + boundingRect.height <= pointBR.y\r\n        );\r\n      },\r\n\r\n      /**\r\n       * Checks if point is inside the object\r\n       * @param {fabric.Point} point Point to check against\r\n       * @param {Object} [lines] object returned from @method _getImageLines\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if point is inside the object\r\n       */\r\n      containsPoint: function(point, lines, absolute, calculate) {\r\n        var lines = lines || this._getImageLines(\r\n              calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\r\n            ),\r\n            xPoints = this._findCrossPoints(point, lines);\r\n\r\n        // if xPoints is odd then point is inside the object\r\n        return (xPoints !== 0 && xPoints % 2 === 1);\r\n      },\r\n\r\n      /**\r\n       * Checks if object is contained within the canvas with current viewportTransform\r\n       * the check is done stopping at first point that appears on screen\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is fully or partially contained within canvas\r\n       */\r\n      isOnScreen: function(calculate) {\r\n        if (!this.canvas) {\r\n          return false;\r\n        }\r\n        var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\r\n        var points = this.getCoords(true, calculate), point;\r\n        for (var i = 0; i < 4; i++) {\r\n          point = points[i];\r\n          if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\r\n            return true;\r\n          }\r\n        }\r\n        // no points on screen, check intersection with absolute coordinates\r\n        if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\r\n          return true;\r\n        }\r\n        return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\r\n      },\r\n\r\n      /**\r\n       * Checks if the object contains the midpoint between canvas extremities\r\n       * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\r\n       * @private\r\n       * @param {Fabric.Point} pointTL Top Left point\r\n       * @param {Fabric.Point} pointBR Top Right point\r\n       * @param {Boolean} calculate use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if the objects containe the point\r\n       */\r\n      _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\r\n        // worst case scenario the object is so big that contains the screen\r\n        var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\r\n        if (this.containsPoint(centerPoint, null, true, calculate)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Checks if object is partially contained within the canvas with current viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n       * @return {Boolean} true if object is partially contained within canvas\r\n       */\r\n      isPartiallyOnScreen: function(calculate) {\r\n        if (!this.canvas) {\r\n          return false;\r\n        }\r\n        var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\r\n        if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\r\n          return true;\r\n        }\r\n        return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\r\n      },\r\n\r\n      /**\r\n       * Method that returns an object with the object edges in it, given the coordinates of the corners\r\n       * @private\r\n       * @param {Object} oCoords Coordinates of the object corners\r\n       */\r\n      _getImageLines: function(oCoords) {\r\n        return {\r\n          topline: {\r\n            o: oCoords.tl,\r\n            d: oCoords.tr\r\n          },\r\n          rightline: {\r\n            o: oCoords.tr,\r\n            d: oCoords.br\r\n          },\r\n          bottomline: {\r\n            o: oCoords.br,\r\n            d: oCoords.bl\r\n          },\r\n          leftline: {\r\n            o: oCoords.bl,\r\n            d: oCoords.tl\r\n          }\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Helper method to determine how many cross points are between the 4 object edges\r\n       * and the horizontal line determined by a point on canvas\r\n       * @private\r\n       * @param {fabric.Point} point Point to check\r\n       * @param {Object} lines Coordinates of the object being evaluated\r\n       */\r\n      // remove yi, not used but left code here just in case.\r\n      _findCrossPoints: function(point, lines) {\r\n        var b1, b2, a1, a2, xi, // yi,\r\n            xcount = 0,\r\n            iLine;\r\n\r\n        for (var lineKey in lines) {\r\n          iLine = lines[lineKey];\r\n          // optimisation 1: line below point. no cross\r\n          if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\r\n            continue;\r\n          }\r\n          // optimisation 2: line above point. no cross\r\n          if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\r\n            continue;\r\n          }\r\n          // optimisation 3: vertical line case\r\n          if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\r\n            xi = iLine.o.x;\r\n            // yi = point.y;\r\n          }\r\n          // calculate the intersection point\r\n          else {\r\n            b1 = 0;\r\n            b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\r\n            a1 = point.y - b1 * point.x;\r\n            a2 = iLine.o.y - b2 * iLine.o.x;\r\n\r\n            xi = -(a1 - a2) / (b1 - b2);\r\n            // yi = a1 + b1 * xi;\r\n          }\r\n          // dont count xi < point.x cases\r\n          if (xi >= point.x) {\r\n            xcount += 1;\r\n          }\r\n          // optimisation 4: specific for square images\r\n          if (xcount === 2) {\r\n            break;\r\n          }\r\n        }\r\n        return xcount;\r\n      },\r\n\r\n      /**\r\n       * Returns coordinates of object's bounding rectangle (left, top, width, height)\r\n       * the box is intented as aligned to axis of canvas.\r\n       * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n       * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\r\n       * @return {Object} Object with left, top, width, height properties\r\n       */\r\n      getBoundingRect: function(absolute, calculate) {\r\n        var coords = this.getCoords(absolute, calculate);\r\n        return fabric.util.makeBoundingBoxFromPoints(coords);\r\n      },\r\n\r\n      /**\r\n       * Returns width of an object bounding box counting transformations\r\n       * before 2.0 it was named getWidth();\r\n       * @return {Number} width value\r\n       */\r\n      getScaledWidth: function() {\r\n        return this._getTransformedDimensions().x;\r\n      },\r\n\r\n      /**\r\n       * Returns height of an object bounding box counting transformations\r\n       * before 2.0 it was named getHeight();\r\n       * @return {Number} height value\r\n       */\r\n      getScaledHeight: function() {\r\n        return this._getTransformedDimensions().y;\r\n      },\r\n\r\n      /**\r\n       * Makes sure the scale is valid and modifies it if necessary\r\n       * @private\r\n       * @param {Number} value\r\n       * @return {Number}\r\n       */\r\n      _constrainScale: function(value) {\r\n        if (Math.abs(value) < this.minScaleLimit) {\r\n          if (value < 0) {\r\n            return -this.minScaleLimit;\r\n          }\r\n          else {\r\n            return this.minScaleLimit;\r\n          }\r\n        }\r\n        else if (value === 0) {\r\n          return 0.0001;\r\n        }\r\n        return value;\r\n      },\r\n\r\n      /**\r\n       * Scales an object (equally by x and y)\r\n       * @param {Number} value Scale factor\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      scale: function(value) {\r\n        this._set('scaleX', value);\r\n        this._set('scaleY', value);\r\n        return this.setCoords();\r\n      },\r\n\r\n      /**\r\n       * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\r\n       * @param {Number} value New width value\r\n       * @param {Boolean} absolute ignore viewport\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      scaleToWidth: function(value, absolute) {\r\n        // adjust to bounding rect factor so that rotated shapes would fit as well\r\n        var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\r\n        return this.scale(value / this.width / boundingRectFactor);\r\n      },\r\n\r\n      /**\r\n       * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\r\n       * @param {Number} value New height value\r\n       * @param {Boolean} absolute ignore viewport\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      scaleToHeight: function(value, absolute) {\r\n        // adjust to bounding rect factor so that rotated shapes would fit as well\r\n        var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\r\n        return this.scale(value / this.height / boundingRectFactor);\r\n      },\r\n\r\n      /**\r\n       * Calculate and returns the .coords of an object.\r\n       * @return {Object} Object with tl, tr, br, bl ....\r\n       * @chainable\r\n       */\r\n      calcCoords: function(absolute) {\r\n        var rotateMatrix = this._calcRotateMatrix(),\r\n            translateMatrix = this._calcTranslateMatrix(),\r\n            startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\r\n            vpt = this.getViewportTransform(),\r\n            finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\r\n            dim = this._getTransformedDimensions(),\r\n            w = dim.x / 2, h = dim.y / 2,\r\n            tl = transformPoint({ x: -w, y: -h }, finalMatrix),\r\n            tr = transformPoint({ x: w, y: -h }, finalMatrix),\r\n            bl = transformPoint({ x: -w, y: h }, finalMatrix),\r\n            br = transformPoint({ x: w, y: h }, finalMatrix);\r\n        if (!absolute) {\r\n          var padding = this.padding, angle = degreesToRadians(this.angle),\r\n              cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\r\n              cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\r\n              cosPMinusSinP = cosP - sinP;\r\n          if (padding) {\r\n            tl.x -= cosPMinusSinP;\r\n            tl.y -= cosPSinP;\r\n            tr.x += cosPSinP;\r\n            tr.y -= cosPMinusSinP;\r\n            bl.x -= cosPSinP;\r\n            bl.y += cosPMinusSinP;\r\n            br.x += cosPMinusSinP;\r\n            br.y += cosPSinP;\r\n          }\r\n          var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\r\n              mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\r\n              mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\r\n              mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\r\n              mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\r\n        }\r\n\r\n        // if (!absolute) {\r\n        //   var canvas = this.canvas;\r\n        //   setTimeout(function() {\r\n        //     canvas.contextTop.clearRect(0, 0, 700, 700);\r\n        //     canvas.contextTop.fillStyle = 'green';\r\n        //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\r\n        //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\r\n        //   }, 50);\r\n        // }\r\n\r\n        var coords = {\r\n          // corners\r\n          tl: tl, tr: tr, br: br, bl: bl,\r\n        };\r\n        if (!absolute) {\r\n          // middle\r\n          coords.ml = ml;\r\n          coords.mt = mt;\r\n          coords.mr = mr;\r\n          coords.mb = mb;\r\n          // rotating point\r\n          coords.mtr = mtr;\r\n        }\r\n        return coords;\r\n      },\r\n\r\n      /**\r\n       * Sets corner position coordinates based on current angle, width and height.\r\n       * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\r\n       * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\r\n       * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setCoords: function(ignoreZoom, skipAbsolute) {\r\n        this.oCoords = this.calcCoords(ignoreZoom);\r\n        if (!skipAbsolute) {\r\n          this.aCoords = this.calcCoords(true);\r\n        }\r\n\r\n        // set coordinates of the draggable boxes in the corners used to scale/rotate the image\r\n        ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * calculate rotation matrix of an object\r\n       * @return {Array} rotation matrix for the object\r\n       */\r\n      _calcRotateMatrix: function() {\r\n        if (this.angle) {\r\n          var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\r\n          return [cos, sin, -sin, cos, 0, 0];\r\n        }\r\n        return fabric.iMatrix.concat();\r\n      },\r\n\r\n      /**\r\n       * calculate the translation matrix for an object transform\r\n       * @return {Array} rotation matrix for the object\r\n       */\r\n      _calcTranslateMatrix: function() {\r\n        var center = this.getCenterPoint();\r\n        return [1, 0, 0, 1, center.x, center.y];\r\n      },\r\n\r\n      transformMatrixKey: function(skipGroup) {\r\n        var sep = '_', prefix = '';\r\n        if (!skipGroup && this.group) {\r\n          prefix = this.group.transformMatrixKey(skipGroup) + sep;\r\n        };\r\n        return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\r\n          sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\r\n          sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\r\n      },\r\n\r\n      /**\r\n       * calculate trasform Matrix that represent current transformation from\r\n       * object properties.\r\n       * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\r\n       * @return {Array} matrix Transform Matrix for the object\r\n       */\r\n      calcTransformMatrix: function(skipGroup) {\r\n        if (skipGroup) {\r\n          return this.calcOwnMatrix();\r\n        }\r\n        var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\r\n        if (cache.key === key) {\r\n          return cache.value;\r\n        }\r\n        var matrix = this.calcOwnMatrix();\r\n        if (this.group) {\r\n          matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\r\n        }\r\n        cache.key = key;\r\n        cache.value = matrix;\r\n        return matrix;\r\n      },\r\n\r\n      calcOwnMatrix: function() {\r\n        var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\r\n        if (cache.key === key) {\r\n          return cache.value;\r\n        }\r\n        var matrix = this._calcTranslateMatrix(),\r\n            rotateMatrix,\r\n            dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\r\n        if (this.angle) {\r\n          rotateMatrix = this._calcRotateMatrix();\r\n          matrix = multiplyMatrices(matrix, rotateMatrix);\r\n        }\r\n        matrix = multiplyMatrices(matrix, dimensionMatrix);\r\n        cache.key = key;\r\n        cache.value = matrix;\r\n        return matrix;\r\n      },\r\n\r\n      _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\r\n        var skewMatrix,\r\n            scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\r\n            scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\r\n            scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\r\n        if (skewX) {\r\n          skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\r\n          scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\r\n        }\r\n        if (skewY) {\r\n          skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\r\n          scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\r\n        }\r\n        return scaleMatrix;\r\n      },\r\n\r\n\r\n      /*\r\n       * Calculate object dimensions from its properties\r\n       * @private\r\n       * @return {Object} .x width dimension\r\n       * @return {Object} .y height dimension\r\n       */\r\n      _getNonTransformedDimensions: function() {\r\n        var strokeWidth = this.strokeWidth,\r\n            w = this.width + strokeWidth,\r\n            h = this.height + strokeWidth;\r\n        return { x: w, y: h };\r\n      },\r\n\r\n      /*\r\n       * Calculate object bounding boxdimensions from its properties scale, skew.\r\n       * @private\r\n       * @return {Object} .x width dimension\r\n       * @return {Object} .y height dimension\r\n       */\r\n      _getTransformedDimensions: function(skewX, skewY) {\r\n        if (typeof skewX === 'undefined') {\r\n          skewX = this.skewX;\r\n        }\r\n        if (typeof skewY === 'undefined') {\r\n          skewY = this.skewY;\r\n        }\r\n        var dimensions = this._getNonTransformedDimensions();\r\n        if (skewX === 0 && skewY === 0) {\r\n          return { x: dimensions.x * this.scaleX, y: dimensions.y * this.scaleY };\r\n        }\r\n        var dimX = dimensions.x / 2, dimY = dimensions.y / 2,\r\n            points = [\r\n              {\r\n                x: -dimX,\r\n                y: -dimY\r\n              },\r\n              {\r\n                x: dimX,\r\n                y: -dimY\r\n              },\r\n              {\r\n                x: -dimX,\r\n                y: dimY\r\n              },\r\n              {\r\n                x: dimX,\r\n                y: dimY\r\n              }],\r\n            i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\r\n            bbox;\r\n        for (i = 0; i < points.length; i++) {\r\n          points[i] = fabric.util.transformPoint(points[i], transformMatrix);\r\n        }\r\n        bbox = fabric.util.makeBoundingBoxFromPoints(points);\r\n        return { x: bbox.width, y: bbox.height };\r\n      },\r\n\r\n      /*\r\n       * Calculate object dimensions for controls. include padding and canvas zoom\r\n       * private\r\n       */\r\n      _calculateCurrentDimensions: function()  {\r\n        var vpt = this.getViewportTransform(),\r\n            dim = this._getTransformedDimensions(),\r\n            p = fabric.util.transformPoint(dim, vpt, true);\r\n\r\n        return p.scalarAdd(2 * this.padding);\r\n      },\r\n    });\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * Moves an object to the bottom of the stack of drawn objects\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    sendToBack: function() {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\r\n      }\r\n      else {\r\n        this.canvas.sendToBack(this);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object to the top of the stack of drawn objects\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    bringToFront: function() {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\r\n      }\r\n      else {\r\n        this.canvas.bringToFront(this);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object down in stack of drawn objects\r\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    sendBackwards: function(intersecting) {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\r\n      }\r\n      else {\r\n        this.canvas.sendBackwards(this, intersecting);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object up in stack of drawn objects\r\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    bringForward: function(intersecting) {\r\n      if (this.group) {\r\n        fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\r\n      }\r\n      else {\r\n        this.canvas.bringForward(this, intersecting);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object to specified level in stack of drawn objects\r\n     * @param {Number} index New position of object\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    moveTo: function(index) {\r\n      if (this.group && this.group.type !== 'activeSelection') {\r\n        fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\r\n      }\r\n      else {\r\n        this.canvas.moveTo(this, index);\r\n      }\r\n      return this;\r\n    }\r\n  });\r\n\r\n\r\n  /* _TO_SVG_START_ */\r\n  (function() {\r\n    function getSvgColorString(prop, value) {\r\n      if (!value) {\r\n        return prop + ': none; ';\r\n      }\r\n      else if (value.toLive) {\r\n        return prop + ': url(#SVGID_' + value.id + '); ';\r\n      }\r\n      else {\r\n        var color = new fabric.Color(value),\r\n            str = prop + ': ' + color.toRgb() + '; ',\r\n            opacity = color.getAlpha();\r\n        if (opacity !== 1) {\r\n          //change the color in rgb + opacity\r\n          str += prop + '-opacity: ' + opacity.toString() + '; ';\r\n        }\r\n        return str;\r\n      }\r\n    }\r\n\r\n    var toFixed = fabric.util.toFixed;\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n      /**\r\n       * Returns styles-string for svg-export\r\n       * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n       * @return {String}\r\n       */\r\n      getSvgStyles: function(skipShadow) {\r\n\r\n        var fillRule = this.fillRule,\r\n            strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\r\n            strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\r\n            strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\r\n            strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\r\n            strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\r\n            opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\r\n            visibility = this.visible ? '' : ' visibility: hidden;',\r\n            filter = skipShadow ? '' : this.getSvgFilter(),\r\n            fill = getSvgColorString('fill', this.fill),\r\n            stroke = getSvgColorString('stroke', this.stroke);\r\n\r\n        return [\r\n          stroke,\r\n          'stroke-width: ', strokeWidth, '; ',\r\n          'stroke-dasharray: ', strokeDashArray, '; ',\r\n          'stroke-linecap: ', strokeLineCap, '; ',\r\n          'stroke-linejoin: ', strokeLineJoin, '; ',\r\n          'stroke-miterlimit: ', strokeMiterLimit, '; ',\r\n          fill,\r\n          'fill-rule: ', fillRule, '; ',\r\n          'opacity: ', opacity, ';',\r\n          filter,\r\n          visibility\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns styles-string for svg-export\r\n       * @param {Object} style the object from which to retrieve style properties\r\n       * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\r\n       * @return {String}\r\n       */\r\n      getSvgSpanStyles: function(style, useWhiteSpace) {\r\n        var term = '; ';\r\n        var fontFamily = style.fontFamily ?\r\n          'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\r\n            '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\r\n        var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\r\n            fontFamily = fontFamily,\r\n            fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\r\n            fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\r\n            fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\r\n            fill = style.fill ? getSvgColorString('fill', style.fill) : '',\r\n            stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\r\n            textDecoration = this.getSvgTextDecoration(style),\r\n            deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\r\n        if (textDecoration) {\r\n          textDecoration = 'text-decoration: ' + textDecoration + term;\r\n        }\r\n\r\n        return [\r\n          stroke,\r\n          strokeWidth,\r\n          fontFamily,\r\n          fontSize,\r\n          fontStyle,\r\n          fontWeight,\r\n          textDecoration,\r\n          fill,\r\n          deltaY,\r\n          useWhiteSpace ? 'white-space: pre; ' : ''\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns text-decoration property for svg-export\r\n       * @param {Object} style the object from which to retrieve style properties\r\n       * @return {String}\r\n       */\r\n      getSvgTextDecoration: function(style) {\r\n        if ('overline' in style || 'underline' in style || 'linethrough' in style) {\r\n          return (style.overline ? 'overline ' : '') +\r\n            (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\r\n        }\r\n        return '';\r\n      },\r\n\r\n      /**\r\n       * Returns filter for svg shadow\r\n       * @return {String}\r\n       */\r\n      getSvgFilter: function() {\r\n        return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\r\n      },\r\n\r\n      /**\r\n       * Returns id attribute for svg output\r\n       * @return {String}\r\n       */\r\n      getSvgId: function() {\r\n        return this.id ? 'id=\"' + this.id + '\" ' : '';\r\n      },\r\n\r\n      /**\r\n       * Returns transform-string for svg-export\r\n       * @return {String}\r\n       */\r\n      getSvgTransform: function() {\r\n        var angle = this.angle,\r\n            skewX = (this.skewX % 360),\r\n            skewY = (this.skewY % 360),\r\n            center = this.getCenterPoint(),\r\n\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n\r\n            translatePart = 'translate(' +\r\n                              toFixed(center.x, NUM_FRACTION_DIGITS) +\r\n                              ' ' +\r\n                              toFixed(center.y, NUM_FRACTION_DIGITS) +\r\n                            ')',\r\n\r\n            anglePart = angle !== 0\r\n              ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\r\n              : '',\r\n\r\n            scalePart = (this.scaleX === 1 && this.scaleY === 1)\r\n              ? '' :\r\n              (' scale(' +\r\n                toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\r\n                ' ' +\r\n                toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\r\n              ')'),\r\n\r\n            skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\r\n\r\n            skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\r\n\r\n            flipXPart = this.flipX ? ' matrix(-1 0 0 1 0 0) ' : '',\r\n\r\n            flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 0)' : '';\r\n\r\n        return [\r\n          translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\r\n        ].join('');\r\n      },\r\n\r\n      /**\r\n       * Returns transform-string for svg-export from the transform matrix of single elements\r\n       * @return {String}\r\n       */\r\n      getSvgTransformMatrix: function() {\r\n        return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\r\n      },\r\n\r\n      _setSVGBg: function(textBgRects) {\r\n        if (this.backgroundColor) {\r\n          var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n          textBgRects.push(\r\n            '\\t\\t<rect ',\r\n            this._getFillAttributes(this.backgroundColor),\r\n            ' x=\"',\r\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\r\n            '\" y=\"',\r\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\r\n            '\" width=\"',\r\n            toFixed(this.width, NUM_FRACTION_DIGITS),\r\n            '\" height=\"',\r\n            toFixed(this.height, NUM_FRACTION_DIGITS),\r\n            '\"></rect>\\n');\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createBaseSVGMarkup: function() {\r\n        var markup = [];\r\n\r\n        if (this.fill && this.fill.toLive) {\r\n          markup.push(this.fill.toSVG(this, false));\r\n        }\r\n        if (this.stroke && this.stroke.toLive) {\r\n          markup.push(this.stroke.toSVG(this, false));\r\n        }\r\n        if (this.shadow) {\r\n          markup.push(this.shadow.toSVG(this));\r\n        }\r\n        return markup;\r\n      },\r\n\r\n      addPaintOrder: function() {\r\n        return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\r\n      }\r\n    });\r\n  })();\r\n  /* _TO_SVG_END_ */\r\n\r\n\r\n  (function() {\r\n\r\n    var extend = fabric.util.object.extend,\r\n        originalSet = 'stateProperties';\r\n\r\n    /*\r\n      Depends on `stateProperties`\r\n    */\r\n    function saveProps(origin, destination, props) {\r\n      var tmpObj = { }, deep = true;\r\n      props.forEach(function(prop) {\r\n        tmpObj[prop] = origin[prop];\r\n      });\r\n      extend(origin[destination], tmpObj, deep);\r\n    }\r\n\r\n    function _isEqual(origValue, currentValue, firstPass) {\r\n      if (origValue === currentValue) {\r\n        // if the objects are identical, return\r\n        return true;\r\n      }\r\n      else if (Array.isArray(origValue)) {\r\n        if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\r\n          return false;\r\n        }\r\n        for (var i = 0, len = origValue.length; i < len; i++) {\r\n          if (!_isEqual(origValue[i], currentValue[i])) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      else if (origValue && typeof origValue === 'object') {\r\n        var keys = Object.keys(origValue), key;\r\n        if (!currentValue ||\r\n            typeof currentValue !== 'object' ||\r\n            (!firstPass && keys.length !== Object.keys(currentValue).length)\r\n        ) {\r\n          return false;\r\n        }\r\n        for (var i = 0, len = keys.length; i < len; i++) {\r\n          key = keys[i];\r\n          if (!_isEqual(origValue[key], currentValue[key])) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * Returns true if object state (one of its state properties) was changed\r\n       * @param {String} [propertySet] optional name for the set of property we want to save\r\n       * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\r\n       */\r\n      hasStateChanged: function(propertySet) {\r\n        propertySet = propertySet || originalSet;\r\n        var dashedPropertySet = '_' + propertySet;\r\n        if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\r\n          return true;\r\n        }\r\n        return !_isEqual(this[dashedPropertySet], this, true);\r\n      },\r\n\r\n      /**\r\n       * Saves state of an object\r\n       * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      saveState: function(options) {\r\n        var propertySet = options && options.propertySet || originalSet,\r\n            destination = '_' + propertySet;\r\n        if (!this[destination]) {\r\n          return this.setupState(options);\r\n        }\r\n        saveProps(this, destination, this[propertySet]);\r\n        if (options && options.stateProperties) {\r\n          saveProps(this, destination, options.stateProperties);\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Setups state of an object\r\n       * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\r\n       * @return {fabric.Object} thisArg\r\n       */\r\n      setupState: function(options) {\r\n        options = options || { };\r\n        var propertySet = options.propertySet || originalSet;\r\n        options.propertySet = propertySet;\r\n        this['_' + propertySet] = { };\r\n        this.saveState(options);\r\n        return this;\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var degreesToRadians = fabric.util.degreesToRadians;\r\n\r\n    fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n      /**\r\n       * The object interactivity controls.\r\n       * @private\r\n       */\r\n      _controlsVisibility: null,\r\n\r\n      /**\r\n       * Determines which corner has been clicked\r\n       * @private\r\n       * @param {Object} pointer The pointer indicating the mouse position\r\n       * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\r\n       */\r\n      _findTargetCorner: function(pointer) {\r\n        // objects in group, anykind, are not self modificable,\r\n        // must not return an hovered corner.\r\n        if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\r\n          return false;\r\n        }\r\n\r\n        var ex = pointer.x,\r\n            ey = pointer.y,\r\n            xPoints,\r\n            lines;\r\n        this.__corner = 0;\r\n        for (var i in this.oCoords) {\r\n\r\n          if (!this.isControlVisible(i)) {\r\n            continue;\r\n          }\r\n\r\n          if (i === 'mtr' && !this.hasRotatingPoint) {\r\n            continue;\r\n          }\r\n\r\n          if (this.get('lockUniScaling') &&\r\n             (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\r\n            continue;\r\n          }\r\n\r\n          lines = this._getImageLines(this.oCoords[i].corner);\r\n\r\n          // debugging\r\n\r\n          // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\r\n\r\n          // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\r\n\r\n          // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\r\n\r\n          // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\r\n          // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\r\n\r\n          xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\r\n          if (xPoints !== 0 && xPoints % 2 === 1) {\r\n            this.__corner = i;\r\n            return i;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Sets the coordinates of the draggable boxes in the corners of\r\n       * the image used to scale/rotate it.\r\n       * @private\r\n       */\r\n      _setCornerCoords: function() {\r\n        var coords = this.oCoords,\r\n            newTheta = degreesToRadians(45 - this.angle),\r\n            /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\r\n            /* 0.707106 stands for sqrt(2)/2 */\r\n            cornerHypotenuse = this.cornerSize * 0.707106,\r\n            cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\r\n            sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\r\n            x, y;\r\n\r\n        for (var point in coords) {\r\n          x = coords[point].x;\r\n          y = coords[point].y;\r\n          coords[point].corner = {\r\n            tl: {\r\n              x: x - sinHalfOffset,\r\n              y: y - cosHalfOffset\r\n            },\r\n            tr: {\r\n              x: x + cosHalfOffset,\r\n              y: y - sinHalfOffset\r\n            },\r\n            bl: {\r\n              x: x - cosHalfOffset,\r\n              y: y + sinHalfOffset\r\n            },\r\n            br: {\r\n              x: x + sinHalfOffset,\r\n              y: y + cosHalfOffset\r\n            }\r\n          };\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Draws a colored layer behind the object, inside its selection borders.\r\n       * Requires public options: padding, selectionBackgroundColor\r\n       * this function is called when the context is transformed\r\n       * has checks to be skipped when the object is on a staticCanvas\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawSelectionBackground: function(ctx) {\r\n        if (!this.selectionBackgroundColor ||\r\n          (this.canvas && !this.canvas.interactive) ||\r\n          (this.canvas && this.canvas._activeObject !== this)\r\n        ) {\r\n          return this;\r\n        }\r\n        ctx.save();\r\n        var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\r\n            vpt = this.canvas.viewportTransform;\r\n        ctx.translate(center.x, center.y);\r\n        ctx.scale(1 / vpt[0], 1 / vpt[3]);\r\n        ctx.rotate(degreesToRadians(this.angle));\r\n        ctx.fillStyle = this.selectionBackgroundColor;\r\n        ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\r\n        ctx.restore();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Draws borders of an object's bounding box.\r\n       * Requires public properties: width, height\r\n       * Requires public options: padding, borderColor\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @param {Object} styleOverride object to override the object style\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawBorders: function(ctx, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        var wh = this._calculateCurrentDimensions(),\r\n            strokeWidth = 1 / this.borderScaleFactor,\r\n            width = wh.x + strokeWidth,\r\n            height = wh.y + strokeWidth,\r\n            drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\r\n              styleOverride.hasRotatingPoint : this.hasRotatingPoint,\r\n            hasControls = typeof styleOverride.hasControls !== 'undefined' ?\r\n              styleOverride.hasControls : this.hasControls,\r\n            rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\r\n              styleOverride.rotatingPointOffset : this.rotatingPointOffset;\r\n\r\n        ctx.save();\r\n        ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\r\n        this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\r\n\r\n        ctx.strokeRect(\r\n          -width / 2,\r\n          -height / 2,\r\n          width,\r\n          height\r\n        );\r\n\r\n        if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\r\n\r\n          var rotateHeight = -height / 2;\r\n\r\n          ctx.beginPath();\r\n          ctx.moveTo(0, rotateHeight);\r\n          ctx.lineTo(0, rotateHeight - rotatingPointOffset);\r\n          ctx.stroke();\r\n        }\r\n\r\n        ctx.restore();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Draws borders of an object's bounding box when it is inside a group.\r\n       * Requires public properties: width, height\r\n       * Requires public options: padding, borderColor\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @param {object} options object representing current object parameters\r\n       * @param {Object} styleOverride object to override the object style\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawBordersInGroup: function(ctx, options, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        var p = this._getNonTransformedDimensions(),\r\n            matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\r\n            wh = fabric.util.transformPoint(p, matrix),\r\n            strokeWidth = 1 / this.borderScaleFactor,\r\n            width = wh.x + strokeWidth,\r\n            height = wh.y + strokeWidth;\r\n\r\n        ctx.save();\r\n        this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\r\n        ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\r\n\r\n        ctx.strokeRect(\r\n          -width / 2,\r\n          -height / 2,\r\n          width,\r\n          height\r\n        );\r\n\r\n        ctx.restore();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Draws corners of an object's bounding box.\r\n       * Requires public properties: width, height\r\n       * Requires public options: cornerSize, padding\r\n       * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n       * @param {Object} styleOverride object to override the object style\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      drawControls: function(ctx, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        var wh = this._calculateCurrentDimensions(),\r\n            width = wh.x,\r\n            height = wh.y,\r\n            scaleOffset = styleOverride.cornerSize || this.cornerSize,\r\n            left = -(width + scaleOffset) / 2,\r\n            top = -(height + scaleOffset) / 2,\r\n            transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\r\n              styleOverride.transparentCorners : this.transparentCorners,\r\n            hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\r\n              styleOverride.hasRotatingPoint : this.hasRotatingPoint,\r\n            methodName = transparentCorners ? 'stroke' : 'fill';\r\n\r\n        ctx.save();\r\n        ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\r\n        if (!this.transparentCorners) {\r\n          ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\r\n        }\r\n        this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\r\n\r\n        // top-left\r\n        this._drawControl('tl', ctx, methodName,\r\n          left,\r\n          top, styleOverride);\r\n\r\n        // top-right\r\n        this._drawControl('tr', ctx, methodName,\r\n          left + width,\r\n          top, styleOverride);\r\n\r\n        // bottom-left\r\n        this._drawControl('bl', ctx, methodName,\r\n          left,\r\n          top + height, styleOverride);\r\n\r\n        // bottom-right\r\n        this._drawControl('br', ctx, methodName,\r\n          left + width,\r\n          top + height, styleOverride);\r\n\r\n        if (!this.get('lockUniScaling')) {\r\n\r\n          // middle-top\r\n          this._drawControl('mt', ctx, methodName,\r\n            left + width / 2,\r\n            top, styleOverride);\r\n\r\n          // middle-bottom\r\n          this._drawControl('mb', ctx, methodName,\r\n            left + width / 2,\r\n            top + height, styleOverride);\r\n\r\n          // middle-right\r\n          this._drawControl('mr', ctx, methodName,\r\n            left + width,\r\n            top + height / 2, styleOverride);\r\n\r\n          // middle-left\r\n          this._drawControl('ml', ctx, methodName,\r\n            left,\r\n            top + height / 2, styleOverride);\r\n        }\r\n\r\n        // middle-top-rotate\r\n        if (hasRotatingPoint) {\r\n          this._drawControl('mtr', ctx, methodName,\r\n            left + width / 2,\r\n            top - this.rotatingPointOffset, styleOverride);\r\n        }\r\n\r\n        ctx.restore();\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\r\n        styleOverride = styleOverride || {};\r\n        if (!this.isControlVisible(control)) {\r\n          return;\r\n        }\r\n        var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\r\n        switch (styleOverride.cornerStyle || this.cornerStyle) {\r\n          case 'circle':\r\n            ctx.beginPath();\r\n            ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\r\n            ctx[methodName]();\r\n            if (stroke) {\r\n              ctx.stroke();\r\n            }\r\n            break;\r\n          default:\r\n            this.transparentCorners || ctx.clearRect(left, top, size, size);\r\n            ctx[methodName + 'Rect'](left, top, size, size);\r\n            if (stroke) {\r\n              ctx.strokeRect(left, top, size, size);\r\n            }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns true if the specified control is visible, false otherwise.\r\n       * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\r\n       * @returns {Boolean} true if the specified control is visible, false otherwise\r\n       */\r\n      isControlVisible: function(controlName) {\r\n        return this._getControlsVisibility()[controlName];\r\n      },\r\n\r\n      /**\r\n       * Sets the visibility of the specified control.\r\n       * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\r\n       * @param {Boolean} visible true to set the specified control visible, false otherwise\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setControlVisible: function(controlName, visible) {\r\n        this._getControlsVisibility()[controlName] = visible;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Sets the visibility state of object controls.\r\n       * @param {Object} [options] Options object\r\n       * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\r\n       * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\r\n       * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\r\n       * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\r\n       * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\r\n       * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\r\n       * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\r\n       * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\r\n       * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      setControlsVisibility: function(options) {\r\n        options || (options = { });\r\n\r\n        for (var p in options) {\r\n          this.setControlVisible(p, options[p]);\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns the instance of the control visibility set for this object.\r\n       * @private\r\n       * @returns {Object}\r\n       */\r\n      _getControlsVisibility: function() {\r\n        if (!this._controlsVisibility) {\r\n          this._controlsVisibility = {\r\n            tl: true,\r\n            tr: true,\r\n            br: true,\r\n            bl: true,\r\n            ml: true,\r\n            mt: true,\r\n            mr: true,\r\n            mb: true,\r\n            mtr: true\r\n          };\r\n        }\r\n        return this._controlsVisibility;\r\n      },\r\n\r\n      /**\r\n       * This callback function is called every time _discardActiveObject or _setActiveObject\r\n       * try to to deselect this object. If the function returns true, the process is cancelled\r\n       * @param {Object} [options] options sent from the upper functions\r\n       * @param {Event} [options.e] event if the process is generated by an event\r\n       */\r\n      onDeselect: function() {\r\n        // implemented by sub-classes, as needed.\r\n      },\r\n\r\n\r\n      /**\r\n       * This callback function is called every time _discardActiveObject or _setActiveObject\r\n       * try to to select this object. If the function returns true, the process is cancelled\r\n       * @param {Object} [options] options sent from the upper functions\r\n       * @param {Event} [options.e] event if the process is generated by an event\r\n       */\r\n      onSelect: function() {\r\n        // implemented by sub-classes, as needed.\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Animation duration (in ms) for fx* methods\r\n     * @type Number\r\n     * @default\r\n     */\r\n    FX_DURATION: 500,\r\n\r\n    /**\r\n     * Centers object horizontally with animation.\r\n     * @param {fabric.Object} object Object to center\r\n     * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxCenterObjectH: function (object, callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: object.left,\r\n        endValue: this.getCenter().left,\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          object.set('left', value);\r\n          _this.requestRenderAll();\r\n          onChange();\r\n        },\r\n        onComplete: function() {\r\n          object.setCoords();\r\n          onComplete();\r\n        }\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object vertically with animation.\r\n     * @param {fabric.Object} object Object to center\r\n     * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxCenterObjectV: function (object, callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: object.top,\r\n        endValue: this.getCenter().top,\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          object.set('top', value);\r\n          _this.requestRenderAll();\r\n          onChange();\r\n        },\r\n        onComplete: function() {\r\n          object.setCoords();\r\n          onComplete();\r\n        }\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Same as `fabric.Canvas#remove` but animated\r\n     * @param {fabric.Object} object Object to remove\r\n     * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxRemove: function (object, callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: object.opacity,\r\n        endValue: 0,\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          object.set('opacity', value);\r\n          _this.requestRenderAll();\r\n          onChange();\r\n        },\r\n        onComplete: function () {\r\n          _this.remove(object);\r\n          onComplete();\r\n        }\r\n      });\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n    /**\r\n     * Animates object's properties\r\n     * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\r\n     * @param {Number|Object} value Value to animate property to (if string was given first) or options object\r\n     * @return {fabric.Object} thisArg\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\r\n     * @chainable\r\n     *\r\n     * As object — multiple properties\r\n     *\r\n     * object.animate({ left: ..., top: ... });\r\n     * object.animate({ left: ..., top: ... }, { duration: ... });\r\n     *\r\n     * As string — one property\r\n     *\r\n     * object.animate('left', ...);\r\n     * object.animate('left', { duration: ... });\r\n     *\r\n     */\r\n    animate: function() {\r\n      if (arguments[0] && typeof arguments[0] === 'object') {\r\n        var propsToAnimate = [], prop, skipCallbacks;\r\n        for (prop in arguments[0]) {\r\n          propsToAnimate.push(prop);\r\n        }\r\n        for (var i = 0, len = propsToAnimate.length; i < len; i++) {\r\n          prop = propsToAnimate[i];\r\n          skipCallbacks = i !== len - 1;\r\n          this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\r\n        }\r\n      }\r\n      else {\r\n        this._animate.apply(this, arguments);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} property Property to animate\r\n     * @param {String} to Value to animate to\r\n     * @param {Object} [options] Options object\r\n     * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\r\n     */\r\n    _animate: function(property, to, options, skipCallbacks) {\r\n      var _this = this, propPair;\r\n\r\n      to = to.toString();\r\n\r\n      if (!options) {\r\n        options = { };\r\n      }\r\n      else {\r\n        options = fabric.util.object.clone(options);\r\n      }\r\n\r\n      if (~property.indexOf('.')) {\r\n        propPair = property.split('.');\r\n      }\r\n\r\n      var currentValue = propPair\r\n        ? this.get(propPair[0])[propPair[1]]\r\n        : this.get(property);\r\n\r\n      if (!('from' in options)) {\r\n        options.from = currentValue;\r\n      }\r\n\r\n      if (~to.indexOf('=')) {\r\n        to = currentValue + parseFloat(to.replace('=', ''));\r\n      }\r\n      else {\r\n        to = parseFloat(to);\r\n      }\r\n\r\n      fabric.util.animate({\r\n        startValue: options.from,\r\n        endValue: to,\r\n        byValue: options.by,\r\n        easing: options.easing,\r\n        duration: options.duration,\r\n        abort: options.abort && function() {\r\n          return options.abort.call(_this);\r\n        },\r\n        onChange: function(value, valueProgress, timeProgress) {\r\n          if (propPair) {\r\n            _this[propPair[0]][propPair[1]] = value;\r\n          }\r\n          else {\r\n            _this.set(property, value);\r\n          }\r\n          if (skipCallbacks) {\r\n            return;\r\n          }\r\n          options.onChange && options.onChange(value, valueProgress, timeProgress);\r\n        },\r\n        onComplete: function(value, valueProgress, timeProgress) {\r\n          if (skipCallbacks) {\r\n            return;\r\n          }\r\n\r\n          _this.setCoords();\r\n          options.onComplete && options.onComplete(value, valueProgress, timeProgress);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        clone = fabric.util.object.clone,\r\n        coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\r\n        supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\r\n\r\n    if (fabric.Line) {\r\n      fabric.warn('fabric.Line is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Line class\r\n     * @class fabric.Line\r\n     * @extends fabric.Object\r\n     * @see {@link fabric.Line#initialize} for constructor definition\r\n     */\r\n    fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'line',\r\n\r\n      /**\r\n       * x value or first line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      x1: 0,\r\n\r\n      /**\r\n       * y value or first line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      y1: 0,\r\n\r\n      /**\r\n       * x value or second line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      x2: 0,\r\n\r\n      /**\r\n       * y value or second line edge\r\n       * @type Number\r\n       * @default\r\n       */\r\n      y2: 0,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Array} [points] Array of points\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Line} thisArg\r\n       */\r\n      initialize: function(points, options) {\r\n        if (!points) {\r\n          points = [0, 0, 0, 0];\r\n        }\r\n\r\n        this.callSuper('initialize', options);\r\n\r\n        this.set('x1', points[0]);\r\n        this.set('y1', points[1]);\r\n        this.set('x2', points[2]);\r\n        this.set('y2', points[3]);\r\n\r\n        this._setWidthHeight(options);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} [options] Options\r\n       */\r\n      _setWidthHeight: function(options) {\r\n        options || (options = { });\r\n\r\n        this.width = Math.abs(this.x2 - this.x1);\r\n        this.height = Math.abs(this.y2 - this.y1);\r\n\r\n        this.left = 'left' in options\r\n          ? options.left\r\n          : this._getLeftToOriginX();\r\n\r\n        this.top = 'top' in options\r\n          ? options.top\r\n          : this._getTopToOriginY();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       */\r\n      _set: function(key, value) {\r\n        this.callSuper('_set', key, value);\r\n        if (typeof coordProps[key] !== 'undefined') {\r\n          this._setWidthHeight();\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\r\n       */\r\n      _getLeftToOriginX: makeEdgeToOriginGetter(\r\n        { // property names\r\n          origin: 'originX',\r\n          axis1: 'x1',\r\n          axis2: 'x2',\r\n          dimension: 'width'\r\n        },\r\n        { // possible values of origin\r\n          nearest: 'left',\r\n          center: 'center',\r\n          farthest: 'right'\r\n        }\r\n      ),\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\r\n       */\r\n      _getTopToOriginY: makeEdgeToOriginGetter(\r\n        { // property names\r\n          origin: 'originY',\r\n          axis1: 'y1',\r\n          axis2: 'y2',\r\n          dimension: 'height'\r\n        },\r\n        { // possible values of origin\r\n          nearest: 'top',\r\n          center: 'center',\r\n          farthest: 'bottom'\r\n        }\r\n      ),\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        ctx.beginPath();\r\n\r\n        if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\r\n          // move from center (of virtual box) to its left/top corner\r\n          // we can't assume x1, y1 is top left and x2, y2 is bottom right\r\n          var p = this.calcLinePoints();\r\n          ctx.moveTo(p.x1, p.y1);\r\n          ctx.lineTo(p.x2, p.y2);\r\n        }\r\n\r\n        ctx.lineWidth = this.strokeWidth;\r\n\r\n        // TODO: test this\r\n        // make sure setting \"fill\" changes color of a line\r\n        // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\r\n        var origStrokeStyle = ctx.strokeStyle;\r\n        ctx.strokeStyle = this.stroke || ctx.fillStyle;\r\n        this.stroke && this._renderStroke(ctx);\r\n        ctx.strokeStyle = origStrokeStyle;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var p = this.calcLinePoints();\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /**\r\n       * This function is an helper for svg import. it returns the center of the object in the svg\r\n       * untransformed coordinates\r\n       * @private\r\n       * @return {Object} center point from element coordinates\r\n       */\r\n      _findCenterFromElement: function() {\r\n        return {\r\n          x: (this.x1 + this.x2) / 2,\r\n          y: (this.y1 + this.y2) / 2,\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @methd toObject\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\r\n      },\r\n\r\n      /*\r\n       * Calculate object dimensions from its properties\r\n       * @private\r\n       */\r\n      _getNonTransformedDimensions: function() {\r\n        var dim = this.callSuper('_getNonTransformedDimensions');\r\n        if (this.strokeLineCap === 'butt') {\r\n          if (this.width === 0) {\r\n            dim.y -= this.strokeWidth;\r\n          }\r\n          if (this.height === 0) {\r\n            dim.x -= this.strokeWidth;\r\n          }\r\n        }\r\n        return dim;\r\n      },\r\n\r\n      /**\r\n       * Recalculates line points given width and height\r\n       * @private\r\n       */\r\n      calcLinePoints: function() {\r\n        var xMult = this.x1 <= this.x2 ? -1 : 1,\r\n            yMult = this.y1 <= this.y2 ? -1 : 1,\r\n            x1 = (xMult * this.width * 0.5),\r\n            y1 = (yMult * this.height * 0.5),\r\n            x2 = (xMult * this.width * -0.5),\r\n            y2 = (yMult * this.height * -0.5);\r\n\r\n        return {\r\n          x1: x1,\r\n          x2: x2,\r\n          y1: y1,\r\n          y2: y2\r\n        };\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(),\r\n            p = this.calcLinePoints();\r\n        markup.push(\r\n          '<line ', this.getSvgId(),\r\n          'x1=\"', p.x1,\r\n          '\" y1=\"', p.y1,\r\n          '\" x2=\"', p.x2,\r\n          '\" y2=\"', p.y2,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(),\r\n          this.getSvgTransformMatrix(),\r\n          '\"/>\\n'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Line\r\n     * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\r\n     */\r\n    fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\r\n\r\n    /**\r\n     * Returns fabric.Line instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Line\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} [callback] callback function invoked after parsing\r\n     */\r\n    fabric.Line.fromElement = function(element, callback, options) {\r\n      options = options || { };\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\r\n          points = [\r\n            parsedAttributes.x1 || 0,\r\n            parsedAttributes.y1 || 0,\r\n            parsedAttributes.x2 || 0,\r\n            parsedAttributes.y2 || 0\r\n          ];\r\n      callback(new fabric.Line(points, extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Line instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Line\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     */\r\n    fabric.Line.fromObject = function(object, callback) {\r\n      function _callback(instance) {\r\n        delete instance.points;\r\n        callback && callback(instance);\r\n      };\r\n      var options = clone(object, true);\r\n      options.points = [object.x1, object.y1, object.x2, object.y2];\r\n      fabric.Object._fromObject('Line', options, _callback, 'points');\r\n    };\r\n\r\n    /**\r\n     * Produces a function that calculates distance from canvas edge to Line origin.\r\n     */\r\n    function makeEdgeToOriginGetter(propertyNames, originValues) {\r\n      var origin = propertyNames.origin,\r\n          axis1 = propertyNames.axis1,\r\n          axis2 = propertyNames.axis2,\r\n          dimension = propertyNames.dimension,\r\n          nearest = originValues.nearest,\r\n          center = originValues.center,\r\n          farthest = originValues.farthest;\r\n\r\n      return function() {\r\n        switch (this.get(origin)) {\r\n          case nearest:\r\n            return Math.min(this.get(axis1), this.get(axis2));\r\n          case center:\r\n            return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\r\n          case farthest:\r\n            return Math.max(this.get(axis1), this.get(axis2));\r\n        }\r\n      };\r\n\r\n    }\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        pi = Math.PI;\r\n\r\n    if (fabric.Circle) {\r\n      fabric.warn('fabric.Circle is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Circle class\r\n     * @class fabric.Circle\r\n     * @extends fabric.Object\r\n     * @see {@link fabric.Circle#initialize} for constructor definition\r\n     */\r\n    fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'circle',\r\n\r\n      /**\r\n       * Radius of this circle\r\n       * @type Number\r\n       * @default\r\n       */\r\n      radius: 0,\r\n\r\n      /**\r\n       * Start angle of the circle, moving clockwise\r\n       * deprectated type, this should be in degree, this was an oversight.\r\n       * probably will change to degrees in next major version\r\n       * @type Number\r\n       * @default 0\r\n       */\r\n      startAngle: 0,\r\n\r\n      /**\r\n       * End angle of the circle\r\n       * deprectated type, this should be in degree, this was an oversight.\r\n       * probably will change to degrees in next major version\r\n       * @type Number\r\n       * @default 2Pi\r\n       */\r\n      endAngle: pi * 2,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       * @return {fabric.Circle} thisArg\r\n       */\r\n      _set: function(key, value) {\r\n        this.callSuper('_set', key, value);\r\n\r\n        if (key === 'radius') {\r\n          this.setRadius(value);\r\n        }\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\r\n            angle = (this.endAngle - this.startAngle) % ( 2 * pi);\r\n\r\n        if (angle === 0) {\r\n          markup.push(\r\n            '<circle ', this.getSvgId(),\r\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\r\n            'r=\"', this.radius,\r\n            '\" style=\"', this.getSvgStyles(),\r\n            '\" transform=\"', this.getSvgTransform(),\r\n            ' ', this.getSvgTransformMatrix(), '\"',\r\n            this.addPaintOrder(),\r\n            '/>\\n'\r\n          );\r\n        }\r\n        else {\r\n          var startX = fabric.util.cos(this.startAngle) * this.radius,\r\n              startY = fabric.util.sin(this.startAngle) * this.radius,\r\n              endX = fabric.util.cos(this.endAngle) * this.radius,\r\n              endY = fabric.util.sin(this.endAngle) * this.radius,\r\n              largeFlag = angle > pi ? '1' : '0';\r\n\r\n          markup.push(\r\n            '<path d=\"M ' + startX + ' ' + startY,\r\n            ' A ' + this.radius + ' ' + this.radius,\r\n            ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\r\n            '\" style=\"', this.getSvgStyles(),\r\n            '\" transform=\"', this.getSvgTransform(),\r\n            ' ', this.getSvgTransformMatrix(), '\"',\r\n            this.addPaintOrder(),\r\n            '/>\\n'\r\n          );\r\n        }\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          0,\r\n          0,\r\n          this.radius,\r\n          this.startAngle,\r\n          this.endAngle, false);\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * Returns horizontal radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRadiusX: function() {\r\n        return this.get('radius') * this.get('scaleX');\r\n      },\r\n\r\n      /**\r\n       * Returns vertical radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRadiusY: function() {\r\n        return this.get('radius') * this.get('scaleY');\r\n      },\r\n\r\n      /**\r\n       * Sets radius of an object (and updates width accordingly)\r\n       * @return {fabric.Circle} thisArg\r\n       */\r\n      setRadius: function(value) {\r\n        this.radius = value;\r\n        return this.set('width', value * 2).set('height', value * 2);\r\n      },\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Circle\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\r\n     */\r\n    fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Circle} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Circle\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} [callback] Options callback invoked after parsing is finished\r\n     * @param {Object} [options] Options object\r\n     * @throws {Error} If value of `r` attribute is missing or invalid\r\n     */\r\n    fabric.Circle.fromElement = function(element, callback) {\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\r\n\r\n      if (!isValidRadius(parsedAttributes)) {\r\n        throw new Error('value of `r` attribute is required and can not be negative');\r\n      }\r\n\r\n      parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\r\n      parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\r\n      callback(new fabric.Circle(parsedAttributes));\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function isValidRadius(attributes) {\r\n      return (('radius' in attributes) && (attributes.radius >= 0));\r\n    }\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns {@link fabric.Circle} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Circle\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     * @return {Object} Instance of fabric.Circle\r\n     */\r\n    fabric.Circle.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Circle', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.Triangle) {\r\n      fabric.warn('fabric.Triangle is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Triangle class\r\n     * @class fabric.Triangle\r\n     * @extends fabric.Object\r\n     * @return {fabric.Triangle} thisArg\r\n     * @see {@link fabric.Triangle#initialize} for constructor definition\r\n     */\r\n    fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'triangle',\r\n\r\n      /**\r\n       * Width is set to 100 to compensate the old initialize code that was setting it to 100\r\n       * @type Number\r\n       * @default\r\n       */\r\n      width: 100,\r\n\r\n      /**\r\n       * Height is set to 100 to compensate the old initialize code that was setting it to 100\r\n       * @type Number\r\n       * @default\r\n       */\r\n      height: 100,\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        var widthBy2 = this.width / 2,\r\n            heightBy2 = this.height / 2;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(-widthBy2, heightBy2);\r\n        ctx.lineTo(0, -heightBy2);\r\n        ctx.lineTo(widthBy2, heightBy2);\r\n        ctx.closePath();\r\n\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var widthBy2 = this.width / 2,\r\n            heightBy2 = this.height / 2;\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(),\r\n            widthBy2 = this.width / 2,\r\n            heightBy2 = this.height / 2,\r\n            points = [\r\n              -widthBy2 + ' ' + heightBy2,\r\n              '0 ' + -heightBy2,\r\n              widthBy2 + ' ' + heightBy2\r\n            ]\r\n              .join(',');\r\n\r\n        markup.push(\r\n          '<polygon ', this.getSvgId(),\r\n          'points=\"', points,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(), '\"',\r\n          this.addPaintOrder(),\r\n          '/>'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /**\r\n     * Returns {@link fabric.Triangle} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Triangle\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     */\r\n    fabric.Triangle.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Triangle', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        piBy2   = Math.PI * 2;\r\n\r\n    if (fabric.Ellipse) {\r\n      fabric.warn('fabric.Ellipse is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Ellipse class\r\n     * @class fabric.Ellipse\r\n     * @extends fabric.Object\r\n     * @return {fabric.Ellipse} thisArg\r\n     * @see {@link fabric.Ellipse#initialize} for constructor definition\r\n     */\r\n    fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'ellipse',\r\n\r\n      /**\r\n       * Horizontal radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      rx:   0,\r\n\r\n      /**\r\n       * Vertical radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      ry:   0,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Ellipse} thisArg\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        this.set('rx', options && options.rx || 0);\r\n        this.set('ry', options && options.ry || 0);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} key\r\n       * @param {*} value\r\n       * @return {fabric.Ellipse} thisArg\r\n       */\r\n      _set: function(key, value) {\r\n        this.callSuper('_set', key, value);\r\n        switch (key) {\r\n\r\n          case 'rx':\r\n            this.rx = value;\r\n            this.set('width', value * 2);\r\n            break;\r\n\r\n          case 'ry':\r\n            this.ry = value;\r\n            this.set('height', value * 2);\r\n            break;\r\n\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns horizontal radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRx: function() {\r\n        return this.get('rx') * this.get('scaleX');\r\n      },\r\n\r\n      /**\r\n       * Returns Vertical radius of an object (according to how an object is scaled)\r\n       * @return {Number}\r\n       */\r\n      getRy: function() {\r\n        return this.get('ry') * this.get('scaleY');\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup();\r\n        markup.push(\r\n          '<ellipse ', this.getSvgId(),\r\n          'cx=\"0\" cy=\"0\" ',\r\n          'rx=\"', this.rx,\r\n          '\" ry=\"', this.ry,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(),\r\n          this.getSvgTransformMatrix(), '\"',\r\n          this.addPaintOrder(),\r\n          '/>\\n'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        ctx.beginPath();\r\n        ctx.save();\r\n        ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\r\n        ctx.arc(\r\n          0,\r\n          0,\r\n          this.rx,\r\n          0,\r\n          piBy2,\r\n          false);\r\n        ctx.restore();\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Ellipse\r\n     * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\r\n     */\r\n    fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Ellipse} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Ellipse\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} [callback] Options callback invoked after parsing is finished\r\n     * @return {fabric.Ellipse}\r\n     */\r\n    fabric.Ellipse.fromElement = function(element, callback) {\r\n\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\r\n\r\n      parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\r\n      parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\r\n      callback(new fabric.Ellipse(parsedAttributes));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns {@link fabric.Ellipse} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Ellipse\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as first argument\r\n     * @return {fabric.Ellipse}\r\n     */\r\n    fabric.Ellipse.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Ellipse', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend;\r\n\r\n    if (fabric.Rect) {\r\n      fabric.warn('fabric.Rect is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Rectangle class\r\n     * @class fabric.Rect\r\n     * @extends fabric.Object\r\n     * @return {fabric.Rect} thisArg\r\n     * @see {@link fabric.Rect#initialize} for constructor definition\r\n     */\r\n    fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\r\n\r\n      /**\r\n       * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'rect',\r\n\r\n      /**\r\n       * Horizontal border radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      rx:   0,\r\n\r\n      /**\r\n       * Vertical border radius\r\n       * @type Number\r\n       * @default\r\n       */\r\n      ry:   0,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        this._initRxRy();\r\n      },\r\n\r\n      /**\r\n       * Initializes rx/ry attributes\r\n       * @private\r\n       */\r\n      _initRxRy: function() {\r\n        if (this.rx && !this.ry) {\r\n          this.ry = this.rx;\r\n        }\r\n        else if (this.ry && !this.rx) {\r\n          this.rx = this.ry;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n\r\n        // optimize 1x1 case (used in spray brush)\r\n        if (this.width === 1 && this.height === 1) {\r\n          ctx.fillRect(-0.5, -0.5, 1, 1);\r\n          return;\r\n        }\r\n\r\n        var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\r\n            ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\r\n            w = this.width,\r\n            h = this.height,\r\n            x = -this.width / 2,\r\n            y = -this.height / 2,\r\n            isRounded = rx !== 0 || ry !== 0,\r\n            /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\r\n            k = 1 - 0.5522847498;\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(x + rx, y);\r\n\r\n        ctx.lineTo(x + w - rx, y);\r\n        isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\r\n\r\n        ctx.lineTo(x + w, y + h - ry);\r\n        isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\r\n\r\n        ctx.lineTo(x + rx, y + h);\r\n        isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\r\n\r\n        ctx.lineTo(x, y + ry);\r\n        isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\r\n\r\n        ctx.closePath();\r\n\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var x = -this.width / 2,\r\n            y = -this.height / 2,\r\n            w = this.width,\r\n            h = this.height;\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\r\n        markup.push(\r\n          '<rect ', this.getSvgId(),\r\n          'x=\"', x, '\" y=\"', y,\r\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\r\n          '\" width=\"', this.width, '\" height=\"', this.height,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(),\r\n          this.getSvgTransformMatrix(), '\"',\r\n          this.addPaintOrder(),\r\n          '/>\\n');\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\r\n     * @static\r\n     * @memberOf fabric.Rect\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\r\n     */\r\n    fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Rect} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Rect\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Rect.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n      options = options || { };\r\n\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\r\n\r\n      parsedAttributes.left = parsedAttributes.left || 0;\r\n      parsedAttributes.top  = parsedAttributes.top  || 0;\r\n      var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\r\n      rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\r\n      callback(rect);\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns {@link fabric.Rect} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Rect\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\r\n     */\r\n    fabric.Rect.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Rect', object, callback);\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        min = fabric.util.array.min,\r\n        max = fabric.util.array.max,\r\n        toFixed = fabric.util.toFixed;\r\n\r\n    if (fabric.Polyline) {\r\n      fabric.warn('fabric.Polyline is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Polyline class\r\n     * @class fabric.Polyline\r\n     * @extends fabric.Object\r\n     * @see {@link fabric.Polyline#initialize} for constructor definition\r\n     */\r\n    fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'polyline',\r\n\r\n      /**\r\n       * Points array\r\n       * @type Array\r\n       * @default\r\n       */\r\n      points: null,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Array} points Array of points (where each point is an object with x and y)\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Polyline} thisArg\r\n       * @example\r\n       * var poly = new fabric.Polyline([\r\n       *     { x: 10, y: 10 },\r\n       *     { x: 50, y: 30 },\r\n       *     { x: 40, y: 70 },\r\n       *     { x: 60, y: 50 },\r\n       *     { x: 100, y: 150 },\r\n       *     { x: 40, y: 100 }\r\n       *   ], {\r\n       *   stroke: 'red',\r\n       *   left: 100,\r\n       *   top: 100\r\n       * });\r\n       */\r\n      initialize: function(points, options) {\r\n        options = options || {};\r\n        this.points = points || [];\r\n        this.callSuper('initialize', options);\r\n        var calcDim = this._calcDimensions();\r\n        if (typeof options.left === 'undefined') {\r\n          this.left = calcDim.left;\r\n        }\r\n        if (typeof options.top === 'undefined') {\r\n          this.top = calcDim.top;\r\n        }\r\n        this.width = calcDim.width;\r\n        this.height = calcDim.height;\r\n        this.pathOffset = {\r\n          x: calcDim.left + this.width / 2,\r\n          y: calcDim.top + this.height / 2\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Calculate the polygon min and max point from points array,\r\n       * returning an object with left, top, widht, height to measure the\r\n       * polygon size\r\n       * @return {Object} object.left X coordinate of the polygon leftmost point\r\n       * @return {Object} object.top Y coordinate of the polygon topmost point\r\n       * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\r\n       * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\r\n       * @private\r\n       */\r\n      _calcDimensions: function() {\r\n\r\n        var points = this.points,\r\n            minX = min(points, 'x') || 0,\r\n            minY = min(points, 'y') || 0,\r\n            maxX = max(points, 'x') || 0,\r\n            maxY = max(points, 'y') || 0,\r\n            width = (maxX - minX),\r\n            height = (maxY - minY);\r\n\r\n        return {\r\n          left: minX,\r\n          top: minY,\r\n          width: width,\r\n          height: height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return extend(this.callSuper('toObject', propertiesToInclude), {\r\n          points: this.points.concat()\r\n        });\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\r\n            markup = this._createBaseSVGMarkup(),\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n\r\n        for (var i = 0, len = this.points.length; i < len; i++) {\r\n          points.push(\r\n            toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\r\n            toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\r\n          );\r\n        }\r\n        markup.push(\r\n          '<', this.type, ' ', this.getSvgId(),\r\n          'points=\"', points.join(''),\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(),\r\n          ' ', this.getSvgTransformMatrix(), '\"',\r\n          this.addPaintOrder(),\r\n          '/>\\n'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      commonRender: function(ctx) {\r\n        var point, len = this.points.length,\r\n            x = this.pathOffset.x,\r\n            y = this.pathOffset.y;\r\n\r\n        if (!len || isNaN(this.points[len - 1].y)) {\r\n          // do not draw if no points or odd points\r\n          // NaN comes from parseFloat of a empty string in parser\r\n          return false;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\r\n        for (var i = 0; i < len; i++) {\r\n          point = this.points[i];\r\n          ctx.lineTo(point.x - x, point.y - y);\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        if (!this.commonRender(ctx)) {\r\n          return;\r\n        }\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var p1, p2;\r\n\r\n        ctx.beginPath();\r\n        for (var i = 0, len = this.points.length; i < len; i++) {\r\n          p1 = this.points[i];\r\n          p2 = this.points[i + 1] || p1;\r\n          fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Returns complexity of an instance\r\n       * @return {Number} complexity of this instance\r\n       */\r\n      complexity: function() {\r\n        return this.get('points').length;\r\n      }\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Polyline\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\r\n     */\r\n    fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\r\n\r\n    /**\r\n     * Returns fabric.Polyline instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Polyline\r\n     * @param {SVGElement} element Element to parser\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Polyline.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n      options || (options = { });\r\n\r\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\r\n          parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\r\n\r\n      callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Polyline instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Polyline\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n     */\r\n    fabric.Polyline.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Polyline', object, callback, 'points');\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend;\r\n\r\n    if (fabric.Polygon) {\r\n      fabric.warn('fabric.Polygon is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Polygon class\r\n     * @class fabric.Polygon\r\n     * @extends fabric.Polyline\r\n     * @see {@link fabric.Polygon#initialize} for constructor definition\r\n     */\r\n    fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'polygon',\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        if (!this.commonRender(ctx)) {\r\n          return;\r\n        }\r\n        ctx.closePath();\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        this.callSuper('_renderDashedStroke', ctx);\r\n        ctx.closePath();\r\n      },\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\r\n     * @static\r\n     * @memberOf fabric.Polygon\r\n     * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\r\n     */\r\n    fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\r\n\r\n    /**\r\n     * Returns {@link fabric.Polygon} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Polygon\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Polygon.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n\r\n      options || (options = { });\r\n\r\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\r\n          parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\r\n\r\n      callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Polygon instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Polygon\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n     */\r\n    fabric.Polygon.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Polygon', object, callback, 'points');\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        min = fabric.util.array.min,\r\n        max = fabric.util.array.max,\r\n        extend = fabric.util.object.extend,\r\n        _toString = Object.prototype.toString,\r\n        drawArc = fabric.util.drawArc,\r\n        commandLengths = {\r\n          m: 2,\r\n          l: 2,\r\n          h: 1,\r\n          v: 1,\r\n          c: 6,\r\n          s: 4,\r\n          q: 4,\r\n          t: 2,\r\n          a: 7\r\n        },\r\n        repeatedCommands = {\r\n          m: 'l',\r\n          M: 'L'\r\n        };\r\n\r\n    if (fabric.Path) {\r\n      fabric.warn('fabric.Path is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Path class\r\n     * @class fabric.Path\r\n     * @extends fabric.Object\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\r\n     * @see {@link fabric.Path#initialize} for constructor definition\r\n     */\r\n    fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'path',\r\n\r\n      /**\r\n       * Array of path points\r\n       * @type Array\r\n       * @default\r\n       */\r\n      path: null,\r\n\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\r\n\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Path} thisArg\r\n       */\r\n      initialize: function(path, options) {\r\n        options = options || { };\r\n        this.callSuper('initialize', options);\r\n\r\n        if (!path) {\r\n          path = [];\r\n        }\r\n\r\n        var fromArray = _toString.call(path) === '[object Array]';\r\n\r\n        this.path = fromArray\r\n          ? path\r\n          // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\r\n          : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\r\n\r\n        if (!this.path) {\r\n          return;\r\n        }\r\n\r\n        if (!fromArray) {\r\n          this.path = this._parsePath();\r\n        }\r\n\r\n        this._setPositionDimensions(options);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} options Options object\r\n       */\r\n      _setPositionDimensions: function(options) {\r\n        var calcDim = this._parseDimensions();\r\n\r\n        this.width = calcDim.width;\r\n        this.height = calcDim.height;\r\n\r\n        if (typeof options.left === 'undefined') {\r\n          this.left = calcDim.left;\r\n        }\r\n\r\n        if (typeof options.top === 'undefined') {\r\n          this.top = calcDim.top;\r\n        }\r\n\r\n        this.pathOffset = this.pathOffset || {\r\n          x: calcDim.left + this.width / 2,\r\n          y: calcDim.top + this.height / 2\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render path on\r\n       */\r\n      _renderPathCommands: function(ctx) {\r\n        var current, // current instruction\r\n            previous = null,\r\n            subpathStartX = 0,\r\n            subpathStartY = 0,\r\n            x = 0, // current x\r\n            y = 0, // current y\r\n            controlX = 0, // current control point x\r\n            controlY = 0, // current control point y\r\n            tempX,\r\n            tempY,\r\n            l = -this.pathOffset.x,\r\n            t = -this.pathOffset.y;\r\n\r\n        ctx.beginPath();\r\n\r\n        for (var i = 0, len = this.path.length; i < len; ++i) {\r\n\r\n          current = this.path[i];\r\n\r\n          switch (current[0]) { // first letter\r\n\r\n            case 'l': // lineto, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'L': // lineto, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'h': // horizontal lineto, relative\r\n              x += current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'H': // horizontal lineto, absolute\r\n              x = current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'v': // vertical lineto, relative\r\n              y += current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'V': // verical lineto, absolute\r\n              y = current[1];\r\n              ctx.lineTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'm': // moveTo, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              ctx.moveTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'M': // moveTo, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              ctx.moveTo(x + l, y + t);\r\n              break;\r\n\r\n            case 'c': // bezierCurveTo, relative\r\n              tempX = x + current[5];\r\n              tempY = y + current[6];\r\n              controlX = x + current[3];\r\n              controlY = y + current[4];\r\n              ctx.bezierCurveTo(\r\n                x + current[1] + l, // x1\r\n                y + current[2] + t, // y1\r\n                controlX + l, // x2\r\n                controlY + t, // y2\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'C': // bezierCurveTo, absolute\r\n              x = current[5];\r\n              y = current[6];\r\n              controlX = current[3];\r\n              controlY = current[4];\r\n              ctx.bezierCurveTo(\r\n                current[1] + l,\r\n                current[2] + t,\r\n                controlX + l,\r\n                controlY + t,\r\n                x + l,\r\n                y + t\r\n              );\r\n              break;\r\n\r\n            case 's': // shorthand cubic bezierCurveTo, relative\r\n\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              ctx.bezierCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                x + current[1] + l,\r\n                y + current[2] + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'S': // shorthand cubic bezierCurveTo, absolute\r\n              tempX = current[3];\r\n              tempY = current[4];\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              ctx.bezierCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                current[1] + l,\r\n                current[2] + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n\r\n              break;\r\n\r\n            case 'q': // quadraticCurveTo, relative\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n\r\n              ctx.quadraticCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'Q': // quadraticCurveTo, absolute\r\n              tempX = current[3];\r\n              tempY = current[4];\r\n\r\n              ctx.quadraticCurveTo(\r\n                current[1] + l,\r\n                current[2] + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n              break;\r\n\r\n            case 't': // shorthand quadraticCurveTo, relative\r\n\r\n              // transform to absolute x,y\r\n              tempX = x + current[1];\r\n              tempY = y + current[2];\r\n\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              ctx.quadraticCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n\r\n              break;\r\n\r\n            case 'T':\r\n              tempX = current[1];\r\n              tempY = current[2];\r\n\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              ctx.quadraticCurveTo(\r\n                controlX + l,\r\n                controlY + t,\r\n                tempX + l,\r\n                tempY + t\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'a':\r\n              // TODO: optimize this\r\n              drawArc(ctx, x + l, y + t, [\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6] + x + l,\r\n                current[7] + y + t\r\n              ]);\r\n              x += current[6];\r\n              y += current[7];\r\n              break;\r\n\r\n            case 'A':\r\n              // TODO: optimize this\r\n              drawArc(ctx, x + l, y + t, [\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6] + l,\r\n                current[7] + t\r\n              ]);\r\n              x = current[6];\r\n              y = current[7];\r\n              break;\r\n\r\n            case 'z':\r\n            case 'Z':\r\n              x = subpathStartX;\r\n              y = subpathStartY;\r\n              ctx.closePath();\r\n              break;\r\n          }\r\n          previous = current;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx context to render path on\r\n       */\r\n      _render: function(ctx) {\r\n        this._renderPathCommands(ctx);\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of an instance\r\n       * @return {String} string representation of an instance\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Path (' + this.complexity() +\r\n          '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var o = extend(this.callSuper('toObject', propertiesToInclude), {\r\n          path: this.path.map(function(item) { return item.slice(); }),\r\n          top: this.top,\r\n          left: this.left,\r\n        });\r\n        return o;\r\n      },\r\n\r\n      /**\r\n       * Returns dataless object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toDatalessObject: function(propertiesToInclude) {\r\n        var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\r\n        if (o.sourcePath) {\r\n          delete o.path;\r\n        }\r\n        return o;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var chunks = [],\r\n            markup = this._createBaseSVGMarkup(), addTransform = '';\r\n\r\n        for (var i = 0, len = this.path.length; i < len; i++) {\r\n          chunks.push(this.path[i].join(' '));\r\n        }\r\n        var path = chunks.join(' ');\r\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\r\n        markup.push(\r\n          '<path ', this.getSvgId(),\r\n          'd=\"', path,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\" transform=\"', this.getSvgTransform(), addTransform,\r\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\r\n          this.addPaintOrder(),\r\n          '/>\\n'\r\n        );\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns number representation of an instance complexity\r\n       * @return {Number} complexity of this instance\r\n       */\r\n      complexity: function() {\r\n        return this.path.length;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _parsePath: function() {\r\n        var result = [],\r\n            coords = [],\r\n            currentPath,\r\n            parsed,\r\n            re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\r\n            match,\r\n            coordsStr;\r\n\r\n        for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\r\n          currentPath = this.path[i];\r\n\r\n          coordsStr = currentPath.slice(1).trim();\r\n          coords.length = 0;\r\n\r\n          while ((match = re.exec(coordsStr))) {\r\n            coords.push(match[0]);\r\n          }\r\n\r\n          coordsParsed = [currentPath.charAt(0)];\r\n\r\n          for (var j = 0, jlen = coords.length; j < jlen; j++) {\r\n            parsed = parseFloat(coords[j]);\r\n            if (!isNaN(parsed)) {\r\n              coordsParsed.push(parsed);\r\n            }\r\n          }\r\n\r\n          var command = coordsParsed[0],\r\n              commandLength = commandLengths[command.toLowerCase()],\r\n              repeatedCommand = repeatedCommands[command] || command;\r\n\r\n          if (coordsParsed.length - 1 > commandLength) {\r\n            for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\r\n              result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\r\n              command = repeatedCommand;\r\n            }\r\n          }\r\n          else {\r\n            result.push(coordsParsed);\r\n          }\r\n        }\r\n\r\n        return result;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _parseDimensions: function() {\r\n\r\n        var aX = [],\r\n            aY = [],\r\n            current, // current instruction\r\n            previous = null,\r\n            subpathStartX = 0,\r\n            subpathStartY = 0,\r\n            x = 0, // current x\r\n            y = 0, // current y\r\n            controlX = 0, // current control point x\r\n            controlY = 0, // current control point y\r\n            tempX,\r\n            tempY,\r\n            bounds;\r\n\r\n        for (var i = 0, len = this.path.length; i < len; ++i) {\r\n\r\n          current = this.path[i];\r\n\r\n          switch (current[0]) { // first letter\r\n\r\n            case 'l': // lineto, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'L': // lineto, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'h': // horizontal lineto, relative\r\n              x += current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'H': // horizontal lineto, absolute\r\n              x = current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'v': // vertical lineto, relative\r\n              y += current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'V': // verical lineto, absolute\r\n              y = current[1];\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'm': // moveTo, relative\r\n              x += current[1];\r\n              y += current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'M': // moveTo, absolute\r\n              x = current[1];\r\n              y = current[2];\r\n              subpathStartX = x;\r\n              subpathStartY = y;\r\n              bounds = [];\r\n              break;\r\n\r\n            case 'c': // bezierCurveTo, relative\r\n              tempX = x + current[5];\r\n              tempY = y + current[6];\r\n              controlX = x + current[3];\r\n              controlY = y + current[4];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                x + current[1], // x1\r\n                y + current[2], // y1\r\n                controlX, // x2\r\n                controlY, // y2\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'C': // bezierCurveTo, absolute\r\n              controlX = current[3];\r\n              controlY = current[4];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                current[1],\r\n                current[2],\r\n                controlX,\r\n                controlY,\r\n                current[5],\r\n                current[6]\r\n              );\r\n              x = current[5];\r\n              y = current[6];\r\n              break;\r\n\r\n            case 's': // shorthand cubic bezierCurveTo, relative\r\n\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                x + current[1],\r\n                y + current[2],\r\n                tempX,\r\n                tempY\r\n              );\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'S': // shorthand cubic bezierCurveTo, absolute\r\n              tempX = current[3];\r\n              tempY = current[4];\r\n              if (previous[0].match(/[CcSs]/) === null) {\r\n                // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n                // the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control points\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                current[1],\r\n                current[2],\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              // set control point to 2nd one of this command\r\n              // \"... the first control point is assumed to be\r\n              // the reflection of the second control point on\r\n              // the previous command relative to the current point.\"\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n              break;\r\n\r\n            case 'q': // quadraticCurveTo, relative\r\n              // transform to absolute x,y\r\n              tempX = x + current[3];\r\n              tempY = y + current[4];\r\n              controlX = x + current[1];\r\n              controlY = y + current[2];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'Q': // quadraticCurveTo, absolute\r\n              controlX = current[1];\r\n              controlY = current[2];\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                current[3],\r\n                current[4]\r\n              );\r\n              x = current[3];\r\n              y = current[4];\r\n              break;\r\n\r\n            case 't': // shorthand quadraticCurveTo, relative\r\n              // transform to absolute x,y\r\n              tempX = x + current[1];\r\n              tempY = y + current[2];\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n\r\n              break;\r\n\r\n            case 'T':\r\n              tempX = current[1];\r\n              tempY = current[2];\r\n\r\n              if (previous[0].match(/[QqTt]/) === null) {\r\n                // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n                // assume the control point is coincident with the current point\r\n                controlX = x;\r\n                controlY = y;\r\n              }\r\n              else {\r\n                // calculate reflection of previous control point\r\n                controlX = 2 * x - controlX;\r\n                controlY = 2 * y - controlY;\r\n              }\r\n              bounds = fabric.util.getBoundsOfCurve(x, y,\r\n                controlX,\r\n                controlY,\r\n                controlX,\r\n                controlY,\r\n                tempX,\r\n                tempY\r\n              );\r\n              x = tempX;\r\n              y = tempY;\r\n              break;\r\n\r\n            case 'a':\r\n              // TODO: optimize this\r\n              bounds = fabric.util.getBoundsOfArc(x, y,\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6] + x,\r\n                current[7] + y\r\n              );\r\n              x += current[6];\r\n              y += current[7];\r\n              break;\r\n\r\n            case 'A':\r\n              // TODO: optimize this\r\n              bounds = fabric.util.getBoundsOfArc(x, y,\r\n                current[1],\r\n                current[2],\r\n                current[3],\r\n                current[4],\r\n                current[5],\r\n                current[6],\r\n                current[7]\r\n              );\r\n              x = current[6];\r\n              y = current[7];\r\n              break;\r\n\r\n            case 'z':\r\n            case 'Z':\r\n              x = subpathStartX;\r\n              y = subpathStartY;\r\n              break;\r\n          }\r\n          previous = current;\r\n          bounds.forEach(function (point) {\r\n            aX.push(point.x);\r\n            aY.push(point.y);\r\n          });\r\n          aX.push(x);\r\n          aY.push(y);\r\n        }\r\n\r\n        var minX = min(aX) || 0,\r\n            minY = min(aY) || 0,\r\n            maxX = max(aX) || 0,\r\n            maxY = max(aY) || 0,\r\n            deltaX = maxX - minX,\r\n            deltaY = maxY - minY,\r\n\r\n            o = {\r\n              left: minX,\r\n              top: minY,\r\n              width: deltaX,\r\n              height: deltaY\r\n            };\r\n\r\n        return o;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Creates an instance of fabric.Path from an object\r\n     * @static\r\n     * @memberOf fabric.Path\r\n     * @param {Object} object\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n     */\r\n    fabric.Path.fromObject = function(object, callback) {\r\n      if (typeof object.sourcePath === 'string') {\r\n        var pathUrl = object.sourcePath;\r\n        fabric.loadSVGFromURL(pathUrl, function (elements) {\r\n          var path = elements[0];\r\n          path.setOptions(object);\r\n          callback && callback(path);\r\n        });\r\n      }\r\n      else {\r\n        fabric.Object._fromObject('Path', object, callback, 'path');\r\n      }\r\n    };\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\r\n     * @static\r\n     * @memberOf fabric.Path\r\n     * @see http://www.w3.org/TR/SVG/paths.html#PathElement\r\n     */\r\n    fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\r\n\r\n    /**\r\n     * Creates an instance of fabric.Path from an SVG <path> element\r\n     * @static\r\n     * @memberOf fabric.Path\r\n     * @param {SVGElement} element to parse\r\n     * @param {Function} callback Callback to invoke when an fabric.Path instance is created\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} [callback] Options callback invoked after parsing is finished\r\n     */\r\n    fabric.Path.fromElement = function(element, callback, options) {\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\r\n      callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        min = fabric.util.array.min,\r\n        max = fabric.util.array.max;\r\n\r\n    if (fabric.Group) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Group class\r\n     * @class fabric.Group\r\n     * @extends fabric.Object\r\n     * @mixes fabric.Collection\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\r\n     * @see {@link fabric.Group#initialize} for constructor definition\r\n     */\r\n    fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'group',\r\n\r\n      /**\r\n       * Width of stroke\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeWidth: 0,\r\n\r\n      /**\r\n       * Indicates if click events should also check for subtargets\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      subTargetCheck: false,\r\n\r\n      /**\r\n       * Groups are container, do not render anything on theyr own, ence no cache properties\r\n       * @type Array\r\n       * @default\r\n       */\r\n      cacheProperties: [],\r\n\r\n      /**\r\n       * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\r\n       * available setting this boolean to true.\r\n       * @type Boolean\r\n       * @since 2.0.0\r\n       * @default\r\n       */\r\n      useSetOnGroup: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} objects Group objects\r\n       * @param {Object} [options] Options object\r\n       * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(objects, options, isAlreadyGrouped) {\r\n        options = options || {};\r\n        this._objects = [];\r\n        // if objects enclosed in a group have been grouped already,\r\n        // we cannot change properties of objects.\r\n        // Thus we need to set options to group without objects,\r\n        isAlreadyGrouped && this.callSuper('initialize', options);\r\n        this._objects = objects || [];\r\n        for (var i = this._objects.length; i--; ) {\r\n          this._objects[i].group = this;\r\n        }\r\n\r\n        if (!isAlreadyGrouped) {\r\n          var center = options && options.centerPoint;\r\n          // we want to set origins before calculating the bounding box.\r\n          // so that the topleft can be set with that in mind.\r\n          // if specific top and left are passed, are overwritten later\r\n          // with the callSuper('initialize', options)\r\n          if (options.originX !== undefined) {\r\n            this.originX = options.originX;\r\n          }\r\n          if (options.originY !== undefined) {\r\n            this.originY = options.originY;\r\n          }\r\n          // if coming from svg i do not want to calc bounds.\r\n          // i assume width and height are passed along options\r\n          center || this._calcBounds();\r\n          this._updateObjectsCoords(center);\r\n          delete options.centerPoint;\r\n          this.callSuper('initialize', options);\r\n        }\r\n        else {\r\n          this._updateObjectsACoords();\r\n        }\r\n\r\n        this.setCoords();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\r\n       */\r\n      _updateObjectsACoords: function() {\r\n        var ignoreZoom = true, skipAbsolute = true;\r\n        for (var i = this._objects.length; i--; ){\r\n          this._objects[i].setCoords(ignoreZoom, skipAbsolute);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\r\n       */\r\n      _updateObjectsCoords: function(center) {\r\n        var center = center || this.getCenterPoint();\r\n        for (var i = this._objects.length; i--; ){\r\n          this._updateObjectCoords(this._objects[i], center);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} object\r\n       * @param {fabric.Point} center, current center of group.\r\n       */\r\n      _updateObjectCoords: function(object, center) {\r\n        var objectLeft = object.left,\r\n            objectTop = object.top,\r\n            ignoreZoom = true, skipAbsolute = true;\r\n\r\n        object.set({\r\n          left: objectLeft - center.x,\r\n          top: objectTop - center.y\r\n        });\r\n        object.group = this;\r\n        object.setCoords(ignoreZoom, skipAbsolute);\r\n      },\r\n\r\n      /**\r\n       * Returns string represenation of a group\r\n       * @return {String}\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Group: (' + this.complexity() + ')>';\r\n      },\r\n\r\n      /**\r\n       * Adds an object to a group; Then recalculates group's dimension, position.\r\n       * @param {Object} object\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      addWithUpdate: function(object) {\r\n        this._restoreObjectsState();\r\n        fabric.util.resetObjectTransform(this);\r\n        if (object) {\r\n          this._objects.push(object);\r\n          object.group = this;\r\n          object._set('canvas', this.canvas);\r\n        }\r\n        this._calcBounds();\r\n        this._updateObjectsCoords();\r\n        this.setCoords();\r\n        this.dirty = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Removes an object from a group; Then recalculates group's dimension, position.\r\n       * @param {Object} object\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      removeWithUpdate: function(object) {\r\n        this._restoreObjectsState();\r\n        fabric.util.resetObjectTransform(this);\r\n\r\n        this.remove(object);\r\n        this._calcBounds();\r\n        this._updateObjectsCoords();\r\n        this.setCoords();\r\n        this.dirty = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onObjectAdded: function(object) {\r\n        this.dirty = true;\r\n        object.group = this;\r\n        object._set('canvas', this.canvas);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onObjectRemoved: function(object) {\r\n        this.dirty = true;\r\n        delete object.group;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _set: function(key, value) {\r\n        var i = this._objects.length;\r\n        if (this.useSetOnGroup) {\r\n          while (i--) {\r\n            this._objects[i].setOnGroup(key, value);\r\n          }\r\n        }\r\n        if (key === 'canvas') {\r\n          while (i--) {\r\n            this._objects[i]._set(key, value);\r\n          }\r\n        }\r\n        fabric.Object.prototype._set.call(this, key, value);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var objsToObject = this._objects.map(function(obj) {\r\n          var originalDefaults = obj.includeDefaultValues;\r\n          obj.includeDefaultValues = obj.group.includeDefaultValues;\r\n          var _obj = obj.toObject(propertiesToInclude);\r\n          obj.includeDefaultValues = originalDefaults;\r\n          return _obj;\r\n        });\r\n        var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\r\n        obj.objects = objsToObject;\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance, in dataless mode.\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toDatalessObject: function(propertiesToInclude) {\r\n        var objsToObject, sourcePath = this.sourcePath;\r\n        if (sourcePath) {\r\n          objsToObject = sourcePath;\r\n        }\r\n        else {\r\n          objsToObject = this._objects.map(function(obj) {\r\n            var originalDefaults = obj.includeDefaultValues;\r\n            obj.includeDefaultValues = obj.group.includeDefaultValues;\r\n            var _obj = obj.toDatalessObject(propertiesToInclude);\r\n            obj.includeDefaultValues = originalDefaults;\r\n            return _obj;\r\n          });\r\n        }\r\n        var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\r\n        obj.objects = objsToObject;\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Renders instance on a given context\r\n       * @param {CanvasRenderingContext2D} ctx context to render instance on\r\n       */\r\n      render: function(ctx) {\r\n        this._transformDone = true;\r\n        this.callSuper('render', ctx);\r\n        this._transformDone = false;\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * objectCaching is a global flag, wins over everything\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group outside is cached.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\r\n        this.ownCaching = ownCache;\r\n        if (ownCache) {\r\n          for (var i = 0, len = this._objects.length; i < len; i++) {\r\n            if (this._objects[i].willDrawShadow()) {\r\n              this.ownCaching = false;\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return ownCache;\r\n      },\r\n\r\n      /**\r\n       * Check if this object or a child object will cast a shadow\r\n       * @return {Boolean}\r\n       */\r\n      willDrawShadow: function() {\r\n        if (this.shadow) {\r\n          return fabric.Object.prototype.willDrawShadow.call(this);\r\n        }\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          if (this._objects[i].willDrawShadow()) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Check if this group or its parent group are caching, recursively up\r\n       * @return {Boolean}\r\n       */\r\n      isOnACache: function() {\r\n        return this.ownCaching || (this.group && this.group.isOnACache());\r\n      },\r\n\r\n      /**\r\n       * Execute the drawing operation for an object on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      drawObject: function(ctx) {\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          this._objects[i].render(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Check if cache is dirty\r\n       */\r\n      isCacheDirty: function() {\r\n        if (this.callSuper('isCacheDirty')) {\r\n          return true;\r\n        }\r\n        if (!this.statefullCache) {\r\n          return false;\r\n        }\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          if (this._objects[i].isCacheDirty(true)) {\r\n            if (this._cacheCanvas) {\r\n              // if this group has not a cache canvas there is nothing to clean\r\n              var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\r\n              this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\r\n            }\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Retores original state of each of group objects (original state is that which was before group was created).\r\n       * @private\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      _restoreObjectsState: function() {\r\n        this._objects.forEach(this._restoreObjectState, this);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Realises the transform from this group onto the supplied object\r\n       * i.e. it tells you what would happen if the supplied object was in\r\n       * the group, and then the group was destroyed. It mutates the supplied\r\n       * object.\r\n       * @param {fabric.Object} object\r\n       * @return {fabric.Object} transformedObject\r\n       */\r\n      realizeTransform: function(object) {\r\n        var matrix = object.calcTransformMatrix(),\r\n            options = fabric.util.qrDecompose(matrix),\r\n            center = new fabric.Point(options.translateX, options.translateY);\r\n        object.flipX = false;\r\n        object.flipY = false;\r\n        object.set('scaleX', options.scaleX);\r\n        object.set('scaleY', options.scaleY);\r\n        object.skewX = options.skewX;\r\n        object.skewY = options.skewY;\r\n        object.angle = options.angle;\r\n        object.setPositionByOrigin(center, 'center', 'center');\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Restores original state of a specified object in group\r\n       * @private\r\n       * @param {fabric.Object} object\r\n       * @return {fabric.Group} thisArg\r\n       */\r\n      _restoreObjectState: function(object) {\r\n        this.realizeTransform(object);\r\n        object.setCoords();\r\n        delete object.group;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Destroys a group (restoring state of its objects)\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      destroy: function() {\r\n        // when group is destroyed objects needs to get a repaint to be eventually\r\n        // displayed on canvas.\r\n        this._objects.forEach(function(object) {\r\n          object.set('dirty', true);\r\n        });\r\n        return this._restoreObjectsState();\r\n      },\r\n\r\n      /**\r\n       * make a group an active selection, remove the group from canvas\r\n       * the group has to be on canvas for this to work.\r\n       * @return {fabric.ActiveSelection} thisArg\r\n       * @chainable\r\n       */\r\n      toActiveSelection: function() {\r\n        if (!this.canvas) {\r\n          return;\r\n        }\r\n        var objects = this._objects, canvas = this.canvas;\r\n        this._objects = [];\r\n        var options = this.toObject();\r\n        delete options.objects;\r\n        var activeSelection = new fabric.ActiveSelection([]);\r\n        activeSelection.set(options);\r\n        activeSelection.type = 'activeSelection';\r\n        canvas.remove(this);\r\n        objects.forEach(function(object) {\r\n          object.group = activeSelection;\r\n          object.dirty = true;\r\n          canvas.add(object);\r\n        });\r\n        activeSelection.canvas = canvas;\r\n        activeSelection._objects = objects;\r\n        canvas._activeObject = activeSelection;\r\n        activeSelection.setCoords();\r\n        return activeSelection;\r\n      },\r\n\r\n      /**\r\n       * Destroys a group (restoring state of its objects)\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      ungroupOnCanvas: function() {\r\n        return this._restoreObjectsState();\r\n      },\r\n\r\n      /**\r\n       * Sets coordinates of all objects inside group\r\n       * @return {fabric.Group} thisArg\r\n       * @chainable\r\n       */\r\n      setObjectsCoords: function() {\r\n        var ignoreZoom = true, skipAbsolute = true;\r\n        this.forEachObject(function(object) {\r\n          object.setCoords(ignoreZoom, skipAbsolute);\r\n        });\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _calcBounds: function(onlyWidthHeight) {\r\n        var aX = [],\r\n            aY = [],\r\n            o, prop,\r\n            props = ['tr', 'br', 'bl', 'tl'],\r\n            i = 0, iLen = this._objects.length,\r\n            j, jLen = props.length,\r\n            ignoreZoom = true;\r\n\r\n        for ( ; i < iLen; ++i) {\r\n          o = this._objects[i];\r\n          o.setCoords(ignoreZoom);\r\n          for (j = 0; j < jLen; j++) {\r\n            prop = props[j];\r\n            aX.push(o.oCoords[prop].x);\r\n            aY.push(o.oCoords[prop].y);\r\n          }\r\n        }\r\n\r\n        this._getBounds(aX, aY, onlyWidthHeight);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getBounds: function(aX, aY, onlyWidthHeight) {\r\n        var minXY = new fabric.Point(min(aX), min(aY)),\r\n            maxXY = new fabric.Point(max(aX), max(aY)),\r\n            top = minXY.y || 0, left = minXY.x || 0,\r\n            width = (maxXY.x - minXY.x) || 0,\r\n            height = (maxXY.y - minXY.y) || 0;\r\n        this.width = width;\r\n        this.height = height;\r\n        if (!onlyWidthHeight) {\r\n          // the bounding box always finds the topleft most corner.\r\n          // whatever is the group origin, we set up here the left/top position.\r\n          this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\r\n        }\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns svg representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup();\r\n        markup.push(\r\n          '<g ', this.getSvgId(), 'transform=\"',\r\n          /* avoiding styles intentionally */\r\n          this.getSvgTransform(),\r\n          this.getSvgTransformMatrix(),\r\n          '\" style=\"',\r\n          this.getSvgFilter(),\r\n          '\">\\n'\r\n        );\r\n\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          markup.push('\\t', this._objects[i].toSVG(reviver));\r\n        }\r\n\r\n        markup.push('</g>\\n');\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n    });\r\n\r\n    /**\r\n     * Returns {@link fabric.Group} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Group\r\n     * @param {Object} object Object to create a group from\r\n     * @param {Function} [callback] Callback to invoke when an group instance is created\r\n     */\r\n    fabric.Group.fromObject = function(object, callback) {\r\n      fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\r\n        var options = fabric.util.object.clone(object, true);\r\n        delete options.objects;\r\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\r\n      });\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    //var fabric = global.fabric || (global.fabric = { });\r\n\r\n    if (fabric.ActiveSelection) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Group class\r\n     * @class fabric.ActiveSelection\r\n     * @extends fabric.Group\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\r\n     * @see {@link fabric.ActiveSelection#initialize} for constructor definition\r\n     */\r\n    fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'activeSelection',\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} objects ActiveSelection objects\r\n       * @param {Object} [options] Options object\r\n       * @return {Object} thisArg\r\n       */\r\n      initialize: function(objects, options) {\r\n        options = options || {};\r\n        this._objects = objects || [];\r\n        for (var i = this._objects.length; i--; ) {\r\n          this._objects[i].group = this;\r\n        }\r\n\r\n        if (options.originX) {\r\n          this.originX = options.originX;\r\n        }\r\n        if (options.originY) {\r\n          this.originY = options.originY;\r\n        }\r\n        this._calcBounds();\r\n        this._updateObjectsCoords();\r\n        fabric.Object.prototype.initialize.call(this, options);\r\n        this.setCoords();\r\n      },\r\n\r\n      /**\r\n       * Change te activeSelection to a normal group,\r\n       * High level function that automatically adds it to canvas as\r\n       * active object. no events fired.\r\n       * @since 2.0.0\r\n       * @return {fabric.Group}\r\n       */\r\n      toGroup: function() {\r\n        var objects = this._objects.concat();\r\n        this._objects = [];\r\n        var options = fabric.Object.prototype.toObject.call(this);\r\n        var newGroup = new fabric.Group([]);\r\n        delete options.type;\r\n        newGroup.set(options);\r\n        objects.forEach(function(object) {\r\n          object.canvas.remove(object);\r\n          object.group = newGroup;\r\n        });\r\n        newGroup._objects = objects;\r\n        if (!this.canvas) {\r\n          return newGroup;\r\n        }\r\n        var canvas = this.canvas;\r\n        canvas.add(newGroup);\r\n        canvas._activeObject = newGroup;\r\n        newGroup.setCoords();\r\n        return newGroup;\r\n      },\r\n\r\n      /**\r\n       * If returns true, deselection is cancelled.\r\n       * @since 2.0.0\r\n       * @return {Boolean} [cancel]\r\n       */\r\n      onDeselect: function() {\r\n        this.destroy();\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of a group\r\n       * @return {String}\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\r\n      },\r\n\r\n      /**\r\n       * Decide if the object should cache or not. Create its own cache level\r\n       * objectCaching is a global flag, wins over everything\r\n       * needsItsOwnCache should be used when the object drawing method requires\r\n       * a cache step. None of the fabric classes requires it.\r\n       * Generally you do not cache objects in groups because the group outside is cached.\r\n       * @return {Boolean}\r\n       */\r\n      shouldCache: function() {\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Check if this group or its parent group are caching, recursively up\r\n       * @return {Boolean}\r\n       */\r\n      isOnACache: function() {\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Renders controls and borders for the object\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} [styleOverride] properties to override the object style\r\n       * @param {Object} [childrenOverride] properties to override the children overrides\r\n       */\r\n      _renderControls: function(ctx, styleOverride, childrenOverride) {\r\n        ctx.save();\r\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n        this.callSuper('_renderControls', ctx, styleOverride);\r\n        childrenOverride = childrenOverride || { };\r\n        if (typeof childrenOverride.hasControls === 'undefined') {\r\n          childrenOverride.hasControls = false;\r\n        }\r\n        if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\r\n          childrenOverride.hasRotatingPoint = false;\r\n        }\r\n        childrenOverride.forActiveSelection = true;\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          this._objects[i]._renderControls(ctx, childrenOverride);\r\n        }\r\n        ctx.restore();\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns {@link fabric.ActiveSelection} instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.ActiveSelection\r\n     * @param {Object} object Object to create a group from\r\n     * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\r\n     */\r\n    fabric.ActiveSelection.fromObject = function(object, callback) {\r\n      fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\r\n        delete object.objects;\r\n        callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\r\n      });\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var extend = fabric.util.object.extend;\r\n\r\n    //if (!global.fabric) {\r\n    //  global.fabric = { };\r\n    //}\r\n\r\n    //if (global.fabric.Image) {\r\n    if (fabric.Image) {\r\n      fabric.warn('fabric.Image is already defined.');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Image class\r\n     * @class fabric.Image\r\n     * @extends fabric.Object\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\r\n     * @see {@link fabric.Image#initialize} for constructor definition\r\n     */\r\n    fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'image',\r\n\r\n      /**\r\n       * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\r\n       * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\r\n       * @type String\r\n       * @default\r\n       */\r\n      crossOrigin: '',\r\n\r\n      /**\r\n       * Width of a stroke.\r\n       * For image quality a stroke multiple of 2 gives better results.\r\n       * @type Number\r\n       * @default\r\n       */\r\n      strokeWidth: 0,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaleX to detect\r\n       * if the Image got resized after the last Render\r\n       * @type Number\r\n       */\r\n      _lastScaleX: 1,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaleY to detect\r\n       * if the Image got resized after the last Render\r\n       * @type Number\r\n       */\r\n      _lastScaleY: 1,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaling applied by the apply filter chain\r\n       * @type Number\r\n       */\r\n      _filterScalingX: 1,\r\n\r\n      /**\r\n       * private\r\n       * contains last value of scaling applied by the apply filter chain\r\n       * @type Number\r\n       */\r\n      _filterScalingY: 1,\r\n\r\n      /**\r\n       * minimum scale factor under which any resizeFilter is triggered to resize the image\r\n       * 0 will disable the automatic resize. 1 will trigger automatically always.\r\n       * number bigger than 1 are not implemented yet.\r\n       * @type Number\r\n       */\r\n      minimumScaleTrigger: 0.5,\r\n\r\n      /**\r\n       * List of properties to consider when checking if\r\n       * state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\r\n\r\n      /**\r\n       * When `true`, object is cached on an additional canvas.\r\n       * default to false for images\r\n       * since 1.7.0\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      objectCaching: false,\r\n\r\n      /**\r\n       * key used to retrieve the texture representing this image\r\n       * since 2.0.0\r\n       * @type String\r\n       * @default\r\n       */\r\n      cacheKey: '',\r\n\r\n      /**\r\n       * Image crop in pixels from original image size.\r\n       * since 2.0.0\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cropX: 0,\r\n\r\n      /**\r\n       * Image crop in pixels from original image size.\r\n       * since 2.0.0\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cropY: 0,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {HTMLImageElement | String} element Image element\r\n       * @param {Object} [options] Options object\r\n       * @param {function} [callback] callback function to call after eventual filters applied.\r\n       * @return {fabric.Image} thisArg\r\n       */\r\n      initialize: function(element, options) {\r\n        options || (options = { });\r\n        this.filters = [];\r\n        this.cacheKey = 'texture' + fabric.Object.__uid++;\r\n        this.callSuper('initialize', options);\r\n        this._initElement(element, options);\r\n      },\r\n\r\n      /**\r\n       * Returns image element which this instance if based on\r\n       * @return {HTMLImageElement} Image element\r\n       */\r\n      getElement: function() {\r\n        return this._element || {};\r\n      },\r\n\r\n      /**\r\n       * Sets image element for this instance to a specified one.\r\n       * If filters defined they are applied to new image.\r\n       * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\r\n       * @param {HTMLImageElement} element\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Image} thisArg\r\n       * @chainable\r\n       */\r\n      setElement: function(element, options) {\r\n        this.removeTexture(this.cacheKey);\r\n        this.removeTexture(this.cacheKey + '_filtered');\r\n        this._element = element;\r\n        this._originalElement = element;\r\n        this._initConfig(options);\r\n        if (this.resizeFilter) {\r\n          this.applyResizeFilters();\r\n        }\r\n        if (this.filters.length !== 0) {\r\n          this.applyFilters();\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Delete a single texture if in webgl mode\r\n       */\r\n      removeTexture: function(key) {\r\n        var backend = fabric.filterBackend;\r\n        if (backend && backend.evictCachesForKey) {\r\n          backend.evictCachesForKey(key);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Delete textures, reference to elements and eventually JSDOM cleanup\r\n       */\r\n      dispose: function() {\r\n        this.removeTexture(this.cacheKey);\r\n        this.removeTexture(this.cacheKey + '_filtered');\r\n        this._cacheContext = undefined;\r\n        ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\r\n          fabric.util.cleanUpJsdomNode(this[element]);\r\n          this[element] = undefined;\r\n        }).bind(this));\r\n      },\r\n\r\n      /**\r\n       * Sets crossOrigin value (on an instance and corresponding image element)\r\n       * @return {fabric.Image} thisArg\r\n       * @chainable\r\n       */\r\n      setCrossOrigin: function(value) {\r\n        this.crossOrigin = value;\r\n        this._element.crossOrigin = value;\r\n\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns original size of an image\r\n       * @return {Object} Object with \"width\" and \"height\" properties\r\n       */\r\n      getOriginalSize: function() {\r\n        var element = this.getElement();\r\n        return {\r\n          width: element.naturalWidth || element.width,\r\n          height: element.naturalHeight || element.height\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _stroke: function(ctx) {\r\n        if (!this.stroke || this.strokeWidth === 0) {\r\n          return;\r\n        }\r\n        var w = this.width / 2, h = this.height / 2;\r\n        ctx.beginPath();\r\n        ctx.moveTo(-w, -h);\r\n        ctx.lineTo(w, -h);\r\n        ctx.lineTo(w, h);\r\n        ctx.lineTo(-w, h);\r\n        ctx.lineTo(-w, -h);\r\n        ctx.closePath();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderDashedStroke: function(ctx) {\r\n        var x = -this.width / 2,\r\n            y = -this.height / 2,\r\n            w = this.width,\r\n            h = this.height;\r\n\r\n        ctx.save();\r\n        this._setStrokeStyles(ctx, this);\r\n\r\n        ctx.beginPath();\r\n        fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\r\n        fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\r\n        ctx.closePath();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var filters = [];\r\n\r\n        this.filters.forEach(function(filterObj) {\r\n          if (filterObj) {\r\n            filters.push(filterObj.toObject());\r\n          }\r\n        });\r\n        var object = extend(\r\n          this.callSuper(\r\n            'toObject',\r\n            ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\r\n          ), {\r\n            src: this.getSrc(),\r\n            filters: filters,\r\n          });\r\n        if (this.resizeFilter) {\r\n          object.resizeFilter = this.resizeFilter.toObject();\r\n        }\r\n        return object;\r\n      },\r\n\r\n      /**\r\n       * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\r\n       * @return {Boolean}\r\n       */\r\n      hasCrop: function() {\r\n        return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\r\n      },\r\n\r\n      /* _TO_SVG_START_ */\r\n      /**\r\n       * Returns SVG representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2, clipPath = '';\r\n        if (this.hasCrop()) {\r\n          var clipPathId = fabric.Object.__uid++;\r\n          markup.push(\r\n            '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\r\n            '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\r\n            '</clipPath>\\n'\r\n          );\r\n          clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\r\n        }\r\n        markup.push('<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n');\r\n        var imageMarkup = ['\\t<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(true),\r\n          '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          // we're essentially moving origin of transformation from top/left corner to the center of the shape\r\n          // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\r\n          // so that object's center aligns with container's left/top\r\n          '\" width=\"', this._element.width || this._element.naturalWidth,\r\n          '\" height=\"', this._element.height || this._element.height,\r\n          '\"', clipPath,\r\n          '></image>\\n'];\r\n        if (this.paintFirst === 'fill') {\r\n          Array.prototype.push.apply(markup, imageMarkup);\r\n        }\r\n        if (this.stroke || this.strokeDashArray) {\r\n          var origFill = this.fill;\r\n          this.fill = null;\r\n          markup.push(\r\n            '\\t<rect ',\r\n            'x=\"', x, '\" y=\"', y,\r\n            '\" width=\"', this.width, '\" height=\"', this.height,\r\n            '\" style=\"', this.getSvgStyles(),\r\n            '\"/>\\n'\r\n          );\r\n          this.fill = origFill;\r\n        }\r\n        if (this.paintFirst !== 'fill') {\r\n          Array.prototype.push.apply(markup, imageMarkup);\r\n        }\r\n        markup.push('</g>\\n');\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n      /* _TO_SVG_END_ */\r\n\r\n      /**\r\n       * Returns source of an image\r\n       * @param {Boolean} filtered indicates if the src is needed for svg\r\n       * @return {String} Source of an image\r\n       */\r\n      getSrc: function(filtered) {\r\n        var element = filtered ? this._element : this._originalElement;\r\n        if (element) {\r\n          if (element.toDataURL) {\r\n            return element.toDataURL();\r\n          }\r\n          return element.src;\r\n        }\r\n        else {\r\n          return this.src || '';\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Sets source of an image\r\n       * @param {String} src Source string (URL)\r\n       * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Image} thisArg\r\n       * @chainable\r\n       */\r\n      setSrc: function(src, callback, options) {\r\n        fabric.util.loadImage(src, function(img) {\r\n          this.setElement(img, options);\r\n          this._setWidthHeight();\r\n          callback(this);\r\n        }, this, options && options.crossOrigin);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of an instance\r\n       * @return {String} String representation of an instance\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\r\n      },\r\n\r\n      applyResizeFilters: function() {\r\n        var filter = this.resizeFilter,\r\n            minimumScale = this.minimumScaleTrigger,\r\n            objectScale = this.getTotalObjectScaling(),\r\n            scaleX = objectScale.scaleX,\r\n            scaleY = objectScale.scaleY,\r\n            elementToFilter = this._filteredEl || this._originalElement;\r\n        if (this.group) {\r\n          this.set('dirty', true);\r\n        }\r\n        if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\r\n          this._element = elementToFilter;\r\n          this._filterScalingX = 1;\r\n          this._filterScalingY = 1;\r\n          this._lastScaleX = scaleX;\r\n          this._lastScaleY = scaleY;\r\n          return;\r\n        }\r\n        if (!fabric.filterBackend) {\r\n          fabric.filterBackend = fabric.initFilterBackend();\r\n        }\r\n        var canvasEl = fabric.util.createCanvasElement(),\r\n            cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\r\n            sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\r\n        canvasEl.width = sourceWidth;\r\n        canvasEl.height = sourceHeight;\r\n        this._element = canvasEl;\r\n        this._lastScaleX = filter.scaleX = scaleX;\r\n        this._lastScaleY = filter.scaleY = scaleY;\r\n        fabric.filterBackend.applyFilters(\r\n          [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\r\n        this._filterScalingX = canvasEl.width / this._originalElement.width;\r\n        this._filterScalingY = canvasEl.height / this._originalElement.height;\r\n      },\r\n\r\n      /**\r\n       * Applies filters assigned to this image (from \"filters\" array) or from filter param\r\n       * @method applyFilters\r\n       * @param {Array} filters to be applied\r\n       * @param {Boolean} forResizing specify if the filter operation is a resize operation\r\n       * @return {thisArg} return the fabric.Image object\r\n       * @chainable\r\n       */\r\n      applyFilters: function(filters) {\r\n\r\n        filters = filters || this.filters || [];\r\n        filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\r\n        if (this.group) {\r\n          this.set('dirty', true);\r\n        }\r\n\r\n        // needs to clear out or WEBGL will not resize correctly\r\n        this.removeTexture(this.cacheKey + '_filtered');\r\n\r\n        if (filters.length === 0) {\r\n          this._element = this._originalElement;\r\n          this._filteredEl = null;\r\n          this._filterScalingX = 1;\r\n          this._filterScalingY = 1;\r\n          return this;\r\n        }\r\n\r\n        var imgElement = this._originalElement,\r\n            sourceWidth = imgElement.naturalWidth || imgElement.width,\r\n            sourceHeight = imgElement.naturalHeight || imgElement.height;\r\n\r\n        if (this._element === this._originalElement) {\r\n          // if the element is the same we need to create a new element\r\n          var canvasEl = fabric.util.createCanvasElement();\r\n          canvasEl.width = sourceWidth;\r\n          canvasEl.height = sourceHeight;\r\n          this._element = canvasEl;\r\n          this._filteredEl = canvasEl;\r\n        }\r\n        else {\r\n          // clear the existing element to get new filter data\r\n          // also dereference the eventual resized _element\r\n          this._element = this._filteredEl;\r\n          this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\r\n          // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\r\n          this._lastScaleX = 1;\r\n          this._lastScaleY = 1;\r\n        }\r\n        if (!fabric.filterBackend) {\r\n          fabric.filterBackend = fabric.initFilterBackend();\r\n        }\r\n        fabric.filterBackend.applyFilters(\r\n          filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\r\n        if (this._originalElement.width !== this._element.width ||\r\n          this._originalElement.height !== this._element.height) {\r\n          this._filterScalingX = this._element.width / this._originalElement.width;\r\n          this._filterScalingY = this._element.height / this._originalElement.height;\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\r\n          this.applyResizeFilters();\r\n        }\r\n        this._stroke(ctx);\r\n        this._renderPaintInOrder(ctx);\r\n      },\r\n\r\n      _renderFill: function(ctx) {\r\n        var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY,\r\n            x = -w / 2, y = -h / 2, elementToDraw = this._element;\r\n        elementToDraw && ctx.drawImage(elementToDraw,\r\n          this.cropX * this._filterScalingX,\r\n          this.cropY * this._filterScalingY,\r\n          sW,\r\n          sH,\r\n          x, y, w, h);\r\n      },\r\n\r\n      /**\r\n       * @private, needed to check if image needs resize\r\n       */\r\n      _needsResize: function() {\r\n        var scale = this.getTotalObjectScaling();\r\n        return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _resetWidthHeight: function() {\r\n        this.set(this.getOriginalSize());\r\n      },\r\n\r\n      /**\r\n       * The Image class's initialization method. This method is automatically\r\n       * called by the constructor.\r\n       * @private\r\n       * @param {HTMLImageElement|String} element The element representing the image\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initElement: function(element, options) {\r\n        this.setElement(fabric.util.getById(element), options);\r\n        fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} [options] Options object\r\n       */\r\n      _initConfig: function(options) {\r\n        options || (options = { });\r\n        this.setOptions(options);\r\n        this._setWidthHeight(options);\r\n        if (this._element && this.crossOrigin) {\r\n          this._element.crossOrigin = this.crossOrigin;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Array} filters to be initialized\r\n       * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\r\n       */\r\n      _initFilters: function(filters, callback) {\r\n        if (filters && filters.length) {\r\n          fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\r\n            callback && callback(enlivenedObjects);\r\n          }, 'fabric.Image.filters');\r\n        }\r\n        else {\r\n          callback && callback();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Set the width and the height of the image object, using the element or the\r\n       * options.\r\n       * @param {Object} [options] Object with width/height properties\r\n       */\r\n      _setWidthHeight: function(options) {\r\n        options || (options = { });\r\n        var el = this.getElement();\r\n        this.width = options.width || el.naturalWidth || el.width || 0;\r\n        this.height = options.height || el.naturalHeight || el.height || 0;\r\n      },\r\n\r\n      /**\r\n       * Calculate offset for center and scale factor for the image in order to respect\r\n       * the preserveAspectRatio attribute\r\n       * @private\r\n       * @return {Object}\r\n       */\r\n      parsePreserveAspectRatioAttribute: function() {\r\n        var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\r\n            rWidth = this._element.width, rHeight = this._element.height,\r\n            scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\r\n            offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\r\n        if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\r\n          if (pAR.meetOrSlice === 'meet') {\r\n            scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\r\n            offset = (pWidth - rWidth * scaleX) / 2;\r\n            if (pAR.alignX === 'Min') {\r\n              offsetLeft = -offset;\r\n            }\r\n            if (pAR.alignX === 'Max') {\r\n              offsetLeft = offset;\r\n            }\r\n            offset = (pHeight - rHeight * scaleY) / 2;\r\n            if (pAR.alignY === 'Min') {\r\n              offsetTop = -offset;\r\n            }\r\n            if (pAR.alignY === 'Max') {\r\n              offsetTop = offset;\r\n            }\r\n          }\r\n          if (pAR.meetOrSlice === 'slice') {\r\n            scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\r\n            offset = rWidth - pWidth / scaleX;\r\n            if (pAR.alignX === 'Mid') {\r\n              cropX = offset / 2;\r\n            }\r\n            if (pAR.alignX === 'Max') {\r\n              cropX = offset;\r\n            }\r\n            offset = rHeight - pHeight / scaleY;\r\n            if (pAR.alignY === 'Mid') {\r\n              cropY = offset / 2;\r\n            }\r\n            if (pAR.alignY === 'Max') {\r\n              cropY = offset;\r\n            }\r\n            rWidth = pWidth / scaleX;\r\n            rHeight = pHeight / scaleY;\r\n          }\r\n        }\r\n        else {\r\n          scaleX = pWidth / rWidth;\r\n          scaleY = pHeight / rHeight;\r\n        }\r\n        return {\r\n          width: rWidth,\r\n          height: rHeight,\r\n          scaleX: scaleX,\r\n          scaleY: scaleY,\r\n          offsetLeft: offsetLeft,\r\n          offsetTop: offsetTop,\r\n          cropX: cropX,\r\n          cropY: cropY\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Default CSS class name for canvas\r\n     * @static\r\n     * @type String\r\n     * @default\r\n     */\r\n    fabric.Image.CSS_CANVAS = 'canvas-img';\r\n\r\n    /**\r\n     * Alias for getSrc\r\n     * @static\r\n     */\r\n    fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\r\n\r\n    /**\r\n     * Creates an instance of fabric.Image from its object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} callback Callback to invoke when an image instance is created\r\n     */\r\n    fabric.Image.fromObject = function(_object, callback) {\r\n      var object = fabric.util.object.clone(_object);\r\n      fabric.util.loadImage(object.src, function(img, error) {\r\n        if (error) {\r\n          callback && callback(null, error);\r\n          return;\r\n        }\r\n        fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\r\n          object.filters = filters || [];\r\n          fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\r\n            object.resizeFilter = resizeFilters[0];\r\n            var image = new fabric.Image(img, object);\r\n            callback(image);\r\n          });\r\n        });\r\n      }, null, object.crossOrigin);\r\n    };\r\n\r\n    /**\r\n     * Creates an instance of fabric.Image from an URL string\r\n     * @static\r\n     * @param {String} url URL to create an image from\r\n     * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\r\n     * @param {Object} [imgOptions] Options object\r\n     */\r\n    fabric.Image.fromURL = function(url, callback, imgOptions) {\r\n      fabric.util.loadImage(url, function(img) {\r\n        callback && callback(new fabric.Image(img, imgOptions));\r\n      }, null, imgOptions && imgOptions.crossOrigin);\r\n    };\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\r\n     * @static\r\n     * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\r\n     */\r\n    fabric.Image.ATTRIBUTE_NAMES =\r\n      fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\r\n\r\n    /**\r\n     * Returns {@link fabric.Image} instance from an SVG element\r\n     * @static\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} callback Callback to execute when fabric.Image object is created\r\n     * @return {fabric.Image} Instance of fabric.Image\r\n     */\r\n    fabric.Image.fromElement = function(element, callback, options) {\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\r\n      fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\r\n        extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * @private\r\n     * @return {Number} angle value\r\n     */\r\n    _getAngleValueForStraighten: function() {\r\n      var angle = this.angle % 360;\r\n      if (angle > 0) {\r\n        return Math.round((angle - 1) / 90) * 90;\r\n      }\r\n      return Math.round(angle / 90) * 90;\r\n    },\r\n\r\n    /**\r\n     * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    straighten: function() {\r\n      this.rotate(this._getAngleValueForStraighten());\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Same as {@link fabric.Object.prototype.straighten} but with animation\r\n     * @param {Object} callbacks Object with callback functions\r\n     * @param {Function} [callbacks.onComplete] Invoked on completion\r\n     * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    fxStraighten: function(callbacks) {\r\n      callbacks = callbacks || { };\r\n\r\n      var empty = function() { },\r\n          onComplete = callbacks.onComplete || empty,\r\n          onChange = callbacks.onChange || empty,\r\n          _this = this;\r\n\r\n      fabric.util.animate({\r\n        startValue: this.get('angle'),\r\n        endValue: this._getAngleValueForStraighten(),\r\n        duration: this.FX_DURATION,\r\n        onChange: function(value) {\r\n          _this.rotate(value);\r\n          onChange();\r\n        },\r\n        onComplete: function() {\r\n          _this.setCoords();\r\n          onComplete();\r\n        },\r\n      });\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Straightens object, then rerenders canvas\r\n     * @param {fabric.Object} object Object to straighten\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    straightenObject: function (object) {\r\n      object.straighten();\r\n      this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\r\n     * @param {fabric.Object} object Object to straighten\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    fxStraightenObject: function (object) {\r\n      object.fxStraighten({\r\n        onChange: this.requestRenderAllBound\r\n      });\r\n      return this;\r\n    }\r\n  });\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Tests if webgl supports certain precision\r\n     * @param {WebGL} Canvas WebGL context to test on\r\n     * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\r\n     * @returns {Boolean} Whether the user's browser WebGL supports given precision.\r\n     */\r\n    function testPrecision(gl, precision){\r\n      var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\r\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n      gl.shaderSource(fragmentShader, fragmentSource);\r\n      gl.compileShader(fragmentShader);\r\n      if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Indicate whether this filtering backend is supported by the user's browser.\r\n     * @param {Number} tileSize check if the tileSize is supported\r\n     * @returns {Boolean} Whether the user's browser supports WebGL.\r\n     */\r\n    fabric.isWebglSupported = function(tileSize) {\r\n      if (fabric.isLikelyNode) {\r\n        return false;\r\n      }\r\n      tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\r\n      var canvas = document.createElement('canvas');\r\n      var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n      var isSupported = false;\r\n      // eslint-disable-next-line\r\n      if (gl) {\r\n        fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n        isSupported = fabric.maxTextureSize >= tileSize;\r\n        var precisions = ['highp', 'mediump', 'lowp'];\r\n        for (var i = 0; i < 3; i++){\r\n          if (testPrecision(gl, precisions[i])){\r\n            fabric.webGlPrecision = precisions[i];\r\n            break;\r\n          };\r\n        }\r\n      }\r\n      this.isSupported = isSupported;\r\n      return isSupported;\r\n    };\r\n\r\n    fabric.WebglFilterBackend = WebglFilterBackend;\r\n\r\n    /**\r\n     * WebGL filter backend.\r\n     */\r\n    function WebglFilterBackend(options) {\r\n      if (options && options.tileSize) {\r\n        this.tileSize = options.tileSize;\r\n      }\r\n      this.setupGLContext(this.tileSize, this.tileSize);\r\n      this.captureGPUInfo();\r\n    };\r\n\r\n    WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\r\n\r\n      tileSize: 2048,\r\n\r\n      /**\r\n       * Experimental. This object is a sort of repository of help layers used to avoid\r\n       * of recreating them during frequent filtering. If you are previewing a filter with\r\n       * a slider you problably do not want to create help layers every filter step.\r\n       * in this object there will be appended some canvases, created once, resized sometimes\r\n       * cleared never. Clearing is left to the developer.\r\n       **/\r\n      resources: {\r\n\r\n      },\r\n\r\n      /**\r\n       * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\r\n       */\r\n      setupGLContext: function(width, height) {\r\n        this.dispose();\r\n        this.createWebGLCanvas(width, height);\r\n        // eslint-disable-next-line\r\n        this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\r\n        this.chooseFastestCopyGLTo2DMethod(width, height);\r\n      },\r\n\r\n      /**\r\n       * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\r\n       * putImageData is faster than drawImage for that specific operation.\r\n       */\r\n      chooseFastestCopyGLTo2DMethod: function(width, height) {\r\n        var canMeasurePerf = typeof window.performance !== 'undefined';\r\n        var canUseImageData;\r\n        try {\r\n          new ImageData(1, 1);\r\n          canUseImageData = true;\r\n        }\r\n        catch (e) {\r\n          canUseImageData = false;\r\n        }\r\n        // eslint-disable-next-line no-undef\r\n        var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\r\n        // eslint-disable-next-line no-undef\r\n        var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\r\n\r\n        if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\r\n          return;\r\n        }\r\n\r\n        var targetCanvas = fabric.util.createCanvasElement();\r\n        // eslint-disable-next-line no-undef\r\n        var imageBuffer = new ArrayBuffer(width * height * 4);\r\n        var testContext = {\r\n          imageBuffer: imageBuffer,\r\n          destinationWidth: width,\r\n          destinationHeight: height,\r\n          targetCanvas: targetCanvas\r\n        };\r\n        var startTime, drawImageTime, putImageDataTime;\r\n        targetCanvas.width = width;\r\n        targetCanvas.height = height;\r\n\r\n        startTime = window.performance.now();\r\n        copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\r\n        drawImageTime = window.performance.now() - startTime;\r\n\r\n        startTime = window.performance.now();\r\n        copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\r\n        putImageDataTime = window.performance.now() - startTime;\r\n\r\n        if (drawImageTime > putImageDataTime) {\r\n          this.imageBuffer = imageBuffer;\r\n          this.copyGLTo2D = copyGLTo2DPutImageData;\r\n        }\r\n        else {\r\n          this.copyGLTo2D = copyGLTo2DDrawImage;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Create a canvas element and associated WebGL context and attaches them as\r\n       * class properties to the GLFilterBackend class.\r\n       */\r\n      createWebGLCanvas: function(width, height) {\r\n        var canvas = fabric.util.createCanvasElement();\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        var glOptions = {\r\n              alpha: true,\r\n              premultipliedAlpha: false,\r\n              depth: false,\r\n              stencil: false,\r\n              antialias: false\r\n            },\r\n            gl = canvas.getContext('webgl', glOptions);\r\n        if (!gl) {\r\n          gl = canvas.getContext('experimental-webgl', glOptions);\r\n        }\r\n        if (!gl) {\r\n          return;\r\n        }\r\n        gl.clearColor(0, 0, 0, 0);\r\n        // this canvas can fire webglcontextlost and webglcontextrestored\r\n        this.canvas = canvas;\r\n        this.gl = gl;\r\n      },\r\n\r\n      /**\r\n       * Attempts to apply the requested filters to the source provided, drawing the filtered output\r\n       * to the provided target canvas.\r\n       *\r\n       * @param {Array} filters The filters to apply.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\r\n       * @param {Number} width The width of the source input.\r\n       * @param {Number} height The height of the source input.\r\n       * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n       * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\r\n       * omitted, caching will be skipped.\r\n       */\r\n      applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\r\n        var gl = this.gl;\r\n        var cachedTexture;\r\n        if (cacheKey) {\r\n          cachedTexture = this.getCachedTexture(cacheKey, source);\r\n        }\r\n        var pipelineState = {\r\n          originalWidth: source.width || source.originalWidth,\r\n          originalHeight: source.height || source.originalHeight,\r\n          sourceWidth: width,\r\n          sourceHeight: height,\r\n          destinationWidth: width,\r\n          destinationHeight: height,\r\n          context: gl,\r\n          sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\r\n          targetTexture: this.createTexture(gl, width, height),\r\n          originalTexture: cachedTexture ||\r\n            this.createTexture(gl, width, height, !cachedTexture && source),\r\n          passes: filters.length,\r\n          webgl: true,\r\n          aPosition: this.aPosition,\r\n          programCache: this.programCache,\r\n          pass: 0,\r\n          filterBackend: this,\r\n          targetCanvas: targetCanvas\r\n        };\r\n        var tempFbo = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\r\n        filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\r\n        resizeCanvasIfNeeded(pipelineState);\r\n        this.copyGLTo2D(gl, pipelineState);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.deleteTexture(pipelineState.sourceTexture);\r\n        gl.deleteTexture(pipelineState.targetTexture);\r\n        gl.deleteFramebuffer(tempFbo);\r\n        targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\r\n        return pipelineState;\r\n      },\r\n\r\n      /**\r\n       * The same as the applyFilter method but with additional logging of WebGL\r\n       * errors.\r\n       */\r\n      applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\r\n        // The following code is useful when debugging a specific issue but adds ~10x slowdown.\r\n        var gl = this.gl;\r\n        var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\r\n        var glError = gl.getError();\r\n        if (glError !== gl.NO_ERROR) {\r\n          var errorString = this.glErrorToString(gl, glError);\r\n          var error = new Error('WebGL Error ' + errorString);\r\n          error.glErrorCode = glError;\r\n          throw error;\r\n        }\r\n        return ret;\r\n      },\r\n\r\n      glErrorToString: function(context, errorCode) {\r\n        if (!context) {\r\n          return 'Context undefined for error code: ' + errorCode;\r\n        }\r\n        else if (typeof errorCode !== 'number') {\r\n          return 'Error code is not a number';\r\n        }\r\n        switch (errorCode) {\r\n          case context.NO_ERROR:\r\n            return 'NO_ERROR';\r\n          case context.INVALID_ENUM:\r\n            return 'INVALID_ENUM';\r\n          case context.INVALID_VALUE:\r\n            return 'INVALID_VALUE';\r\n          case context.INVALID_OPERATION:\r\n            return 'INVALID_OPERATION';\r\n          case context.INVALID_FRAMEBUFFER_OPERATION:\r\n            return 'INVALID_FRAMEBUFFER_OPERATION';\r\n          case context.OUT_OF_MEMORY:\r\n            return 'OUT_OF_MEMORY';\r\n          case context.CONTEXT_LOST_WEBGL:\r\n            return 'CONTEXT_LOST_WEBGL';\r\n          default:\r\n            return 'UNKNOWN_ERROR';\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Detach event listeners, remove references, and clean up caches.\r\n       */\r\n      dispose: function() {\r\n        if (this.canvas) {\r\n          this.canvas = null;\r\n          this.gl = null;\r\n        }\r\n        this.clearWebGLCaches();\r\n      },\r\n\r\n      /**\r\n       * Wipe out WebGL-related caches.\r\n       */\r\n      clearWebGLCaches: function() {\r\n        this.programCache = {};\r\n        this.textureCache = {};\r\n      },\r\n\r\n      /**\r\n       * Create a WebGL texture object.\r\n       *\r\n       * Accepts specific dimensions to initialize the textuer to or a source image.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\r\n       * @param {Number} width The width to initialize the texture at.\r\n       * @param {Number} height The height to initialize the texture.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\r\n       * @returns {WebGLTexture}\r\n       */\r\n      createTexture: function(gl, width, height, textureImageSource) {\r\n        var texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        if (textureImageSource) {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\r\n        }\r\n        else {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n        }\r\n        return texture;\r\n      },\r\n\r\n      /**\r\n       * Can be optionally used to get a texture from the cache array\r\n       *\r\n       * If an existing texture is not found, a new texture is created and cached.\r\n       *\r\n       * @param {String} uniqueId A cache key to use to find an existing texture.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\r\n       * texture cache entry if one does not already exist.\r\n       */\r\n      getCachedTexture: function(uniqueId, textureImageSource) {\r\n        if (this.textureCache[uniqueId]) {\r\n          return this.textureCache[uniqueId];\r\n        }\r\n        else {\r\n          var texture = this.createTexture(\r\n            this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\r\n          this.textureCache[uniqueId] = texture;\r\n          return texture;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Clear out cached resources related to a source image that has been\r\n       * filtered previously.\r\n       *\r\n       * @param {String} cacheKey The cache key provided when the source image was filtered.\r\n       */\r\n      evictCachesForKey: function(cacheKey) {\r\n        if (this.textureCache[cacheKey]) {\r\n          this.gl.deleteTexture(this.textureCache[cacheKey]);\r\n          delete this.textureCache[cacheKey];\r\n        }\r\n      },\r\n\r\n      copyGLTo2D: copyGLTo2DDrawImage,\r\n\r\n      /**\r\n       * Attempt to extract GPU information strings from a WebGL context.\r\n       *\r\n       * Useful information when debugging or blacklisting specific GPUs.\r\n       *\r\n       * @returns {Object} A GPU info object with renderer and vendor strings.\r\n       */\r\n      captureGPUInfo: function() {\r\n        if (this.gpuInfo) {\r\n          return this.gpuInfo;\r\n        }\r\n        var gl = this.gl;\r\n        var ext = gl.getExtension('WEBGL_debug_renderer_info');\r\n        var gpuInfo = { renderer: '', vendor: '' };\r\n        if (ext) {\r\n          var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\r\n          var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\r\n          if (renderer) {\r\n            gpuInfo.renderer = renderer.toLowerCase();\r\n          }\r\n          if (vendor) {\r\n            gpuInfo.vendor = vendor.toLowerCase();\r\n          }\r\n        }\r\n        this.gpuInfo = gpuInfo;\r\n        return gpuInfo;\r\n      },\r\n    };\r\n  })();\r\n\r\n  function resizeCanvasIfNeeded(pipelineState) {\r\n    var targetCanvas = pipelineState.targetCanvas,\r\n        width = targetCanvas.width, height = targetCanvas.height,\r\n        dWidth = pipelineState.destinationWidth,\r\n        dHeight = pipelineState.destinationHeight;\r\n\r\n    if (width !== dWidth || height !== dHeight) {\r\n      targetCanvas.width = dWidth;\r\n      targetCanvas.height = dHeight;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy an input WebGL canvas on to an output 2D canvas.\r\n   *\r\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\r\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\r\n   *\r\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\r\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n   */\r\n  function copyGLTo2DDrawImage(gl, pipelineState) {\r\n    var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\r\n        ctx = targetCanvas.getContext('2d');\r\n    ctx.translate(0, targetCanvas.height); // move it down again\r\n    ctx.scale(1, -1); // vertical flip\r\n    // where is my image on the big glcanvas?\r\n    var sourceY = glCanvas.height - targetCanvas.height;\r\n    ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\r\n      targetCanvas.width, targetCanvas.height);\r\n  }\r\n\r\n  /**\r\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\r\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\r\n   *\r\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\r\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n   */\r\n  function copyGLTo2DPutImageData(gl, pipelineState) {\r\n    var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\r\n        dWidth = pipelineState.destinationWidth,\r\n        dHeight = pipelineState.destinationHeight,\r\n        numBytes = dWidth * dHeight * 4;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\r\n    // eslint-disable-next-line no-undef\r\n    var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\r\n\r\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\r\n    var imgData = new ImageData(u8Clamped, dWidth, dHeight);\r\n    ctx.putImageData(imgData, 0, 0);\r\n  }\r\n\r\n\r\n  (function() {\r\n\r\n    'use strict';\r\n\r\n    var noop = function() {};\r\n\r\n    fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\r\n\r\n    /**\r\n     * Canvas 2D filter backend.\r\n     */\r\n    function Canvas2dFilterBackend() {};\r\n\r\n    Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\r\n      evictCachesForKey: noop,\r\n      dispose: noop,\r\n      clearWebGLCaches: noop,\r\n\r\n      /**\r\n       * Experimental. This object is a sort of repository of help layers used to avoid\r\n       * of recreating them during frequent filtering. If you are previewing a filter with\r\n       * a slider you probably do not want to create help layers every filter step.\r\n       * in this object there will be appended some canvases, created once, resized sometimes\r\n       * cleared never. Clearing is left to the developer.\r\n       **/\r\n      resources: {\r\n\r\n      },\r\n\r\n      /**\r\n       * Apply a set of filters against a source image and draw the filtered output\r\n       * to the provided destination canvas.\r\n       *\r\n       * @param {EnhancedFilter} filters The filter to apply.\r\n       * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\r\n       * @param {Number} sourceWidth The width of the source input.\r\n       * @param {Number} sourceHeight The height of the source input.\r\n       * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n       */\r\n      applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\r\n        var ctx = targetCanvas.getContext('2d');\r\n        ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\r\n        var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n        var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n        var pipelineState = {\r\n          sourceWidth: sourceWidth,\r\n          sourceHeight: sourceHeight,\r\n          imageData: imageData,\r\n          originalEl: sourceElement,\r\n          originalImageData: originalImageData,\r\n          canvasEl: targetCanvas,\r\n          ctx: ctx,\r\n          filterBackend: this,\r\n        };\r\n        filters.forEach(function(filter) { filter.applyTo(pipelineState); });\r\n        if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\r\n          targetCanvas.width = pipelineState.imageData.width;\r\n          targetCanvas.height = pipelineState.imageData.height;\r\n        }\r\n        ctx.putImageData(pipelineState.imageData, 0, 0);\r\n        return pipelineState;\r\n      },\r\n\r\n    };\r\n  })();\r\n\r\n\r\n  /**\r\n   * @namespace fabric.Image.filters\r\n   * @memberOf fabric.Image\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   */\r\n  fabric.Image.filters = fabric.Image.filters || { };\r\n\r\n  /**\r\n   * Root filter class from which all filter classes inherit from\r\n   * @class fabric.Image.filters.BaseFilter\r\n   * @memberOf fabric.Image.filters\r\n   */\r\n  fabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'BaseFilter',\r\n\r\n    /**\r\n     * Array of attributes to send with buffers. do not modify\r\n     * @private\r\n     */\r\n\r\n    vertexSource: 'attribute vec2 aPosition;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'vTexCoord = aPosition;\\n' +\r\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\r\n      '}',\r\n\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'void main() {\\n' +\r\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     */\r\n    initialize: function(options) {\r\n      if (options) {\r\n        this.setOptions(options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets filter's properties from options\r\n     * @param {Object} [options] Options object\r\n     */\r\n    setOptions: function(options) {\r\n      for (var prop in options) {\r\n        this[prop] = options[prop];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Compile this filter's shader program.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\r\n     * @param {String} fragmentSource fragmentShader source for compilation\r\n     * @param {String} vertexSource vertexShader source for compilation\r\n     */\r\n    createProgram: function(gl, fragmentSource, vertexSource) {\r\n      fragmentSource = fragmentSource || this.fragmentSource;\r\n      vertexSource = vertexSource || this.vertexSource;\r\n      if (fabric.webGlPrecision !== 'highp'){\r\n        fragmentSource = fragmentSource.replace(\r\n          /precision highp float/g,\r\n          'precision ' + fabric.webGlPrecision + ' float'\r\n        );\r\n      }\r\n      var vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n      gl.shaderSource(vertexShader, vertexSource);\r\n      gl.compileShader(vertexShader);\r\n      if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\r\n        throw new Error(\r\n          // eslint-disable-next-line prefer-template\r\n          'Vertex shader compile error for ' + this.type + ': ' +\r\n          gl.getShaderInfoLog(vertexShader)\r\n        );\r\n      }\r\n\r\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n      gl.shaderSource(fragmentShader, fragmentSource);\r\n      gl.compileShader(fragmentShader);\r\n      if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n        throw new Error(\r\n          // eslint-disable-next-line prefer-template\r\n          'Fragment shader compile error for ' + this.type + ': ' +\r\n          gl.getShaderInfoLog(fragmentShader)\r\n        );\r\n      }\r\n\r\n      var program = gl.createProgram();\r\n      gl.attachShader(program, vertexShader);\r\n      gl.attachShader(program, fragmentShader);\r\n      gl.linkProgram(program);\r\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        throw new Error(\r\n          // eslint-disable-next-line prefer-template\r\n          'Shader link error for \"${this.type}\" ' +\r\n          gl.getProgramInfoLog(program)\r\n        );\r\n      }\r\n\r\n      var attributeLocations = this.getAttributeLocations(gl, program);\r\n      var uniformLocations = this.getUniformLocations(gl, program) || { };\r\n      uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\r\n      uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\r\n      return {\r\n        program: program,\r\n        attributeLocations: attributeLocations,\r\n        uniformLocations: uniformLocations\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Return a map of attribute names to WebGLAttributeLocation objects.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\r\n     * @returns {Object} A map of attribute names to attribute locations.\r\n     */\r\n    getAttributeLocations: function(gl, program) {\r\n      return {\r\n        aPosition: gl.getAttribLocation(program, 'aPosition'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Return a map of uniform names to WebGLUniformLocation objects.\r\n     *\r\n     * Intended to be overridden by subclasses.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\r\n     * @returns {Object} A map of uniform names to uniform locations.\r\n     */\r\n    getUniformLocations: function (/* gl, program */) {\r\n      // in case i do not need any special uniform i need to return an empty object\r\n      return { };\r\n    },\r\n\r\n    /**\r\n     * Send attribute data from this filter to its shader program on the GPU.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {Object} attributeLocations A map of shader attribute names to their locations.\r\n     */\r\n    sendAttributeData: function(gl, attributeLocations, aPositionData) {\r\n      var attributeLocation = attributeLocations.aPosition;\r\n      var buffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n      gl.enableVertexAttribArray(attributeLocation);\r\n      gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\r\n      gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\r\n    },\r\n\r\n    _setupFrameBuffer: function(options) {\r\n      var gl = options.context, width, height;\r\n      if (options.passes > 1) {\r\n        width = options.destinationWidth;\r\n        height = options.destinationHeight;\r\n        if (options.sourceWidth !== width || options.sourceHeight !== height) {\r\n          gl.deleteTexture(options.targetTexture);\r\n          options.targetTexture = options.filterBackend.createTexture(gl, width, height);\r\n        }\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\r\n          options.targetTexture, 0);\r\n      }\r\n      else {\r\n        // draw last filter on canvas and not to framebuffer.\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.finish();\r\n      }\r\n    },\r\n\r\n    _swapTextures: function(options) {\r\n      options.passes--;\r\n      options.pass++;\r\n      var temp = options.targetTexture;\r\n      options.targetTexture = options.sourceTexture;\r\n      options.sourceTexture = temp;\r\n    },\r\n\r\n    /**\r\n     * Generic isNeutral implementation for one parameter based filters.\r\n     * Used only in image applyFilters to discard filters that will not have an effect\r\n     * on the image\r\n     * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\r\n     * @param {Object} options\r\n     **/\r\n    isNeutralState: function(/* options */) {\r\n      var main = this.mainParameter,\r\n          _class = fabric.Image.filters[this.type].prototype;\r\n      if (main) {\r\n        if (Array.isArray(_class[main])) {\r\n          for (var i = _class[main].length; i--;) {\r\n            if (this[main][i] !== _class[main][i]) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n        else {\r\n          return _class[main] === this[main];\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Apply this filter to the input image data provided.\r\n     *\r\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Number} options.passes The number of filters remaining to be executed\r\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    applyTo: function(options) {\r\n      if (options.webgl) {\r\n        this._setupFrameBuffer(options);\r\n        this.applyToWebGL(options);\r\n        this._swapTextures(options);\r\n      }\r\n      else {\r\n        this.applyTo2d(options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Retrieves the cached shader.\r\n     * @param {Object} options\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    retrieveShader: function(options) {\r\n      if (!options.programCache.hasOwnProperty(this.type)) {\r\n        options.programCache[this.type] = this.createProgram(options.context);\r\n      }\r\n      return options.programCache[this.type];\r\n    },\r\n\r\n    /**\r\n     * Apply this filter using webgl.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Number} options.passes The number of filters remaining to be executed\r\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n     * @param {WebGLTexture} options.originalTexture The texture of the original input image.\r\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    applyToWebGL: function(options) {\r\n      var gl = options.context;\r\n      var shader = this.retrieveShader(options);\r\n      if (options.pass === 0 && options.originalTexture) {\r\n        gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\r\n      }\r\n      else {\r\n        gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\r\n      }\r\n      gl.useProgram(shader.program);\r\n      this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\r\n\r\n      gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\r\n      gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\r\n\r\n      this.sendUniformData(gl, shader.uniformLocations);\r\n      gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\r\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n    },\r\n\r\n    bindAdditionalTexture: function(gl, texture, textureUnit) {\r\n      gl.activeTexture(textureUnit);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      // reset active texture to 0 as usual\r\n      gl.activeTexture(gl.TEXTURE0);\r\n    },\r\n\r\n    unbindAdditionalTexture: function(gl, textureUnit) {\r\n      gl.activeTexture(textureUnit);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n      gl.activeTexture(gl.TEXTURE0);\r\n    },\r\n\r\n    getMainParameter: function() {\r\n      return this[this.mainParameter];\r\n    },\r\n\r\n    setMainParameter: function(value) {\r\n      this[this.mainParameter] = value;\r\n    },\r\n\r\n    /**\r\n     * Send uniform data from this filter to its shader program on the GPU.\r\n     *\r\n     * Intended to be overridden by subclasses.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n     * @param {Object} uniformLocations A map of shader uniform names to their locations.\r\n     */\r\n    sendUniformData: function(/* gl, uniformLocations */) {\r\n      // Intentionally left blank.  Override me in subclasses.\r\n    },\r\n\r\n    /**\r\n     * If needed by a 2d filter, this functions can create an helper canvas to be used\r\n     * remember that options.targetCanvas is available for use till end of chain.\r\n     */\r\n    createHelpLayer: function(options) {\r\n      if (!options.helpLayer) {\r\n        var helpLayer = document.createElement('canvas');\r\n        helpLayer.width = options.sourceWidth;\r\n        helpLayer.height = options.sourceHeight;\r\n        options.helpLayer = helpLayer;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function() {\r\n      var object = { type: this.type }, mainP = this.mainParameter;\r\n      if (mainP) {\r\n        object[mainP] = this[mainP];\r\n      }\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * Returns a JSON representation of an instance\r\n     * @return {Object} JSON\r\n     */\r\n    toJSON: function() {\r\n      // delegate, not alias\r\n      return this.toObject();\r\n    }\r\n  });\r\n\r\n  fabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\r\n    var filter = new fabric.Image.filters[object.type](object);\r\n    callback && callback(filter);\r\n    return filter;\r\n  };\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Color Matrix filter class\r\n     * @class fabric.Image.filters.ColorMatrix\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\r\n     * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\r\n     * @example <caption>Kodachrome filter</caption>\r\n     * var filter = new fabric.Image.filters.ColorMatrix({\r\n     *  matrix: [\r\n         1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\r\n         -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\r\n         -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\r\n         0, 0, 0, 1, 0\r\n        ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'ColorMatrix',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'uniform mat4 uColorMatrix;\\n' +\r\n        'uniform vec4 uConstants;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'color *= uColorMatrix;\\n' +\r\n          'color += uConstants;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Colormatrix for pixels.\r\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\r\n       * outside the -1, 1 range.\r\n       * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n       * @param {Array} matrix array of 20 numbers.\r\n       * @default\r\n       */\r\n      matrix: [\r\n        1, 0, 0, 0, 0,\r\n        0, 1, 0, 0, 0,\r\n        0, 0, 1, 0, 0,\r\n        0, 0, 0, 1, 0\r\n      ],\r\n\r\n      mainParameter: 'matrix',\r\n\r\n      /**\r\n       * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\r\n       * to save some calculation\r\n       */\r\n      colorsOnly: true,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        // create a new array instead mutating the prototype with push\r\n        this.matrix = this.matrix.slice(0);\r\n      },\r\n\r\n      /**\r\n       * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data,\r\n            iLen = data.length,\r\n            m = this.matrix,\r\n            r, g, b, a, i, colorsOnly = this.colorsOnly;\r\n\r\n        for (i = 0; i < iLen; i += 4) {\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n          if (colorsOnly) {\r\n            data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\r\n            data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\r\n            data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\r\n          }\r\n          else {\r\n            a = data[i + 3];\r\n            data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\r\n            data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\r\n            data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\r\n            data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\r\n          uConstants: gl.getUniformLocation(program, 'uConstants'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var m = this.matrix,\r\n            matrix = [\r\n              m[0], m[1], m[2], m[3],\r\n              m[5], m[6], m[7], m[8],\r\n              m[10], m[11], m[12], m[13],\r\n              m[15], m[16], m[17], m[18]\r\n            ],\r\n            constants = [m[4], m[9], m[14], m[19]];\r\n        gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\r\n        gl.uniform4fv(uniformLocations.uConstants, constants);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] function to invoke after filter creation\r\n     * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\r\n     */\r\n    fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Brightness filter class\r\n     * @class fabric.Image.filters.Brightness\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Brightness({\r\n     *   brightness: 0.05\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Brightness',\r\n\r\n      /**\r\n       * Fragment source for the brightness program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uBrightness;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'color.rgb += uBrightness;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Brightness value, from -1 to 1.\r\n       * translated to -255 to 255 for 2d\r\n       * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n       * @param {Number} brightness\r\n       * @default\r\n       */\r\n      brightness: 0,\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'brightness',\r\n\r\n      /**\r\n      * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n      *\r\n      * @param {Object} options\r\n      * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n      */\r\n      applyTo2d: function(options) {\r\n        if (this.brightness === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i, len = data.length,\r\n            brightness = Math.round(this.brightness * 255);\r\n        for (i = 0; i < len; i += 4) {\r\n          data[i] = data[i] + brightness;\r\n          data[i + 1] = data[i + 1] + brightness;\r\n          data[i + 2] = data[i + 2] + brightness;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uBrightness: gl.getUniformLocation(program, 'uBrightness'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uBrightness, this.brightness);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\r\n     */\r\n    fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\r\n     * @class fabric.Image.filters.Convolute\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example <caption>Sharpen filter</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   matrix: [ 0, -1,  0,\r\n     *            -1,  5, -1,\r\n     *             0, -1,  0 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     * @example <caption>Blur filter</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   matrix: [ 1/9, 1/9, 1/9,\r\n     *             1/9, 1/9, 1/9,\r\n     *             1/9, 1/9, 1/9 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     * @example <caption>Emboss filter</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   matrix: [ 1,   1,  1,\r\n     *             1, 0.7, -1,\r\n     *            -1,  -1, -1 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     * @example <caption>Emboss filter with opaqueness</caption>\r\n     * var filter = new fabric.Image.filters.Convolute({\r\n     *   opaque: true,\r\n     *   matrix: [ 1,   1,  1,\r\n     *             1, 0.7, -1,\r\n     *            -1,  -1, -1 ]\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Convolute',\r\n\r\n      /*\r\n       * Opaque value (true/false)\r\n       */\r\n      opaque: false,\r\n\r\n      /*\r\n       * matrix for the filter, max 9x9\r\n       */\r\n      matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n\r\n      /**\r\n       * Fragment source for the brightness program\r\n       */\r\n      fragmentSource: {\r\n        Convolute_3_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[9];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_3_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[9];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n        Convolute_5_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[25];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_5_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[25];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n        Convolute_7_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[49];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_7_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[49];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n        Convolute_9_1: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[81];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n            'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\r\n                'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        Convolute_9_0: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform float uMatrix[81];\\n' +\r\n          'uniform float uStepW;\\n' +\r\n          'uniform float uStepH;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n            'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\r\n              'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\r\n                'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\r\n                'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\r\n              '}\\n' +\r\n            '}\\n' +\r\n            'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'gl_FragColor.a = alpha;\\n' +\r\n          '}',\r\n      },\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.Convolute.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Boolean} [options.opaque=false] Opaque value (true/false)\r\n       * @param {Array} [options.matrix] Filter matrix\r\n       */\r\n\r\n\r\n      /**\r\n      * Retrieves the cached shader.\r\n      * @param {Object} options\r\n      * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n      * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n      */\r\n      retrieveShader: function(options) {\r\n        var size = Math.sqrt(this.matrix.length);\r\n        var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\r\n        var shaderSource = this.fragmentSource[cacheKey];\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      /**\r\n       * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data,\r\n            weights = this.matrix,\r\n            side = Math.round(Math.sqrt(weights.length)),\r\n            halfSide = Math.floor(side / 2),\r\n            sw = imageData.width,\r\n            sh = imageData.height,\r\n            output = options.ctx.createImageData(sw, sh),\r\n            dst = output.data,\r\n            // go through the destination image pixels\r\n            alphaFac = this.opaque ? 1 : 0,\r\n            r, g, b, a, dstOff,\r\n            scx, scy, srcOff, wt,\r\n            x, y, cx, cy;\r\n\r\n        for (y = 0; y < sh; y++) {\r\n          for (x = 0; x < sw; x++) {\r\n            dstOff = (y * sw + x) * 4;\r\n            // calculate the weighed sum of the source image pixels that\r\n            // fall under the convolution matrix\r\n            r = 0; g = 0; b = 0; a = 0;\r\n\r\n            for (cy = 0; cy < side; cy++) {\r\n              for (cx = 0; cx < side; cx++) {\r\n                scy = y + cy - halfSide;\r\n                scx = x + cx - halfSide;\r\n\r\n                // eslint-disable-next-line max-depth\r\n                if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\r\n                  continue;\r\n                }\r\n\r\n                srcOff = (scy * sw + scx) * 4;\r\n                wt = weights[cy * side + cx];\r\n\r\n                r += data[srcOff] * wt;\r\n                g += data[srcOff + 1] * wt;\r\n                b += data[srcOff + 2] * wt;\r\n                // eslint-disable-next-line max-depth\r\n                if (!alphaFac) {\r\n                  a += data[srcOff + 3] * wt;\r\n                }\r\n              }\r\n            }\r\n            dst[dstOff] = r;\r\n            dst[dstOff + 1] = g;\r\n            dst[dstOff + 2] = b;\r\n            if (!alphaFac) {\r\n              dst[dstOff + 3] = a;\r\n            }\r\n            else {\r\n              dst[dstOff + 3] = data[dstOff + 3];\r\n            }\r\n          }\r\n        }\r\n        options.imageData = output;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uMatrix: gl.getUniformLocation(program, 'uMatrix'),\r\n          uOpaque: gl.getUniformLocation(program, 'uOpaque'),\r\n          uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\r\n          uSize: gl.getUniformLocation(program, 'uSize'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return extend(this.callSuper('toObject'), {\r\n          opaque: this.opaque,\r\n          matrix: this.matrix\r\n        });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\r\n     */\r\n    fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Grayscale image filter class\r\n     * @class fabric.Image.filters.Grayscale\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Grayscale();\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Grayscale',\r\n\r\n      fragmentSource: {\r\n        average: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'float average = (color.r + color.b + color.g) / 3.0;\\n' +\r\n            'gl_FragColor = vec4(average, average, average, color.a);\\n' +\r\n          '}',\r\n        lightness: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform int uMode;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\r\n            'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\r\n            'gl_FragColor = vec4(average, average, average, col.a);\\n' +\r\n          '}',\r\n        luminosity: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform int uMode;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\r\n            'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\r\n            'gl_FragColor = vec4(average, average, average, col.a);\\n' +\r\n          '}',\r\n      },\r\n\r\n\r\n      /**\r\n       * Grayscale mode, between 'average', 'lightness', 'luminosity'\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      mode: 'average',\r\n\r\n      mainParameter: 'mode',\r\n\r\n      /**\r\n       * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i,\r\n            len = data.length, value,\r\n            mode = this.mode;\r\n        for (i = 0; i < len; i += 4) {\r\n          if (mode === 'average') {\r\n            value = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          }\r\n          else if (mode === 'lightness') {\r\n            value = (Math.min(data[i], data[i + 1], data[i + 2]) +\r\n              Math.max(data[i], data[i + 1], data[i + 2])) / 2;\r\n          }\r\n          else if (mode === 'luminosity') {\r\n            value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\r\n          }\r\n          data[i] = value;\r\n          data[i + 1] = value;\r\n          data[i + 2] = value;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var cacheKey = this.type + '_' + this.mode;\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          var shaderSource = this.fragmentSource[this.mode];\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uMode: gl.getUniformLocation(program, 'uMode'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        // default average mode.\r\n        var mode = 1;\r\n        gl.uniform1i(uniformLocations.uMode, mode);\r\n      },\r\n\r\n      /**\r\n       * Grayscale filter isNeutralState implementation\r\n       * The filter is never neutral\r\n       * on the image\r\n       **/\r\n      isNeutralState: function() {\r\n        return false;\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\r\n     */\r\n    fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Invert filter class\r\n     * @class fabric.Image.filters.Invert\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Invert();\r\n     * object.filters.push(filter);\r\n     * object.applyFilters(canvas.renderAll.bind(canvas));\r\n     */\r\n    filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Invert',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform int uInvert;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'if (uInvert == 1) {\\n' +\r\n            'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Filter invert. if false, does nothing\r\n       * @param {Boolean} invert\r\n       * @default\r\n       */\r\n      invert: true,\r\n\r\n      mainParameter: 'invert',\r\n\r\n      /**\r\n       * Apply the Invert operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i,\r\n            len = data.length;\r\n        for (i = 0; i < len; i += 4) {\r\n          data[i] = 255 - data[i];\r\n          data[i + 1] = 255 - data[i + 1];\r\n          data[i + 2] = 255 - data[i + 2];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Invert filter isNeutralState implementation\r\n       * Used only in image applyFilters to discard filters that will not have an effect\r\n       * on the image\r\n       * @param {Object} options\r\n       **/\r\n      isNeutralState: function() {\r\n        return !this.invert;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uInvert: gl.getUniformLocation(program, 'uInvert'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1i(uniformLocations.uInvert, this.invert);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\r\n     */\r\n    fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Noise filter class\r\n     * @class fabric.Image.filters.Noise\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Noise({\r\n     *   noise: 700\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Noise',\r\n\r\n      /**\r\n       * Fragment source for the noise program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'uniform float uNoise;\\n' +\r\n        'uniform float uSeed;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'float rand(vec2 co, float seed, float vScale) {\\n' +\r\n          'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\r\n        '}\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'noise',\r\n\r\n      /**\r\n       * Noise value, from\r\n       * @param {Number} noise\r\n       * @default\r\n       */\r\n      noise: 0,\r\n\r\n      /**\r\n       * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        if (this.noise === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i, len = data.length,\r\n            noise = this.noise, rand;\r\n\r\n        for (i = 0, len = data.length; i < len; i += 4) {\r\n\r\n          rand = (0.5 - Math.random()) * noise;\r\n\r\n          data[i] += rand;\r\n          data[i + 1] += rand;\r\n          data[i + 2] += rand;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uNoise: gl.getUniformLocation(program, 'uNoise'),\r\n          uSeed: gl.getUniformLocation(program, 'uSeed'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\r\n        gl.uniform1f(uniformLocations.uSeed, Math.random());\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return extend(this.callSuper('toObject'), {\r\n          noise: this.noise\r\n        });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\r\n     */\r\n    fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Pixelate filter class\r\n     * @class fabric.Image.filters.Pixelate\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Pixelate({\r\n     *   blocksize: 8\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Pixelate',\r\n\r\n      blocksize: 4,\r\n\r\n      mainParameter: 'blocksize',\r\n\r\n      /**\r\n       * Fragment source for the Pixelate program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uBlocksize;\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'float blockW = uBlocksize * uStepW;\\n' +\r\n          'float blockH = uBlocksize * uStepW;\\n' +\r\n          'int posX = int(vTexCoord.x / blockW);\\n' +\r\n          'int posY = int(vTexCoord.y / blockH);\\n' +\r\n          'float fposX = float(posX);\\n' +\r\n          'float fposY = float(posY);\\n' +\r\n          'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\r\n          'vec4 color = texture2D(uTexture, squareCoords);\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data,\r\n            iLen = imageData.height,\r\n            jLen = imageData.width,\r\n            index, i, j, r, g, b, a,\r\n            _i, _j, _iLen, _jLen;\r\n\r\n        for (i = 0; i < iLen; i += this.blocksize) {\r\n          for (j = 0; j < jLen; j += this.blocksize) {\r\n\r\n            index = (i * 4) * jLen + (j * 4);\r\n\r\n            r = data[index];\r\n            g = data[index + 1];\r\n            b = data[index + 2];\r\n            a = data[index + 3];\r\n\r\n            _iLen = Math.min(i + this.blocksize, iLen);\r\n            _jLen = Math.min(j + this.blocksize, jLen);\r\n            for (_i = i; _i < _iLen; _i++) {\r\n              for (_j = j; _j < _jLen; _j++) {\r\n                index = (_i * 4) * jLen + (_j * 4);\r\n                data[index] = r;\r\n                data[index + 1] = g;\r\n                data[index + 2] = b;\r\n                data[index + 3] = a;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Indicate when the filter is not gonna apply changes to the image\r\n       **/\r\n      isNeutralState: function() {\r\n        return this.blocksize === 1;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\r\n          uStepW: gl.getUniformLocation(program, 'uStepW'),\r\n          uStepH: gl.getUniformLocation(program, 'uStepH'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\r\n     */\r\n    fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        extend = fabric.util.object.extend,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Remove white filter class\r\n     * @class fabric.Image.filters.RemoveColor\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.RemoveColor({\r\n     *   threshold: 0.2,\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'RemoveColor',\r\n\r\n      /**\r\n       * Color to remove, in any format understood by fabric.Color.\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      color: '#FFFFFF',\r\n\r\n      /**\r\n       * Fragment source for the brightness program\r\n       */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec4 uLow;\\n' +\r\n        'uniform vec4 uHigh;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\r\n          'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\r\n            'gl_FragColor.a = 0.0;\\n' +\r\n          '}\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * distance to actual color, as value up or down from each r,g,b\r\n       * between 0 and 1\r\n       **/\r\n      distance: 0.02,\r\n\r\n      /**\r\n       * For color to remove inside distance, use alpha channel for a smoother deletion\r\n       * NOT IMPLEMENTED YET\r\n       **/\r\n      useAlpha: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.RemoveWhite.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Number} [options.color=#RRGGBB] Threshold value\r\n       * @param {Number} [options.distance=10] Distance value\r\n       */\r\n\r\n      /**\r\n       * Applies filter to canvas element\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, i,\r\n            distance = this.distance * 255,\r\n            r, g, b,\r\n            source = new fabric.Color(this.color).getSource(),\r\n            lowC = [\r\n              source[0] - distance,\r\n              source[1] - distance,\r\n              source[2] - distance,\r\n            ],\r\n            highC = [\r\n              source[0] + distance,\r\n              source[1] + distance,\r\n              source[2] + distance,\r\n            ];\r\n\r\n\r\n        for (i = 0; i < data.length; i += 4) {\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n\r\n          if (r > lowC[0] &&\r\n              g > lowC[1] &&\r\n              b > lowC[2] &&\r\n              r < highC[0] &&\r\n              g < highC[1] &&\r\n              b < highC[2]) {\r\n            data[i + 3] = 0;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uLow: gl.getUniformLocation(program, 'uLow'),\r\n          uHigh: gl.getUniformLocation(program, 'uHigh'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var source = new fabric.Color(this.color).getSource(),\r\n            distance = parseFloat(this.distance),\r\n            lowC = [\r\n              0 + source[0] / 255 - distance,\r\n              0 + source[1] / 255 - distance,\r\n              0 + source[2] / 255 - distance,\r\n              1\r\n            ],\r\n            highC = [\r\n              source[0] / 255 + distance,\r\n              source[1] / 255 + distance,\r\n              source[2] / 255 + distance,\r\n              1\r\n            ];\r\n        gl.uniform4fv(uniformLocations.uLow, lowC);\r\n        gl.uniform4fv(uniformLocations.uHigh, highC);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return extend(this.callSuper('toObject'), {\r\n          color: this.color,\r\n          distance: this.distance\r\n        });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\r\n     */\r\n    fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    var matrices = {\r\n      Brownie: [\r\n        0.59970,0.34553,-0.27082,0,0.186,\r\n        -0.03770,0.86095,0.15059,0,-0.1449,\r\n        0.24113,-0.07441,0.44972,0,-0.02965,\r\n        0,0,0,1,0\r\n      ],\r\n      Vintage: [\r\n        0.62793,0.32021,-0.03965,0,0.03784,\r\n        0.02578,0.64411,0.03259,0,0.02926,\r\n        0.04660,-0.08512,0.52416,0,0.02023,\r\n        0,0,0,1,0\r\n      ],\r\n      Kodachrome: [\r\n        1.12855,-0.39673,-0.03992,0,0.24991,\r\n        -0.16404,1.08352,-0.05498,0,0.09698,\r\n        -0.16786,-0.56034,1.60148,0,0.13972,\r\n        0,0,0,1,0\r\n      ],\r\n      Technicolor: [\r\n        1.91252,-0.85453,-0.09155,0,0.04624,\r\n        -0.30878,1.76589,-0.10601,0,-0.27589,\r\n        -0.23110,-0.75018,1.84759,0,0.12137,\r\n        0,0,0,1,0\r\n      ],\r\n      Polaroid: [\r\n        1.438,-0.062,-0.062,0,0,\r\n        -0.122,1.378,-0.122,0,0,\r\n        -0.016,-0.016,1.483,0,0,\r\n        0,0,0,1,0\r\n      ],\r\n      Sepia: [\r\n        0.393, 0.769, 0.189, 0, 0,\r\n        0.349, 0.686, 0.168, 0, 0,\r\n        0.272, 0.534, 0.131, 0, 0,\r\n        0, 0, 0, 1, 0\r\n      ],\r\n      BlackWhite: [\r\n        1.5, 1.5, 1.5, 0, -1,\r\n        1.5, 1.5, 1.5, 0, -1,\r\n        1.5, 1.5, 1.5, 0, -1,\r\n        0, 0, 0, 1, 0,\r\n      ]\r\n    };\r\n\r\n    for (var key in matrices) {\r\n      filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\r\n\r\n        /**\r\n         * Filter type\r\n         * @param {String} type\r\n         * @default\r\n         */\r\n        type: key,\r\n\r\n        /**\r\n         * Colormatrix for the effect\r\n         * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\r\n         * outside the -1, 1 range.\r\n         * @param {Array} matrix array of 20 numbers.\r\n         * @default\r\n         */\r\n        matrix: matrices[key],\r\n\r\n        /**\r\n         * Lock the matrix export for this kind of static, parameter less filters.\r\n         */\r\n        mainParameter: false,\r\n        /**\r\n         * Lock the colormatrix on the color part, skipping alpha\r\n         */\r\n        colorsOnly: true,\r\n\r\n      });\r\n      fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n    }\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Color Blend filter class\r\n     * @class fabric.Image.filter.BlendColor\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @example\r\n     * var filter = new fabric.Image.filters.BlendColor({\r\n     *  color: '#000',\r\n     *  mode: 'multiply'\r\n     * });\r\n     *\r\n     * var filter = new fabric.Image.filters.BlendImage({\r\n     *  image: fabricImageObject,\r\n     *  mode: 'multiply',\r\n     *  alpha: 0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n\r\n    filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\r\n      type: 'BlendColor',\r\n\r\n      /**\r\n       * Color to make the blend operation with. default to a reddish color since black or white\r\n       * gives always strong result.\r\n       **/\r\n      color: '#F95C63',\r\n\r\n      /**\r\n       * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\r\n       * darken, lighten, overlay, exclusion, tint.\r\n       **/\r\n      mode: 'multiply',\r\n\r\n      /**\r\n       * alpha value. represent the strength of the blend color operation.\r\n       **/\r\n      alpha: 1,\r\n\r\n      /**\r\n       * Fragment source for the Multiply program\r\n       */\r\n      fragmentSource: {\r\n        multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\r\n        screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\r\n        add: 'gl_FragColor.rgb += uColor.rgb;\\n',\r\n        diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\r\n        subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\r\n        lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\r\n        darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\r\n        exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\r\n        overlay: 'if (uColor.r < 0.5) {\\n' +\r\n            'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\r\n          '}\\n' +\r\n          'if (uColor.g < 0.5) {\\n' +\r\n            'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\r\n          '}\\n' +\r\n          'if (uColor.b < 0.5) {\\n' +\r\n            'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\r\n          '} else {\\n' +\r\n            'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\r\n          '}\\n',\r\n        tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\r\n          'gl_FragColor.rgb += uColor.rgb;\\n',\r\n      },\r\n\r\n      /**\r\n       * build the fragment source for the filters, joining the common part with\r\n       * the specific one.\r\n       * @param {String} mode the mode of the filter, a key of this.fragmentSource\r\n       * @return {String} the source to be compiled\r\n       * @private\r\n       */\r\n      buildSource: function(mode) {\r\n        return 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform vec4 uColor;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n            'if (color.a > 0.0) {\\n' +\r\n              this.fragmentSource[mode] +\r\n            '}\\n' +\r\n          '}';\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var cacheKey = this.type + '_' + this.mode, shaderSource;\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          shaderSource = this.buildSource(this.mode);\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      /**\r\n       * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            data = imageData.data, iLen = data.length,\r\n            tr, tg, tb,\r\n            r, g, b,\r\n            source, alpha1 = 1 - this.alpha;\r\n\r\n        source = new fabric.Color(this.color).getSource();\r\n        tr = source[0] * this.alpha;\r\n        tg = source[1] * this.alpha;\r\n        tb = source[2] * this.alpha;\r\n\r\n        for (var i = 0; i < iLen; i += 4) {\r\n\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n\r\n          switch (this.mode) {\r\n            case 'multiply':\r\n              data[i] = r * tr / 255;\r\n              data[i + 1] = g * tg / 255;\r\n              data[i + 2] = b * tb / 255;\r\n              break;\r\n            case 'screen':\r\n              data[i] = 255 - (255 - r) * (255 - tr) / 255;\r\n              data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\r\n              data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\r\n              break;\r\n            case 'add':\r\n              data[i] = r + tr;\r\n              data[i + 1] = g + tg;\r\n              data[i + 2] = b + tb;\r\n              break;\r\n            case 'diff':\r\n            case 'difference':\r\n              data[i] = Math.abs(r - tr);\r\n              data[i + 1] = Math.abs(g - tg);\r\n              data[i + 2] = Math.abs(b - tb);\r\n              break;\r\n            case 'subtract':\r\n              data[i] = r - tr;\r\n              data[i + 1] = g - tg;\r\n              data[i + 2] = b - tb;\r\n              break;\r\n            case 'darken':\r\n              data[i] = Math.min(r, tr);\r\n              data[i + 1] = Math.min(g, tg);\r\n              data[i + 2] = Math.min(b, tb);\r\n              break;\r\n            case 'lighten':\r\n              data[i] = Math.max(r, tr);\r\n              data[i + 1] = Math.max(g, tg);\r\n              data[i + 2] = Math.max(b, tb);\r\n              break;\r\n            case 'overlay':\r\n              data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\r\n              data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\r\n              data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\r\n              break;\r\n            case 'exclusion':\r\n              data[i] = tr + r - ((2 * tr * r) / 255);\r\n              data[i + 1] = tg + g - ((2 * tg * g) / 255);\r\n              data[i + 2] = tb + b - ((2 * tb * b) / 255);\r\n              break;\r\n            case 'tint':\r\n              data[i] = tr + r * alpha1;\r\n              data[i + 1] = tg + g * alpha1;\r\n              data[i + 2] = tb + b * alpha1;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uColor: gl.getUniformLocation(program, 'uColor'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var source = new fabric.Color(this.color).getSource();\r\n        source[0] = this.alpha * source[0] / 255;\r\n        source[1] = this.alpha * source[1] / 255;\r\n        source[2] = this.alpha * source[2] / 255;\r\n        source[3] = this.alpha;\r\n        gl.uniform4fv(uniformLocations.uColor, source);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return {\r\n          type: this.type,\r\n          color: this.color,\r\n          mode: this.mode,\r\n          alpha: this.alpha\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\r\n     */\r\n    fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Image Blend filter class\r\n     * @class fabric.Image.filter.BlendImage\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @example\r\n     * var filter = new fabric.Image.filters.BlendColor({\r\n     *  color: '#000',\r\n     *  mode: 'multiply'\r\n     * });\r\n     *\r\n     * var filter = new fabric.Image.filters.BlendImage({\r\n     *  image: fabricImageObject,\r\n     *  mode: 'multiply',\r\n     *  alpha: 0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n\r\n    filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\r\n      type: 'BlendImage',\r\n\r\n      /**\r\n       * Color to make the blend operation with. default to a reddish color since black or white\r\n       * gives always strong result.\r\n       **/\r\n      image: null,\r\n\r\n      /**\r\n       * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\r\n       * darken, lighten, overlay, exclusion, tint.\r\n       **/\r\n      mode: 'multiply',\r\n\r\n      /**\r\n       * alpha value. represent the strength of the blend image operation.\r\n       * not implemented.\r\n       **/\r\n      alpha: 1,\r\n\r\n      vertexSource: 'attribute vec2 aPosition;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'varying vec2 vTexCoord2;\\n' +\r\n        'uniform mat3 uTransformMatrix;\\n' +\r\n        'void main() {\\n' +\r\n          'vTexCoord = aPosition;\\n' +\r\n          'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\r\n          'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Fragment source for the Multiply program\r\n       */\r\n      fragmentSource: {\r\n        multiply: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform sampler2D uImage;\\n' +\r\n          'uniform vec4 uColor;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'varying vec2 vTexCoord2;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\r\n            'color.rgba *= color2.rgba;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n        mask: 'precision highp float;\\n' +\r\n          'uniform sampler2D uTexture;\\n' +\r\n          'uniform sampler2D uImage;\\n' +\r\n          'uniform vec4 uColor;\\n' +\r\n          'varying vec2 vTexCoord;\\n' +\r\n          'varying vec2 vTexCoord2;\\n' +\r\n          'void main() {\\n' +\r\n            'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n            'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\r\n            'color.a = color2.a;\\n' +\r\n            'gl_FragColor = color;\\n' +\r\n          '}',\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var cacheKey = this.type + '_' + this.mode;\r\n        var shaderSource = this.fragmentSource[this.mode];\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      applyToWebGL: function(options) {\r\n        // load texture to blend.\r\n        var gl = options.context,\r\n            texture = this.createTexture(options.filterBackend, this.image);\r\n        this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\r\n        this.callSuper('applyToWebGL', options);\r\n        this.unbindAdditionalTexture(gl, gl.TEXTURE1);\r\n      },\r\n\r\n      createTexture: function(backend, image) {\r\n        return backend.getCachedTexture(image.cacheKey, image._element);\r\n      },\r\n\r\n      /**\r\n       * Calculate a transformMatrix to adapt the image to blend over\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      calculateMatrix: function() {\r\n        var image = this.image,\r\n            width = image._element.width,\r\n            height = image._element.height;\r\n        return [\r\n          1 / image.scaleX, 0, 0,\r\n          0, 1 / image.scaleY, 0,\r\n          -image.left / width, -image.top / height, 1\r\n        ];\r\n      },\r\n\r\n      /**\r\n       * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            resources = options.filterBackend.resources,\r\n            data = imageData.data, iLen = data.length,\r\n            width = imageData.width,\r\n            height = imageData.height,\r\n            tr, tg, tb, ta,\r\n            r, g, b, a,\r\n            canvas1, context, image = this.image, blendData;\r\n\r\n        if (!resources.blendImage) {\r\n          resources.blendImage = fabric.util.createCanvasElement();\r\n        }\r\n        canvas1 = resources.blendImage;\r\n        context = canvas1.getContext('2d');\r\n        if (canvas1.width !== width || canvas1.height !== height) {\r\n          canvas1.width = width;\r\n          canvas1.height = height;\r\n        }\r\n        else {\r\n          context.clearRect(0, 0, width, height);\r\n        }\r\n        context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\r\n        context.drawImage(image._element, 0, 0, width, height);\r\n        blendData = context.getImageData(0, 0, width, height).data;\r\n        for (var i = 0; i < iLen; i += 4) {\r\n\r\n          r = data[i];\r\n          g = data[i + 1];\r\n          b = data[i + 2];\r\n          a = data[i + 3];\r\n\r\n          tr = blendData[i];\r\n          tg = blendData[i + 1];\r\n          tb = blendData[i + 2];\r\n          ta = blendData[i + 3];\r\n\r\n          switch (this.mode) {\r\n            case 'multiply':\r\n              data[i] = r * tr / 255;\r\n              data[i + 1] = g * tg / 255;\r\n              data[i + 2] = b * tb / 255;\r\n              data[i + 3] = a * ta / 255;\r\n              break;\r\n            case 'mask':\r\n              data[i + 3] = ta;\r\n              break;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\r\n          uImage: gl.getUniformLocation(program, 'uImage'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var matrix = this.calculateMatrix();\r\n        gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\r\n        gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return {\r\n          type: this.type,\r\n          image: this.image && this.image.toObject(),\r\n          mode: this.mode,\r\n          alpha: this.alpha\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} callback to be invoked after filter creation\r\n     * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\r\n     */\r\n    fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\r\n      fabric.Image.fromObject(object.image, function(image) {\r\n        var options = fabric.util.object.clone(object);\r\n        options.image = image;\r\n        callback(new fabric.Image.filters.BlendImage(options));\r\n      });\r\n    };\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }), \r\n        pow = Math.pow, floor = Math.floor,\r\n        sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\r\n        ceil = Math.ceil,\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Resize image filter class\r\n     * @class fabric.Image.filters.Resize\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Resize();\r\n     * object.filters.push(filter);\r\n     * object.applyFilters(canvas.renderAll.bind(canvas));\r\n     */\r\n    filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Resize',\r\n\r\n      /**\r\n       * Resize type\r\n       * for webgl resizyType is just lanczos, for canvas2d can be:\r\n       * bilinear, hermite, sliceHacl, lanczos.\r\n       * @param {String} resizeType\r\n       * @default\r\n       */\r\n      resizeType: 'hermite',\r\n\r\n      /**\r\n       * Scale factor for resizing, x axis\r\n       * @param {Number} scaleX\r\n       * @default\r\n       */\r\n      scaleX: 1,\r\n\r\n      /**\r\n       * Scale factor for resizing, y axis\r\n       * @param {Number} scaleY\r\n       * @default\r\n       */\r\n      scaleY: 1,\r\n\r\n      /**\r\n       * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\r\n       * @param {Number} lanczosLobes\r\n       * @default\r\n       */\r\n      lanczosLobes: 3,\r\n\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uDelta: gl.getUniformLocation(program, 'uDelta'),\r\n          uTaps: gl.getUniformLocation(program, 'uTaps'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\r\n        gl.uniform1fv(uniformLocations.uTaps, this.taps);\r\n      },\r\n\r\n      /**\r\n       * Retrieves the cached shader.\r\n       * @param {Object} options\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      retrieveShader: function(options) {\r\n        var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\r\n        if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n          var fragmentShader = this.generateShader(filterWindow);\r\n          options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\r\n        }\r\n        return options.programCache[cacheKey];\r\n      },\r\n\r\n      getFilterWindow: function() {\r\n        var scale = this.tempScale;\r\n        return Math.ceil(this.lanczosLobes / scale);\r\n      },\r\n\r\n      getTaps: function() {\r\n        var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\r\n            filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\r\n        for (var i = 1; i <= filterWindow; i++) {\r\n          taps[i - 1] = lobeFunction(i * scale);\r\n        }\r\n        return taps;\r\n      },\r\n\r\n      /**\r\n       * Generate vertex and shader sources from the necessary steps numbers\r\n       * @param {Number} filterWindow\r\n       */\r\n      generateShader: function(filterWindow) {\r\n        var offsets = new Array(filterWindow),\r\n            fragmentShader = this.fragmentSourceTOP, filterWindow;\r\n\r\n        for (var i = 1; i <= filterWindow; i++) {\r\n          offsets[i - 1] = i + '.0 * uDelta';\r\n        }\r\n\r\n        fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\r\n        fragmentShader += 'void main() {\\n';\r\n        fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\r\n        fragmentShader += '  float sum = 1.0;\\n';\r\n\r\n        offsets.forEach(function(offset, i) {\r\n          fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\r\n          fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\r\n          fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\r\n        });\r\n        fragmentShader += '  gl_FragColor = color / sum;\\n';\r\n        fragmentShader += '}';\r\n        return fragmentShader;\r\n      },\r\n\r\n      fragmentSourceTOP: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec2 uDelta;\\n' +\r\n        'varying vec2 vTexCoord;\\n',\r\n\r\n      /**\r\n       * Apply the resize filter to the image\r\n       * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n       *\r\n       * @param {Object} options\r\n       * @param {Number} options.passes The number of filters remaining to be executed\r\n       * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n       * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n       * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      applyTo: function(options) {\r\n        if (options.webgl) {\r\n          options.passes++;\r\n          this.width = options.sourceWidth;\r\n          this.horizontal = true;\r\n          this.dW = Math.round(this.width * this.scaleX);\r\n          this.dH = options.sourceHeight;\r\n          this.tempScale = this.dW / this.width;\r\n          this.taps = this.getTaps();\r\n          options.destinationWidth = this.dW;\r\n          this._setupFrameBuffer(options);\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n          options.sourceWidth = options.destinationWidth;\r\n\r\n          this.height = options.sourceHeight;\r\n          this.horizontal = false;\r\n          this.dH = Math.round(this.height * this.scaleY);\r\n          this.tempScale = this.dH / this.height;\r\n          this.taps = this.getTaps();\r\n          options.destinationHeight = this.dH;\r\n          this._setupFrameBuffer(options);\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n          options.sourceHeight = options.destinationHeight;\r\n        }\r\n        else {\r\n          this.applyTo2d(options);\r\n        }\r\n      },\r\n\r\n      isNeutralState: function() {\r\n        return this.scaleX === 1 && this.scaleY === 1;\r\n      },\r\n\r\n      lanczosCreate: function(lobes) {\r\n        return function(x) {\r\n          if (x >= lobes || x <= -lobes) {\r\n            return 0.0;\r\n          }\r\n          if (x < 1.19209290E-07 && x > -1.19209290E-07) {\r\n            return 1.0;\r\n          }\r\n          x *= Math.PI;\r\n          var xx = x / lobes;\r\n          return (sin(x) / x) * sin(xx) / xx;\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Applies filter to canvas element\r\n       * @memberOf fabric.Image.filters.Resize.prototype\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} scaleX\r\n       * @param {Number} scaleY\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData,\r\n            scaleX = this.scaleX,\r\n            scaleY = this.scaleY;\r\n\r\n        this.rcpScaleX = 1 / scaleX;\r\n        this.rcpScaleY = 1 / scaleY;\r\n\r\n        var oW = imageData.width, oH = imageData.height,\r\n            dW = round(oW * scaleX), dH = round(oH * scaleY),\r\n            newData;\r\n\r\n        if (this.resizeType === 'sliceHack') {\r\n          newData = this.sliceByTwo(options, oW, oH, dW, dH);\r\n        }\r\n        else if (this.resizeType === 'hermite') {\r\n          newData = this.hermiteFastResize(options, oW, oH, dW, dH);\r\n        }\r\n        else if (this.resizeType === 'bilinear') {\r\n          newData = this.bilinearFiltering(options, oW, oH, dW, dH);\r\n        }\r\n        else if (this.resizeType === 'lanczos') {\r\n          newData = this.lanczosResize(options, oW, oH, dW, dH);\r\n        }\r\n        options.imageData = newData;\r\n      },\r\n\r\n      /**\r\n       * Filter sliceByTwo\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      sliceByTwo: function(options, oW, oH, dW, dH) {\r\n        var imageData = options.imageData,\r\n            mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\r\n            stepH = oH * mult, resources = fabric.filterBackend.resources,\r\n            tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\r\n        if (!resources.sliceByTwo) {\r\n          resources.sliceByTwo = document.createElement('canvas');\r\n        }\r\n        tmpCanvas = resources.sliceByTwo;\r\n        if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\r\n          tmpCanvas.width = oW * 1.5;\r\n          tmpCanvas.height = oH;\r\n        }\r\n        ctx = tmpCanvas.getContext('2d');\r\n        ctx.clearRect(0, 0, oW * 1.5, oH);\r\n        ctx.putImageData(imageData, 0, 0);\r\n\r\n        dW = floor(dW);\r\n        dH = floor(dH);\r\n\r\n        while (!doneW || !doneH) {\r\n          oW = stepW;\r\n          oH = stepH;\r\n          if (dW < floor(stepW * mult)) {\r\n            stepW = floor(stepW * mult);\r\n          }\r\n          else {\r\n            stepW = dW;\r\n            doneW = true;\r\n          }\r\n          if (dH < floor(stepH * mult)) {\r\n            stepH = floor(stepH * mult);\r\n          }\r\n          else {\r\n            stepH = dH;\r\n            doneH = true;\r\n          }\r\n          ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\r\n          sX = dX;\r\n          sY = dY;\r\n          dY += stepH;\r\n        }\r\n        return ctx.getImageData(sX, sY, dW, dH);\r\n      },\r\n\r\n      /**\r\n       * Filter lanczosResize\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      lanczosResize: function(options, oW, oH, dW, dH) {\r\n\r\n        function process(u) {\r\n          var v, i, weight, idx, a, red, green,\r\n              blue, alpha, fX, fY;\r\n          center.x = (u + 0.5) * ratioX;\r\n          icenter.x = floor(center.x);\r\n          for (v = 0; v < dH; v++) {\r\n            center.y = (v + 0.5) * ratioY;\r\n            icenter.y = floor(center.y);\r\n            a = 0; red = 0; green = 0; blue = 0; alpha = 0;\r\n            for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\r\n              if (i < 0 || i >= oW) {\r\n                continue;\r\n              }\r\n              fX = floor(1000 * abs(i - center.x));\r\n              if (!cacheLanc[fX]) {\r\n                cacheLanc[fX] = { };\r\n              }\r\n              for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\r\n                if (j < 0 || j >= oH) {\r\n                  continue;\r\n                }\r\n                fY = floor(1000 * abs(j - center.y));\r\n                if (!cacheLanc[fX][fY]) {\r\n                  cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\r\n                }\r\n                weight = cacheLanc[fX][fY];\r\n                if (weight > 0) {\r\n                  idx = (j * oW + i) * 4;\r\n                  a += weight;\r\n                  red += weight * srcData[idx];\r\n                  green += weight * srcData[idx + 1];\r\n                  blue += weight * srcData[idx + 2];\r\n                  alpha += weight * srcData[idx + 3];\r\n                }\r\n              }\r\n            }\r\n            idx = (v * dW + u) * 4;\r\n            destData[idx] = red / a;\r\n            destData[idx + 1] = green / a;\r\n            destData[idx + 2] = blue / a;\r\n            destData[idx + 3] = alpha / a;\r\n          }\r\n\r\n          if (++u < dW) {\r\n            return process(u);\r\n          }\r\n          else {\r\n            return destImg;\r\n          }\r\n        }\r\n\r\n        var srcData = options.imageData.data,\r\n            destImg = options.ctx.createImageData(dW, dH),\r\n            destData = destImg.data,\r\n            lanczos = this.lanczosCreate(this.lanczosLobes),\r\n            ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\r\n            rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\r\n            range2X = ceil(ratioX * this.lanczosLobes / 2),\r\n            range2Y = ceil(ratioY * this.lanczosLobes / 2),\r\n            cacheLanc = { }, center = { }, icenter = { };\r\n\r\n        return process(0);\r\n      },\r\n\r\n      /**\r\n       * bilinearFiltering\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      bilinearFiltering: function(options, oW, oH, dW, dH) {\r\n        var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\r\n            color, offset = 0, origPix, ratioX = this.rcpScaleX,\r\n            ratioY = this.rcpScaleY,\r\n            w4 = 4 * (oW - 1), img = options.imageData,\r\n            pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\r\n            destPixels = destImage.data;\r\n        for (i = 0; i < dH; i++) {\r\n          for (j = 0; j < dW; j++) {\r\n            x = floor(ratioX * j);\r\n            y = floor(ratioY * i);\r\n            xDiff = ratioX * j - x;\r\n            yDiff = ratioY * i - y;\r\n            origPix = 4 * (y * oW + x);\r\n\r\n            for (chnl = 0; chnl < 4; chnl++) {\r\n              a = pixels[origPix + chnl];\r\n              b = pixels[origPix + 4 + chnl];\r\n              c = pixels[origPix + w4 + chnl];\r\n              d = pixels[origPix + w4 + 4 + chnl];\r\n              color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\r\n                      c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\r\n              destPixels[offset++] = color;\r\n            }\r\n          }\r\n        }\r\n        return destImage;\r\n      },\r\n\r\n      /**\r\n       * hermiteFastResize\r\n       * @param {Object} canvasEl Canvas element to apply filter to\r\n       * @param {Number} oW Original Width\r\n       * @param {Number} oH Original Height\r\n       * @param {Number} dW Destination Width\r\n       * @param {Number} dH Destination Height\r\n       * @returns {ImageData}\r\n       */\r\n      hermiteFastResize: function(options, oW, oH, dW, dH) {\r\n        var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\r\n            ratioWHalf = ceil(ratioW / 2),\r\n            ratioHHalf = ceil(ratioH / 2),\r\n            img = options.imageData, data = img.data,\r\n            img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\r\n        for (var j = 0; j < dH; j++) {\r\n          for (var i = 0; i < dW; i++) {\r\n            var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\r\n                gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\r\n            for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\r\n              var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\r\n                  centerX = (i + 0.5) * ratioW, w0 = dy * dy;\r\n              for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\r\n                var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\r\n                    w = sqrt(w0 + dx * dx);\r\n                /* eslint-disable max-depth */\r\n                if (w > 1 && w < -1) {\r\n                  continue;\r\n                }\r\n                //hermite filter\r\n                weight = 2 * w * w * w - 3 * w * w + 1;\r\n                if (weight > 0) {\r\n                  dx = 4 * (xx + yy * oW);\r\n                  //alpha\r\n                  gxA += weight * data[dx + 3];\r\n                  weightsAlpha += weight;\r\n                  //colors\r\n                  if (data[dx + 3] < 255) {\r\n                    weight = weight * data[dx + 3] / 250;\r\n                  }\r\n                  gxR += weight * data[dx];\r\n                  gxG += weight * data[dx + 1];\r\n                  gxB += weight * data[dx + 2];\r\n                  weights += weight;\r\n                }\r\n                /* eslint-enable max-depth */\r\n              }\r\n            }\r\n            data2[x2] = gxR / weights;\r\n            data2[x2 + 1] = gxG / weights;\r\n            data2[x2 + 2] = gxB / weights;\r\n            data2[x2 + 3] = gxA / weightsAlpha;\r\n          }\r\n        }\r\n        return img2;\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function() {\r\n        return {\r\n          type: this.type,\r\n          scaleX: this.scaleX,\r\n          scaleY: this.scaleY,\r\n          resizeType: this.resizeType,\r\n          lanczosLobes: this.lanczosLobes\r\n        };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\r\n     */\r\n    fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Contrast filter class\r\n     * @class fabric.Image.filters.Contrast\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Contrast({\r\n     *   contrast: 40\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Contrast',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uContrast;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\r\n          'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      contrast: 0,\r\n\r\n      mainParameter: 'contrast',\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.Contrast.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\r\n       */\r\n\r\n      /**\r\n        * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\r\n        *\r\n        * @param {Object} options\r\n        * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n        */\r\n      applyTo2d: function(options) {\r\n        if (this.contrast === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData, i, len,\r\n            data = imageData.data, len = data.length,\r\n            contrast = Math.floor(this.contrast * 255),\r\n            contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n          data[i] = contrastF * (data[i] - 128) + 128;\r\n          data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\r\n          data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uContrast: gl.getUniformLocation(program, 'uContrast'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uContrast, this.contrast);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\r\n     */\r\n    fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Saturate filter class\r\n     * @class fabric.Image.filters.Saturation\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Saturation({\r\n     *   saturation: 100\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Saturation',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uSaturation;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'float rgMax = max(color.r, color.g);\\n' +\r\n          'float rgbMax = max(rgMax, color.b);\\n' +\r\n          'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\r\n          'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\r\n          'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n\r\n      saturation: 0,\r\n\r\n      mainParameter: 'saturation',\r\n\r\n      /**\r\n       * Constructor\r\n       * @memberOf fabric.Image.filters.Saturate.prototype\r\n       * @param {Object} [options] Options object\r\n       * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\r\n       */\r\n\r\n      /**\r\n       * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        if (this.saturation === 0) {\r\n          return;\r\n        }\r\n        var imageData = options.imageData,\r\n            data = imageData.data, len = data.length,\r\n            adjust = -this.saturation, i, max;\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n          max = Math.max(data[i], data[i + 1], data[i + 2]);\r\n          data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\r\n          data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\r\n          data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uSaturation: gl.getUniformLocation(program, 'uSaturation'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\r\n     */\r\n    fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Blur filter class\r\n     * @class fabric.Image.filters.Blur\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Blur({\r\n     *   blur: 0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     * canvas.renderAll();\r\n     */\r\n    filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\r\n\r\n      type: 'Blur',\r\n\r\n      /*\r\n  'gl_FragColor = vec4(0.0);',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\r\n  'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\r\n  */\r\n\r\n      /* eslint-disable max-len */\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec2 uDelta;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'const float nSamples = 15.0;\\n' +\r\n        'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\r\n        'float random(vec3 scale) {\\n' +\r\n          /* use the fragment position for a different seed per-pixel */\r\n          'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\r\n        '}\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0.0);\\n' +\r\n          'float total = 0.0;\\n' +\r\n          'float offset = random(v3offset);\\n' +\r\n          'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\r\n            'float percent = (t + offset - 0.5) / nSamples;\\n' +\r\n            'float weight = 1.0 - abs(percent);\\n' +\r\n            'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\r\n            'total += weight;\\n' +\r\n          '}\\n' +\r\n          'gl_FragColor = color / total;\\n' +\r\n        '}',\r\n      /* eslint-enable max-len */\r\n\r\n      /**\r\n       * blur value, in percentage of image dimensions.\r\n       * specific to keep the image blur constant at different resolutions\r\n       * range bewteen 0 and 1.\r\n       */\r\n      blur: 0,\r\n\r\n      mainParameter: 'blur',\r\n\r\n      applyTo: function(options) {\r\n        if (options.webgl) {\r\n          // this aspectRatio is used to give the same blur to vertical and horizontal\r\n          this.aspectRatio = options.sourceWidth / options.sourceHeight;\r\n          options.passes++;\r\n          this._setupFrameBuffer(options);\r\n          this.horizontal = true;\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n          this._setupFrameBuffer(options);\r\n          this.horizontal = false;\r\n          this.applyToWebGL(options);\r\n          this._swapTextures(options);\r\n        }\r\n        else {\r\n          this.applyTo2d(options);\r\n        }\r\n      },\r\n\r\n      applyTo2d: function(options) {\r\n        // paint canvasEl with current image data.\r\n        //options.ctx.putImageData(options.imageData, 0, 0);\r\n        options.imageData = this.simpleBlur(options);\r\n      },\r\n\r\n      simpleBlur: function(options) {\r\n        var resources = options.filterBackend.resources, canvas1, canvas2,\r\n            width = options.imageData.width,\r\n            height = options.imageData.height;\r\n\r\n        if (!resources.blurLayer1) {\r\n          resources.blurLayer1 = fabric.util.createCanvasElement();\r\n          resources.blurLayer2 = fabric.util.createCanvasElement();\r\n        }\r\n        canvas1 = resources.blurLayer1;\r\n        canvas2 = resources.blurLayer2;\r\n        if (canvas1.width !== width || canvas1.height !== height) {\r\n          canvas2.width = canvas1.width = width;\r\n          canvas2.height = canvas1.height = height;\r\n        }\r\n        var ctx1 = canvas1.getContext('2d'),\r\n            ctx2 = canvas2.getContext('2d'),\r\n            nSamples = 15,\r\n            random, percent, j, i,\r\n            blur = this.blur * 0.06 * 0.5;\r\n\r\n        // load first canvas\r\n        ctx1.putImageData(options.imageData, 0, 0);\r\n        ctx2.clearRect(0, 0, width, height);\r\n\r\n        for (i = -nSamples; i <= nSamples; i++) {\r\n          random = (Math.random() - 0.5) / 4;\r\n          percent = i / nSamples;\r\n          j = blur * percent * width + random;\r\n          ctx2.globalAlpha = 1 - Math.abs(percent);\r\n          ctx2.drawImage(canvas1, j, random);\r\n          ctx1.drawImage(canvas2, 0, 0);\r\n          ctx2.globalAlpha = 1;\r\n          ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        }\r\n        for (i = -nSamples; i <= nSamples; i++) {\r\n          random = (Math.random() - 0.5) / 4;\r\n          percent = i / nSamples;\r\n          j = blur * percent * height + random;\r\n          ctx2.globalAlpha = 1 - Math.abs(percent);\r\n          ctx2.drawImage(canvas1, random, j);\r\n          ctx1.drawImage(canvas2, 0, 0);\r\n          ctx2.globalAlpha = 1;\r\n          ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        }\r\n        options.ctx.drawImage(canvas1, 0, 0);\r\n        var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\r\n        ctx1.globalAlpha = 1;\r\n        ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\r\n        return newImageData;\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          delta: gl.getUniformLocation(program, 'uDelta'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        var delta = this.chooseRightDelta();\r\n        gl.uniform2fv(uniformLocations.delta, delta);\r\n      },\r\n\r\n      /**\r\n       * choose right value of image percentage to blur with\r\n       * @returns {Array} a numeric array with delta values\r\n       */\r\n      chooseRightDelta: function() {\r\n        var blurScale = 1, delta = [0, 0], blur;\r\n        if (this.horizontal) {\r\n          if (this.aspectRatio > 1) {\r\n            // image is wide, i want to shrink radius horizontal\r\n            blurScale = 1 / this.aspectRatio;\r\n          }\r\n        }\r\n        else {\r\n          if (this.aspectRatio < 1) {\r\n            // image is tall, i want to shrink radius vertical\r\n            blurScale = this.aspectRatio;\r\n          }\r\n        }\r\n        blur = blurScale * this.blur * 0.12;\r\n        if (this.horizontal) {\r\n          delta[0] = blur;\r\n        }\r\n        else {\r\n          delta[1] = blur;\r\n        }\r\n        return delta;\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Deserialize a JSON definition of a BlurFilter into a concrete instance.\r\n     */\r\n    filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * Gamma filter class\r\n     * @class fabric.Image.filters.Gamma\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.Gamma({\r\n     *   brightness: 200\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'Gamma',\r\n\r\n      fragmentSource: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec3 uGamma;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'vec3 correction = (1.0 / uGamma);\\n' +\r\n          'color.r = pow(color.r, correction.r);\\n' +\r\n          'color.g = pow(color.g, correction.g);\\n' +\r\n          'color.b = pow(color.b, correction.b);\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n          'gl_FragColor.rgb *= color.a;\\n' +\r\n        '}',\r\n\r\n      /**\r\n       * Gamma array value, from 0.01 to 2.2.\r\n       * @param {Array} gamma\r\n       * @default\r\n       */\r\n      gamma: [1, 1, 1],\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'gamma',\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        this.gamma = [1, 1, 1];\r\n        filters.BaseFilter.prototype.initialize.call(this, options);\r\n      },\r\n\r\n      /**\r\n       * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\r\n       *\r\n       * @param {Object} options\r\n       * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n       */\r\n      applyTo2d: function(options) {\r\n        var imageData = options.imageData, data = imageData.data,\r\n            gamma = this.gamma, len = data.length,\r\n            rInv = 1 / gamma[0], gInv = 1 / gamma[1],\r\n            bInv = 1 / gamma[2], i;\r\n\r\n        if (!this.rVals) {\r\n          // eslint-disable-next-line\r\n          this.rVals = new Uint8Array(256);\r\n          // eslint-disable-next-line\r\n          this.gVals = new Uint8Array(256);\r\n          // eslint-disable-next-line\r\n          this.bVals = new Uint8Array(256);\r\n        }\r\n\r\n        // This is an optimization - pre-compute a look-up table for each color channel\r\n        // instead of performing these pow calls for each pixel in the image.\r\n        for (i = 0, len = 256; i < len; i++) {\r\n          this.rVals[i] = Math.pow(i / 255, rInv) * 255;\r\n          this.gVals[i] = Math.pow(i / 255, gInv) * 255;\r\n          this.bVals[i] = Math.pow(i / 255, bInv) * 255;\r\n        }\r\n        for (i = 0, len = data.length; i < len; i += 4) {\r\n          data[i] = this.rVals[data[i]];\r\n          data[i + 1] = this.gVals[data[i + 1]];\r\n          data[i + 2] = this.bVals[data[i + 2]];\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return WebGL uniform locations for this filter's shader.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n       */\r\n      getUniformLocations: function(gl, program) {\r\n        return {\r\n          uGamma: gl.getUniformLocation(program, 'uGamma'),\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Send data from this filter to its shader program's uniforms.\r\n       *\r\n       * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n       * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n       */\r\n      sendUniformData: function(gl, uniformLocations) {\r\n        gl.uniform3fv(uniformLocations.uGamma, this.gamma);\r\n      },\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\r\n     */\r\n    fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * A container class that knows how to apply a sequence of filters to an input image.\r\n     */\r\n    filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\r\n\r\n      type: 'Composed',\r\n\r\n      /**\r\n       * A non sparse array of filters to apply\r\n       */\r\n      subFilters: [],\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {Object} [options] Options object\r\n       */\r\n      initialize: function(options) {\r\n        this.callSuper('initialize', options);\r\n        // create a new array instead mutating the prototype with push\r\n        this.subFilters = this.subFilters.slice(0);\r\n      },\r\n\r\n      /**\r\n       * Apply this container's filters to the input image provided.\r\n       *\r\n       * @param {Object} options\r\n       * @param {Number} options.passes The number of filters remaining to be applied.\r\n       */\r\n      applyTo: function(options) {\r\n        options.passes += this.subFilters.length - 1;\r\n        this.subFilters.forEach(function(filter) {\r\n          filter.applyTo(options);\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Serialize this filter into JSON.\r\n       *\r\n       * @returns {Object} A JSON representation of this filter.\r\n       */\r\n      toObject: function() {\r\n        return fabric.util.object.extend(this.callSuper('toObject'), {\r\n          subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\r\n        });\r\n      },\r\n\r\n      isNeutralState: function() {\r\n        return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\r\n     */\r\n    fabric.Image.filters.Composed.fromObject = function(object, callback) {\r\n      var filters = object.subFilters || [],\r\n          subFilters = filters.map(function(filter) {\r\n            return new fabric.Image.filters[filter.type](filter);\r\n          }),\r\n          instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\r\n      callback && callback(instance);\r\n      return instance;\r\n    };\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric  = global.fabric || (global.fabric = { }),\r\n        filters = fabric.Image.filters,\r\n        createClass = fabric.util.createClass;\r\n\r\n    /**\r\n     * HueRotation filter class\r\n     * @class fabric.Image.filters.HueRotation\r\n     * @memberOf fabric.Image.filters\r\n     * @extends fabric.Image.filters.BaseFilter\r\n     * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\r\n     * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n     * @example\r\n     * var filter = new fabric.Image.filters.HueRotation({\r\n     *   rotation: -0.5\r\n     * });\r\n     * object.filters.push(filter);\r\n     * object.applyFilters();\r\n     */\r\n    filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: 'HueRotation',\r\n\r\n      /**\r\n       * HueRotation value, from -1 to 1.\r\n       * the unit is radians\r\n       * @param {Number} myParameter\r\n       * @default\r\n       */\r\n      rotation: 0,\r\n\r\n      /**\r\n       * Describe the property that is the filter parameter\r\n       * @param {String} m\r\n       * @default\r\n       */\r\n      mainParameter: 'rotation',\r\n\r\n      calculateMatrix: function() {\r\n        var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\r\n            aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\r\n        this.matrix = [\r\n          1, 0, 0, 0, 0,\r\n          0, 1, 0, 0, 0,\r\n          0, 0, 1, 0, 0,\r\n          0, 0, 0, 1, 0\r\n        ];\r\n        this.matrix[0] = cos + OneMinusCos / 3;\r\n        this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\r\n        this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\r\n        this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\r\n        this.matrix[6] = cos + aThird * OneMinusCos;\r\n        this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\r\n        this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\r\n        this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\r\n        this.matrix[12] = cos + aThird * OneMinusCos;\r\n      },\r\n\r\n      /**\r\n       * HueRotation isNeutralState implementation\r\n       * Used only in image applyFilters to discard filters that will not have an effect\r\n       * on the image\r\n       * @param {Object} options\r\n       **/\r\n      isNeutralState: function(options) {\r\n        this.calculateMatrix();\r\n        return filters.BaseFilter.prototype.isNeutralState.call(this, options);\r\n      },\r\n\r\n      /**\r\n       * Apply this filter to the input image data provided.\r\n       *\r\n       * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n       *\r\n       * @param {Object} options\r\n       * @param {Number} options.passes The number of filters remaining to be executed\r\n       * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n       * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n       * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n       * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n       */\r\n      applyTo: function(options) {\r\n        this.calculateMatrix();\r\n        filters.BaseFilter.prototype.applyTo.call(this, options);\r\n      },\r\n\r\n    });\r\n\r\n    /**\r\n     * Returns filter instance from an object representation\r\n     * @static\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] to be invoked after filter creation\r\n     * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\r\n     */\r\n    fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    var //fabric = global.fabric || (global.fabric = { }),\r\n        clone = fabric.util.object.clone;\r\n\r\n    if (fabric.Text) {\r\n      fabric.warn('fabric.Text is already defined');\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Text class\r\n     * @class fabric.Text\r\n     * @extends fabric.Object\r\n     * @return {fabric.Text} thisArg\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\r\n     * @see {@link fabric.Text#initialize} for constructor definition\r\n     */\r\n    fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\r\n\r\n      /**\r\n       * Properties which when set cause object to change dimensions\r\n       * @type Array\r\n       * @private\r\n       */\r\n      _dimensionAffectingProps: [\r\n        'fontSize',\r\n        'fontWeight',\r\n        'fontFamily',\r\n        'fontStyle',\r\n        'lineHeight',\r\n        'text',\r\n        'charSpacing',\r\n        'textAlign',\r\n        'styles',\r\n      ],\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _reNewline: /\\r?\\n/,\r\n\r\n      /**\r\n       * Use this regular expression to filter for whitespaces that is not a new line.\r\n       * Mostly used when text is 'justify' aligned.\r\n       * @private\r\n       */\r\n      _reSpacesAndTabs: /[ \\t\\r]/g,\r\n\r\n      /**\r\n       * Use this regular expression to filter for whitespace that is not a new line.\r\n       * Mostly used when text is 'justify' aligned.\r\n       * @private\r\n       */\r\n      _reSpaceAndTab: /[ \\t\\r]/,\r\n\r\n      /**\r\n       * Use this regular expression to filter consecutive groups of non spaces.\r\n       * Mostly used when text is 'justify' aligned.\r\n       * @private\r\n       */\r\n      _reWords: /\\S+/g,\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type:                 'text',\r\n\r\n      /**\r\n       * Font size (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      fontSize:             40,\r\n\r\n      /**\r\n       * Font weight (e.g. bold, normal, 400, 600, 800)\r\n       * @type {(Number|String)}\r\n       * @default\r\n       */\r\n      fontWeight:           'normal',\r\n\r\n      /**\r\n       * Font family\r\n       * @type String\r\n       * @default\r\n       */\r\n      fontFamily:           'Times New Roman',\r\n\r\n      /**\r\n       * Text decoration underline.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      underline:       false,\r\n\r\n      /**\r\n       * Text decoration overline.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      overline:       false,\r\n\r\n      /**\r\n       * Text decoration linethrough.\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      linethrough:       false,\r\n\r\n      /**\r\n       * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\r\n       * \"justify-left\", \"justify-center\" or \"justify-right\".\r\n       * @type String\r\n       * @default\r\n       */\r\n      textAlign:            'left',\r\n\r\n      /**\r\n       * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\r\n       * @type String\r\n       * @default\r\n       */\r\n      fontStyle:            'normal',\r\n\r\n      /**\r\n       * Line height\r\n       * @type Number\r\n       * @default\r\n       */\r\n      lineHeight:           1.16,\r\n\r\n      /**\r\n       * Superscript schema object (minimum overlap)\r\n       * @type {Object}\r\n       * @default\r\n       */\r\n      superscript: {\r\n        size:      0.60, // fontSize factor\r\n        baseline: -0.35  // baseline-shift factor (upwards)\r\n      },\r\n\r\n      /**\r\n       * Subscript schema object (minimum overlap)\r\n       * @type {Object}\r\n       * @default\r\n       */\r\n      subscript: {\r\n        size:      0.60, // fontSize factor\r\n        baseline:  0.11  // baseline-shift factor (downwards)\r\n      },\r\n\r\n      /**\r\n       * Background color of text lines\r\n       * @type String\r\n       * @default\r\n       */\r\n      textBackgroundColor:  '',\r\n\r\n      /**\r\n       * List of properties to consider when checking if\r\n       * state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n       * as well as for history (undo/redo) purposes\r\n       * @type Array\r\n       */\r\n      stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\r\n        'fontWeight',\r\n        'fontSize',\r\n        'text',\r\n        'underline',\r\n        'overline',\r\n        'linethrough',\r\n        'textAlign',\r\n        'fontStyle',\r\n        'lineHeight',\r\n        'textBackgroundColor',\r\n        'charSpacing',\r\n        'styles'),\r\n\r\n      /**\r\n       * List of properties to consider when checking if cache needs refresh\r\n       * @type Array\r\n       */\r\n      cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\r\n        'fontWeight',\r\n        'fontSize',\r\n        'text',\r\n        'underline',\r\n        'overline',\r\n        'linethrough',\r\n        'textAlign',\r\n        'fontStyle',\r\n        'lineHeight',\r\n        'textBackgroundColor',\r\n        'charSpacing',\r\n        'styles'),\r\n\r\n      /**\r\n       * When defined, an object is rendered via stroke and this property specifies its color.\r\n       * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\r\n       * @type String\r\n       * @default\r\n       */\r\n      stroke:               null,\r\n\r\n      /**\r\n       * Shadow object representing shadow of this shape.\r\n       * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\r\n       * @type fabric.Shadow\r\n       * @default\r\n       */\r\n      shadow:               null,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _fontSizeFraction: 0.222,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      offsets: {\r\n        underline: 0.10,\r\n        linethrough: -0.315,\r\n        overline: -0.88\r\n      },\r\n\r\n      /**\r\n       * Text Line proportion to font Size (in pixels)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      _fontSizeMult:             1.13,\r\n\r\n      /**\r\n       * additional space between characters\r\n       * expressed in thousands of em unit\r\n       * @type Number\r\n       * @default\r\n       */\r\n      charSpacing:             0,\r\n\r\n      /**\r\n       * Object containing character styles - top-level properties -> line numbers,\r\n       * 2nd-level properties - charater numbers\r\n       * @type Object\r\n       * @default\r\n       */\r\n      styles: null,\r\n\r\n      /**\r\n       * Reference to a context to measure text char or couple of chars\r\n       * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\r\n       * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\r\n       * text object created.\r\n       * @type {CanvasRenderingContext2D}\r\n       * @default\r\n       */\r\n      _measuringContext: null,\r\n\r\n      /**\r\n       * Baseline shift, stlyes only, keep at 0 for the main text object\r\n       * @type {Number}\r\n       * @default\r\n       */\r\n      deltaY: 0,\r\n\r\n      /**\r\n       * Array of properties that define a style unit (of 'styles').\r\n       * @type {Array}\r\n       * @default\r\n       */\r\n      _styleProperties: [\r\n        'stroke',\r\n        'strokeWidth',\r\n        'fill',\r\n        'fontFamily',\r\n        'fontSize',\r\n        'fontWeight',\r\n        'fontStyle',\r\n        'underline',\r\n        'overline',\r\n        'linethrough',\r\n        'deltaY',\r\n        'textBackgroundColor',\r\n      ],\r\n\r\n      /**\r\n       * contains characters bounding boxes\r\n       */\r\n      __charBounds: [],\r\n\r\n      /**\r\n       * use this size when measuring text. To avoid IE11 rounding errors\r\n       * @type {Number}\r\n       * @default\r\n       * @readonly\r\n       * @private\r\n       */\r\n      CACHE_FONT_SIZE: 400,\r\n\r\n      /**\r\n       * contains the min text width to avoid getting 0\r\n       * @type {Number}\r\n       * @default\r\n       */\r\n      MIN_TEXT_WIDTH: 2,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {String} text Text string\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Text} thisArg\r\n       */\r\n      initialize: function(text, options) {\r\n        this.styles = options ? (options.styles || { }) : { };\r\n        this.text = text;\r\n        this.__skipDimension = true;\r\n        this.callSuper('initialize', options);\r\n        this.__skipDimension = false;\r\n        this.initDimensions();\r\n        this.setCoords();\r\n        this.setupState({ propertySet: '_dimensionAffectingProps' });\r\n      },\r\n\r\n      /**\r\n       * Return a contex for measurement of text string.\r\n       * if created it gets stored for reuse\r\n       * @param {String} text Text string\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.Text} thisArg\r\n       */\r\n      getMeasuringContext: function() {\r\n        // if we did not return we have to measure something.\r\n        if (!fabric._measuringContext) {\r\n          fabric._measuringContext = this.canvas && this.canvas.contextCache ||\r\n            fabric.util.createCanvasElement().getContext('2d');\r\n        }\r\n        return fabric._measuringContext;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * Divides text into lines of text and lines of graphemes.\r\n       */\r\n      _splitText: function() {\r\n        var newLines = this._splitTextIntoLines(this.text);\r\n        this.textLines = newLines.lines;\r\n        this._textLines = newLines.graphemeLines;\r\n        this._unwrappedTextLines = newLines._unwrappedLines;\r\n        this._text = newLines.graphemeText;\r\n        return newLines;\r\n      },\r\n\r\n      /**\r\n       * Initialize or update text dimensions.\r\n       * Updates this.width and this.height with the proper values.\r\n       * Does not return dimensions.\r\n       */\r\n      initDimensions: function() {\r\n        if (this.__skipDimension) {\r\n          return;\r\n        }\r\n        this._splitText();\r\n        this._clearCache();\r\n        this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\r\n        if (this.textAlign.indexOf('justify') !== -1) {\r\n          // once text is measured we need to make space fatter to make justified text.\r\n          this.enlargeSpaces();\r\n        }\r\n        this.height = this.calcTextHeight();\r\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\r\n      },\r\n\r\n      /**\r\n       * Enlarge space boxes and shift the others\r\n       */\r\n      enlargeSpaces: function() {\r\n        var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\r\n            continue;\r\n          }\r\n          accumulatedSpace = 0;\r\n          line = this._textLines[i];\r\n          currentLineWidth = this.getLineWidth(i);\r\n          if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\r\n            numberOfSpaces = spaces.length;\r\n            diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\r\n            for (var j = 0, jlen = line.length; j <= jlen; j++) {\r\n              charBound = this.__charBounds[i][j];\r\n              if (this._reSpaceAndTab.test(line[j])) {\r\n                charBound.width += diffSpace;\r\n                charBound.kernedWidth += diffSpace;\r\n                charBound.left += accumulatedSpace;\r\n                accumulatedSpace += diffSpace;\r\n              }\r\n              else {\r\n                charBound.left += accumulatedSpace;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Detect if the text line is ended with an hard break\r\n       * text and itext do not have wrapping, return false\r\n       * @return {Boolean}\r\n       */\r\n      isEndOfWrapping: function(lineIndex) {\r\n        return lineIndex === this._textLines.length - 1;\r\n      },\r\n\r\n      /**\r\n       * Returns string representation of an instance\r\n       * @return {String} String representation of text object\r\n       */\r\n      toString: function() {\r\n        return '#<fabric.Text (' + this.complexity() +\r\n          '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\r\n      },\r\n\r\n      /**\r\n       * Return the dimension and the zoom level needed to create a cache canvas\r\n       * big enough to host the object to be cached.\r\n       * @private\r\n       * @param {Object} dim.x width of object to be cached\r\n       * @param {Object} dim.y height of object to be cached\r\n       * @return {Object}.width width of canvas\r\n       * @return {Object}.height height of canvas\r\n       * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n       * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n       */\r\n      _getCacheCanvasDimensions: function() {\r\n        var dims = this.callSuper('_getCacheCanvasDimensions');\r\n        var fontSize = this.fontSize;\r\n        dims.width += fontSize * dims.zoomX;\r\n        dims.height += fontSize * dims.zoomY;\r\n        return dims;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        this._setTextStyles(ctx);\r\n        this._renderTextLinesBackground(ctx);\r\n        this._renderTextDecoration(ctx, 'underline');\r\n        this._renderText(ctx);\r\n        this._renderTextDecoration(ctx, 'overline');\r\n        this._renderTextDecoration(ctx, 'linethrough');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderText: function(ctx) {\r\n        if (this.paintFirst === 'stroke') {\r\n          this._renderTextStroke(ctx);\r\n          this._renderTextFill(ctx);\r\n        }\r\n        else {\r\n          this._renderTextFill(ctx);\r\n          this._renderTextStroke(ctx);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set the font parameter of the context with the object properties or with charStyle\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Object} [charStyle] object with font style properties\r\n       * @param {String} [charStyle.fontFamily] Font Family\r\n       * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\r\n       * @param {String} [charStyle.fontWeight] Font weight\r\n       * @param {String} [charStyle.fontStyle] Font style (italic|normal)\r\n       */\r\n      _setTextStyles: function(ctx, charStyle, forMeasuring) {\r\n        ctx.textBaseline = 'alphabetic';\r\n        ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\r\n      },\r\n\r\n      /**\r\n       * calculate and return the text Width measuring each line.\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @return {Number} Maximum width of fabric.Text object\r\n       */\r\n      calcTextWidth: function() {\r\n        var maxWidth = this.getLineWidth(0);\r\n\r\n        for (var i = 1, len = this._textLines.length; i < len; i++) {\r\n          var currentLineWidth = this.getLineWidth(i);\r\n          if (currentLineWidth > maxWidth) {\r\n            maxWidth = currentLineWidth;\r\n          }\r\n        }\r\n        return maxWidth;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {String} line Text to render\r\n       * @param {Number} left Left position of text\r\n       * @param {Number} top Top position of text\r\n       * @param {Number} lineIndex Index of a line in a text\r\n       */\r\n      _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\r\n        this._renderChars(method, ctx, line, left, top, lineIndex);\r\n      },\r\n\r\n      /**\r\n       * Renders the text background for lines, taking care of style\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextLinesBackground: function(ctx) {\r\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\r\n          return;\r\n        }\r\n        var lineTopOffset = 0, heightOfLine,\r\n            lineLeftOffset, originalFill = ctx.fillStyle,\r\n            line, lastColor,\r\n            leftOffset = this._getLeftOffset(),\r\n            topOffset = this._getTopOffset(),\r\n            boxStart = 0, boxWidth = 0, charBox, currentColor;\r\n\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          heightOfLine = this.getHeightOfLine(i);\r\n          if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\r\n            lineTopOffset += heightOfLine;\r\n            continue;\r\n          }\r\n          line = this._textLines[i];\r\n          lineLeftOffset = this._getLineLeftOffset(i);\r\n          boxWidth = 0;\r\n          boxStart = 0;\r\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n          for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n            charBox = this.__charBounds[i][j];\r\n            currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n            if (currentColor !== lastColor) {\r\n              ctx.fillStyle = lastColor;\r\n              lastColor && ctx.fillRect(\r\n                leftOffset + lineLeftOffset + boxStart,\r\n                topOffset + lineTopOffset,\r\n                boxWidth,\r\n                heightOfLine / this.lineHeight\r\n              );\r\n              boxStart = charBox.left;\r\n              boxWidth = charBox.width;\r\n              lastColor = currentColor;\r\n            }\r\n            else {\r\n              boxWidth += charBox.kernedWidth;\r\n            }\r\n          }\r\n          if (currentColor) {\r\n            ctx.fillStyle = currentColor;\r\n            ctx.fillRect(\r\n              leftOffset + lineLeftOffset + boxStart,\r\n              topOffset + lineTopOffset,\r\n              boxWidth,\r\n              heightOfLine / this.lineHeight\r\n            );\r\n          }\r\n          lineTopOffset += heightOfLine;\r\n        }\r\n        ctx.fillStyle = originalFill;\r\n        // if there is text background color no\r\n        // other shadows should be casted\r\n        this._removeShadow(ctx);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} decl style declaration for cache\r\n       * @param {String} decl.fontFamily fontFamily\r\n       * @param {String} decl.fontStyle fontStyle\r\n       * @param {String} decl.fontWeight fontWeight\r\n       * @return {Object} reference to cache\r\n       */\r\n      getFontCache: function(decl) {\r\n        var fontFamily = decl.fontFamily.toLowerCase();\r\n        if (!fabric.charWidthsCache[fontFamily]) {\r\n          fabric.charWidthsCache[fontFamily] = { };\r\n        }\r\n        var cache = fabric.charWidthsCache[fontFamily],\r\n            cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\r\n        if (!cache[cacheProp]) {\r\n          cache[cacheProp] = { };\r\n        }\r\n        return cache[cacheProp];\r\n      },\r\n\r\n      /**\r\n       * apply all the character style to canvas for rendering\r\n       * @private\r\n       * @param {String} _char\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {Object} [decl]\r\n       */\r\n      _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\r\n\r\n        this._setFillStyles(ctx, styleDeclaration);\r\n        this._setStrokeStyles(ctx, styleDeclaration);\r\n\r\n        ctx.font = this._getFontDeclaration(styleDeclaration);\r\n      },\r\n\r\n      /**\r\n       * measure and return the width of a single character.\r\n       * possibly overridden to accommodate different measure logic or\r\n       * to hook some external lib for character measurement\r\n       * @private\r\n       * @param {String} char to be measured\r\n       * @param {Object} charStyle style of char to be measured\r\n       * @param {String} [previousChar] previous char\r\n       * @param {Object} [prevCharStyle] style of previous char\r\n       */\r\n      _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\r\n        // first i try to return from cache\r\n        var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\r\n            previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\r\n            stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\r\n            fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\r\n\r\n        if (previousChar && fontCache[previousChar] !== undefined) {\r\n          previousWidth = fontCache[previousChar];\r\n        }\r\n        if (fontCache[_char] !== undefined) {\r\n          kernedWidth = width = fontCache[_char];\r\n        }\r\n        if (stylesAreEqual && fontCache[couple] !== undefined) {\r\n          coupleWidth = fontCache[couple];\r\n          kernedWidth = coupleWidth - previousWidth;\r\n        }\r\n        if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\r\n          var ctx = this.getMeasuringContext();\r\n          // send a TRUE to specify measuring font size CACHE_FONT_SIZE\r\n          this._setTextStyles(ctx, charStyle, true);\r\n        }\r\n        if (width === undefined) {\r\n          kernedWidth = width = ctx.measureText(_char).width;\r\n          fontCache[_char] = width;\r\n        }\r\n        if (previousWidth === undefined && stylesAreEqual && previousChar) {\r\n          previousWidth = ctx.measureText(previousChar).width;\r\n          fontCache[previousChar] = previousWidth;\r\n        }\r\n        if (stylesAreEqual && coupleWidth === undefined) {\r\n          // we can measure the kerning couple and subtract the width of the previous character\r\n          coupleWidth = ctx.measureText(couple).width;\r\n          fontCache[couple] = coupleWidth;\r\n          kernedWidth = coupleWidth - previousWidth;\r\n        }\r\n        return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\r\n      },\r\n\r\n      /**\r\n       * Computes height of character at given position\r\n       * @param {Number} line the line number\r\n       * @param {Number} char the character number\r\n       * @return {Number} fontSize of the character\r\n       */\r\n      getHeightOfChar: function(line, char) {\r\n        return this.getValueOfPropertyAt(line, char, 'fontSize');\r\n      },\r\n\r\n      /**\r\n       * measure a text line measuring all characters.\r\n       * @param {Number} lineIndex line number\r\n       * @return {Number} Line width\r\n       */\r\n      measureLine: function(lineIndex) {\r\n        var lineInfo = this._measureLine(lineIndex);\r\n        if (this.charSpacing !== 0) {\r\n          lineInfo.width -= this._getWidthOfCharSpacing();\r\n        }\r\n        if (lineInfo.width < 0) {\r\n          lineInfo.width = 0;\r\n        }\r\n        return lineInfo;\r\n      },\r\n\r\n      /**\r\n       * measure every grapheme of a line, populating __charBounds\r\n       * @param {Number} lineIndex\r\n       * @return {Object} object.width total width of characters\r\n       * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\r\n       */\r\n      _measureLine: function(lineIndex) {\r\n        var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\r\n            graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\r\n\r\n        this.__charBounds[lineIndex] = lineBounds;\r\n        for (i = 0; i < line.length; i++) {\r\n          grapheme = line[i];\r\n          graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\r\n          lineBounds[i] = graphemeInfo;\r\n          width += graphemeInfo.kernedWidth;\r\n          prevGrapheme = grapheme;\r\n        }\r\n        // this latest bound box represent the last character of the line\r\n        // to simplify cursor handling in interactive mode.\r\n        lineBounds[i] = {\r\n          left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\r\n          width: 0,\r\n          kernedWidth: 0,\r\n          height: this.fontSize\r\n        };\r\n        return { width: width, numOfSpaces: numOfSpaces };\r\n      },\r\n\r\n      /**\r\n       * Measure and return the info of a single grapheme.\r\n       * needs the the info of previous graphemes already filled\r\n       * @private\r\n       * @param {String} grapheme to be measured\r\n       * @param {Number} lineIndex index of the line where the char is\r\n       * @param {Number} charIndex position in the line\r\n       * @param {String} [prevGrapheme] character preceding the one to be measured\r\n       */\r\n      _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\r\n        var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n            prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\r\n            info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\r\n            kernedWidth = info.kernedWidth,\r\n            width = info.width, charSpacing;\r\n\r\n        if (this.charSpacing !== 0) {\r\n          charSpacing = this._getWidthOfCharSpacing();\r\n          width += charSpacing;\r\n          kernedWidth += charSpacing;\r\n        }\r\n\r\n        var box = {\r\n          width: width,\r\n          left: 0,\r\n          height: style.fontSize,\r\n          kernedWidth: kernedWidth,\r\n          deltaY: style.deltaY,\r\n        };\r\n        if (charIndex > 0 && !skipLeft) {\r\n          var previousBox = this.__charBounds[lineIndex][charIndex - 1];\r\n          box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\r\n        }\r\n        return box;\r\n      },\r\n\r\n      /**\r\n       * Calculate height of line at 'lineIndex'\r\n       * @param {Number} lineIndex index of line to calculate\r\n       * @return {Number}\r\n       */\r\n      getHeightOfLine: function(lineIndex) {\r\n        if (this.__lineHeights[lineIndex]) {\r\n          return this.__lineHeights[lineIndex];\r\n        }\r\n\r\n        var line = this._textLines[lineIndex],\r\n            // char 0 is measured before the line cycle because it nneds to char\r\n            // emptylines\r\n            maxHeight = this.getHeightOfChar(lineIndex, 0);\r\n        for (var i = 1, len = line.length; i < len; i++) {\r\n          maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\r\n        }\r\n\r\n        return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\r\n      },\r\n\r\n      /**\r\n       * Calculate text box height\r\n       */\r\n      calcTextHeight: function() {\r\n        var lineHeight, height = 0;\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          lineHeight = this.getHeightOfLine(i);\r\n          height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\r\n        }\r\n        return height;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} Left offset\r\n       */\r\n      _getLeftOffset: function() {\r\n        return -this.width / 2;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Number} Top offset\r\n       */\r\n      _getTopOffset: function() {\r\n        return -this.height / 2;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n       */\r\n      _renderTextCommon: function(ctx, method) {\r\n        ctx.save();\r\n        var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\r\n            offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          var heightOfLine = this.getHeightOfLine(i),\r\n              maxHeight = heightOfLine / this.lineHeight,\r\n              leftOffset = this._getLineLeftOffset(i);\r\n          this._renderTextLine(\r\n            method,\r\n            ctx,\r\n            this._textLines[i],\r\n            left + leftOffset - offsets.offsetX,\r\n            top + lineHeights + maxHeight - offsets.offsetY,\r\n            i\r\n          );\r\n          lineHeights += heightOfLine;\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextFill: function(ctx) {\r\n        if (!this.fill && !this.styleHas('fill')) {\r\n          return;\r\n        }\r\n\r\n        this._renderTextCommon(ctx, 'fillText');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextStroke: function(ctx) {\r\n        if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\r\n          return;\r\n        }\r\n\r\n        if (this.shadow && !this.shadow.affectStroke) {\r\n          this._removeShadow(ctx);\r\n        }\r\n\r\n        ctx.save();\r\n        this._setLineDash(ctx, this.strokeDashArray);\r\n        ctx.beginPath();\r\n        this._renderTextCommon(ctx, 'strokeText');\r\n        ctx.closePath();\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} method\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {String} line Content of the line\r\n       * @param {Number} left\r\n       * @param {Number} top\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charOffset\r\n       */\r\n      _renderChars: function(method, ctx, line, left, top, lineIndex) {\r\n        // set proper line offset\r\n        var lineHeight = this.getHeightOfLine(lineIndex),\r\n            isJustify = this.textAlign.indexOf('justify') !== -1,\r\n            actualStyle,\r\n            nextStyle,\r\n            charsToRender = '',\r\n            charBox,\r\n            boxWidth = 0,\r\n            timeToRender,\r\n            shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\r\n\r\n        ctx.save();\r\n        top -= lineHeight * this._fontSizeFraction / this.lineHeight;\r\n        if (shortCut) {\r\n          // render all the line in one pass without checking\r\n          this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\r\n          ctx.restore();\r\n          return;\r\n        }\r\n        for (var i = 0, len = line.length - 1; i <= len; i++) {\r\n          timeToRender = i === len || this.charSpacing;\r\n          charsToRender += line[i];\r\n          charBox = this.__charBounds[lineIndex][i];\r\n          if (boxWidth === 0) {\r\n            left += charBox.kernedWidth - charBox.width;\r\n            boxWidth += charBox.width;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n          if (isJustify && !timeToRender) {\r\n            if (this._reSpaceAndTab.test(line[i])) {\r\n              timeToRender = true;\r\n            }\r\n          }\r\n          if (!timeToRender) {\r\n            // if we have charSpacing, we render char by char\r\n            actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n            nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n            timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\r\n          }\r\n          if (timeToRender) {\r\n            this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\r\n            charsToRender = '';\r\n            actualStyle = nextStyle;\r\n            left += boxWidth;\r\n            boxWidth = 0;\r\n          }\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} method\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {String} _char\r\n       * @param {Number} left Left coordinate\r\n       * @param {Number} top Top coordinate\r\n       * @param {Number} lineHeight Height of the line\r\n       */\r\n      _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\r\n        var decl = this._getStyleDeclaration(lineIndex, charIndex),\r\n            fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n            shouldFill = method === 'fillText' && fullDecl.fill,\r\n            shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\r\n\r\n        if (!shouldStroke && !shouldFill) {\r\n          return;\r\n        }\r\n        decl && ctx.save();\r\n\r\n        this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\r\n\r\n        if (decl && decl.textBackgroundColor) {\r\n          this._removeShadow(ctx);\r\n        }\r\n        if (decl && decl.deltaY) {\r\n          top += decl.deltaY;\r\n        }\r\n\r\n        shouldFill && ctx.fillText(_char, left, top);\r\n        shouldStroke && ctx.strokeText(_char, left, top);\r\n        decl && ctx.restore();\r\n      },\r\n\r\n      /**\r\n       * Turns the character into a 'superior figure' (i.e. 'superscript')\r\n       * @param {Number} start selection start\r\n       * @param {Number} end selection end\r\n       * @returns {fabric.Text} thisArg\r\n       * @chainable\r\n       */\r\n      setSuperscript: function(start, end) {\r\n        return this._setScript(start, end, this.superscript);\r\n      },\r\n\r\n      /**\r\n       * Turns the character into an 'inferior figure' (i.e. 'subscript')\r\n       * @param {Number} start selection start\r\n       * @param {Number} end selection end\r\n       * @returns {fabric.Text} thisArg\r\n       * @chainable\r\n       */\r\n      setSubscript: function(start, end) {\r\n        return this._setScript(start, end, this.subscript);\r\n      },\r\n\r\n      /**\r\n       * Applies 'schema' at given position\r\n       * @private\r\n       * @param {Number} start selection start\r\n       * @param {Number} end selection end\r\n       * @param {Number} schema\r\n       * @returns {fabric.Text} thisArg\r\n       * @chainable\r\n       */\r\n      _setScript: function(start, end, schema) {\r\n        var loc = this.get2DCursorLocation(start, true),\r\n            fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\r\n            dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\r\n            style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\r\n        this.setSelectionStyles(style, start, end);\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} prevStyle\r\n       * @param {Object} thisStyle\r\n       */\r\n      _hasStyleChanged: function(prevStyle, thisStyle) {\r\n        return prevStyle.fill !== thisStyle.fill ||\r\n                prevStyle.stroke !== thisStyle.stroke ||\r\n                prevStyle.strokeWidth !== thisStyle.strokeWidth ||\r\n                prevStyle.fontSize !== thisStyle.fontSize ||\r\n                prevStyle.fontFamily !== thisStyle.fontFamily ||\r\n                prevStyle.fontWeight !== thisStyle.fontWeight ||\r\n                prevStyle.fontStyle !== thisStyle.fontStyle ||\r\n                prevStyle.deltaY !== thisStyle.deltaY;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Object} prevStyle\r\n       * @param {Object} thisStyle\r\n       */\r\n      _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\r\n        return this._hasStyleChanged(prevStyle, thisStyle) ||\r\n          prevStyle.overline !== thisStyle.overline ||\r\n          prevStyle.underline !== thisStyle.underline ||\r\n          prevStyle.linethrough !== thisStyle.linethrough;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Number} lineIndex index text line\r\n       * @return {Number} Line left offset\r\n       */\r\n      _getLineLeftOffset: function(lineIndex) {\r\n        var lineWidth = this.getLineWidth(lineIndex);\r\n        if (this.textAlign === 'center') {\r\n          return (this.width - lineWidth) / 2;\r\n        }\r\n        if (this.textAlign === 'right') {\r\n          return this.width - lineWidth;\r\n        }\r\n        if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\r\n          return (this.width - lineWidth) / 2;\r\n        }\r\n        if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\r\n          return this.width - lineWidth;\r\n        }\r\n        return 0;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _clearCache: function() {\r\n        this.__lineWidths = [];\r\n        this.__lineHeights = [];\r\n        this.__charBounds = [];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _shouldClearDimensionCache: function() {\r\n        var shouldClear = this._forceClearCache;\r\n        shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\r\n        if (shouldClear) {\r\n          this.dirty = true;\r\n          this._forceClearCache = false;\r\n        }\r\n        return shouldClear;\r\n      },\r\n\r\n      /**\r\n       * Measure a single line given its index. Used to calculate the initial\r\n       * text bounding box. The values are calculated and stored in __lineWidths cache.\r\n       * @private\r\n       * @param {Number} lineIndex line number\r\n       * @return {Number} Line width\r\n       */\r\n      getLineWidth: function(lineIndex) {\r\n        if (this.__lineWidths[lineIndex]) {\r\n          return this.__lineWidths[lineIndex];\r\n        }\r\n\r\n        var width, line = this._textLines[lineIndex], lineInfo;\r\n\r\n        if (line === '') {\r\n          width = 0;\r\n        }\r\n        else {\r\n          lineInfo = this.measureLine(lineIndex);\r\n          width = lineInfo.width;\r\n        }\r\n        this.__lineWidths[lineIndex] = width;\r\n        return width;\r\n      },\r\n\r\n      _getWidthOfCharSpacing: function() {\r\n        if (this.charSpacing !== 0) {\r\n          return this.fontSize * this.charSpacing / 1000;\r\n        }\r\n        return 0;\r\n      },\r\n\r\n      /**\r\n       * Retrieves the value of property at given character position\r\n       * @param {Number} lineIndex the line number\r\n       * @param {Number} charIndex the charater number\r\n       * @param {String} property the property name\r\n       * @returns the value of 'property'\r\n       */\r\n      getValueOfPropertyAt: function(lineIndex, charIndex, property) {\r\n        var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\r\n        if (charStyle && typeof charStyle[property] !== 'undefined') {\r\n          return charStyle[property];\r\n        }\r\n        return this[property];\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _renderTextDecoration: function(ctx, type) {\r\n        if (!this[type] && !this.styleHas(type)) {\r\n          return;\r\n        }\r\n        var heightOfLine, size, _size,\r\n            lineLeftOffset, dy, _dy,\r\n            line, lastDecoration,\r\n            leftOffset = this._getLeftOffset(),\r\n            topOffset = this._getTopOffset(), top,\r\n            boxStart, boxWidth, charBox, currentDecoration,\r\n            maxHeight, currentFill, lastFill,\r\n            charSpacing = this._getWidthOfCharSpacing();\r\n\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          heightOfLine = this.getHeightOfLine(i);\r\n          if (!this[type] && !this.styleHas(type, i)) {\r\n            topOffset += heightOfLine;\r\n            continue;\r\n          }\r\n          line = this._textLines[i];\r\n          maxHeight = heightOfLine / this.lineHeight;\r\n          lineLeftOffset = this._getLineLeftOffset(i);\r\n          boxStart = 0;\r\n          boxWidth = 0;\r\n          lastDecoration = this.getValueOfPropertyAt(i, 0, type);\r\n          lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\r\n          top = topOffset + maxHeight * (1 - this._fontSizeFraction);\r\n          size = this.getHeightOfChar(i, 0);\r\n          dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\r\n          for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n            charBox = this.__charBounds[i][j];\r\n            currentDecoration = this.getValueOfPropertyAt(i, j, type);\r\n            currentFill = this.getValueOfPropertyAt(i, j, 'fill');\r\n            _size = this.getHeightOfChar(i, j);\r\n            _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\r\n            if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\r\n                boxWidth > 0) {\r\n              ctx.fillStyle = lastFill;\r\n              lastDecoration && lastFill && ctx.fillRect(\r\n                leftOffset + lineLeftOffset + boxStart,\r\n                top + this.offsets[type] * size + dy,\r\n                boxWidth,\r\n                this.fontSize / 15\r\n              );\r\n              boxStart = charBox.left;\r\n              boxWidth = charBox.width;\r\n              lastDecoration = currentDecoration;\r\n              lastFill = currentFill;\r\n              size = _size;\r\n              dy = _dy;\r\n            }\r\n            else {\r\n              boxWidth += charBox.kernedWidth;\r\n            }\r\n          }\r\n          ctx.fillStyle = currentFill;\r\n          currentDecoration && currentFill && ctx.fillRect(\r\n            leftOffset + lineLeftOffset + boxStart,\r\n            top + this.offsets[type] * size + dy,\r\n            boxWidth - charSpacing,\r\n            this.fontSize / 15\r\n          );\r\n          topOffset += heightOfLine;\r\n        }\r\n        // if there is text background color no\r\n        // other shadows should be casted\r\n        this._removeShadow(ctx);\r\n      },\r\n\r\n      /**\r\n       * return font declaration string for canvas context\r\n       * @param {Object} [styleObject] object\r\n       * @returns {String} font declaration formatted for canvas context.\r\n       */\r\n      _getFontDeclaration: function(styleObject, forMeasuring) {\r\n        var style = styleObject || this, family = this.fontFamily,\r\n            fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\r\n        var fontFamily = family === undefined ||\r\n        family.indexOf('\\'') > -1 ||\r\n        family.indexOf('\"') > -1 || fontIsGeneric\r\n          ? style.fontFamily : '\"' + style.fontFamily + '\"';\r\n        return [\r\n          // node-canvas needs \"weight style\", while browsers need \"style weight\"\r\n          (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\r\n          (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\r\n          forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\r\n          fontFamily\r\n        ].join(' ');\r\n      },\r\n\r\n      /**\r\n       * Renders text instance on a specified context\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      render: function(ctx) {\r\n        // do not render if object is not visible\r\n        if (!this.visible) {\r\n          return;\r\n        }\r\n        if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\r\n          return;\r\n        }\r\n        if (this._shouldClearDimensionCache()) {\r\n          this.initDimensions();\r\n        }\r\n        this.callSuper('render', ctx);\r\n      },\r\n\r\n      /**\r\n       * Returns the text as an array of lines.\r\n       * @param {String} text text to split\r\n       * @returns {Array} Lines in the text\r\n       */\r\n      _splitTextIntoLines: function(text) {\r\n        var lines = text.split(this._reNewline),\r\n            newLines = new Array(lines.length),\r\n            newLine = ['\\n'],\r\n            newText = [];\r\n        for (var i = 0; i < lines.length; i++) {\r\n          newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\r\n          newText = newText.concat(newLines[i], newLine);\r\n        }\r\n        newText.pop();\r\n        return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} Object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        var additionalProperties = [\r\n          'text',\r\n          'fontSize',\r\n          'fontWeight',\r\n          'fontFamily',\r\n          'fontStyle',\r\n          'lineHeight',\r\n          'underline',\r\n          'overline',\r\n          'linethrough',\r\n          'textAlign',\r\n          'textBackgroundColor',\r\n          'charSpacing',\r\n        ].concat(propertiesToInclude);\r\n        var obj = this.callSuper('toObject', additionalProperties);\r\n        obj.styles = clone(this.styles, true);\r\n        return obj;\r\n      },\r\n\r\n      /**\r\n       * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\r\n       * @param {String|Object} key Property name or object (if object, iterate over the object properties)\r\n       * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\r\n       * @return {fabric.Object} thisArg\r\n       * @chainable\r\n       */\r\n      set: function(key, value) {\r\n        this.callSuper('set', key, value);\r\n        var needsDims = false;\r\n        if (typeof key === 'object') {\r\n          for (var _key in key) {\r\n            needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\r\n          }\r\n        }\r\n        else {\r\n          needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\r\n        }\r\n        if (needsDims) {\r\n          this.initDimensions();\r\n          this.setCoords();\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns complexity of an instance\r\n       * @return {Number} complexity\r\n       */\r\n      complexity: function() {\r\n        return 1;\r\n      }\r\n    });\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     * @see: http://www.w3.org/TR/SVG/text.html#TextElement\r\n     */\r\n    fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\r\n      'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\r\n\r\n    /**\r\n     * Default SVG font size\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     */\r\n    fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\r\n\r\n    /**\r\n     * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     * @param {SVGElement} element Element to parse\r\n     * @param {Function} callback callback function invoked after parsing\r\n     * @param {Object} [options] Options object\r\n     */\r\n    fabric.Text.fromElement = function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n\r\n      var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\r\n          parsedAnchor = parsedAttributes.textAnchor || 'left';\r\n      options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\r\n\r\n      options.top = options.top || 0;\r\n      options.left = options.left || 0;\r\n      if (parsedAttributes.textDecoration) {\r\n        var textDecoration = parsedAttributes.textDecoration;\r\n        if (textDecoration.indexOf('underline') !== -1) {\r\n          options.underline = true;\r\n        }\r\n        if (textDecoration.indexOf('overline') !== -1) {\r\n          options.overline = true;\r\n        }\r\n        if (textDecoration.indexOf('line-through') !== -1) {\r\n          options.linethrough = true;\r\n        }\r\n        delete options.textDecoration;\r\n      }\r\n      if ('dx' in parsedAttributes) {\r\n        options.left += parsedAttributes.dx;\r\n      }\r\n      if ('dy' in parsedAttributes) {\r\n        options.top += parsedAttributes.dy;\r\n      }\r\n      if (!('fontSize' in options)) {\r\n        options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n      }\r\n\r\n      var textContent = '';\r\n\r\n      // The XML is not properly parsed in IE9 so a workaround to get\r\n      // textContent is through firstChild.data. Another workaround would be\r\n      // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\r\n      if (!('textContent' in element)) {\r\n        if ('firstChild' in element && element.firstChild !== null) {\r\n          if ('data' in element.firstChild && element.firstChild.data !== null) {\r\n            textContent = element.firstChild.data;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        textContent = element.textContent;\r\n      }\r\n\r\n      textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\r\n      var originalStrokeWidth = options.strokeWidth;\r\n      options.strokeWidth = 0;\r\n\r\n      var text = new fabric.Text(textContent, options),\r\n          textHeightScaleFactor = text.getScaledHeight() / text.height,\r\n          lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\r\n          scaledDiff = lineHeightDiff * textHeightScaleFactor,\r\n          textHeight = text.getScaledHeight() + scaledDiff,\r\n          offX = 0;\r\n      /*\r\n        Adjust positioning:\r\n          x/y attributes in SVG correspond to the bottom-left corner of text bounding box\r\n          fabric output by default at top, left.\r\n      */\r\n      if (parsedAnchor === 'center') {\r\n        offX = text.getScaledWidth() / 2;\r\n      }\r\n      if (parsedAnchor === 'right') {\r\n        offX = text.getScaledWidth();\r\n      }\r\n      text.set({\r\n        left: text.left - offX,\r\n        top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\r\n        strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\r\n      });\r\n      callback(text);\r\n    };\r\n    /* _FROM_SVG_END_ */\r\n\r\n    /**\r\n     * Returns fabric.Text instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Text\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\r\n     */\r\n    fabric.Text.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Text', object, callback, 'text');\r\n    };\r\n\r\n    fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\r\n\r\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\r\n\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n    fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\r\n      /**\r\n       * Returns true if object has no styling or no styling in a line\r\n       * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n       * @return {Boolean}\r\n       */\r\n      isEmptyStyles: function(lineIndex) {\r\n        if (!this.styles) {\r\n          return true;\r\n        }\r\n        if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n          return true;\r\n        }\r\n        var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n        for (var p1 in obj) {\r\n          for (var p2 in obj[p1]) {\r\n            // eslint-disable-next-line no-unused-vars\r\n            for (var p3 in obj[p1][p2]) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Returns true if object has a style property or has it ina specified line\r\n       * @param {Number} lineIndex\r\n       * @return {Boolean}\r\n       */\r\n      styleHas: function(property, lineIndex) {\r\n        if (!this.styles || !property || property === '') {\r\n          return false;\r\n        }\r\n        if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n          return false;\r\n        }\r\n        var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n        // eslint-disable-next-line\r\n        for (var p1 in obj) {\r\n          // eslint-disable-next-line\r\n          for (var p2 in obj[p1]) {\r\n            if (typeof obj[p1][p2][property] !== 'undefined') {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Check if characters in a text have a value for a property\r\n       * whose value matches the textbox's value for that property.  If so,\r\n       * the character-level property is deleted.  If the character\r\n       * has no other properties, then it is also deleted.  Finally,\r\n       * if the line containing that character has no other characters\r\n       * then it also is deleted.\r\n       *\r\n       * @param {string} property The property to compare between characters and text.\r\n       */\r\n      cleanStyle: function(property) {\r\n        if (!this.styles || !property || property === '') {\r\n          return false;\r\n        }\r\n        var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\r\n            allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\r\n        // eslint-disable-next-line\r\n        for (var p1 in obj) {\r\n          letterCount = 0;\r\n          // eslint-disable-next-line\r\n          for (var p2 in obj[p1]) {\r\n            var styleObject = obj[p1][p2],\r\n                stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\r\n\r\n            stylesCount++;\r\n\r\n            if (stylePropertyHasBeenSet) {\r\n              if (!stylePropertyValue) {\r\n                stylePropertyValue = styleObject[property];\r\n              }\r\n              else if (styleObject[property] !== stylePropertyValue) {\r\n                allStyleObjectPropertiesMatch = false;\r\n              }\r\n\r\n              if (styleObject[property] === this[property]) {\r\n                delete styleObject[property];\r\n              }\r\n            }\r\n            else {\r\n              allStyleObjectPropertiesMatch = false;\r\n            }\r\n\r\n            if (Object.keys(styleObject).length !== 0) {\r\n              letterCount++;\r\n            }\r\n            else {\r\n              delete obj[p1][p2];\r\n            }\r\n          }\r\n\r\n          if (letterCount === 0) {\r\n            delete obj[p1];\r\n          }\r\n        }\r\n        // if every grapheme has the same style set then\r\n        // delete those styles and set it on the parent\r\n        for (var i = 0; i < this._textLines.length; i++) {\r\n          graphemeCount += this._textLines[i].length;\r\n        }\r\n        if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\r\n          this[property] = stylePropertyValue;\r\n          this.removeStyle(property);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Remove a style property or properties from all individual character styles\r\n       * in a text object.  Deletes the character style object if it contains no other style\r\n       * props.  Deletes a line style object if it contains no other character styles.\r\n       *\r\n       * @param {String} props The property to remove from character styles.\r\n       */\r\n      removeStyle: function(property) {\r\n        if (!this.styles || !property || property === '') {\r\n          return;\r\n        }\r\n        var obj = this.styles, line, lineNum, charNum;\r\n        for (lineNum in obj) {\r\n          line = obj[lineNum];\r\n          for (charNum in line) {\r\n            delete line[charNum][property];\r\n            if (Object.keys(line[charNum]).length === 0) {\r\n              delete line[charNum];\r\n            }\r\n          }\r\n          if (Object.keys(line).length === 0) {\r\n            delete obj[lineNum];\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _extendStyles: function(index, styles) {\r\n        var loc = this.get2DCursorLocation(index);\r\n\r\n        if (!this._getLineStyle(loc.lineIndex)) {\r\n          this._setLineStyle(loc.lineIndex, {});\r\n        }\r\n\r\n        if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\r\n          this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\r\n        }\r\n\r\n        fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\r\n      },\r\n\r\n      /**\r\n       * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\r\n       * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\r\n       * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\r\n       */\r\n      get2DCursorLocation: function(selectionStart, skipWrapping) {\r\n        if (typeof selectionStart === 'undefined') {\r\n          selectionStart = this.selectionStart;\r\n        }\r\n        var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\r\n        var len = lines.length;\r\n        for (var i = 0; i < len; i++) {\r\n          if (selectionStart <= lines[i].length) {\r\n            return {\r\n              lineIndex: i,\r\n              charIndex: selectionStart\r\n            };\r\n          }\r\n          selectionStart -= lines[i].length + 1;\r\n        }\r\n        return {\r\n          lineIndex: i - 1,\r\n          charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Gets style of a current selection/cursor (at the start position)\r\n       * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\r\n       * @param {Number} [startIndex] Start index to get styles at\r\n       * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n       * @param {Boolean} [complete] get full style or not\r\n       * @return {Array} styles an array with one, zero or more Style objects\r\n       */\r\n      getSelectionStyles: function(startIndex, endIndex, complete) {\r\n        if (typeof startIndex === 'undefined') {\r\n          startIndex = this.selectionStart || 0;\r\n        }\r\n        if (typeof endIndex === 'undefined') {\r\n          endIndex = this.selectionEnd || startIndex;\r\n        }\r\n        var styles = [];\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n          styles.push(this.getStyleAtPosition(i, complete));\r\n        }\r\n        return styles;\r\n      },\r\n\r\n      /**\r\n       * Gets style of a current selection/cursor position\r\n       * @param {Number} position  to get styles at\r\n       * @param {Boolean} [complete] full style if true\r\n       * @return {Object} style Style object at a specified index\r\n       * @private\r\n       */\r\n      getStyleAtPosition: function(position, complete) {\r\n        var loc = this.get2DCursorLocation(position),\r\n            style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\r\n              this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\r\n        return style || {};\r\n      },\r\n\r\n      /**\r\n       * Sets style of a current selection, if no selection exist, do not set anything.\r\n       * @param {Object} [styles] Styles object\r\n       * @param {Number} [startIndex] Start index to get styles at\r\n       * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      setSelectionStyles: function(styles, startIndex, endIndex) {\r\n        if (typeof startIndex === 'undefined') {\r\n          startIndex = this.selectionStart || 0;\r\n        }\r\n        if (typeof endIndex === 'undefined') {\r\n          endIndex = this.selectionEnd || startIndex;\r\n        }\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n          this._extendStyles(i, styles);\r\n        }\r\n        /* not included in _extendStyles to avoid clearing cache more than once */\r\n        this._forceClearCache = true;\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * get the reference, not a clone, of the style object for a given character\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @return {Object} style object\r\n       */\r\n      _getStyleDeclaration: function(lineIndex, charIndex) {\r\n        var lineStyle = this.styles && this.styles[lineIndex];\r\n        if (!lineStyle) {\r\n          return null;\r\n        }\r\n        return lineStyle[charIndex];\r\n      },\r\n\r\n      /**\r\n       * return a new object that contains all the style property for a character\r\n       * the object returned is newly created\r\n       * @param {Number} lineIndex of the line where the character is\r\n       * @param {Number} charIndex position of the character on the line\r\n       * @return {Object} style object\r\n       */\r\n      getCompleteStyleDeclaration: function(lineIndex, charIndex) {\r\n        var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\r\n            styleObject = { }, prop;\r\n        for (var i = 0; i < this._styleProperties.length; i++) {\r\n          prop = this._styleProperties[i];\r\n          styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\r\n        }\r\n        return styleObject;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setStyleDeclaration: function(lineIndex, charIndex, style) {\r\n        this.styles[lineIndex][charIndex] = style;\r\n      },\r\n\r\n      /**\r\n       *\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @private\r\n       */\r\n      _deleteStyleDeclaration: function(lineIndex, charIndex) {\r\n        delete this.styles[lineIndex][charIndex];\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _getLineStyle: function(lineIndex) {\r\n        return this.styles[lineIndex];\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setLineStyle: function(lineIndex, style) {\r\n        this.styles[lineIndex] = style;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _deleteLineStyle: function(lineIndex) {\r\n        delete this.styles[lineIndex];\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    function parseDecoration(object) {\r\n      if (object.textDecoration) {\r\n        object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\r\n        object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\r\n        object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\r\n        delete object.textDecoration;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\r\n     * prefix when observing canvas.\r\n     * @class fabric.IText\r\n     * @extends fabric.Text\r\n     * @mixes fabric.Observable\r\n     *\r\n     * @fires changed\r\n     * @fires selection:changed\r\n     * @fires editing:entered\r\n     * @fires editing:exited\r\n     *\r\n     * @return {fabric.IText} thisArg\r\n     * @see {@link fabric.IText#initialize} for constructor definition\r\n     *\r\n     * <p>Supported key combinations:</p>\r\n     * <pre>\r\n     *   Move cursor:                    left, right, up, down\r\n     *   Select character:               shift + left, shift + right\r\n     *   Select text vertically:         shift + up, shift + down\r\n     *   Move cursor by word:            alt + left, alt + right\r\n     *   Select words:                   shift + alt + left, shift + alt + right\r\n     *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\r\n     *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\r\n     *   Jump to start/end of text:      cmd + up, cmd + down\r\n     *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\r\n     *   Delete character:               backspace\r\n     *   Delete word:                    alt + backspace\r\n     *   Delete line:                    cmd + backspace\r\n     *   Forward delete:                 delete\r\n     *   Copy text:                      ctrl/cmd + c\r\n     *   Paste text:                     ctrl/cmd + v\r\n     *   Cut text:                       ctrl/cmd + x\r\n     *   Select entire text:             ctrl/cmd + a\r\n     *   Quit editing                    tab or esc\r\n     * </pre>\r\n     *\r\n     * <p>Supported mouse/touch combination</p>\r\n     * <pre>\r\n     *   Position cursor:                click/touch\r\n     *   Create selection:               click/touch & drag\r\n     *   Create selection:               click & shift + click\r\n     *   Select word:                    double click\r\n     *   Select line:                    triple click\r\n     * </pre>\r\n     */\r\n    fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'i-text',\r\n\r\n      /**\r\n       * Index where text selection starts (or where cursor is when there is no selection)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      selectionStart: 0,\r\n\r\n      /**\r\n       * Index where text selection ends\r\n       * @type Number\r\n       * @default\r\n       */\r\n      selectionEnd: 0,\r\n\r\n      /**\r\n       * Color of text selection\r\n       * @type String\r\n       * @default\r\n       */\r\n      selectionColor: 'rgba(17,119,255,0.3)',\r\n\r\n      /**\r\n       * Indicates whether text is in editing mode\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      isEditing: false,\r\n\r\n      /**\r\n       * Indicates whether a text can be edited\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      editable: true,\r\n\r\n      /**\r\n       * Border color of text object while it's in editing mode\r\n       * @type String\r\n       * @default\r\n       */\r\n      editingBorderColor: 'rgba(102,153,255,0.25)',\r\n\r\n      /**\r\n       * Width of cursor (in px)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cursorWidth: 2,\r\n\r\n      /**\r\n       * Color of default cursor (when not overwritten by character style)\r\n       * @type String\r\n       * @default\r\n       */\r\n      cursorColor: '#333',\r\n\r\n      /**\r\n       * Delay between cursor blink (in ms)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cursorDelay: 1000,\r\n\r\n      /**\r\n       * Duration of cursor fadein (in ms)\r\n       * @type Number\r\n       * @default\r\n       */\r\n      cursorDuration: 600,\r\n\r\n      /**\r\n       * Indicates whether internal text char widths can be cached\r\n       * @type Boolean\r\n       * @default\r\n       */\r\n      caching: true,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _reSpace: /\\s|\\n/,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _currentCursorOpacity: 0,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _selectionDirection: null,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _abortCursorAnimation: false,\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      __widthOfSpace: [],\r\n\r\n      /**\r\n       * Helps determining when the text is in composition, so that the cursor\r\n       * rendering is altered.\r\n       */\r\n      inCompositionMode: false,\r\n\r\n      /**\r\n       * Constructor\r\n       * @param {String} text Text string\r\n       * @param {Object} [options] Options object\r\n       * @return {fabric.IText} thisArg\r\n       */\r\n      initialize: function(text, options) {\r\n        this.callSuper('initialize', text, options);\r\n        this.initBehavior();\r\n      },\r\n\r\n      /**\r\n       * Sets selection start (left boundary of a selection)\r\n       * @param {Number} index Index to set selection start to\r\n       */\r\n      setSelectionStart: function(index) {\r\n        index = Math.max(index, 0);\r\n        this._updateAndFire('selectionStart', index);\r\n      },\r\n\r\n      /**\r\n       * Sets selection end (right boundary of a selection)\r\n       * @param {Number} index Index to set selection end to\r\n       */\r\n      setSelectionEnd: function(index) {\r\n        index = Math.min(index, this.text.length);\r\n        this._updateAndFire('selectionEnd', index);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {String} property 'selectionStart' or 'selectionEnd'\r\n       * @param {Number} index new position of property\r\n       */\r\n      _updateAndFire: function(property, index) {\r\n        if (this[property] !== index) {\r\n          this._fireSelectionChanged();\r\n          this[property] = index;\r\n        }\r\n        this._updateTextarea();\r\n      },\r\n\r\n      /**\r\n       * Fires the even of selection changed\r\n       * @private\r\n       */\r\n      _fireSelectionChanged: function() {\r\n        this.fire('selection:changed');\r\n        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\r\n      },\r\n\r\n      /**\r\n       * Initialize text dimensions. Render all text on given context\r\n       * or on a offscreen canvas to get the text width with measureText.\r\n       * Updates this.width and this.height with the proper values.\r\n       * Does not return dimensions.\r\n       * @private\r\n       */\r\n      initDimensions: function() {\r\n        this.isEditing && this.initDelayedCursor();\r\n        this.clearContextTop();\r\n        this.callSuper('initDimensions');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      render: function(ctx) {\r\n        this.clearContextTop();\r\n        this.callSuper('render', ctx);\r\n        // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\r\n        // the correct position but not at every cursor animation.\r\n        this.cursorOffsetCache = { };\r\n        this.renderCursorOrSelection();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {CanvasRenderingContext2D} ctx Context to render on\r\n       */\r\n      _render: function(ctx) {\r\n        this.callSuper('_render', ctx);\r\n      },\r\n\r\n      /**\r\n       * Prepare and clean the contextTop\r\n       */\r\n      clearContextTop: function(skipRestore) {\r\n        if (!this.isEditing) {\r\n          return;\r\n        }\r\n        if (this.canvas && this.canvas.contextTop) {\r\n          var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\r\n          ctx.save();\r\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n          this.transform(ctx);\r\n          this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\r\n          this._clearTextArea(ctx);\r\n          skipRestore || ctx.restore();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Renders cursor or selection (depending on what exists)\r\n       */\r\n      renderCursorOrSelection: function() {\r\n        if (!this.isEditing || !this.canvas) {\r\n          return;\r\n        }\r\n        var boundaries = this._getCursorBoundaries(), ctx;\r\n        if (this.canvas && this.canvas.contextTop) {\r\n          ctx = this.canvas.contextTop;\r\n          this.clearContextTop(true);\r\n        }\r\n        else {\r\n          ctx = this.canvas.contextContainer;\r\n          ctx.save();\r\n        }\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          this.renderCursor(boundaries, ctx);\r\n        }\r\n        else {\r\n          this.renderSelection(boundaries, ctx);\r\n        }\r\n        ctx.restore();\r\n      },\r\n\r\n      _clearTextArea: function(ctx) {\r\n        // we add 4 pixel, to be sure to do not leave any pixel out\r\n        var width = this.width + 4, height = this.height + 4;\r\n        ctx.clearRect(-width / 2, -height / 2, width, height);\r\n      },\r\n\r\n      /**\r\n       * Returns cursor boundaries (left, top, leftOffset, topOffset)\r\n       * @private\r\n       * @param {Array} chars Array of characters\r\n       * @param {String} typeOfBoundaries\r\n       */\r\n      _getCursorBoundaries: function(position) {\r\n\r\n        // left/top are left/top of entire text box\r\n        // leftOffset/topOffset are offset from that left/top point of a text box\r\n\r\n        if (typeof position === 'undefined') {\r\n          position = this.selectionStart;\r\n        }\r\n\r\n        var left = this._getLeftOffset(),\r\n            top = this._getTopOffset(),\r\n            offsets = this._getCursorBoundariesOffsets(position);\r\n\r\n        return {\r\n          left: left,\r\n          top: top,\r\n          leftOffset: offsets.left,\r\n          topOffset: offsets.top\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getCursorBoundariesOffsets: function(position) {\r\n        if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\r\n          return this.cursorOffsetCache;\r\n        }\r\n        var lineLeftOffset,\r\n            lineIndex,\r\n            charIndex,\r\n            topOffset = 0,\r\n            leftOffset = 0,\r\n            boundaries,\r\n            cursorPosition = this.get2DCursorLocation(position);\r\n        charIndex = cursorPosition.charIndex;\r\n        lineIndex = cursorPosition.lineIndex;\r\n        for (var i = 0; i < lineIndex; i++) {\r\n          topOffset += this.getHeightOfLine(i);\r\n        }\r\n        lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n        var bound = this.__charBounds[lineIndex][charIndex];\r\n        bound && (leftOffset = bound.left);\r\n        if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\r\n          leftOffset -= this._getWidthOfCharSpacing();\r\n        }\r\n        boundaries = {\r\n          top: topOffset,\r\n          left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\r\n        };\r\n        this.cursorOffsetCache = boundaries;\r\n        return this.cursorOffsetCache;\r\n      },\r\n\r\n      /**\r\n       * Renders cursor\r\n       * @param {Object} boundaries\r\n       * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n       */\r\n      renderCursor: function(boundaries, ctx) {\r\n        var cursorLocation = this.get2DCursorLocation(),\r\n            lineIndex = cursorLocation.lineIndex,\r\n            charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\r\n            charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\r\n            multiplier = this.scaleX * this.canvas.getZoom(),\r\n            cursorWidth = this.cursorWidth / multiplier,\r\n            topOffset = boundaries.topOffset,\r\n            dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\r\n\r\n        topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\r\n          - charHeight * (1 - this._fontSizeFraction);\r\n\r\n        if (this.inCompositionMode) {\r\n          this.renderSelection(boundaries, ctx);\r\n        }\r\n\r\n        ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\r\n        ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\r\n        ctx.fillRect(\r\n          boundaries.left + boundaries.leftOffset - cursorWidth / 2,\r\n          topOffset + boundaries.top + dy,\r\n          cursorWidth,\r\n          charHeight);\r\n      },\r\n\r\n      /**\r\n       * Renders text selection\r\n       * @param {Object} boundaries Object with left/top/leftOffset/topOffset\r\n       * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n       */\r\n      renderSelection: function(boundaries, ctx) {\r\n\r\n        var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\r\n            selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\r\n            isJustify = this.textAlign.indexOf('justify') !== -1,\r\n            start = this.get2DCursorLocation(selectionStart),\r\n            end = this.get2DCursorLocation(selectionEnd),\r\n            startLine = start.lineIndex,\r\n            endLine = end.lineIndex,\r\n            startChar = start.charIndex < 0 ? 0 : start.charIndex,\r\n            endChar = end.charIndex < 0 ? 0 : end.charIndex;\r\n\r\n        for (var i = startLine; i <= endLine; i++) {\r\n          var lineOffset = this._getLineLeftOffset(i) || 0,\r\n              lineHeight = this.getHeightOfLine(i),\r\n              realLineHeight = 0, boxStart = 0, boxEnd = 0;\r\n\r\n          if (i === startLine) {\r\n            boxStart = this.__charBounds[startLine][startChar].left;\r\n          }\r\n          if (i >= startLine && i < endLine) {\r\n            boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\r\n          }\r\n          else if (i === endLine) {\r\n            if (endChar === 0) {\r\n              boxEnd = this.__charBounds[endLine][endChar].left;\r\n            }\r\n            else {\r\n              var charSpacing = this._getWidthOfCharSpacing();\r\n              boxEnd = this.__charBounds[endLine][endChar - 1].left\r\n                + this.__charBounds[endLine][endChar - 1].width - charSpacing;\r\n            }\r\n          }\r\n          realLineHeight = lineHeight;\r\n          if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\r\n            lineHeight /= this.lineHeight;\r\n          }\r\n          if (this.inCompositionMode) {\r\n            ctx.fillStyle = this.compositionColor || 'black';\r\n            ctx.fillRect(\r\n              boundaries.left + lineOffset + boxStart,\r\n              boundaries.top + boundaries.topOffset + lineHeight,\r\n              boxEnd - boxStart,\r\n              1);\r\n          }\r\n          else {\r\n            ctx.fillStyle = this.selectionColor;\r\n            ctx.fillRect(\r\n              boundaries.left + lineOffset + boxStart,\r\n              boundaries.top + boundaries.topOffset,\r\n              boxEnd - boxStart,\r\n              lineHeight);\r\n          }\r\n\r\n\r\n          boundaries.topOffset += realLineHeight;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * High level function to know the height of the cursor.\r\n       * the currentChar is the one that precedes the cursor\r\n       * Returns fontSize of char at the current cursor\r\n       * @return {Number} Character font size\r\n       */\r\n      getCurrentCharFontSize: function() {\r\n        var cp = this._getCurrentCharIndex();\r\n        return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\r\n      },\r\n\r\n      /**\r\n       * High level function to know the color of the cursor.\r\n       * the currentChar is the one that precedes the cursor\r\n       * Returns color (fill) of char at the current cursor\r\n       * @return {String} Character color (fill)\r\n       */\r\n      getCurrentCharColor: function() {\r\n        var cp = this._getCurrentCharIndex();\r\n        return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\r\n      },\r\n\r\n      /**\r\n       * Returns the cursor position for the getCurrent.. functions\r\n       * @private\r\n       */\r\n      _getCurrentCharIndex: function() {\r\n        var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\r\n            charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\r\n        return { l: cursorPosition.lineIndex, c: charIndex };\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns fabric.IText instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.IText\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {function} [callback] invoked with new instance as argument\r\n     */\r\n    fabric.IText.fromObject = function(object, callback) {\r\n      parseDecoration(object);\r\n      if (object.styles) {\r\n        for (var i in object.styles) {\r\n          for (var j in object.styles[i]) {\r\n            parseDecoration(object.styles[i][j]);\r\n          }\r\n        }\r\n      }\r\n      fabric.Object._fromObject('IText', object, callback, 'text');\r\n    };\r\n  })();\r\n\r\n\r\n  (function() {\r\n\r\n    var clone = fabric.util.object.clone;\r\n\r\n    fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n\r\n      /**\r\n       * Initializes all the interactive behavior of IText\r\n       */\r\n      initBehavior: function() {\r\n        this.initAddedHandler();\r\n        this.initRemovedHandler();\r\n        this.initCursorSelectionHandlers();\r\n        this.initDoubleClickSimulation();\r\n        this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\r\n      },\r\n\r\n      onDeselect: function() {\r\n        this.isEditing && this.exitEditing();\r\n        this.selected = false;\r\n      },\r\n\r\n      /**\r\n       * Initializes \"added\" event handler\r\n       */\r\n      initAddedHandler: function() {\r\n        var _this = this;\r\n        this.on('added', function() {\r\n          var canvas = _this.canvas;\r\n          if (canvas) {\r\n            if (!canvas._hasITextHandlers) {\r\n              canvas._hasITextHandlers = true;\r\n              _this._initCanvasHandlers(canvas);\r\n            }\r\n            canvas._iTextInstances = canvas._iTextInstances || [];\r\n            canvas._iTextInstances.push(_this);\r\n          }\r\n        });\r\n      },\r\n\r\n      initRemovedHandler: function() {\r\n        var _this = this;\r\n        this.on('removed', function() {\r\n          var canvas = _this.canvas;\r\n          if (canvas) {\r\n            canvas._iTextInstances = canvas._iTextInstances || [];\r\n            fabric.util.removeFromArray(canvas._iTextInstances, _this);\r\n            if (canvas._iTextInstances.length === 0) {\r\n              canvas._hasITextHandlers = false;\r\n              _this._removeCanvasHandlers(canvas);\r\n            }\r\n          }\r\n        });\r\n      },\r\n\r\n      /**\r\n       * register canvas event to manage exiting on other instances\r\n       * @private\r\n       */\r\n      _initCanvasHandlers: function(canvas) {\r\n        canvas._mouseUpITextHandler = function() {\r\n          if (canvas._iTextInstances) {\r\n            canvas._iTextInstances.forEach(function(obj) {\r\n              obj.__isMousedown = false;\r\n            });\r\n          }\r\n        };\r\n        canvas.on('mouse:up', canvas._mouseUpITextHandler);\r\n      },\r\n\r\n      /**\r\n       * remove canvas event to manage exiting on other instances\r\n       * @private\r\n       */\r\n      _removeCanvasHandlers: function(canvas) {\r\n        canvas.off('mouse:up', canvas._mouseUpITextHandler);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _tick: function() {\r\n        this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\r\n\r\n        var tickState;\r\n\r\n        tickState = {\r\n          isAborted: false,\r\n          abort: function() {\r\n            this.isAborted = true;\r\n          },\r\n        };\r\n\r\n        obj.animate('_currentCursorOpacity', targetOpacity, {\r\n          duration: duration,\r\n          onComplete: function() {\r\n            if (!tickState.isAborted) {\r\n              obj[completeMethod]();\r\n            }\r\n          },\r\n          onChange: function() {\r\n            // we do not want to animate a selection, only cursor\r\n            if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\r\n              obj.renderCursorOrSelection();\r\n            }\r\n          },\r\n          abort: function() {\r\n            return tickState.isAborted;\r\n          }\r\n        });\r\n        return tickState;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _onTickComplete: function() {\r\n\r\n        var _this = this;\r\n\r\n        if (this._cursorTimeout1) {\r\n          clearTimeout(this._cursorTimeout1);\r\n        }\r\n        this._cursorTimeout1 = setTimeout(function() {\r\n          _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\r\n        }, 100);\r\n      },\r\n\r\n      /**\r\n       * Initializes delayed cursor\r\n       */\r\n      initDelayedCursor: function(restart) {\r\n        var _this = this,\r\n            delay = restart ? 0 : this.cursorDelay;\r\n\r\n        this.abortCursorAnimation();\r\n        this._currentCursorOpacity = 1;\r\n        this._cursorTimeout2 = setTimeout(function() {\r\n          _this._tick();\r\n        }, delay);\r\n      },\r\n\r\n      /**\r\n       * Aborts cursor animation and clears all timeouts\r\n       */\r\n      abortCursorAnimation: function() {\r\n        var shouldClear = this._currentTickState || this._currentTickCompleteState,\r\n            canvas = this.canvas;\r\n        this._currentTickState && this._currentTickState.abort();\r\n        this._currentTickCompleteState && this._currentTickCompleteState.abort();\r\n\r\n        clearTimeout(this._cursorTimeout1);\r\n        clearTimeout(this._cursorTimeout2);\r\n\r\n        this._currentCursorOpacity = 0;\r\n        // to clear just itext area we need to transform the context\r\n        // it may not be worth it\r\n        if (shouldClear && canvas) {\r\n          canvas.clearContext(canvas.contextTop || canvas.contextContainer);\r\n        }\r\n\r\n      },\r\n\r\n      /**\r\n       * Selects entire text\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      selectAll: function() {\r\n        this.selectionStart = 0;\r\n        this.selectionEnd = this._text.length;\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Returns selected text\r\n       * @return {String}\r\n       */\r\n      getSelectedText: function() {\r\n        return this._text.slice(this.selectionStart, this.selectionEnd).join('');\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing start of current word according to current selection index\r\n       * @param {Number} startFrom Surrent selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findWordBoundaryLeft: function(startFrom) {\r\n        var offset = 0, index = startFrom - 1;\r\n\r\n        // remove space before cursor first\r\n        if (this._reSpace.test(this._text[index])) {\r\n          while (this._reSpace.test(this._text[index])) {\r\n            offset++;\r\n            index--;\r\n          }\r\n        }\r\n        while (/\\S/.test(this._text[index]) && index > -1) {\r\n          offset++;\r\n          index--;\r\n        }\r\n\r\n        return startFrom - offset;\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing end of current word according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findWordBoundaryRight: function(startFrom) {\r\n        var offset = 0, index = startFrom;\r\n\r\n        // remove space after cursor first\r\n        if (this._reSpace.test(this._text[index])) {\r\n          while (this._reSpace.test(this._text[index])) {\r\n            offset++;\r\n            index++;\r\n          }\r\n        }\r\n        while (/\\S/.test(this._text[index]) && index < this.text.length) {\r\n          offset++;\r\n          index++;\r\n        }\r\n\r\n        return startFrom + offset;\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing start of current line according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findLineBoundaryLeft: function(startFrom) {\r\n        var offset = 0, index = startFrom - 1;\r\n\r\n        while (!/\\n/.test(this._text[index]) && index > -1) {\r\n          offset++;\r\n          index--;\r\n        }\r\n\r\n        return startFrom - offset;\r\n      },\r\n\r\n      /**\r\n       * Find new selection index representing end of current line according to current selection index\r\n       * @param {Number} startFrom Current selection index\r\n       * @return {Number} New selection index\r\n       */\r\n      findLineBoundaryRight: function(startFrom) {\r\n        var offset = 0, index = startFrom;\r\n\r\n        while (!/\\n/.test(this._text[index]) && index < this.text.length) {\r\n          offset++;\r\n          index++;\r\n        }\r\n\r\n        return startFrom + offset;\r\n      },\r\n\r\n      /**\r\n       * Finds index corresponding to beginning or end of a word\r\n       * @param {Number} selectionStart Index of a character\r\n       * @param {Number} direction 1 or -1\r\n       * @return {Number} Index of the beginning or end of a word\r\n       */\r\n      searchWordBoundary: function(selectionStart, direction) {\r\n        var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\r\n            _char     = this.text.charAt(index),\r\n            reNonWord = /[ \\n\\.,;!\\?\\-]/;\r\n\r\n        while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\r\n          index += direction;\r\n          _char = this.text.charAt(index);\r\n        }\r\n        if (reNonWord.test(_char) && _char !== '\\n') {\r\n          index += direction === 1 ? 0 : 1;\r\n        }\r\n        return index;\r\n      },\r\n\r\n      /**\r\n       * Selects a word based on the index\r\n       * @param {Number} selectionStart Index of a character\r\n       */\r\n      selectWord: function(selectionStart) {\r\n        selectionStart = selectionStart || this.selectionStart;\r\n        var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\r\n            newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\r\n\r\n        this.selectionStart = newSelectionStart;\r\n        this.selectionEnd = newSelectionEnd;\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        this.renderCursorOrSelection();\r\n      },\r\n\r\n      /**\r\n       * Selects a line based on the index\r\n       * @param {Number} selectionStart Index of a character\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      selectLine: function(selectionStart) {\r\n        selectionStart = selectionStart || this.selectionStart;\r\n        var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\r\n            newSelectionEnd = this.findLineBoundaryRight(selectionStart);\r\n\r\n        this.selectionStart = newSelectionStart;\r\n        this.selectionEnd = newSelectionEnd;\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * Enters editing state\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      enterEditing: function(e) {\r\n        if (this.isEditing || !this.editable) {\r\n          return;\r\n        }\r\n\r\n        if (this.canvas) {\r\n          this.canvas.calcOffset();\r\n          this.exitEditingOnOthers(this.canvas);\r\n        }\r\n\r\n        this.isEditing = true;\r\n\r\n        this.initHiddenTextarea(e);\r\n        this.hiddenTextarea.focus();\r\n        this.hiddenTextarea.value = this.text;\r\n        this._updateTextarea();\r\n        this._saveEditingProps();\r\n        this._setEditingProps();\r\n        this._textBeforeEdit = this.text;\r\n\r\n        this._tick();\r\n        this.fire('editing:entered');\r\n        this._fireSelectionChanged();\r\n        if (!this.canvas) {\r\n          return this;\r\n        }\r\n        this.canvas.fire('text:editing:entered', { target: this });\r\n        this.initMouseMoveHandler();\r\n        this.canvas.requestRenderAll();\r\n        return this;\r\n      },\r\n\r\n      exitEditingOnOthers: function(canvas) {\r\n        if (canvas._iTextInstances) {\r\n          canvas._iTextInstances.forEach(function(obj) {\r\n            obj.selected = false;\r\n            if (obj.isEditing) {\r\n              obj.exitEditing();\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Initializes \"mousemove\" event handler\r\n       */\r\n      initMouseMoveHandler: function() {\r\n        this.canvas.on('mouse:move', this.mouseMoveHandler);\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      mouseMoveHandler: function(options) {\r\n        if (!this.__isMousedown || !this.isEditing) {\r\n          return;\r\n        }\r\n\r\n        var newSelectionStart = this.getSelectionStartFromPointer(options.e),\r\n            currentStart = this.selectionStart,\r\n            currentEnd = this.selectionEnd;\r\n        if (\r\n          (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\r\n          &&\r\n          (currentStart === newSelectionStart || currentEnd === newSelectionStart)\r\n        ) {\r\n          return;\r\n        }\r\n        if (newSelectionStart > this.__selectionStartOnMouseDown) {\r\n          this.selectionStart = this.__selectionStartOnMouseDown;\r\n          this.selectionEnd = newSelectionStart;\r\n        }\r\n        else {\r\n          this.selectionStart = newSelectionStart;\r\n          this.selectionEnd = this.__selectionStartOnMouseDown;\r\n        }\r\n        if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\r\n          this.restartCursorIfNeeded();\r\n          this._fireSelectionChanged();\r\n          this._updateTextarea();\r\n          this.renderCursorOrSelection();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _setEditingProps: function() {\r\n        this.hoverCursor = 'text';\r\n\r\n        if (this.canvas) {\r\n          this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\r\n        }\r\n\r\n        this.borderColor = this.editingBorderColor;\r\n\r\n        this.hasControls = this.selectable = false;\r\n        this.lockMovementX = this.lockMovementY = true;\r\n      },\r\n\r\n      /**\r\n       * convert from textarea to grapheme indexes\r\n       */\r\n      fromStringToGraphemeSelection: function(start, end, text) {\r\n        var smallerTextStart = text.slice(0, start),\r\n            graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\r\n        if (start === end) {\r\n          return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n        }\r\n        var smallerTextEnd = text.slice(start, end),\r\n            graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\r\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\r\n      },\r\n\r\n      /**\r\n       * convert from fabric to textarea values\r\n       */\r\n      fromGraphemeToStringSelection: function(start, end, _text) {\r\n        var smallerTextStart = _text.slice(0, start),\r\n            graphemeStart = smallerTextStart.join('').length;\r\n        if (start === end) {\r\n          return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n        }\r\n        var smallerTextEnd = _text.slice(start, end),\r\n            graphemeEnd = smallerTextEnd.join('').length;\r\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _updateTextarea: function() {\r\n        this.cursorOffsetCache = { };\r\n        if (!this.hiddenTextarea) {\r\n          return;\r\n        }\r\n        if (!this.inCompositionMode) {\r\n          var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\r\n          this.hiddenTextarea.selectionStart = newSelection.selectionStart;\r\n          this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\r\n        }\r\n        this.updateTextareaPosition();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      updateFromTextArea: function() {\r\n        if (!this.hiddenTextarea) {\r\n          return;\r\n        }\r\n        this.cursorOffsetCache = { };\r\n        this.text = this.hiddenTextarea.value;\r\n        if (this._shouldClearDimensionCache()) {\r\n          this.initDimensions();\r\n          this.setCoords();\r\n        }\r\n        var newSelection = this.fromStringToGraphemeSelection(\r\n          this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\r\n        this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\r\n        if (!this.inCompositionMode) {\r\n          this.selectionStart = newSelection.selectionStart;\r\n        }\r\n        this.updateTextareaPosition();\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      updateTextareaPosition: function() {\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          var style = this._calcTextareaPosition();\r\n          this.hiddenTextarea.style.left = style.left;\r\n          this.hiddenTextarea.style.top = style.top;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @return {Object} style contains style for hiddenTextarea\r\n       */\r\n      _calcTextareaPosition: function() {\r\n        if (!this.canvas) {\r\n          return { x: 1, y: 1 };\r\n        }\r\n        var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\r\n            boundaries = this._getCursorBoundaries(desiredPostion),\r\n            cursorLocation = this.get2DCursorLocation(desiredPostion),\r\n            lineIndex = cursorLocation.lineIndex,\r\n            charIndex = cursorLocation.charIndex,\r\n            charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\r\n            leftOffset = boundaries.leftOffset,\r\n            m = this.calcTransformMatrix(),\r\n            p = {\r\n              x: boundaries.left + leftOffset,\r\n              y: boundaries.top + boundaries.topOffset + charHeight\r\n            },\r\n            upperCanvas = this.canvas.upperCanvasEl,\r\n            upperCanvasWidth = upperCanvas.width,\r\n            upperCanvasHeight = upperCanvas.height,\r\n            maxWidth = upperCanvasWidth - charHeight,\r\n            maxHeight = upperCanvasHeight - charHeight,\r\n            scaleX = upperCanvas.clientWidth / upperCanvasWidth,\r\n            scaleY = upperCanvas.clientHeight / upperCanvasHeight;\r\n\r\n        p = fabric.util.transformPoint(p, m);\r\n        p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\r\n        p.x *= scaleX;\r\n        p.y *= scaleY;\r\n        if (p.x < 0) {\r\n          p.x = 0;\r\n        }\r\n        if (p.x > maxWidth) {\r\n          p.x = maxWidth;\r\n        }\r\n        if (p.y < 0) {\r\n          p.y = 0;\r\n        }\r\n        if (p.y > maxHeight) {\r\n          p.y = maxHeight;\r\n        }\r\n\r\n        // add canvas offset on document\r\n        p.x += this.canvas._offset.left;\r\n        p.y += this.canvas._offset.top;\r\n\r\n        return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _saveEditingProps: function() {\r\n        this._savedProps = {\r\n          hasControls: this.hasControls,\r\n          borderColor: this.borderColor,\r\n          lockMovementX: this.lockMovementX,\r\n          lockMovementY: this.lockMovementY,\r\n          hoverCursor: this.hoverCursor,\r\n          defaultCursor: this.canvas && this.canvas.defaultCursor,\r\n          moveCursor: this.canvas && this.canvas.moveCursor\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _restoreEditingProps: function() {\r\n        if (!this._savedProps) {\r\n          return;\r\n        }\r\n\r\n        this.hoverCursor = this._savedProps.hoverCursor;\r\n        this.hasControls = this._savedProps.hasControls;\r\n        this.borderColor = this._savedProps.borderColor;\r\n        this.lockMovementX = this._savedProps.lockMovementX;\r\n        this.lockMovementY = this._savedProps.lockMovementY;\r\n\r\n        if (this.canvas) {\r\n          this.canvas.defaultCursor = this._savedProps.defaultCursor;\r\n          this.canvas.moveCursor = this._savedProps.moveCursor;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Exits from editing state\r\n       * @return {fabric.IText} thisArg\r\n       * @chainable\r\n       */\r\n      exitEditing: function() {\r\n        var isTextChanged = (this._textBeforeEdit !== this.text);\r\n        this.selected = false;\r\n        this.isEditing = false;\r\n        this.selectable = true;\r\n\r\n        this.selectionEnd = this.selectionStart;\r\n\r\n        if (this.hiddenTextarea) {\r\n          this.hiddenTextarea.blur && this.hiddenTextarea.blur();\r\n          this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\r\n          this.hiddenTextarea = null;\r\n        }\r\n\r\n        this.abortCursorAnimation();\r\n        this._restoreEditingProps();\r\n        this._currentCursorOpacity = 0;\r\n        if (this._shouldClearDimensionCache()) {\r\n          this.initDimensions();\r\n          this.setCoords();\r\n        }\r\n        this.fire('editing:exited');\r\n        isTextChanged && this.fire('modified');\r\n        if (this.canvas) {\r\n          this.canvas.off('mouse:move', this.mouseMoveHandler);\r\n          this.canvas.fire('text:editing:exited', { target: this });\r\n          isTextChanged && this.canvas.fire('object:modified', { target: this });\r\n        }\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _removeExtraneousStyles: function() {\r\n        for (var prop in this.styles) {\r\n          if (!this._textLines[prop]) {\r\n            delete this.styles[prop];\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * remove and reflow a style block from start to end.\r\n       * @param {Number} start linear start position for removal (included in removal)\r\n       * @param {Number} end linear end position for removal ( excluded from removal )\r\n       */\r\n      removeStyleFromTo: function(start, end) {\r\n        var cursorStart = this.get2DCursorLocation(start, true),\r\n            cursorEnd = this.get2DCursorLocation(end, true),\r\n            lineStart = cursorStart.lineIndex,\r\n            charStart = cursorStart.charIndex,\r\n            lineEnd = cursorEnd.lineIndex,\r\n            charEnd = cursorEnd.charIndex,\r\n            i, styleObj;\r\n        if (lineStart !== lineEnd) {\r\n          // step1 remove the trailing of lineStart\r\n          if (this.styles[lineStart]) {\r\n            for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\r\n              delete this.styles[lineStart][i];\r\n            }\r\n          }\r\n          // step2 move the trailing of lineEnd to lineStart if needed\r\n          if (this.styles[lineEnd]) {\r\n            for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\r\n              styleObj = this.styles[lineEnd][i];\r\n              if (styleObj) {\r\n                this.styles[lineStart] || (this.styles[lineStart] = { });\r\n                this.styles[lineStart][charStart + i - charEnd] = styleObj;\r\n              }\r\n            }\r\n          }\r\n          // step3 detects lines will be completely removed.\r\n          for (i = lineStart + 1; i <= lineEnd; i++) {\r\n            delete this.styles[i];\r\n          }\r\n          // step4 shift remaining lines.\r\n          this.shiftLineStyles(lineEnd, lineStart - lineEnd);\r\n        }\r\n        else {\r\n          // remove and shift left on the same line\r\n          if (this.styles[lineStart]) {\r\n            styleObj = this.styles[lineStart];\r\n            var diff = charEnd - charStart, numericChar, _char;\r\n            for (i = charStart; i < charEnd; i++) {\r\n              delete styleObj[i];\r\n            }\r\n            for (_char in this.styles[lineStart]) {\r\n              numericChar = parseInt(_char, 10);\r\n              if (numericChar >= charEnd) {\r\n                styleObj[numericChar - diff] = styleObj[_char];\r\n                delete styleObj[_char];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Shifts line styles up or down\r\n       * @param {Number} lineIndex Index of a line\r\n       * @param {Number} offset Can any number?\r\n       */\r\n      shiftLineStyles: function(lineIndex, offset) {\r\n        // shift all line styles by offset upward or downward\r\n        // do not clone deep. we need new array, not new style objects\r\n        var clonedStyles = clone(this.styles);\r\n        for (var line in this.styles) {\r\n          var numericLine = parseInt(line, 10);\r\n          if (numericLine > lineIndex) {\r\n            this.styles[numericLine + offset] = clonedStyles[numericLine];\r\n            if (!clonedStyles[numericLine - offset]) {\r\n              delete this.styles[numericLine];\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      restartCursorIfNeeded: function() {\r\n        if (!this._currentTickState || this._currentTickState.isAborted\r\n          || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\r\n        ) {\r\n          this.initDelayedCursor();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Inserts new style object\r\n       * @param {Number} lineIndex Index of a line\r\n       * @param {Number} charIndex Index of a char\r\n       * @param {Number} qty number of lines to add\r\n       * @param {Array} copiedStyle Array of objects styles\r\n       */\r\n      insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\r\n        var currentCharStyle,\r\n            newLineStyles = {},\r\n            somethingAdded = false;\r\n\r\n        qty || (qty = 1);\r\n        this.shiftLineStyles(lineIndex, qty);\r\n        if (this.styles[lineIndex]) {\r\n          currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\r\n        }\r\n\r\n        // we clone styles of all chars\r\n        // after cursor onto the current line\r\n        for (var index in this.styles[lineIndex]) {\r\n          var numIndex = parseInt(index, 10);\r\n          if (numIndex >= charIndex) {\r\n            somethingAdded = true;\r\n            newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\r\n            // remove lines from the previous line since they're on a new line now\r\n            delete this.styles[lineIndex][index];\r\n          }\r\n        }\r\n        if (somethingAdded) {\r\n          this.styles[lineIndex + qty] = newLineStyles;\r\n        }\r\n        else {\r\n          delete this.styles[lineIndex + qty];\r\n        }\r\n        // for the other lines\r\n        // we clone current char style onto the next (otherwise empty) line\r\n        while (qty > 1) {\r\n          qty--;\r\n          if (copiedStyle && copiedStyle[qty]) {\r\n            this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\r\n          }\r\n          else if (currentCharStyle) {\r\n            this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\r\n          }\r\n          else {\r\n            delete this.styles[lineIndex + qty];\r\n          }\r\n        }\r\n        this._forceClearCache = true;\r\n      },\r\n\r\n      /**\r\n       * Inserts style object for a given line/char index\r\n       * @param {Number} lineIndex Index of a line\r\n       * @param {Number} charIndex Index of a char\r\n       * @param {Number} quantity number Style object to insert, if given\r\n       * @param {Array} copiedStyle array of style objecs\r\n       */\r\n      insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\r\n        if (!this.styles) {\r\n          this.styles = {};\r\n        }\r\n        var currentLineStyles       = this.styles[lineIndex],\r\n            currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\r\n\r\n        quantity || (quantity = 1);\r\n        // shift all char styles by quantity forward\r\n        // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\r\n        for (var index in currentLineStylesCloned) {\r\n          var numericIndex = parseInt(index, 10);\r\n          if (numericIndex >= charIndex) {\r\n            currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\r\n            // only delete the style if there was nothing moved there\r\n            if (!currentLineStylesCloned[numericIndex - quantity]) {\r\n              delete currentLineStyles[numericIndex];\r\n            }\r\n          }\r\n        }\r\n        this._forceClearCache = true;\r\n        if (copiedStyle) {\r\n          while (quantity--) {\r\n            if (!Object.keys(copiedStyle[quantity]).length) {\r\n              continue;\r\n            }\r\n            if (!this.styles[lineIndex]) {\r\n              this.styles[lineIndex] = {};\r\n            }\r\n            this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\r\n          }\r\n          return;\r\n        }\r\n        if (!currentLineStyles) {\r\n          return;\r\n        }\r\n        var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\r\n        while (newStyle && quantity--) {\r\n          this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Inserts style object(s)\r\n       * @param {Array} insertedText Characters at the location where style is inserted\r\n       * @param {Number} start cursor index for inserting style\r\n       * @param {Array} [copiedStyle] array of style objects to insert.\r\n       */\r\n      insertNewStyleBlock: function(insertedText, start, copiedStyle) {\r\n        var cursorLoc = this.get2DCursorLocation(start, true),\r\n            addedLines = [0], linesLenght = 0;\r\n        for (var i = 0; i < insertedText.length; i++) {\r\n          if (insertedText[i] === '\\n') {\r\n            linesLenght++;\r\n            addedLines[linesLenght] = 0;\r\n          }\r\n          else {\r\n            addedLines[linesLenght]++;\r\n          }\r\n        }\r\n        if (addedLines[0] > 0) {\r\n          this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\r\n          copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\r\n        }\r\n        linesLenght && this.insertNewlineStyleObject(\r\n          cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\r\n        for (var i = 1; i < linesLenght; i++) {\r\n          if (addedLines[i] > 0) {\r\n            this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\r\n          }\r\n          else if (copiedStyle) {\r\n            this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\r\n          }\r\n          copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\r\n        }\r\n        // we use i outside the loop to get it like linesLength\r\n        if (addedLines[i] > 0) {\r\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set the selectionStart and selectionEnd according to the ne postion of cursor\r\n       * mimic the key - mouse navigation when shift is pressed.\r\n       */\r\n      setSelectionStartEndWithShift: function(start, end, newSelection) {\r\n        if (newSelection <= start) {\r\n          if (end === start) {\r\n            this._selectionDirection = 'left';\r\n          }\r\n          else if (this._selectionDirection === 'right') {\r\n            this._selectionDirection = 'left';\r\n            this.selectionEnd = start;\r\n          }\r\n          this.selectionStart = newSelection;\r\n        }\r\n        else if (newSelection > start && newSelection < end) {\r\n          if (this._selectionDirection === 'right') {\r\n            this.selectionEnd = newSelection;\r\n          }\r\n          else {\r\n            this.selectionStart = newSelection;\r\n          }\r\n        }\r\n        else {\r\n          // newSelection is > selection start and end\r\n          if (end === start) {\r\n            this._selectionDirection = 'right';\r\n          }\r\n          else if (this._selectionDirection === 'left') {\r\n            this._selectionDirection = 'right';\r\n            this.selectionStart = end;\r\n          }\r\n          this.selectionEnd = newSelection;\r\n        }\r\n      },\r\n\r\n      setSelectionInBoundaries: function() {\r\n        var length = this.text.length;\r\n        if (this.selectionStart > length) {\r\n          this.selectionStart = length;\r\n        }\r\n        else if (this.selectionStart < 0) {\r\n          this.selectionStart = 0;\r\n        }\r\n        if (this.selectionEnd > length) {\r\n          this.selectionEnd = length;\r\n        }\r\n        else if (this.selectionEnd < 0) {\r\n          this.selectionEnd = 0;\r\n        }\r\n      }\r\n    });\r\n  })();\r\n\r\n\r\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n    /**\r\n     * Initializes \"dbclick\" event handler\r\n     */\r\n    initDoubleClickSimulation: function() {\r\n\r\n      // for double click\r\n      this.__lastClickTime = +new Date();\r\n\r\n      // for triple click\r\n      this.__lastLastClickTime = +new Date();\r\n\r\n      this.__lastPointer = { };\r\n\r\n      this.on('mousedown', this.onMouseDown);\r\n    },\r\n\r\n    /**\r\n     * Default event handler to simulate triple click\r\n     * @private\r\n     */\r\n    onMouseDown: function(options) {\r\n      if (!this.canvas) {\r\n        return;\r\n      }\r\n      this.__newClickTime = +new Date();\r\n      var newPointer = options.pointer;\r\n      if (this.isTripleClick(newPointer)) {\r\n        this.fire('tripleclick', options);\r\n        this._stopEvent(options.e);\r\n      }\r\n      this.__lastLastClickTime = this.__lastClickTime;\r\n      this.__lastClickTime = this.__newClickTime;\r\n      this.__lastPointer = newPointer;\r\n      this.__lastIsEditing = this.isEditing;\r\n      this.__lastSelected = this.selected;\r\n    },\r\n\r\n    isTripleClick: function(newPointer) {\r\n      return this.__newClickTime - this.__lastClickTime < 500 &&\r\n          this.__lastClickTime - this.__lastLastClickTime < 500 &&\r\n          this.__lastPointer.x === newPointer.x &&\r\n          this.__lastPointer.y === newPointer.y;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _stopEvent: function(e) {\r\n      e.preventDefault && e.preventDefault();\r\n      e.stopPropagation && e.stopPropagation();\r\n    },\r\n\r\n    /**\r\n     * Initializes event handlers related to cursor or selection\r\n     */\r\n    initCursorSelectionHandlers: function() {\r\n      this.initMousedownHandler();\r\n      this.initMouseupHandler();\r\n      this.initClicks();\r\n    },\r\n\r\n    /**\r\n     * Initializes double and triple click event handlers\r\n     */\r\n    initClicks: function() {\r\n      this.on('mousedblclick', function(options) {\r\n        this.selectWord(this.getSelectionStartFromPointer(options.e));\r\n      });\r\n      this.on('tripleclick', function(options) {\r\n        this.selectLine(this.getSelectionStartFromPointer(options.e));\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Default event handler for the basic functionalities needed on _mouseDown\r\n     * can be overridden to do something different.\r\n     * Scope of this implementation is: find the click position, set selectionStart\r\n     * find selectionEnd, initialize the drawing of either cursor or selection area\r\n     */\r\n    _mouseDownHandler: function(options) {\r\n      if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\r\n        return;\r\n      }\r\n\r\n      this.__isMousedown = true;\r\n\r\n      if (this.selected) {\r\n        this.setCursorByClick(options.e);\r\n      }\r\n\r\n      if (this.isEditing) {\r\n        this.__selectionStartOnMouseDown = this.selectionStart;\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          this.abortCursorAnimation();\r\n        }\r\n        this.renderCursorOrSelection();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Default event handler for the basic functionalities needed on mousedown:before\r\n     * can be overridden to do something different.\r\n     * Scope of this implementation is: verify the object is already selected when mousing down\r\n     */\r\n    _mouseDownHandlerBefore: function(options) {\r\n      if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\r\n        return;\r\n      }\r\n      if (this === this.canvas._activeObject) {\r\n        this.selected = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Initializes \"mousedown\" event handler\r\n     */\r\n    initMousedownHandler: function() {\r\n      this.on('mousedown', this._mouseDownHandler);\r\n      this.on('mousedown:before', this._mouseDownHandlerBefore);\r\n    },\r\n\r\n    /**\r\n     * Initializes \"mouseup\" event handler\r\n     */\r\n    initMouseupHandler: function() {\r\n      this.on('mouseup', this.mouseUpHandler);\r\n    },\r\n\r\n    /**\r\n     * standard hander for mouse up, overridable\r\n     * @private\r\n     */\r\n    mouseUpHandler: function(options) {\r\n      this.__isMousedown = false;\r\n      if (!this.editable || this.group ||\r\n        (options.transform && options.transform.actionPerformed) ||\r\n        (options.e.button && options.e.button !== 1)) {\r\n        return;\r\n      }\r\n\r\n      if (this.__lastSelected && !this.__corner) {\r\n        this.selected = false;\r\n        this.__lastSelected = false;\r\n        this.enterEditing(options.e);\r\n        if (this.selectionStart === this.selectionEnd) {\r\n          this.initDelayedCursor(true);\r\n        }\r\n        else {\r\n          this.renderCursorOrSelection();\r\n        }\r\n      }\r\n      else {\r\n        this.selected = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Changes cursor location in a text depending on passed pointer (x/y) object\r\n     * @param {Event} e Event object\r\n     */\r\n    setCursorByClick: function(e) {\r\n      var newSelection = this.getSelectionStartFromPointer(e),\r\n          start = this.selectionStart, end = this.selectionEnd;\r\n      if (e.shiftKey) {\r\n        this.setSelectionStartEndWithShift(start, end, newSelection);\r\n      }\r\n      else {\r\n        this.selectionStart = newSelection;\r\n        this.selectionEnd = newSelection;\r\n      }\r\n      if (this.isEditing) {\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns index of a character corresponding to where an object was clicked\r\n     * @param {Event} e Event object\r\n     * @return {Number} Index of a character\r\n     */\r\n    getSelectionStartFromPointer: function(e) {\r\n      var mouseOffset = this.getLocalPointer(e),\r\n          prevWidth = 0,\r\n          width = 0,\r\n          height = 0,\r\n          charIndex = 0,\r\n          lineIndex = 0,\r\n          lineLeftOffset,\r\n          line;\r\n\r\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n        if (height <= mouseOffset.y) {\r\n          height += this.getHeightOfLine(i) * this.scaleY;\r\n          lineIndex = i;\r\n          if (i > 0) {\r\n            charIndex += this._textLines[i - 1].length + 1;\r\n          }\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n      width = lineLeftOffset * this.scaleX;\r\n      line = this._textLines[lineIndex];\r\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n        prevWidth = width;\r\n        // i removed something about flipX here, check.\r\n        width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\r\n        if (width <= mouseOffset.x) {\r\n          charIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\r\n      // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\r\n      var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\r\n          distanceBtwNextCharAndCursor = width - mouseOffset.x,\r\n          offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\r\n            distanceBtwNextCharAndCursor < 0 ? 0 : 1,\r\n          newSelectionStart = index + offset;\r\n      // if object is horizontally flipped, mirror cursor location from the end\r\n      if (this.flipX) {\r\n        newSelectionStart = jlen - newSelectionStart;\r\n      }\r\n\r\n      if (newSelectionStart > this._text.length) {\r\n        newSelectionStart = this._text.length;\r\n      }\r\n\r\n      return newSelectionStart;\r\n    }\r\n  });\r\n\r\n\r\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n\r\n    /**\r\n     * Initializes hidden textarea (needed to bring up keyboard in iOS)\r\n     */\r\n    initHiddenTextarea: function() {\r\n      this.hiddenTextarea = fabric.document.createElement('textarea');\r\n      this.hiddenTextarea.setAttribute('autocapitalize', 'off');\r\n      this.hiddenTextarea.setAttribute('autocorrect', 'off');\r\n      this.hiddenTextarea.setAttribute('autocomplete', 'off');\r\n      this.hiddenTextarea.setAttribute('spellcheck', 'false');\r\n      this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\r\n      this.hiddenTextarea.setAttribute('wrap', 'off');\r\n      var style = this._calcTextareaPosition();\r\n      // line-height: 1px; was removed from the style to fix this:\r\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\r\n      this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\r\n      '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\r\n      ' paddingｰtop: ' + style.fontSize + ';';\r\n      fabric.document.body.appendChild(this.hiddenTextarea);\r\n\r\n      fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\r\n      fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\r\n\r\n      if (!this._clickHandlerInitialized && this.canvas) {\r\n        fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\r\n        this._clickHandlerInitialized = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * For functionalities on keyDown\r\n     * Map a special key to a function of the instance/prototype\r\n     * If you need different behaviour for ESC or TAB or arrows, you have to change\r\n     * this map setting the name of a function that you build on the fabric.Itext or\r\n     * your prototype.\r\n     * the map change will affect all Instances unless you need for only some text Instances\r\n     * in that case you have to clone this object and assign your Instance.\r\n     * this.keysMap = fabric.util.object.clone(this.keysMap);\r\n     * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\r\n     */\r\n    keysMap: {\r\n      9:  'exitEditing',\r\n      27: 'exitEditing',\r\n      33: 'moveCursorUp',\r\n      34: 'moveCursorDown',\r\n      35: 'moveCursorRight',\r\n      36: 'moveCursorLeft',\r\n      37: 'moveCursorLeft',\r\n      38: 'moveCursorUp',\r\n      39: 'moveCursorRight',\r\n      40: 'moveCursorDown',\r\n    },\r\n\r\n    /**\r\n     * For functionalities on keyUp + ctrl || cmd\r\n     */\r\n    ctrlKeysMapUp: {\r\n      67: 'copy',\r\n      88: 'cut'\r\n    },\r\n\r\n    /**\r\n     * For functionalities on keyDown + ctrl || cmd\r\n     */\r\n    ctrlKeysMapDown: {\r\n      65: 'selectAll'\r\n    },\r\n\r\n    onClick: function() {\r\n      // No need to trigger click event here, focus is enough to have the keyboard appear on Android\r\n      this.hiddenTextarea && this.hiddenTextarea.focus();\r\n    },\r\n\r\n    /**\r\n     * Handles keyup event\r\n     * @param {Event} e Event object\r\n     */\r\n    onKeyDown: function(e) {\r\n      if (!this.isEditing || this.inCompositionMode) {\r\n        return;\r\n      }\r\n      if (e.keyCode in this.keysMap) {\r\n        this[this.keysMap[e.keyCode]](e);\r\n      }\r\n      else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\r\n        this[this.ctrlKeysMapDown[e.keyCode]](e);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n      e.stopImmediatePropagation();\r\n      e.preventDefault();\r\n      if (e.keyCode >= 33 && e.keyCode <= 40) {\r\n        // if i press an arrow key just update selection\r\n        this.clearContextTop();\r\n        this.renderCursorOrSelection();\r\n      }\r\n      else {\r\n        this.canvas && this.canvas.requestRenderAll();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handles keyup event\r\n     * We handle KeyUp because ie11 and edge have difficulties copy/pasting\r\n     * if a copy/cut event fired, keyup is dismissed\r\n     * @param {Event} e Event object\r\n     */\r\n    onKeyUp: function(e) {\r\n      if (!this.isEditing || this._copyDone || this.inCompositionMode) {\r\n        this._copyDone = false;\r\n        return;\r\n      }\r\n      if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\r\n        this[this.ctrlKeysMapUp[e.keyCode]](e);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n      e.stopImmediatePropagation();\r\n      e.preventDefault();\r\n      this.canvas && this.canvas.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * Handles onInput event\r\n     * @param {Event} e Event object\r\n     */\r\n    onInput: function(e) {\r\n      var fromPaste = this.fromPaste;\r\n      this.fromPaste = false;\r\n      e && e.stopPropagation();\r\n      if (!this.isEditing) {\r\n        return;\r\n      }\r\n      // decisions about style changes.\r\n      var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\r\n          charCount = this._text.length,\r\n          nextCharCount = nextText.length,\r\n          removedText, insertedText,\r\n          charDiff = nextCharCount - charCount;\r\n      if (this.hiddenTextarea.value === '') {\r\n        this.styles = { };\r\n        this.updateFromTextArea();\r\n        this.fire('changed');\r\n        if (this.canvas) {\r\n          this.canvas.fire('text:changed', { target: this });\r\n          this.canvas.requestRenderAll();\r\n        }\r\n        return;\r\n      }\r\n\r\n      var textareaSelection = this.fromStringToGraphemeSelection(\r\n        this.hiddenTextarea.selectionStart,\r\n        this.hiddenTextarea.selectionEnd,\r\n        this.hiddenTextarea.value\r\n      );\r\n      var backDelete = this.selectionStart > textareaSelection.selectionStart;\r\n\r\n      if (this.selectionStart !== this.selectionEnd) {\r\n        removedText = this._text.slice(this.selectionStart, this.selectionEnd);\r\n        charDiff += this.selectionEnd - this.selectionStart;\r\n      }\r\n      else if (nextCharCount < charCount) {\r\n        if (backDelete) {\r\n          removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\r\n        }\r\n        else {\r\n          removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\r\n        }\r\n      }\r\n      insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\r\n      if (removedText && removedText.length) {\r\n        if (this.selectionStart !== this.selectionEnd) {\r\n          this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\r\n        }\r\n        else if (backDelete) {\r\n          // detect differencies between forwardDelete and backDelete\r\n          this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\r\n        }\r\n        else {\r\n          this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\r\n        }\r\n      }\r\n      if (insertedText.length) {\r\n        if (fromPaste && insertedText.join('') === fabric.copiedText) {\r\n          this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\r\n        }\r\n        else {\r\n          this.insertNewStyleBlock(insertedText, this.selectionStart);\r\n        }\r\n      }\r\n      this.updateFromTextArea();\r\n      this.fire('changed');\r\n      if (this.canvas) {\r\n        this.canvas.fire('text:changed', { target: this });\r\n        this.canvas.requestRenderAll();\r\n      }\r\n    },\r\n    /**\r\n     * Composition start\r\n     */\r\n    onCompositionStart: function() {\r\n      this.inCompositionMode = true;\r\n    },\r\n\r\n    /**\r\n     * Composition end\r\n     */\r\n    onCompositionEnd: function() {\r\n      this.inCompositionMode = false;\r\n    },\r\n\r\n    // /**\r\n    //  * Composition update\r\n    //  */\r\n    onCompositionUpdate: function(e) {\r\n      this.compositionStart = e.target.selectionStart;\r\n      this.compositionEnd = e.target.selectionEnd;\r\n      this.updateTextareaPosition();\r\n    },\r\n\r\n    /**\r\n     * Copies selected text\r\n     * @param {Event} e Event object\r\n     */\r\n    copy: function() {\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        //do not cut-copy if no selection\r\n        return;\r\n      }\r\n\r\n      fabric.copiedText = this.getSelectedText();\r\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\r\n      this._copyDone = true;\r\n    },\r\n\r\n    /**\r\n     * Pastes text\r\n     * @param {Event} e Event object\r\n     */\r\n    paste: function() {\r\n      this.fromPaste = true;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object\r\n     * @return {Object} Clipboard data object\r\n     */\r\n    _getClipboardData: function(e) {\r\n      return (e && e.clipboardData) || fabric.window.clipboardData;\r\n    },\r\n\r\n    /**\r\n     * Finds the width in pixels before the cursor on the same line\r\n     * @private\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @return {Number} widthBeforeCursor width before cursor\r\n     */\r\n    _getWidthBeforeCursor: function(lineIndex, charIndex) {\r\n      var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\r\n\r\n      if (charIndex > 0) {\r\n        bound = this.__charBounds[lineIndex][charIndex - 1];\r\n        widthBeforeCursor += bound.left + bound.width;\r\n      }\r\n      return widthBeforeCursor;\r\n    },\r\n\r\n    /**\r\n     * Gets start offset of a selection\r\n     * @param {Event} e Event object\r\n     * @param {Boolean} isRight\r\n     * @return {Number}\r\n     */\r\n    getDownCursorOffset: function(e, isRight) {\r\n      var selectionProp = this._getSelectionForOffset(e, isRight),\r\n          cursorLocation = this.get2DCursorLocation(selectionProp),\r\n          lineIndex = cursorLocation.lineIndex;\r\n      // if on last line, down cursor goes to end of line\r\n      if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\r\n        // move to the end of a text\r\n        return this._text.length - selectionProp;\r\n      }\r\n      var charIndex = cursorLocation.charIndex,\r\n          widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n          indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\r\n          textAfterCursor = this._textLines[lineIndex].slice(charIndex);\r\n      return textAfterCursor.length + indexOnOtherLine + 2;\r\n    },\r\n\r\n    /**\r\n     * private\r\n     * Helps finding if the offset should be counted from Start or End\r\n     * @param {Event} e Event object\r\n     * @param {Boolean} isRight\r\n     * @return {Number}\r\n     */\r\n    _getSelectionForOffset: function(e, isRight) {\r\n      if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\r\n        return this.selectionEnd;\r\n      }\r\n      else {\r\n        return this.selectionStart;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Event} e Event object\r\n     * @param {Boolean} isRight\r\n     * @return {Number}\r\n     */\r\n    getUpCursorOffset: function(e, isRight) {\r\n      var selectionProp = this._getSelectionForOffset(e, isRight),\r\n          cursorLocation = this.get2DCursorLocation(selectionProp),\r\n          lineIndex = cursorLocation.lineIndex;\r\n      if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\r\n        // if on first line, up cursor goes to start of line\r\n        return -selectionProp;\r\n      }\r\n      var charIndex = cursorLocation.charIndex,\r\n          widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n          indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\r\n          textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\r\n      // return a negative offset\r\n      return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\r\n    },\r\n\r\n    /**\r\n     * for a given width it founds the matching character.\r\n     * @private\r\n     */\r\n    _getIndexOnLine: function(lineIndex, width) {\r\n\r\n      var line = this._textLines[lineIndex],\r\n          lineLeftOffset = this._getLineLeftOffset(lineIndex),\r\n          widthOfCharsOnLine = lineLeftOffset,\r\n          indexOnLine = 0, charWidth, foundMatch;\r\n\r\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n        charWidth = this.__charBounds[lineIndex][j].width;\r\n        widthOfCharsOnLine += charWidth;\r\n        if (widthOfCharsOnLine > width) {\r\n          foundMatch = true;\r\n          var leftEdge = widthOfCharsOnLine - charWidth,\r\n              rightEdge = widthOfCharsOnLine,\r\n              offsetFromLeftEdge = Math.abs(leftEdge - width),\r\n              offsetFromRightEdge = Math.abs(rightEdge - width);\r\n\r\n          indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      // reached end\r\n      if (!foundMatch) {\r\n        indexOnLine = line.length - 1;\r\n      }\r\n\r\n      return indexOnLine;\r\n    },\r\n\r\n\r\n    /**\r\n     * Moves cursor down\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorDown: function(e) {\r\n      if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\r\n        return;\r\n      }\r\n      this._moveCursorUpOrDown('Down', e);\r\n    },\r\n\r\n    /**\r\n     * Moves cursor up\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorUp: function(e) {\r\n      if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n        return;\r\n      }\r\n      this._moveCursorUpOrDown('Up', e);\r\n    },\r\n\r\n    /**\r\n     * Moves cursor up or down, fires the events\r\n     * @param {String} direction 'Up' or 'Down'\r\n     * @param {Event} e Event object\r\n     */\r\n    _moveCursorUpOrDown: function(direction, e) {\r\n      // getUpCursorOffset\r\n      // getDownCursorOffset\r\n      var action = 'get' + direction + 'CursorOffset',\r\n          offset = this[action](e, this._selectionDirection === 'right');\r\n      if (e.shiftKey) {\r\n        this.moveCursorWithShift(offset);\r\n      }\r\n      else {\r\n        this.moveCursorWithoutShift(offset);\r\n      }\r\n      if (offset !== 0) {\r\n        this.setSelectionInBoundaries();\r\n        this.abortCursorAnimation();\r\n        this._currentCursorOpacity = 1;\r\n        this.initDelayedCursor();\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor with shift\r\n     * @param {Number} offset\r\n     */\r\n    moveCursorWithShift: function(offset) {\r\n      var newSelection = this._selectionDirection === 'left'\r\n        ? this.selectionStart + offset\r\n        : this.selectionEnd + offset;\r\n      this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\r\n      return offset !== 0;\r\n    },\r\n\r\n    /**\r\n     * Moves cursor up without shift\r\n     * @param {Number} offset\r\n     */\r\n    moveCursorWithoutShift: function(offset) {\r\n      if (offset < 0) {\r\n        this.selectionStart += offset;\r\n        this.selectionEnd = this.selectionStart;\r\n      }\r\n      else {\r\n        this.selectionEnd += offset;\r\n        this.selectionStart = this.selectionEnd;\r\n      }\r\n      return offset !== 0;\r\n    },\r\n\r\n    /**\r\n     * Moves cursor left\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorLeft: function(e) {\r\n      if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n        return;\r\n      }\r\n      this._moveCursorLeftOrRight('Left', e);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @return {Boolean} true if a change happened\r\n     */\r\n    _move: function(e, prop, direction) {\r\n      var newValue;\r\n      if (e.altKey) {\r\n        newValue = this['findWordBoundary' + direction](this[prop]);\r\n      }\r\n      else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\r\n        newValue = this['findLineBoundary' + direction](this[prop]);\r\n      }\r\n      else {\r\n        this[prop] += direction === 'Left' ? -1 : 1;\r\n        return true;\r\n      }\r\n      if (typeof newValue !== undefined && this[prop] !== newValue) {\r\n        this[prop] = newValue;\r\n        return true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _moveLeft: function(e, prop) {\r\n      return this._move(e, prop, 'Left');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _moveRight: function(e, prop) {\r\n      return this._move(e, prop, 'Right');\r\n    },\r\n\r\n    /**\r\n     * Moves cursor left without keeping selection\r\n     * @param {Event} e\r\n     */\r\n    moveCursorLeftWithoutShift: function(e) {\r\n      var change = true;\r\n      this._selectionDirection = 'left';\r\n\r\n      // only move cursor when there is no selection,\r\n      // otherwise we discard it, and leave cursor on same place\r\n      if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\r\n        change = this._moveLeft(e, 'selectionStart');\r\n\r\n      }\r\n      this.selectionEnd = this.selectionStart;\r\n      return change;\r\n    },\r\n\r\n    /**\r\n     * Moves cursor left while keeping selection\r\n     * @param {Event} e\r\n     */\r\n    moveCursorLeftWithShift: function(e) {\r\n      if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\r\n        return this._moveLeft(e, 'selectionEnd');\r\n      }\r\n      else if (this.selectionStart !== 0){\r\n        this._selectionDirection = 'left';\r\n        return this._moveLeft(e, 'selectionStart');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorRight: function(e) {\r\n      if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\r\n        return;\r\n      }\r\n      this._moveCursorLeftOrRight('Right', e);\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right or Left, fires event\r\n     * @param {String} direction 'Left', 'Right'\r\n     * @param {Event} e Event object\r\n     */\r\n    _moveCursorLeftOrRight: function(direction, e) {\r\n      var actionName = 'moveCursor' + direction + 'With';\r\n      this._currentCursorOpacity = 1;\r\n\r\n      if (e.shiftKey) {\r\n        actionName += 'Shift';\r\n      }\r\n      else {\r\n        actionName += 'outShift';\r\n      }\r\n      if (this[actionName](e)) {\r\n        this.abortCursorAnimation();\r\n        this.initDelayedCursor();\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right while keeping selection\r\n     * @param {Event} e\r\n     */\r\n    moveCursorRightWithShift: function(e) {\r\n      if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\r\n        return this._moveRight(e, 'selectionStart');\r\n      }\r\n      else if (this.selectionEnd !== this._text.length) {\r\n        this._selectionDirection = 'right';\r\n        return this._moveRight(e, 'selectionEnd');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Moves cursor right without keeping selection\r\n     * @param {Event} e Event object\r\n     */\r\n    moveCursorRightWithoutShift: function(e) {\r\n      var changed = true;\r\n      this._selectionDirection = 'right';\r\n\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        changed = this._moveRight(e, 'selectionStart');\r\n        this.selectionEnd = this.selectionStart;\r\n      }\r\n      else {\r\n        this.selectionStart = this.selectionEnd;\r\n      }\r\n      return changed;\r\n    },\r\n\r\n    /**\r\n     * Removes characters from start/end\r\n     * start/end ar per grapheme position in _text array.\r\n     *\r\n     * @param {Number} start\r\n     * @param {Number} end default to start + 1\r\n     */\r\n    removeChars: function(start, end) {\r\n      if (typeof end === 'undefined') {\r\n        end = start + 1;\r\n      }\r\n      this.removeStyleFromTo(start, end);\r\n      this._text.splice(start, end - start);\r\n      this.text = this._text.join('');\r\n      this.set('dirty', true);\r\n      if (this._shouldClearDimensionCache()) {\r\n        this.initDimensions();\r\n        this.setCoords();\r\n      }\r\n      this._removeExtraneousStyles();\r\n    },\r\n\r\n    /**\r\n     * insert characters at start position, before start position.\r\n     * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\r\n     * if style array is provided, it must be as the same length of text in graphemes\r\n     * if end is provided and is bigger than start, old text is replaced.\r\n     * start/end ar per grapheme position in _text array.\r\n     *\r\n     * @param {String} text text to insert\r\n     * @param {Array} style array of style objects\r\n     * @param {Number} start\r\n     * @param {Number} end default to start + 1\r\n     */\r\n    insertChars: function(text, style, start, end) {\r\n      if (typeof end === 'undefined') {\r\n        end = start;\r\n      }\r\n      if (end > start) {\r\n        this.removeStyleFromTo(start, end);\r\n      }\r\n      var graphemes = fabric.util.string.graphemeSplit(text);\r\n      this.insertNewStyleBlock(graphemes, start, style);\r\n      this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\r\n      this.text = this._text.join('');\r\n      this.set('dirty', true);\r\n      if (this._shouldClearDimensionCache()) {\r\n        this.initDimensions();\r\n        this.setCoords();\r\n      }\r\n      this._removeExtraneousStyles();\r\n    },\r\n\r\n  });\r\n\r\n\r\n  /* _TO_SVG_START_ */\r\n  (function() {\r\n    var toFixed = fabric.util.toFixed,\r\n        multipleSpacesRegex = /  +/g;\r\n\r\n    fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\r\n\r\n      /**\r\n       * Returns SVG representation of an instance\r\n       * @param {Function} [reviver] Method for further parsing of svg representation.\r\n       * @return {String} svg representation of an instance\r\n       */\r\n      toSVG: function(reviver) {\r\n        var markup = this._createBaseSVGMarkup(),\r\n            offsets = this._getSVGLeftTopOffsets(),\r\n            textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\r\n        this._wrapSVGTextAndBg(markup, textAndBg);\r\n\r\n        return reviver ? reviver(markup.join('')) : markup.join('');\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getSVGLeftTopOffsets: function() {\r\n        return {\r\n          textLeft: -this.width / 2,\r\n          textTop: -this.height / 2,\r\n          lineTop: this.getHeightOfLine(0)\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _wrapSVGTextAndBg: function(markup, textAndBg) {\r\n        var noShadow = true, filter = this.getSvgFilter(),\r\n            style = filter === '' ? '' : ' style=\"' + filter + '\"',\r\n            textDecoration = this.getSvgTextDecoration(this);\r\n        markup.push(\r\n          '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\r\n          style, '>\\n',\r\n          textAndBg.textBgRects.join(''),\r\n          '\\t\\t<text xml:space=\"preserve\" ',\r\n          (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\r\n          (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\r\n          (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\r\n          (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\r\n          (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\r\n          'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\r\n          textAndBg.textSpans.join(''),\r\n          '</text>\\n',\r\n          '\\t</g>\\n'\r\n        );\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       * @param {Number} textTopOffset Text top offset\r\n       * @param {Number} textLeftOffset Text left offset\r\n       * @return {Object}\r\n       */\r\n      _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\r\n        var textSpans = [],\r\n            textBgRects = [],\r\n            height = textTopOffset, lineOffset;\r\n        // bounding-box background\r\n        this._setSVGBg(textBgRects);\r\n\r\n        // text and text-background\r\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n          lineOffset = this._getLineLeftOffset(i);\r\n          if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\r\n            this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\r\n          }\r\n          this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\r\n          height += this.getHeightOfLine(i);\r\n        }\r\n\r\n        return {\r\n          textSpans: textSpans,\r\n          textBgRects: textBgRects\r\n        };\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _createTextCharSpan: function(_char, styleDecl, left, top) {\r\n        var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\r\n            styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\r\n            fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\r\n            dy = styleDecl.deltaY, dySpan = '',\r\n            NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n        if (dy) {\r\n          dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\r\n        }\r\n        return [\r\n          '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\r\n          toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\r\n          fillStyles, '>',\r\n          fabric.util.string.escapeXml(_char),\r\n          '</tspan>'\r\n        ].join('');\r\n      },\r\n\r\n      _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\r\n        // set proper line offset\r\n        var lineHeight = this.getHeightOfLine(lineIndex),\r\n            isJustify = this.textAlign.indexOf('justify') !== -1,\r\n            actualStyle,\r\n            nextStyle,\r\n            charsToRender = '',\r\n            charBox, style,\r\n            boxWidth = 0,\r\n            line = this._textLines[lineIndex],\r\n            timeToRender;\r\n\r\n        textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\r\n        for (var i = 0, len = line.length - 1; i <= len; i++) {\r\n          timeToRender = i === len || this.charSpacing;\r\n          charsToRender += line[i];\r\n          charBox = this.__charBounds[lineIndex][i];\r\n          if (boxWidth === 0) {\r\n            textLeftOffset += charBox.kernedWidth - charBox.width;\r\n            boxWidth += charBox.width;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n          if (isJustify && !timeToRender) {\r\n            if (this._reSpaceAndTab.test(line[i])) {\r\n              timeToRender = true;\r\n            }\r\n          }\r\n          if (!timeToRender) {\r\n            // if we have charSpacing, we render char by char\r\n            actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n            nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n            timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\r\n          }\r\n          if (timeToRender) {\r\n            style = this._getStyleDeclaration(lineIndex, i) || { };\r\n            textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\r\n            charsToRender = '';\r\n            actualStyle = nextStyle;\r\n            textLeftOffset += boxWidth;\r\n            boxWidth = 0;\r\n          }\r\n        }\r\n      },\r\n\r\n      _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n        textBgRects.push(\r\n          '\\t\\t<rect ',\r\n          this._getFillAttributes(color),\r\n          ' x=\"',\r\n          toFixed(left, NUM_FRACTION_DIGITS),\r\n          '\" y=\"',\r\n          toFixed(top, NUM_FRACTION_DIGITS),\r\n          '\" width=\"',\r\n          toFixed(width, NUM_FRACTION_DIGITS),\r\n          '\" height=\"',\r\n          toFixed(height, NUM_FRACTION_DIGITS),\r\n          '\"></rect>\\n');\r\n      },\r\n\r\n      _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\r\n        var line = this._textLines[i],\r\n            heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\r\n            boxWidth = 0,\r\n            boxStart = 0,\r\n            charBox, currentColor,\r\n            lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n          charBox = this.__charBounds[i][j];\r\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n          if (currentColor !== lastColor) {\r\n            lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\r\n              textTopOffset, boxWidth, heightOfLine);\r\n            boxStart = charBox.left;\r\n            boxWidth = charBox.width;\r\n            lastColor = currentColor;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n        }\r\n        currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\r\n          textTopOffset, boxWidth, heightOfLine);\r\n      },\r\n\r\n      /**\r\n       * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\r\n       * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\r\n       *\r\n       * @private\r\n       * @param {*} value\r\n       * @return {String}\r\n       */\r\n      _getFillAttributes: function(value) {\r\n        var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\r\n        if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\r\n          return 'fill=\"' + value + '\"';\r\n        }\r\n        return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\r\n      },\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      _getSVGLineTopOffset: function(lineIndex) {\r\n        var lineTopOffset = 0, lastHeight = 0;\r\n        for (var j = 0; j < lineIndex; j++) {\r\n          lineTopOffset += this.getHeightOfLine(j);\r\n        }\r\n        lastHeight = this.getHeightOfLine(j);\r\n        return {\r\n          lineTop: lineTopOffset,\r\n          offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Returns styles-string for svg-export\r\n       * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n       * @return {String}\r\n       */\r\n      getSvgStyles: function(skipShadow) {\r\n        var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\r\n        return svgStyle + ' white-space: pre;';\r\n      },\r\n    });\r\n  })();\r\n  /* _TO_SVG_END_ */\r\n\r\n\r\n  (function(global) {\r\n\r\n    'use strict';\r\n\r\n    //var fabric = global.fabric || (global.fabric = {});\r\n\r\n    /**\r\n     * Textbox class, based on IText, allows the user to resize the text rectangle\r\n     * and wraps lines automatically. Textboxes have their Y scaling locked, the\r\n     * user can only change width. Height is adjusted automatically based on the\r\n     * wrapping of lines.\r\n     * @class fabric.Textbox\r\n     * @extends fabric.IText\r\n     * @mixes fabric.Observable\r\n     * @return {fabric.Textbox} thisArg\r\n     * @see {@link fabric.Textbox#initialize} for constructor definition\r\n     */\r\n    fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\r\n\r\n      /**\r\n       * Type of an object\r\n       * @type String\r\n       * @default\r\n       */\r\n      type: 'textbox',\r\n\r\n      /**\r\n       * Minimum width of textbox, in pixels.\r\n       * @type Number\r\n       * @default\r\n       */\r\n      minWidth: 20,\r\n\r\n      /**\r\n       * Minimum calculated width of a textbox, in pixels.\r\n       * fixed to 2 so that an empty textbox cannot go to 0\r\n       * and is still selectable without text.\r\n       * @type Number\r\n       * @default\r\n       */\r\n      dynamicMinWidth: 2,\r\n\r\n      /**\r\n       * Cached array of text wrapping.\r\n       * @type Array\r\n       */\r\n      __cachedLines: null,\r\n\r\n      /**\r\n       * Override standard Object class values\r\n       */\r\n      lockScalingFlip: true,\r\n\r\n      /**\r\n       * Override standard Object class values\r\n       * Textbox needs this on false\r\n       */\r\n      noScaleCache: false,\r\n\r\n      /**\r\n       * Properties which when set cause object to change dimensions\r\n       * @type Object\r\n       * @private\r\n       */\r\n      _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\r\n\r\n      /**\r\n       * Unlike superclass's version of this function, Textbox does not update\r\n       * its width.\r\n       * @private\r\n       * @override\r\n       */\r\n      initDimensions: function() {\r\n        if (this.__skipDimension) {\r\n          return;\r\n        }\r\n        this.isEditing && this.initDelayedCursor();\r\n        this.clearContextTop();\r\n        this._clearCache();\r\n        // clear dynamicMinWidth as it will be different after we re-wrap line\r\n        this.dynamicMinWidth = 0;\r\n        // wrap lines\r\n        this._styleMap = this._generateStyleMap(this._splitText());\r\n        // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\r\n        if (this.dynamicMinWidth > this.width) {\r\n          this._set('width', this.dynamicMinWidth);\r\n        }\r\n        if (this.textAlign.indexOf('justify') !== -1) {\r\n          // once text is measured we need to make space fatter to make justified text.\r\n          this.enlargeSpaces();\r\n        }\r\n        // clear cache and re-calculate height\r\n        this.height = this.calcTextHeight();\r\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\r\n      },\r\n\r\n      /**\r\n       * Generate an object that translates the style object so that it is\r\n       * broken up by visual lines (new lines and automatic wrapping).\r\n       * The original text styles object is broken up by actual lines (new lines only),\r\n       * which is only sufficient for Text / IText\r\n       * @private\r\n       */\r\n      _generateStyleMap: function(textInfo) {\r\n        var realLineCount     = 0,\r\n            realLineCharCount = 0,\r\n            charCount         = 0,\r\n            map               = {};\r\n\r\n        for (var i = 0; i < textInfo.graphemeLines.length; i++) {\r\n          if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\r\n            realLineCharCount = 0;\r\n            charCount++;\r\n            realLineCount++;\r\n          }\r\n          else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\r\n            // this case deals with space's that are removed from end of lines when wrapping\r\n            realLineCharCount++;\r\n            charCount++;\r\n          }\r\n\r\n          map[i] = { line: realLineCount, offset: realLineCharCount };\r\n\r\n          charCount += textInfo.graphemeLines[i].length;\r\n          realLineCharCount += textInfo.graphemeLines[i].length;\r\n        }\r\n\r\n        return map;\r\n      },\r\n\r\n      /**\r\n       * Returns true if object has a style property or has it ina specified line\r\n       * @param {Number} lineIndex\r\n       * @return {Boolean}\r\n       */\r\n      styleHas: function(property, lineIndex) {\r\n        if (this._styleMap && !this.isWrapping) {\r\n          var map = this._styleMap[lineIndex];\r\n          if (map) {\r\n            lineIndex = map.line;\r\n          }\r\n        }\r\n        return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\r\n      },\r\n\r\n      /**\r\n       * Returns true if object has no styling or no styling in a line\r\n       * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n       * @return {Boolean}\r\n       */\r\n      isEmptyStyles: function(lineIndex) {\r\n        var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\r\n        var map = this._styleMap[lineIndex];\r\n        var mapNextLine = this._styleMap[lineIndex + 1];\r\n        if (map) {\r\n          lineIndex = map.line;\r\n          offset = map.offset;\r\n        }\r\n        if (mapNextLine) {\r\n          nextLineIndex = mapNextLine.line;\r\n          shouldLimit = nextLineIndex === lineIndex;\r\n          nextOffset = mapNextLine.offset;\r\n        }\r\n        obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n        for (var p1 in obj) {\r\n          for (var p2 in obj[p1]) {\r\n            if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\r\n              // eslint-disable-next-line no-unused-vars\r\n              for (var p3 in obj[p1][p2]) {\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @private\r\n       */\r\n      _getStyleDeclaration: function(lineIndex, charIndex) {\r\n        if (this._styleMap && !this.isWrapping) {\r\n          var map = this._styleMap[lineIndex];\r\n          if (!map) {\r\n            return null;\r\n          }\r\n          lineIndex = map.line;\r\n          charIndex = map.offset + charIndex;\r\n        }\r\n        return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setStyleDeclaration: function(lineIndex, charIndex, style) {\r\n        var map = this._styleMap[lineIndex];\r\n        lineIndex = map.line;\r\n        charIndex = map.offset + charIndex;\r\n\r\n        this.styles[lineIndex][charIndex] = style;\r\n      },\r\n\r\n      /**\r\n       * @param {Number} lineIndex\r\n       * @param {Number} charIndex\r\n       * @private\r\n       */\r\n      _deleteStyleDeclaration: function(lineIndex, charIndex) {\r\n        var map = this._styleMap[lineIndex];\r\n        lineIndex = map.line;\r\n        charIndex = map.offset + charIndex;\r\n\r\n        delete this.styles[lineIndex][charIndex];\r\n      },\r\n\r\n      /**\r\n      * probably broken need a fix\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _getLineStyle: function(lineIndex) {\r\n        var map = this._styleMap[lineIndex];\r\n        return this.styles[map.line];\r\n      },\r\n\r\n      /**\r\n       * probably broken need a fix\r\n       * @param {Number} lineIndex\r\n       * @param {Object} style\r\n       * @private\r\n       */\r\n      _setLineStyle: function(lineIndex, style) {\r\n        var map = this._styleMap[lineIndex];\r\n        this.styles[map.line] = style;\r\n      },\r\n\r\n      /**\r\n       * probably broken need a fix\r\n       * @param {Number} lineIndex\r\n       * @private\r\n       */\r\n      _deleteLineStyle: function(lineIndex) {\r\n        var map = this._styleMap[lineIndex];\r\n        delete this.styles[map.line];\r\n      },\r\n\r\n      /**\r\n       * Wraps text using the 'width' property of Textbox. First this function\r\n       * splits text on newlines, so we preserve newlines entered by the user.\r\n       * Then it wraps each line using the width of the Textbox by calling\r\n       * _wrapLine().\r\n       * @param {Array} lines The string array of text that is split into lines\r\n       * @param {Number} desiredWidth width you want to wrap to\r\n       * @returns {Array} Array of lines\r\n       */\r\n      _wrapText: function(lines, desiredWidth) {\r\n        var wrapped = [], i;\r\n        this.isWrapping = true;\r\n        for (i = 0; i < lines.length; i++) {\r\n          wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\r\n        }\r\n        this.isWrapping = false;\r\n        return wrapped;\r\n      },\r\n\r\n      /**\r\n       * Helper function to measure a string of text, given its lineIndex and charIndex offset\r\n       * it gets called when charBounds are not available yet.\r\n       * @param {CanvasRenderingContext2D} ctx\r\n       * @param {String} text\r\n       * @param {number} lineIndex\r\n       * @param {number} charOffset\r\n       * @returns {number}\r\n       * @private\r\n       */\r\n      _measureWord: function(word, lineIndex, charOffset) {\r\n        var width = 0, prevGrapheme, skipLeft = true;\r\n        charOffset = charOffset || 0;\r\n        for (var i = 0, len = word.length; i < len; i++) {\r\n          var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\r\n          width += box.kernedWidth;\r\n          prevGrapheme = word[i];\r\n        }\r\n        return width;\r\n      },\r\n\r\n      /**\r\n       * Wraps a line of text using the width of the Textbox and a context.\r\n       * @param {Array} line The grapheme array that represent the line\r\n       * @param {Number} lineIndex\r\n       * @param {Number} desiredWidth width you want to wrap the line to\r\n       * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\r\n       * @returns {Array} Array of line(s) into which the given text is wrapped\r\n       * to.\r\n       */\r\n      _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\r\n        var lineWidth        = 0,\r\n            graphemeLines    = [],\r\n            line             = [],\r\n            // spaces in different languges?\r\n            words            = _line.split(this._reSpaceAndTab),\r\n            word             = '',\r\n            offset           = 0,\r\n            infix            = ' ',\r\n            wordWidth        = 0,\r\n            infixWidth       = 0,\r\n            largestWordWidth = 0,\r\n            lineJustStarted = true,\r\n            additionalSpace = this._getWidthOfCharSpacing(),\r\n            reservedSpace = reservedSpace || 0;\r\n\r\n        desiredWidth -= reservedSpace;\r\n        for (var i = 0; i < words.length; i++) {\r\n          // i would avoid resplitting the graphemes\r\n          word = fabric.util.string.graphemeSplit(words[i]);\r\n          wordWidth = this._measureWord(word, lineIndex, offset);\r\n          offset += word.length;\r\n\r\n          lineWidth += infixWidth + wordWidth - additionalSpace;\r\n\r\n          if (lineWidth >= desiredWidth && !lineJustStarted) {\r\n            graphemeLines.push(line);\r\n            line = [];\r\n            lineWidth = wordWidth;\r\n            lineJustStarted = true;\r\n          }\r\n          else {\r\n            lineWidth += additionalSpace;\r\n          }\r\n\r\n          if (!lineJustStarted) {\r\n            line.push(infix);\r\n          }\r\n          line = line.concat(word);\r\n\r\n          infixWidth = this._measureWord([infix], lineIndex, offset);\r\n          offset++;\r\n          lineJustStarted = false;\r\n          // keep track of largest word\r\n          if (wordWidth > largestWordWidth) {\r\n            largestWordWidth = wordWidth;\r\n          }\r\n        }\r\n\r\n        i && graphemeLines.push(line);\r\n\r\n        if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\r\n          this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\r\n        }\r\n\r\n        return graphemeLines;\r\n      },\r\n\r\n      /**\r\n       * Detect if the text line is ended with an hard break\r\n       * text and itext do not have wrapping, return false\r\n       * @param {Number} lineIndex text to split\r\n       * @return {Boolean}\r\n       */\r\n      isEndOfWrapping: function(lineIndex) {\r\n        if (!this._styleMap[lineIndex + 1]) {\r\n          // is last line, return true;\r\n          return true;\r\n        }\r\n        if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\r\n          // this is last line before a line break, return true;\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n      /**\r\n      * Gets lines of text to render in the Textbox. This function calculates\r\n      * text wrapping on the fly every time it is called.\r\n      * @param {String} text text to split\r\n      * @returns {Array} Array of lines in the Textbox.\r\n      * @override\r\n      */\r\n      _splitTextIntoLines: function(text) {\r\n        var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\r\n            graphemeLines = this._wrapText(newText.lines, this.width),\r\n            lines = new Array(graphemeLines.length);\r\n\r\n        for (var i = 0; i < graphemeLines.length; i++) {\r\n          lines[i] = graphemeLines[i].join('');\r\n        }\r\n        newText.lines = lines;\r\n        newText.graphemeLines = graphemeLines;\r\n        return newText;\r\n      },\r\n\r\n      getMinWidth: function() {\r\n        return Math.max(this.minWidth, this.dynamicMinWidth);\r\n      },\r\n\r\n      /**\r\n       * Returns object representation of an instance\r\n       * @method toObject\r\n       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n       * @return {Object} object representation of an instance\r\n       */\r\n      toObject: function(propertiesToInclude) {\r\n        return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Returns fabric.Textbox instance from an object representation\r\n     * @static\r\n     * @memberOf fabric.Textbox\r\n     * @param {Object} object Object to create an instance from\r\n     * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\r\n     */\r\n    fabric.Textbox.fromObject = function(object, callback) {\r\n      return fabric.Object._fromObject('Textbox', object, callback, 'text');\r\n    };\r\n  })(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n  (function() {\r\n\r\n    /**\r\n     * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\r\n     * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\r\n     */\r\n    var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\r\n\r\n    fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\r\n      lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\r\n\r\n      var t = transform.target;\r\n      if (by === 'x' && t instanceof fabric.Textbox) {\r\n        var tw = t._getTransformedDimensions().x;\r\n        var w = t.width * (localMouse.x / tw);\r\n        if (w >= t.getMinWidth()) {\r\n          t.set('width', w);\r\n          return true;\r\n        }\r\n      }\r\n      else {\r\n        return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\r\n          lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\r\n      }\r\n    };\r\n\r\n    fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\r\n      /**\r\n       * @private\r\n       */\r\n      _removeExtraneousStyles: function() {\r\n        for (var prop in this._styleMap) {\r\n          if (!this._textLines[prop]) {\r\n            delete this.styles[this._styleMap[prop].line];\r\n          }\r\n        }\r\n      },\r\n\r\n    });\r\n\r\n  })();\r\n\r\n  return fabric;\r\n});\r\n\r\n\ndefine('skylark-utils-canvas2d/Canvas',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Canvas = fabric.Canvas;\r\n});\ndefine('skylark-utils-canvas2d/Circle',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Circle = fabric.Circle;\r\n});\ndefine('skylark-utils-canvas2d/Color',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Color = fabric.Color;\r\n});\ndefine('skylark-utils-canvas2d/Ellipse',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Ellipse = fabric.Ellipse;\r\n});\ndefine('skylark-utils-canvas2d/Group',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Group = fabric.Group;\r\n});\ndefine('skylark-utils-canvas2d/Image',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Image = fabric.Image;\r\n});\ndefine('skylark-utils-canvas2d/Line',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Line = fabric.Line;\r\n});\ndefine('skylark-utils-canvas2d/Path',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Path = fabric.Path;\r\n});\ndefine('skylark-utils-canvas2d/Point',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Point = fabric.Point;\r\n});\ndefine('skylark-utils-canvas2d/Polygon',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Polygon = fabric.Polygon;\r\n});\ndefine('skylark-utils-canvas2d/Polyline',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Polyline = fabric.Polyline;\r\n});\ndefine('skylark-utils-canvas2d/Rect',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Rect = fabric.Rect;\r\n});\ndefine('skylark-utils-canvas2d/Text',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Text = fabric.Text;\r\n});\ndefine('skylark-utils-canvas2d/Triangle',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.Triangle = fabric.Triangle;\r\n});\ndefine('skylark-utils-canvas2d/util',[\r\n    \"./canvas2d\",\r\n    \"./primitives/fabric\"\r\n], function(canvas2d,fabric) {\r\n    return canvas2d.util = fabric.util;\r\n});\ndefine('skylark-utils-canvas2d/main',[\r\n    \"./canvas2d\",\r\n    \"./Canvas\",\r\n    \"./Circle\",\r\n    \"./Color\",\r\n    \"./Ellipse\",\r\n    \"./Group\",\r\n    \"./Image\",\r\n    \"./Line\",\r\n    \"./Path\",\r\n    \"./Point\",\r\n    \"./Polygon\",\r\n    \"./Polyline\",\r\n    \"./Rect\",\r\n    \"./Text\",\r\n    \"./Triangle\",\r\n    \"./util\"\r\n], function(canvas2d) {\r\n    return canvas2d;\r\n});\r\n\ndefine('skylark-utils-canvas2d', ['skylark-utils-canvas2d/main'], function (main) { return main; });\n\ndefine('skylark-ui-imager/Imager',[\n    \"skylark-langx/skylark\",\n    \"skylark-langx/langx\",\n    \"skylark-utils/noder\",\n    \"skylark-utils/finder\",\n    \"skylark-utils/widgets\",\n    \"skylark-utils-canvas2d\",\n], function(skylark, langx, noder,finder,widgets,canvas2d,UI) {\n  'use strict';\n\n  var ui = skylark.ui = skylark.ui || {};\n\n  var Plugins = {};\n\n  function computeImageViewPort(image) {\n    //return {\n    //  height : image.height,\n    //  width : image.width\n    //};\n    return {\n      height: Math.abs(image.getWidth() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getHeight() * (Math.cos(image.getAngle() * Math.PI/180))),\n      width: Math.abs(image.getHeight() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getWidth() * (Math.cos(image.getAngle() * Math.PI/180))),\n    }\n  }\n\n // Toolbar object.\n  function Toolbar(element) {\n    this.element = element;\n  }\n\n  Toolbar.prototype = {\n    createButtonGroup: function(options) {\n      var buttonGroup = document.createElement('div');\n      buttonGroup.className = 'darkroom-button-group';\n      this.element.appendChild(buttonGroup);\n\n      return new ButtonGroup(buttonGroup);\n    }\n  };\n\n  // ButtonGroup object.\n  function ButtonGroup(element) {\n    this.element = element;\n  }\n\n  ButtonGroup.prototype = {\n    createButton: function(options) {\n      var defaults = {\n        image: 'help',\n        type: 'default',\n        group: 'default',\n        hide: false,\n        disabled: false\n      };\n\n      options = langx.mixin({},defaults,options);\n\n      var buttonElement = document.createElement('button');\n      buttonElement.type = 'button';\n      buttonElement.className = 'darkroom-button darkroom-button-' + options.type;\n      buttonElement.innerHTML = '<svg class=\"darkroom-icon\"><use xlink:href=\"#' + options.image + '\" /></svg>';\n      this.element.appendChild(buttonElement);\n\n      var button = new Button(buttonElement);\n      button.hide(options.hide);\n      button.disable(options.disabled);\n\n      return button;\n    }\n  }\n\n  // Button object.\n  function Button(element) {\n    this.element = element;\n  }\n\n  Button.prototype = {\n    addEventListener: function(eventName, listener) {\n      if (this.element.addEventListener){\n        this.element.addEventListener(eventName, listener);\n      } else if (this.element.attachEvent) {\n        this.element.attachEvent('on' + eventName, listener);\n      }\n    },\n    removeEventListener: function(eventName, listener) {\n      if (this.element.removeEventListener){\n        this.element.removeEventListener(eventName, listener);\n      }\n    },\n    active: function(value) {\n      if (value)\n        this.element.classList.add('darkroom-button-active');\n      else\n        this.element.classList.remove('darkroom-button-active');\n    },\n    hide: function(value) {\n      if (value)\n        this.element.classList.add('darkroom-button-hidden');\n      else\n        this.element.classList.remove('darkroom-button-hidden');\n    },\n    disable: function(value) {\n      this.element.disabled = (value) ? true : false;\n    }\n  };\n\n  var Imager = widgets.Widget.inherit({\n    klassName : \"Imager\",\n\n    /*\n     * @param {Element} el The container element. \n     */\n    init : function(el,options,plugins) {\n      if (typeof el === 'string') {\n        el = finder.find(el);\n      }\n\n      this._initializeDOM(el);\n      this.overrided(this.containerElement,options);\n      this.options = langx.mixin({}, this.defaults,options);\n\n      // List of the instancied plugins\n      this.plugins = {};\n\n//      var image = new Image();\n//      image.onload = function() {\n        // Initialize the DOM/canvas2d elements\n        this._initializeImage();\n\n        // Then initialize the plugins\n        this._initializePlugins();\n\n        // Public method to adjust image according to the canvas\n        this.refresh(function() {\n          // Execute a custom callback after initialization\n          this.options.initialize.bind(this).call();\n        }.bind(this));\n\n  //    }.bind(this)\n\n      //image.crossOrigin = 'anonymous';\n      //image.src = el.src;\n    },\n\n    // Reference to the main container element\n    containerElement: null,\n\n    // Reference to the canvas2d canvas object\n    canvas: null,\n\n    // Reference to the canvas2d image object\n    image: null,\n\n    // Reference to the canvas2d source canvas object\n    sourceCanvas: null,\n\n    // Reference to the canvas2d source image object\n    sourceImage: null,\n\n    // Track of the original image element\n    originalImageElement: null,\n\n    // Stack of transformations to apply to the image source\n    transformations: [],\n\n    // Default options\n    defaults: {\n      // Canvas properties (dimension, ratio, color)\n      minWidth: null,\n      minHeight: null,\n      maxWidth: null,\n      maxHeight: null,\n      ratio: null,\n      backgroundColor: '#fff',\n\n      // Plugins options\n      plugins: {},\n\n      // Post-initialisation callback\n      initialize: function() { /* noop */ }\n    },\n\n\n\n    selfDestroy: function() {\n      var container = this.containerElement;\n      var image = new Image();\n      image.onload = function() {\n        container.parentNode.replaceChild(image, container);\n      }\n\n      image.src = this.sourceImage.toDataURL();\n    },\n\n    // Add ability to attach event listener on the core object.\n    // It uses the canvas element to process events.\n    addEventListener: function(eventName, callback) {\n      var el = this.canvas.getElement();\n      if (el.addEventListener){\n        el.addEventListener(eventName, callback);\n      } else if (el.attachEvent) {\n        el.attachEvent('on' + eventName, callback);\n      }\n    },\n\n    dispatchEvent: function(eventName) {\n      // Use the old way of creating event to be IE compatible\n      // See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\n      var event = document.createEvent('Event');\n      event.initEvent(eventName, true, true);\n\n      this.canvas.getElement().dispatchEvent(event);\n    },\n\n    // Adjust image & canvas dimension according to min/max width/height\n    // and ratio specified in the options.\n    // This method should be called after each image transformation.\n    refresh: function(next) {\n      var clone = new Image();\n      clone.onload = function() {\n        this._replaceCurrentImage(new canvas2d.Image(clone));\n\n        if (next) next();\n      }.bind(this);\n      clone.src = this.sourceImage.toDataURL();\n    },\n\n    _replaceCurrentImage: function(newImage) {\n      if (this.image) {\n        this.image.remove();\n      }\n\n      this.image = newImage;\n      this.image.selectable = false;\n\n      // Adjust width or height according to specified ratio\n      var viewport = computeImageViewPort(this.image);\n      var canvasWidth = viewport.width;\n      var canvasHeight = viewport.height;\n\n      if (null !== this.options.ratio) {\n        var canvasRatio = +this.options.ratio;\n        var currentRatio = canvasWidth / canvasHeight;\n\n        if (currentRatio > canvasRatio) {\n          canvasHeight = canvasWidth / canvasRatio;\n        } else if (currentRatio < canvasRatio) {\n          canvasWidth = canvasHeight * canvasRatio;\n        }\n      }\n\n      // Then scale the image to fit into dimension limits\n      var scaleMin = 1;\n      var scaleMax = 1;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (null !== this.options.maxWidth && this.options.maxWidth < canvasWidth) {\n        scaleX =  this.options.maxWidth / canvasWidth;\n      }\n      if (null !== this.options.maxHeight && this.options.maxHeight < canvasHeight) {\n        scaleY =  this.options.maxHeight / canvasHeight;\n      }\n      scaleMin = Math.min(scaleX, scaleY);\n\n      scaleX = 1;\n      scaleY = 1;\n      if (null !== this.options.minWidth && this.options.minWidth > canvasWidth) {\n        scaleX =  this.options.minWidth / canvasWidth;\n      }\n      if (null !== this.options.minHeight && this.options.minHeight > canvasHeight) {\n        scaleY =  this.options.minHeight / canvasHeight;\n      }\n      scaleMax = Math.max(scaleX, scaleY);\n\n      var scale = scaleMax * scaleMin; // one should be equals to 1\n\n      canvasWidth *= scale;\n      canvasHeight *= scale;\n\n      // Finally place the image in the center of the canvas\n      this.image.setScaleX(1 * scale);\n      this.image.setScaleY(1 * scale);\n      this.canvas.add(this.image);\n      this.canvas.setWidth(canvasWidth);\n      this.canvas.setHeight(canvasHeight);\n      this.canvas.centerObject(this.image);\n      this.image.setCoords();\n    },\n\n    // Apply the transformation on the current image and save it in the\n    // transformations stack (in order to reconstitute the previous states\n    // of the image).\n    applyTransformation: function(transformation) {\n      this.transformations.push(transformation);\n\n      transformation.applyTransformation(\n        this.sourceCanvas,\n        this.sourceImage,\n        this._postTransformation.bind(this)\n      );\n    },\n\n    _postTransformation: function(newImage) {\n      if (newImage)\n        this.sourceImage = newImage;\n\n      this.refresh(function() {\n        this.dispatchEvent('core:transformation');\n      }.bind(this));\n    },\n\n    // Initialize image from original element plus re-apply every\n    // transformations.\n    reinitializeImage: function() {\n      this.sourceImage.remove();\n      this._initializeImage();\n      this._popTransformation(this.transformations.slice())\n    },\n\n    _popTransformation: function(transformations) {\n      if (0 === transformations.length) {\n        this.dispatchEvent('core:reinitialized');\n        this.refresh();\n        return;\n      }\n\n      var transformation = transformations.shift();\n\n      var next = function(newImage) {\n        if (newImage) this.sourceImage = newImage;\n        this._popTransformation(transformations)\n      };\n\n      transformation.applyTransformation(\n        this.sourceCanvas,\n        this.sourceImage,\n        next.bind(this)\n      );\n    },\n\n    // Create the DOM elements and instanciate the canvas2d canvas.\n    // The image element is replaced by a new `div` element.\n    // However the original image is re-injected in order to keep a trace of it.\n    _initializeDOM: function(imageElement) {\n      // Container\n      var mainContainerElement = document.createElement('div');\n      mainContainerElement.className = 'darkroom-container';\n\n      // Toolbar\n      var toolbarElement = document.createElement('div');\n      toolbarElement.className = 'darkroom-toolbar';\n      mainContainerElement.appendChild(toolbarElement);\n\n      // Viewport canvas\n      var canvasContainerElement = document.createElement('div');\n      canvasContainerElement.className = 'darkroom-image-container';\n      var canvasElement = this.canvasElement = document.createElement('canvas');\n      canvasContainerElement.appendChild(canvasElement);\n      mainContainerElement.appendChild(canvasContainerElement);\n\n      // Source canvas\n      var sourceCanvasContainerElement = document.createElement('div');\n      sourceCanvasContainerElement.className = 'darkroom-source-container';\n      sourceCanvasContainerElement.style.display = 'none';\n      var sourceCanvasElement = this.sourceCanvasElement = document.createElement('canvas');\n      sourceCanvasContainerElement.appendChild(sourceCanvasElement);\n      mainContainerElement.appendChild(sourceCanvasContainerElement);\n\n      // Original image\n      imageElement.parentNode.replaceChild(mainContainerElement, imageElement);\n      imageElement.style.display = 'none';\n      mainContainerElement.appendChild(imageElement);\n\n      // Instanciate object from elements\n      this.containerElement = mainContainerElement;\n      this.originalImageElement = imageElement;\n\n      this.toolbar = new Toolbar(toolbarElement);\n\n    },\n\n    // Instanciate the canvas2d image object.\n    // The image is created as a static element with no control,\n    // then it is add in the canvas2d canvas object.\n    _initializeImage: function() {\n      this.canvas = new canvas2d.Canvas(this.canvasElement, {\n        selection: false,\n        backgroundColor: this.options.backgroundColor\n      });\n\n      this.sourceCanvas = new canvas2d.Canvas(this.sourceCanvasElement, {\n        selection: false,\n        backgroundColor: this.options.backgroundColor\n      });\n \n      this.sourceImage = new canvas2d.Image(this.originalImageElement, {\n        // Some options to make the image static\n        selectable: false,\n        evented: false,\n        lockMovementX: true,\n        lockMovementY: true,\n        lockRotation: true,\n        lockScalingX: true,\n        lockScalingY: true,\n        lockUniScaling: true,\n        hasControls: false,\n        hasBorders: false,\n      });\n\n      this.sourceCanvas.add(this.sourceImage);\n\n      // Adjust width or height according to specified ratio\n      var viewport = computeImageViewPort(this.sourceImage);\n      var canvasWidth = viewport.width;\n      var canvasHeight = viewport.height;\n\n      this.sourceCanvas.setWidth(canvasWidth);\n      this.sourceCanvas.setHeight(canvasHeight);\n      this.sourceCanvas.centerObject(this.sourceImage);\n      this.sourceImage.setCoords();\n    },\n\n    // Initialize every plugins.\n    // Note that plugins are instanciated in the same order than they\n    // are declared in the parameter object.\n    _initializePlugins: function() {\n      for (var name in Plugins) {\n        var pluginInfo = Plugins[name];\n        var options = this.options.plugins[name];\n\n        // Setting false into the plugin options will disable the plugin\n        if (options === false)\n          continue;\n\n        // Avoid any issues with _proto_\n        if (!Plugins.hasOwnProperty(name))\n          continue;\n\n        this.plugins[name] = new pluginInfo.ctor(this, options);\n      }\n    }\n\n  });\n\n\n  Imager.Plugin = langx.Evented.inherit({\n    klassName : \"Plugin\",\n\n    defaults: {},\n\n    init : function(imager,options) {\n      this.imager = imager;\n      this.options = langx.mixin({},this.defaults,options);\n\n    }\n  });\n\n\n  Imager.Transformation = langx.Evented.inherit({\n    klassName : \"Transformation\",\n\n    init : function(options) {\n      this.options = options;\n    }\n  });\n\n\n  Imager.installPlugin = function(setting) {\n\n    //Plugins.push(setting);\n    Plugins[setting.name] = setting;\n  };\n\n  return ui.Imager = Imager;\n\n});\n\n\ndefine('skylark-ui-imager/plugins/history',[\n  \"skylark-langx/langx\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/query\",\n  \"skylark-utils-canvas2d\",\n  '../Imager',\n],function(langx,noder, $, canvas2d,Imager) {\n  'use strict';\n\n  var HistoryPlugin= Imager.Plugin.inherit({\n     undoTransformations: null,\n\n     init : function(imager,options) {\n      this.overrided(imager,options);\n      this.undoTransformations = [];\n      this._initButtons();\n\n      this.imager.addEventListener('core:transformation', this._onTranformationApplied.bind(this));\n    },\n\n    undo: function() {\n      if (this.imager.transformations.length === 0) {\n        return;\n      }\n\n      var lastTransformation = this.imager.transformations.pop();\n      this.undoTransformations.unshift(lastTransformation);\n\n      this.imager.reinitializeImage();\n      this._updateButtons();\n    },\n\n    redo: function() {\n      if (this.undoTransformations.length === 0) {\n        return;\n      }\n\n      var cancelTransformation = this.undoTransformations.shift();\n      this.imager.transformations.push(cancelTransformation);\n\n      this.imager.reinitializeImage();\n      this._updateButtons();\n    },\n\n    _initButtons: function() {\n      var buttonGroup = this.imager.toolbar.createButtonGroup();\n\n      this.backButton = buttonGroup.createButton({\n        image: 'undo',\n        disabled: true\n      });\n\n      this.forwardButton = buttonGroup.createButton({\n        image: 'redo',\n        disabled: true\n      });\n\n      this.backButton.addEventListener('click', this.undo.bind(this));\n      this.forwardButton.addEventListener('click', this.redo.bind(this));\n\n      return this;\n    },\n\n    _updateButtons: function() {\n      this.backButton.disable((this.imager.transformations.length === 0))\n      this.forwardButton.disable((this.undoTransformations.length === 0))\n    },\n\n    _onTranformationApplied: function() {\n      this.undoTransformations = [];\n      this._updateButtons();\n    }\n  });\n\n  var pluginInfo = {\n    name : \"history\",\n    ctor : HistoryPlugin\n  };\n\n  Imager.installPlugin(pluginInfo);\n\n  return pluginInfo;\n\n  \n});\n\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-ui-imager/plugins/crop',[\n  \"skylark-langx/langx\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/images\",\n  \"skylark-utils/query\",\n  \"skylark-utils-canvas2d\",\n  '../Imager',\n],function(langx,noder, images,$, canvas2d,Imager) {\n  'use strict';\n\n  function computeImageViewPort(image) {\n    //return {\n    //  height : image.height,\n    //  width : image.width\n    //};\n    return {\n      height: Math.abs(image.getWidth() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getHeight() * (Math.cos(image.getAngle() * Math.PI/180))),\n      width: Math.abs(image.getHeight() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getWidth() * (Math.cos(image.getAngle() * Math.PI/180))),\n    }\n  }\n  \n\n  var Crop = Imager.Transformation.inherit({\n    applyTransformation: function(canvas, image, next) {\n      // Snapshot the image delimited by the crop zone\n      var snapshot = new Image();\n\n      var viewport = computeImageViewPort(image);\n      var imageWidth = viewport.width;\n      var imageHeight = viewport.height;\n\n      var left = this.options.left * imageWidth;\n      var top = this.options.top * imageHeight;\n      var width = Math.min(this.options.width * imageWidth, imageWidth - left);\n      var height = Math.min(this.options.height * imageHeight, imageHeight - top);\n\n      snapshot.src = canvas.toDataURL({\n        left: left,\n        top: top,\n        width: width,\n        height: height,\n      });\n\n      images.loaded(snapshot).then(function() {\n        // Validate image\n        if (height < 1 || width < 1)\n          return;\n\n        var imgInstance = new canvas2d.Image(snapshot, {\n          // options to make the image static\n          selectable: false,\n          evented: false,\n          lockMovementX: true,\n          lockMovementY: true,\n          lockRotation: true,\n          lockScalingX: true,\n          lockScalingY: true,\n          lockUniScaling: true,\n          hasControls: false,\n          hasBorders: false\n        });\n\n        var width = snapshot.width;\n        var height = snapshot.height;\n\n        // Update canvas size\n        canvas.setWidth(width);\n        canvas.setHeight(height);\n\n        // Add image\n        image.remove();\n        canvas.add(imgInstance);\n\n        next(imgInstance);\n      });\n    }\n  });\n\n  var CropZone = canvas2d.util.createClass(canvas2d.Rect, {\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n\n      var canvas = ctx.canvas;\n      var dashWidth = 7;\n\n      // Set original scale\n      var flipX = this.flipX ? -1 : 1;\n      var flipY = this.flipY ? -1 : 1;\n      var scaleX = flipX / this.scaleX;\n      var scaleY = flipY / this.scaleY;\n\n      ctx.scale(scaleX, scaleY);\n\n      // Overlay rendering\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n      this._renderOverlay(ctx);\n\n      // Set dashed borders\n      if (ctx.setLineDash !== undefined)\n        ctx.setLineDash([dashWidth, dashWidth]);\n      else if (ctx.mozDash !== undefined)\n        ctx.mozDash = [dashWidth, dashWidth];\n\n      // First lines rendering with black\n      ctx.strokeStyle = 'rgba(0, 0, 0, 0.2)';\n      this._renderBorders(ctx);\n      this._renderGrid(ctx);\n\n      // Re render lines in white\n      ctx.lineDashOffset = dashWidth;\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n      this._renderBorders(ctx);\n      this._renderGrid(ctx);\n\n      // Reset scale\n      ctx.scale(1/scaleX, 1/scaleY);\n    },\n\n    _renderOverlay: function(ctx) {\n      var canvas = ctx.canvas;\n\n      //\n      //    x0    x1        x2      x3\n      // y0 +------------------------+\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\n      // y1 +------+---------+-------+\n      //    |\\\\\\\\\\\\|         |\\\\\\\\\\\\\\|\n      //    |\\\\\\\\\\\\|    0    |\\\\\\\\\\\\\\|\n      //    |\\\\\\\\\\\\|         |\\\\\\\\\\\\\\|\n      // y2 +------+---------+-------+\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\n      //    |\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\n      // y3 +------------------------+\n      //\n\n      var x0 = Math.ceil(-this.getWidth() / 2 - this.getLeft());\n      var x1 = Math.ceil(-this.getWidth() / 2);\n      var x2 = Math.ceil(this.getWidth() / 2);\n      var x3 = Math.ceil(this.getWidth() / 2 + (canvas.width - this.getWidth() - this.getLeft()));\n\n      var y0 = Math.ceil(-this.getHeight() / 2 - this.getTop());\n      var y1 = Math.ceil(-this.getHeight() / 2);\n      var y2 = Math.ceil(this.getHeight() / 2);\n      var y3 = Math.ceil(this.getHeight() / 2 + (canvas.height - this.getHeight() - this.getTop()));\n\n      ctx.beginPath();\n      \n      // Draw outer rectangle.\n      // Numbers are +/-1 so that overlay edges don't get blurry.\n      ctx.moveTo(x0 - 1, y0 - 1);\n      ctx.lineTo(x3 + 1, y0 - 1);\n      ctx.lineTo(x3 + 1, y3 + 1);\n      ctx.lineTo(x0 - 1, y3 - 1);\n      ctx.lineTo(x0 - 1, y0 - 1);\n      ctx.closePath();\n\n      // Draw inner rectangle.\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x1, y2);\n      ctx.lineTo(x2, y2);\n      ctx.lineTo(x2, y1);\n      ctx.lineTo(x1, y1);\n\n      ctx.closePath();\n      ctx.fill();\n    },\n\n    _renderBorders: function(ctx) {\n      ctx.beginPath();\n      ctx.moveTo(-this.getWidth()/2, -this.getHeight()/2); // upper left\n      ctx.lineTo(this.getWidth()/2, -this.getHeight()/2); // upper right\n      ctx.lineTo(this.getWidth()/2, this.getHeight()/2); // down right\n      ctx.lineTo(-this.getWidth()/2, this.getHeight()/2); // down left\n      ctx.lineTo(-this.getWidth()/2, -this.getHeight()/2); // upper left\n      ctx.stroke();\n    },\n\n    _renderGrid: function(ctx) {\n      return;\n      // Vertical lines\n      ctx.beginPath();\n      ctx.moveTo(-this.getWidth()/2 + 1/3 * this.getWidth(), -this.getHeight()/2);\n      ctx.lineTo(-this.getWidth()/2 + 1/3 * this.getWidth(), this.getHeight()/2);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(-this.getWidth()/2 + 2/3 * this.getWidth(), -this.getHeight()/2);\n      ctx.lineTo(-this.getWidth()/2 + 2/3 * this.getWidth(), this.getHeight()/2);\n      ctx.stroke();\n      // Horizontal lines\n      ctx.beginPath();\n      ctx.moveTo(-this.getWidth()/2, -this.getHeight()/2 + 1/3 * this.getHeight());\n      ctx.lineTo(this.getWidth()/2, -this.getHeight()/2 + 1/3 * this.getHeight());\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(-this.getWidth()/2, -this.getHeight()/2 + 2/3 * this.getHeight());\n      ctx.lineTo(this.getWidth()/2, -this.getHeight()/2 + 2/3 * this.getHeight());\n      ctx.stroke();\n    }\n  });\n\n  var CropPlugin = Imager.Plugin.inherit({\n    // Init point\n    startX: null,\n    startY: null,\n\n    // Keycrop\n    isKeyCroping: false,\n    isKeyLeft: false,\n    isKeyUp: false,\n\n    defaults: {\n      // min crop dimension\n      minHeight: 1,\n      minWidth: 1,\n      // ensure crop ratio\n      ratio: null,\n      // quick crop feature (set a key code to enable it)\n      quickCropKey: false\n    },\n\n     init : function(imager,options) {\n      this.overrided(imager,options);\n      var buttonGroup = this.imager.toolbar.createButtonGroup();\n\n      this.cropButton = buttonGroup.createButton({\n        image: 'crop'\n      });\n      this.okButton = buttonGroup.createButton({\n        image: 'done',\n        type: 'success',\n        hide: true\n      });\n      this.cancelButton = buttonGroup.createButton({\n        image: 'close',\n        type: 'danger',\n        hide: true\n      });\n\n      // Buttons click\n      this.cropButton.addEventListener('click', this.toggleCrop.bind(this));\n      this.okButton.addEventListener('click', this.cropCurrentZone.bind(this));\n      this.cancelButton.addEventListener('click', this.releaseFocus.bind(this));\n\n      // Canvas events\n      this.imager.canvas.on('mouse:down', this.onMouseDown.bind(this));\n      this.imager.canvas.on('mouse:move', this.onMouseMove.bind(this));\n      this.imager.canvas.on('mouse:up', this.onMouseUp.bind(this));\n      this.imager.canvas.on('object:moving', this.onObjectMoving.bind(this));\n      this.imager.canvas.on('object:scaling', this.onObjectScaling.bind(this));\n\n      canvas2d.util.addListener(document, 'keydown', this.onKeyDown.bind(this));\n      canvas2d.util.addListener(document, 'keyup', this.onKeyUp.bind(this));\n\n      this.imager.addEventListener('core:transformation', this.releaseFocus.bind(this));\n    },\n\n    // Avoid crop zone to go beyond the canvas edges\n    onObjectMoving: function(event) {\n      if (!this.hasFocus()) {\n        return;\n      }\n\n      var currentObject = event.target;\n      if (currentObject !== this.cropZone)\n        return;\n\n      var canvas = this.imager.canvas;\n      var x = currentObject.getLeft(), y = currentObject.getTop();\n      var w = currentObject.getWidth(), h = currentObject.getHeight();\n      var maxX = canvas.getWidth() - w;\n      var maxY = canvas.getHeight() - h;\n\n      if (x < 0)\n        currentObject.set('left', 0);\n      if (y < 0)\n        currentObject.set('top', 0);\n      if (x > maxX)\n        currentObject.set('left', maxX);\n      if (y > maxY)\n        currentObject.set('top', maxY);\n\n      this.imager.dispatchEvent('crop:update');\n    },\n\n    // Prevent crop zone from going beyond the canvas edges (like mouseMove)\n    onObjectScaling: function(event) {\n      if (!this.hasFocus()) {\n        return;\n      }\n\n      var preventScaling = false;\n      var currentObject = event.target;\n      if (currentObject !== this.cropZone)\n        return;\n\n      var canvas = this.imager.canvas;\n      var pointer = canvas.getPointer(event.e);\n      var x = pointer.x;\n      var y = pointer.y;\n\n      var minX = currentObject.getLeft();\n      var minY = currentObject.getTop();\n      var maxX = currentObject.getLeft() + currentObject.getWidth();\n      var maxY = currentObject.getTop() + currentObject.getHeight();\n\n      if (null !== this.options.ratio) {\n        if (minX < 0 || maxX > canvas.getWidth() || minY < 0 || maxY > canvas.getHeight()) {\n          preventScaling = true;\n        }\n      }\n\n      if (minX < 0 || maxX > canvas.getWidth() || preventScaling) {\n        var lastScaleX = this.lastScaleX || 1;\n        currentObject.setScaleX(lastScaleX);\n      }\n      if (minX < 0) {\n        currentObject.setLeft(0);\n      }\n\n      if (minY < 0 || maxY > canvas.getHeight() || preventScaling) {\n        var lastScaleY = this.lastScaleY || 1;\n        currentObject.setScaleY(lastScaleY);\n      }\n      if (minY < 0) {\n        currentObject.setTop(0);\n      }\n\n      if (currentObject.getWidth() < this.options.minWidth) {\n        currentObject.scaleToWidth(this.options.minWidth);\n      }\n      if (currentObject.getHeight() < this.options.minHeight) {\n        currentObject.scaleToHeight(this.options.minHeight);\n      }\n\n      this.lastScaleX = currentObject.getScaleX();\n      this.lastScaleY = currentObject.getScaleY();\n\n      this.imager.dispatchEvent('crop:update');\n    },\n\n    // Init crop zone\n    onMouseDown: function(event) {\n      if (!this.hasFocus()) {\n        return;\n      }\n\n      var canvas = this.imager.canvas;\n\n      // recalculate offset, in case canvas was manipulated since last `calcOffset`\n      canvas.calcOffset();\n      var pointer = canvas.getPointer(event.e);\n      var x = pointer.x;\n      var y = pointer.y;\n      var point = new canvas2d.Point(x, y);\n\n      // Check if user want to scale or drag the crop zone.\n      var activeObject = canvas.getActiveObject();\n      if (activeObject === this.cropZone || this.cropZone.containsPoint(point)) {\n        return;\n      }\n\n      canvas.discardActiveObject();\n      this.cropZone.setWidth(0);\n      this.cropZone.setHeight(0);\n      this.cropZone.setScaleX(1);\n      this.cropZone.setScaleY(1);\n\n      this.startX = x;\n      this.startY = y;\n    },\n\n    // Extend crop zone\n    onMouseMove: function(event) {\n      // Quick crop feature\n      if (this.isKeyCroping)\n        return this.onMouseMoveKeyCrop(event);\n\n      if (null === this.startX || null === this.startY) {\n        return;\n      }\n\n      var canvas = this.imager.canvas;\n      var pointer = canvas.getPointer(event.e);\n      var x = pointer.x;\n      var y = pointer.y;\n\n      this._renderCropZone(this.startX, this.startY, x, y);\n    },\n\n    onMouseMoveKeyCrop: function(event) {\n      var canvas = this.imager.canvas;\n      var zone = this.cropZone;\n\n      var pointer = canvas.getPointer(event.e);\n      var x = pointer.x;\n      var y = pointer.y;\n\n      if (!zone.left || !zone.top) {\n        zone.setTop(y);\n        zone.setLeft(x);\n      }\n\n      this.isKeyLeft =  x < zone.left + zone.width / 2 ;\n      this.isKeyUp = y < zone.top + zone.height / 2 ;\n\n      this._renderCropZone(\n        Math.min(zone.left, x),\n        Math.min(zone.top, y),\n        Math.max(zone.left+zone.width, x),\n        Math.max(zone.top+zone.height, y)\n      );\n    },\n\n    // Finish crop zone\n    onMouseUp: function(event) {\n      if (null === this.startX || null === this.startY) {\n        return;\n      }\n\n      var canvas = this.imager.canvas;\n      this.cropZone.setCoords();\n      canvas.setActiveObject(this.cropZone);\n      canvas.calcOffset();\n\n      this.startX = null;\n      this.startY = null;\n    },\n\n    onKeyDown: function(event) {\n      if (false === this.options.quickCropKey || event.keyCode !== this.options.quickCropKey || this.isKeyCroping)\n        return;\n\n      // Active quick crop flow\n      this.isKeyCroping = true ;\n      this.imager.canvas.discardActiveObject();\n      this.cropZone.setWidth(0);\n      this.cropZone.setHeight(0);\n      this.cropZone.setScaleX(1);\n      this.cropZone.setScaleY(1);\n      this.cropZone.setTop(0);\n      this.cropZone.setLeft(0);\n    },\n\n    onKeyUp: function(event) {\n      if (false === this.options.quickCropKey || event.keyCode !== this.options.quickCropKey || !this.isKeyCroping)\n        return;\n\n      // Unactive quick crop flow\n      this.isKeyCroping = false;\n      this.startX = 1;\n      this.startY = 1;\n      this.onMouseUp();\n    },\n\n    selectZone: function(x, y, width, height, forceDimension) {\n      if (!this.hasFocus())\n        this.requireFocus();\n\n      if (!forceDimension) {\n        this._renderCropZone(x, y, x+width, y+height);\n      } else {\n        this.cropZone.set({\n          'left': x,\n          'top': y,\n          'width': width,\n          'height': height\n        });\n      }\n\n      var canvas = this.imager.canvas;\n      canvas.bringToFront(this.cropZone);\n      this.cropZone.setCoords();\n      canvas.setActiveObject(this.cropZone);\n      canvas.calcOffset();\n\n      this.imager.dispatchEvent('crop:update');\n    },\n\n    toggleCrop: function() {\n      if (!this.hasFocus())\n        this.requireFocus();\n      else\n        this.releaseFocus();\n    },\n\n    cropCurrentZone: function() {\n      if (!this.hasFocus())\n        return;\n\n      // Avoid croping empty zone\n      if (this.cropZone.width < 1 && this.cropZone.height < 1)\n        return;\n\n      var image = this.imager.image;\n\n      // Compute crop zone dimensions\n      var top = this.cropZone.getTop() - image.getTop();\n      var left = this.cropZone.getLeft() - image.getLeft();\n      var width = this.cropZone.getWidth();\n      var height = this.cropZone.getHeight();\n\n      // Adjust dimensions to image only\n      if (top < 0) {\n        height += top;\n        top = 0;\n      }\n\n      if (left < 0) {\n        width += left;\n        left = 0;\n      }\n\n      // Apply crop transformation.\n      // Make sure to use relative dimension since the crop will be applied\n      // on the source image.\n      this.imager.applyTransformation(new Crop({\n        top: top / image.getHeight(),\n        left: left / image.getWidth(),\n        width: width / image.getWidth(),\n        height: height / image.getHeight(),\n      }));\n    },\n\n    // Test wether crop zone is set\n    hasFocus: function() {\n      return this.cropZone !== undefined;\n    },\n\n    // Create the crop zone\n    requireFocus: function() {\n      this.cropZone = new CropZone({\n        fill: 'transparent',\n        hasBorders: false,\n        originX: 'left',\n        originY: 'top',\n        //stroke: '#444',\n        //strokeDashArray: [5, 5],\n        //borderColor: '#444',\n        cornerColor: '#444',\n        cornerSize: 8,\n        transparentCorners: false,\n        lockRotation: true,\n        hasRotatingPoint: false,\n      });\n\n      if (null !== this.options.ratio) {\n        this.cropZone.set('lockUniScaling', true);\n      }\n\n      this.imager.canvas.add(this.cropZone);\n      this.imager.canvas.defaultCursor = 'crosshair';\n\n      this.cropButton.active(true);\n      this.okButton.hide(false);\n      this.cancelButton.hide(false);\n    },\n\n    // Remove the crop zone\n    releaseFocus: function() {\n      if (undefined === this.cropZone)\n        return;\n\n      this.cropZone.remove();\n      this.cropZone = undefined;\n\n      this.cropButton.active(false);\n      this.okButton.hide(true);\n      this.cancelButton.hide(true);\n\n      this.imager.canvas.defaultCursor = 'default';\n\n      this.imager.dispatchEvent('crop:update');\n    },\n\n    _renderCropZone: function(fromX, fromY, toX, toY) {\n      var canvas = this.imager.canvas;\n\n      var isRight = (toX > fromX);\n      var isLeft = !isRight;\n      var isDown = (toY > fromY);\n      var isUp = !isDown;\n\n      var minWidth = Math.min(+this.options.minWidth, canvas.getWidth());\n      var minHeight = Math.min(+this.options.minHeight, canvas.getHeight());\n\n      // Define corner coordinates\n      var leftX = Math.min(fromX, toX);\n      var rightX = Math.max(fromX, toX);\n      var topY = Math.min(fromY, toY);\n      var bottomY = Math.max(fromY, toY);\n\n      // Replace current point into the canvas\n      leftX = Math.max(0, leftX);\n      rightX = Math.min(canvas.getWidth(), rightX);\n      topY = Math.max(0, topY)\n      bottomY = Math.min(canvas.getHeight(), bottomY);\n\n      // Recalibrate coordinates according to given options\n      if (rightX - leftX < minWidth) {\n        if (isRight)\n          rightX = leftX + minWidth;\n        else\n          leftX = rightX - minWidth;\n      }\n      if (bottomY - topY < minHeight) {\n        if (isDown)\n          bottomY = topY + minHeight;\n        else\n          topY = bottomY - minHeight;\n      }\n\n      // Truncate truncate according to canvas dimensions\n      if (leftX < 0) {\n        // Translate to the left\n        rightX += Math.abs(leftX);\n        leftX = 0\n      }\n      if (rightX > canvas.getWidth()) {\n        // Translate to the right\n        leftX -= (rightX - canvas.getWidth());\n        rightX = canvas.getWidth();\n      }\n      if (topY < 0) {\n        // Translate to the bottom\n        bottomY += Math.abs(topY);\n        topY = 0\n      }\n      if (bottomY > canvas.getHeight()) {\n        // Translate to the right\n        topY -= (bottomY - canvas.getHeight());\n        bottomY = canvas.getHeight();\n      }\n\n      var width = rightX - leftX;\n      var height = bottomY - topY;\n      var currentRatio = width / height;\n\n      if (this.options.ratio && +this.options.ratio !== currentRatio) {\n        var ratio = +this.options.ratio;\n\n        if(this.isKeyCroping) {\n          isLeft = this.isKeyLeft;\n          isUp = this.isKeyUp;\n        }\n\n        if (currentRatio < ratio) {\n          var newWidth = height * ratio;\n          if (isLeft) {\n            leftX -= (newWidth - width);\n          }\n          width = newWidth;\n        } else if (currentRatio > ratio) {\n          var newHeight = height / (ratio * height/width);\n          if (isUp) {\n            topY -= (newHeight - height);\n          }\n          height = newHeight;\n        }\n\n        if (leftX < 0) {\n          leftX = 0;\n          //TODO\n        }\n        if (topY < 0) {\n          topY = 0;\n          //TODO\n        }\n        if (leftX + width > canvas.getWidth()) {\n          var newWidth = canvas.getWidth() - leftX;\n          height = newWidth * height / width;\n          width = newWidth;\n          if (isUp) {\n            topY = fromY - height;\n          }\n        }\n        if (topY + height > canvas.getHeight()) {\n          var newHeight = canvas.getHeight() - topY;\n          width = width * newHeight / height;\n          height = newHeight;\n          if (isLeft) {\n            leftX = fromX - width;\n          }\n        }\n      }\n\n      // Apply coordinates\n      this.cropZone.left = leftX;\n      this.cropZone.top = topY;\n      this.cropZone.width = width;\n      this.cropZone.height = height;\n\n      this.imager.canvas.bringToFront(this.cropZone);\n\n      this.imager.dispatchEvent('crop:update');\n    }\n  });\n\n  var pluginInfo = {\n    name : \"crop\",\n    ctor : CropPlugin\n  };\n\n  Imager.installPlugin(pluginInfo);\n\n  return pluginInfo;\n\n});\n\ndefine('skylark-ui-imager/plugins/rotate',[\n  \"skylark-langx/langx\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/query\",\n  \"skylark-utils-canvas2d\",\n  '../Imager',\n],function(langx,noder, $, canvas2d,Imager) {\n  'use strict';\n\nvar Rotation = Imager.Transformation.inherit({\n\n  applyTransformation: function(canvas, image, next) {\n    var angle = (image.getAngle() + this.options.angle) % 360;\n    image.rotate(angle);\n\n    var width, height;\n    height = Math.abs(image.getWidth()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getHeight()*(Math.cos(angle*Math.PI/180)));\n    width = Math.abs(image.getHeight()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getWidth()*(Math.cos(angle*Math.PI/180)));\n\n    canvas.setWidth(width);\n    canvas.setHeight(height);\n\n    canvas.centerObject(image);\n    image.setCoords();\n    canvas.renderAll();\n\n    next();\n  }\n});\n\n\n  var RotatePlugin = Imager.Plugin.inherit({\n    init: function(imager,options) {\n      this.overrided(imager,options);\n      var buttonGroup = this.imager.toolbar.createButtonGroup();\n\n      var leftButton = buttonGroup.createButton({\n        image: 'rotate-left'\n      });\n\n      var rightButton = buttonGroup.createButton({\n        image: 'rotate-right'\n      });\n\n      leftButton.addEventListener('click', this.rotateLeft.bind(this));\n      rightButton.addEventListener('click', this.rotateRight.bind(this));\n    },\n\n    rotateLeft: function() {\n      this.rotate(-90);\n    },\n\n    rotateRight: function() {\n      this.rotate(90);\n    },\n\n    rotate: function rotate(angle) {\n      this.imager.applyTransformation(\n        new Rotation({angle: angle})\n      );\n    }\n  });\n\n  var pluginInfo = {\n    name : \"rotate\",\n    ctor : RotatePlugin\n  };\n\n  Imager.installPlugin(pluginInfo);\n\n  return pluginInfo;\n\n});\n\ndefine('skylark-ui-imager/plugins/save',[\n  \"skylark-langx/langx\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/query\",\n  \"skylark-utils-canvas2d\",\n  '../Imager',\n],function(langx,noder, $, canvas2d,Imager) {\n  'use strict';\n\n  var SavePlugin= Imager.Plugin.inherit({\n\n    defaults: {\n      callback: function() {\n        this.imager.selfDestroy();\n      }\n    },\n\n    init: function(imager,options) {\n      this.overrided(imager,options);\n\n      var buttonGroup = this.imager.toolbar.createButtonGroup();\n\n      this.destroyButton = buttonGroup.createButton({\n        image: 'save'\n      });\n\n      this.destroyButton.addEventListener('click', this.options.callback.bind(this));\n    },\n  });\n\n  var pluginInfo = {\n    name : \"save\",\n    ctor : SavePlugin\n  };\n\n  Imager.installPlugin(pluginInfo);\n\n  return pluginInfo;  \n\n});\n\ndefine('skylark-ui-imager/main',[\r\n    \"./Imager\",\r\n    \"./plugins/history\",\r\n    \"./plugins/crop\",\r\n    \"./plugins/rotate\",\r\n    \"./plugins/save\"\r\n], function(Imager) {\r\n    return Imager;\r\n})\r\n;\ndefine('skylark-ui-imager', ['skylark-ui-imager/main'], function (main) { return main; });\n\n"]}