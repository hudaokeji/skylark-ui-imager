{"version":3,"sources":["Imager.js"],"names":["define","skylark","langx","noder","finder","widgets","canvas2d","UI","computeImageViewPort","image","height","Math","abs","getWidth","sin","getAngle","PI","getHeight","cos","width","Toolbar","element","this","ButtonGroup","Button","ui","Plugins","prototype","createButtonGroup","options","buttonGroup","document","createElement","className","appendChild","createButton","defaults","type","group","hide","disabled","mixin","buttonElement","innerHTML","button","disable","addEventListener","eventName","listener","attachEvent","removeEventListener","active","value","classList","add","remove","Imager","Widget","inherit","klassName","init","el","plugins","find","_initializeDOM","overrided","containerElement","_initializeImage","_initializePlugins","refresh","initialize","bind","call","canvas","sourceCanvas","sourceImage","originalImageElement","transformations","minWidth","minHeight","maxWidth","maxHeight","ratio","backgroundColor","selfDestroy","container","Image","onload","parentNode","replaceChild","src","toDataURL","callback","getElement","dispatchEvent","event","createEvent","initEvent","next","clone","_replaceCurrentImage","newImage","selectable","viewport","canvasWidth","canvasHeight","canvasRatio","currentRatio","scaleMin","scaleMax","scaleX","scaleY","min","max","scale","setScaleX","setScaleY","setWidth","setHeight","centerObject","setCoords","applyTransformation","transformation","push","_postTransformation","reinitializeImage","_popTransformation","slice","length","shift","imageElement","mainContainerElement","toolbarElement","canvasContainerElement","canvasElement","sourceCanvasContainerElement","style","display","sourceCanvasElement","toolbar","Canvas","selection","evented","lockMovementX","lockMovementY","lockRotation","lockScalingX","lockScalingY","lockUniScaling","hasControls","hasBorders","name","pluginInfo","hasOwnProperty","ctor","Plugin","Evented","imager","Transformation","installPlugin","setting"],"mappings":"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","file":"../Imager.js","sourcesContent":["define([\n    \"skylark-langx/skylark\",\n    \"skylark-langx/langx\",\n    \"skylark-utils/noder\",\n    \"skylark-utils/finder\",\n    \"skylark-utils/widgets\",\n    \"skylark-utils-canvas2d\",\n], function(skylark, langx, noder,finder,widgets,canvas2d,UI) {\n  'use strict';\n\n  var ui = skylark.ui = skylark.ui || {};\n\n  var Plugins = {};\n\n  function computeImageViewPort(image) {\n    //return {\n    //  height : image.height,\n    //  width : image.width\n    //};\n    return {\n      height: Math.abs(image.getWidth() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getHeight() * (Math.cos(image.getAngle() * Math.PI/180))),\n      width: Math.abs(image.getHeight() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getWidth() * (Math.cos(image.getAngle() * Math.PI/180))),\n    }\n  }\n\n // Toolbar object.\n  function Toolbar(element) {\n    this.element = element;\n  }\n\n  Toolbar.prototype = {\n    createButtonGroup: function(options) {\n      var buttonGroup = document.createElement('div');\n      buttonGroup.className = 'darkroom-button-group';\n      this.element.appendChild(buttonGroup);\n\n      return new ButtonGroup(buttonGroup);\n    }\n  };\n\n  // ButtonGroup object.\n  function ButtonGroup(element) {\n    this.element = element;\n  }\n\n  ButtonGroup.prototype = {\n    createButton: function(options) {\n      var defaults = {\n        image: 'help',\n        type: 'default',\n        group: 'default',\n        hide: false,\n        disabled: false\n      };\n\n      options = langx.mixin({},defaults,options);\n\n      var buttonElement = document.createElement('button');\n      buttonElement.type = 'button';\n      buttonElement.className = 'darkroom-button darkroom-button-' + options.type;\n      buttonElement.innerHTML = '<svg class=\"darkroom-icon\"><use xlink:href=\"#' + options.image + '\" /></svg>';\n      this.element.appendChild(buttonElement);\n\n      var button = new Button(buttonElement);\n      button.hide(options.hide);\n      button.disable(options.disabled);\n\n      return button;\n    }\n  }\n\n  // Button object.\n  function Button(element) {\n    this.element = element;\n  }\n\n  Button.prototype = {\n    addEventListener: function(eventName, listener) {\n      if (this.element.addEventListener){\n        this.element.addEventListener(eventName, listener);\n      } else if (this.element.attachEvent) {\n        this.element.attachEvent('on' + eventName, listener);\n      }\n    },\n    removeEventListener: function(eventName, listener) {\n      if (this.element.removeEventListener){\n        this.element.removeEventListener(eventName, listener);\n      }\n    },\n    active: function(value) {\n      if (value)\n        this.element.classList.add('darkroom-button-active');\n      else\n        this.element.classList.remove('darkroom-button-active');\n    },\n    hide: function(value) {\n      if (value)\n        this.element.classList.add('darkroom-button-hidden');\n      else\n        this.element.classList.remove('darkroom-button-hidden');\n    },\n    disable: function(value) {\n      this.element.disabled = (value) ? true : false;\n    }\n  };\n\n  var Imager = widgets.Widget.inherit({\n    klassName : \"Imager\",\n\n    /*\n     * @param {Element} el The container element. \n     */\n    init : function(el,options,plugins) {\n      if (typeof el === 'string') {\n        el = finder.find(el);\n      }\n\n      this._initializeDOM(el);\n      this.overrided(this.containerElement,options);\n      this.options = langx.mixin({}, this.defaults,options);\n\n      // List of the instancied plugins\n      this.plugins = {};\n\n//      var image = new Image();\n//      image.onload = function() {\n        // Initialize the DOM/canvas2d elements\n        this._initializeImage();\n\n        // Then initialize the plugins\n        this._initializePlugins();\n\n        // Public method to adjust image according to the canvas\n        this.refresh(function() {\n          // Execute a custom callback after initialization\n          this.options.initialize.bind(this).call();\n        }.bind(this));\n\n  //    }.bind(this)\n\n      //image.crossOrigin = 'anonymous';\n      //image.src = el.src;\n    },\n\n    // Reference to the main container element\n    containerElement: null,\n\n    // Reference to the canvas2d canvas object\n    canvas: null,\n\n    // Reference to the canvas2d image object\n    image: null,\n\n    // Reference to the canvas2d source canvas object\n    sourceCanvas: null,\n\n    // Reference to the canvas2d source image object\n    sourceImage: null,\n\n    // Track of the original image element\n    originalImageElement: null,\n\n    // Stack of transformations to apply to the image source\n    transformations: [],\n\n    // Default options\n    defaults: {\n      // Canvas properties (dimension, ratio, color)\n      minWidth: null,\n      minHeight: null,\n      maxWidth: null,\n      maxHeight: null,\n      ratio: null,\n      backgroundColor: '#fff',\n\n      // Plugins options\n      plugins: {},\n\n      // Post-initialisation callback\n      initialize: function() { /* noop */ }\n    },\n\n\n\n    selfDestroy: function() {\n      var container = this.containerElement;\n      var image = new Image();\n      image.onload = function() {\n        container.parentNode.replaceChild(image, container);\n      }\n\n      image.src = this.sourceImage.toDataURL();\n    },\n\n    // Add ability to attach event listener on the core object.\n    // It uses the canvas element to process events.\n    addEventListener: function(eventName, callback) {\n      var el = this.canvas.getElement();\n      if (el.addEventListener){\n        el.addEventListener(eventName, callback);\n      } else if (el.attachEvent) {\n        el.attachEvent('on' + eventName, callback);\n      }\n    },\n\n    dispatchEvent: function(eventName) {\n      // Use the old way of creating event to be IE compatible\n      // See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\n      var event = document.createEvent('Event');\n      event.initEvent(eventName, true, true);\n\n      this.canvas.getElement().dispatchEvent(event);\n    },\n\n    // Adjust image & canvas dimension according to min/max width/height\n    // and ratio specified in the options.\n    // This method should be called after each image transformation.\n    refresh: function(next) {\n      var clone = new Image();\n      clone.onload = function() {\n        this._replaceCurrentImage(new canvas2d.Image(clone));\n\n        if (next) next();\n      }.bind(this);\n      clone.src = this.sourceImage.toDataURL();\n    },\n\n    _replaceCurrentImage: function(newImage) {\n      if (this.image) {\n        this.image.remove();\n      }\n\n      this.image = newImage;\n      this.image.selectable = false;\n\n      // Adjust width or height according to specified ratio\n      var viewport = computeImageViewPort(this.image);\n      var canvasWidth = viewport.width;\n      var canvasHeight = viewport.height;\n\n      if (null !== this.options.ratio) {\n        var canvasRatio = +this.options.ratio;\n        var currentRatio = canvasWidth / canvasHeight;\n\n        if (currentRatio > canvasRatio) {\n          canvasHeight = canvasWidth / canvasRatio;\n        } else if (currentRatio < canvasRatio) {\n          canvasWidth = canvasHeight * canvasRatio;\n        }\n      }\n\n      // Then scale the image to fit into dimension limits\n      var scaleMin = 1;\n      var scaleMax = 1;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (null !== this.options.maxWidth && this.options.maxWidth < canvasWidth) {\n        scaleX =  this.options.maxWidth / canvasWidth;\n      }\n      if (null !== this.options.maxHeight && this.options.maxHeight < canvasHeight) {\n        scaleY =  this.options.maxHeight / canvasHeight;\n      }\n      scaleMin = Math.min(scaleX, scaleY);\n\n      scaleX = 1;\n      scaleY = 1;\n      if (null !== this.options.minWidth && this.options.minWidth > canvasWidth) {\n        scaleX =  this.options.minWidth / canvasWidth;\n      }\n      if (null !== this.options.minHeight && this.options.minHeight > canvasHeight) {\n        scaleY =  this.options.minHeight / canvasHeight;\n      }\n      scaleMax = Math.max(scaleX, scaleY);\n\n      var scale = scaleMax * scaleMin; // one should be equals to 1\n\n      canvasWidth *= scale;\n      canvasHeight *= scale;\n\n      // Finally place the image in the center of the canvas\n      this.image.setScaleX(1 * scale);\n      this.image.setScaleY(1 * scale);\n      this.canvas.add(this.image);\n      this.canvas.setWidth(canvasWidth);\n      this.canvas.setHeight(canvasHeight);\n      this.canvas.centerObject(this.image);\n      this.image.setCoords();\n    },\n\n    // Apply the transformation on the current image and save it in the\n    // transformations stack (in order to reconstitute the previous states\n    // of the image).\n    applyTransformation: function(transformation) {\n      this.transformations.push(transformation);\n\n      transformation.applyTransformation(\n        this.sourceCanvas,\n        this.sourceImage,\n        this._postTransformation.bind(this)\n      );\n    },\n\n    _postTransformation: function(newImage) {\n      if (newImage)\n        this.sourceImage = newImage;\n\n      this.refresh(function() {\n        this.dispatchEvent('core:transformation');\n      }.bind(this));\n    },\n\n    // Initialize image from original element plus re-apply every\n    // transformations.\n    reinitializeImage: function() {\n      this.sourceImage.remove();\n      this._initializeImage();\n      this._popTransformation(this.transformations.slice())\n    },\n\n    _popTransformation: function(transformations) {\n      if (0 === transformations.length) {\n        this.dispatchEvent('core:reinitialized');\n        this.refresh();\n        return;\n      }\n\n      var transformation = transformations.shift();\n\n      var next = function(newImage) {\n        if (newImage) this.sourceImage = newImage;\n        this._popTransformation(transformations)\n      };\n\n      transformation.applyTransformation(\n        this.sourceCanvas,\n        this.sourceImage,\n        next.bind(this)\n      );\n    },\n\n    // Create the DOM elements and instanciate the canvas2d canvas.\n    // The image element is replaced by a new `div` element.\n    // However the original image is re-injected in order to keep a trace of it.\n    _initializeDOM: function(imageElement) {\n      // Container\n      var mainContainerElement = document.createElement('div');\n      mainContainerElement.className = 'darkroom-container';\n\n      // Toolbar\n      var toolbarElement = document.createElement('div');\n      toolbarElement.className = 'darkroom-toolbar';\n      mainContainerElement.appendChild(toolbarElement);\n\n      // Viewport canvas\n      var canvasContainerElement = document.createElement('div');\n      canvasContainerElement.className = 'darkroom-image-container';\n      var canvasElement = this.canvasElement = document.createElement('canvas');\n      canvasContainerElement.appendChild(canvasElement);\n      mainContainerElement.appendChild(canvasContainerElement);\n\n      // Source canvas\n      var sourceCanvasContainerElement = document.createElement('div');\n      sourceCanvasContainerElement.className = 'darkroom-source-container';\n      sourceCanvasContainerElement.style.display = 'none';\n      var sourceCanvasElement = this.sourceCanvasElement = document.createElement('canvas');\n      sourceCanvasContainerElement.appendChild(sourceCanvasElement);\n      mainContainerElement.appendChild(sourceCanvasContainerElement);\n\n      // Original image\n      imageElement.parentNode.replaceChild(mainContainerElement, imageElement);\n      imageElement.style.display = 'none';\n      mainContainerElement.appendChild(imageElement);\n\n      // Instanciate object from elements\n      this.containerElement = mainContainerElement;\n      this.originalImageElement = imageElement;\n\n      this.toolbar = new Toolbar(toolbarElement);\n\n    },\n\n    // Instanciate the canvas2d image object.\n    // The image is created as a static element with no control,\n    // then it is add in the canvas2d canvas object.\n    _initializeImage: function() {\n      this.canvas = new canvas2d.Canvas(this.canvasElement, {\n        selection: false,\n        backgroundColor: this.options.backgroundColor\n      });\n\n      this.sourceCanvas = new canvas2d.Canvas(this.sourceCanvasElement, {\n        selection: false,\n        backgroundColor: this.options.backgroundColor\n      });\n \n      this.sourceImage = new canvas2d.Image(this.originalImageElement, {\n        // Some options to make the image static\n        selectable: false,\n        evented: false,\n        lockMovementX: true,\n        lockMovementY: true,\n        lockRotation: true,\n        lockScalingX: true,\n        lockScalingY: true,\n        lockUniScaling: true,\n        hasControls: false,\n        hasBorders: false,\n      });\n\n      this.sourceCanvas.add(this.sourceImage);\n\n      // Adjust width or height according to specified ratio\n      var viewport = computeImageViewPort(this.sourceImage);\n      var canvasWidth = viewport.width;\n      var canvasHeight = viewport.height;\n\n      this.sourceCanvas.setWidth(canvasWidth);\n      this.sourceCanvas.setHeight(canvasHeight);\n      this.sourceCanvas.centerObject(this.sourceImage);\n      this.sourceImage.setCoords();\n    },\n\n    // Initialize every plugins.\n    // Note that plugins are instanciated in the same order than they\n    // are declared in the parameter object.\n    _initializePlugins: function() {\n      for (var name in Plugins) {\n        var pluginInfo = Plugins[name];\n        var options = this.options.plugins[name];\n\n        // Setting false into the plugin options will disable the plugin\n        if (options === false)\n          continue;\n\n        // Avoid any issues with _proto_\n        if (!Plugins.hasOwnProperty(name))\n          continue;\n\n        this.plugins[name] = new pluginInfo.ctor(this, options);\n      }\n    }\n\n  });\n\n\n  Imager.Plugin = langx.Evented.inherit({\n    klassName : \"Plugin\",\n\n    defaults: {},\n\n    init : function(imager,options) {\n      this.imager = imager;\n      this.options = langx.mixin({},this.defaults,options);\n\n    }\n  });\n\n\n  Imager.Transformation = langx.Evented.inherit({\n    klassName : \"Transformation\",\n\n    init : function(options) {\n      this.options = options;\n    }\n  });\n\n\n  Imager.installPlugin = function(setting) {\n\n    //Plugins.push(setting);\n    Plugins[setting.name] = setting;\n  };\n\n  return ui.Imager = Imager;\n\n});\n\n"]}