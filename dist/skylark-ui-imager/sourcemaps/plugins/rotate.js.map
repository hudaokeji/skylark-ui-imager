{"version":3,"sources":["plugins/rotate.js"],"names":["define","langx","noder","$","canvas2d","Imager","Rotation","Transformation","inherit","applyTransformation","canvas","image","next","angle","getAngle","this","options","rotate","width","height","Math","abs","getWidth","sin","PI","getHeight","cos","setWidth","setHeight","centerObject","setCoords","renderAll","RotatePlugin","Plugin","init","imager","overrided","buttonGroup","toolbar","createButtonGroup","leftButton","createButton","rightButton","addEventListener","rotateLeft","bind","rotateRight","pluginInfo","name","ctor","installPlugin"],"mappings":";;;;;;;AAAAA,QACE,sBACA,sBACA,sBACA,yBACA,aACA,SAASC,EAAMC,EAAOC,EAAGC,EAASC,GAClC,YAEF,IAAIC,GAAWD,EAAOE,eAAeC,SAEnCC,oBAAqB,SAASC,EAAQC,EAAOC,GAC3C,GAAIC,IAASF,EAAMG,WAAaC,KAAKC,QAAQH,OAAS,GACtDF,GAAMM,OAAOJ,EAEb,IAAIK,GAAOC,CACXA,GAASC,KAAKC,IAAIV,EAAMW,WAAYF,KAAKG,IAAIV,EAAMO,KAAKI,GAAG,MAAOJ,KAAKC,IAAIV,EAAMc,YAAaL,KAAKM,IAAIb,EAAMO,KAAKI,GAAG,MACrHN,EAAQE,KAAKC,IAAIV,EAAMc,YAAaL,KAAKG,IAAIV,EAAMO,KAAKI,GAAG,MAAOJ,KAAKC,IAAIV,EAAMW,WAAYF,KAAKM,IAAIb,EAAMO,KAAKI,GAAG,MAEpHd,EAAOiB,SAAST,GAChBR,EAAOkB,UAAUT,GAEjBT,EAAOmB,aAAalB,GACpBA,EAAMmB,YACNpB,EAAOqB,YAEPnB,OAKEoB,EAAe3B,EAAO4B,OAAOzB,SAC/B0B,KAAM,SAASC,EAAOnB,GACpBD,KAAKqB,UAAUD,EAAOnB,EACtB,IAAIqB,GAActB,KAAKoB,OAAOG,QAAQC,oBAElCC,EAAaH,EAAYI,cAC3B9B,MAAO,gBAGL+B,EAAcL,EAAYI,cAC5B9B,MAAO,gBAGT6B,GAAWG,iBAAiB,QAAS5B,KAAK6B,WAAWC,KAAK9B,OAC1D2B,EAAYC,iBAAiB,QAAS5B,KAAK+B,YAAYD,KAAK9B,QAG9D6B,WAAY,WACV7B,KAAKE,aAGP6B,YAAa,WACX/B,KAAKE,OAAO,KAGdA,OAAQ,SAAgBJ,GACtBE,KAAKoB,OAAO1B,oBACV,GAAIH,IAAUO,MAAOA,QAKvBkC,GACFC,KAAO,SACPC,KAAOjB,EAKT,OAFA3B,GAAO6C,cAAcH,GAEdA","file":"../../plugins/rotate.js","sourcesContent":["define([\n  \"skylark-langx/langx\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/query\",\n  \"skylark-utils-canvas2d\",\n  '../Imager',\n],function(langx,noder, $, canvas2d,Imager) {\n  'use strict';\n\nvar Rotation = Imager.Transformation.inherit({\n\n  applyTransformation: function(canvas, image, next) {\n    var angle = (image.getAngle() + this.options.angle) % 360;\n    image.rotate(angle);\n\n    var width, height;\n    height = Math.abs(image.getWidth()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getHeight()*(Math.cos(angle*Math.PI/180)));\n    width = Math.abs(image.getHeight()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getWidth()*(Math.cos(angle*Math.PI/180)));\n\n    canvas.setWidth(width);\n    canvas.setHeight(height);\n\n    canvas.centerObject(image);\n    image.setCoords();\n    canvas.renderAll();\n\n    next();\n  }\n});\n\n\n  var RotatePlugin = Imager.Plugin.inherit({\n    init: function(imager,options) {\n      this.overrided(imager,options);\n      var buttonGroup = this.imager.toolbar.createButtonGroup();\n\n      var leftButton = buttonGroup.createButton({\n        image: 'rotate-left'\n      });\n\n      var rightButton = buttonGroup.createButton({\n        image: 'rotate-right'\n      });\n\n      leftButton.addEventListener('click', this.rotateLeft.bind(this));\n      rightButton.addEventListener('click', this.rotateRight.bind(this));\n    },\n\n    rotateLeft: function() {\n      this.rotate(-90);\n    },\n\n    rotateRight: function() {\n      this.rotate(90);\n    },\n\n    rotate: function rotate(angle) {\n      this.imager.applyTransformation(\n        new Rotation({angle: angle})\n      );\n    }\n  });\n\n  var pluginInfo = {\n    name : \"rotate\",\n    ctor : RotatePlugin\n  };\n\n  Imager.installPlugin(pluginInfo);\n\n  return pluginInfo;\n\n});\n"]}