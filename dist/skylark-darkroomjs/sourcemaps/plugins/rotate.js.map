{"version":3,"sources":["plugins/rotate.js"],"names":["define","langx","noder","$","fabric","Darkroom","Rotation","Transformation","inherit","applyTransformation","canvas","image","next","width","height","angle","this","options","rotate","Math","abs","getScaledWidth","sin","PI","getScaledHeight","cos","setWidth","setHeight","centerObject","setCoords","renderAll","pluginInfo","name","ctor","Plugin","init","overrided","buttonGroup","toolbar","createButtonGroup","leftButton","createButton","rightButton","addEventListener","rotateLeft","bind","rotateRight","installPlugin"],"mappings":";;;;;;;AAAAA,QACE,sBACA,qBACA,qBACA,iBACA,eACA,SAASC,EAAMC,EAAOC,EAAGC,EAAOC,GAChC,aAEF,IAAIC,EAAWD,EAASE,eAAeC,SAErCC,oBAAqB,SAASC,EAAQC,EAAOC,GAC3C,IAGIC,EAAOC,EAHPC,GAASJ,EAAMI,MAAQC,KAAKC,QAAQF,OAAS,IACjDJ,EAAMO,OAAOH,GAGbD,EAASK,KAAKC,IAAIT,EAAMU,iBAAkBF,KAAKG,IAAIP,EAAMI,KAAKI,GAAG,MAAOJ,KAAKC,IAAIT,EAAMa,kBAAmBL,KAAKM,IAAIV,EAAMI,KAAKI,GAAG,MACjIV,EAAQM,KAAKC,IAAIT,EAAMa,kBAAmBL,KAAKG,IAAIP,EAAMI,KAAKI,GAAG,MAAOJ,KAAKC,IAAIT,EAAMU,iBAAkBF,KAAKM,IAAIV,EAAMI,KAAKI,GAAG,MAEhIb,EAAOgB,SAASb,GAChBH,EAAOiB,UAAUb,GAEjBJ,EAAOkB,aAAajB,GACpBA,EAAMkB,YACNnB,EAAOoB,YAEPlB,OAqCEmB,GACFC,KAAO,SACPC,KAlCiB5B,EAAS6B,OAAO1B,SACjC2B,KAAM,SAAS9B,EAASY,GACtBD,KAAKoB,UAAU/B,EAASY,GACxB,IAAIoB,EAAcrB,KAAKX,SAASiC,QAAQC,oBAEpCC,EAAaH,EAAYI,cAC3B9B,MAAO,gBAGL+B,EAAcL,EAAYI,cAC5B9B,MAAO,iBAGT6B,EAAWG,iBAAiB,QAAS3B,KAAK4B,WAAWC,KAAK7B,OAC1D0B,EAAYC,iBAAiB,QAAS3B,KAAK8B,YAAYD,KAAK7B,QAG9D4B,WAAY,WACV5B,KAAKE,QAAQ,KAGf4B,YAAa,WACX9B,KAAKE,OAAO,KAGdA,OAAQ,SAAgBH,GACtBC,KAAKX,SAASI,oBACZ,IAAIH,GAAUS,MAAOA,SAY3B,OAFAV,EAAS0C,cAAchB,GAEhBA","file":"../../plugins/rotate.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-fabric\",\r\n  '../Darkroom',\r\n],function(langx,noder, $, fabric,Darkroom) {\r\n  'use strict';\r\n\r\nvar Rotation = Darkroom.Transformation.inherit({\r\n\r\n  applyTransformation: function(canvas, image, next) {\r\n    var angle = (image.angle + this.options.angle) % 360;\r\n    image.rotate(angle);\r\n\r\n    var width, height;\r\n    height = Math.abs(image.getScaledWidth()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getScaledHeight()*(Math.cos(angle*Math.PI/180)));\r\n    width = Math.abs(image.getScaledHeight()*(Math.sin(angle*Math.PI/180)))+Math.abs(image.getScaledWidth()*(Math.cos(angle*Math.PI/180)));\r\n\r\n    canvas.setWidth(width);\r\n    canvas.setHeight(height);\r\n\r\n    canvas.centerObject(image);\r\n    image.setCoords();\r\n    canvas.renderAll();\r\n\r\n    next();\r\n  }\r\n});\r\n\r\n\r\n  var RotatePlugin = Darkroom.Plugin.inherit({\r\n    init: function(Darkroom,options) {\r\n      this.overrided(Darkroom,options);\r\n      var buttonGroup = this.Darkroom.toolbar.createButtonGroup();\r\n\r\n      var leftButton = buttonGroup.createButton({\r\n        image: 'rotate-left'\r\n      });\r\n\r\n      var rightButton = buttonGroup.createButton({\r\n        image: 'rotate-right'\r\n      });\r\n\r\n      leftButton.addEventListener('click', this.rotateLeft.bind(this));\r\n      rightButton.addEventListener('click', this.rotateRight.bind(this));\r\n    },\r\n\r\n    rotateLeft: function() {\r\n      this.rotate(-90);\r\n    },\r\n\r\n    rotateRight: function() {\r\n      this.rotate(90);\r\n    },\r\n\r\n    rotate: function rotate(angle) {\r\n      this.Darkroom.applyTransformation(\r\n        new Rotation({angle: angle})\r\n      );\r\n    }\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"rotate\",\r\n    ctor : RotatePlugin\r\n  };\r\n\r\n  Darkroom.installPlugin(pluginInfo);\r\n\r\n  return pluginInfo;\r\n\r\n});\r\n"]}