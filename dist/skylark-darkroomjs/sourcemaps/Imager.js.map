{"version":3,"sources":["Imager.js"],"names":["define","skylark","langx","noder","finder","Widget","canvas2d","Plugins","computeImageViewPort","image","height","Math","abs","getWidth","sin","getAngle","PI","getHeight","cos","width","Toolbar","element","this","ButtonGroup","Button","prototype","createButtonGroup","options","buttonGroup","document","createElement","className","appendChild","createButton","mixin","type","group","hide","disabled","buttonElement","innerHTML","button","disable","addEventListener","eventName","listener","attachEvent","removeEventListener","active","value","classList","add","remove","Imager","inherit","klassName","_construct","el","plugins","find","_initializeDOM","overrided","containerElement","_initializeImage","_initializePlugins","refresh","initialize","bind","call","canvas","sourceCanvas","sourceImage","originalImageElement","transformations","minWidth","minHeight","maxWidth","maxHeight","ratio","backgroundColor","selfDestroy","container","Image","onload","parentNode","replaceChild","src","toDataURL","callback","getElement","dispatchEvent","event","createEvent","initEvent","next","clone","_replaceCurrentImage","newImage","selectable","viewport","canvasWidth","canvasHeight","canvasRatio","currentRatio","scaleMin","scaleX","scaleY","min","scale","max","setScaleX","setScaleY","setWidth","setHeight","centerObject","setCoords","applyTransformation","transformation","push","_postTransformation","reinitializeImage","_popTransformation","slice","length","shift","imageElement","mainContainerElement","toolbarElement","canvasContainerElement","canvasElement","sourceCanvasContainerElement","style","display","sourceCanvasElement","toolbar","Canvas","selection","evented","lockMovementX","lockMovementY","lockRotation","lockScalingX","lockScalingY","lockUniScaling","hasControls","hasBorders","name","pluginInfo","hasOwnProperty","ctor","Plugin","Evented","defaults","init","imager","Transformation","installPlugin","setting","attach"],"mappings":"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","file":"../Imager.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/finder\",\r\n    \"skylark-ui-swt/Widget\",\r\n    \"skylark-graphics-canvas2d\"\r\n], function(skylark, langx, noder,finder,Widget,canvas2d) {\r\n  'use strict';\r\n\r\n  var Plugins = {};\r\n\r\n  function computeImageViewPort(image) {\r\n    //return {\r\n    //  height : image.height,\r\n    //  width : image.width\r\n    //};\r\n    return {\r\n      height: Math.abs(image.getWidth() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getHeight() * (Math.cos(image.getAngle() * Math.PI/180))),\r\n      width: Math.abs(image.getHeight() * (Math.sin(image.getAngle() * Math.PI/180))) + Math.abs(image.getWidth() * (Math.cos(image.getAngle() * Math.PI/180))),\r\n    }\r\n  }\r\n\r\n // Toolbar object.\r\n  function Toolbar(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  Toolbar.prototype = {\r\n    createButtonGroup: function(options) {\r\n      var buttonGroup = document.createElement('div');\r\n      buttonGroup.className = 'darkroom-button-group';\r\n      this.element.appendChild(buttonGroup);\r\n\r\n      return new ButtonGroup(buttonGroup);\r\n    }\r\n  };\r\n\r\n  // ButtonGroup object.\r\n  function ButtonGroup(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  ButtonGroup.prototype = {\r\n    createButton: function(options) {\r\n      var defaults = {\r\n        image: 'help',\r\n        type: 'default',\r\n        group: 'default',\r\n        hide: false,\r\n        disabled: false\r\n      };\r\n\r\n      options = langx.mixin({},defaults,options);\r\n\r\n      var buttonElement = document.createElement('button');\r\n      buttonElement.type = 'button';\r\n      buttonElement.className = 'darkroom-button darkroom-button-' + options.type;\r\n      buttonElement.innerHTML = '<svg class=\"darkroom-icon\"><use xlink:href=\"#' + options.image + '\" /></svg>';\r\n      this.element.appendChild(buttonElement);\r\n\r\n      var button = new Button(buttonElement);\r\n      button.hide(options.hide);\r\n      button.disable(options.disabled);\r\n\r\n      return button;\r\n    }\r\n  }\r\n\r\n  // Button object.\r\n  function Button(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  Button.prototype = {\r\n    addEventListener: function(eventName, listener) {\r\n      if (this.element.addEventListener){\r\n        this.element.addEventListener(eventName, listener);\r\n      } else if (this.element.attachEvent) {\r\n        this.element.attachEvent('on' + eventName, listener);\r\n      }\r\n    },\r\n    removeEventListener: function(eventName, listener) {\r\n      if (this.element.removeEventListener){\r\n        this.element.removeEventListener(eventName, listener);\r\n      }\r\n    },\r\n    active: function(value) {\r\n      if (value)\r\n        this.element.classList.add('darkroom-button-active');\r\n      else\r\n        this.element.classList.remove('darkroom-button-active');\r\n    },\r\n    hide: function(value) {\r\n      if (value)\r\n        this.element.classList.add('darkroom-button-hidden');\r\n      else\r\n        this.element.classList.remove('darkroom-button-hidden');\r\n    },\r\n    disable: function(value) {\r\n      this.element.disabled = (value) ? true : false;\r\n    }\r\n  };\r\n\r\n  var Imager = Widget.inherit({\r\n    klassName : \"Imager\",\r\n\r\n    /*\r\n     * @param {Element} el The container element. \r\n     */\r\n    _construct : function(el,options,plugins) {\r\n      if (typeof el === 'string') {\r\n        el = finder.find(el);\r\n      }\r\n\r\n      this._initializeDOM(el);\r\n      this.overrided(this.containerElement,options);\r\n      //this.options = langx.mixin({}, this.defaults,options);\r\n\r\n      // List of the instancied plugins\r\n      this.plugins = {};\r\n\r\n//      var image = new Image();\r\n//      image.onload = function() {\r\n        // Initialize the DOM/canvas2d elements\r\n        this._initializeImage();\r\n\r\n        // Then initialize the plugins\r\n        this._initializePlugins();\r\n\r\n        // Public method to adjust image according to the canvas\r\n        this.refresh(function() {\r\n          // Execute a custom callback after initialization\r\n          this.options.initialize.bind(this).call();\r\n        }.bind(this));\r\n\r\n  //    }.bind(this)\r\n\r\n      //image.crossOrigin = 'anonymous';\r\n      //image.src = el.src;\r\n    },\r\n\r\n    // Reference to the main container element\r\n    containerElement: null,\r\n\r\n    // Reference to the canvas2d canvas object\r\n    canvas: null,\r\n\r\n    // Reference to the canvas2d image object\r\n    image: null,\r\n\r\n    // Reference to the canvas2d source canvas object\r\n    sourceCanvas: null,\r\n\r\n    // Reference to the canvas2d source image object\r\n    sourceImage: null,\r\n\r\n    // Track of the original image element\r\n    originalImageElement: null,\r\n\r\n    // Stack of transformations to apply to the image source\r\n    transformations: [],\r\n\r\n    // Default options\r\n    options: {\r\n      // Canvas properties (dimension, ratio, color)\r\n      minWidth: null,\r\n      minHeight: null,\r\n      maxWidth: null,\r\n      maxHeight: null,\r\n      ratio: null,\r\n      backgroundColor: '#fff',\r\n\r\n      // Plugins options\r\n      plugins: {},\r\n\r\n      // Post-initialisation callback\r\n      initialize: function() { /* noop */ }\r\n    },\r\n\r\n\r\n\r\n    selfDestroy: function() {\r\n      var container = this.containerElement;\r\n      var image = new Image();\r\n      image.onload = function() {\r\n        container.parentNode.replaceChild(image, container);\r\n      }\r\n\r\n      image.src = this.sourceImage.toDataURL();\r\n    },\r\n\r\n    // Add ability to attach event listener on the core object.\r\n    // It uses the canvas element to process events.\r\n    addEventListener: function(eventName, callback) {\r\n      var el = this.canvas.getElement();\r\n      if (el.addEventListener){\r\n        el.addEventListener(eventName, callback);\r\n      } else if (el.attachEvent) {\r\n        el.attachEvent('on' + eventName, callback);\r\n      }\r\n    },\r\n\r\n    dispatchEvent: function(eventName) {\r\n      // Use the old way of creating event to be IE compatible\r\n      // See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\r\n      var event = document.createEvent('Event');\r\n      event.initEvent(eventName, true, true);\r\n\r\n      this.canvas.getElement().dispatchEvent(event);\r\n    },\r\n\r\n    // Adjust image & canvas dimension according to min/max width/height\r\n    // and ratio specified in the options.\r\n    // This method should be called after each image transformation.\r\n    refresh: function(next) {\r\n      var clone = new Image();\r\n      clone.onload = function() {\r\n        this._replaceCurrentImage(new canvas2d.Image(clone));\r\n\r\n        if (next) next();\r\n      }.bind(this);\r\n      clone.src = this.sourceImage.toDataURL();\r\n    },\r\n\r\n    _replaceCurrentImage: function(newImage) {\r\n      if (this.image) {\r\n        this.image.remove();\r\n      }\r\n\r\n      this.image = newImage;\r\n      this.image.selectable = false;\r\n\r\n      // Adjust width or height according to specified ratio\r\n      var viewport = computeImageViewPort(this.image);\r\n      var canvasWidth = viewport.width;\r\n      var canvasHeight = viewport.height;\r\n\r\n      if (null !== this.options.ratio) {\r\n        var canvasRatio = +this.options.ratio;\r\n        var currentRatio = canvasWidth / canvasHeight;\r\n\r\n        if (currentRatio > canvasRatio) {\r\n          canvasHeight = canvasWidth / canvasRatio;\r\n        } else if (currentRatio < canvasRatio) {\r\n          canvasWidth = canvasHeight * canvasRatio;\r\n        }\r\n      }\r\n\r\n      // Then scale the image to fit into dimension limits\r\n      var scaleMin = 1;\r\n      var scaleMax = 1;\r\n      var scaleX = 1;\r\n      var scaleY = 1;\r\n\r\n      if (null !== this.options.maxWidth && this.options.maxWidth < canvasWidth) {\r\n        scaleX =  this.options.maxWidth / canvasWidth;\r\n      }\r\n      if (null !== this.options.maxHeight && this.options.maxHeight < canvasHeight) {\r\n        scaleY =  this.options.maxHeight / canvasHeight;\r\n      }\r\n      scaleMin = Math.min(scaleX, scaleY);\r\n\r\n      scaleX = 1;\r\n      scaleY = 1;\r\n      if (null !== this.options.minWidth && this.options.minWidth > canvasWidth) {\r\n        scaleX =  this.options.minWidth / canvasWidth;\r\n      }\r\n      if (null !== this.options.minHeight && this.options.minHeight > canvasHeight) {\r\n        scaleY =  this.options.minHeight / canvasHeight;\r\n      }\r\n      scaleMax = Math.max(scaleX, scaleY);\r\n\r\n      var scale = scaleMax * scaleMin; // one should be equals to 1\r\n\r\n      canvasWidth *= scale;\r\n      canvasHeight *= scale;\r\n\r\n      // Finally place the image in the center of the canvas\r\n      this.image.setScaleX(1 * scale);\r\n      this.image.setScaleY(1 * scale);\r\n      this.canvas.add(this.image);\r\n      this.canvas.setWidth(canvasWidth);\r\n      this.canvas.setHeight(canvasHeight);\r\n      this.canvas.centerObject(this.image);\r\n      this.image.setCoords();\r\n    },\r\n\r\n    // Apply the transformation on the current image and save it in the\r\n    // transformations stack (in order to reconstitute the previous states\r\n    // of the image).\r\n    applyTransformation: function(transformation) {\r\n      this.transformations.push(transformation);\r\n\r\n      transformation.applyTransformation(\r\n        this.sourceCanvas,\r\n        this.sourceImage,\r\n        this._postTransformation.bind(this)\r\n      );\r\n    },\r\n\r\n    _postTransformation: function(newImage) {\r\n      if (newImage)\r\n        this.sourceImage = newImage;\r\n\r\n      this.refresh(function() {\r\n        this.dispatchEvent('core:transformation');\r\n      }.bind(this));\r\n    },\r\n\r\n    // Initialize image from original element plus re-apply every\r\n    // transformations.\r\n    reinitializeImage: function() {\r\n      this.sourceImage.remove();\r\n      this._initializeImage();\r\n      this._popTransformation(this.transformations.slice())\r\n    },\r\n\r\n    _popTransformation: function(transformations) {\r\n      if (0 === transformations.length) {\r\n        this.dispatchEvent('core:reinitialized');\r\n        this.refresh();\r\n        return;\r\n      }\r\n\r\n      var transformation = transformations.shift();\r\n\r\n      var next = function(newImage) {\r\n        if (newImage) this.sourceImage = newImage;\r\n        this._popTransformation(transformations)\r\n      };\r\n\r\n      transformation.applyTransformation(\r\n        this.sourceCanvas,\r\n        this.sourceImage,\r\n        next.bind(this)\r\n      );\r\n    },\r\n\r\n    // Create the DOM elements and instanciate the canvas2d canvas.\r\n    // The image element is replaced by a new `div` element.\r\n    // However the original image is re-injected in order to keep a trace of it.\r\n    _initializeDOM: function(imageElement) {\r\n      // Container\r\n      var mainContainerElement = document.createElement('div');\r\n      mainContainerElement.className = 'darkroom-container';\r\n\r\n      // Toolbar\r\n      var toolbarElement = document.createElement('div');\r\n      toolbarElement.className = 'darkroom-toolbar';\r\n      mainContainerElement.appendChild(toolbarElement);\r\n\r\n      // Viewport canvas\r\n      var canvasContainerElement = document.createElement('div');\r\n      canvasContainerElement.className = 'darkroom-image-container';\r\n      var canvasElement = this.canvasElement = document.createElement('canvas');\r\n      canvasContainerElement.appendChild(canvasElement);\r\n      mainContainerElement.appendChild(canvasContainerElement);\r\n\r\n      // Source canvas\r\n      var sourceCanvasContainerElement = document.createElement('div');\r\n      sourceCanvasContainerElement.className = 'darkroom-source-container';\r\n      sourceCanvasContainerElement.style.display = 'none';\r\n      var sourceCanvasElement = this.sourceCanvasElement = document.createElement('canvas');\r\n      sourceCanvasContainerElement.appendChild(sourceCanvasElement);\r\n      mainContainerElement.appendChild(sourceCanvasContainerElement);\r\n\r\n      // Original image\r\n      imageElement.parentNode.replaceChild(mainContainerElement, imageElement);\r\n      imageElement.style.display = 'none';\r\n      mainContainerElement.appendChild(imageElement);\r\n\r\n      // Instanciate object from elements\r\n      this.containerElement = mainContainerElement;\r\n      this.originalImageElement = imageElement;\r\n\r\n      this.toolbar = new Toolbar(toolbarElement);\r\n\r\n    },\r\n\r\n    // Instanciate the canvas2d image object.\r\n    // The image is created as a static element with no control,\r\n    // then it is add in the canvas2d canvas object.\r\n    _initializeImage: function() {\r\n      this.canvas = new canvas2d.Canvas(this.canvasElement, {\r\n        selection: false,\r\n        backgroundColor: this.options.backgroundColor\r\n      });\r\n\r\n      this.sourceCanvas = new canvas2d.Canvas(this.sourceCanvasElement, {\r\n        selection: false,\r\n        backgroundColor: this.options.backgroundColor\r\n      });\r\n \r\n      this.sourceImage = new canvas2d.Image(this.originalImageElement, {\r\n        // Some options to make the image static\r\n        selectable: false,\r\n        evented: false,\r\n        lockMovementX: true,\r\n        lockMovementY: true,\r\n        lockRotation: true,\r\n        lockScalingX: true,\r\n        lockScalingY: true,\r\n        lockUniScaling: true,\r\n        hasControls: false,\r\n        hasBorders: false,\r\n      });\r\n\r\n      this.sourceCanvas.add(this.sourceImage);\r\n\r\n      // Adjust width or height according to specified ratio\r\n      var viewport = computeImageViewPort(this.sourceImage);\r\n      var canvasWidth = viewport.width;\r\n      var canvasHeight = viewport.height;\r\n\r\n      this.sourceCanvas.setWidth(canvasWidth);\r\n      this.sourceCanvas.setHeight(canvasHeight);\r\n      this.sourceCanvas.centerObject(this.sourceImage);\r\n      this.sourceImage.setCoords();\r\n    },\r\n\r\n    // Initialize every plugins.\r\n    // Note that plugins are instanciated in the same order than they\r\n    // are declared in the parameter object.\r\n    _initializePlugins: function() {\r\n      for (var name in Plugins) {\r\n        var pluginInfo = Plugins[name];\r\n        var options = this.options.plugins[name];\r\n\r\n        // Setting false into the plugin options will disable the plugin\r\n        if (options === false)\r\n          continue;\r\n\r\n        // Avoid any issues with _proto_\r\n        if (!Plugins.hasOwnProperty(name))\r\n          continue;\r\n\r\n        this.plugins[name] = new pluginInfo.ctor(this, options);\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n\r\n  Imager.Plugin = langx.Evented.inherit({\r\n    klassName : \"Plugin\",\r\n\r\n    defaults: {},\r\n\r\n    init : function(imager,options) {\r\n      this.imager = imager;\r\n      this.options = langx.mixin({},this.defaults,options);\r\n\r\n    }\r\n  });\r\n\r\n\r\n  Imager.Transformation = langx.Evented.inherit({\r\n    klassName : \"Transformation\",\r\n\r\n    init : function(options) {\r\n      this.options = options;\r\n    }\r\n  });\r\n\r\n\r\n  Imager.installPlugin = function(setting) {\r\n\r\n    //Plugins.push(setting);\r\n    Plugins[setting.name] = setting;\r\n  };\r\n\r\n  return skylark.attach(\"itg.darkroomjs.Imager\",Imager);\r\n\r\n});\r\n\r\n"]}